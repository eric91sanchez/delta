
delta.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00012804  080002a0  080002a0  000102a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001e58  08012aa8  08012aa8  00022aa8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08014900  08014900  00030294  2**0
                  CONTENTS
  4 .ARM          00000008  08014900  08014900  00024900  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08014908  08014908  00030294  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08014908  08014908  00024908  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0801490c  0801490c  0002490c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000294  24000000  08014910  00030000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000009d8  24000298  08014ba4  00030298  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  24000c70  08014ba4  00030c70  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  00030294  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001c172  00000000  00000000  000302c2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000366b  00000000  00000000  0004c434  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001340  00000000  00000000  0004faa0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000011b8  00000000  00000000  00050de0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000395a2  00000000  00000000  00051f98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001e31a  00000000  00000000  0008b53a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    001654dc  00000000  00000000  000a9854  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0020ed30  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000626c  00000000  00000000  0020ed80  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002a0 <__do_global_dtors_aux>:
 80002a0:	b510      	push	{r4, lr}
 80002a2:	4c05      	ldr	r4, [pc, #20]	; (80002b8 <__do_global_dtors_aux+0x18>)
 80002a4:	7823      	ldrb	r3, [r4, #0]
 80002a6:	b933      	cbnz	r3, 80002b6 <__do_global_dtors_aux+0x16>
 80002a8:	4b04      	ldr	r3, [pc, #16]	; (80002bc <__do_global_dtors_aux+0x1c>)
 80002aa:	b113      	cbz	r3, 80002b2 <__do_global_dtors_aux+0x12>
 80002ac:	4804      	ldr	r0, [pc, #16]	; (80002c0 <__do_global_dtors_aux+0x20>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	2301      	movs	r3, #1
 80002b4:	7023      	strb	r3, [r4, #0]
 80002b6:	bd10      	pop	{r4, pc}
 80002b8:	24000298 	.word	0x24000298
 80002bc:	00000000 	.word	0x00000000
 80002c0:	08012a8c 	.word	0x08012a8c

080002c4 <frame_dummy>:
 80002c4:	b508      	push	{r3, lr}
 80002c6:	4b03      	ldr	r3, [pc, #12]	; (80002d4 <frame_dummy+0x10>)
 80002c8:	b11b      	cbz	r3, 80002d2 <frame_dummy+0xe>
 80002ca:	4903      	ldr	r1, [pc, #12]	; (80002d8 <frame_dummy+0x14>)
 80002cc:	4803      	ldr	r0, [pc, #12]	; (80002dc <frame_dummy+0x18>)
 80002ce:	f3af 8000 	nop.w
 80002d2:	bd08      	pop	{r3, pc}
 80002d4:	00000000 	.word	0x00000000
 80002d8:	2400029c 	.word	0x2400029c
 80002dc:	08012a8c 	.word	0x08012a8c

080002e0 <strlen>:
 80002e0:	4603      	mov	r3, r0
 80002e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002e6:	2a00      	cmp	r2, #0
 80002e8:	d1fb      	bne.n	80002e2 <strlen+0x2>
 80002ea:	1a18      	subs	r0, r3, r0
 80002ec:	3801      	subs	r0, #1
 80002ee:	4770      	bx	lr

080002f0 <memchr>:
 80002f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002f4:	2a10      	cmp	r2, #16
 80002f6:	db2b      	blt.n	8000350 <memchr+0x60>
 80002f8:	f010 0f07 	tst.w	r0, #7
 80002fc:	d008      	beq.n	8000310 <memchr+0x20>
 80002fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000302:	3a01      	subs	r2, #1
 8000304:	428b      	cmp	r3, r1
 8000306:	d02d      	beq.n	8000364 <memchr+0x74>
 8000308:	f010 0f07 	tst.w	r0, #7
 800030c:	b342      	cbz	r2, 8000360 <memchr+0x70>
 800030e:	d1f6      	bne.n	80002fe <memchr+0xe>
 8000310:	b4f0      	push	{r4, r5, r6, r7}
 8000312:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000316:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800031a:	f022 0407 	bic.w	r4, r2, #7
 800031e:	f07f 0700 	mvns.w	r7, #0
 8000322:	2300      	movs	r3, #0
 8000324:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000328:	3c08      	subs	r4, #8
 800032a:	ea85 0501 	eor.w	r5, r5, r1
 800032e:	ea86 0601 	eor.w	r6, r6, r1
 8000332:	fa85 f547 	uadd8	r5, r5, r7
 8000336:	faa3 f587 	sel	r5, r3, r7
 800033a:	fa86 f647 	uadd8	r6, r6, r7
 800033e:	faa5 f687 	sel	r6, r5, r7
 8000342:	b98e      	cbnz	r6, 8000368 <memchr+0x78>
 8000344:	d1ee      	bne.n	8000324 <memchr+0x34>
 8000346:	bcf0      	pop	{r4, r5, r6, r7}
 8000348:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800034c:	f002 0207 	and.w	r2, r2, #7
 8000350:	b132      	cbz	r2, 8000360 <memchr+0x70>
 8000352:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000356:	3a01      	subs	r2, #1
 8000358:	ea83 0301 	eor.w	r3, r3, r1
 800035c:	b113      	cbz	r3, 8000364 <memchr+0x74>
 800035e:	d1f8      	bne.n	8000352 <memchr+0x62>
 8000360:	2000      	movs	r0, #0
 8000362:	4770      	bx	lr
 8000364:	3801      	subs	r0, #1
 8000366:	4770      	bx	lr
 8000368:	2d00      	cmp	r5, #0
 800036a:	bf06      	itte	eq
 800036c:	4635      	moveq	r5, r6
 800036e:	3803      	subeq	r0, #3
 8000370:	3807      	subne	r0, #7
 8000372:	f015 0f01 	tst.w	r5, #1
 8000376:	d107      	bne.n	8000388 <memchr+0x98>
 8000378:	3001      	adds	r0, #1
 800037a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800037e:	bf02      	ittt	eq
 8000380:	3001      	addeq	r0, #1
 8000382:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000386:	3001      	addeq	r0, #1
 8000388:	bcf0      	pop	{r4, r5, r6, r7}
 800038a:	3801      	subs	r0, #1
 800038c:	4770      	bx	lr
 800038e:	bf00      	nop

08000390 <__aeabi_drsub>:
 8000390:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000394:	e002      	b.n	800039c <__adddf3>
 8000396:	bf00      	nop

08000398 <__aeabi_dsub>:
 8000398:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800039c <__adddf3>:
 800039c:	b530      	push	{r4, r5, lr}
 800039e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80003a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80003a6:	ea94 0f05 	teq	r4, r5
 80003aa:	bf08      	it	eq
 80003ac:	ea90 0f02 	teqeq	r0, r2
 80003b0:	bf1f      	itttt	ne
 80003b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80003b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80003ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80003be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003c2:	f000 80e2 	beq.w	800058a <__adddf3+0x1ee>
 80003c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80003ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80003ce:	bfb8      	it	lt
 80003d0:	426d      	neglt	r5, r5
 80003d2:	dd0c      	ble.n	80003ee <__adddf3+0x52>
 80003d4:	442c      	add	r4, r5
 80003d6:	ea80 0202 	eor.w	r2, r0, r2
 80003da:	ea81 0303 	eor.w	r3, r1, r3
 80003de:	ea82 0000 	eor.w	r0, r2, r0
 80003e2:	ea83 0101 	eor.w	r1, r3, r1
 80003e6:	ea80 0202 	eor.w	r2, r0, r2
 80003ea:	ea81 0303 	eor.w	r3, r1, r3
 80003ee:	2d36      	cmp	r5, #54	; 0x36
 80003f0:	bf88      	it	hi
 80003f2:	bd30      	pophi	{r4, r5, pc}
 80003f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80003f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80003fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000400:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000404:	d002      	beq.n	800040c <__adddf3+0x70>
 8000406:	4240      	negs	r0, r0
 8000408:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800040c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000410:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000414:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000418:	d002      	beq.n	8000420 <__adddf3+0x84>
 800041a:	4252      	negs	r2, r2
 800041c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000420:	ea94 0f05 	teq	r4, r5
 8000424:	f000 80a7 	beq.w	8000576 <__adddf3+0x1da>
 8000428:	f1a4 0401 	sub.w	r4, r4, #1
 800042c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000430:	db0d      	blt.n	800044e <__adddf3+0xb2>
 8000432:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000436:	fa22 f205 	lsr.w	r2, r2, r5
 800043a:	1880      	adds	r0, r0, r2
 800043c:	f141 0100 	adc.w	r1, r1, #0
 8000440:	fa03 f20e 	lsl.w	r2, r3, lr
 8000444:	1880      	adds	r0, r0, r2
 8000446:	fa43 f305 	asr.w	r3, r3, r5
 800044a:	4159      	adcs	r1, r3
 800044c:	e00e      	b.n	800046c <__adddf3+0xd0>
 800044e:	f1a5 0520 	sub.w	r5, r5, #32
 8000452:	f10e 0e20 	add.w	lr, lr, #32
 8000456:	2a01      	cmp	r2, #1
 8000458:	fa03 fc0e 	lsl.w	ip, r3, lr
 800045c:	bf28      	it	cs
 800045e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000462:	fa43 f305 	asr.w	r3, r3, r5
 8000466:	18c0      	adds	r0, r0, r3
 8000468:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800046c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000470:	d507      	bpl.n	8000482 <__adddf3+0xe6>
 8000472:	f04f 0e00 	mov.w	lr, #0
 8000476:	f1dc 0c00 	rsbs	ip, ip, #0
 800047a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800047e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000482:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000486:	d31b      	bcc.n	80004c0 <__adddf3+0x124>
 8000488:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800048c:	d30c      	bcc.n	80004a8 <__adddf3+0x10c>
 800048e:	0849      	lsrs	r1, r1, #1
 8000490:	ea5f 0030 	movs.w	r0, r0, rrx
 8000494:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000498:	f104 0401 	add.w	r4, r4, #1
 800049c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80004a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80004a4:	f080 809a 	bcs.w	80005dc <__adddf3+0x240>
 80004a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80004ac:	bf08      	it	eq
 80004ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80004b2:	f150 0000 	adcs.w	r0, r0, #0
 80004b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80004ba:	ea41 0105 	orr.w	r1, r1, r5
 80004be:	bd30      	pop	{r4, r5, pc}
 80004c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80004c4:	4140      	adcs	r0, r0
 80004c6:	eb41 0101 	adc.w	r1, r1, r1
 80004ca:	3c01      	subs	r4, #1
 80004cc:	bf28      	it	cs
 80004ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80004d2:	d2e9      	bcs.n	80004a8 <__adddf3+0x10c>
 80004d4:	f091 0f00 	teq	r1, #0
 80004d8:	bf04      	itt	eq
 80004da:	4601      	moveq	r1, r0
 80004dc:	2000      	moveq	r0, #0
 80004de:	fab1 f381 	clz	r3, r1
 80004e2:	bf08      	it	eq
 80004e4:	3320      	addeq	r3, #32
 80004e6:	f1a3 030b 	sub.w	r3, r3, #11
 80004ea:	f1b3 0220 	subs.w	r2, r3, #32
 80004ee:	da0c      	bge.n	800050a <__adddf3+0x16e>
 80004f0:	320c      	adds	r2, #12
 80004f2:	dd08      	ble.n	8000506 <__adddf3+0x16a>
 80004f4:	f102 0c14 	add.w	ip, r2, #20
 80004f8:	f1c2 020c 	rsb	r2, r2, #12
 80004fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000500:	fa21 f102 	lsr.w	r1, r1, r2
 8000504:	e00c      	b.n	8000520 <__adddf3+0x184>
 8000506:	f102 0214 	add.w	r2, r2, #20
 800050a:	bfd8      	it	le
 800050c:	f1c2 0c20 	rsble	ip, r2, #32
 8000510:	fa01 f102 	lsl.w	r1, r1, r2
 8000514:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000518:	bfdc      	itt	le
 800051a:	ea41 010c 	orrle.w	r1, r1, ip
 800051e:	4090      	lslle	r0, r2
 8000520:	1ae4      	subs	r4, r4, r3
 8000522:	bfa2      	ittt	ge
 8000524:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000528:	4329      	orrge	r1, r5
 800052a:	bd30      	popge	{r4, r5, pc}
 800052c:	ea6f 0404 	mvn.w	r4, r4
 8000530:	3c1f      	subs	r4, #31
 8000532:	da1c      	bge.n	800056e <__adddf3+0x1d2>
 8000534:	340c      	adds	r4, #12
 8000536:	dc0e      	bgt.n	8000556 <__adddf3+0x1ba>
 8000538:	f104 0414 	add.w	r4, r4, #20
 800053c:	f1c4 0220 	rsb	r2, r4, #32
 8000540:	fa20 f004 	lsr.w	r0, r0, r4
 8000544:	fa01 f302 	lsl.w	r3, r1, r2
 8000548:	ea40 0003 	orr.w	r0, r0, r3
 800054c:	fa21 f304 	lsr.w	r3, r1, r4
 8000550:	ea45 0103 	orr.w	r1, r5, r3
 8000554:	bd30      	pop	{r4, r5, pc}
 8000556:	f1c4 040c 	rsb	r4, r4, #12
 800055a:	f1c4 0220 	rsb	r2, r4, #32
 800055e:	fa20 f002 	lsr.w	r0, r0, r2
 8000562:	fa01 f304 	lsl.w	r3, r1, r4
 8000566:	ea40 0003 	orr.w	r0, r0, r3
 800056a:	4629      	mov	r1, r5
 800056c:	bd30      	pop	{r4, r5, pc}
 800056e:	fa21 f004 	lsr.w	r0, r1, r4
 8000572:	4629      	mov	r1, r5
 8000574:	bd30      	pop	{r4, r5, pc}
 8000576:	f094 0f00 	teq	r4, #0
 800057a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800057e:	bf06      	itte	eq
 8000580:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000584:	3401      	addeq	r4, #1
 8000586:	3d01      	subne	r5, #1
 8000588:	e74e      	b.n	8000428 <__adddf3+0x8c>
 800058a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800058e:	bf18      	it	ne
 8000590:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000594:	d029      	beq.n	80005ea <__adddf3+0x24e>
 8000596:	ea94 0f05 	teq	r4, r5
 800059a:	bf08      	it	eq
 800059c:	ea90 0f02 	teqeq	r0, r2
 80005a0:	d005      	beq.n	80005ae <__adddf3+0x212>
 80005a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80005a6:	bf04      	itt	eq
 80005a8:	4619      	moveq	r1, r3
 80005aa:	4610      	moveq	r0, r2
 80005ac:	bd30      	pop	{r4, r5, pc}
 80005ae:	ea91 0f03 	teq	r1, r3
 80005b2:	bf1e      	ittt	ne
 80005b4:	2100      	movne	r1, #0
 80005b6:	2000      	movne	r0, #0
 80005b8:	bd30      	popne	{r4, r5, pc}
 80005ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80005be:	d105      	bne.n	80005cc <__adddf3+0x230>
 80005c0:	0040      	lsls	r0, r0, #1
 80005c2:	4149      	adcs	r1, r1
 80005c4:	bf28      	it	cs
 80005c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80005ca:	bd30      	pop	{r4, r5, pc}
 80005cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80005d0:	bf3c      	itt	cc
 80005d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80005d6:	bd30      	popcc	{r4, r5, pc}
 80005d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80005e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80005e4:	f04f 0000 	mov.w	r0, #0
 80005e8:	bd30      	pop	{r4, r5, pc}
 80005ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005ee:	bf1a      	itte	ne
 80005f0:	4619      	movne	r1, r3
 80005f2:	4610      	movne	r0, r2
 80005f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80005f8:	bf1c      	itt	ne
 80005fa:	460b      	movne	r3, r1
 80005fc:	4602      	movne	r2, r0
 80005fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000602:	bf06      	itte	eq
 8000604:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000608:	ea91 0f03 	teqeq	r1, r3
 800060c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000610:	bd30      	pop	{r4, r5, pc}
 8000612:	bf00      	nop

08000614 <__aeabi_ui2d>:
 8000614:	f090 0f00 	teq	r0, #0
 8000618:	bf04      	itt	eq
 800061a:	2100      	moveq	r1, #0
 800061c:	4770      	bxeq	lr
 800061e:	b530      	push	{r4, r5, lr}
 8000620:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000624:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000628:	f04f 0500 	mov.w	r5, #0
 800062c:	f04f 0100 	mov.w	r1, #0
 8000630:	e750      	b.n	80004d4 <__adddf3+0x138>
 8000632:	bf00      	nop

08000634 <__aeabi_i2d>:
 8000634:	f090 0f00 	teq	r0, #0
 8000638:	bf04      	itt	eq
 800063a:	2100      	moveq	r1, #0
 800063c:	4770      	bxeq	lr
 800063e:	b530      	push	{r4, r5, lr}
 8000640:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000644:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000648:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800064c:	bf48      	it	mi
 800064e:	4240      	negmi	r0, r0
 8000650:	f04f 0100 	mov.w	r1, #0
 8000654:	e73e      	b.n	80004d4 <__adddf3+0x138>
 8000656:	bf00      	nop

08000658 <__aeabi_f2d>:
 8000658:	0042      	lsls	r2, r0, #1
 800065a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800065e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000662:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000666:	bf1f      	itttt	ne
 8000668:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800066c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000670:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000674:	4770      	bxne	lr
 8000676:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800067a:	bf08      	it	eq
 800067c:	4770      	bxeq	lr
 800067e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000682:	bf04      	itt	eq
 8000684:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000688:	4770      	bxeq	lr
 800068a:	b530      	push	{r4, r5, lr}
 800068c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000690:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000694:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000698:	e71c      	b.n	80004d4 <__adddf3+0x138>
 800069a:	bf00      	nop

0800069c <__aeabi_ul2d>:
 800069c:	ea50 0201 	orrs.w	r2, r0, r1
 80006a0:	bf08      	it	eq
 80006a2:	4770      	bxeq	lr
 80006a4:	b530      	push	{r4, r5, lr}
 80006a6:	f04f 0500 	mov.w	r5, #0
 80006aa:	e00a      	b.n	80006c2 <__aeabi_l2d+0x16>

080006ac <__aeabi_l2d>:
 80006ac:	ea50 0201 	orrs.w	r2, r0, r1
 80006b0:	bf08      	it	eq
 80006b2:	4770      	bxeq	lr
 80006b4:	b530      	push	{r4, r5, lr}
 80006b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80006ba:	d502      	bpl.n	80006c2 <__aeabi_l2d+0x16>
 80006bc:	4240      	negs	r0, r0
 80006be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80006c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80006ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80006ce:	f43f aed8 	beq.w	8000482 <__adddf3+0xe6>
 80006d2:	f04f 0203 	mov.w	r2, #3
 80006d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006da:	bf18      	it	ne
 80006dc:	3203      	addne	r2, #3
 80006de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006e2:	bf18      	it	ne
 80006e4:	3203      	addne	r2, #3
 80006e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80006ea:	f1c2 0320 	rsb	r3, r2, #32
 80006ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80006f2:	fa20 f002 	lsr.w	r0, r0, r2
 80006f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80006fa:	ea40 000e 	orr.w	r0, r0, lr
 80006fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000702:	4414      	add	r4, r2
 8000704:	e6bd      	b.n	8000482 <__adddf3+0xe6>
 8000706:	bf00      	nop

08000708 <__aeabi_uldivmod>:
 8000708:	b953      	cbnz	r3, 8000720 <__aeabi_uldivmod+0x18>
 800070a:	b94a      	cbnz	r2, 8000720 <__aeabi_uldivmod+0x18>
 800070c:	2900      	cmp	r1, #0
 800070e:	bf08      	it	eq
 8000710:	2800      	cmpeq	r0, #0
 8000712:	bf1c      	itt	ne
 8000714:	f04f 31ff 	movne.w	r1, #4294967295
 8000718:	f04f 30ff 	movne.w	r0, #4294967295
 800071c:	f000 b9ac 	b.w	8000a78 <__aeabi_idiv0>
 8000720:	f1ad 0c08 	sub.w	ip, sp, #8
 8000724:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000728:	f000 f83e 	bl	80007a8 <__udivmoddi4>
 800072c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000730:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000734:	b004      	add	sp, #16
 8000736:	4770      	bx	lr

08000738 <__aeabi_d2lz>:
 8000738:	b508      	push	{r3, lr}
 800073a:	4602      	mov	r2, r0
 800073c:	460b      	mov	r3, r1
 800073e:	ec43 2b17 	vmov	d7, r2, r3
 8000742:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 8000746:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800074a:	d403      	bmi.n	8000754 <__aeabi_d2lz+0x1c>
 800074c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000750:	f000 b80a 	b.w	8000768 <__aeabi_d2ulz>
 8000754:	eeb1 7b47 	vneg.f64	d7, d7
 8000758:	ec51 0b17 	vmov	r0, r1, d7
 800075c:	f000 f804 	bl	8000768 <__aeabi_d2ulz>
 8000760:	4240      	negs	r0, r0
 8000762:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000766:	bd08      	pop	{r3, pc}

08000768 <__aeabi_d2ulz>:
 8000768:	ed9f 6b0b 	vldr	d6, [pc, #44]	; 8000798 <__aeabi_d2ulz+0x30>
 800076c:	ec41 0b17 	vmov	d7, r0, r1
 8000770:	ed9f 5b0b 	vldr	d5, [pc, #44]	; 80007a0 <__aeabi_d2ulz+0x38>
 8000774:	ee27 6b06 	vmul.f64	d6, d7, d6
 8000778:	eebc 6bc6 	vcvt.u32.f64	s12, d6
 800077c:	eeb8 4b46 	vcvt.f64.u32	d4, s12
 8000780:	eea4 7b45 	vfms.f64	d7, d4, d5
 8000784:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8000788:	ee16 1a10 	vmov	r1, s12
 800078c:	ee17 0a90 	vmov	r0, s15
 8000790:	4770      	bx	lr
 8000792:	bf00      	nop
 8000794:	f3af 8000 	nop.w
 8000798:	00000000 	.word	0x00000000
 800079c:	3df00000 	.word	0x3df00000
 80007a0:	00000000 	.word	0x00000000
 80007a4:	41f00000 	.word	0x41f00000

080007a8 <__udivmoddi4>:
 80007a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80007ac:	9d08      	ldr	r5, [sp, #32]
 80007ae:	4604      	mov	r4, r0
 80007b0:	468e      	mov	lr, r1
 80007b2:	2b00      	cmp	r3, #0
 80007b4:	d14d      	bne.n	8000852 <__udivmoddi4+0xaa>
 80007b6:	428a      	cmp	r2, r1
 80007b8:	4694      	mov	ip, r2
 80007ba:	d969      	bls.n	8000890 <__udivmoddi4+0xe8>
 80007bc:	fab2 f282 	clz	r2, r2
 80007c0:	b152      	cbz	r2, 80007d8 <__udivmoddi4+0x30>
 80007c2:	fa01 f302 	lsl.w	r3, r1, r2
 80007c6:	f1c2 0120 	rsb	r1, r2, #32
 80007ca:	fa20 f101 	lsr.w	r1, r0, r1
 80007ce:	fa0c fc02 	lsl.w	ip, ip, r2
 80007d2:	ea41 0e03 	orr.w	lr, r1, r3
 80007d6:	4094      	lsls	r4, r2
 80007d8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80007dc:	0c21      	lsrs	r1, r4, #16
 80007de:	fbbe f6f8 	udiv	r6, lr, r8
 80007e2:	fa1f f78c 	uxth.w	r7, ip
 80007e6:	fb08 e316 	mls	r3, r8, r6, lr
 80007ea:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 80007ee:	fb06 f107 	mul.w	r1, r6, r7
 80007f2:	4299      	cmp	r1, r3
 80007f4:	d90a      	bls.n	800080c <__udivmoddi4+0x64>
 80007f6:	eb1c 0303 	adds.w	r3, ip, r3
 80007fa:	f106 30ff 	add.w	r0, r6, #4294967295
 80007fe:	f080 811f 	bcs.w	8000a40 <__udivmoddi4+0x298>
 8000802:	4299      	cmp	r1, r3
 8000804:	f240 811c 	bls.w	8000a40 <__udivmoddi4+0x298>
 8000808:	3e02      	subs	r6, #2
 800080a:	4463      	add	r3, ip
 800080c:	1a5b      	subs	r3, r3, r1
 800080e:	b2a4      	uxth	r4, r4
 8000810:	fbb3 f0f8 	udiv	r0, r3, r8
 8000814:	fb08 3310 	mls	r3, r8, r0, r3
 8000818:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800081c:	fb00 f707 	mul.w	r7, r0, r7
 8000820:	42a7      	cmp	r7, r4
 8000822:	d90a      	bls.n	800083a <__udivmoddi4+0x92>
 8000824:	eb1c 0404 	adds.w	r4, ip, r4
 8000828:	f100 33ff 	add.w	r3, r0, #4294967295
 800082c:	f080 810a 	bcs.w	8000a44 <__udivmoddi4+0x29c>
 8000830:	42a7      	cmp	r7, r4
 8000832:	f240 8107 	bls.w	8000a44 <__udivmoddi4+0x29c>
 8000836:	4464      	add	r4, ip
 8000838:	3802      	subs	r0, #2
 800083a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800083e:	1be4      	subs	r4, r4, r7
 8000840:	2600      	movs	r6, #0
 8000842:	b11d      	cbz	r5, 800084c <__udivmoddi4+0xa4>
 8000844:	40d4      	lsrs	r4, r2
 8000846:	2300      	movs	r3, #0
 8000848:	e9c5 4300 	strd	r4, r3, [r5]
 800084c:	4631      	mov	r1, r6
 800084e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000852:	428b      	cmp	r3, r1
 8000854:	d909      	bls.n	800086a <__udivmoddi4+0xc2>
 8000856:	2d00      	cmp	r5, #0
 8000858:	f000 80ef 	beq.w	8000a3a <__udivmoddi4+0x292>
 800085c:	2600      	movs	r6, #0
 800085e:	e9c5 0100 	strd	r0, r1, [r5]
 8000862:	4630      	mov	r0, r6
 8000864:	4631      	mov	r1, r6
 8000866:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800086a:	fab3 f683 	clz	r6, r3
 800086e:	2e00      	cmp	r6, #0
 8000870:	d14a      	bne.n	8000908 <__udivmoddi4+0x160>
 8000872:	428b      	cmp	r3, r1
 8000874:	d302      	bcc.n	800087c <__udivmoddi4+0xd4>
 8000876:	4282      	cmp	r2, r0
 8000878:	f200 80f9 	bhi.w	8000a6e <__udivmoddi4+0x2c6>
 800087c:	1a84      	subs	r4, r0, r2
 800087e:	eb61 0303 	sbc.w	r3, r1, r3
 8000882:	2001      	movs	r0, #1
 8000884:	469e      	mov	lr, r3
 8000886:	2d00      	cmp	r5, #0
 8000888:	d0e0      	beq.n	800084c <__udivmoddi4+0xa4>
 800088a:	e9c5 4e00 	strd	r4, lr, [r5]
 800088e:	e7dd      	b.n	800084c <__udivmoddi4+0xa4>
 8000890:	b902      	cbnz	r2, 8000894 <__udivmoddi4+0xec>
 8000892:	deff      	udf	#255	; 0xff
 8000894:	fab2 f282 	clz	r2, r2
 8000898:	2a00      	cmp	r2, #0
 800089a:	f040 8092 	bne.w	80009c2 <__udivmoddi4+0x21a>
 800089e:	eba1 010c 	sub.w	r1, r1, ip
 80008a2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80008a6:	fa1f fe8c 	uxth.w	lr, ip
 80008aa:	2601      	movs	r6, #1
 80008ac:	0c20      	lsrs	r0, r4, #16
 80008ae:	fbb1 f3f7 	udiv	r3, r1, r7
 80008b2:	fb07 1113 	mls	r1, r7, r3, r1
 80008b6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80008ba:	fb0e f003 	mul.w	r0, lr, r3
 80008be:	4288      	cmp	r0, r1
 80008c0:	d908      	bls.n	80008d4 <__udivmoddi4+0x12c>
 80008c2:	eb1c 0101 	adds.w	r1, ip, r1
 80008c6:	f103 38ff 	add.w	r8, r3, #4294967295
 80008ca:	d202      	bcs.n	80008d2 <__udivmoddi4+0x12a>
 80008cc:	4288      	cmp	r0, r1
 80008ce:	f200 80cb 	bhi.w	8000a68 <__udivmoddi4+0x2c0>
 80008d2:	4643      	mov	r3, r8
 80008d4:	1a09      	subs	r1, r1, r0
 80008d6:	b2a4      	uxth	r4, r4
 80008d8:	fbb1 f0f7 	udiv	r0, r1, r7
 80008dc:	fb07 1110 	mls	r1, r7, r0, r1
 80008e0:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80008e4:	fb0e fe00 	mul.w	lr, lr, r0
 80008e8:	45a6      	cmp	lr, r4
 80008ea:	d908      	bls.n	80008fe <__udivmoddi4+0x156>
 80008ec:	eb1c 0404 	adds.w	r4, ip, r4
 80008f0:	f100 31ff 	add.w	r1, r0, #4294967295
 80008f4:	d202      	bcs.n	80008fc <__udivmoddi4+0x154>
 80008f6:	45a6      	cmp	lr, r4
 80008f8:	f200 80bb 	bhi.w	8000a72 <__udivmoddi4+0x2ca>
 80008fc:	4608      	mov	r0, r1
 80008fe:	eba4 040e 	sub.w	r4, r4, lr
 8000902:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000906:	e79c      	b.n	8000842 <__udivmoddi4+0x9a>
 8000908:	f1c6 0720 	rsb	r7, r6, #32
 800090c:	40b3      	lsls	r3, r6
 800090e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000912:	ea4c 0c03 	orr.w	ip, ip, r3
 8000916:	fa20 f407 	lsr.w	r4, r0, r7
 800091a:	fa01 f306 	lsl.w	r3, r1, r6
 800091e:	431c      	orrs	r4, r3
 8000920:	40f9      	lsrs	r1, r7
 8000922:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000926:	fa00 f306 	lsl.w	r3, r0, r6
 800092a:	fbb1 f8f9 	udiv	r8, r1, r9
 800092e:	0c20      	lsrs	r0, r4, #16
 8000930:	fa1f fe8c 	uxth.w	lr, ip
 8000934:	fb09 1118 	mls	r1, r9, r8, r1
 8000938:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800093c:	fb08 f00e 	mul.w	r0, r8, lr
 8000940:	4288      	cmp	r0, r1
 8000942:	fa02 f206 	lsl.w	r2, r2, r6
 8000946:	d90b      	bls.n	8000960 <__udivmoddi4+0x1b8>
 8000948:	eb1c 0101 	adds.w	r1, ip, r1
 800094c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000950:	f080 8088 	bcs.w	8000a64 <__udivmoddi4+0x2bc>
 8000954:	4288      	cmp	r0, r1
 8000956:	f240 8085 	bls.w	8000a64 <__udivmoddi4+0x2bc>
 800095a:	f1a8 0802 	sub.w	r8, r8, #2
 800095e:	4461      	add	r1, ip
 8000960:	1a09      	subs	r1, r1, r0
 8000962:	b2a4      	uxth	r4, r4
 8000964:	fbb1 f0f9 	udiv	r0, r1, r9
 8000968:	fb09 1110 	mls	r1, r9, r0, r1
 800096c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000970:	fb00 fe0e 	mul.w	lr, r0, lr
 8000974:	458e      	cmp	lr, r1
 8000976:	d908      	bls.n	800098a <__udivmoddi4+0x1e2>
 8000978:	eb1c 0101 	adds.w	r1, ip, r1
 800097c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000980:	d26c      	bcs.n	8000a5c <__udivmoddi4+0x2b4>
 8000982:	458e      	cmp	lr, r1
 8000984:	d96a      	bls.n	8000a5c <__udivmoddi4+0x2b4>
 8000986:	3802      	subs	r0, #2
 8000988:	4461      	add	r1, ip
 800098a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 800098e:	fba0 9402 	umull	r9, r4, r0, r2
 8000992:	eba1 010e 	sub.w	r1, r1, lr
 8000996:	42a1      	cmp	r1, r4
 8000998:	46c8      	mov	r8, r9
 800099a:	46a6      	mov	lr, r4
 800099c:	d356      	bcc.n	8000a4c <__udivmoddi4+0x2a4>
 800099e:	d053      	beq.n	8000a48 <__udivmoddi4+0x2a0>
 80009a0:	b15d      	cbz	r5, 80009ba <__udivmoddi4+0x212>
 80009a2:	ebb3 0208 	subs.w	r2, r3, r8
 80009a6:	eb61 010e 	sbc.w	r1, r1, lr
 80009aa:	fa01 f707 	lsl.w	r7, r1, r7
 80009ae:	fa22 f306 	lsr.w	r3, r2, r6
 80009b2:	40f1      	lsrs	r1, r6
 80009b4:	431f      	orrs	r7, r3
 80009b6:	e9c5 7100 	strd	r7, r1, [r5]
 80009ba:	2600      	movs	r6, #0
 80009bc:	4631      	mov	r1, r6
 80009be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009c2:	f1c2 0320 	rsb	r3, r2, #32
 80009c6:	40d8      	lsrs	r0, r3
 80009c8:	fa0c fc02 	lsl.w	ip, ip, r2
 80009cc:	fa21 f303 	lsr.w	r3, r1, r3
 80009d0:	4091      	lsls	r1, r2
 80009d2:	4301      	orrs	r1, r0
 80009d4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80009d8:	fa1f fe8c 	uxth.w	lr, ip
 80009dc:	fbb3 f0f7 	udiv	r0, r3, r7
 80009e0:	fb07 3610 	mls	r6, r7, r0, r3
 80009e4:	0c0b      	lsrs	r3, r1, #16
 80009e6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 80009ea:	fb00 f60e 	mul.w	r6, r0, lr
 80009ee:	429e      	cmp	r6, r3
 80009f0:	fa04 f402 	lsl.w	r4, r4, r2
 80009f4:	d908      	bls.n	8000a08 <__udivmoddi4+0x260>
 80009f6:	eb1c 0303 	adds.w	r3, ip, r3
 80009fa:	f100 38ff 	add.w	r8, r0, #4294967295
 80009fe:	d22f      	bcs.n	8000a60 <__udivmoddi4+0x2b8>
 8000a00:	429e      	cmp	r6, r3
 8000a02:	d92d      	bls.n	8000a60 <__udivmoddi4+0x2b8>
 8000a04:	3802      	subs	r0, #2
 8000a06:	4463      	add	r3, ip
 8000a08:	1b9b      	subs	r3, r3, r6
 8000a0a:	b289      	uxth	r1, r1
 8000a0c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000a10:	fb07 3316 	mls	r3, r7, r6, r3
 8000a14:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000a18:	fb06 f30e 	mul.w	r3, r6, lr
 8000a1c:	428b      	cmp	r3, r1
 8000a1e:	d908      	bls.n	8000a32 <__udivmoddi4+0x28a>
 8000a20:	eb1c 0101 	adds.w	r1, ip, r1
 8000a24:	f106 38ff 	add.w	r8, r6, #4294967295
 8000a28:	d216      	bcs.n	8000a58 <__udivmoddi4+0x2b0>
 8000a2a:	428b      	cmp	r3, r1
 8000a2c:	d914      	bls.n	8000a58 <__udivmoddi4+0x2b0>
 8000a2e:	3e02      	subs	r6, #2
 8000a30:	4461      	add	r1, ip
 8000a32:	1ac9      	subs	r1, r1, r3
 8000a34:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000a38:	e738      	b.n	80008ac <__udivmoddi4+0x104>
 8000a3a:	462e      	mov	r6, r5
 8000a3c:	4628      	mov	r0, r5
 8000a3e:	e705      	b.n	800084c <__udivmoddi4+0xa4>
 8000a40:	4606      	mov	r6, r0
 8000a42:	e6e3      	b.n	800080c <__udivmoddi4+0x64>
 8000a44:	4618      	mov	r0, r3
 8000a46:	e6f8      	b.n	800083a <__udivmoddi4+0x92>
 8000a48:	454b      	cmp	r3, r9
 8000a4a:	d2a9      	bcs.n	80009a0 <__udivmoddi4+0x1f8>
 8000a4c:	ebb9 0802 	subs.w	r8, r9, r2
 8000a50:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000a54:	3801      	subs	r0, #1
 8000a56:	e7a3      	b.n	80009a0 <__udivmoddi4+0x1f8>
 8000a58:	4646      	mov	r6, r8
 8000a5a:	e7ea      	b.n	8000a32 <__udivmoddi4+0x28a>
 8000a5c:	4620      	mov	r0, r4
 8000a5e:	e794      	b.n	800098a <__udivmoddi4+0x1e2>
 8000a60:	4640      	mov	r0, r8
 8000a62:	e7d1      	b.n	8000a08 <__udivmoddi4+0x260>
 8000a64:	46d0      	mov	r8, sl
 8000a66:	e77b      	b.n	8000960 <__udivmoddi4+0x1b8>
 8000a68:	3b02      	subs	r3, #2
 8000a6a:	4461      	add	r1, ip
 8000a6c:	e732      	b.n	80008d4 <__udivmoddi4+0x12c>
 8000a6e:	4630      	mov	r0, r6
 8000a70:	e709      	b.n	8000886 <__udivmoddi4+0xde>
 8000a72:	4464      	add	r4, ip
 8000a74:	3802      	subs	r0, #2
 8000a76:	e742      	b.n	80008fe <__udivmoddi4+0x156>

08000a78 <__aeabi_idiv0>:
 8000a78:	4770      	bx	lr
 8000a7a:	bf00      	nop

08000a7c <transpuesta>:
 *      Author: EliasC
 */

#include <GlobalFunc.h>

array2D transpuesta(double Maux[3][3]) {
 8000a7c:	b580      	push	{r7, lr}
 8000a7e:	b096      	sub	sp, #88	; 0x58
 8000a80:	af00      	add	r7, sp, #0
 8000a82:	6078      	str	r0, [r7, #4]
 8000a84:	6039      	str	r1, [r7, #0]
	array2D MTaux;
	for (int i = 0; i < 3; ++i) {
 8000a86:	2300      	movs	r3, #0
 8000a88:	657b      	str	r3, [r7, #84]	; 0x54
 8000a8a:	e024      	b.n	8000ad6 <transpuesta+0x5a>
		for (int j = 0; j < 3; ++j) {
 8000a8c:	2300      	movs	r3, #0
 8000a8e:	653b      	str	r3, [r7, #80]	; 0x50
 8000a90:	e01b      	b.n	8000aca <transpuesta+0x4e>
			MTaux.m[j][i] = Maux[i][j];	//transpuesta de la matriz l2 JP=[l21';l22';l23'];
 8000a92:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8000a94:	4613      	mov	r3, r2
 8000a96:	005b      	lsls	r3, r3, #1
 8000a98:	4413      	add	r3, r2
 8000a9a:	00db      	lsls	r3, r3, #3
 8000a9c:	461a      	mov	r2, r3
 8000a9e:	683b      	ldr	r3, [r7, #0]
 8000aa0:	441a      	add	r2, r3
 8000aa2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000aa4:	00db      	lsls	r3, r3, #3
 8000aa6:	4413      	add	r3, r2
 8000aa8:	e9d3 0100 	ldrd	r0, r1, [r3]
 8000aac:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 8000aae:	4613      	mov	r3, r2
 8000ab0:	005b      	lsls	r3, r3, #1
 8000ab2:	4413      	add	r3, r2
 8000ab4:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8000ab6:	4413      	add	r3, r2
 8000ab8:	00db      	lsls	r3, r3, #3
 8000aba:	3358      	adds	r3, #88	; 0x58
 8000abc:	443b      	add	r3, r7
 8000abe:	3b50      	subs	r3, #80	; 0x50
 8000ac0:	e9c3 0100 	strd	r0, r1, [r3]
		for (int j = 0; j < 3; ++j) {
 8000ac4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000ac6:	3301      	adds	r3, #1
 8000ac8:	653b      	str	r3, [r7, #80]	; 0x50
 8000aca:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000acc:	2b02      	cmp	r3, #2
 8000ace:	dde0      	ble.n	8000a92 <transpuesta+0x16>
	for (int i = 0; i < 3; ++i) {
 8000ad0:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000ad2:	3301      	adds	r3, #1
 8000ad4:	657b      	str	r3, [r7, #84]	; 0x54
 8000ad6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000ad8:	2b02      	cmp	r3, #2
 8000ada:	ddd7      	ble.n	8000a8c <transpuesta+0x10>
		}
	}
	return MTaux;
 8000adc:	687b      	ldr	r3, [r7, #4]
 8000ade:	4618      	mov	r0, r3
 8000ae0:	f107 0308 	add.w	r3, r7, #8
 8000ae4:	2248      	movs	r2, #72	; 0x48
 8000ae6:	4619      	mov	r1, r3
 8000ae8:	f00e fd00 	bl	800f4ec <memcpy>
}
 8000aec:	6878      	ldr	r0, [r7, #4]
 8000aee:	3758      	adds	r7, #88	; 0x58
 8000af0:	46bd      	mov	sp, r7
 8000af2:	bd80      	pop	{r7, pc}

08000af4 <productDot>:

double productDot(double VectA[], double VectB[]) {
 8000af4:	b480      	push	{r7}
 8000af6:	b087      	sub	sp, #28
 8000af8:	af00      	add	r7, sp, #0
 8000afa:	6078      	str	r0, [r7, #4]
 8000afc:	6039      	str	r1, [r7, #0]
	double dotaux = 0;
 8000afe:	f04f 0200 	mov.w	r2, #0
 8000b02:	f04f 0300 	mov.w	r3, #0
 8000b06:	e9c7 2304 	strd	r2, r3, [r7, #16]
	for (int i = 0; i < 3; ++i) {				//Producto punto entre vectores
 8000b0a:	2300      	movs	r3, #0
 8000b0c:	60fb      	str	r3, [r7, #12]
 8000b0e:	e016      	b.n	8000b3e <productDot+0x4a>
		dotaux = dotaux + VectA[i] * VectB[i];
 8000b10:	68fb      	ldr	r3, [r7, #12]
 8000b12:	00db      	lsls	r3, r3, #3
 8000b14:	687a      	ldr	r2, [r7, #4]
 8000b16:	4413      	add	r3, r2
 8000b18:	ed93 6b00 	vldr	d6, [r3]
 8000b1c:	68fb      	ldr	r3, [r7, #12]
 8000b1e:	00db      	lsls	r3, r3, #3
 8000b20:	683a      	ldr	r2, [r7, #0]
 8000b22:	4413      	add	r3, r2
 8000b24:	ed93 7b00 	vldr	d7, [r3]
 8000b28:	ee26 7b07 	vmul.f64	d7, d6, d7
 8000b2c:	ed97 6b04 	vldr	d6, [r7, #16]
 8000b30:	ee36 7b07 	vadd.f64	d7, d6, d7
 8000b34:	ed87 7b04 	vstr	d7, [r7, #16]
	for (int i = 0; i < 3; ++i) {				//Producto punto entre vectores
 8000b38:	68fb      	ldr	r3, [r7, #12]
 8000b3a:	3301      	adds	r3, #1
 8000b3c:	60fb      	str	r3, [r7, #12]
 8000b3e:	68fb      	ldr	r3, [r7, #12]
 8000b40:	2b02      	cmp	r3, #2
 8000b42:	dde5      	ble.n	8000b10 <productDot+0x1c>
	}
	return dotaux;
 8000b44:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8000b48:	ec43 2b17 	vmov	d7, r2, r3
}
 8000b4c:	eeb0 0b47 	vmov.f64	d0, d7
 8000b50:	371c      	adds	r7, #28
 8000b52:	46bd      	mov	sp, r7
 8000b54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b58:	4770      	bx	lr

08000b5a <determinante>:

double determinante(double Maux[3][3]) {
 8000b5a:	b480      	push	{r7}
 8000b5c:	b085      	sub	sp, #20
 8000b5e:	af00      	add	r7, sp, #0
 8000b60:	6078      	str	r0, [r7, #4]
	double det;
	det = Maux[0][0] * Maux[1][1] * Maux[2][2]; // + Maux[0][1] * Maux[1][2] * Maux[2][0] + Maux[1][0] * Maux[2][1] * Maux[0][2] - Maux[2][0] * Maux[1][1] * Maux[0][2] - Maux[1][0] * Maux[0][1] * Maux[2][2] - Maux[2][1] * Maux[1][2] * Maux[0][0];
 8000b62:	687b      	ldr	r3, [r7, #4]
 8000b64:	ed93 6b00 	vldr	d6, [r3]
 8000b68:	687b      	ldr	r3, [r7, #4]
 8000b6a:	3318      	adds	r3, #24
 8000b6c:	ed93 7b02 	vldr	d7, [r3, #8]
 8000b70:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000b74:	687b      	ldr	r3, [r7, #4]
 8000b76:	3330      	adds	r3, #48	; 0x30
 8000b78:	ed93 7b04 	vldr	d7, [r3, #16]
 8000b7c:	ee26 7b07 	vmul.f64	d7, d6, d7
 8000b80:	ed87 7b02 	vstr	d7, [r7, #8]
	return det;
 8000b84:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8000b88:	ec43 2b17 	vmov	d7, r2, r3
}
 8000b8c:	eeb0 0b47 	vmov.f64	d0, d7
 8000b90:	3714      	adds	r7, #20
 8000b92:	46bd      	mov	sp, r7
 8000b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b98:	4770      	bx	lr

08000b9a <adjunta>:

array2D adjunta(double Maux[3][3]) {
 8000b9a:	b580      	push	{r7, lr}
 8000b9c:	b094      	sub	sp, #80	; 0x50
 8000b9e:	af00      	add	r7, sp, #0
 8000ba0:	6078      	str	r0, [r7, #4]
 8000ba2:	6039      	str	r1, [r7, #0]
	array2D adj;
	adj.m[0][0] = Maux[1][1] * Maux[2][2] - Maux[2][1] * Maux[1][2];
 8000ba4:	683b      	ldr	r3, [r7, #0]
 8000ba6:	3318      	adds	r3, #24
 8000ba8:	ed93 6b02 	vldr	d6, [r3, #8]
 8000bac:	683b      	ldr	r3, [r7, #0]
 8000bae:	3330      	adds	r3, #48	; 0x30
 8000bb0:	ed93 7b04 	vldr	d7, [r3, #16]
 8000bb4:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000bb8:	683b      	ldr	r3, [r7, #0]
 8000bba:	3330      	adds	r3, #48	; 0x30
 8000bbc:	ed93 5b02 	vldr	d5, [r3, #8]
 8000bc0:	683b      	ldr	r3, [r7, #0]
 8000bc2:	3318      	adds	r3, #24
 8000bc4:	ed93 7b04 	vldr	d7, [r3, #16]
 8000bc8:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000bcc:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000bd0:	ed87 7b02 	vstr	d7, [r7, #8]
	adj.m[0][1] = Maux[1][0] * Maux[2][2] - Maux[2][0] * Maux[1][2];
 8000bd4:	683b      	ldr	r3, [r7, #0]
 8000bd6:	3318      	adds	r3, #24
 8000bd8:	ed93 6b00 	vldr	d6, [r3]
 8000bdc:	683b      	ldr	r3, [r7, #0]
 8000bde:	3330      	adds	r3, #48	; 0x30
 8000be0:	ed93 7b04 	vldr	d7, [r3, #16]
 8000be4:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000be8:	683b      	ldr	r3, [r7, #0]
 8000bea:	3330      	adds	r3, #48	; 0x30
 8000bec:	ed93 5b00 	vldr	d5, [r3]
 8000bf0:	683b      	ldr	r3, [r7, #0]
 8000bf2:	3318      	adds	r3, #24
 8000bf4:	ed93 7b04 	vldr	d7, [r3, #16]
 8000bf8:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000bfc:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000c00:	ed87 7b04 	vstr	d7, [r7, #16]
	adj.m[0][2] = Maux[1][0] * Maux[2][1] - Maux[2][0] * Maux[1][1];
 8000c04:	683b      	ldr	r3, [r7, #0]
 8000c06:	3318      	adds	r3, #24
 8000c08:	ed93 6b00 	vldr	d6, [r3]
 8000c0c:	683b      	ldr	r3, [r7, #0]
 8000c0e:	3330      	adds	r3, #48	; 0x30
 8000c10:	ed93 7b02 	vldr	d7, [r3, #8]
 8000c14:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000c18:	683b      	ldr	r3, [r7, #0]
 8000c1a:	3330      	adds	r3, #48	; 0x30
 8000c1c:	ed93 5b00 	vldr	d5, [r3]
 8000c20:	683b      	ldr	r3, [r7, #0]
 8000c22:	3318      	adds	r3, #24
 8000c24:	ed93 7b02 	vldr	d7, [r3, #8]
 8000c28:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000c2c:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000c30:	ed87 7b06 	vstr	d7, [r7, #24]
	adj.m[1][0] = Maux[0][1] * Maux[2][2] - Maux[2][1] * Maux[0][2];
 8000c34:	683b      	ldr	r3, [r7, #0]
 8000c36:	ed93 6b02 	vldr	d6, [r3, #8]
 8000c3a:	683b      	ldr	r3, [r7, #0]
 8000c3c:	3330      	adds	r3, #48	; 0x30
 8000c3e:	ed93 7b04 	vldr	d7, [r3, #16]
 8000c42:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000c46:	683b      	ldr	r3, [r7, #0]
 8000c48:	3330      	adds	r3, #48	; 0x30
 8000c4a:	ed93 5b02 	vldr	d5, [r3, #8]
 8000c4e:	683b      	ldr	r3, [r7, #0]
 8000c50:	ed93 7b04 	vldr	d7, [r3, #16]
 8000c54:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000c58:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000c5c:	ed87 7b08 	vstr	d7, [r7, #32]
	adj.m[1][1] = Maux[0][0] * Maux[2][2] - Maux[2][0] * Maux[0][2];
 8000c60:	683b      	ldr	r3, [r7, #0]
 8000c62:	ed93 6b00 	vldr	d6, [r3]
 8000c66:	683b      	ldr	r3, [r7, #0]
 8000c68:	3330      	adds	r3, #48	; 0x30
 8000c6a:	ed93 7b04 	vldr	d7, [r3, #16]
 8000c6e:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000c72:	683b      	ldr	r3, [r7, #0]
 8000c74:	3330      	adds	r3, #48	; 0x30
 8000c76:	ed93 5b00 	vldr	d5, [r3]
 8000c7a:	683b      	ldr	r3, [r7, #0]
 8000c7c:	ed93 7b04 	vldr	d7, [r3, #16]
 8000c80:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000c84:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000c88:	ed87 7b0a 	vstr	d7, [r7, #40]	; 0x28
	adj.m[1][2] = Maux[0][0] * Maux[2][1] - Maux[2][0] * Maux[0][1];
 8000c8c:	683b      	ldr	r3, [r7, #0]
 8000c8e:	ed93 6b00 	vldr	d6, [r3]
 8000c92:	683b      	ldr	r3, [r7, #0]
 8000c94:	3330      	adds	r3, #48	; 0x30
 8000c96:	ed93 7b02 	vldr	d7, [r3, #8]
 8000c9a:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000c9e:	683b      	ldr	r3, [r7, #0]
 8000ca0:	3330      	adds	r3, #48	; 0x30
 8000ca2:	ed93 5b00 	vldr	d5, [r3]
 8000ca6:	683b      	ldr	r3, [r7, #0]
 8000ca8:	ed93 7b02 	vldr	d7, [r3, #8]
 8000cac:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000cb0:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000cb4:	ed87 7b0c 	vstr	d7, [r7, #48]	; 0x30
	adj.m[2][0] = Maux[0][1] * Maux[1][2] - Maux[1][1] * Maux[0][2];
 8000cb8:	683b      	ldr	r3, [r7, #0]
 8000cba:	ed93 6b02 	vldr	d6, [r3, #8]
 8000cbe:	683b      	ldr	r3, [r7, #0]
 8000cc0:	3318      	adds	r3, #24
 8000cc2:	ed93 7b04 	vldr	d7, [r3, #16]
 8000cc6:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000cca:	683b      	ldr	r3, [r7, #0]
 8000ccc:	3318      	adds	r3, #24
 8000cce:	ed93 5b02 	vldr	d5, [r3, #8]
 8000cd2:	683b      	ldr	r3, [r7, #0]
 8000cd4:	ed93 7b04 	vldr	d7, [r3, #16]
 8000cd8:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000cdc:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000ce0:	ed87 7b0e 	vstr	d7, [r7, #56]	; 0x38
	adj.m[2][1] = Maux[0][0] * Maux[1][2] - Maux[1][0] * Maux[0][2];
 8000ce4:	683b      	ldr	r3, [r7, #0]
 8000ce6:	ed93 6b00 	vldr	d6, [r3]
 8000cea:	683b      	ldr	r3, [r7, #0]
 8000cec:	3318      	adds	r3, #24
 8000cee:	ed93 7b04 	vldr	d7, [r3, #16]
 8000cf2:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000cf6:	683b      	ldr	r3, [r7, #0]
 8000cf8:	3318      	adds	r3, #24
 8000cfa:	ed93 5b00 	vldr	d5, [r3]
 8000cfe:	683b      	ldr	r3, [r7, #0]
 8000d00:	ed93 7b04 	vldr	d7, [r3, #16]
 8000d04:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000d08:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000d0c:	ed87 7b10 	vstr	d7, [r7, #64]	; 0x40
	adj.m[2][2] = Maux[0][0] * Maux[1][1] - Maux[1][0] * Maux[0][1];
 8000d10:	683b      	ldr	r3, [r7, #0]
 8000d12:	ed93 6b00 	vldr	d6, [r3]
 8000d16:	683b      	ldr	r3, [r7, #0]
 8000d18:	3318      	adds	r3, #24
 8000d1a:	ed93 7b02 	vldr	d7, [r3, #8]
 8000d1e:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000d22:	683b      	ldr	r3, [r7, #0]
 8000d24:	3318      	adds	r3, #24
 8000d26:	ed93 5b00 	vldr	d5, [r3]
 8000d2a:	683b      	ldr	r3, [r7, #0]
 8000d2c:	ed93 7b02 	vldr	d7, [r3, #8]
 8000d30:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000d34:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000d38:	ed87 7b12 	vstr	d7, [r7, #72]	; 0x48
	return adj;
 8000d3c:	687b      	ldr	r3, [r7, #4]
 8000d3e:	4618      	mov	r0, r3
 8000d40:	f107 0308 	add.w	r3, r7, #8
 8000d44:	2248      	movs	r2, #72	; 0x48
 8000d46:	4619      	mov	r1, r3
 8000d48:	f00e fbd0 	bl	800f4ec <memcpy>
}
 8000d4c:	6878      	ldr	r0, [r7, #4]
 8000d4e:	3750      	adds	r7, #80	; 0x50
 8000d50:	46bd      	mov	sp, r7
 8000d52:	bd80      	pop	{r7, pc}

08000d54 <inversa>:

array2D inversa(double A[3][3]) {
 8000d54:	b580      	push	{r7, lr}
 8000d56:	b0bc      	sub	sp, #240	; 0xf0
 8000d58:	af00      	add	r7, sp, #0
 8000d5a:	64f8      	str	r0, [r7, #76]	; 0x4c
 8000d5c:	64b9      	str	r1, [r7, #72]	; 0x48
	array2D Minv;
	array2D Maux;
	double det;
	Maux = adjunta(A);
 8000d5e:	463b      	mov	r3, r7
 8000d60:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8000d62:	4618      	mov	r0, r3
 8000d64:	f7ff ff19 	bl	8000b9a <adjunta>
 8000d68:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000d6c:	4639      	mov	r1, r7
 8000d6e:	2248      	movs	r2, #72	; 0x48
 8000d70:	4618      	mov	r0, r3
 8000d72:	f00e fbbb 	bl	800f4ec <memcpy>
	Maux = transpuesta(Maux.m);
 8000d76:	463b      	mov	r3, r7
 8000d78:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8000d7c:	4611      	mov	r1, r2
 8000d7e:	4618      	mov	r0, r3
 8000d80:	f7ff fe7c 	bl	8000a7c <transpuesta>
 8000d84:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000d88:	4639      	mov	r1, r7
 8000d8a:	2248      	movs	r2, #72	; 0x48
 8000d8c:	4618      	mov	r0, r3
 8000d8e:	f00e fbad 	bl	800f4ec <memcpy>
	det = determinante(A);
 8000d92:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8000d94:	f7ff fee1 	bl	8000b5a <determinante>
 8000d98:	ed87 0b38 	vstr	d0, [r7, #224]	; 0xe0
	for (int i = 0; i < 3; ++i) {
 8000d9c:	2300      	movs	r3, #0
 8000d9e:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 8000da2:	e035      	b.n	8000e10 <inversa+0xbc>
		for (int j = 0; j < 3; ++j) {
 8000da4:	2300      	movs	r3, #0
 8000da6:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8000daa:	e028      	b.n	8000dfe <inversa+0xaa>
			Minv.m[i][j] = (1 / det) * Maux.m[i][j];
 8000dac:	eeb7 5b00 	vmov.f64	d5, #112	; 0x3f800000  1.0
 8000db0:	ed97 7b38 	vldr	d7, [r7, #224]	; 0xe0
 8000db4:	ee85 6b07 	vdiv.f64	d6, d5, d7
 8000db8:	f8d7 20ec 	ldr.w	r2, [r7, #236]	; 0xec
 8000dbc:	4613      	mov	r3, r2
 8000dbe:	005b      	lsls	r3, r3, #1
 8000dc0:	4413      	add	r3, r2
 8000dc2:	f8d7 20e8 	ldr.w	r2, [r7, #232]	; 0xe8
 8000dc6:	4413      	add	r3, r2
 8000dc8:	00db      	lsls	r3, r3, #3
 8000dca:	33f0      	adds	r3, #240	; 0xf0
 8000dcc:	443b      	add	r3, r7
 8000dce:	3ba0      	subs	r3, #160	; 0xa0
 8000dd0:	ed93 7b00 	vldr	d7, [r3]
 8000dd4:	ee26 7b07 	vmul.f64	d7, d6, d7
 8000dd8:	f8d7 20ec 	ldr.w	r2, [r7, #236]	; 0xec
 8000ddc:	4613      	mov	r3, r2
 8000dde:	005b      	lsls	r3, r3, #1
 8000de0:	4413      	add	r3, r2
 8000de2:	f8d7 20e8 	ldr.w	r2, [r7, #232]	; 0xe8
 8000de6:	4413      	add	r3, r2
 8000de8:	00db      	lsls	r3, r3, #3
 8000dea:	33f0      	adds	r3, #240	; 0xf0
 8000dec:	443b      	add	r3, r7
 8000dee:	3b58      	subs	r3, #88	; 0x58
 8000df0:	ed83 7b00 	vstr	d7, [r3]
		for (int j = 0; j < 3; ++j) {
 8000df4:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 8000df8:	3301      	adds	r3, #1
 8000dfa:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8000dfe:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 8000e02:	2b02      	cmp	r3, #2
 8000e04:	ddd2      	ble.n	8000dac <inversa+0x58>
	for (int i = 0; i < 3; ++i) {
 8000e06:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 8000e0a:	3301      	adds	r3, #1
 8000e0c:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 8000e10:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 8000e14:	2b02      	cmp	r3, #2
 8000e16:	ddc5      	ble.n	8000da4 <inversa+0x50>
		}
	}
	return Minv;
 8000e18:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000e1a:	4618      	mov	r0, r3
 8000e1c:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8000e20:	2248      	movs	r2, #72	; 0x48
 8000e22:	4619      	mov	r1, r3
 8000e24:	f00e fb62 	bl	800f4ec <memcpy>
}
 8000e28:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8000e2a:	37f0      	adds	r7, #240	; 0xf0
 8000e2c:	46bd      	mov	sp, r7
 8000e2e:	bd80      	pop	{r7, pc}

08000e30 <productMatriz>:

array2D productMatriz(double MatrizA[3][3], double MatrizB[3][3]) {
 8000e30:	b580      	push	{r7, lr}
 8000e32:	b09c      	sub	sp, #112	; 0x70
 8000e34:	af00      	add	r7, sp, #0
 8000e36:	60f8      	str	r0, [r7, #12]
 8000e38:	60b9      	str	r1, [r7, #8]
 8000e3a:	607a      	str	r2, [r7, #4]
	array2D producto;

	for (int k = 0; k < 3; ++k) {
 8000e3c:	2300      	movs	r3, #0
 8000e3e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8000e40:	e04b      	b.n	8000eda <productMatriz+0xaa>
		for (int i = 0; i < 3; ++i) {
 8000e42:	2300      	movs	r3, #0
 8000e44:	66bb      	str	r3, [r7, #104]	; 0x68
 8000e46:	e042      	b.n	8000ece <productMatriz+0x9e>
			double suma = 0;
 8000e48:	f04f 0200 	mov.w	r2, #0
 8000e4c:	f04f 0300 	mov.w	r3, #0
 8000e50:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
			for (int j = 0; j < 3; ++j) {
 8000e54:	2300      	movs	r3, #0
 8000e56:	65fb      	str	r3, [r7, #92]	; 0x5c
 8000e58:	e024      	b.n	8000ea4 <productMatriz+0x74>
				suma += MatrizA[i][j] * MatrizB[j][k];
 8000e5a:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8000e5c:	4613      	mov	r3, r2
 8000e5e:	005b      	lsls	r3, r3, #1
 8000e60:	4413      	add	r3, r2
 8000e62:	00db      	lsls	r3, r3, #3
 8000e64:	461a      	mov	r2, r3
 8000e66:	68bb      	ldr	r3, [r7, #8]
 8000e68:	441a      	add	r2, r3
 8000e6a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000e6c:	00db      	lsls	r3, r3, #3
 8000e6e:	4413      	add	r3, r2
 8000e70:	ed93 6b00 	vldr	d6, [r3]
 8000e74:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8000e76:	4613      	mov	r3, r2
 8000e78:	005b      	lsls	r3, r3, #1
 8000e7a:	4413      	add	r3, r2
 8000e7c:	00db      	lsls	r3, r3, #3
 8000e7e:	461a      	mov	r2, r3
 8000e80:	687b      	ldr	r3, [r7, #4]
 8000e82:	441a      	add	r2, r3
 8000e84:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8000e86:	00db      	lsls	r3, r3, #3
 8000e88:	4413      	add	r3, r2
 8000e8a:	ed93 7b00 	vldr	d7, [r3]
 8000e8e:	ee26 7b07 	vmul.f64	d7, d6, d7
 8000e92:	ed97 6b18 	vldr	d6, [r7, #96]	; 0x60
 8000e96:	ee36 7b07 	vadd.f64	d7, d6, d7
 8000e9a:	ed87 7b18 	vstr	d7, [r7, #96]	; 0x60
			for (int j = 0; j < 3; ++j) {
 8000e9e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000ea0:	3301      	adds	r3, #1
 8000ea2:	65fb      	str	r3, [r7, #92]	; 0x5c
 8000ea4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000ea6:	2b02      	cmp	r3, #2
 8000ea8:	ddd7      	ble.n	8000e5a <productMatriz+0x2a>
			}
			producto.m[i][k] = suma;
 8000eaa:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8000eac:	4613      	mov	r3, r2
 8000eae:	005b      	lsls	r3, r3, #1
 8000eb0:	4413      	add	r3, r2
 8000eb2:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8000eb4:	4413      	add	r3, r2
 8000eb6:	00db      	lsls	r3, r3, #3
 8000eb8:	3370      	adds	r3, #112	; 0x70
 8000eba:	443b      	add	r3, r7
 8000ebc:	f1a3 0160 	sub.w	r1, r3, #96	; 0x60
 8000ec0:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8000ec4:	e9c1 2300 	strd	r2, r3, [r1]
		for (int i = 0; i < 3; ++i) {
 8000ec8:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8000eca:	3301      	adds	r3, #1
 8000ecc:	66bb      	str	r3, [r7, #104]	; 0x68
 8000ece:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8000ed0:	2b02      	cmp	r3, #2
 8000ed2:	ddb9      	ble.n	8000e48 <productMatriz+0x18>
	for (int k = 0; k < 3; ++k) {
 8000ed4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8000ed6:	3301      	adds	r3, #1
 8000ed8:	66fb      	str	r3, [r7, #108]	; 0x6c
 8000eda:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8000edc:	2b02      	cmp	r3, #2
 8000ede:	ddb0      	ble.n	8000e42 <productMatriz+0x12>
		}
	}
	return producto;
 8000ee0:	68fb      	ldr	r3, [r7, #12]
 8000ee2:	4618      	mov	r0, r3
 8000ee4:	f107 0310 	add.w	r3, r7, #16
 8000ee8:	2248      	movs	r2, #72	; 0x48
 8000eea:	4619      	mov	r1, r3
 8000eec:	f00e fafe 	bl	800f4ec <memcpy>
}
 8000ef0:	68f8      	ldr	r0, [r7, #12]
 8000ef2:	3770      	adds	r7, #112	; 0x70
 8000ef4:	46bd      	mov	sp, r7
 8000ef6:	bd80      	pop	{r7, pc}

08000ef8 <cinematicaInversa>:
double A1, B1, C1, XJ1_1, XJ1_2, YJ1_1, YJ1_2, ZJ1_1, ZJ1_2, A11, A12, A13, A14, A15;
double A2, B2, C2, XJ2_1, XJ2_2, YJ2_1, YJ2_2, ZJ2_1, ZJ2_2;
double A3, B3, C3, XJ3_1, XJ3_2, YJ3_1, YJ3_2, ZJ3_1, ZJ3_2;


void cinematicaInversa(Vec3D _Pfin) {
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	ed2d 8b04 	vpush	{d8-d9}
 8000efe:	b086      	sub	sp, #24
 8000f00:	af00      	add	r7, sp, #0
 8000f02:	eeb0 5b40 	vmov.f64	d5, d0
 8000f06:	eeb0 6b41 	vmov.f64	d6, d1
 8000f0a:	eeb0 7b42 	vmov.f64	d7, d2
 8000f0e:	ed87 5b00 	vstr	d5, [r7]
 8000f12:	ed87 6b02 	vstr	d6, [r7, #8]
 8000f16:	ed87 7b04 	vstr	d7, [r7, #16]

	A1 = 1.0 + pow(((-2.0  * (R + (_Pfin.y - r))) / (2 * _Pfin.z)), 2);
 8000f1a:	ed97 7b02 	vldr	d7, [r7, #8]
 8000f1e:	ed9f 6bee 	vldr	d6, [pc, #952]	; 80012d8 <cinematicaInversa+0x3e0>
 8000f22:	ee37 7b46 	vsub.f64	d7, d7, d6
 8000f26:	ed9f 6bee 	vldr	d6, [pc, #952]	; 80012e0 <cinematicaInversa+0x3e8>
 8000f2a:	ee37 7b06 	vadd.f64	d7, d7, d6
 8000f2e:	eeb8 6b00 	vmov.f64	d6, #128	; 0xc0000000 -2.0
 8000f32:	ee27 6b06 	vmul.f64	d6, d7, d6
 8000f36:	ed97 7b04 	vldr	d7, [r7, #16]
 8000f3a:	ee37 7b07 	vadd.f64	d7, d7, d7
 8000f3e:	ee86 5b07 	vdiv.f64	d5, d6, d7
 8000f42:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8000f46:	eeb0 0b45 	vmov.f64	d0, d5
 8000f4a:	f011 f971 	bl	8012230 <pow>
 8000f4e:	eeb0 7b40 	vmov.f64	d7, d0
 8000f52:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8000f56:	ee37 7b06 	vadd.f64	d7, d7, d6
 8000f5a:	4bf9      	ldr	r3, [pc, #996]	; (8001340 <cinematicaInversa+0x448>)
 8000f5c:	ed83 7b00 	vstr	d7, [r3]
	A2 = 4.0 + pow(((2.0 * sqrt(3.0) * R * C30 + 2.0 * R * S30 - 2.0 * sqrt(3) * (_Pfin.x + r * C30) - 2.0 * (_Pfin.y + r * S30)) / (2.0 * _Pfin.z)), 2.0);
 8000f60:	ed97 7b00 	vldr	d7, [r7]
 8000f64:	ed9f 6be0 	vldr	d6, [pc, #896]	; 80012e8 <cinematicaInversa+0x3f0>
 8000f68:	ee37 7b06 	vadd.f64	d7, d7, d6
 8000f6c:	ed9f 6be0 	vldr	d6, [pc, #896]	; 80012f0 <cinematicaInversa+0x3f8>
 8000f70:	ee27 7b06 	vmul.f64	d7, d7, d6
 8000f74:	ed9f 6be0 	vldr	d6, [pc, #896]	; 80012f8 <cinematicaInversa+0x400>
 8000f78:	ee36 6b47 	vsub.f64	d6, d6, d7
 8000f7c:	ed97 7b02 	vldr	d7, [r7, #8]
 8000f80:	ed9f 5bdf 	vldr	d5, [pc, #892]	; 8001300 <cinematicaInversa+0x408>
 8000f84:	ee37 7b05 	vadd.f64	d7, d7, d5
 8000f88:	ee37 7b07 	vadd.f64	d7, d7, d7
 8000f8c:	ee36 6b47 	vsub.f64	d6, d6, d7
 8000f90:	ed97 7b04 	vldr	d7, [r7, #16]
 8000f94:	ee37 7b07 	vadd.f64	d7, d7, d7
 8000f98:	ee86 5b07 	vdiv.f64	d5, d6, d7
 8000f9c:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8000fa0:	eeb0 0b45 	vmov.f64	d0, d5
 8000fa4:	f011 f944 	bl	8012230 <pow>
 8000fa8:	eeb0 7b40 	vmov.f64	d7, d0
 8000fac:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 8000fb0:	ee37 7b06 	vadd.f64	d7, d7, d6
 8000fb4:	4be3      	ldr	r3, [pc, #908]	; (8001344 <cinematicaInversa+0x44c>)
 8000fb6:	ed83 7b00 	vstr	d7, [r3]
	A3 = 4.0 + pow(((2.0 * sqrt(3.0) * (_Pfin.x + r * C150) - 2.0 * (_Pfin.y + r * S150) - 2.0 * sqrt(3) * R * C150 + 2.0 * R * S150) / (2.0 * _Pfin.z)), 2.0);
 8000fba:	ed97 7b00 	vldr	d7, [r7]
 8000fbe:	ed9f 6bca 	vldr	d6, [pc, #808]	; 80012e8 <cinematicaInversa+0x3f0>
 8000fc2:	ee37 7b46 	vsub.f64	d7, d7, d6
 8000fc6:	ed9f 6bca 	vldr	d6, [pc, #808]	; 80012f0 <cinematicaInversa+0x3f8>
 8000fca:	ee27 6b06 	vmul.f64	d6, d7, d6
 8000fce:	ed97 7b02 	vldr	d7, [r7, #8]
 8000fd2:	ed9f 5bcb 	vldr	d5, [pc, #812]	; 8001300 <cinematicaInversa+0x408>
 8000fd6:	ee37 7b05 	vadd.f64	d7, d7, d5
 8000fda:	ee37 7b07 	vadd.f64	d7, d7, d7
 8000fde:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000fe2:	ed9f 6bc9 	vldr	d6, [pc, #804]	; 8001308 <cinematicaInversa+0x410>
 8000fe6:	ee37 7b06 	vadd.f64	d7, d7, d6
 8000fea:	ed9f 6bbd 	vldr	d6, [pc, #756]	; 80012e0 <cinematicaInversa+0x3e8>
 8000fee:	ee37 6b06 	vadd.f64	d6, d7, d6
 8000ff2:	ed97 7b04 	vldr	d7, [r7, #16]
 8000ff6:	ee37 7b07 	vadd.f64	d7, d7, d7
 8000ffa:	ee86 5b07 	vdiv.f64	d5, d6, d7
 8000ffe:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001002:	eeb0 0b45 	vmov.f64	d0, d5
 8001006:	f011 f913 	bl	8012230 <pow>
 800100a:	eeb0 7b40 	vmov.f64	d7, d0
 800100e:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 8001012:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001016:	4bcc      	ldr	r3, [pc, #816]	; (8001348 <cinematicaInversa+0x450>)
 8001018:	ed83 7b00 	vstr	d7, [r3]

	B1 = (2.0 * R) + (2.0 * ((-2.0  * (R + (_Pfin.y - r))) / (2.0 * _Pfin.z)) * ((-pow(R, 2.0) + pow(L1, 2.0) + pow((_Pfin.y - r), 2.0) + pow(_Pfin.z, 2.0) - pow(L2, 2.0) + pow(_Pfin.x, 2)) / (2 * _Pfin.z)));
 800101c:	ed97 7b02 	vldr	d7, [r7, #8]
 8001020:	ed9f 6bad 	vldr	d6, [pc, #692]	; 80012d8 <cinematicaInversa+0x3e0>
 8001024:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001028:	ed9f 6bad 	vldr	d6, [pc, #692]	; 80012e0 <cinematicaInversa+0x3e8>
 800102c:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001030:	eeb8 6b00 	vmov.f64	d6, #128	; 0xc0000000 -2.0
 8001034:	ee27 5b06 	vmul.f64	d5, d7, d6
 8001038:	ed97 7b04 	vldr	d7, [r7, #16]
 800103c:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001040:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001044:	ee37 8b07 	vadd.f64	d8, d7, d7
 8001048:	ed97 7b02 	vldr	d7, [r7, #8]
 800104c:	ed9f 6ba2 	vldr	d6, [pc, #648]	; 80012d8 <cinematicaInversa+0x3e0>
 8001050:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001054:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001058:	eeb0 0b47 	vmov.f64	d0, d7
 800105c:	f011 f8e8 	bl	8012230 <pow>
 8001060:	eeb0 7b40 	vmov.f64	d7, d0
 8001064:	ed9f 6baa 	vldr	d6, [pc, #680]	; 8001310 <cinematicaInversa+0x418>
 8001068:	ee37 9b06 	vadd.f64	d9, d7, d6
 800106c:	ed97 7b04 	vldr	d7, [r7, #16]
 8001070:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001074:	eeb0 0b47 	vmov.f64	d0, d7
 8001078:	f011 f8da 	bl	8012230 <pow>
 800107c:	eeb0 7b40 	vmov.f64	d7, d0
 8001080:	ee39 7b07 	vadd.f64	d7, d9, d7
 8001084:	ed9f 6ba4 	vldr	d6, [pc, #656]	; 8001318 <cinematicaInversa+0x420>
 8001088:	ee37 9b46 	vsub.f64	d9, d7, d6
 800108c:	ed97 7b00 	vldr	d7, [r7]
 8001090:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001094:	eeb0 0b47 	vmov.f64	d0, d7
 8001098:	f011 f8ca 	bl	8012230 <pow>
 800109c:	eeb0 7b40 	vmov.f64	d7, d0
 80010a0:	ee39 5b07 	vadd.f64	d5, d9, d7
 80010a4:	ed97 7b04 	vldr	d7, [r7, #16]
 80010a8:	ee37 6b07 	vadd.f64	d6, d7, d7
 80010ac:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80010b0:	ee28 7b07 	vmul.f64	d7, d8, d7
 80010b4:	ed9f 6b9a 	vldr	d6, [pc, #616]	; 8001320 <cinematicaInversa+0x428>
 80010b8:	ee37 7b06 	vadd.f64	d7, d7, d6
 80010bc:	4ba3      	ldr	r3, [pc, #652]	; (800134c <cinematicaInversa+0x454>)
 80010be:	ed83 7b00 	vstr	d7, [r3]
	B2 = -2.0 * sqrt(3) * R * C30 - 2.0 * R * S30 + 2.0 * (((2.0 * sqrt(3) * R * C30 + 2.0 * R * S30)	+ (-2 * sqrt(3) * (_Pfin.x + r * C30)	- 2.0 * (_Pfin.y + r * S30))) / (2 * _Pfin.z)) * ((-pow(R, 2) + pow(L1, 2) + pow((_Pfin.x + r * C30), 2) + pow((_Pfin.y + r * S30), 2) + pow(_Pfin.z, 2) - pow(L2, 2)) / (2 * _Pfin.z));
 80010c2:	ed97 7b00 	vldr	d7, [r7]
 80010c6:	ed9f 6b88 	vldr	d6, [pc, #544]	; 80012e8 <cinematicaInversa+0x3f0>
 80010ca:	ee37 7b06 	vadd.f64	d7, d7, d6
 80010ce:	ed9f 6b96 	vldr	d6, [pc, #600]	; 8001328 <cinematicaInversa+0x430>
 80010d2:	ee27 6b06 	vmul.f64	d6, d7, d6
 80010d6:	ed97 7b02 	vldr	d7, [r7, #8]
 80010da:	ed9f 5b89 	vldr	d5, [pc, #548]	; 8001300 <cinematicaInversa+0x408>
 80010de:	ee37 7b05 	vadd.f64	d7, d7, d5
 80010e2:	ee37 7b07 	vadd.f64	d7, d7, d7
 80010e6:	ee36 7b47 	vsub.f64	d7, d6, d7
 80010ea:	ed9f 6b83 	vldr	d6, [pc, #524]	; 80012f8 <cinematicaInversa+0x400>
 80010ee:	ee37 5b06 	vadd.f64	d5, d7, d6
 80010f2:	ed97 7b04 	vldr	d7, [r7, #16]
 80010f6:	ee37 6b07 	vadd.f64	d6, d7, d7
 80010fa:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80010fe:	ee37 8b07 	vadd.f64	d8, d7, d7
 8001102:	ed97 7b00 	vldr	d7, [r7]
 8001106:	ed9f 6b78 	vldr	d6, [pc, #480]	; 80012e8 <cinematicaInversa+0x3f0>
 800110a:	ee37 7b06 	vadd.f64	d7, d7, d6
 800110e:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001112:	eeb0 0b47 	vmov.f64	d0, d7
 8001116:	f011 f88b 	bl	8012230 <pow>
 800111a:	eeb0 7b40 	vmov.f64	d7, d0
 800111e:	ed9f 6b7c 	vldr	d6, [pc, #496]	; 8001310 <cinematicaInversa+0x418>
 8001122:	ee37 9b06 	vadd.f64	d9, d7, d6
 8001126:	ed97 7b02 	vldr	d7, [r7, #8]
 800112a:	ed9f 6b75 	vldr	d6, [pc, #468]	; 8001300 <cinematicaInversa+0x408>
 800112e:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001132:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001136:	eeb0 0b47 	vmov.f64	d0, d7
 800113a:	f011 f879 	bl	8012230 <pow>
 800113e:	eeb0 7b40 	vmov.f64	d7, d0
 8001142:	ee39 9b07 	vadd.f64	d9, d9, d7
 8001146:	ed97 7b04 	vldr	d7, [r7, #16]
 800114a:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800114e:	eeb0 0b47 	vmov.f64	d0, d7
 8001152:	f011 f86d 	bl	8012230 <pow>
 8001156:	eeb0 7b40 	vmov.f64	d7, d0
 800115a:	ee39 7b07 	vadd.f64	d7, d9, d7
 800115e:	ed9f 6b6e 	vldr	d6, [pc, #440]	; 8001318 <cinematicaInversa+0x420>
 8001162:	ee37 5b46 	vsub.f64	d5, d7, d6
 8001166:	ed97 7b04 	vldr	d7, [r7, #16]
 800116a:	ee37 6b07 	vadd.f64	d6, d7, d7
 800116e:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001172:	ee28 7b07 	vmul.f64	d7, d8, d7
 8001176:	ed9f 6b60 	vldr	d6, [pc, #384]	; 80012f8 <cinematicaInversa+0x400>
 800117a:	ee37 7b46 	vsub.f64	d7, d7, d6
 800117e:	4b74      	ldr	r3, [pc, #464]	; (8001350 <cinematicaInversa+0x458>)
 8001180:	ed83 7b00 	vstr	d7, [r3]
	B3 = 2.0 * sqrt(3) * R * C150 - 2.0 * R * S150 + 2.0 * ((2.0 * sqrt(3) * (_Pfin.x + r * C150) - 2.0 * (_Pfin.y + r * S150) - 2.0 * sqrt(3) * R * C150 + 2.0 * R * S150) / (2 * _Pfin.z)) * ((pow((_Pfin.x + r * C150), 2) + pow((_Pfin.y + r * S150), 2) + pow(_Pfin.z, 2) - pow(L2, 2) - pow(R, 2) + pow(L1, 2)) / (2 * _Pfin.z));
 8001184:	ed97 7b00 	vldr	d7, [r7]
 8001188:	ed9f 6b57 	vldr	d6, [pc, #348]	; 80012e8 <cinematicaInversa+0x3f0>
 800118c:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001190:	ed9f 6b57 	vldr	d6, [pc, #348]	; 80012f0 <cinematicaInversa+0x3f8>
 8001194:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001198:	ed97 7b02 	vldr	d7, [r7, #8]
 800119c:	ed9f 5b58 	vldr	d5, [pc, #352]	; 8001300 <cinematicaInversa+0x408>
 80011a0:	ee37 7b05 	vadd.f64	d7, d7, d5
 80011a4:	ee37 7b07 	vadd.f64	d7, d7, d7
 80011a8:	ee36 7b47 	vsub.f64	d7, d6, d7
 80011ac:	ed9f 6b56 	vldr	d6, [pc, #344]	; 8001308 <cinematicaInversa+0x410>
 80011b0:	ee37 7b06 	vadd.f64	d7, d7, d6
 80011b4:	ed9f 6b4a 	vldr	d6, [pc, #296]	; 80012e0 <cinematicaInversa+0x3e8>
 80011b8:	ee37 5b06 	vadd.f64	d5, d7, d6
 80011bc:	ed97 7b04 	vldr	d7, [r7, #16]
 80011c0:	ee37 6b07 	vadd.f64	d6, d7, d7
 80011c4:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80011c8:	ee37 8b07 	vadd.f64	d8, d7, d7
 80011cc:	ed97 7b00 	vldr	d7, [r7]
 80011d0:	ed9f 6b45 	vldr	d6, [pc, #276]	; 80012e8 <cinematicaInversa+0x3f0>
 80011d4:	ee37 7b46 	vsub.f64	d7, d7, d6
 80011d8:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80011dc:	eeb0 0b47 	vmov.f64	d0, d7
 80011e0:	f011 f826 	bl	8012230 <pow>
 80011e4:	eeb0 9b40 	vmov.f64	d9, d0
 80011e8:	ed97 7b02 	vldr	d7, [r7, #8]
 80011ec:	ed9f 6b44 	vldr	d6, [pc, #272]	; 8001300 <cinematicaInversa+0x408>
 80011f0:	ee37 7b06 	vadd.f64	d7, d7, d6
 80011f4:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80011f8:	eeb0 0b47 	vmov.f64	d0, d7
 80011fc:	f011 f818 	bl	8012230 <pow>
 8001200:	eeb0 7b40 	vmov.f64	d7, d0
 8001204:	ee39 9b07 	vadd.f64	d9, d9, d7
 8001208:	ed97 7b04 	vldr	d7, [r7, #16]
 800120c:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001210:	eeb0 0b47 	vmov.f64	d0, d7
 8001214:	f011 f80c 	bl	8012230 <pow>
 8001218:	eeb0 7b40 	vmov.f64	d7, d0
 800121c:	ee39 7b07 	vadd.f64	d7, d9, d7
 8001220:	ed9f 6b3d 	vldr	d6, [pc, #244]	; 8001318 <cinematicaInversa+0x420>
 8001224:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001228:	ed9f 6b41 	vldr	d6, [pc, #260]	; 8001330 <cinematicaInversa+0x438>
 800122c:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001230:	ed9f 6b41 	vldr	d6, [pc, #260]	; 8001338 <cinematicaInversa+0x440>
 8001234:	ee37 5b06 	vadd.f64	d5, d7, d6
 8001238:	ed97 7b04 	vldr	d7, [r7, #16]
 800123c:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001240:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001244:	ee28 7b07 	vmul.f64	d7, d8, d7
 8001248:	ed9f 6b2b 	vldr	d6, [pc, #172]	; 80012f8 <cinematicaInversa+0x400>
 800124c:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001250:	4b40      	ldr	r3, [pc, #256]	; (8001354 <cinematicaInversa+0x45c>)
 8001252:	ed83 7b00 	vstr	d7, [r3]

	C1 = (pow(((pow((_Pfin.y - r), 2) + pow(_Pfin.z, 2) - pow(L2, 2) + pow(_Pfin.x, 2) - pow(R, 2) + pow(L1, 2)) / (2 * _Pfin.z)), 2) - pow(L1, 2) + pow(R, 2));
 8001256:	ed97 7b02 	vldr	d7, [r7, #8]
 800125a:	ed9f 6b1f 	vldr	d6, [pc, #124]	; 80012d8 <cinematicaInversa+0x3e0>
 800125e:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001262:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001266:	eeb0 0b47 	vmov.f64	d0, d7
 800126a:	f010 ffe1 	bl	8012230 <pow>
 800126e:	eeb0 8b40 	vmov.f64	d8, d0
 8001272:	ed97 7b04 	vldr	d7, [r7, #16]
 8001276:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800127a:	eeb0 0b47 	vmov.f64	d0, d7
 800127e:	f010 ffd7 	bl	8012230 <pow>
 8001282:	eeb0 7b40 	vmov.f64	d7, d0
 8001286:	ee38 7b07 	vadd.f64	d7, d8, d7
 800128a:	ed9f 6b23 	vldr	d6, [pc, #140]	; 8001318 <cinematicaInversa+0x420>
 800128e:	ee37 8b46 	vsub.f64	d8, d7, d6
 8001292:	ed97 7b00 	vldr	d7, [r7]
 8001296:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800129a:	eeb0 0b47 	vmov.f64	d0, d7
 800129e:	f010 ffc7 	bl	8012230 <pow>
 80012a2:	eeb0 7b40 	vmov.f64	d7, d0
 80012a6:	ee38 7b07 	vadd.f64	d7, d8, d7
 80012aa:	ed9f 6b21 	vldr	d6, [pc, #132]	; 8001330 <cinematicaInversa+0x438>
 80012ae:	ee37 7b46 	vsub.f64	d7, d7, d6
 80012b2:	ed9f 6b21 	vldr	d6, [pc, #132]	; 8001338 <cinematicaInversa+0x440>
 80012b6:	ee37 6b06 	vadd.f64	d6, d7, d6
 80012ba:	ed97 7b04 	vldr	d7, [r7, #16]
 80012be:	ee37 7b07 	vadd.f64	d7, d7, d7
 80012c2:	ee86 5b07 	vdiv.f64	d5, d6, d7
 80012c6:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80012ca:	eeb0 0b45 	vmov.f64	d0, d5
 80012ce:	f010 ffaf 	bl	8012230 <pow>
 80012d2:	eeb0 7b40 	vmov.f64	d7, d0
 80012d6:	e03f      	b.n	8001358 <cinematicaInversa+0x460>
 80012d8:	1eb851ec 	.word	0x1eb851ec
 80012dc:	3fb1eb85 	.word	0x3fb1eb85
 80012e0:	24dd2f1b 	.word	0x24dd2f1b
 80012e4:	3fc58106 	.word	0x3fc58106
 80012e8:	5625749b 	.word	0x5625749b
 80012ec:	3faf09d1 	.word	0x3faf09d1
 80012f0:	e8584caa 	.word	0xe8584caa
 80012f4:	400bb67a 	.word	0x400bb67a
 80012f8:	24dd2f1d 	.word	0x24dd2f1d
 80012fc:	3fe58106 	.word	0x3fe58106
 8001300:	1eb851ec 	.word	0x1eb851ec
 8001304:	3fa1eb85 	.word	0x3fa1eb85
 8001308:	9ba5e356 	.word	0x9ba5e356
 800130c:	3fe020c4 	.word	0x3fe020c4
 8001310:	3532e7b5 	.word	0x3532e7b5
 8001314:	3fc0de09 	.word	0x3fc0de09
 8001318:	70a3d70a 	.word	0x70a3d70a
 800131c:	3fd70a3d 	.word	0x3fd70a3d
 8001320:	24dd2f1b 	.word	0x24dd2f1b
 8001324:	3fd58106 	.word	0x3fd58106
 8001328:	e8584caa 	.word	0xe8584caa
 800132c:	c00bb67a 	.word	0xc00bb67a
 8001330:	93d96639 	.word	0x93d96639
 8001334:	3f9ce6c0 	.word	0x3f9ce6c0
 8001338:	47ae147c 	.word	0x47ae147c
 800133c:	3fc47ae1 	.word	0x3fc47ae1
 8001340:	240002b8 	.word	0x240002b8
 8001344:	24000300 	.word	0x24000300
 8001348:	24000348 	.word	0x24000348
 800134c:	240002c0 	.word	0x240002c0
 8001350:	24000308 	.word	0x24000308
 8001354:	24000350 	.word	0x24000350
 8001358:	ed9f 6bdf 	vldr	d6, [pc, #892]	; 80016d8 <cinematicaInversa+0x7e0>
 800135c:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001360:	ed9f 6bdf 	vldr	d6, [pc, #892]	; 80016e0 <cinematicaInversa+0x7e8>
 8001364:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001368:	4be7      	ldr	r3, [pc, #924]	; (8001708 <cinematicaInversa+0x810>)
 800136a:	ed83 7b00 	vstr	d7, [r3]
	C2 = pow(R, 2) - pow(L1, 2) + pow(((-pow(R, 2) + pow(L1, 2) + pow((_Pfin.x + r * C30), 2) + pow((_Pfin.y + r * S30), 2) + pow(_Pfin.z, 2) - pow(L2, 2)) / (2.0 * _Pfin.z)), 2.0);
 800136e:	ed97 7b00 	vldr	d7, [r7]
 8001372:	ed9f 6bdd 	vldr	d6, [pc, #884]	; 80016e8 <cinematicaInversa+0x7f0>
 8001376:	ee37 7b06 	vadd.f64	d7, d7, d6
 800137a:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800137e:	eeb0 0b47 	vmov.f64	d0, d7
 8001382:	f010 ff55 	bl	8012230 <pow>
 8001386:	eeb0 7b40 	vmov.f64	d7, d0
 800138a:	ed9f 6bd9 	vldr	d6, [pc, #868]	; 80016f0 <cinematicaInversa+0x7f8>
 800138e:	ee37 8b06 	vadd.f64	d8, d7, d6
 8001392:	ed97 7b02 	vldr	d7, [r7, #8]
 8001396:	ed9f 6bd8 	vldr	d6, [pc, #864]	; 80016f8 <cinematicaInversa+0x800>
 800139a:	ee37 7b06 	vadd.f64	d7, d7, d6
 800139e:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80013a2:	eeb0 0b47 	vmov.f64	d0, d7
 80013a6:	f010 ff43 	bl	8012230 <pow>
 80013aa:	eeb0 7b40 	vmov.f64	d7, d0
 80013ae:	ee38 8b07 	vadd.f64	d8, d8, d7
 80013b2:	ed97 7b04 	vldr	d7, [r7, #16]
 80013b6:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80013ba:	eeb0 0b47 	vmov.f64	d0, d7
 80013be:	f010 ff37 	bl	8012230 <pow>
 80013c2:	eeb0 7b40 	vmov.f64	d7, d0
 80013c6:	ee38 7b07 	vadd.f64	d7, d8, d7
 80013ca:	ed9f 6bcd 	vldr	d6, [pc, #820]	; 8001700 <cinematicaInversa+0x808>
 80013ce:	ee37 6b46 	vsub.f64	d6, d7, d6
 80013d2:	ed97 7b04 	vldr	d7, [r7, #16]
 80013d6:	ee37 7b07 	vadd.f64	d7, d7, d7
 80013da:	ee86 5b07 	vdiv.f64	d5, d6, d7
 80013de:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80013e2:	eeb0 0b45 	vmov.f64	d0, d5
 80013e6:	f010 ff23 	bl	8012230 <pow>
 80013ea:	eeb0 7b40 	vmov.f64	d7, d0
 80013ee:	ed9f 6bc0 	vldr	d6, [pc, #768]	; 80016f0 <cinematicaInversa+0x7f8>
 80013f2:	ee37 7b46 	vsub.f64	d7, d7, d6
 80013f6:	4bc5      	ldr	r3, [pc, #788]	; (800170c <cinematicaInversa+0x814>)
 80013f8:	ed83 7b00 	vstr	d7, [r3]
	C3 = pow(R, 2) - pow(L1, 2) + pow(((pow((_Pfin.x + r * C150), 2) + pow((_Pfin.y + r * S150), 2) + pow(_Pfin.z, 2) - pow(L2, 2) - pow(R, 2) + pow(L1, 2)) / (2.0 * _Pfin.z)), 2.0);
 80013fc:	ed97 7b00 	vldr	d7, [r7]
 8001400:	ed9f 6bb9 	vldr	d6, [pc, #740]	; 80016e8 <cinematicaInversa+0x7f0>
 8001404:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001408:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800140c:	eeb0 0b47 	vmov.f64	d0, d7
 8001410:	f010 ff0e 	bl	8012230 <pow>
 8001414:	eeb0 8b40 	vmov.f64	d8, d0
 8001418:	ed97 7b02 	vldr	d7, [r7, #8]
 800141c:	ed9f 6bb6 	vldr	d6, [pc, #728]	; 80016f8 <cinematicaInversa+0x800>
 8001420:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001424:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001428:	eeb0 0b47 	vmov.f64	d0, d7
 800142c:	f010 ff00 	bl	8012230 <pow>
 8001430:	eeb0 7b40 	vmov.f64	d7, d0
 8001434:	ee38 8b07 	vadd.f64	d8, d8, d7
 8001438:	ed97 7b04 	vldr	d7, [r7, #16]
 800143c:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001440:	eeb0 0b47 	vmov.f64	d0, d7
 8001444:	f010 fef4 	bl	8012230 <pow>
 8001448:	eeb0 7b40 	vmov.f64	d7, d0
 800144c:	ee38 7b07 	vadd.f64	d7, d8, d7
 8001450:	ed9f 6bab 	vldr	d6, [pc, #684]	; 8001700 <cinematicaInversa+0x808>
 8001454:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001458:	ed9f 6ba1 	vldr	d6, [pc, #644]	; 80016e0 <cinematicaInversa+0x7e8>
 800145c:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001460:	ed9f 6b9d 	vldr	d6, [pc, #628]	; 80016d8 <cinematicaInversa+0x7e0>
 8001464:	ee37 6b06 	vadd.f64	d6, d7, d6
 8001468:	ed97 7b04 	vldr	d7, [r7, #16]
 800146c:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001470:	ee86 5b07 	vdiv.f64	d5, d6, d7
 8001474:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001478:	eeb0 0b45 	vmov.f64	d0, d5
 800147c:	f010 fed8 	bl	8012230 <pow>
 8001480:	eeb0 7b40 	vmov.f64	d7, d0
 8001484:	ed9f 6b9a 	vldr	d6, [pc, #616]	; 80016f0 <cinematicaInversa+0x7f8>
 8001488:	ee37 7b46 	vsub.f64	d7, d7, d6
 800148c:	4ba0      	ldr	r3, [pc, #640]	; (8001710 <cinematicaInversa+0x818>)
 800148e:	ed83 7b00 	vstr	d7, [r3]

	YJ1_1 = (-B1 - sqrt(pow(B1, 2) - 4 * A1 * C1)) / (2 * A1);
 8001492:	4ba0      	ldr	r3, [pc, #640]	; (8001714 <cinematicaInversa+0x81c>)
 8001494:	ed93 7b00 	vldr	d7, [r3]
 8001498:	eeb1 8b47 	vneg.f64	d8, d7
 800149c:	4b9d      	ldr	r3, [pc, #628]	; (8001714 <cinematicaInversa+0x81c>)
 800149e:	ed93 7b00 	vldr	d7, [r3]
 80014a2:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80014a6:	eeb0 0b47 	vmov.f64	d0, d7
 80014aa:	f010 fec1 	bl	8012230 <pow>
 80014ae:	eeb0 5b40 	vmov.f64	d5, d0
 80014b2:	4b99      	ldr	r3, [pc, #612]	; (8001718 <cinematicaInversa+0x820>)
 80014b4:	ed93 7b00 	vldr	d7, [r3]
 80014b8:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 80014bc:	ee27 6b06 	vmul.f64	d6, d7, d6
 80014c0:	4b91      	ldr	r3, [pc, #580]	; (8001708 <cinematicaInversa+0x810>)
 80014c2:	ed93 7b00 	vldr	d7, [r3]
 80014c6:	ee26 7b07 	vmul.f64	d7, d6, d7
 80014ca:	ee35 7b47 	vsub.f64	d7, d5, d7
 80014ce:	eeb0 0b47 	vmov.f64	d0, d7
 80014d2:	f011 f92d 	bl	8012730 <sqrt>
 80014d6:	eeb0 7b40 	vmov.f64	d7, d0
 80014da:	ee38 5b47 	vsub.f64	d5, d8, d7
 80014de:	4b8e      	ldr	r3, [pc, #568]	; (8001718 <cinematicaInversa+0x820>)
 80014e0:	ed93 7b00 	vldr	d7, [r3]
 80014e4:	ee37 6b07 	vadd.f64	d6, d7, d7
 80014e8:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80014ec:	4b8b      	ldr	r3, [pc, #556]	; (800171c <cinematicaInversa+0x824>)
 80014ee:	ed83 7b00 	vstr	d7, [r3]
	YJ1_2 = (-B1 + sqrt(pow(B1, 2) - 4 * A1 * C1)) / (2 * A1);
 80014f2:	4b88      	ldr	r3, [pc, #544]	; (8001714 <cinematicaInversa+0x81c>)
 80014f4:	ed93 7b00 	vldr	d7, [r3]
 80014f8:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80014fc:	eeb0 0b47 	vmov.f64	d0, d7
 8001500:	f010 fe96 	bl	8012230 <pow>
 8001504:	eeb0 5b40 	vmov.f64	d5, d0
 8001508:	4b83      	ldr	r3, [pc, #524]	; (8001718 <cinematicaInversa+0x820>)
 800150a:	ed93 7b00 	vldr	d7, [r3]
 800150e:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 8001512:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001516:	4b7c      	ldr	r3, [pc, #496]	; (8001708 <cinematicaInversa+0x810>)
 8001518:	ed93 7b00 	vldr	d7, [r3]
 800151c:	ee26 7b07 	vmul.f64	d7, d6, d7
 8001520:	ee35 7b47 	vsub.f64	d7, d5, d7
 8001524:	eeb0 0b47 	vmov.f64	d0, d7
 8001528:	f011 f902 	bl	8012730 <sqrt>
 800152c:	eeb0 6b40 	vmov.f64	d6, d0
 8001530:	4b78      	ldr	r3, [pc, #480]	; (8001714 <cinematicaInversa+0x81c>)
 8001532:	ed93 7b00 	vldr	d7, [r3]
 8001536:	ee36 5b47 	vsub.f64	d5, d6, d7
 800153a:	4b77      	ldr	r3, [pc, #476]	; (8001718 <cinematicaInversa+0x820>)
 800153c:	ed93 7b00 	vldr	d7, [r3]
 8001540:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001544:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001548:	4b75      	ldr	r3, [pc, #468]	; (8001720 <cinematicaInversa+0x828>)
 800154a:	ed83 7b00 	vstr	d7, [r3]
	YJ2_1 = (-B2 + sqrt(pow(B2, 2) - 4 * A2 * C2)) / (2 * A2);
 800154e:	4b75      	ldr	r3, [pc, #468]	; (8001724 <cinematicaInversa+0x82c>)
 8001550:	ed93 7b00 	vldr	d7, [r3]
 8001554:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001558:	eeb0 0b47 	vmov.f64	d0, d7
 800155c:	f010 fe68 	bl	8012230 <pow>
 8001560:	eeb0 5b40 	vmov.f64	d5, d0
 8001564:	4b70      	ldr	r3, [pc, #448]	; (8001728 <cinematicaInversa+0x830>)
 8001566:	ed93 7b00 	vldr	d7, [r3]
 800156a:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 800156e:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001572:	4b66      	ldr	r3, [pc, #408]	; (800170c <cinematicaInversa+0x814>)
 8001574:	ed93 7b00 	vldr	d7, [r3]
 8001578:	ee26 7b07 	vmul.f64	d7, d6, d7
 800157c:	ee35 7b47 	vsub.f64	d7, d5, d7
 8001580:	eeb0 0b47 	vmov.f64	d0, d7
 8001584:	f011 f8d4 	bl	8012730 <sqrt>
 8001588:	eeb0 6b40 	vmov.f64	d6, d0
 800158c:	4b65      	ldr	r3, [pc, #404]	; (8001724 <cinematicaInversa+0x82c>)
 800158e:	ed93 7b00 	vldr	d7, [r3]
 8001592:	ee36 5b47 	vsub.f64	d5, d6, d7
 8001596:	4b64      	ldr	r3, [pc, #400]	; (8001728 <cinematicaInversa+0x830>)
 8001598:	ed93 7b00 	vldr	d7, [r3]
 800159c:	ee37 6b07 	vadd.f64	d6, d7, d7
 80015a0:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80015a4:	4b61      	ldr	r3, [pc, #388]	; (800172c <cinematicaInversa+0x834>)
 80015a6:	ed83 7b00 	vstr	d7, [r3]
	YJ2_2 = (-B2 - sqrt(pow(B2, 2) - 4 * A2 * C2)) / (2 * A2);
 80015aa:	4b5e      	ldr	r3, [pc, #376]	; (8001724 <cinematicaInversa+0x82c>)
 80015ac:	ed93 7b00 	vldr	d7, [r3]
 80015b0:	eeb1 8b47 	vneg.f64	d8, d7
 80015b4:	4b5b      	ldr	r3, [pc, #364]	; (8001724 <cinematicaInversa+0x82c>)
 80015b6:	ed93 7b00 	vldr	d7, [r3]
 80015ba:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80015be:	eeb0 0b47 	vmov.f64	d0, d7
 80015c2:	f010 fe35 	bl	8012230 <pow>
 80015c6:	eeb0 5b40 	vmov.f64	d5, d0
 80015ca:	4b57      	ldr	r3, [pc, #348]	; (8001728 <cinematicaInversa+0x830>)
 80015cc:	ed93 7b00 	vldr	d7, [r3]
 80015d0:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 80015d4:	ee27 6b06 	vmul.f64	d6, d7, d6
 80015d8:	4b4c      	ldr	r3, [pc, #304]	; (800170c <cinematicaInversa+0x814>)
 80015da:	ed93 7b00 	vldr	d7, [r3]
 80015de:	ee26 7b07 	vmul.f64	d7, d6, d7
 80015e2:	ee35 7b47 	vsub.f64	d7, d5, d7
 80015e6:	eeb0 0b47 	vmov.f64	d0, d7
 80015ea:	f011 f8a1 	bl	8012730 <sqrt>
 80015ee:	eeb0 7b40 	vmov.f64	d7, d0
 80015f2:	ee38 5b47 	vsub.f64	d5, d8, d7
 80015f6:	4b4c      	ldr	r3, [pc, #304]	; (8001728 <cinematicaInversa+0x830>)
 80015f8:	ed93 7b00 	vldr	d7, [r3]
 80015fc:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001600:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001604:	4b4a      	ldr	r3, [pc, #296]	; (8001730 <cinematicaInversa+0x838>)
 8001606:	ed83 7b00 	vstr	d7, [r3]
	YJ3_1 = (-B3 + sqrt(pow(B3, 2) - 4 * A3 * C3)) / (2 * A3);
 800160a:	4b4a      	ldr	r3, [pc, #296]	; (8001734 <cinematicaInversa+0x83c>)
 800160c:	ed93 7b00 	vldr	d7, [r3]
 8001610:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001614:	eeb0 0b47 	vmov.f64	d0, d7
 8001618:	f010 fe0a 	bl	8012230 <pow>
 800161c:	eeb0 5b40 	vmov.f64	d5, d0
 8001620:	4b45      	ldr	r3, [pc, #276]	; (8001738 <cinematicaInversa+0x840>)
 8001622:	ed93 7b00 	vldr	d7, [r3]
 8001626:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 800162a:	ee27 6b06 	vmul.f64	d6, d7, d6
 800162e:	4b38      	ldr	r3, [pc, #224]	; (8001710 <cinematicaInversa+0x818>)
 8001630:	ed93 7b00 	vldr	d7, [r3]
 8001634:	ee26 7b07 	vmul.f64	d7, d6, d7
 8001638:	ee35 7b47 	vsub.f64	d7, d5, d7
 800163c:	eeb0 0b47 	vmov.f64	d0, d7
 8001640:	f011 f876 	bl	8012730 <sqrt>
 8001644:	eeb0 6b40 	vmov.f64	d6, d0
 8001648:	4b3a      	ldr	r3, [pc, #232]	; (8001734 <cinematicaInversa+0x83c>)
 800164a:	ed93 7b00 	vldr	d7, [r3]
 800164e:	ee36 5b47 	vsub.f64	d5, d6, d7
 8001652:	4b39      	ldr	r3, [pc, #228]	; (8001738 <cinematicaInversa+0x840>)
 8001654:	ed93 7b00 	vldr	d7, [r3]
 8001658:	ee37 6b07 	vadd.f64	d6, d7, d7
 800165c:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001660:	4b36      	ldr	r3, [pc, #216]	; (800173c <cinematicaInversa+0x844>)
 8001662:	ed83 7b00 	vstr	d7, [r3]
	YJ3_2 = (-B3 - sqrt(pow(B3, 2) - 4 * A3 * C3)) / (2 * A3);
 8001666:	4b33      	ldr	r3, [pc, #204]	; (8001734 <cinematicaInversa+0x83c>)
 8001668:	ed93 7b00 	vldr	d7, [r3]
 800166c:	eeb1 8b47 	vneg.f64	d8, d7
 8001670:	4b30      	ldr	r3, [pc, #192]	; (8001734 <cinematicaInversa+0x83c>)
 8001672:	ed93 7b00 	vldr	d7, [r3]
 8001676:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800167a:	eeb0 0b47 	vmov.f64	d0, d7
 800167e:	f010 fdd7 	bl	8012230 <pow>
 8001682:	eeb0 5b40 	vmov.f64	d5, d0
 8001686:	4b2c      	ldr	r3, [pc, #176]	; (8001738 <cinematicaInversa+0x840>)
 8001688:	ed93 7b00 	vldr	d7, [r3]
 800168c:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 8001690:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001694:	4b1e      	ldr	r3, [pc, #120]	; (8001710 <cinematicaInversa+0x818>)
 8001696:	ed93 7b00 	vldr	d7, [r3]
 800169a:	ee26 7b07 	vmul.f64	d7, d6, d7
 800169e:	ee35 7b47 	vsub.f64	d7, d5, d7
 80016a2:	eeb0 0b47 	vmov.f64	d0, d7
 80016a6:	f011 f843 	bl	8012730 <sqrt>
 80016aa:	eeb0 7b40 	vmov.f64	d7, d0
 80016ae:	ee38 5b47 	vsub.f64	d5, d8, d7
 80016b2:	4b21      	ldr	r3, [pc, #132]	; (8001738 <cinematicaInversa+0x840>)
 80016b4:	ed93 7b00 	vldr	d7, [r3]
 80016b8:	ee37 6b07 	vadd.f64	d6, d7, d7
 80016bc:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80016c0:	4b1f      	ldr	r3, [pc, #124]	; (8001740 <cinematicaInversa+0x848>)
 80016c2:	ed83 7b00 	vstr	d7, [r3]

	XJ1_1 = 0;
 80016c6:	491f      	ldr	r1, [pc, #124]	; (8001744 <cinematicaInversa+0x84c>)
 80016c8:	f04f 0200 	mov.w	r2, #0
 80016cc:	f04f 0300 	mov.w	r3, #0
 80016d0:	e9c1 2300 	strd	r2, r3, [r1]
 80016d4:	e038      	b.n	8001748 <cinematicaInversa+0x850>
 80016d6:	bf00      	nop
 80016d8:	47ae147c 	.word	0x47ae147c
 80016dc:	3fc47ae1 	.word	0x3fc47ae1
 80016e0:	93d96639 	.word	0x93d96639
 80016e4:	3f9ce6c0 	.word	0x3f9ce6c0
 80016e8:	5625749b 	.word	0x5625749b
 80016ec:	3faf09d1 	.word	0x3faf09d1
 80016f0:	3532e7b5 	.word	0x3532e7b5
 80016f4:	3fc0de09 	.word	0x3fc0de09
 80016f8:	1eb851ec 	.word	0x1eb851ec
 80016fc:	3fa1eb85 	.word	0x3fa1eb85
 8001700:	70a3d70a 	.word	0x70a3d70a
 8001704:	3fd70a3d 	.word	0x3fd70a3d
 8001708:	240002c8 	.word	0x240002c8
 800170c:	24000310 	.word	0x24000310
 8001710:	24000358 	.word	0x24000358
 8001714:	240002c0 	.word	0x240002c0
 8001718:	240002b8 	.word	0x240002b8
 800171c:	240002e0 	.word	0x240002e0
 8001720:	240002e8 	.word	0x240002e8
 8001724:	24000308 	.word	0x24000308
 8001728:	24000300 	.word	0x24000300
 800172c:	24000328 	.word	0x24000328
 8001730:	24000330 	.word	0x24000330
 8001734:	24000350 	.word	0x24000350
 8001738:	24000348 	.word	0x24000348
 800173c:	24000370 	.word	0x24000370
 8001740:	24000378 	.word	0x24000378
 8001744:	240002d0 	.word	0x240002d0
	XJ1_2 = 0;
 8001748:	49f1      	ldr	r1, [pc, #964]	; (8001b10 <cinematicaInversa+0xc18>)
 800174a:	f04f 0200 	mov.w	r2, #0
 800174e:	f04f 0300 	mov.w	r3, #0
 8001752:	e9c1 2300 	strd	r2, r3, [r1]
	XJ2_1 = sqrt(3) * YJ2_1;
 8001756:	4bef      	ldr	r3, [pc, #956]	; (8001b14 <cinematicaInversa+0xc1c>)
 8001758:	ed93 7b00 	vldr	d7, [r3]
 800175c:	ed9f 6bd2 	vldr	d6, [pc, #840]	; 8001aa8 <cinematicaInversa+0xbb0>
 8001760:	ee27 7b06 	vmul.f64	d7, d7, d6
 8001764:	4bec      	ldr	r3, [pc, #944]	; (8001b18 <cinematicaInversa+0xc20>)
 8001766:	ed83 7b00 	vstr	d7, [r3]
	XJ2_2 = sqrt(3) * YJ2_2;
 800176a:	4bec      	ldr	r3, [pc, #944]	; (8001b1c <cinematicaInversa+0xc24>)
 800176c:	ed93 7b00 	vldr	d7, [r3]
 8001770:	ed9f 6bcd 	vldr	d6, [pc, #820]	; 8001aa8 <cinematicaInversa+0xbb0>
 8001774:	ee27 7b06 	vmul.f64	d7, d7, d6
 8001778:	4be9      	ldr	r3, [pc, #932]	; (8001b20 <cinematicaInversa+0xc28>)
 800177a:	ed83 7b00 	vstr	d7, [r3]
	XJ3_1 = -sqrt(3) * YJ3_1;
 800177e:	4be9      	ldr	r3, [pc, #932]	; (8001b24 <cinematicaInversa+0xc2c>)
 8001780:	ed93 7b00 	vldr	d7, [r3]
 8001784:	ed9f 6bca 	vldr	d6, [pc, #808]	; 8001ab0 <cinematicaInversa+0xbb8>
 8001788:	ee27 7b06 	vmul.f64	d7, d7, d6
 800178c:	4be6      	ldr	r3, [pc, #920]	; (8001b28 <cinematicaInversa+0xc30>)
 800178e:	ed83 7b00 	vstr	d7, [r3]
	XJ3_2 = -sqrt(3) * YJ3_2;
 8001792:	4be6      	ldr	r3, [pc, #920]	; (8001b2c <cinematicaInversa+0xc34>)
 8001794:	ed93 7b00 	vldr	d7, [r3]
 8001798:	ed9f 6bc5 	vldr	d6, [pc, #788]	; 8001ab0 <cinematicaInversa+0xbb8>
 800179c:	ee27 7b06 	vmul.f64	d7, d7, d6
 80017a0:	4be3      	ldr	r3, [pc, #908]	; (8001b30 <cinematicaInversa+0xc38>)
 80017a2:	ed83 7b00 	vstr	d7, [r3]

	ZJ1_1 = ((YJ1_1 * ((-2 * (R + (_Pfin.y - r))) / (2 * _Pfin.z))) + ((pow((_Pfin.y - r), 2) + pow(_Pfin.z, 2) - pow(L2, 2) + pow(_Pfin.x, 2) - pow(R, 2) + pow(L1, 2)) / (2 * _Pfin.z)));
 80017a6:	ed97 7b02 	vldr	d7, [r7, #8]
 80017aa:	ed9f 6bc3 	vldr	d6, [pc, #780]	; 8001ab8 <cinematicaInversa+0xbc0>
 80017ae:	ee37 7b46 	vsub.f64	d7, d7, d6
 80017b2:	ed9f 6bc3 	vldr	d6, [pc, #780]	; 8001ac0 <cinematicaInversa+0xbc8>
 80017b6:	ee37 7b06 	vadd.f64	d7, d7, d6
 80017ba:	eeb8 6b00 	vmov.f64	d6, #128	; 0xc0000000 -2.0
 80017be:	ee27 5b06 	vmul.f64	d5, d7, d6
 80017c2:	ed97 7b04 	vldr	d7, [r7, #16]
 80017c6:	ee37 7b07 	vadd.f64	d7, d7, d7
 80017ca:	ee85 6b07 	vdiv.f64	d6, d5, d7
 80017ce:	4bd9      	ldr	r3, [pc, #868]	; (8001b34 <cinematicaInversa+0xc3c>)
 80017d0:	ed93 7b00 	vldr	d7, [r3]
 80017d4:	ee26 8b07 	vmul.f64	d8, d6, d7
 80017d8:	ed97 7b02 	vldr	d7, [r7, #8]
 80017dc:	ed9f 6bb6 	vldr	d6, [pc, #728]	; 8001ab8 <cinematicaInversa+0xbc0>
 80017e0:	ee37 7b46 	vsub.f64	d7, d7, d6
 80017e4:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80017e8:	eeb0 0b47 	vmov.f64	d0, d7
 80017ec:	f010 fd20 	bl	8012230 <pow>
 80017f0:	eeb0 9b40 	vmov.f64	d9, d0
 80017f4:	ed97 7b04 	vldr	d7, [r7, #16]
 80017f8:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80017fc:	eeb0 0b47 	vmov.f64	d0, d7
 8001800:	f010 fd16 	bl	8012230 <pow>
 8001804:	eeb0 7b40 	vmov.f64	d7, d0
 8001808:	ee39 7b07 	vadd.f64	d7, d9, d7
 800180c:	ed9f 6bae 	vldr	d6, [pc, #696]	; 8001ac8 <cinematicaInversa+0xbd0>
 8001810:	ee37 9b46 	vsub.f64	d9, d7, d6
 8001814:	ed97 7b00 	vldr	d7, [r7]
 8001818:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800181c:	eeb0 0b47 	vmov.f64	d0, d7
 8001820:	f010 fd06 	bl	8012230 <pow>
 8001824:	eeb0 7b40 	vmov.f64	d7, d0
 8001828:	ee39 7b07 	vadd.f64	d7, d9, d7
 800182c:	ed9f 6ba8 	vldr	d6, [pc, #672]	; 8001ad0 <cinematicaInversa+0xbd8>
 8001830:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001834:	ed9f 6ba8 	vldr	d6, [pc, #672]	; 8001ad8 <cinematicaInversa+0xbe0>
 8001838:	ee37 5b06 	vadd.f64	d5, d7, d6
 800183c:	ed97 7b04 	vldr	d7, [r7, #16]
 8001840:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001844:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001848:	ee38 7b07 	vadd.f64	d7, d8, d7
 800184c:	4bba      	ldr	r3, [pc, #744]	; (8001b38 <cinematicaInversa+0xc40>)
 800184e:	ed83 7b00 	vstr	d7, [r3]
	ZJ1_2 = ((YJ1_2 * ((-2 * (R + (_Pfin.y - r))) / (2 * _Pfin.z))) + ((pow((_Pfin.y - r), 2) + pow(_Pfin.z, 2) - pow(L2, 2) + pow(_Pfin.x, 2) - pow(R, 2) + pow(L1, 2)) / (2 * _Pfin.z)));
 8001852:	ed97 7b02 	vldr	d7, [r7, #8]
 8001856:	ed9f 6b98 	vldr	d6, [pc, #608]	; 8001ab8 <cinematicaInversa+0xbc0>
 800185a:	ee37 7b46 	vsub.f64	d7, d7, d6
 800185e:	ed9f 6b98 	vldr	d6, [pc, #608]	; 8001ac0 <cinematicaInversa+0xbc8>
 8001862:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001866:	eeb8 6b00 	vmov.f64	d6, #128	; 0xc0000000 -2.0
 800186a:	ee27 5b06 	vmul.f64	d5, d7, d6
 800186e:	ed97 7b04 	vldr	d7, [r7, #16]
 8001872:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001876:	ee85 6b07 	vdiv.f64	d6, d5, d7
 800187a:	4bb0      	ldr	r3, [pc, #704]	; (8001b3c <cinematicaInversa+0xc44>)
 800187c:	ed93 7b00 	vldr	d7, [r3]
 8001880:	ee26 8b07 	vmul.f64	d8, d6, d7
 8001884:	ed97 7b02 	vldr	d7, [r7, #8]
 8001888:	ed9f 6b8b 	vldr	d6, [pc, #556]	; 8001ab8 <cinematicaInversa+0xbc0>
 800188c:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001890:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001894:	eeb0 0b47 	vmov.f64	d0, d7
 8001898:	f010 fcca 	bl	8012230 <pow>
 800189c:	eeb0 9b40 	vmov.f64	d9, d0
 80018a0:	ed97 7b04 	vldr	d7, [r7, #16]
 80018a4:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80018a8:	eeb0 0b47 	vmov.f64	d0, d7
 80018ac:	f010 fcc0 	bl	8012230 <pow>
 80018b0:	eeb0 7b40 	vmov.f64	d7, d0
 80018b4:	ee39 7b07 	vadd.f64	d7, d9, d7
 80018b8:	ed9f 6b83 	vldr	d6, [pc, #524]	; 8001ac8 <cinematicaInversa+0xbd0>
 80018bc:	ee37 9b46 	vsub.f64	d9, d7, d6
 80018c0:	ed97 7b00 	vldr	d7, [r7]
 80018c4:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80018c8:	eeb0 0b47 	vmov.f64	d0, d7
 80018cc:	f010 fcb0 	bl	8012230 <pow>
 80018d0:	eeb0 7b40 	vmov.f64	d7, d0
 80018d4:	ee39 7b07 	vadd.f64	d7, d9, d7
 80018d8:	ed9f 6b7d 	vldr	d6, [pc, #500]	; 8001ad0 <cinematicaInversa+0xbd8>
 80018dc:	ee37 7b46 	vsub.f64	d7, d7, d6
 80018e0:	ed9f 6b7d 	vldr	d6, [pc, #500]	; 8001ad8 <cinematicaInversa+0xbe0>
 80018e4:	ee37 5b06 	vadd.f64	d5, d7, d6
 80018e8:	ed97 7b04 	vldr	d7, [r7, #16]
 80018ec:	ee37 6b07 	vadd.f64	d6, d7, d7
 80018f0:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80018f4:	ee38 7b07 	vadd.f64	d7, d8, d7
 80018f8:	4b91      	ldr	r3, [pc, #580]	; (8001b40 <cinematicaInversa+0xc48>)
 80018fa:	ed83 7b00 	vstr	d7, [r3]
	ZJ2_1 = YJ2_1 * (((2 * sqrt(3.0) * R * C30 + 2.0 * R * S30) + (-2 * sqrt(3) * (_Pfin.x + r * C30) - 2.0 * (_Pfin.y + r * S30))) / (2 * _Pfin.z)) + ((-pow(R, 2) + pow(L1, 2) + pow((_Pfin.x + r * C30), 2) + pow((_Pfin.y + r * S30), 2) + pow(_Pfin.z, 2) - pow(L2, 2)) / (2 * _Pfin.z));
 80018fe:	ed97 7b00 	vldr	d7, [r7]
 8001902:	ed9f 6b77 	vldr	d6, [pc, #476]	; 8001ae0 <cinematicaInversa+0xbe8>
 8001906:	ee37 7b06 	vadd.f64	d7, d7, d6
 800190a:	ed9f 6b77 	vldr	d6, [pc, #476]	; 8001ae8 <cinematicaInversa+0xbf0>
 800190e:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001912:	ed97 7b02 	vldr	d7, [r7, #8]
 8001916:	ed9f 5b76 	vldr	d5, [pc, #472]	; 8001af0 <cinematicaInversa+0xbf8>
 800191a:	ee37 7b05 	vadd.f64	d7, d7, d5
 800191e:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001922:	ee36 7b47 	vsub.f64	d7, d6, d7
 8001926:	ed9f 6b74 	vldr	d6, [pc, #464]	; 8001af8 <cinematicaInversa+0xc00>
 800192a:	ee37 5b06 	vadd.f64	d5, d7, d6
 800192e:	ed97 7b04 	vldr	d7, [r7, #16]
 8001932:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001936:	ee85 6b07 	vdiv.f64	d6, d5, d7
 800193a:	4b76      	ldr	r3, [pc, #472]	; (8001b14 <cinematicaInversa+0xc1c>)
 800193c:	ed93 7b00 	vldr	d7, [r3]
 8001940:	ee26 8b07 	vmul.f64	d8, d6, d7
 8001944:	ed97 7b00 	vldr	d7, [r7]
 8001948:	ed9f 6b65 	vldr	d6, [pc, #404]	; 8001ae0 <cinematicaInversa+0xbe8>
 800194c:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001950:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001954:	eeb0 0b47 	vmov.f64	d0, d7
 8001958:	f010 fc6a 	bl	8012230 <pow>
 800195c:	eeb0 7b40 	vmov.f64	d7, d0
 8001960:	ed9f 6b67 	vldr	d6, [pc, #412]	; 8001b00 <cinematicaInversa+0xc08>
 8001964:	ee37 9b06 	vadd.f64	d9, d7, d6
 8001968:	ed97 7b02 	vldr	d7, [r7, #8]
 800196c:	ed9f 6b60 	vldr	d6, [pc, #384]	; 8001af0 <cinematicaInversa+0xbf8>
 8001970:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001974:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001978:	eeb0 0b47 	vmov.f64	d0, d7
 800197c:	f010 fc58 	bl	8012230 <pow>
 8001980:	eeb0 7b40 	vmov.f64	d7, d0
 8001984:	ee39 9b07 	vadd.f64	d9, d9, d7
 8001988:	ed97 7b04 	vldr	d7, [r7, #16]
 800198c:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001990:	eeb0 0b47 	vmov.f64	d0, d7
 8001994:	f010 fc4c 	bl	8012230 <pow>
 8001998:	eeb0 7b40 	vmov.f64	d7, d0
 800199c:	ee39 7b07 	vadd.f64	d7, d9, d7
 80019a0:	ed9f 6b49 	vldr	d6, [pc, #292]	; 8001ac8 <cinematicaInversa+0xbd0>
 80019a4:	ee37 5b46 	vsub.f64	d5, d7, d6
 80019a8:	ed97 7b04 	vldr	d7, [r7, #16]
 80019ac:	ee37 6b07 	vadd.f64	d6, d7, d7
 80019b0:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80019b4:	ee38 7b07 	vadd.f64	d7, d8, d7
 80019b8:	4b62      	ldr	r3, [pc, #392]	; (8001b44 <cinematicaInversa+0xc4c>)
 80019ba:	ed83 7b00 	vstr	d7, [r3]
	ZJ2_2 = YJ2_2 * (((2 * sqrt(3.0) * R * C30 + 2.0 * R * S30) + (-2 * sqrt(3) * (_Pfin.x + r * C30) - 2.0 * (_Pfin.y + r * S30))) / (2 * _Pfin.z)) + ((-pow(R, 2) + pow(L1, 2) + pow((_Pfin.x + r * C30), 2) + pow((_Pfin.y + r * S30), 2) + pow(_Pfin.z, 2) - pow(L2, 2)) / (2 * _Pfin.z));
 80019be:	ed97 7b00 	vldr	d7, [r7]
 80019c2:	ed9f 6b47 	vldr	d6, [pc, #284]	; 8001ae0 <cinematicaInversa+0xbe8>
 80019c6:	ee37 7b06 	vadd.f64	d7, d7, d6
 80019ca:	ed9f 6b47 	vldr	d6, [pc, #284]	; 8001ae8 <cinematicaInversa+0xbf0>
 80019ce:	ee27 6b06 	vmul.f64	d6, d7, d6
 80019d2:	ed97 7b02 	vldr	d7, [r7, #8]
 80019d6:	ed9f 5b46 	vldr	d5, [pc, #280]	; 8001af0 <cinematicaInversa+0xbf8>
 80019da:	ee37 7b05 	vadd.f64	d7, d7, d5
 80019de:	ee37 7b07 	vadd.f64	d7, d7, d7
 80019e2:	ee36 7b47 	vsub.f64	d7, d6, d7
 80019e6:	ed9f 6b44 	vldr	d6, [pc, #272]	; 8001af8 <cinematicaInversa+0xc00>
 80019ea:	ee37 5b06 	vadd.f64	d5, d7, d6
 80019ee:	ed97 7b04 	vldr	d7, [r7, #16]
 80019f2:	ee37 7b07 	vadd.f64	d7, d7, d7
 80019f6:	ee85 6b07 	vdiv.f64	d6, d5, d7
 80019fa:	4b48      	ldr	r3, [pc, #288]	; (8001b1c <cinematicaInversa+0xc24>)
 80019fc:	ed93 7b00 	vldr	d7, [r3]
 8001a00:	ee26 8b07 	vmul.f64	d8, d6, d7
 8001a04:	ed97 7b00 	vldr	d7, [r7]
 8001a08:	ed9f 6b35 	vldr	d6, [pc, #212]	; 8001ae0 <cinematicaInversa+0xbe8>
 8001a0c:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001a10:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001a14:	eeb0 0b47 	vmov.f64	d0, d7
 8001a18:	f010 fc0a 	bl	8012230 <pow>
 8001a1c:	eeb0 7b40 	vmov.f64	d7, d0
 8001a20:	ed9f 6b37 	vldr	d6, [pc, #220]	; 8001b00 <cinematicaInversa+0xc08>
 8001a24:	ee37 9b06 	vadd.f64	d9, d7, d6
 8001a28:	ed97 7b02 	vldr	d7, [r7, #8]
 8001a2c:	ed9f 6b30 	vldr	d6, [pc, #192]	; 8001af0 <cinematicaInversa+0xbf8>
 8001a30:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001a34:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001a38:	eeb0 0b47 	vmov.f64	d0, d7
 8001a3c:	f010 fbf8 	bl	8012230 <pow>
 8001a40:	eeb0 7b40 	vmov.f64	d7, d0
 8001a44:	ee39 9b07 	vadd.f64	d9, d9, d7
 8001a48:	ed97 7b04 	vldr	d7, [r7, #16]
 8001a4c:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001a50:	eeb0 0b47 	vmov.f64	d0, d7
 8001a54:	f010 fbec 	bl	8012230 <pow>
 8001a58:	eeb0 7b40 	vmov.f64	d7, d0
 8001a5c:	ee39 7b07 	vadd.f64	d7, d9, d7
 8001a60:	ed9f 6b19 	vldr	d6, [pc, #100]	; 8001ac8 <cinematicaInversa+0xbd0>
 8001a64:	ee37 5b46 	vsub.f64	d5, d7, d6
 8001a68:	ed97 7b04 	vldr	d7, [r7, #16]
 8001a6c:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001a70:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001a74:	ee38 7b07 	vadd.f64	d7, d8, d7
 8001a78:	4b33      	ldr	r3, [pc, #204]	; (8001b48 <cinematicaInversa+0xc50>)
 8001a7a:	ed83 7b00 	vstr	d7, [r3]
	ZJ3_1 = YJ3_1 * ((2 * sqrt(3.0) * (_Pfin.x + r * C150) - 2.0 * (_Pfin.y + r * S150) - 2.0 * sqrt(3) * R * C150 + 2.0 * R * S150) / (2.0 * _Pfin.z)) + ((pow((_Pfin.x + r * C150), 2.0) + pow((_Pfin.y + r * S150), 2) + pow(_Pfin.z, 2.0) - pow(L2, 2) - pow(R, 2) + pow(L1, 2)) / (2 * _Pfin.z));
 8001a7e:	ed97 7b00 	vldr	d7, [r7]
 8001a82:	ed9f 6b17 	vldr	d6, [pc, #92]	; 8001ae0 <cinematicaInversa+0xbe8>
 8001a86:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001a8a:	ed9f 6b1f 	vldr	d6, [pc, #124]	; 8001b08 <cinematicaInversa+0xc10>
 8001a8e:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001a92:	ed97 7b02 	vldr	d7, [r7, #8]
 8001a96:	ed9f 5b16 	vldr	d5, [pc, #88]	; 8001af0 <cinematicaInversa+0xbf8>
 8001a9a:	ee37 7b05 	vadd.f64	d7, d7, d5
 8001a9e:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001aa2:	ee36 7b47 	vsub.f64	d7, d6, d7
 8001aa6:	e051      	b.n	8001b4c <cinematicaInversa+0xc54>
 8001aa8:	e8584caa 	.word	0xe8584caa
 8001aac:	3ffbb67a 	.word	0x3ffbb67a
 8001ab0:	e8584caa 	.word	0xe8584caa
 8001ab4:	bffbb67a 	.word	0xbffbb67a
 8001ab8:	1eb851ec 	.word	0x1eb851ec
 8001abc:	3fb1eb85 	.word	0x3fb1eb85
 8001ac0:	24dd2f1b 	.word	0x24dd2f1b
 8001ac4:	3fc58106 	.word	0x3fc58106
 8001ac8:	70a3d70a 	.word	0x70a3d70a
 8001acc:	3fd70a3d 	.word	0x3fd70a3d
 8001ad0:	93d96639 	.word	0x93d96639
 8001ad4:	3f9ce6c0 	.word	0x3f9ce6c0
 8001ad8:	47ae147c 	.word	0x47ae147c
 8001adc:	3fc47ae1 	.word	0x3fc47ae1
 8001ae0:	5625749b 	.word	0x5625749b
 8001ae4:	3faf09d1 	.word	0x3faf09d1
 8001ae8:	e8584caa 	.word	0xe8584caa
 8001aec:	c00bb67a 	.word	0xc00bb67a
 8001af0:	1eb851ec 	.word	0x1eb851ec
 8001af4:	3fa1eb85 	.word	0x3fa1eb85
 8001af8:	24dd2f1d 	.word	0x24dd2f1d
 8001afc:	3fe58106 	.word	0x3fe58106
 8001b00:	3532e7b5 	.word	0x3532e7b5
 8001b04:	3fc0de09 	.word	0x3fc0de09
 8001b08:	e8584caa 	.word	0xe8584caa
 8001b0c:	400bb67a 	.word	0x400bb67a
 8001b10:	240002d8 	.word	0x240002d8
 8001b14:	24000328 	.word	0x24000328
 8001b18:	24000318 	.word	0x24000318
 8001b1c:	24000330 	.word	0x24000330
 8001b20:	24000320 	.word	0x24000320
 8001b24:	24000370 	.word	0x24000370
 8001b28:	24000360 	.word	0x24000360
 8001b2c:	24000378 	.word	0x24000378
 8001b30:	24000368 	.word	0x24000368
 8001b34:	240002e0 	.word	0x240002e0
 8001b38:	240002f0 	.word	0x240002f0
 8001b3c:	240002e8 	.word	0x240002e8
 8001b40:	240002f8 	.word	0x240002f8
 8001b44:	24000338 	.word	0x24000338
 8001b48:	24000340 	.word	0x24000340
 8001b4c:	ed9f 6b90 	vldr	d6, [pc, #576]	; 8001d90 <cinematicaInversa+0xe98>
 8001b50:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001b54:	ed9f 6b90 	vldr	d6, [pc, #576]	; 8001d98 <cinematicaInversa+0xea0>
 8001b58:	ee37 5b06 	vadd.f64	d5, d7, d6
 8001b5c:	ed97 7b04 	vldr	d7, [r7, #16]
 8001b60:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001b64:	ee85 6b07 	vdiv.f64	d6, d5, d7
 8001b68:	4b9f      	ldr	r3, [pc, #636]	; (8001de8 <cinematicaInversa+0xef0>)
 8001b6a:	ed93 7b00 	vldr	d7, [r3]
 8001b6e:	ee26 8b07 	vmul.f64	d8, d6, d7
 8001b72:	ed97 7b00 	vldr	d7, [r7]
 8001b76:	ed9f 6b8a 	vldr	d6, [pc, #552]	; 8001da0 <cinematicaInversa+0xea8>
 8001b7a:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001b7e:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001b82:	eeb0 0b47 	vmov.f64	d0, d7
 8001b86:	f010 fb53 	bl	8012230 <pow>
 8001b8a:	eeb0 9b40 	vmov.f64	d9, d0
 8001b8e:	ed97 7b02 	vldr	d7, [r7, #8]
 8001b92:	ed9f 6b85 	vldr	d6, [pc, #532]	; 8001da8 <cinematicaInversa+0xeb0>
 8001b96:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001b9a:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001b9e:	eeb0 0b47 	vmov.f64	d0, d7
 8001ba2:	f010 fb45 	bl	8012230 <pow>
 8001ba6:	eeb0 7b40 	vmov.f64	d7, d0
 8001baa:	ee39 9b07 	vadd.f64	d9, d9, d7
 8001bae:	ed97 7b04 	vldr	d7, [r7, #16]
 8001bb2:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001bb6:	eeb0 0b47 	vmov.f64	d0, d7
 8001bba:	f010 fb39 	bl	8012230 <pow>
 8001bbe:	eeb0 7b40 	vmov.f64	d7, d0
 8001bc2:	ee39 7b07 	vadd.f64	d7, d9, d7
 8001bc6:	ed9f 6b7a 	vldr	d6, [pc, #488]	; 8001db0 <cinematicaInversa+0xeb8>
 8001bca:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001bce:	ed9f 6b7a 	vldr	d6, [pc, #488]	; 8001db8 <cinematicaInversa+0xec0>
 8001bd2:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001bd6:	ed9f 6b7a 	vldr	d6, [pc, #488]	; 8001dc0 <cinematicaInversa+0xec8>
 8001bda:	ee37 5b06 	vadd.f64	d5, d7, d6
 8001bde:	ed97 7b04 	vldr	d7, [r7, #16]
 8001be2:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001be6:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001bea:	ee38 7b07 	vadd.f64	d7, d8, d7
 8001bee:	4b7f      	ldr	r3, [pc, #508]	; (8001dec <cinematicaInversa+0xef4>)
 8001bf0:	ed83 7b00 	vstr	d7, [r3]
	ZJ3_2 = YJ3_2 * ((2 * sqrt(3.0) * (_Pfin.x + r * C150) - 2.0 * (_Pfin.y + r * S150) - 2.0 * sqrt(3) * R * C150 + 2.0 * R * S150) / (2.0 * _Pfin.z)) + ((pow((_Pfin.x + r * C150), 2.0) + pow((_Pfin.y + r * S150), 2) + pow(_Pfin.z, 2) - pow(L2, 2) - pow(R, 2) + pow(L1, 2)) / (2 * _Pfin.z));
 8001bf4:	ed97 7b00 	vldr	d7, [r7]
 8001bf8:	ed9f 6b69 	vldr	d6, [pc, #420]	; 8001da0 <cinematicaInversa+0xea8>
 8001bfc:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001c00:	ed9f 6b71 	vldr	d6, [pc, #452]	; 8001dc8 <cinematicaInversa+0xed0>
 8001c04:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001c08:	ed97 7b02 	vldr	d7, [r7, #8]
 8001c0c:	ed9f 5b66 	vldr	d5, [pc, #408]	; 8001da8 <cinematicaInversa+0xeb0>
 8001c10:	ee37 7b05 	vadd.f64	d7, d7, d5
 8001c14:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001c18:	ee36 7b47 	vsub.f64	d7, d6, d7
 8001c1c:	ed9f 6b5c 	vldr	d6, [pc, #368]	; 8001d90 <cinematicaInversa+0xe98>
 8001c20:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001c24:	ed9f 6b5c 	vldr	d6, [pc, #368]	; 8001d98 <cinematicaInversa+0xea0>
 8001c28:	ee37 5b06 	vadd.f64	d5, d7, d6
 8001c2c:	ed97 7b04 	vldr	d7, [r7, #16]
 8001c30:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001c34:	ee85 6b07 	vdiv.f64	d6, d5, d7
 8001c38:	4b6d      	ldr	r3, [pc, #436]	; (8001df0 <cinematicaInversa+0xef8>)
 8001c3a:	ed93 7b00 	vldr	d7, [r3]
 8001c3e:	ee26 8b07 	vmul.f64	d8, d6, d7
 8001c42:	ed97 7b00 	vldr	d7, [r7]
 8001c46:	ed9f 6b56 	vldr	d6, [pc, #344]	; 8001da0 <cinematicaInversa+0xea8>
 8001c4a:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001c4e:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001c52:	eeb0 0b47 	vmov.f64	d0, d7
 8001c56:	f010 faeb 	bl	8012230 <pow>
 8001c5a:	eeb0 9b40 	vmov.f64	d9, d0
 8001c5e:	ed97 7b02 	vldr	d7, [r7, #8]
 8001c62:	ed9f 6b51 	vldr	d6, [pc, #324]	; 8001da8 <cinematicaInversa+0xeb0>
 8001c66:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001c6a:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001c6e:	eeb0 0b47 	vmov.f64	d0, d7
 8001c72:	f010 fadd 	bl	8012230 <pow>
 8001c76:	eeb0 7b40 	vmov.f64	d7, d0
 8001c7a:	ee39 9b07 	vadd.f64	d9, d9, d7
 8001c7e:	ed97 7b04 	vldr	d7, [r7, #16]
 8001c82:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001c86:	eeb0 0b47 	vmov.f64	d0, d7
 8001c8a:	f010 fad1 	bl	8012230 <pow>
 8001c8e:	eeb0 7b40 	vmov.f64	d7, d0
 8001c92:	ee39 7b07 	vadd.f64	d7, d9, d7
 8001c96:	ed9f 6b46 	vldr	d6, [pc, #280]	; 8001db0 <cinematicaInversa+0xeb8>
 8001c9a:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001c9e:	ed9f 6b46 	vldr	d6, [pc, #280]	; 8001db8 <cinematicaInversa+0xec0>
 8001ca2:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001ca6:	ed9f 6b46 	vldr	d6, [pc, #280]	; 8001dc0 <cinematicaInversa+0xec8>
 8001caa:	ee37 5b06 	vadd.f64	d5, d7, d6
 8001cae:	ed97 7b04 	vldr	d7, [r7, #16]
 8001cb2:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001cb6:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001cba:	ee38 7b07 	vadd.f64	d7, d8, d7
 8001cbe:	4b4d      	ldr	r3, [pc, #308]	; (8001df4 <cinematicaInversa+0xefc>)
 8001cc0:	ed83 7b00 	vstr	d7, [r3]

	titha1 = -1.0 * asin(ZJ1_1 / L1);
 8001cc4:	4b4c      	ldr	r3, [pc, #304]	; (8001df8 <cinematicaInversa+0xf00>)
 8001cc6:	ed93 7b00 	vldr	d7, [r3]
 8001cca:	ed9f 5b41 	vldr	d5, [pc, #260]	; 8001dd0 <cinematicaInversa+0xed8>
 8001cce:	ee87 6b05 	vdiv.f64	d6, d7, d5
 8001cd2:	eeb0 0b46 	vmov.f64	d0, d6
 8001cd6:	f010 fcfd 	bl	80126d4 <asin>
 8001cda:	eeb0 7b40 	vmov.f64	d7, d0
 8001cde:	eeb1 7b47 	vneg.f64	d7, d7
 8001ce2:	4b46      	ldr	r3, [pc, #280]	; (8001dfc <cinematicaInversa+0xf04>)
 8001ce4:	ed83 7b00 	vstr	d7, [r3]
	titha1 = titha1 * RAD_TO_DEG;
 8001ce8:	4b44      	ldr	r3, [pc, #272]	; (8001dfc <cinematicaInversa+0xf04>)
 8001cea:	ed93 7b00 	vldr	d7, [r3]
 8001cee:	ed9f 6b3a 	vldr	d6, [pc, #232]	; 8001dd8 <cinematicaInversa+0xee0>
 8001cf2:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001cf6:	ed9f 5b3a 	vldr	d5, [pc, #232]	; 8001de0 <cinematicaInversa+0xee8>
 8001cfa:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8001cfe:	4b3f      	ldr	r3, [pc, #252]	; (8001dfc <cinematicaInversa+0xf04>)
 8001d00:	ed83 7b00 	vstr	d7, [r3]
	titha2 = -1.0 * asin(ZJ2_1 / L1);
 8001d04:	4b3e      	ldr	r3, [pc, #248]	; (8001e00 <cinematicaInversa+0xf08>)
 8001d06:	ed93 7b00 	vldr	d7, [r3]
 8001d0a:	ed9f 5b31 	vldr	d5, [pc, #196]	; 8001dd0 <cinematicaInversa+0xed8>
 8001d0e:	ee87 6b05 	vdiv.f64	d6, d7, d5
 8001d12:	eeb0 0b46 	vmov.f64	d0, d6
 8001d16:	f010 fcdd 	bl	80126d4 <asin>
 8001d1a:	eeb0 7b40 	vmov.f64	d7, d0
 8001d1e:	eeb1 7b47 	vneg.f64	d7, d7
 8001d22:	4b38      	ldr	r3, [pc, #224]	; (8001e04 <cinematicaInversa+0xf0c>)
 8001d24:	ed83 7b00 	vstr	d7, [r3]
	titha2 = titha2 * RAD_TO_DEG;
 8001d28:	4b36      	ldr	r3, [pc, #216]	; (8001e04 <cinematicaInversa+0xf0c>)
 8001d2a:	ed93 7b00 	vldr	d7, [r3]
 8001d2e:	ed9f 6b2a 	vldr	d6, [pc, #168]	; 8001dd8 <cinematicaInversa+0xee0>
 8001d32:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001d36:	ed9f 5b2a 	vldr	d5, [pc, #168]	; 8001de0 <cinematicaInversa+0xee8>
 8001d3a:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8001d3e:	4b31      	ldr	r3, [pc, #196]	; (8001e04 <cinematicaInversa+0xf0c>)
 8001d40:	ed83 7b00 	vstr	d7, [r3]
	titha3 = -1.0 * asin(ZJ3_1 / L1);
 8001d44:	4b29      	ldr	r3, [pc, #164]	; (8001dec <cinematicaInversa+0xef4>)
 8001d46:	ed93 7b00 	vldr	d7, [r3]
 8001d4a:	ed9f 5b21 	vldr	d5, [pc, #132]	; 8001dd0 <cinematicaInversa+0xed8>
 8001d4e:	ee87 6b05 	vdiv.f64	d6, d7, d5
 8001d52:	eeb0 0b46 	vmov.f64	d0, d6
 8001d56:	f010 fcbd 	bl	80126d4 <asin>
 8001d5a:	eeb0 7b40 	vmov.f64	d7, d0
 8001d5e:	eeb1 7b47 	vneg.f64	d7, d7
 8001d62:	4b29      	ldr	r3, [pc, #164]	; (8001e08 <cinematicaInversa+0xf10>)
 8001d64:	ed83 7b00 	vstr	d7, [r3]
	titha3 = titha3 * RAD_TO_DEG;
 8001d68:	4b27      	ldr	r3, [pc, #156]	; (8001e08 <cinematicaInversa+0xf10>)
 8001d6a:	ed93 7b00 	vldr	d7, [r3]
 8001d6e:	ed9f 6b1a 	vldr	d6, [pc, #104]	; 8001dd8 <cinematicaInversa+0xee0>
 8001d72:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001d76:	ed9f 5b1a 	vldr	d5, [pc, #104]	; 8001de0 <cinematicaInversa+0xee8>
 8001d7a:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8001d7e:	4b22      	ldr	r3, [pc, #136]	; (8001e08 <cinematicaInversa+0xf10>)
 8001d80:	ed83 7b00 	vstr	d7, [r3]
}
 8001d84:	bf00      	nop
 8001d86:	3718      	adds	r7, #24
 8001d88:	46bd      	mov	sp, r7
 8001d8a:	ecbd 8b04 	vpop	{d8-d9}
 8001d8e:	bd80      	pop	{r7, pc}
 8001d90:	9ba5e356 	.word	0x9ba5e356
 8001d94:	3fe020c4 	.word	0x3fe020c4
 8001d98:	24dd2f1b 	.word	0x24dd2f1b
 8001d9c:	3fc58106 	.word	0x3fc58106
 8001da0:	5625749b 	.word	0x5625749b
 8001da4:	3faf09d1 	.word	0x3faf09d1
 8001da8:	1eb851ec 	.word	0x1eb851ec
 8001dac:	3fa1eb85 	.word	0x3fa1eb85
 8001db0:	70a3d70a 	.word	0x70a3d70a
 8001db4:	3fd70a3d 	.word	0x3fd70a3d
 8001db8:	93d96639 	.word	0x93d96639
 8001dbc:	3f9ce6c0 	.word	0x3f9ce6c0
 8001dc0:	47ae147c 	.word	0x47ae147c
 8001dc4:	3fc47ae1 	.word	0x3fc47ae1
 8001dc8:	e8584caa 	.word	0xe8584caa
 8001dcc:	400bb67a 	.word	0x400bb67a
 8001dd0:	9999999a 	.word	0x9999999a
 8001dd4:	3fd99999 	.word	0x3fd99999
 8001dd8:	00000000 	.word	0x00000000
 8001ddc:	40668000 	.word	0x40668000
 8001de0:	54442eea 	.word	0x54442eea
 8001de4:	400921fb 	.word	0x400921fb
 8001de8:	24000370 	.word	0x24000370
 8001dec:	24000380 	.word	0x24000380
 8001df0:	24000378 	.word	0x24000378
 8001df4:	24000388 	.word	0x24000388
 8001df8:	240002f0 	.word	0x240002f0
 8001dfc:	24000628 	.word	0x24000628
 8001e00:	24000338 	.word	0x24000338
 8001e04:	24000630 	.word	0x24000630
 8001e08:	24000638 	.word	0x24000638

08001e0c <MX_GPIO_Init>:
     PH1-OSC_OUT (PH1)   ------> RCC_OSC_OUT
     PA13 (JTMS/SWDIO)   ------> DEBUG_JTMS-SWDIO
     PA14 (JTCK/SWCLK)   ------> DEBUG_JTCK-SWCLK
*/
void MX_GPIO_Init(void)
{
 8001e0c:	b580      	push	{r7, lr}
 8001e0e:	b08c      	sub	sp, #48	; 0x30
 8001e10:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e12:	f107 031c 	add.w	r3, r7, #28
 8001e16:	2200      	movs	r2, #0
 8001e18:	601a      	str	r2, [r3, #0]
 8001e1a:	605a      	str	r2, [r3, #4]
 8001e1c:	609a      	str	r2, [r3, #8]
 8001e1e:	60da      	str	r2, [r3, #12]
 8001e20:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001e22:	4b74      	ldr	r3, [pc, #464]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e24:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e28:	4a72      	ldr	r2, [pc, #456]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e2a:	f043 0310 	orr.w	r3, r3, #16
 8001e2e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001e32:	4b70      	ldr	r3, [pc, #448]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e34:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e38:	f003 0310 	and.w	r3, r3, #16
 8001e3c:	61bb      	str	r3, [r7, #24]
 8001e3e:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e40:	4b6c      	ldr	r3, [pc, #432]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e42:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e46:	4a6b      	ldr	r2, [pc, #428]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e48:	f043 0304 	orr.w	r3, r3, #4
 8001e4c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001e50:	4b68      	ldr	r3, [pc, #416]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e52:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e56:	f003 0304 	and.w	r3, r3, #4
 8001e5a:	617b      	str	r3, [r7, #20]
 8001e5c:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e5e:	4b65      	ldr	r3, [pc, #404]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e60:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e64:	4a63      	ldr	r2, [pc, #396]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e66:	f043 0320 	orr.w	r3, r3, #32
 8001e6a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001e6e:	4b61      	ldr	r3, [pc, #388]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e70:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e74:	f003 0320 	and.w	r3, r3, #32
 8001e78:	613b      	str	r3, [r7, #16]
 8001e7a:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001e7c:	4b5d      	ldr	r3, [pc, #372]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e7e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e82:	4a5c      	ldr	r2, [pc, #368]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e84:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001e88:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001e8c:	4b59      	ldr	r3, [pc, #356]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e8e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e92:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001e96:	60fb      	str	r3, [r7, #12]
 8001e98:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e9a:	4b56      	ldr	r3, [pc, #344]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e9c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001ea0:	4a54      	ldr	r2, [pc, #336]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001ea2:	f043 0301 	orr.w	r3, r3, #1
 8001ea6:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001eaa:	4b52      	ldr	r3, [pc, #328]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001eac:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001eb0:	f003 0301 	and.w	r3, r3, #1
 8001eb4:	60bb      	str	r3, [r7, #8]
 8001eb6:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001eb8:	4b4e      	ldr	r3, [pc, #312]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001eba:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001ebe:	4a4d      	ldr	r2, [pc, #308]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001ec0:	f043 0302 	orr.w	r3, r3, #2
 8001ec4:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001ec8:	4b4a      	ldr	r3, [pc, #296]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001eca:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001ece:	f003 0302 	and.w	r3, r3, #2
 8001ed2:	607b      	str	r3, [r7, #4]
 8001ed4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ed6:	4b47      	ldr	r3, [pc, #284]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001ed8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001edc:	4a45      	ldr	r2, [pc, #276]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001ede:	f043 0308 	orr.w	r3, r3, #8
 8001ee2:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001ee6:	4b43      	ldr	r3, [pc, #268]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001ee8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001eec:	f003 0308 	and.w	r3, r3, #8
 8001ef0:	603b      	str	r3, [r7, #0]
 8001ef2:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, S_DirPaP1_Pin|S_DirPaP2_Pin|S_DirPaP3_Pin, GPIO_PIN_RESET);
 8001ef4:	2200      	movs	r2, #0
 8001ef6:	f44f 61e0 	mov.w	r1, #1792	; 0x700
 8001efa:	483f      	ldr	r0, [pc, #252]	; (8001ff8 <MX_GPIO_Init+0x1ec>)
 8001efc:	f006 fbe2 	bl	80086c4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, S_Enable_1_Pin|S_Enable_2_Pin|S_Enable_3_Pin, GPIO_PIN_SET);
 8001f00:	2201      	movs	r2, #1
 8001f02:	2170      	movs	r1, #112	; 0x70
 8001f04:	483d      	ldr	r0, [pc, #244]	; (8001ffc <MX_GPIO_Init+0x1f0>)
 8001f06:	f006 fbdd 	bl	80086c4 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PEPin PEPin PEPin PEPin
                           PEPin PEPin */
  GPIO_InitStruct.Pin = E_EndStop2_Sup_Pin|E_EndStop2_Inf_Pin|E_EndStop3_Sup_Pin|E_EndStop3_Inf_Pin
 8001f0a:	233f      	movs	r3, #63	; 0x3f
 8001f0c:	61fb      	str	r3, [r7, #28]
                          |E_EndStop1_Sup_Pin|E_EndStop1_Inf_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001f0e:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8001f12:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001f14:	2301      	movs	r3, #1
 8001f16:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001f18:	f107 031c 	add.w	r3, r7, #28
 8001f1c:	4619      	mov	r1, r3
 8001f1e:	4838      	ldr	r0, [pc, #224]	; (8002000 <MX_GPIO_Init+0x1f4>)
 8001f20:	f006 fa08 	bl	8008334 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = BUTTON_Pin;
 8001f24:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001f28:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001f2a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001f2e:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8001f30:	2302      	movs	r3, #2
 8001f32:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001f34:	f107 031c 	add.w	r3, r7, #28
 8001f38:	4619      	mov	r1, r3
 8001f3a:	482f      	ldr	r0, [pc, #188]	; (8001ff8 <MX_GPIO_Init+0x1ec>)
 8001f3c:	f006 f9fa 	bl	8008334 <HAL_GPIO_Init>

  /*Configure GPIO pins : PCPin PCPin PCPin */
  GPIO_InitStruct.Pin = S_DirPaP1_Pin|S_DirPaP2_Pin|S_DirPaP3_Pin;
 8001f40:	f44f 63e0 	mov.w	r3, #1792	; 0x700
 8001f44:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f46:	2301      	movs	r3, #1
 8001f48:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001f4a:	2301      	movs	r3, #1
 8001f4c:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f4e:	2300      	movs	r3, #0
 8001f50:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f52:	f107 031c 	add.w	r3, r7, #28
 8001f56:	4619      	mov	r1, r3
 8001f58:	4827      	ldr	r0, [pc, #156]	; (8001ff8 <MX_GPIO_Init+0x1ec>)
 8001f5a:	f006 f9eb 	bl	8008334 <HAL_GPIO_Init>

  /*Configure GPIO pins : PDPin PDPin PDPin */
  GPIO_InitStruct.Pin = S_Enable_1_Pin|S_Enable_2_Pin|S_Enable_3_Pin;
 8001f5e:	2370      	movs	r3, #112	; 0x70
 8001f60:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f62:	2301      	movs	r3, #1
 8001f64:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001f66:	2301      	movs	r3, #1
 8001f68:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f6a:	2300      	movs	r3, #0
 8001f6c:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f6e:	f107 031c 	add.w	r3, r7, #28
 8001f72:	4619      	mov	r1, r3
 8001f74:	4821      	ldr	r0, [pc, #132]	; (8001ffc <MX_GPIO_Init+0x1f0>)
 8001f76:	f006 f9dd 	bl	8008334 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 1, 0);
 8001f7a:	2200      	movs	r2, #0
 8001f7c:	2101      	movs	r1, #1
 8001f7e:	2006      	movs	r0, #6
 8001f80:	f005 fc31 	bl	80077e6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8001f84:	2006      	movs	r0, #6
 8001f86:	f005 fc48 	bl	800781a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI1_IRQn, 1, 0);
 8001f8a:	2200      	movs	r2, #0
 8001f8c:	2101      	movs	r1, #1
 8001f8e:	2007      	movs	r0, #7
 8001f90:	f005 fc29 	bl	80077e6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 8001f94:	2007      	movs	r0, #7
 8001f96:	f005 fc40 	bl	800781a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI2_IRQn, 1, 0);
 8001f9a:	2200      	movs	r2, #0
 8001f9c:	2101      	movs	r1, #1
 8001f9e:	2008      	movs	r0, #8
 8001fa0:	f005 fc21 	bl	80077e6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 8001fa4:	2008      	movs	r0, #8
 8001fa6:	f005 fc38 	bl	800781a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI3_IRQn, 1, 0);
 8001faa:	2200      	movs	r2, #0
 8001fac:	2101      	movs	r1, #1
 8001fae:	2009      	movs	r0, #9
 8001fb0:	f005 fc19 	bl	80077e6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001fb4:	2009      	movs	r0, #9
 8001fb6:	f005 fc30 	bl	800781a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI4_IRQn, 1, 0);
 8001fba:	2200      	movs	r2, #0
 8001fbc:	2101      	movs	r1, #1
 8001fbe:	200a      	movs	r0, #10
 8001fc0:	f005 fc11 	bl	80077e6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 8001fc4:	200a      	movs	r0, #10
 8001fc6:	f005 fc28 	bl	800781a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 1, 0);
 8001fca:	2200      	movs	r2, #0
 8001fcc:	2101      	movs	r1, #1
 8001fce:	2017      	movs	r0, #23
 8001fd0:	f005 fc09 	bl	80077e6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001fd4:	2017      	movs	r0, #23
 8001fd6:	f005 fc20 	bl	800781a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 2, 0);
 8001fda:	2200      	movs	r2, #0
 8001fdc:	2102      	movs	r1, #2
 8001fde:	2028      	movs	r0, #40	; 0x28
 8001fe0:	f005 fc01 	bl	80077e6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001fe4:	2028      	movs	r0, #40	; 0x28
 8001fe6:	f005 fc18 	bl	800781a <HAL_NVIC_EnableIRQ>

}
 8001fea:	bf00      	nop
 8001fec:	3730      	adds	r7, #48	; 0x30
 8001fee:	46bd      	mov	sp, r7
 8001ff0:	bd80      	pop	{r7, pc}
 8001ff2:	bf00      	nop
 8001ff4:	58024400 	.word	0x58024400
 8001ff8:	58020800 	.word	0x58020800
 8001ffc:	58020c00 	.word	0x58020c00
 8002000:	58021000 	.word	0x58021000
 8002004:	00000000 	.word	0x00000000

08002008 <homingAprox>:
#define ES1s_UNPRESSED (HAL_GPIO_ReadPin(E_EndStop1_Sup_GPIO_Port, E_EndStop1_Sup_Pin))
#define ES2s_UNPRESSED (HAL_GPIO_ReadPin(E_EndStop2_Sup_GPIO_Port, E_EndStop2_Sup_Pin))
#define ES3s_UNPRESSED (HAL_GPIO_ReadPin(E_EndStop3_Sup_GPIO_Port, E_EndStop3_Sup_Pin))


void homingAprox(void) {
 8002008:	b580      	push	{r7, lr}
 800200a:	af00      	add	r7, sp, #0


	rpm = 3.0; //Valor a confirmar
 800200c:	4978      	ldr	r1, [pc, #480]	; (80021f0 <homingAprox+0x1e8>)
 800200e:	f04f 0200 	mov.w	r2, #0
 8002012:	4b78      	ldr	r3, [pc, #480]	; (80021f4 <homingAprox+0x1ec>)
 8002014:	e9c1 2300 	strd	r2, r3, [r1]
	homAprox = true;
 8002018:	4b77      	ldr	r3, [pc, #476]	; (80021f8 <homingAprox+0x1f0>)
 800201a:	2201      	movs	r2, #1
 800201c:	701a      	strb	r2, [r3, #0]
	homStart = true;
 800201e:	4b77      	ldr	r3, [pc, #476]	; (80021fc <homingAprox+0x1f4>)
 8002020:	2201      	movs	r2, #1
 8002022:	701a      	strb	r2, [r3, #0]


	HAL_TIM_IC_Stop_IT(&htim2, TIM_CHANNEL_1);//Apago interrupcion input capture motor 1
 8002024:	2100      	movs	r1, #0
 8002026:	4876      	ldr	r0, [pc, #472]	; (8002200 <homingAprox+0x1f8>)
 8002028:	f009 fc2a 	bl	800b880 <HAL_TIM_IC_Stop_IT>
	HAL_TIM_IC_Stop_IT(&htim3, TIM_CHANNEL_1);//Apago interrupcion input capture motor 2
 800202c:	2100      	movs	r1, #0
 800202e:	4875      	ldr	r0, [pc, #468]	; (8002204 <homingAprox+0x1fc>)
 8002030:	f009 fc26 	bl	800b880 <HAL_TIM_IC_Stop_IT>
	HAL_TIM_IC_Stop_IT(&htim4, TIM_CHANNEL_1);//Apago interrupcion input capture motor 3
 8002034:	2100      	movs	r1, #0
 8002036:	4874      	ldr	r0, [pc, #464]	; (8002208 <homingAprox+0x200>)
 8002038:	f009 fc22 	bl	800b880 <HAL_TIM_IC_Stop_IT>
	HAL_NVIC_DisableIRQ(EXTI0_IRQn);	//Apago interrupcion EndStop 1 Superior
 800203c:	2006      	movs	r0, #6
 800203e:	f005 fbfa 	bl	8007836 <HAL_NVIC_DisableIRQ>
	HAL_NVIC_DisableIRQ(EXTI1_IRQn);	//Apago interrupcion EndStop 1 Inferior
 8002042:	2007      	movs	r0, #7
 8002044:	f005 fbf7 	bl	8007836 <HAL_NVIC_DisableIRQ>
	HAL_NVIC_DisableIRQ(EXTI2_IRQn);	//Apago interrupcion EndStop 2 Superior
 8002048:	2008      	movs	r0, #8
 800204a:	f005 fbf4 	bl	8007836 <HAL_NVIC_DisableIRQ>
	HAL_NVIC_DisableIRQ(EXTI3_IRQn);	//Apago interrupcion EndStop 2 Inferior
 800204e:	2009      	movs	r0, #9
 8002050:	f005 fbf1 	bl	8007836 <HAL_NVIC_DisableIRQ>
	HAL_NVIC_DisableIRQ(EXTI4_IRQn);	//Apago interrupcion EndStop 3 Superior
 8002054:	200a      	movs	r0, #10
 8002056:	f005 fbee 	bl	8007836 <HAL_NVIC_DisableIRQ>
	HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);	//Apago interrupcion EndStop 3 Inferior
 800205a:	2017      	movs	r0, #23
 800205c:	f005 fbeb 	bl	8007836 <HAL_NVIC_DisableIRQ>
	//HAL_GPIO_WritePin(S_DirPaP2_GPIO_Port, S_DirPaP2_Pin, GPIO_PIN_RESET);
	//HAL_GPIO_WritePin(S_DirPaP3_GPIO_Port, S_DirPaP3_Pin, GPIO_PIN_RESET);

	//HAL_Delay(50); //50ms para el cambio de estado de DIR

	HAL_TIM_PWM_Stop(&htim12, TIM_CHANNEL_1);
 8002060:	2100      	movs	r1, #0
 8002062:	486a      	ldr	r0, [pc, #424]	; (800220c <homingAprox+0x204>)
 8002064:	f009 f9c4 	bl	800b3f0 <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);
 8002068:	2100      	movs	r1, #0
 800206a:	4869      	ldr	r0, [pc, #420]	; (8002210 <homingAprox+0x208>)
 800206c:	f009 f9c0 	bl	800b3f0 <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 8002070:	2100      	movs	r1, #0
 8002072:	4868      	ldr	r0, [pc, #416]	; (8002214 <homingAprox+0x20c>)
 8002074:	f009 f9bc 	bl	800b3f0 <HAL_TIM_PWM_Stop>

	periodoM[0] = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM12->PSC) + 1.0) * STEPREV)) - 1.0);
 8002078:	4b67      	ldr	r3, [pc, #412]	; (8002218 <homingAprox+0x210>)
 800207a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800207c:	ee07 3a90 	vmov	s15, r3
 8002080:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8002084:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002088:	ee37 6b06 	vadd.f64	d6, d7, d6
 800208c:	4b58      	ldr	r3, [pc, #352]	; (80021f0 <homingAprox+0x1e8>)
 800208e:	ed93 7b00 	vldr	d7, [r3]
 8002092:	ee26 7b07 	vmul.f64	d7, d6, d7
 8002096:	ed9f 6b52 	vldr	d6, [pc, #328]	; 80021e0 <homingAprox+0x1d8>
 800209a:	ee27 6b06 	vmul.f64	d6, d7, d6
 800209e:	ed9f 5b52 	vldr	d5, [pc, #328]	; 80021e8 <homingAprox+0x1e0>
 80020a2:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80020a6:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80020aa:	ee37 7b46 	vsub.f64	d7, d7, d6
 80020ae:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80020b2:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80020b6:	4b59      	ldr	r3, [pc, #356]	; (800221c <homingAprox+0x214>)
 80020b8:	ed83 7b00 	vstr	d7, [r3]
	periodoM[1] = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM13->PSC) + 1.0) * STEPREV)) - 1.0);
 80020bc:	4b58      	ldr	r3, [pc, #352]	; (8002220 <homingAprox+0x218>)
 80020be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80020c0:	ee07 3a90 	vmov	s15, r3
 80020c4:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80020c8:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80020cc:	ee37 6b06 	vadd.f64	d6, d7, d6
 80020d0:	4b47      	ldr	r3, [pc, #284]	; (80021f0 <homingAprox+0x1e8>)
 80020d2:	ed93 7b00 	vldr	d7, [r3]
 80020d6:	ee26 7b07 	vmul.f64	d7, d6, d7
 80020da:	ed9f 6b41 	vldr	d6, [pc, #260]	; 80021e0 <homingAprox+0x1d8>
 80020de:	ee27 6b06 	vmul.f64	d6, d7, d6
 80020e2:	ed9f 5b41 	vldr	d5, [pc, #260]	; 80021e8 <homingAprox+0x1e0>
 80020e6:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80020ea:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80020ee:	ee37 7b46 	vsub.f64	d7, d7, d6
 80020f2:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80020f6:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80020fa:	4b48      	ldr	r3, [pc, #288]	; (800221c <homingAprox+0x214>)
 80020fc:	ed83 7b02 	vstr	d7, [r3, #8]
	periodoM[2] = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM14->PSC) + 1.0) * STEPREV)) - 1.0);
 8002100:	4b48      	ldr	r3, [pc, #288]	; (8002224 <homingAprox+0x21c>)
 8002102:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002104:	ee07 3a90 	vmov	s15, r3
 8002108:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 800210c:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002110:	ee37 6b06 	vadd.f64	d6, d7, d6
 8002114:	4b36      	ldr	r3, [pc, #216]	; (80021f0 <homingAprox+0x1e8>)
 8002116:	ed93 7b00 	vldr	d7, [r3]
 800211a:	ee26 7b07 	vmul.f64	d7, d6, d7
 800211e:	ed9f 6b30 	vldr	d6, [pc, #192]	; 80021e0 <homingAprox+0x1d8>
 8002122:	ee27 6b06 	vmul.f64	d6, d7, d6
 8002126:	ed9f 5b30 	vldr	d5, [pc, #192]	; 80021e8 <homingAprox+0x1e0>
 800212a:	ee85 7b06 	vdiv.f64	d7, d5, d6
 800212e:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002132:	ee37 7b46 	vsub.f64	d7, d7, d6
 8002136:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800213a:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 800213e:	4b37      	ldr	r3, [pc, #220]	; (800221c <homingAprox+0x214>)
 8002140:	ed83 7b04 	vstr	d7, [r3, #16]

	TIM12->ARR = periodoM[0];
 8002144:	4b35      	ldr	r3, [pc, #212]	; (800221c <homingAprox+0x214>)
 8002146:	ed93 7b00 	vldr	d7, [r3]
 800214a:	4b33      	ldr	r3, [pc, #204]	; (8002218 <homingAprox+0x210>)
 800214c:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002150:	ee17 2a90 	vmov	r2, s15
 8002154:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM12->CCR1 = (uint32_t)((double)(TIM12->ARR) / 2.0);
 8002156:	4b30      	ldr	r3, [pc, #192]	; (8002218 <homingAprox+0x210>)
 8002158:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800215a:	ee07 3a90 	vmov	s15, r3
 800215e:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 8002162:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 8002166:	ee86 7b05 	vdiv.f64	d7, d6, d5
 800216a:	4b2b      	ldr	r3, [pc, #172]	; (8002218 <homingAprox+0x210>)
 800216c:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002170:	ee17 2a90 	vmov	r2, s15
 8002174:	635a      	str	r2, [r3, #52]	; 0x34
	TIM13->ARR =periodoM[1];
 8002176:	4b29      	ldr	r3, [pc, #164]	; (800221c <homingAprox+0x214>)
 8002178:	ed93 7b02 	vldr	d7, [r3, #8]
 800217c:	4b28      	ldr	r3, [pc, #160]	; (8002220 <homingAprox+0x218>)
 800217e:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002182:	ee17 2a90 	vmov	r2, s15
 8002186:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM13->CCR1 = (uint32_t)((double)(TIM13->ARR) / 2.0);
 8002188:	4b25      	ldr	r3, [pc, #148]	; (8002220 <homingAprox+0x218>)
 800218a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800218c:	ee07 3a90 	vmov	s15, r3
 8002190:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 8002194:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 8002198:	ee86 7b05 	vdiv.f64	d7, d6, d5
 800219c:	4b20      	ldr	r3, [pc, #128]	; (8002220 <homingAprox+0x218>)
 800219e:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80021a2:	ee17 2a90 	vmov	r2, s15
 80021a6:	635a      	str	r2, [r3, #52]	; 0x34
	TIM14->ARR =periodoM[2];
 80021a8:	4b1c      	ldr	r3, [pc, #112]	; (800221c <homingAprox+0x214>)
 80021aa:	ed93 7b04 	vldr	d7, [r3, #16]
 80021ae:	4b1d      	ldr	r3, [pc, #116]	; (8002224 <homingAprox+0x21c>)
 80021b0:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80021b4:	ee17 2a90 	vmov	r2, s15
 80021b8:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM14->CCR1 = (uint32_t)((double)(TIM14->ARR) / 2.0);
 80021ba:	4b1a      	ldr	r3, [pc, #104]	; (8002224 <homingAprox+0x21c>)
 80021bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80021be:	ee07 3a90 	vmov	s15, r3
 80021c2:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 80021c6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 80021ca:	ee86 7b05 	vdiv.f64	d7, d6, d5
 80021ce:	4b15      	ldr	r3, [pc, #84]	; (8002224 <homingAprox+0x21c>)
 80021d0:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80021d4:	ee17 2a90 	vmov	r2, s15
 80021d8:	635a      	str	r2, [r3, #52]	; 0x34


	while (homAprox) {
 80021da:	e0c8      	b.n	800236e <homingAprox+0x366>
 80021dc:	f3af 8000 	nop.w
 80021e0:	00000000 	.word	0x00000000
 80021e4:	40bf4000 	.word	0x40bf4000
 80021e8:	00000000 	.word	0x00000000
 80021ec:	41ec9c38 	.word	0x41ec9c38
 80021f0:	24000390 	.word	0x24000390
 80021f4:	40080000 	.word	0x40080000
 80021f8:	24000398 	.word	0x24000398
 80021fc:	24000399 	.word	0x24000399
 8002200:	24000814 	.word	0x24000814
 8002204:	24000860 	.word	0x24000860
 8002208:	240008ac 	.word	0x240008ac
 800220c:	24000944 	.word	0x24000944
 8002210:	24000990 	.word	0x24000990
 8002214:	240009dc 	.word	0x240009dc
 8002218:	40001800 	.word	0x40001800
 800221c:	24000748 	.word	0x24000748
 8002220:	40001c00 	.word	0x40001c00
 8002224:	40002000 	.word	0x40002000


		//PREGUNTAR
		if (TIM12->CNT > periodoM[0]) {
 8002228:	4b57      	ldr	r3, [pc, #348]	; (8002388 <homingAprox+0x380>)
 800222a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800222c:	ee07 3a90 	vmov	s15, r3
 8002230:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 8002234:	4b55      	ldr	r3, [pc, #340]	; (800238c <homingAprox+0x384>)
 8002236:	ed93 7b00 	vldr	d7, [r3]
 800223a:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800223e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002242:	dd0c      	ble.n	800225e <homingAprox+0x256>
					TIM12->CNT = periodoM[0] - 1;// Reinicio clock solo si hace falta y a un valor cercano a la interrupcion, para que no haga ese paso de nuevo
 8002244:	4b51      	ldr	r3, [pc, #324]	; (800238c <homingAprox+0x384>)
 8002246:	ed93 7b00 	vldr	d7, [r3]
 800224a:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 800224e:	ee37 7b46 	vsub.f64	d7, d7, d6
 8002252:	4b4d      	ldr	r3, [pc, #308]	; (8002388 <homingAprox+0x380>)
 8002254:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002258:	ee17 2a90 	vmov	r2, s15
 800225c:	625a      	str	r2, [r3, #36]	; 0x24
		}
		if (TIM13->CNT > periodoM[1]) {
 800225e:	4b4c      	ldr	r3, [pc, #304]	; (8002390 <homingAprox+0x388>)
 8002260:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002262:	ee07 3a90 	vmov	s15, r3
 8002266:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 800226a:	4b48      	ldr	r3, [pc, #288]	; (800238c <homingAprox+0x384>)
 800226c:	ed93 7b02 	vldr	d7, [r3, #8]
 8002270:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8002274:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002278:	dd0c      	ble.n	8002294 <homingAprox+0x28c>
					TIM13->CNT = periodoM[1] - 1;// Reinicio clock solo si hace falta y a un valor cercano a la interrupcion, para que no haga ese paso de nuevo
 800227a:	4b44      	ldr	r3, [pc, #272]	; (800238c <homingAprox+0x384>)
 800227c:	ed93 7b02 	vldr	d7, [r3, #8]
 8002280:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002284:	ee37 7b46 	vsub.f64	d7, d7, d6
 8002288:	4b41      	ldr	r3, [pc, #260]	; (8002390 <homingAprox+0x388>)
 800228a:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800228e:	ee17 2a90 	vmov	r2, s15
 8002292:	625a      	str	r2, [r3, #36]	; 0x24
		}
		if (TIM14->CNT > periodoM[2]) {
 8002294:	4b3f      	ldr	r3, [pc, #252]	; (8002394 <homingAprox+0x38c>)
 8002296:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002298:	ee07 3a90 	vmov	s15, r3
 800229c:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 80022a0:	4b3a      	ldr	r3, [pc, #232]	; (800238c <homingAprox+0x384>)
 80022a2:	ed93 7b04 	vldr	d7, [r3, #16]
 80022a6:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80022aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80022ae:	dd0c      	ble.n	80022ca <homingAprox+0x2c2>
					TIM14->CNT = periodoM[2] - 1;// Reinicio clock solo si hace falta y a un valor cercano a la interrupcion, para que no haga ese paso de nuevo
 80022b0:	4b36      	ldr	r3, [pc, #216]	; (800238c <homingAprox+0x384>)
 80022b2:	ed93 7b04 	vldr	d7, [r3, #16]
 80022b6:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80022ba:	ee37 7b46 	vsub.f64	d7, d7, d6
 80022be:	4b35      	ldr	r3, [pc, #212]	; (8002394 <homingAprox+0x38c>)
 80022c0:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80022c4:	ee17 2a90 	vmov	r2, s15
 80022c8:	625a      	str	r2, [r3, #36]	; 0x24
		}



		if (ES1s_PRESSED || ES2s_PRESSED || ES3s_PRESSED){
 80022ca:	2101      	movs	r1, #1
 80022cc:	4832      	ldr	r0, [pc, #200]	; (8002398 <homingAprox+0x390>)
 80022ce:	f006 f9e1 	bl	8008694 <HAL_GPIO_ReadPin>
 80022d2:	4603      	mov	r3, r0
 80022d4:	2b00      	cmp	r3, #0
 80022d6:	d00d      	beq.n	80022f4 <homingAprox+0x2ec>
 80022d8:	2104      	movs	r1, #4
 80022da:	482f      	ldr	r0, [pc, #188]	; (8002398 <homingAprox+0x390>)
 80022dc:	f006 f9da 	bl	8008694 <HAL_GPIO_ReadPin>
 80022e0:	4603      	mov	r3, r0
 80022e2:	2b00      	cmp	r3, #0
 80022e4:	d006      	beq.n	80022f4 <homingAprox+0x2ec>
 80022e6:	2110      	movs	r1, #16
 80022e8:	482b      	ldr	r0, [pc, #172]	; (8002398 <homingAprox+0x390>)
 80022ea:	f006 f9d3 	bl	8008694 <HAL_GPIO_ReadPin>
 80022ee:	4603      	mov	r3, r0
 80022f0:	2b00      	cmp	r3, #0
 80022f2:	d126      	bne.n	8002342 <homingAprox+0x33a>
			HAL_Delay(30);
 80022f4:	201e      	movs	r0, #30
 80022f6:	f005 f947 	bl	8007588 <HAL_Delay>
			if (ES1s_PRESSED || ES2s_PRESSED || ES3s_PRESSED){
 80022fa:	2101      	movs	r1, #1
 80022fc:	4826      	ldr	r0, [pc, #152]	; (8002398 <homingAprox+0x390>)
 80022fe:	f006 f9c9 	bl	8008694 <HAL_GPIO_ReadPin>
 8002302:	4603      	mov	r3, r0
 8002304:	2b00      	cmp	r3, #0
 8002306:	d00d      	beq.n	8002324 <homingAprox+0x31c>
 8002308:	2104      	movs	r1, #4
 800230a:	4823      	ldr	r0, [pc, #140]	; (8002398 <homingAprox+0x390>)
 800230c:	f006 f9c2 	bl	8008694 <HAL_GPIO_ReadPin>
 8002310:	4603      	mov	r3, r0
 8002312:	2b00      	cmp	r3, #0
 8002314:	d006      	beq.n	8002324 <homingAprox+0x31c>
 8002316:	2110      	movs	r1, #16
 8002318:	481f      	ldr	r0, [pc, #124]	; (8002398 <homingAprox+0x390>)
 800231a:	f006 f9bb 	bl	8008694 <HAL_GPIO_ReadPin>
 800231e:	4603      	mov	r3, r0
 8002320:	2b00      	cmp	r3, #0
 8002322:	d10e      	bne.n	8002342 <homingAprox+0x33a>
				HAL_TIM_PWM_Stop(&htim12, TIM_CHANNEL_1);
 8002324:	2100      	movs	r1, #0
 8002326:	481d      	ldr	r0, [pc, #116]	; (800239c <homingAprox+0x394>)
 8002328:	f009 f862 	bl	800b3f0 <HAL_TIM_PWM_Stop>
				HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);
 800232c:	2100      	movs	r1, #0
 800232e:	481c      	ldr	r0, [pc, #112]	; (80023a0 <homingAprox+0x398>)
 8002330:	f009 f85e 	bl	800b3f0 <HAL_TIM_PWM_Stop>
				HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 8002334:	2100      	movs	r1, #0
 8002336:	481b      	ldr	r0, [pc, #108]	; (80023a4 <homingAprox+0x39c>)
 8002338:	f009 f85a 	bl	800b3f0 <HAL_TIM_PWM_Stop>

				homAprox = false;
 800233c:	4b1a      	ldr	r3, [pc, #104]	; (80023a8 <homingAprox+0x3a0>)
 800233e:	2200      	movs	r2, #0
 8002340:	701a      	strb	r2, [r3, #0]

			}
		}

		if(homStart){
 8002342:	4b1a      	ldr	r3, [pc, #104]	; (80023ac <homingAprox+0x3a4>)
 8002344:	781b      	ldrb	r3, [r3, #0]
 8002346:	2b00      	cmp	r3, #0
 8002348:	d00e      	beq.n	8002368 <homingAprox+0x360>

			homStart = false;
 800234a:	4b18      	ldr	r3, [pc, #96]	; (80023ac <homingAprox+0x3a4>)
 800234c:	2200      	movs	r2, #0
 800234e:	701a      	strb	r2, [r3, #0]

			HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 8002350:	2100      	movs	r1, #0
 8002352:	4812      	ldr	r0, [pc, #72]	; (800239c <homingAprox+0x394>)
 8002354:	f008 ff3e 	bl	800b1d4 <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 8002358:	2100      	movs	r1, #0
 800235a:	4811      	ldr	r0, [pc, #68]	; (80023a0 <homingAprox+0x398>)
 800235c:	f008 ff3a 	bl	800b1d4 <HAL_TIM_PWM_Start>
			HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 8002360:	2100      	movs	r1, #0
 8002362:	4810      	ldr	r0, [pc, #64]	; (80023a4 <homingAprox+0x39c>)
 8002364:	f008 ff36 	bl	800b1d4 <HAL_TIM_PWM_Start>
		}
		HAL_Delay(1);
 8002368:	2001      	movs	r0, #1
 800236a:	f005 f90d 	bl	8007588 <HAL_Delay>
	while (homAprox) {
 800236e:	4b0e      	ldr	r3, [pc, #56]	; (80023a8 <homingAprox+0x3a0>)
 8002370:	781b      	ldrb	r3, [r3, #0]
 8002372:	2b00      	cmp	r3, #0
 8002374:	f47f af58 	bne.w	8002228 <homingAprox+0x220>
	}

	HAL_UART_Transmit(&huart3,(uint8_t *)"F\n", 3, 100);
 8002378:	2364      	movs	r3, #100	; 0x64
 800237a:	2203      	movs	r2, #3
 800237c:	490c      	ldr	r1, [pc, #48]	; (80023b0 <homingAprox+0x3a8>)
 800237e:	480d      	ldr	r0, [pc, #52]	; (80023b4 <homingAprox+0x3ac>)
 8002380:	f00a fd7c 	bl	800ce7c <HAL_UART_Transmit>
}
 8002384:	bf00      	nop
 8002386:	bd80      	pop	{r7, pc}
 8002388:	40001800 	.word	0x40001800
 800238c:	24000748 	.word	0x24000748
 8002390:	40001c00 	.word	0x40001c00
 8002394:	40002000 	.word	0x40002000
 8002398:	58021000 	.word	0x58021000
 800239c:	24000944 	.word	0x24000944
 80023a0:	24000990 	.word	0x24000990
 80023a4:	240009dc 	.word	0x240009dc
 80023a8:	24000398 	.word	0x24000398
 80023ac:	24000399 	.word	0x24000399
 80023b0:	08012aa8 	.word	0x08012aa8
 80023b4:	24000bcc 	.word	0x24000bcc

080023b8 <homingArm1>:


void homingArm1(void) {
 80023b8:	b580      	push	{r7, lr}
 80023ba:	af00      	add	r7, sp, #0

	rpm = 3.0;
 80023bc:	4978      	ldr	r1, [pc, #480]	; (80025a0 <homingArm1+0x1e8>)
 80023be:	f04f 0200 	mov.w	r2, #0
 80023c2:	4b78      	ldr	r3, [pc, #480]	; (80025a4 <homingArm1+0x1ec>)
 80023c4:	e9c1 2300 	strd	r2, r3, [r1]
	TIM12->ARR = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM12->PSC) + 1.0) * STEPREV)) - 1.0);
 80023c8:	4b77      	ldr	r3, [pc, #476]	; (80025a8 <homingArm1+0x1f0>)
 80023ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80023cc:	ee07 3a90 	vmov	s15, r3
 80023d0:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80023d4:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80023d8:	ee37 6b06 	vadd.f64	d6, d7, d6
 80023dc:	4b70      	ldr	r3, [pc, #448]	; (80025a0 <homingArm1+0x1e8>)
 80023de:	ed93 7b00 	vldr	d7, [r3]
 80023e2:	ee26 7b07 	vmul.f64	d7, d6, d7
 80023e6:	ed9f 6b6a 	vldr	d6, [pc, #424]	; 8002590 <homingArm1+0x1d8>
 80023ea:	ee27 6b06 	vmul.f64	d6, d7, d6
 80023ee:	ed9f 5b6a 	vldr	d5, [pc, #424]	; 8002598 <homingArm1+0x1e0>
 80023f2:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80023f6:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80023fa:	ee37 7b46 	vsub.f64	d7, d7, d6
 80023fe:	4b6a      	ldr	r3, [pc, #424]	; (80025a8 <homingArm1+0x1f0>)
 8002400:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002404:	ee17 2a90 	vmov	r2, s15
 8002408:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM12->CCR1 = (TIM12->ARR) / 2;
 800240a:	4b67      	ldr	r3, [pc, #412]	; (80025a8 <homingArm1+0x1f0>)
 800240c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800240e:	4a66      	ldr	r2, [pc, #408]	; (80025a8 <homingArm1+0x1f0>)
 8002410:	085b      	lsrs	r3, r3, #1
 8002412:	6353      	str	r3, [r2, #52]	; 0x34


	if (ES1s_PRESSED) {
 8002414:	2101      	movs	r1, #1
 8002416:	4865      	ldr	r0, [pc, #404]	; (80025ac <homingArm1+0x1f4>)
 8002418:	f006 f93c 	bl	8008694 <HAL_GPIO_ReadPin>
 800241c:	4603      	mov	r3, r0
 800241e:	2b00      	cmp	r3, #0
 8002420:	d11e      	bne.n	8002460 <homingArm1+0xa8>

        HAL_UART_Transmit(&huart3,(uint8_t *)"ES1_Pressed\n", 13, 100);
 8002422:	2364      	movs	r3, #100	; 0x64
 8002424:	220d      	movs	r2, #13
 8002426:	4962      	ldr	r1, [pc, #392]	; (80025b0 <homingArm1+0x1f8>)
 8002428:	4862      	ldr	r0, [pc, #392]	; (80025b4 <homingArm1+0x1fc>)
 800242a:	f00a fd27 	bl	800ce7c <HAL_UART_Transmit>

		while(ES1s_PRESSED){
 800242e:	e00f      	b.n	8002450 <homingArm1+0x98>

			HAL_GPIO_WritePin(S_DirPaP1_GPIO_Port, S_DirPaP1_Pin, GPIO_PIN_SET);
 8002430:	2201      	movs	r2, #1
 8002432:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002436:	4860      	ldr	r0, [pc, #384]	; (80025b8 <homingArm1+0x200>)
 8002438:	f006 f944 	bl	80086c4 <HAL_GPIO_WritePin>
			HAL_Delay(0.5); 							//delay cambio de dir
 800243c:	2000      	movs	r0, #0
 800243e:	f005 f8a3 	bl	8007588 <HAL_Delay>
			HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 8002442:	2100      	movs	r1, #0
 8002444:	485d      	ldr	r0, [pc, #372]	; (80025bc <homingArm1+0x204>)
 8002446:	f008 fec5 	bl	800b1d4 <HAL_TIM_PWM_Start>
			HAL_Delay(30);
 800244a:	201e      	movs	r0, #30
 800244c:	f005 f89c 	bl	8007588 <HAL_Delay>
		while(ES1s_PRESSED){
 8002450:	2101      	movs	r1, #1
 8002452:	4856      	ldr	r0, [pc, #344]	; (80025ac <homingArm1+0x1f4>)
 8002454:	f006 f91e 	bl	8008694 <HAL_GPIO_ReadPin>
 8002458:	4603      	mov	r3, r0
 800245a:	2b00      	cmp	r3, #0
 800245c:	d0e8      	beq.n	8002430 <homingArm1+0x78>
 800245e:	e07a      	b.n	8002556 <homingArm1+0x19e>
		}
	}

    else if (ES1s_UNPRESSED) {
 8002460:	2101      	movs	r1, #1
 8002462:	4852      	ldr	r0, [pc, #328]	; (80025ac <homingArm1+0x1f4>)
 8002464:	f006 f916 	bl	8008694 <HAL_GPIO_ReadPin>
 8002468:	4603      	mov	r3, r0
 800246a:	2b00      	cmp	r3, #0
 800246c:	d06d      	beq.n	800254a <homingArm1+0x192>

        while(ES1s_UNPRESSED){
 800246e:	e00f      	b.n	8002490 <homingArm1+0xd8>
            HAL_GPIO_WritePin(S_DirPaP1_GPIO_Port, S_DirPaP1_Pin, GPIO_PIN_RESET);
 8002470:	2200      	movs	r2, #0
 8002472:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002476:	4850      	ldr	r0, [pc, #320]	; (80025b8 <homingArm1+0x200>)
 8002478:	f006 f924 	bl	80086c4 <HAL_GPIO_WritePin>
            HAL_Delay(0.5);
 800247c:	2000      	movs	r0, #0
 800247e:	f005 f883 	bl	8007588 <HAL_Delay>
            HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 8002482:	2100      	movs	r1, #0
 8002484:	484d      	ldr	r0, [pc, #308]	; (80025bc <homingArm1+0x204>)
 8002486:	f008 fea5 	bl	800b1d4 <HAL_TIM_PWM_Start>
            HAL_Delay(30);
 800248a:	201e      	movs	r0, #30
 800248c:	f005 f87c 	bl	8007588 <HAL_Delay>
        while(ES1s_UNPRESSED){
 8002490:	2101      	movs	r1, #1
 8002492:	4846      	ldr	r0, [pc, #280]	; (80025ac <homingArm1+0x1f4>)
 8002494:	f006 f8fe 	bl	8008694 <HAL_GPIO_ReadPin>
 8002498:	4603      	mov	r3, r0
 800249a:	2b00      	cmp	r3, #0
 800249c:	d1e8      	bne.n	8002470 <homingArm1+0xb8>
        }

        HAL_TIM_PWM_Stop(&htim12, TIM_CHANNEL_1);
 800249e:	2100      	movs	r1, #0
 80024a0:	4846      	ldr	r0, [pc, #280]	; (80025bc <homingArm1+0x204>)
 80024a2:	f008 ffa5 	bl	800b3f0 <HAL_TIM_PWM_Stop>

        rpm = 3.0;
 80024a6:	493e      	ldr	r1, [pc, #248]	; (80025a0 <homingArm1+0x1e8>)
 80024a8:	f04f 0200 	mov.w	r2, #0
 80024ac:	4b3d      	ldr	r3, [pc, #244]	; (80025a4 <homingArm1+0x1ec>)
 80024ae:	e9c1 2300 	strd	r2, r3, [r1]
        TIM12->ARR = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM12->PSC) + 1.0) * STEPREV)) - 1.0);
 80024b2:	4b3d      	ldr	r3, [pc, #244]	; (80025a8 <homingArm1+0x1f0>)
 80024b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80024b6:	ee07 3a90 	vmov	s15, r3
 80024ba:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80024be:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80024c2:	ee37 6b06 	vadd.f64	d6, d7, d6
 80024c6:	4b36      	ldr	r3, [pc, #216]	; (80025a0 <homingArm1+0x1e8>)
 80024c8:	ed93 7b00 	vldr	d7, [r3]
 80024cc:	ee26 7b07 	vmul.f64	d7, d6, d7
 80024d0:	ed9f 6b2f 	vldr	d6, [pc, #188]	; 8002590 <homingArm1+0x1d8>
 80024d4:	ee27 6b06 	vmul.f64	d6, d7, d6
 80024d8:	ed9f 5b2f 	vldr	d5, [pc, #188]	; 8002598 <homingArm1+0x1e0>
 80024dc:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80024e0:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80024e4:	ee37 7b46 	vsub.f64	d7, d7, d6
 80024e8:	4b2f      	ldr	r3, [pc, #188]	; (80025a8 <homingArm1+0x1f0>)
 80024ea:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80024ee:	ee17 2a90 	vmov	r2, s15
 80024f2:	62da      	str	r2, [r3, #44]	; 0x2c
        TIM12->CCR1 = (TIM12->ARR) / 2;
 80024f4:	4b2c      	ldr	r3, [pc, #176]	; (80025a8 <homingArm1+0x1f0>)
 80024f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80024f8:	4a2b      	ldr	r2, [pc, #172]	; (80025a8 <homingArm1+0x1f0>)
 80024fa:	085b      	lsrs	r3, r3, #1
 80024fc:	6353      	str	r3, [r2, #52]	; 0x34

        if (ES1s_PRESSED) {
 80024fe:	2101      	movs	r1, #1
 8002500:	482a      	ldr	r0, [pc, #168]	; (80025ac <homingArm1+0x1f4>)
 8002502:	f006 f8c7 	bl	8008694 <HAL_GPIO_ReadPin>
 8002506:	4603      	mov	r3, r0
 8002508:	2b00      	cmp	r3, #0
 800250a:	d124      	bne.n	8002556 <homingArm1+0x19e>

            HAL_UART_Transmit(&huart3,(uint8_t *)"ES1_Pressed\n", 13, 100);
 800250c:	2364      	movs	r3, #100	; 0x64
 800250e:	220d      	movs	r2, #13
 8002510:	4927      	ldr	r1, [pc, #156]	; (80025b0 <homingArm1+0x1f8>)
 8002512:	4828      	ldr	r0, [pc, #160]	; (80025b4 <homingArm1+0x1fc>)
 8002514:	f00a fcb2 	bl	800ce7c <HAL_UART_Transmit>

            while(ES1s_PRESSED){
 8002518:	e00f      	b.n	800253a <homingArm1+0x182>

                HAL_GPIO_WritePin(S_DirPaP1_GPIO_Port, S_DirPaP1_Pin, GPIO_PIN_SET);
 800251a:	2201      	movs	r2, #1
 800251c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002520:	4825      	ldr	r0, [pc, #148]	; (80025b8 <homingArm1+0x200>)
 8002522:	f006 f8cf 	bl	80086c4 <HAL_GPIO_WritePin>
                HAL_Delay(0.5);
 8002526:	2000      	movs	r0, #0
 8002528:	f005 f82e 	bl	8007588 <HAL_Delay>
                HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 800252c:	2100      	movs	r1, #0
 800252e:	4823      	ldr	r0, [pc, #140]	; (80025bc <homingArm1+0x204>)
 8002530:	f008 fe50 	bl	800b1d4 <HAL_TIM_PWM_Start>
                HAL_Delay(30);
 8002534:	201e      	movs	r0, #30
 8002536:	f005 f827 	bl	8007588 <HAL_Delay>
            while(ES1s_PRESSED){
 800253a:	2101      	movs	r1, #1
 800253c:	481b      	ldr	r0, [pc, #108]	; (80025ac <homingArm1+0x1f4>)
 800253e:	f006 f8a9 	bl	8008694 <HAL_GPIO_ReadPin>
 8002542:	4603      	mov	r3, r0
 8002544:	2b00      	cmp	r3, #0
 8002546:	d0e8      	beq.n	800251a <homingArm1+0x162>
 8002548:	e005      	b.n	8002556 <homingArm1+0x19e>
            }

        }

    }else{
		HAL_UART_Transmit(&huart3,(uint8_t *)"Error homArm1\n", 15, 100);
 800254a:	2364      	movs	r3, #100	; 0x64
 800254c:	220f      	movs	r2, #15
 800254e:	491c      	ldr	r1, [pc, #112]	; (80025c0 <homingArm1+0x208>)
 8002550:	4818      	ldr	r0, [pc, #96]	; (80025b4 <homingArm1+0x1fc>)
 8002552:	f00a fc93 	bl	800ce7c <HAL_UART_Transmit>

	}

    HAL_TIM_PWM_Stop(&htim12, TIM_CHANNEL_1);
 8002556:	2100      	movs	r1, #0
 8002558:	4818      	ldr	r0, [pc, #96]	; (80025bc <homingArm1+0x204>)
 800255a:	f008 ff49 	bl	800b3f0 <HAL_TIM_PWM_Stop>
    titha1 = 0;
 800255e:	4919      	ldr	r1, [pc, #100]	; (80025c4 <homingArm1+0x20c>)
 8002560:	f04f 0200 	mov.w	r2, #0
 8002564:	f04f 0300 	mov.w	r3, #0
 8002568:	e9c1 2300 	strd	r2, r3, [r1]
	HAL_Delay(1);
 800256c:	2001      	movs	r0, #1
 800256e:	f005 f80b 	bl	8007588 <HAL_Delay>
    HAL_UART_Transmit(&huart3,(uint8_t *)"endArm1\n", 9, 100);
 8002572:	2364      	movs	r3, #100	; 0x64
 8002574:	2209      	movs	r2, #9
 8002576:	4914      	ldr	r1, [pc, #80]	; (80025c8 <homingArm1+0x210>)
 8002578:	480e      	ldr	r0, [pc, #56]	; (80025b4 <homingArm1+0x1fc>)
 800257a:	f00a fc7f 	bl	800ce7c <HAL_UART_Transmit>
    HAL_TIM_PWM_Stop(&htim12, TIM_CHANNEL_1);
 800257e:	2100      	movs	r1, #0
 8002580:	480e      	ldr	r0, [pc, #56]	; (80025bc <homingArm1+0x204>)
 8002582:	f008 ff35 	bl	800b3f0 <HAL_TIM_PWM_Stop>


}
 8002586:	bf00      	nop
 8002588:	bd80      	pop	{r7, pc}
 800258a:	bf00      	nop
 800258c:	f3af 8000 	nop.w
 8002590:	00000000 	.word	0x00000000
 8002594:	40bf4000 	.word	0x40bf4000
 8002598:	00000000 	.word	0x00000000
 800259c:	41ec9c38 	.word	0x41ec9c38
 80025a0:	24000390 	.word	0x24000390
 80025a4:	40080000 	.word	0x40080000
 80025a8:	40001800 	.word	0x40001800
 80025ac:	58021000 	.word	0x58021000
 80025b0:	08012aac 	.word	0x08012aac
 80025b4:	24000bcc 	.word	0x24000bcc
 80025b8:	58020800 	.word	0x58020800
 80025bc:	24000944 	.word	0x24000944
 80025c0:	08012abc 	.word	0x08012abc
 80025c4:	24000628 	.word	0x24000628
 80025c8:	08012acc 	.word	0x08012acc
 80025cc:	00000000 	.word	0x00000000

080025d0 <homingArm2>:

void homingArm2(void) {
 80025d0:	b580      	push	{r7, lr}
 80025d2:	af00      	add	r7, sp, #0

	rpm = 3.0;
 80025d4:	4978      	ldr	r1, [pc, #480]	; (80027b8 <homingArm2+0x1e8>)
 80025d6:	f04f 0200 	mov.w	r2, #0
 80025da:	4b78      	ldr	r3, [pc, #480]	; (80027bc <homingArm2+0x1ec>)
 80025dc:	e9c1 2300 	strd	r2, r3, [r1]
	TIM13->ARR = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM13->PSC) + 1.0) * STEPREV)) - 1.0);
 80025e0:	4b77      	ldr	r3, [pc, #476]	; (80027c0 <homingArm2+0x1f0>)
 80025e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80025e4:	ee07 3a90 	vmov	s15, r3
 80025e8:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80025ec:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80025f0:	ee37 6b06 	vadd.f64	d6, d7, d6
 80025f4:	4b70      	ldr	r3, [pc, #448]	; (80027b8 <homingArm2+0x1e8>)
 80025f6:	ed93 7b00 	vldr	d7, [r3]
 80025fa:	ee26 7b07 	vmul.f64	d7, d6, d7
 80025fe:	ed9f 6b6a 	vldr	d6, [pc, #424]	; 80027a8 <homingArm2+0x1d8>
 8002602:	ee27 6b06 	vmul.f64	d6, d7, d6
 8002606:	ed9f 5b6a 	vldr	d5, [pc, #424]	; 80027b0 <homingArm2+0x1e0>
 800260a:	ee85 7b06 	vdiv.f64	d7, d5, d6
 800260e:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002612:	ee37 7b46 	vsub.f64	d7, d7, d6
 8002616:	4b6a      	ldr	r3, [pc, #424]	; (80027c0 <homingArm2+0x1f0>)
 8002618:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800261c:	ee17 2a90 	vmov	r2, s15
 8002620:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM13->CCR1 = (TIM13->ARR) / 2;
 8002622:	4b67      	ldr	r3, [pc, #412]	; (80027c0 <homingArm2+0x1f0>)
 8002624:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002626:	4a66      	ldr	r2, [pc, #408]	; (80027c0 <homingArm2+0x1f0>)
 8002628:	085b      	lsrs	r3, r3, #1
 800262a:	6353      	str	r3, [r2, #52]	; 0x34


	if (ES2s_PRESSED) {
 800262c:	2104      	movs	r1, #4
 800262e:	4865      	ldr	r0, [pc, #404]	; (80027c4 <homingArm2+0x1f4>)
 8002630:	f006 f830 	bl	8008694 <HAL_GPIO_ReadPin>
 8002634:	4603      	mov	r3, r0
 8002636:	2b00      	cmp	r3, #0
 8002638:	d11e      	bne.n	8002678 <homingArm2+0xa8>

        HAL_UART_Transmit(&huart3,(uint8_t *)"ES2_Pressed\n", 13, 100);
 800263a:	2364      	movs	r3, #100	; 0x64
 800263c:	220d      	movs	r2, #13
 800263e:	4962      	ldr	r1, [pc, #392]	; (80027c8 <homingArm2+0x1f8>)
 8002640:	4862      	ldr	r0, [pc, #392]	; (80027cc <homingArm2+0x1fc>)
 8002642:	f00a fc1b 	bl	800ce7c <HAL_UART_Transmit>

		while(ES2s_PRESSED){
 8002646:	e00f      	b.n	8002668 <homingArm2+0x98>

			HAL_GPIO_WritePin(S_DirPaP2_GPIO_Port, S_DirPaP2_Pin, GPIO_PIN_SET);
 8002648:	2201      	movs	r2, #1
 800264a:	f44f 7100 	mov.w	r1, #512	; 0x200
 800264e:	4860      	ldr	r0, [pc, #384]	; (80027d0 <homingArm2+0x200>)
 8002650:	f006 f838 	bl	80086c4 <HAL_GPIO_WritePin>
			HAL_Delay(0.5);
 8002654:	2000      	movs	r0, #0
 8002656:	f004 ff97 	bl	8007588 <HAL_Delay>
			HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 800265a:	2100      	movs	r1, #0
 800265c:	485d      	ldr	r0, [pc, #372]	; (80027d4 <homingArm2+0x204>)
 800265e:	f008 fdb9 	bl	800b1d4 <HAL_TIM_PWM_Start>
			HAL_Delay(30);
 8002662:	201e      	movs	r0, #30
 8002664:	f004 ff90 	bl	8007588 <HAL_Delay>
		while(ES2s_PRESSED){
 8002668:	2104      	movs	r1, #4
 800266a:	4856      	ldr	r0, [pc, #344]	; (80027c4 <homingArm2+0x1f4>)
 800266c:	f006 f812 	bl	8008694 <HAL_GPIO_ReadPin>
 8002670:	4603      	mov	r3, r0
 8002672:	2b00      	cmp	r3, #0
 8002674:	d0e8      	beq.n	8002648 <homingArm2+0x78>
 8002676:	e07a      	b.n	800276e <homingArm2+0x19e>
		}
	}

    else if (ES2s_UNPRESSED) {
 8002678:	2104      	movs	r1, #4
 800267a:	4852      	ldr	r0, [pc, #328]	; (80027c4 <homingArm2+0x1f4>)
 800267c:	f006 f80a 	bl	8008694 <HAL_GPIO_ReadPin>
 8002680:	4603      	mov	r3, r0
 8002682:	2b00      	cmp	r3, #0
 8002684:	d06d      	beq.n	8002762 <homingArm2+0x192>

        while(ES2s_UNPRESSED){
 8002686:	e00f      	b.n	80026a8 <homingArm2+0xd8>
            HAL_GPIO_WritePin(S_DirPaP2_GPIO_Port, S_DirPaP2_Pin, GPIO_PIN_RESET);
 8002688:	2200      	movs	r2, #0
 800268a:	f44f 7100 	mov.w	r1, #512	; 0x200
 800268e:	4850      	ldr	r0, [pc, #320]	; (80027d0 <homingArm2+0x200>)
 8002690:	f006 f818 	bl	80086c4 <HAL_GPIO_WritePin>
            HAL_Delay(0.5);
 8002694:	2000      	movs	r0, #0
 8002696:	f004 ff77 	bl	8007588 <HAL_Delay>
            HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 800269a:	2100      	movs	r1, #0
 800269c:	484d      	ldr	r0, [pc, #308]	; (80027d4 <homingArm2+0x204>)
 800269e:	f008 fd99 	bl	800b1d4 <HAL_TIM_PWM_Start>
            HAL_Delay(30);
 80026a2:	201e      	movs	r0, #30
 80026a4:	f004 ff70 	bl	8007588 <HAL_Delay>
        while(ES2s_UNPRESSED){
 80026a8:	2104      	movs	r1, #4
 80026aa:	4846      	ldr	r0, [pc, #280]	; (80027c4 <homingArm2+0x1f4>)
 80026ac:	f005 fff2 	bl	8008694 <HAL_GPIO_ReadPin>
 80026b0:	4603      	mov	r3, r0
 80026b2:	2b00      	cmp	r3, #0
 80026b4:	d1e8      	bne.n	8002688 <homingArm2+0xb8>
        }

        HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);
 80026b6:	2100      	movs	r1, #0
 80026b8:	4846      	ldr	r0, [pc, #280]	; (80027d4 <homingArm2+0x204>)
 80026ba:	f008 fe99 	bl	800b3f0 <HAL_TIM_PWM_Stop>

        rpm = 3.0;
 80026be:	493e      	ldr	r1, [pc, #248]	; (80027b8 <homingArm2+0x1e8>)
 80026c0:	f04f 0200 	mov.w	r2, #0
 80026c4:	4b3d      	ldr	r3, [pc, #244]	; (80027bc <homingArm2+0x1ec>)
 80026c6:	e9c1 2300 	strd	r2, r3, [r1]
        TIM13->ARR = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM13->PSC) + 1.0) * STEPREV)) - 1.0);
 80026ca:	4b3d      	ldr	r3, [pc, #244]	; (80027c0 <homingArm2+0x1f0>)
 80026cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80026ce:	ee07 3a90 	vmov	s15, r3
 80026d2:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80026d6:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80026da:	ee37 6b06 	vadd.f64	d6, d7, d6
 80026de:	4b36      	ldr	r3, [pc, #216]	; (80027b8 <homingArm2+0x1e8>)
 80026e0:	ed93 7b00 	vldr	d7, [r3]
 80026e4:	ee26 7b07 	vmul.f64	d7, d6, d7
 80026e8:	ed9f 6b2f 	vldr	d6, [pc, #188]	; 80027a8 <homingArm2+0x1d8>
 80026ec:	ee27 6b06 	vmul.f64	d6, d7, d6
 80026f0:	ed9f 5b2f 	vldr	d5, [pc, #188]	; 80027b0 <homingArm2+0x1e0>
 80026f4:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80026f8:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80026fc:	ee37 7b46 	vsub.f64	d7, d7, d6
 8002700:	4b2f      	ldr	r3, [pc, #188]	; (80027c0 <homingArm2+0x1f0>)
 8002702:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002706:	ee17 2a90 	vmov	r2, s15
 800270a:	62da      	str	r2, [r3, #44]	; 0x2c
        TIM13->CCR1 = (TIM13->ARR) / 2;
 800270c:	4b2c      	ldr	r3, [pc, #176]	; (80027c0 <homingArm2+0x1f0>)
 800270e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002710:	4a2b      	ldr	r2, [pc, #172]	; (80027c0 <homingArm2+0x1f0>)
 8002712:	085b      	lsrs	r3, r3, #1
 8002714:	6353      	str	r3, [r2, #52]	; 0x34

        if (ES2s_PRESSED) {
 8002716:	2104      	movs	r1, #4
 8002718:	482a      	ldr	r0, [pc, #168]	; (80027c4 <homingArm2+0x1f4>)
 800271a:	f005 ffbb 	bl	8008694 <HAL_GPIO_ReadPin>
 800271e:	4603      	mov	r3, r0
 8002720:	2b00      	cmp	r3, #0
 8002722:	d124      	bne.n	800276e <homingArm2+0x19e>

            HAL_UART_Transmit(&huart3,(uint8_t *)"ES2_Pressed\n", 13, 100);
 8002724:	2364      	movs	r3, #100	; 0x64
 8002726:	220d      	movs	r2, #13
 8002728:	4927      	ldr	r1, [pc, #156]	; (80027c8 <homingArm2+0x1f8>)
 800272a:	4828      	ldr	r0, [pc, #160]	; (80027cc <homingArm2+0x1fc>)
 800272c:	f00a fba6 	bl	800ce7c <HAL_UART_Transmit>

            while(ES2s_PRESSED){
 8002730:	e00f      	b.n	8002752 <homingArm2+0x182>

                HAL_GPIO_WritePin(S_DirPaP2_GPIO_Port, S_DirPaP2_Pin, GPIO_PIN_SET);
 8002732:	2201      	movs	r2, #1
 8002734:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002738:	4825      	ldr	r0, [pc, #148]	; (80027d0 <homingArm2+0x200>)
 800273a:	f005 ffc3 	bl	80086c4 <HAL_GPIO_WritePin>
                HAL_Delay(0.5);
 800273e:	2000      	movs	r0, #0
 8002740:	f004 ff22 	bl	8007588 <HAL_Delay>
                HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 8002744:	2100      	movs	r1, #0
 8002746:	4823      	ldr	r0, [pc, #140]	; (80027d4 <homingArm2+0x204>)
 8002748:	f008 fd44 	bl	800b1d4 <HAL_TIM_PWM_Start>
                HAL_Delay(30);
 800274c:	201e      	movs	r0, #30
 800274e:	f004 ff1b 	bl	8007588 <HAL_Delay>
            while(ES2s_PRESSED){
 8002752:	2104      	movs	r1, #4
 8002754:	481b      	ldr	r0, [pc, #108]	; (80027c4 <homingArm2+0x1f4>)
 8002756:	f005 ff9d 	bl	8008694 <HAL_GPIO_ReadPin>
 800275a:	4603      	mov	r3, r0
 800275c:	2b00      	cmp	r3, #0
 800275e:	d0e8      	beq.n	8002732 <homingArm2+0x162>
 8002760:	e005      	b.n	800276e <homingArm2+0x19e>
            }

        }

    }else{
		HAL_UART_Transmit(&huart3,(uint8_t *)"Error homArm2\n", 15, 100);
 8002762:	2364      	movs	r3, #100	; 0x64
 8002764:	220f      	movs	r2, #15
 8002766:	491c      	ldr	r1, [pc, #112]	; (80027d8 <homingArm2+0x208>)
 8002768:	4818      	ldr	r0, [pc, #96]	; (80027cc <homingArm2+0x1fc>)
 800276a:	f00a fb87 	bl	800ce7c <HAL_UART_Transmit>
	}

    HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);
 800276e:	2100      	movs	r1, #0
 8002770:	4818      	ldr	r0, [pc, #96]	; (80027d4 <homingArm2+0x204>)
 8002772:	f008 fe3d 	bl	800b3f0 <HAL_TIM_PWM_Stop>
    titha2 = 0;
 8002776:	4919      	ldr	r1, [pc, #100]	; (80027dc <homingArm2+0x20c>)
 8002778:	f04f 0200 	mov.w	r2, #0
 800277c:	f04f 0300 	mov.w	r3, #0
 8002780:	e9c1 2300 	strd	r2, r3, [r1]
	HAL_Delay(1);
 8002784:	2001      	movs	r0, #1
 8002786:	f004 feff 	bl	8007588 <HAL_Delay>
    HAL_UART_Transmit(&huart3,(uint8_t *)"endArm2\n", 9, 100);
 800278a:	2364      	movs	r3, #100	; 0x64
 800278c:	2209      	movs	r2, #9
 800278e:	4914      	ldr	r1, [pc, #80]	; (80027e0 <homingArm2+0x210>)
 8002790:	480e      	ldr	r0, [pc, #56]	; (80027cc <homingArm2+0x1fc>)
 8002792:	f00a fb73 	bl	800ce7c <HAL_UART_Transmit>
    HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);
 8002796:	2100      	movs	r1, #0
 8002798:	480e      	ldr	r0, [pc, #56]	; (80027d4 <homingArm2+0x204>)
 800279a:	f008 fe29 	bl	800b3f0 <HAL_TIM_PWM_Stop>

}
 800279e:	bf00      	nop
 80027a0:	bd80      	pop	{r7, pc}
 80027a2:	bf00      	nop
 80027a4:	f3af 8000 	nop.w
 80027a8:	00000000 	.word	0x00000000
 80027ac:	40bf4000 	.word	0x40bf4000
 80027b0:	00000000 	.word	0x00000000
 80027b4:	41ec9c38 	.word	0x41ec9c38
 80027b8:	24000390 	.word	0x24000390
 80027bc:	40080000 	.word	0x40080000
 80027c0:	40001c00 	.word	0x40001c00
 80027c4:	58021000 	.word	0x58021000
 80027c8:	08012ad8 	.word	0x08012ad8
 80027cc:	24000bcc 	.word	0x24000bcc
 80027d0:	58020800 	.word	0x58020800
 80027d4:	24000990 	.word	0x24000990
 80027d8:	08012ae8 	.word	0x08012ae8
 80027dc:	24000630 	.word	0x24000630
 80027e0:	08012af8 	.word	0x08012af8
 80027e4:	00000000 	.word	0x00000000

080027e8 <homingArm3>:

void homingArm3(void) {
 80027e8:	b580      	push	{r7, lr}
 80027ea:	af00      	add	r7, sp, #0

	rpm = 3.0;
 80027ec:	4978      	ldr	r1, [pc, #480]	; (80029d0 <homingArm3+0x1e8>)
 80027ee:	f04f 0200 	mov.w	r2, #0
 80027f2:	4b78      	ldr	r3, [pc, #480]	; (80029d4 <homingArm3+0x1ec>)
 80027f4:	e9c1 2300 	strd	r2, r3, [r1]
	TIM14->ARR = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM14->PSC) + 1.0) * STEPREV)) - 1.0);
 80027f8:	4b77      	ldr	r3, [pc, #476]	; (80029d8 <homingArm3+0x1f0>)
 80027fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80027fc:	ee07 3a90 	vmov	s15, r3
 8002800:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8002804:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002808:	ee37 6b06 	vadd.f64	d6, d7, d6
 800280c:	4b70      	ldr	r3, [pc, #448]	; (80029d0 <homingArm3+0x1e8>)
 800280e:	ed93 7b00 	vldr	d7, [r3]
 8002812:	ee26 7b07 	vmul.f64	d7, d6, d7
 8002816:	ed9f 6b6a 	vldr	d6, [pc, #424]	; 80029c0 <homingArm3+0x1d8>
 800281a:	ee27 6b06 	vmul.f64	d6, d7, d6
 800281e:	ed9f 5b6a 	vldr	d5, [pc, #424]	; 80029c8 <homingArm3+0x1e0>
 8002822:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8002826:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 800282a:	ee37 7b46 	vsub.f64	d7, d7, d6
 800282e:	4b6a      	ldr	r3, [pc, #424]	; (80029d8 <homingArm3+0x1f0>)
 8002830:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002834:	ee17 2a90 	vmov	r2, s15
 8002838:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM14->CCR1 = (TIM14->ARR) / 2;
 800283a:	4b67      	ldr	r3, [pc, #412]	; (80029d8 <homingArm3+0x1f0>)
 800283c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800283e:	4a66      	ldr	r2, [pc, #408]	; (80029d8 <homingArm3+0x1f0>)
 8002840:	085b      	lsrs	r3, r3, #1
 8002842:	6353      	str	r3, [r2, #52]	; 0x34


	if (ES3s_PRESSED) {
 8002844:	2110      	movs	r1, #16
 8002846:	4865      	ldr	r0, [pc, #404]	; (80029dc <homingArm3+0x1f4>)
 8002848:	f005 ff24 	bl	8008694 <HAL_GPIO_ReadPin>
 800284c:	4603      	mov	r3, r0
 800284e:	2b00      	cmp	r3, #0
 8002850:	d11e      	bne.n	8002890 <homingArm3+0xa8>

        HAL_UART_Transmit(&huart3,(uint8_t *)"ES3_Pressed\n", 13, 100);
 8002852:	2364      	movs	r3, #100	; 0x64
 8002854:	220d      	movs	r2, #13
 8002856:	4962      	ldr	r1, [pc, #392]	; (80029e0 <homingArm3+0x1f8>)
 8002858:	4862      	ldr	r0, [pc, #392]	; (80029e4 <homingArm3+0x1fc>)
 800285a:	f00a fb0f 	bl	800ce7c <HAL_UART_Transmit>

		while(ES3s_PRESSED){
 800285e:	e00f      	b.n	8002880 <homingArm3+0x98>

			HAL_GPIO_WritePin(S_DirPaP3_GPIO_Port, S_DirPaP3_Pin, GPIO_PIN_SET);
 8002860:	2201      	movs	r2, #1
 8002862:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002866:	4860      	ldr	r0, [pc, #384]	; (80029e8 <homingArm3+0x200>)
 8002868:	f005 ff2c 	bl	80086c4 <HAL_GPIO_WritePin>
			HAL_Delay(0.5);
 800286c:	2000      	movs	r0, #0
 800286e:	f004 fe8b 	bl	8007588 <HAL_Delay>
			HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 8002872:	2100      	movs	r1, #0
 8002874:	485d      	ldr	r0, [pc, #372]	; (80029ec <homingArm3+0x204>)
 8002876:	f008 fcad 	bl	800b1d4 <HAL_TIM_PWM_Start>
			HAL_Delay(30);
 800287a:	201e      	movs	r0, #30
 800287c:	f004 fe84 	bl	8007588 <HAL_Delay>
		while(ES3s_PRESSED){
 8002880:	2110      	movs	r1, #16
 8002882:	4856      	ldr	r0, [pc, #344]	; (80029dc <homingArm3+0x1f4>)
 8002884:	f005 ff06 	bl	8008694 <HAL_GPIO_ReadPin>
 8002888:	4603      	mov	r3, r0
 800288a:	2b00      	cmp	r3, #0
 800288c:	d0e8      	beq.n	8002860 <homingArm3+0x78>
 800288e:	e07a      	b.n	8002986 <homingArm3+0x19e>
		}
	}

    else if (ES3s_UNPRESSED) {
 8002890:	2110      	movs	r1, #16
 8002892:	4852      	ldr	r0, [pc, #328]	; (80029dc <homingArm3+0x1f4>)
 8002894:	f005 fefe 	bl	8008694 <HAL_GPIO_ReadPin>
 8002898:	4603      	mov	r3, r0
 800289a:	2b00      	cmp	r3, #0
 800289c:	d06d      	beq.n	800297a <homingArm3+0x192>

        while(ES3s_UNPRESSED){
 800289e:	e00f      	b.n	80028c0 <homingArm3+0xd8>
            HAL_GPIO_WritePin(S_DirPaP3_GPIO_Port, S_DirPaP3_Pin, GPIO_PIN_RESET);
 80028a0:	2200      	movs	r2, #0
 80028a2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80028a6:	4850      	ldr	r0, [pc, #320]	; (80029e8 <homingArm3+0x200>)
 80028a8:	f005 ff0c 	bl	80086c4 <HAL_GPIO_WritePin>
            HAL_Delay(0.5);
 80028ac:	2000      	movs	r0, #0
 80028ae:	f004 fe6b 	bl	8007588 <HAL_Delay>
            HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 80028b2:	2100      	movs	r1, #0
 80028b4:	484d      	ldr	r0, [pc, #308]	; (80029ec <homingArm3+0x204>)
 80028b6:	f008 fc8d 	bl	800b1d4 <HAL_TIM_PWM_Start>
            HAL_Delay(30);
 80028ba:	201e      	movs	r0, #30
 80028bc:	f004 fe64 	bl	8007588 <HAL_Delay>
        while(ES3s_UNPRESSED){
 80028c0:	2110      	movs	r1, #16
 80028c2:	4846      	ldr	r0, [pc, #280]	; (80029dc <homingArm3+0x1f4>)
 80028c4:	f005 fee6 	bl	8008694 <HAL_GPIO_ReadPin>
 80028c8:	4603      	mov	r3, r0
 80028ca:	2b00      	cmp	r3, #0
 80028cc:	d1e8      	bne.n	80028a0 <homingArm3+0xb8>
        }

        HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 80028ce:	2100      	movs	r1, #0
 80028d0:	4846      	ldr	r0, [pc, #280]	; (80029ec <homingArm3+0x204>)
 80028d2:	f008 fd8d 	bl	800b3f0 <HAL_TIM_PWM_Stop>

        rpm = 3.0;
 80028d6:	493e      	ldr	r1, [pc, #248]	; (80029d0 <homingArm3+0x1e8>)
 80028d8:	f04f 0200 	mov.w	r2, #0
 80028dc:	4b3d      	ldr	r3, [pc, #244]	; (80029d4 <homingArm3+0x1ec>)
 80028de:	e9c1 2300 	strd	r2, r3, [r1]
        TIM14->ARR = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM14->PSC) + 1.0) * STEPREV)) - 1.0);
 80028e2:	4b3d      	ldr	r3, [pc, #244]	; (80029d8 <homingArm3+0x1f0>)
 80028e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80028e6:	ee07 3a90 	vmov	s15, r3
 80028ea:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80028ee:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80028f2:	ee37 6b06 	vadd.f64	d6, d7, d6
 80028f6:	4b36      	ldr	r3, [pc, #216]	; (80029d0 <homingArm3+0x1e8>)
 80028f8:	ed93 7b00 	vldr	d7, [r3]
 80028fc:	ee26 7b07 	vmul.f64	d7, d6, d7
 8002900:	ed9f 6b2f 	vldr	d6, [pc, #188]	; 80029c0 <homingArm3+0x1d8>
 8002904:	ee27 6b06 	vmul.f64	d6, d7, d6
 8002908:	ed9f 5b2f 	vldr	d5, [pc, #188]	; 80029c8 <homingArm3+0x1e0>
 800290c:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8002910:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002914:	ee37 7b46 	vsub.f64	d7, d7, d6
 8002918:	4b2f      	ldr	r3, [pc, #188]	; (80029d8 <homingArm3+0x1f0>)
 800291a:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800291e:	ee17 2a90 	vmov	r2, s15
 8002922:	62da      	str	r2, [r3, #44]	; 0x2c
        TIM14->CCR1 = (TIM14->ARR) / 2;
 8002924:	4b2c      	ldr	r3, [pc, #176]	; (80029d8 <homingArm3+0x1f0>)
 8002926:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002928:	4a2b      	ldr	r2, [pc, #172]	; (80029d8 <homingArm3+0x1f0>)
 800292a:	085b      	lsrs	r3, r3, #1
 800292c:	6353      	str	r3, [r2, #52]	; 0x34

        if (ES3s_PRESSED) {
 800292e:	2110      	movs	r1, #16
 8002930:	482a      	ldr	r0, [pc, #168]	; (80029dc <homingArm3+0x1f4>)
 8002932:	f005 feaf 	bl	8008694 <HAL_GPIO_ReadPin>
 8002936:	4603      	mov	r3, r0
 8002938:	2b00      	cmp	r3, #0
 800293a:	d124      	bne.n	8002986 <homingArm3+0x19e>

            HAL_UART_Transmit(&huart3,(uint8_t *)"ES3_Pressed\n", 13, 100);
 800293c:	2364      	movs	r3, #100	; 0x64
 800293e:	220d      	movs	r2, #13
 8002940:	4927      	ldr	r1, [pc, #156]	; (80029e0 <homingArm3+0x1f8>)
 8002942:	4828      	ldr	r0, [pc, #160]	; (80029e4 <homingArm3+0x1fc>)
 8002944:	f00a fa9a 	bl	800ce7c <HAL_UART_Transmit>

            while(ES3s_PRESSED){
 8002948:	e00f      	b.n	800296a <homingArm3+0x182>

                HAL_GPIO_WritePin(S_DirPaP3_GPIO_Port, S_DirPaP3_Pin, GPIO_PIN_SET);
 800294a:	2201      	movs	r2, #1
 800294c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002950:	4825      	ldr	r0, [pc, #148]	; (80029e8 <homingArm3+0x200>)
 8002952:	f005 feb7 	bl	80086c4 <HAL_GPIO_WritePin>
                HAL_Delay(0.5);
 8002956:	2000      	movs	r0, #0
 8002958:	f004 fe16 	bl	8007588 <HAL_Delay>
                HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 800295c:	2100      	movs	r1, #0
 800295e:	4823      	ldr	r0, [pc, #140]	; (80029ec <homingArm3+0x204>)
 8002960:	f008 fc38 	bl	800b1d4 <HAL_TIM_PWM_Start>
                HAL_Delay(30);
 8002964:	201e      	movs	r0, #30
 8002966:	f004 fe0f 	bl	8007588 <HAL_Delay>
            while(ES3s_PRESSED){
 800296a:	2110      	movs	r1, #16
 800296c:	481b      	ldr	r0, [pc, #108]	; (80029dc <homingArm3+0x1f4>)
 800296e:	f005 fe91 	bl	8008694 <HAL_GPIO_ReadPin>
 8002972:	4603      	mov	r3, r0
 8002974:	2b00      	cmp	r3, #0
 8002976:	d0e8      	beq.n	800294a <homingArm3+0x162>
 8002978:	e005      	b.n	8002986 <homingArm3+0x19e>
            }

        }

    }else{
		HAL_UART_Transmit(&huart3,(uint8_t *)"Error homArm3\n", 15, 100);
 800297a:	2364      	movs	r3, #100	; 0x64
 800297c:	220f      	movs	r2, #15
 800297e:	491c      	ldr	r1, [pc, #112]	; (80029f0 <homingArm3+0x208>)
 8002980:	4818      	ldr	r0, [pc, #96]	; (80029e4 <homingArm3+0x1fc>)
 8002982:	f00a fa7b 	bl	800ce7c <HAL_UART_Transmit>
	}

    HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 8002986:	2100      	movs	r1, #0
 8002988:	4818      	ldr	r0, [pc, #96]	; (80029ec <homingArm3+0x204>)
 800298a:	f008 fd31 	bl	800b3f0 <HAL_TIM_PWM_Stop>
    titha3 = 0;
 800298e:	4919      	ldr	r1, [pc, #100]	; (80029f4 <homingArm3+0x20c>)
 8002990:	f04f 0200 	mov.w	r2, #0
 8002994:	f04f 0300 	mov.w	r3, #0
 8002998:	e9c1 2300 	strd	r2, r3, [r1]
	HAL_Delay(1);
 800299c:	2001      	movs	r0, #1
 800299e:	f004 fdf3 	bl	8007588 <HAL_Delay>
    HAL_UART_Transmit(&huart3,(uint8_t *)"endArm3\n", 9, 100);
 80029a2:	2364      	movs	r3, #100	; 0x64
 80029a4:	2209      	movs	r2, #9
 80029a6:	4914      	ldr	r1, [pc, #80]	; (80029f8 <homingArm3+0x210>)
 80029a8:	480e      	ldr	r0, [pc, #56]	; (80029e4 <homingArm3+0x1fc>)
 80029aa:	f00a fa67 	bl	800ce7c <HAL_UART_Transmit>
    HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 80029ae:	2100      	movs	r1, #0
 80029b0:	480e      	ldr	r0, [pc, #56]	; (80029ec <homingArm3+0x204>)
 80029b2:	f008 fd1d 	bl	800b3f0 <HAL_TIM_PWM_Stop>
	HAL_NVIC_EnableIRQ(EXTI2_IRQn);	  //Activo interrupcion EndStop 2 Superior
	HAL_NVIC_EnableIRQ(EXTI3_IRQn);	  //Activo interrupcion EndStop 2 Inferior
	HAL_NVIC_EnableIRQ(EXTI4_IRQn);	  //Activo interrupcion EndStop 3 Superior
	HAL_NVIC_EnableIRQ(EXTI9_5_IRQn); //Activo interrupcion EndStop 3 Inferior
	*/
}
 80029b6:	bf00      	nop
 80029b8:	bd80      	pop	{r7, pc}
 80029ba:	bf00      	nop
 80029bc:	f3af 8000 	nop.w
 80029c0:	00000000 	.word	0x00000000
 80029c4:	40bf4000 	.word	0x40bf4000
 80029c8:	00000000 	.word	0x00000000
 80029cc:	41ec9c38 	.word	0x41ec9c38
 80029d0:	24000390 	.word	0x24000390
 80029d4:	40080000 	.word	0x40080000
 80029d8:	40002000 	.word	0x40002000
 80029dc:	58021000 	.word	0x58021000
 80029e0:	08012b04 	.word	0x08012b04
 80029e4:	24000bcc 	.word	0x24000bcc
 80029e8:	58020800 	.word	0x58020800
 80029ec:	240009dc 	.word	0x240009dc
 80029f0:	08012b14 	.word	0x08012b14
 80029f4:	24000638 	.word	0x24000638
 80029f8:	08012b24 	.word	0x08012b24
 80029fc:	00000000 	.word	0x00000000

08002a00 <interpretaComando>:


volatile double aux;
uint8_t auxString[10];

void interpretaComando(void){
 8002a00:	b580      	push	{r7, lr}
 8002a02:	b08a      	sub	sp, #40	; 0x28
 8002a04:	af00      	add	r7, sp, #0

	switch(rx_buffer[0]){
 8002a06:	4bc3      	ldr	r3, [pc, #780]	; (8002d14 <interpretaComando+0x314>)
 8002a08:	781b      	ldrb	r3, [r3, #0]
 8002a0a:	3b48      	subs	r3, #72	; 0x48
 8002a0c:	2b2e      	cmp	r3, #46	; 0x2e
 8002a0e:	f200 83ee 	bhi.w	80031ee <interpretaComando+0x7ee>
 8002a12:	a201      	add	r2, pc, #4	; (adr r2, 8002a18 <interpretaComando+0x18>)
 8002a14:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002a18:	08003179 	.word	0x08003179
 8002a1c:	080031ef 	.word	0x080031ef
 8002a20:	080031ef 	.word	0x080031ef
 8002a24:	080031ef 	.word	0x080031ef
 8002a28:	080031ef 	.word	0x080031ef
 8002a2c:	08002e19 	.word	0x08002e19
 8002a30:	080031ef 	.word	0x080031ef
 8002a34:	080031ef 	.word	0x080031ef
 8002a38:	08002f35 	.word	0x08002f35
 8002a3c:	080031ef 	.word	0x080031ef
 8002a40:	080031ef 	.word	0x080031ef
 8002a44:	080031ef 	.word	0x080031ef
 8002a48:	080031ef 	.word	0x080031ef
 8002a4c:	080031ef 	.word	0x080031ef
 8002a50:	080031ef 	.word	0x080031ef
 8002a54:	080031ef 	.word	0x080031ef
 8002a58:	080031ef 	.word	0x080031ef
 8002a5c:	080031ef 	.word	0x080031ef
 8002a60:	080031ef 	.word	0x080031ef
 8002a64:	080031ef 	.word	0x080031ef
 8002a68:	080031ef 	.word	0x080031ef
 8002a6c:	080031ef 	.word	0x080031ef
 8002a70:	080031ef 	.word	0x080031ef
 8002a74:	080031ef 	.word	0x080031ef
 8002a78:	080031ef 	.word	0x080031ef
 8002a7c:	080031ef 	.word	0x080031ef
 8002a80:	080031ef 	.word	0x080031ef
 8002a84:	080031ef 	.word	0x080031ef
 8002a88:	080031ef 	.word	0x080031ef
 8002a8c:	080031ef 	.word	0x080031ef
 8002a90:	080031ef 	.word	0x080031ef
 8002a94:	080031ef 	.word	0x080031ef
 8002a98:	08003179 	.word	0x08003179
 8002a9c:	080031ef 	.word	0x080031ef
 8002aa0:	080031ef 	.word	0x080031ef
 8002aa4:	080031ef 	.word	0x080031ef
 8002aa8:	080031ef 	.word	0x080031ef
 8002aac:	08002e19 	.word	0x08002e19
 8002ab0:	080031ef 	.word	0x080031ef
 8002ab4:	080031ef 	.word	0x080031ef
 8002ab8:	08002f35 	.word	0x08002f35
 8002abc:	080031ef 	.word	0x080031ef
 8002ac0:	080031ef 	.word	0x080031ef
 8002ac4:	080031ef 	.word	0x080031ef
 8002ac8:	080031ef 	.word	0x080031ef
 8002acc:	080031ef 	.word	0x080031ef
 8002ad0:	08002ad5 	.word	0x08002ad5

	case 'v':
		HAL_UART_Transmit(&huart3, (uint8_t *)"params\n",8, 100);
 8002ad4:	2364      	movs	r3, #100	; 0x64
 8002ad6:	2208      	movs	r2, #8
 8002ad8:	498f      	ldr	r1, [pc, #572]	; (8002d18 <interpretaComando+0x318>)
 8002ada:	4890      	ldr	r0, [pc, #576]	; (8002d1c <interpretaComando+0x31c>)
 8002adc:	f00a f9ce 	bl	800ce7c <HAL_UART_Transmit>
		uint8_t i = 1;
 8002ae0:	2301      	movs	r3, #1
 8002ae2:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
		uint8_t j = 0;
 8002ae6:	2300      	movs	r3, #0
 8002ae8:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
		while(rx_buffer[i] != 0){
 8002aec:	e18c      	b.n	8002e08 <interpretaComando+0x408>
			if(rx_buffer[i] == 'm'){
 8002aee:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002af2:	4a88      	ldr	r2, [pc, #544]	; (8002d14 <interpretaComando+0x314>)
 8002af4:	5cd3      	ldrb	r3, [r2, r3]
 8002af6:	2b6d      	cmp	r3, #109	; 0x6d
 8002af8:	d13d      	bne.n	8002b76 <interpretaComando+0x176>
				while(rx_buffer[i+1] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002afa:	e012      	b.n	8002b22 <interpretaComando+0x122>
					auxString[j] = rx_buffer[i+1];
 8002afc:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002b00:	1c5a      	adds	r2, r3, #1
 8002b02:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8002b06:	4983      	ldr	r1, [pc, #524]	; (8002d14 <interpretaComando+0x314>)
 8002b08:	5c89      	ldrb	r1, [r1, r2]
 8002b0a:	4a85      	ldr	r2, [pc, #532]	; (8002d20 <interpretaComando+0x320>)
 8002b0c:	54d1      	strb	r1, [r2, r3]
					j++;
 8002b0e:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8002b12:	3301      	adds	r3, #1
 8002b14:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
					i++;
 8002b18:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002b1c:	3301      	adds	r3, #1
 8002b1e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
				while(rx_buffer[i+1] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002b22:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002b26:	3301      	adds	r3, #1
 8002b28:	4a7a      	ldr	r2, [pc, #488]	; (8002d14 <interpretaComando+0x314>)
 8002b2a:	5cd3      	ldrb	r3, [r2, r3]
 8002b2c:	2b20      	cmp	r3, #32
 8002b2e:	d1e5      	bne.n	8002afc <interpretaComando+0xfc>
				}
				vmax = strtod(&auxString[0], NULL);
 8002b30:	2100      	movs	r1, #0
 8002b32:	487b      	ldr	r0, [pc, #492]	; (8002d20 <interpretaComando+0x320>)
 8002b34:	f00d fac2 	bl	80100bc <strtod>
 8002b38:	eeb0 7b40 	vmov.f64	d7, d0
 8002b3c:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8002b40:	4b78      	ldr	r3, [pc, #480]	; (8002d24 <interpretaComando+0x324>)
 8002b42:	edc3 7a00 	vstr	s15, [r3]

				for (int k = 0; k <= 10; k++) {
 8002b46:	2300      	movs	r3, #0
 8002b48:	623b      	str	r3, [r7, #32]
 8002b4a:	e007      	b.n	8002b5c <interpretaComando+0x15c>
					auxString[k] = 0;
 8002b4c:	4a74      	ldr	r2, [pc, #464]	; (8002d20 <interpretaComando+0x320>)
 8002b4e:	6a3b      	ldr	r3, [r7, #32]
 8002b50:	4413      	add	r3, r2
 8002b52:	2200      	movs	r2, #0
 8002b54:	701a      	strb	r2, [r3, #0]
				for (int k = 0; k <= 10; k++) {
 8002b56:	6a3b      	ldr	r3, [r7, #32]
 8002b58:	3301      	adds	r3, #1
 8002b5a:	623b      	str	r3, [r7, #32]
 8002b5c:	6a3b      	ldr	r3, [r7, #32]
 8002b5e:	2b0a      	cmp	r3, #10
 8002b60:	ddf4      	ble.n	8002b4c <interpretaComando+0x14c>
				}

				j=0;
 8002b62:	2300      	movs	r3, #0
 8002b64:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
				HAL_UART_Transmit(&huart3, (uint8_t *)"vm\n",4, 100);
 8002b68:	2364      	movs	r3, #100	; 0x64
 8002b6a:	2204      	movs	r2, #4
 8002b6c:	496e      	ldr	r1, [pc, #440]	; (8002d28 <interpretaComando+0x328>)
 8002b6e:	486b      	ldr	r0, [pc, #428]	; (8002d1c <interpretaComando+0x31c>)
 8002b70:	f00a f984 	bl	800ce7c <HAL_UART_Transmit>
 8002b74:	e143      	b.n	8002dfe <interpretaComando+0x3fe>
			}
			else if(rx_buffer[i] == 'v'){
 8002b76:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002b7a:	4a66      	ldr	r2, [pc, #408]	; (8002d14 <interpretaComando+0x314>)
 8002b7c:	5cd3      	ldrb	r3, [r2, r3]
 8002b7e:	2b76      	cmp	r3, #118	; 0x76
 8002b80:	d145      	bne.n	8002c0e <interpretaComando+0x20e>
				 if(rx_buffer[i+1] == 'f'){
 8002b82:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002b86:	3301      	adds	r3, #1
 8002b88:	4a62      	ldr	r2, [pc, #392]	; (8002d14 <interpretaComando+0x314>)
 8002b8a:	5cd3      	ldrb	r3, [r2, r3]
 8002b8c:	2b66      	cmp	r3, #102	; 0x66
 8002b8e:	f040 8136 	bne.w	8002dfe <interpretaComando+0x3fe>
					while(rx_buffer[i+2] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002b92:	e012      	b.n	8002bba <interpretaComando+0x1ba>
						auxString[j] = rx_buffer[i+2];
 8002b94:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002b98:	1c9a      	adds	r2, r3, #2
 8002b9a:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8002b9e:	495d      	ldr	r1, [pc, #372]	; (8002d14 <interpretaComando+0x314>)
 8002ba0:	5c89      	ldrb	r1, [r1, r2]
 8002ba2:	4a5f      	ldr	r2, [pc, #380]	; (8002d20 <interpretaComando+0x320>)
 8002ba4:	54d1      	strb	r1, [r2, r3]
						j++;
 8002ba6:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8002baa:	3301      	adds	r3, #1
 8002bac:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
						i++;
 8002bb0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002bb4:	3301      	adds	r3, #1
 8002bb6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
					while(rx_buffer[i+2] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002bba:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002bbe:	3302      	adds	r3, #2
 8002bc0:	4a54      	ldr	r2, [pc, #336]	; (8002d14 <interpretaComando+0x314>)
 8002bc2:	5cd3      	ldrb	r3, [r2, r3]
 8002bc4:	2b20      	cmp	r3, #32
 8002bc6:	d1e5      	bne.n	8002b94 <interpretaComando+0x194>
					}
					vf = strtod(&auxString[0], NULL);
 8002bc8:	2100      	movs	r1, #0
 8002bca:	4855      	ldr	r0, [pc, #340]	; (8002d20 <interpretaComando+0x320>)
 8002bcc:	f00d fa76 	bl	80100bc <strtod>
 8002bd0:	eeb0 7b40 	vmov.f64	d7, d0
 8002bd4:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8002bd8:	4b54      	ldr	r3, [pc, #336]	; (8002d2c <interpretaComando+0x32c>)
 8002bda:	edc3 7a00 	vstr	s15, [r3]

					for (int k = 0; k <= 10; k++) {
 8002bde:	2300      	movs	r3, #0
 8002be0:	61fb      	str	r3, [r7, #28]
 8002be2:	e007      	b.n	8002bf4 <interpretaComando+0x1f4>
						auxString[k] = 0;
 8002be4:	4a4e      	ldr	r2, [pc, #312]	; (8002d20 <interpretaComando+0x320>)
 8002be6:	69fb      	ldr	r3, [r7, #28]
 8002be8:	4413      	add	r3, r2
 8002bea:	2200      	movs	r2, #0
 8002bec:	701a      	strb	r2, [r3, #0]
					for (int k = 0; k <= 10; k++) {
 8002bee:	69fb      	ldr	r3, [r7, #28]
 8002bf0:	3301      	adds	r3, #1
 8002bf2:	61fb      	str	r3, [r7, #28]
 8002bf4:	69fb      	ldr	r3, [r7, #28]
 8002bf6:	2b0a      	cmp	r3, #10
 8002bf8:	ddf4      	ble.n	8002be4 <interpretaComando+0x1e4>
					}

					j=0;
 8002bfa:	2300      	movs	r3, #0
 8002bfc:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
					HAL_UART_Transmit(&huart3,(uint8_t *)"vf\n", 4, 100);
 8002c00:	2364      	movs	r3, #100	; 0x64
 8002c02:	2204      	movs	r2, #4
 8002c04:	494a      	ldr	r1, [pc, #296]	; (8002d30 <interpretaComando+0x330>)
 8002c06:	4845      	ldr	r0, [pc, #276]	; (8002d1c <interpretaComando+0x31c>)
 8002c08:	f00a f938 	bl	800ce7c <HAL_UART_Transmit>
 8002c0c:	e0f7      	b.n	8002dfe <interpretaComando+0x3fe>
				}
			}

			else if(rx_buffer[i] == 'v'){
 8002c0e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002c12:	4a40      	ldr	r2, [pc, #256]	; (8002d14 <interpretaComando+0x314>)
 8002c14:	5cd3      	ldrb	r3, [r2, r3]
 8002c16:	2b76      	cmp	r3, #118	; 0x76
 8002c18:	d145      	bne.n	8002ca6 <interpretaComando+0x2a6>
				 if(rx_buffer[i+1] == 'i'){
 8002c1a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002c1e:	3301      	adds	r3, #1
 8002c20:	4a3c      	ldr	r2, [pc, #240]	; (8002d14 <interpretaComando+0x314>)
 8002c22:	5cd3      	ldrb	r3, [r2, r3]
 8002c24:	2b69      	cmp	r3, #105	; 0x69
 8002c26:	f040 80ea 	bne.w	8002dfe <interpretaComando+0x3fe>
					while(rx_buffer[i+2] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002c2a:	e012      	b.n	8002c52 <interpretaComando+0x252>
						auxString[j] = rx_buffer[i+2];
 8002c2c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002c30:	1c9a      	adds	r2, r3, #2
 8002c32:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8002c36:	4937      	ldr	r1, [pc, #220]	; (8002d14 <interpretaComando+0x314>)
 8002c38:	5c89      	ldrb	r1, [r1, r2]
 8002c3a:	4a39      	ldr	r2, [pc, #228]	; (8002d20 <interpretaComando+0x320>)
 8002c3c:	54d1      	strb	r1, [r2, r3]
						j++;
 8002c3e:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8002c42:	3301      	adds	r3, #1
 8002c44:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
						i++;
 8002c48:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002c4c:	3301      	adds	r3, #1
 8002c4e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
					while(rx_buffer[i+2] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002c52:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002c56:	3302      	adds	r3, #2
 8002c58:	4a2e      	ldr	r2, [pc, #184]	; (8002d14 <interpretaComando+0x314>)
 8002c5a:	5cd3      	ldrb	r3, [r2, r3]
 8002c5c:	2b20      	cmp	r3, #32
 8002c5e:	d1e5      	bne.n	8002c2c <interpretaComando+0x22c>
					}
					vi = strtod(&auxString[0], NULL);
 8002c60:	2100      	movs	r1, #0
 8002c62:	482f      	ldr	r0, [pc, #188]	; (8002d20 <interpretaComando+0x320>)
 8002c64:	f00d fa2a 	bl	80100bc <strtod>
 8002c68:	eeb0 7b40 	vmov.f64	d7, d0
 8002c6c:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8002c70:	4b30      	ldr	r3, [pc, #192]	; (8002d34 <interpretaComando+0x334>)
 8002c72:	edc3 7a00 	vstr	s15, [r3]

					for (int k = 0; k <= 10; k++) {
 8002c76:	2300      	movs	r3, #0
 8002c78:	61bb      	str	r3, [r7, #24]
 8002c7a:	e007      	b.n	8002c8c <interpretaComando+0x28c>
						auxString[k] = 0;
 8002c7c:	4a28      	ldr	r2, [pc, #160]	; (8002d20 <interpretaComando+0x320>)
 8002c7e:	69bb      	ldr	r3, [r7, #24]
 8002c80:	4413      	add	r3, r2
 8002c82:	2200      	movs	r2, #0
 8002c84:	701a      	strb	r2, [r3, #0]
					for (int k = 0; k <= 10; k++) {
 8002c86:	69bb      	ldr	r3, [r7, #24]
 8002c88:	3301      	adds	r3, #1
 8002c8a:	61bb      	str	r3, [r7, #24]
 8002c8c:	69bb      	ldr	r3, [r7, #24]
 8002c8e:	2b0a      	cmp	r3, #10
 8002c90:	ddf4      	ble.n	8002c7c <interpretaComando+0x27c>
					}

					j=0;
 8002c92:	2300      	movs	r3, #0
 8002c94:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
					HAL_UART_Transmit(&huart3,(uint8_t *)"vi\n", 4, 100);
 8002c98:	2364      	movs	r3, #100	; 0x64
 8002c9a:	2204      	movs	r2, #4
 8002c9c:	4926      	ldr	r1, [pc, #152]	; (8002d38 <interpretaComando+0x338>)
 8002c9e:	481f      	ldr	r0, [pc, #124]	; (8002d1c <interpretaComando+0x31c>)
 8002ca0:	f00a f8ec 	bl	800ce7c <HAL_UART_Transmit>
 8002ca4:	e0ab      	b.n	8002dfe <interpretaComando+0x3fe>
				}
			}


			else if(rx_buffer[i] == 'a'){
 8002ca6:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002caa:	4a1a      	ldr	r2, [pc, #104]	; (8002d14 <interpretaComando+0x314>)
 8002cac:	5cd3      	ldrb	r3, [r2, r3]
 8002cae:	2b61      	cmp	r3, #97	; 0x61
 8002cb0:	d15b      	bne.n	8002d6a <interpretaComando+0x36a>
				 if(rx_buffer[i+1] == 'm'){
 8002cb2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002cb6:	3301      	adds	r3, #1
 8002cb8:	4a16      	ldr	r2, [pc, #88]	; (8002d14 <interpretaComando+0x314>)
 8002cba:	5cd3      	ldrb	r3, [r2, r3]
 8002cbc:	2b6d      	cmp	r3, #109	; 0x6d
 8002cbe:	f040 809e 	bne.w	8002dfe <interpretaComando+0x3fe>
					while(rx_buffer[i+2] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002cc2:	e012      	b.n	8002cea <interpretaComando+0x2ea>
						auxString[j] = rx_buffer[i+2];
 8002cc4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002cc8:	1c9a      	adds	r2, r3, #2
 8002cca:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8002cce:	4911      	ldr	r1, [pc, #68]	; (8002d14 <interpretaComando+0x314>)
 8002cd0:	5c89      	ldrb	r1, [r1, r2]
 8002cd2:	4a13      	ldr	r2, [pc, #76]	; (8002d20 <interpretaComando+0x320>)
 8002cd4:	54d1      	strb	r1, [r2, r3]
						j++;
 8002cd6:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8002cda:	3301      	adds	r3, #1
 8002cdc:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
						i++;
 8002ce0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002ce4:	3301      	adds	r3, #1
 8002ce6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
					while(rx_buffer[i+2] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002cea:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002cee:	3302      	adds	r3, #2
 8002cf0:	4a08      	ldr	r2, [pc, #32]	; (8002d14 <interpretaComando+0x314>)
 8002cf2:	5cd3      	ldrb	r3, [r2, r3]
 8002cf4:	2b20      	cmp	r3, #32
 8002cf6:	d1e5      	bne.n	8002cc4 <interpretaComando+0x2c4>
					}
					amax = strtod(&auxString[0], NULL);
 8002cf8:	2100      	movs	r1, #0
 8002cfa:	4809      	ldr	r0, [pc, #36]	; (8002d20 <interpretaComando+0x320>)
 8002cfc:	f00d f9de 	bl	80100bc <strtod>
 8002d00:	eeb0 7b40 	vmov.f64	d7, d0
 8002d04:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8002d08:	4b0c      	ldr	r3, [pc, #48]	; (8002d3c <interpretaComando+0x33c>)
 8002d0a:	edc3 7a00 	vstr	s15, [r3]

					for (int k = 0; k <= 10; k++) {
 8002d0e:	2300      	movs	r3, #0
 8002d10:	617b      	str	r3, [r7, #20]
 8002d12:	e01d      	b.n	8002d50 <interpretaComando+0x350>
 8002d14:	240006f4 	.word	0x240006f4
 8002d18:	08012b30 	.word	0x08012b30
 8002d1c:	24000bcc 	.word	0x24000bcc
 8002d20:	240003a8 	.word	0x240003a8
 8002d24:	24000094 	.word	0x24000094
 8002d28:	08012b38 	.word	0x08012b38
 8002d2c:	2400065c 	.word	0x2400065c
 8002d30:	08012b3c 	.word	0x08012b3c
 8002d34:	24000658 	.word	0x24000658
 8002d38:	08012b40 	.word	0x08012b40
 8002d3c:	24000098 	.word	0x24000098
						auxString[k] = 0;
 8002d40:	4aad      	ldr	r2, [pc, #692]	; (8002ff8 <interpretaComando+0x5f8>)
 8002d42:	697b      	ldr	r3, [r7, #20]
 8002d44:	4413      	add	r3, r2
 8002d46:	2200      	movs	r2, #0
 8002d48:	701a      	strb	r2, [r3, #0]
					for (int k = 0; k <= 10; k++) {
 8002d4a:	697b      	ldr	r3, [r7, #20]
 8002d4c:	3301      	adds	r3, #1
 8002d4e:	617b      	str	r3, [r7, #20]
 8002d50:	697b      	ldr	r3, [r7, #20]
 8002d52:	2b0a      	cmp	r3, #10
 8002d54:	ddf4      	ble.n	8002d40 <interpretaComando+0x340>
					}

					j=0;
 8002d56:	2300      	movs	r3, #0
 8002d58:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
					HAL_UART_Transmit(&huart3,(uint8_t *)"am\n", 4, 100);
 8002d5c:	2364      	movs	r3, #100	; 0x64
 8002d5e:	2204      	movs	r2, #4
 8002d60:	49a6      	ldr	r1, [pc, #664]	; (8002ffc <interpretaComando+0x5fc>)
 8002d62:	48a7      	ldr	r0, [pc, #668]	; (8003000 <interpretaComando+0x600>)
 8002d64:	f00a f88a 	bl	800ce7c <HAL_UART_Transmit>
 8002d68:	e049      	b.n	8002dfe <interpretaComando+0x3fe>
				}
			}
			else if(rx_buffer[i] == 'j'){
 8002d6a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002d6e:	4aa5      	ldr	r2, [pc, #660]	; (8003004 <interpretaComando+0x604>)
 8002d70:	5cd3      	ldrb	r3, [r2, r3]
 8002d72:	2b6a      	cmp	r3, #106	; 0x6a
 8002d74:	d143      	bne.n	8002dfe <interpretaComando+0x3fe>
				 if(rx_buffer[i+1] == 'm'){
 8002d76:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002d7a:	3301      	adds	r3, #1
 8002d7c:	4aa1      	ldr	r2, [pc, #644]	; (8003004 <interpretaComando+0x604>)
 8002d7e:	5cd3      	ldrb	r3, [r2, r3]
 8002d80:	2b6d      	cmp	r3, #109	; 0x6d
 8002d82:	d13c      	bne.n	8002dfe <interpretaComando+0x3fe>
					while(rx_buffer[i+2] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002d84:	e012      	b.n	8002dac <interpretaComando+0x3ac>
						auxString[j] = rx_buffer[i+2];
 8002d86:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002d8a:	1c9a      	adds	r2, r3, #2
 8002d8c:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8002d90:	499c      	ldr	r1, [pc, #624]	; (8003004 <interpretaComando+0x604>)
 8002d92:	5c89      	ldrb	r1, [r1, r2]
 8002d94:	4a98      	ldr	r2, [pc, #608]	; (8002ff8 <interpretaComando+0x5f8>)
 8002d96:	54d1      	strb	r1, [r2, r3]
						j++;
 8002d98:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8002d9c:	3301      	adds	r3, #1
 8002d9e:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
						i++;
 8002da2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002da6:	3301      	adds	r3, #1
 8002da8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
					while(rx_buffer[i+2] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002dac:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002db0:	3302      	adds	r3, #2
 8002db2:	4a94      	ldr	r2, [pc, #592]	; (8003004 <interpretaComando+0x604>)
 8002db4:	5cd3      	ldrb	r3, [r2, r3]
 8002db6:	2b20      	cmp	r3, #32
 8002db8:	d1e5      	bne.n	8002d86 <interpretaComando+0x386>
					}
					jmax = strtod(&auxString[0], NULL);
 8002dba:	2100      	movs	r1, #0
 8002dbc:	488e      	ldr	r0, [pc, #568]	; (8002ff8 <interpretaComando+0x5f8>)
 8002dbe:	f00d f97d 	bl	80100bc <strtod>
 8002dc2:	eeb0 7b40 	vmov.f64	d7, d0
 8002dc6:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8002dca:	4b8f      	ldr	r3, [pc, #572]	; (8003008 <interpretaComando+0x608>)
 8002dcc:	edc3 7a00 	vstr	s15, [r3]

					for (int k = 0; k <= 10; k++) {
 8002dd0:	2300      	movs	r3, #0
 8002dd2:	613b      	str	r3, [r7, #16]
 8002dd4:	e007      	b.n	8002de6 <interpretaComando+0x3e6>
						auxString[k] = 0;
 8002dd6:	4a88      	ldr	r2, [pc, #544]	; (8002ff8 <interpretaComando+0x5f8>)
 8002dd8:	693b      	ldr	r3, [r7, #16]
 8002dda:	4413      	add	r3, r2
 8002ddc:	2200      	movs	r2, #0
 8002dde:	701a      	strb	r2, [r3, #0]
					for (int k = 0; k <= 10; k++) {
 8002de0:	693b      	ldr	r3, [r7, #16]
 8002de2:	3301      	adds	r3, #1
 8002de4:	613b      	str	r3, [r7, #16]
 8002de6:	693b      	ldr	r3, [r7, #16]
 8002de8:	2b0a      	cmp	r3, #10
 8002dea:	ddf4      	ble.n	8002dd6 <interpretaComando+0x3d6>
					}
					j=0;
 8002dec:	2300      	movs	r3, #0
 8002dee:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
					HAL_UART_Transmit(&huart3,(uint8_t *)"jm\n", 4, 100);
 8002df2:	2364      	movs	r3, #100	; 0x64
 8002df4:	2204      	movs	r2, #4
 8002df6:	4985      	ldr	r1, [pc, #532]	; (800300c <interpretaComando+0x60c>)
 8002df8:	4881      	ldr	r0, [pc, #516]	; (8003000 <interpretaComando+0x600>)
 8002dfa:	f00a f83f 	bl	800ce7c <HAL_UART_Transmit>
				}
			}
			i++;
 8002dfe:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002e02:	3301      	adds	r3, #1
 8002e04:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
		while(rx_buffer[i] != 0){
 8002e08:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002e0c:	4a7d      	ldr	r2, [pc, #500]	; (8003004 <interpretaComando+0x604>)
 8002e0e:	5cd3      	ldrb	r3, [r2, r3]
 8002e10:	2b00      	cmp	r3, #0
 8002e12:	f47f ae6c 	bne.w	8002aee <interpretaComando+0xee>
		}


		break;
 8002e16:	e1ea      	b.n	80031ee <interpretaComando+0x7ee>



	case 'M':						//:M(motor) + numero de motor (1. 2. 3) + Angulo de 0 a 90
	case 'm':
		switch(rx_buffer[1]){
 8002e18:	4b7a      	ldr	r3, [pc, #488]	; (8003004 <interpretaComando+0x604>)
 8002e1a:	785b      	ldrb	r3, [r3, #1]
 8002e1c:	2b33      	cmp	r3, #51	; 0x33
 8002e1e:	d05b      	beq.n	8002ed8 <interpretaComando+0x4d8>
 8002e20:	2b33      	cmp	r3, #51	; 0x33
 8002e22:	dc7f      	bgt.n	8002f24 <interpretaComando+0x524>
 8002e24:	2b31      	cmp	r3, #49	; 0x31
 8002e26:	d002      	beq.n	8002e2e <interpretaComando+0x42e>
 8002e28:	2b32      	cmp	r3, #50	; 0x32
 8002e2a:	d02f      	beq.n	8002e8c <interpretaComando+0x48c>
 8002e2c:	e07a      	b.n	8002f24 <interpretaComando+0x524>
		case '1':
			HAL_UART_Transmit(&huart3,(uint8_t *)"Motor1\n\r", 8, 100);
 8002e2e:	2364      	movs	r3, #100	; 0x64
 8002e30:	2208      	movs	r2, #8
 8002e32:	4977      	ldr	r1, [pc, #476]	; (8003010 <interpretaComando+0x610>)
 8002e34:	4872      	ldr	r0, [pc, #456]	; (8003000 <interpretaComando+0x600>)
 8002e36:	f00a f821 	bl	800ce7c <HAL_UART_Transmit>
			aux =  strtod(&rx_buffer[2], NULL);
 8002e3a:	2100      	movs	r1, #0
 8002e3c:	4875      	ldr	r0, [pc, #468]	; (8003014 <interpretaComando+0x614>)
 8002e3e:	f00d f93d 	bl	80100bc <strtod>
 8002e42:	eeb0 7b40 	vmov.f64	d7, d0
 8002e46:	4b74      	ldr	r3, [pc, #464]	; (8003018 <interpretaComando+0x618>)
 8002e48:	ed83 7b00 	vstr	d7, [r3]
			if(aux>=0 && aux<=90){  // verificacion de limites articulares
 8002e4c:	4b72      	ldr	r3, [pc, #456]	; (8003018 <interpretaComando+0x618>)
 8002e4e:	ed93 7b00 	vldr	d7, [r3]
 8002e52:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 8002e56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002e5a:	db10      	blt.n	8002e7e <interpretaComando+0x47e>
 8002e5c:	4b6e      	ldr	r3, [pc, #440]	; (8003018 <interpretaComando+0x618>)
 8002e5e:	ed93 7b00 	vldr	d7, [r3]
 8002e62:	ed9f 6b63 	vldr	d6, [pc, #396]	; 8002ff0 <interpretaComando+0x5f0>
 8002e66:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8002e6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002e6e:	d806      	bhi.n	8002e7e <interpretaComando+0x47e>
				titha1 = aux;
 8002e70:	4b69      	ldr	r3, [pc, #420]	; (8003018 <interpretaComando+0x618>)
 8002e72:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e76:	4969      	ldr	r1, [pc, #420]	; (800301c <interpretaComando+0x61c>)
 8002e78:	e9c1 2300 	strd	r2, r3, [r1]
			}
			else{
				HAL_UART_Transmit(&huart3,(uint8_t *)"ErrorPos\n\r", 10, 100);
			}
			break;
 8002e7c:	e059      	b.n	8002f32 <interpretaComando+0x532>
				HAL_UART_Transmit(&huart3,(uint8_t *)"ErrorPos\n\r", 10, 100);
 8002e7e:	2364      	movs	r3, #100	; 0x64
 8002e80:	220a      	movs	r2, #10
 8002e82:	4967      	ldr	r1, [pc, #412]	; (8003020 <interpretaComando+0x620>)
 8002e84:	485e      	ldr	r0, [pc, #376]	; (8003000 <interpretaComando+0x600>)
 8002e86:	f009 fff9 	bl	800ce7c <HAL_UART_Transmit>
			break;
 8002e8a:	e052      	b.n	8002f32 <interpretaComando+0x532>
		case '2':
			HAL_UART_Transmit(&huart3,(uint8_t *)"Motor2\n\r", 8, 100);
 8002e8c:	2364      	movs	r3, #100	; 0x64
 8002e8e:	2208      	movs	r2, #8
 8002e90:	4964      	ldr	r1, [pc, #400]	; (8003024 <interpretaComando+0x624>)
 8002e92:	485b      	ldr	r0, [pc, #364]	; (8003000 <interpretaComando+0x600>)
 8002e94:	f009 fff2 	bl	800ce7c <HAL_UART_Transmit>
			if(aux>=0 && aux<=90){  // verificacion de limites articulares
 8002e98:	4b5f      	ldr	r3, [pc, #380]	; (8003018 <interpretaComando+0x618>)
 8002e9a:	ed93 7b00 	vldr	d7, [r3]
 8002e9e:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 8002ea2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002ea6:	db10      	blt.n	8002eca <interpretaComando+0x4ca>
 8002ea8:	4b5b      	ldr	r3, [pc, #364]	; (8003018 <interpretaComando+0x618>)
 8002eaa:	ed93 7b00 	vldr	d7, [r3]
 8002eae:	ed9f 6b50 	vldr	d6, [pc, #320]	; 8002ff0 <interpretaComando+0x5f0>
 8002eb2:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8002eb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002eba:	d806      	bhi.n	8002eca <interpretaComando+0x4ca>
				titha2 = aux;
 8002ebc:	4b56      	ldr	r3, [pc, #344]	; (8003018 <interpretaComando+0x618>)
 8002ebe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ec2:	4959      	ldr	r1, [pc, #356]	; (8003028 <interpretaComando+0x628>)
 8002ec4:	e9c1 2300 	strd	r2, r3, [r1]
			}
			else{
				HAL_UART_Transmit(&huart3,(uint8_t *)"ErrorPos\n\r", 10, 100);
			}
			break;
 8002ec8:	e033      	b.n	8002f32 <interpretaComando+0x532>
				HAL_UART_Transmit(&huart3,(uint8_t *)"ErrorPos\n\r", 10, 100);
 8002eca:	2364      	movs	r3, #100	; 0x64
 8002ecc:	220a      	movs	r2, #10
 8002ece:	4954      	ldr	r1, [pc, #336]	; (8003020 <interpretaComando+0x620>)
 8002ed0:	484b      	ldr	r0, [pc, #300]	; (8003000 <interpretaComando+0x600>)
 8002ed2:	f009 ffd3 	bl	800ce7c <HAL_UART_Transmit>
			break;
 8002ed6:	e02c      	b.n	8002f32 <interpretaComando+0x532>
		case '3':
			HAL_UART_Transmit(&huart3,(uint8_t *)"Motor3\n\r", 8, 100);
 8002ed8:	2364      	movs	r3, #100	; 0x64
 8002eda:	2208      	movs	r2, #8
 8002edc:	4953      	ldr	r1, [pc, #332]	; (800302c <interpretaComando+0x62c>)
 8002ede:	4848      	ldr	r0, [pc, #288]	; (8003000 <interpretaComando+0x600>)
 8002ee0:	f009 ffcc 	bl	800ce7c <HAL_UART_Transmit>
			if(aux>=0 && aux<=90){   // verificacion de limites articulares
 8002ee4:	4b4c      	ldr	r3, [pc, #304]	; (8003018 <interpretaComando+0x618>)
 8002ee6:	ed93 7b00 	vldr	d7, [r3]
 8002eea:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 8002eee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002ef2:	db10      	blt.n	8002f16 <interpretaComando+0x516>
 8002ef4:	4b48      	ldr	r3, [pc, #288]	; (8003018 <interpretaComando+0x618>)
 8002ef6:	ed93 7b00 	vldr	d7, [r3]
 8002efa:	ed9f 6b3d 	vldr	d6, [pc, #244]	; 8002ff0 <interpretaComando+0x5f0>
 8002efe:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8002f02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002f06:	d806      	bhi.n	8002f16 <interpretaComando+0x516>
				titha3 = aux;
 8002f08:	4b43      	ldr	r3, [pc, #268]	; (8003018 <interpretaComando+0x618>)
 8002f0a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002f0e:	4948      	ldr	r1, [pc, #288]	; (8003030 <interpretaComando+0x630>)
 8002f10:	e9c1 2300 	strd	r2, r3, [r1]
			}
			else{
				HAL_UART_Transmit(&huart3,(uint8_t *)"ErrorPos\n\r", 10, 100);
			}
			break;
 8002f14:	e00d      	b.n	8002f32 <interpretaComando+0x532>
				HAL_UART_Transmit(&huart3,(uint8_t *)"ErrorPos\n\r", 10, 100);
 8002f16:	2364      	movs	r3, #100	; 0x64
 8002f18:	220a      	movs	r2, #10
 8002f1a:	4941      	ldr	r1, [pc, #260]	; (8003020 <interpretaComando+0x620>)
 8002f1c:	4838      	ldr	r0, [pc, #224]	; (8003000 <interpretaComando+0x600>)
 8002f1e:	f009 ffad 	bl	800ce7c <HAL_UART_Transmit>
			break;
 8002f22:	e006      	b.n	8002f32 <interpretaComando+0x532>

		default:
			HAL_UART_Transmit(&huart3,(uint8_t *)"ErrorMotor\n\r", 12, 100);
 8002f24:	2364      	movs	r3, #100	; 0x64
 8002f26:	220c      	movs	r2, #12
 8002f28:	4942      	ldr	r1, [pc, #264]	; (8003034 <interpretaComando+0x634>)
 8002f2a:	4835      	ldr	r0, [pc, #212]	; (8003000 <interpretaComando+0x600>)
 8002f2c:	f009 ffa6 	bl	800ce7c <HAL_UART_Transmit>
			break;
 8002f30:	bf00      	nop
		}
		break;
 8002f32:	e15c      	b.n	80031ee <interpretaComando+0x7ee>



	case 'P':												//:Px0.1 y0.1 z-0.5 \0 (Eje, valor, espacio, Eje, valor, espacio, Eje, valor, espacio)
	case 'p':
		HAL_UART_Transmit(&huart3,(uint8_t *)"Punto\n\r", 7, 100);
 8002f34:	2364      	movs	r3, #100	; 0x64
 8002f36:	2207      	movs	r2, #7
 8002f38:	493f      	ldr	r1, [pc, #252]	; (8003038 <interpretaComando+0x638>)
 8002f3a:	4831      	ldr	r0, [pc, #196]	; (8003000 <interpretaComando+0x600>)
 8002f3c:	f009 ff9e 	bl	800ce7c <HAL_UART_Transmit>
		flagErrorEndStop = 0;
 8002f40:	493e      	ldr	r1, [pc, #248]	; (800303c <interpretaComando+0x63c>)
 8002f42:	f04f 0200 	mov.w	r2, #0
 8002f46:	f04f 0300 	mov.w	r3, #0
 8002f4a:	e9c1 2300 	strd	r2, r3, [r1]
		i = 1;
 8002f4e:	2301      	movs	r3, #1
 8002f50:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
		j = 0;
 8002f54:	2300      	movs	r3, #0
 8002f56:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
		while(rx_buffer[i] != 0){
 8002f5a:	e0f6      	b.n	800314a <interpretaComando+0x74a>
			if(rx_buffer[i] == 'x'){
 8002f5c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002f60:	4a28      	ldr	r2, [pc, #160]	; (8003004 <interpretaComando+0x604>)
 8002f62:	5cd3      	ldrb	r3, [r2, r3]
 8002f64:	2b78      	cmp	r3, #120	; 0x78
 8002f66:	d13b      	bne.n	8002fe0 <interpretaComando+0x5e0>
				while(rx_buffer[i+1] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002f68:	e012      	b.n	8002f90 <interpretaComando+0x590>
					auxString[j] = rx_buffer[i+1];
 8002f6a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002f6e:	1c5a      	adds	r2, r3, #1
 8002f70:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8002f74:	4923      	ldr	r1, [pc, #140]	; (8003004 <interpretaComando+0x604>)
 8002f76:	5c89      	ldrb	r1, [r1, r2]
 8002f78:	4a1f      	ldr	r2, [pc, #124]	; (8002ff8 <interpretaComando+0x5f8>)
 8002f7a:	54d1      	strb	r1, [r2, r3]
					j++;
 8002f7c:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8002f80:	3301      	adds	r3, #1
 8002f82:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
					i++;
 8002f86:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002f8a:	3301      	adds	r3, #1
 8002f8c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
				while(rx_buffer[i+1] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002f90:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002f94:	3301      	adds	r3, #1
 8002f96:	4a1b      	ldr	r2, [pc, #108]	; (8003004 <interpretaComando+0x604>)
 8002f98:	5cd3      	ldrb	r3, [r2, r3]
 8002f9a:	2b20      	cmp	r3, #32
 8002f9c:	d1e5      	bne.n	8002f6a <interpretaComando+0x56a>
				}
				Pfin.x = strtod(&auxString[0], NULL);
 8002f9e:	2100      	movs	r1, #0
 8002fa0:	4815      	ldr	r0, [pc, #84]	; (8002ff8 <interpretaComando+0x5f8>)
 8002fa2:	f00d f88b 	bl	80100bc <strtod>
 8002fa6:	eeb0 7b40 	vmov.f64	d7, d0
 8002faa:	4b25      	ldr	r3, [pc, #148]	; (8003040 <interpretaComando+0x640>)
 8002fac:	ed83 7b00 	vstr	d7, [r3]
				for (int k = 0; k <= 10; k++) {
 8002fb0:	2300      	movs	r3, #0
 8002fb2:	60fb      	str	r3, [r7, #12]
 8002fb4:	e007      	b.n	8002fc6 <interpretaComando+0x5c6>
					auxString[k] = 0;
 8002fb6:	4a10      	ldr	r2, [pc, #64]	; (8002ff8 <interpretaComando+0x5f8>)
 8002fb8:	68fb      	ldr	r3, [r7, #12]
 8002fba:	4413      	add	r3, r2
 8002fbc:	2200      	movs	r2, #0
 8002fbe:	701a      	strb	r2, [r3, #0]
				for (int k = 0; k <= 10; k++) {
 8002fc0:	68fb      	ldr	r3, [r7, #12]
 8002fc2:	3301      	adds	r3, #1
 8002fc4:	60fb      	str	r3, [r7, #12]
 8002fc6:	68fb      	ldr	r3, [r7, #12]
 8002fc8:	2b0a      	cmp	r3, #10
 8002fca:	ddf4      	ble.n	8002fb6 <interpretaComando+0x5b6>
				}
				j=0;
 8002fcc:	2300      	movs	r3, #0
 8002fce:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
				HAL_UART_Transmit(&huart3, (uint8_t *)"PuntoX_ok\n\r", 11, 100);
 8002fd2:	2364      	movs	r3, #100	; 0x64
 8002fd4:	220b      	movs	r2, #11
 8002fd6:	491b      	ldr	r1, [pc, #108]	; (8003044 <interpretaComando+0x644>)
 8002fd8:	4809      	ldr	r0, [pc, #36]	; (8003000 <interpretaComando+0x600>)
 8002fda:	f009 ff4f 	bl	800ce7c <HAL_UART_Transmit>
 8002fde:	e0af      	b.n	8003140 <interpretaComando+0x740>
			}
			else if(rx_buffer[i] == 'y'){
 8002fe0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002fe4:	4a07      	ldr	r2, [pc, #28]	; (8003004 <interpretaComando+0x604>)
 8002fe6:	5cd3      	ldrb	r3, [r2, r3]
 8002fe8:	2b79      	cmp	r3, #121	; 0x79
 8002fea:	d168      	bne.n	80030be <interpretaComando+0x6be>
				while(rx_buffer[i+1] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002fec:	e03f      	b.n	800306e <interpretaComando+0x66e>
 8002fee:	bf00      	nop
 8002ff0:	00000000 	.word	0x00000000
 8002ff4:	40568000 	.word	0x40568000
 8002ff8:	240003a8 	.word	0x240003a8
 8002ffc:	08012b44 	.word	0x08012b44
 8003000:	24000bcc 	.word	0x24000bcc
 8003004:	240006f4 	.word	0x240006f4
 8003008:	24000090 	.word	0x24000090
 800300c:	08012b48 	.word	0x08012b48
 8003010:	08012b4c 	.word	0x08012b4c
 8003014:	240006f6 	.word	0x240006f6
 8003018:	240003a0 	.word	0x240003a0
 800301c:	24000628 	.word	0x24000628
 8003020:	08012b58 	.word	0x08012b58
 8003024:	08012b64 	.word	0x08012b64
 8003028:	24000630 	.word	0x24000630
 800302c:	08012b70 	.word	0x08012b70
 8003030:	24000638 	.word	0x24000638
 8003034:	08012b7c 	.word	0x08012b7c
 8003038:	08012b8c 	.word	0x08012b8c
 800303c:	24000768 	.word	0x24000768
 8003040:	24000680 	.word	0x24000680
 8003044:	08012b94 	.word	0x08012b94
					auxString[j] = rx_buffer[i+1];
 8003048:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800304c:	1c5a      	adds	r2, r3, #1
 800304e:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8003052:	496b      	ldr	r1, [pc, #428]	; (8003200 <interpretaComando+0x800>)
 8003054:	5c89      	ldrb	r1, [r1, r2]
 8003056:	4a6b      	ldr	r2, [pc, #428]	; (8003204 <interpretaComando+0x804>)
 8003058:	54d1      	strb	r1, [r2, r3]
					j++;
 800305a:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 800305e:	3301      	adds	r3, #1
 8003060:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
					i++;
 8003064:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003068:	3301      	adds	r3, #1
 800306a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
				while(rx_buffer[i+1] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 800306e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003072:	3301      	adds	r3, #1
 8003074:	4a62      	ldr	r2, [pc, #392]	; (8003200 <interpretaComando+0x800>)
 8003076:	5cd3      	ldrb	r3, [r2, r3]
 8003078:	2b20      	cmp	r3, #32
 800307a:	d1e5      	bne.n	8003048 <interpretaComando+0x648>
				}
				Pfin.y = strtod(&auxString[0], NULL);
 800307c:	2100      	movs	r1, #0
 800307e:	4861      	ldr	r0, [pc, #388]	; (8003204 <interpretaComando+0x804>)
 8003080:	f00d f81c 	bl	80100bc <strtod>
 8003084:	eeb0 7b40 	vmov.f64	d7, d0
 8003088:	4b5f      	ldr	r3, [pc, #380]	; (8003208 <interpretaComando+0x808>)
 800308a:	ed83 7b02 	vstr	d7, [r3, #8]
				for (int k = 0; k <= 10; k++) {
 800308e:	2300      	movs	r3, #0
 8003090:	60bb      	str	r3, [r7, #8]
 8003092:	e007      	b.n	80030a4 <interpretaComando+0x6a4>
					auxString[k] = 0;
 8003094:	4a5b      	ldr	r2, [pc, #364]	; (8003204 <interpretaComando+0x804>)
 8003096:	68bb      	ldr	r3, [r7, #8]
 8003098:	4413      	add	r3, r2
 800309a:	2200      	movs	r2, #0
 800309c:	701a      	strb	r2, [r3, #0]
				for (int k = 0; k <= 10; k++) {
 800309e:	68bb      	ldr	r3, [r7, #8]
 80030a0:	3301      	adds	r3, #1
 80030a2:	60bb      	str	r3, [r7, #8]
 80030a4:	68bb      	ldr	r3, [r7, #8]
 80030a6:	2b0a      	cmp	r3, #10
 80030a8:	ddf4      	ble.n	8003094 <interpretaComando+0x694>
				}
				j=0;
 80030aa:	2300      	movs	r3, #0
 80030ac:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
				HAL_UART_Transmit(&huart3,(uint8_t *)"PuntoY_ok\n\r", 11, 100);
 80030b0:	2364      	movs	r3, #100	; 0x64
 80030b2:	220b      	movs	r2, #11
 80030b4:	4955      	ldr	r1, [pc, #340]	; (800320c <interpretaComando+0x80c>)
 80030b6:	4856      	ldr	r0, [pc, #344]	; (8003210 <interpretaComando+0x810>)
 80030b8:	f009 fee0 	bl	800ce7c <HAL_UART_Transmit>
 80030bc:	e040      	b.n	8003140 <interpretaComando+0x740>
			}
			else if(rx_buffer[i] == 'z'){
 80030be:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80030c2:	4a4f      	ldr	r2, [pc, #316]	; (8003200 <interpretaComando+0x800>)
 80030c4:	5cd3      	ldrb	r3, [r2, r3]
 80030c6:	2b7a      	cmp	r3, #122	; 0x7a
 80030c8:	d13a      	bne.n	8003140 <interpretaComando+0x740>
				while(rx_buffer[i+1] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 80030ca:	e012      	b.n	80030f2 <interpretaComando+0x6f2>
					auxString[j] = rx_buffer[i+1];
 80030cc:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80030d0:	1c5a      	adds	r2, r3, #1
 80030d2:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80030d6:	494a      	ldr	r1, [pc, #296]	; (8003200 <interpretaComando+0x800>)
 80030d8:	5c89      	ldrb	r1, [r1, r2]
 80030da:	4a4a      	ldr	r2, [pc, #296]	; (8003204 <interpretaComando+0x804>)
 80030dc:	54d1      	strb	r1, [r2, r3]
					j++;
 80030de:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80030e2:	3301      	adds	r3, #1
 80030e4:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
					i++;
 80030e8:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80030ec:	3301      	adds	r3, #1
 80030ee:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
				while(rx_buffer[i+1] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 80030f2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80030f6:	3301      	adds	r3, #1
 80030f8:	4a41      	ldr	r2, [pc, #260]	; (8003200 <interpretaComando+0x800>)
 80030fa:	5cd3      	ldrb	r3, [r2, r3]
 80030fc:	2b20      	cmp	r3, #32
 80030fe:	d1e5      	bne.n	80030cc <interpretaComando+0x6cc>
				}
				Pfin.z = strtod(&auxString[0], NULL);
 8003100:	2100      	movs	r1, #0
 8003102:	4840      	ldr	r0, [pc, #256]	; (8003204 <interpretaComando+0x804>)
 8003104:	f00c ffda 	bl	80100bc <strtod>
 8003108:	eeb0 7b40 	vmov.f64	d7, d0
 800310c:	4b3e      	ldr	r3, [pc, #248]	; (8003208 <interpretaComando+0x808>)
 800310e:	ed83 7b04 	vstr	d7, [r3, #16]
				for (int k = 0; k <= 10; k++) {
 8003112:	2300      	movs	r3, #0
 8003114:	607b      	str	r3, [r7, #4]
 8003116:	e007      	b.n	8003128 <interpretaComando+0x728>
					auxString[k] = 0;
 8003118:	4a3a      	ldr	r2, [pc, #232]	; (8003204 <interpretaComando+0x804>)
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	4413      	add	r3, r2
 800311e:	2200      	movs	r2, #0
 8003120:	701a      	strb	r2, [r3, #0]
				for (int k = 0; k <= 10; k++) {
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	3301      	adds	r3, #1
 8003126:	607b      	str	r3, [r7, #4]
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	2b0a      	cmp	r3, #10
 800312c:	ddf4      	ble.n	8003118 <interpretaComando+0x718>
				}
				j=0;
 800312e:	2300      	movs	r3, #0
 8003130:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
				HAL_UART_Transmit(&huart3,(uint8_t *)"PuntoZ_ok\n\r", 11, 100);
 8003134:	2364      	movs	r3, #100	; 0x64
 8003136:	220b      	movs	r2, #11
 8003138:	4936      	ldr	r1, [pc, #216]	; (8003214 <interpretaComando+0x814>)
 800313a:	4835      	ldr	r0, [pc, #212]	; (8003210 <interpretaComando+0x810>)
 800313c:	f009 fe9e 	bl	800ce7c <HAL_UART_Transmit>
			}
			i++;
 8003140:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003144:	3301      	adds	r3, #1
 8003146:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
		while(rx_buffer[i] != 0){
 800314a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800314e:	4a2c      	ldr	r2, [pc, #176]	; (8003200 <interpretaComando+0x800>)
 8003150:	5cd3      	ldrb	r3, [r2, r3]
 8003152:	2b00      	cmp	r3, #0
 8003154:	f47f af02 	bne.w	8002f5c <interpretaComando+0x55c>
		}
		cinematicaInversa(Pfin);
 8003158:	4b2b      	ldr	r3, [pc, #172]	; (8003208 <interpretaComando+0x808>)
 800315a:	ed93 5b00 	vldr	d5, [r3]
 800315e:	ed93 6b02 	vldr	d6, [r3, #8]
 8003162:	ed93 7b04 	vldr	d7, [r3, #16]
 8003166:	eeb0 0b45 	vmov.f64	d0, d5
 800316a:	eeb0 1b46 	vmov.f64	d1, d6
 800316e:	eeb0 2b47 	vmov.f64	d2, d7
 8003172:	f7fd fec1 	bl	8000ef8 <cinematicaInversa>
		break;
 8003176:	e03a      	b.n	80031ee <interpretaComando+0x7ee>
	case 'H':
	case 'h':

		HAL_UART_Transmit(&huart3,(uint8_t *)"Homing\n\r", 8, 100);
 8003178:	2364      	movs	r3, #100	; 0x64
 800317a:	2208      	movs	r2, #8
 800317c:	4926      	ldr	r1, [pc, #152]	; (8003218 <interpretaComando+0x818>)
 800317e:	4824      	ldr	r0, [pc, #144]	; (8003210 <interpretaComando+0x810>)
 8003180:	f009 fe7c 	bl	800ce7c <HAL_UART_Transmit>

		//Ponemos el enable en bajo para habilitar el driver

		HAL_GPIO_WritePin(S_Enable_1_GPIO_Port, S_Enable_1_Pin, GPIO_PIN_RESET);
 8003184:	2200      	movs	r2, #0
 8003186:	2110      	movs	r1, #16
 8003188:	4824      	ldr	r0, [pc, #144]	; (800321c <interpretaComando+0x81c>)
 800318a:	f005 fa9b 	bl	80086c4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(S_Enable_2_GPIO_Port, S_Enable_2_Pin, GPIO_PIN_RESET);
 800318e:	2200      	movs	r2, #0
 8003190:	2120      	movs	r1, #32
 8003192:	4822      	ldr	r0, [pc, #136]	; (800321c <interpretaComando+0x81c>)
 8003194:	f005 fa96 	bl	80086c4 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(S_Enable_3_GPIO_Port, S_Enable_3_Pin, GPIO_PIN_RESET);
 8003198:	2200      	movs	r2, #0
 800319a:	2140      	movs	r1, #64	; 0x40
 800319c:	481f      	ldr	r0, [pc, #124]	; (800321c <interpretaComando+0x81c>)
 800319e:	f005 fa91 	bl	80086c4 <HAL_GPIO_WritePin>

		HAL_Delay(50); //50 ms es el tiempo que la señal ENABLE en cambiar de estado
 80031a2:	2032      	movs	r0, #50	; 0x32
 80031a4:	f004 f9f0 	bl	8007588 <HAL_Delay>

		homingAprox();
 80031a8:	f7fe ff2e 	bl	8002008 <homingAprox>
		homingArm1();
 80031ac:	f7ff f904 	bl	80023b8 <homingArm1>
		homingArm2();
 80031b0:	f7ff fa0e 	bl	80025d0 <homingArm2>
		homingArm3();
 80031b4:	f7ff fb18 	bl	80027e8 <homingArm3>
		//HAL_GPIO_WritePin(S_Enable_3_GPIO_Port, S_Enable_3_Pin, GPIO_PIN_SET);

		//HAL_Delay(50); //50 ms es el tiempo que la señal ENABLE en cambiar de estado


		Pini.x=0;
 80031b8:	4919      	ldr	r1, [pc, #100]	; (8003220 <interpretaComando+0x820>)
 80031ba:	f04f 0200 	mov.w	r2, #0
 80031be:	f04f 0300 	mov.w	r3, #0
 80031c2:	e9c1 2300 	strd	r2, r3, [r1]
		Pini.y=0;
 80031c6:	4916      	ldr	r1, [pc, #88]	; (8003220 <interpretaComando+0x820>)
 80031c8:	f04f 0200 	mov.w	r2, #0
 80031cc:	f04f 0300 	mov.w	r3, #0
 80031d0:	e9c1 2302 	strd	r2, r3, [r1, #8]
		Pini.z = -0.334658034417224;
 80031d4:	4912      	ldr	r1, [pc, #72]	; (8003220 <interpretaComando+0x820>)
 80031d6:	a308      	add	r3, pc, #32	; (adr r3, 80031f8 <interpretaComando+0x7f8>)
 80031d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031dc:	e9c1 2304 	strd	r2, r3, [r1, #16]

		HAL_UART_Transmit(&huart3,(uint8_t *)"Fin_H\n", 7, 100);
 80031e0:	2364      	movs	r3, #100	; 0x64
 80031e2:	2207      	movs	r2, #7
 80031e4:	490f      	ldr	r1, [pc, #60]	; (8003224 <interpretaComando+0x824>)
 80031e6:	480a      	ldr	r0, [pc, #40]	; (8003210 <interpretaComando+0x810>)
 80031e8:	f009 fe48 	bl	800ce7c <HAL_UART_Transmit>


	break;
 80031ec:	bf00      	nop

	}

}
 80031ee:	bf00      	nop
 80031f0:	3728      	adds	r7, #40	; 0x28
 80031f2:	46bd      	mov	sp, r7
 80031f4:	bd80      	pop	{r7, pc}
 80031f6:	bf00      	nop
 80031f8:	884a9983 	.word	0x884a9983
 80031fc:	bfd56b09 	.word	0xbfd56b09
 8003200:	240006f4 	.word	0x240006f4
 8003204:	240003a8 	.word	0x240003a8
 8003208:	24000680 	.word	0x24000680
 800320c:	08012ba0 	.word	0x08012ba0
 8003210:	24000bcc 	.word	0x24000bcc
 8003214:	08012bac 	.word	0x08012bac
 8003218:	08012bb8 	.word	0x08012bb8
 800321c:	58020c00 	.word	0x58020c00
 8003220:	24000668 	.word	0x24000668
 8003224:	08012bc4 	.word	0x08012bc4

08003228 <jacobianoInverso>:
double cross_P2[3];
double cross_P3[3];
double dot[3];


void jacobianoInverso(double Vxaux, double Vyaux, double Vzaux, double Pxaux, double Pyaux, double Pzaux) {
 8003228:	b590      	push	{r4, r7, lr}
 800322a:	b0ad      	sub	sp, #180	; 0xb4
 800322c:	af00      	add	r7, sp, #0
 800322e:	ed87 0b1c 	vstr	d0, [r7, #112]	; 0x70
 8003232:	ed87 1b1a 	vstr	d1, [r7, #104]	; 0x68
 8003236:	ed87 2b18 	vstr	d2, [r7, #96]	; 0x60
 800323a:	ed87 3b16 	vstr	d3, [r7, #88]	; 0x58
 800323e:	ed87 4b14 	vstr	d4, [r7, #80]	; 0x50
 8003242:	ed87 5b12 	vstr	d5, [r7, #72]	; 0x48
	 * 	 Funcion que devuelve la velocidad angular de cada motor
	 *	 Entrada: Velocidad en (x,y,z) y Posicion en (x,y,z)
	 *	 Salida:  Velocidad angular en rad/s
	 	 -----------------------------------------------------------------------*/

	double Vaux[3] = { Vxaux, Vyaux, Vzaux };
 8003246:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 800324a:	e9c7 231e 	strd	r2, r3, [r7, #120]	; 0x78
 800324e:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 8003252:	e9c7 2320 	strd	r2, r3, [r7, #128]	; 0x80
 8003256:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 800325a:	e9c7 2322 	strd	r2, r3, [r7, #136]	; 0x88

	E1[0] = Pxaux + 0;
 800325e:	ed97 7b16 	vldr	d7, [r7, #88]	; 0x58
 8003262:	ed9f 6bc3 	vldr	d6, [pc, #780]	; 8003570 <jacobianoInverso+0x348>
 8003266:	ee37 7b06 	vadd.f64	d7, d7, d6
 800326a:	4bc9      	ldr	r3, [pc, #804]	; (8003590 <jacobianoInverso+0x368>)
 800326c:	ed83 7b00 	vstr	d7, [r3]
	E1[1] = Pyaux - 0.07;
 8003270:	ed97 7b14 	vldr	d7, [r7, #80]	; 0x50
 8003274:	ed9f 6bc0 	vldr	d6, [pc, #768]	; 8003578 <jacobianoInverso+0x350>
 8003278:	ee37 7b46 	vsub.f64	d7, d7, d6
 800327c:	4bc4      	ldr	r3, [pc, #784]	; (8003590 <jacobianoInverso+0x368>)
 800327e:	ed83 7b02 	vstr	d7, [r3, #8]
	E1[2] = Pzaux;
 8003282:	49c3      	ldr	r1, [pc, #780]	; (8003590 <jacobianoInverso+0x368>)
 8003284:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8003288:	e9c1 2304 	strd	r2, r3, [r1, #16]
	E2[0] = Pxaux + 0.060621778264911;
 800328c:	ed97 7b16 	vldr	d7, [r7, #88]	; 0x58
 8003290:	ed9f 6bbb 	vldr	d6, [pc, #748]	; 8003580 <jacobianoInverso+0x358>
 8003294:	ee37 7b06 	vadd.f64	d7, d7, d6
 8003298:	4bbe      	ldr	r3, [pc, #760]	; (8003594 <jacobianoInverso+0x36c>)
 800329a:	ed83 7b00 	vstr	d7, [r3]
	E2[1] = Pyaux + 0.035;
 800329e:	ed97 7b14 	vldr	d7, [r7, #80]	; 0x50
 80032a2:	ed9f 6bb9 	vldr	d6, [pc, #740]	; 8003588 <jacobianoInverso+0x360>
 80032a6:	ee37 7b06 	vadd.f64	d7, d7, d6
 80032aa:	4bba      	ldr	r3, [pc, #744]	; (8003594 <jacobianoInverso+0x36c>)
 80032ac:	ed83 7b02 	vstr	d7, [r3, #8]
	E2[2] = Pzaux;
 80032b0:	49b8      	ldr	r1, [pc, #736]	; (8003594 <jacobianoInverso+0x36c>)
 80032b2:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80032b6:	e9c1 2304 	strd	r2, r3, [r1, #16]
	E3[0] = Pxaux - 0.060621778264911;
 80032ba:	ed97 7b16 	vldr	d7, [r7, #88]	; 0x58
 80032be:	ed9f 6bb0 	vldr	d6, [pc, #704]	; 8003580 <jacobianoInverso+0x358>
 80032c2:	ee37 7b46 	vsub.f64	d7, d7, d6
 80032c6:	4bb4      	ldr	r3, [pc, #720]	; (8003598 <jacobianoInverso+0x370>)
 80032c8:	ed83 7b00 	vstr	d7, [r3]
	E3[1] = Pyaux + 0.035;
 80032cc:	ed97 7b14 	vldr	d7, [r7, #80]	; 0x50
 80032d0:	ed9f 6bad 	vldr	d6, [pc, #692]	; 8003588 <jacobianoInverso+0x360>
 80032d4:	ee37 7b06 	vadd.f64	d7, d7, d6
 80032d8:	4baf      	ldr	r3, [pc, #700]	; (8003598 <jacobianoInverso+0x370>)
 80032da:	ed83 7b02 	vstr	d7, [r3, #8]
	E3[2] = Pzaux;
 80032de:	49ae      	ldr	r1, [pc, #696]	; (8003598 <jacobianoInverso+0x370>)
 80032e0:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80032e4:	e9c1 2304 	strd	r2, r3, [r1, #16]

	l1[0][0] = XJ1_1 - F1[0];//l11=[(XJ1(1)-F1(1,1));(YJ1(1)-F1(1,2));(ZJ1(1)-F1(1,3))];
 80032e8:	4bac      	ldr	r3, [pc, #688]	; (800359c <jacobianoInverso+0x374>)
 80032ea:	ed93 6b00 	vldr	d6, [r3]
 80032ee:	4bac      	ldr	r3, [pc, #688]	; (80035a0 <jacobianoInverso+0x378>)
 80032f0:	ed93 7b00 	vldr	d7, [r3]
 80032f4:	ee36 7b47 	vsub.f64	d7, d6, d7
 80032f8:	4baa      	ldr	r3, [pc, #680]	; (80035a4 <jacobianoInverso+0x37c>)
 80032fa:	ed83 7b00 	vstr	d7, [r3]
	l1[0][1] = YJ1_1 - F1[1];
 80032fe:	4baa      	ldr	r3, [pc, #680]	; (80035a8 <jacobianoInverso+0x380>)
 8003300:	ed93 6b00 	vldr	d6, [r3]
 8003304:	4ba6      	ldr	r3, [pc, #664]	; (80035a0 <jacobianoInverso+0x378>)
 8003306:	ed93 7b02 	vldr	d7, [r3, #8]
 800330a:	ee36 7b47 	vsub.f64	d7, d6, d7
 800330e:	4ba5      	ldr	r3, [pc, #660]	; (80035a4 <jacobianoInverso+0x37c>)
 8003310:	ed83 7b02 	vstr	d7, [r3, #8]
	l1[0][2] = ZJ1_1 - F1[2];
 8003314:	4ba5      	ldr	r3, [pc, #660]	; (80035ac <jacobianoInverso+0x384>)
 8003316:	ed93 6b00 	vldr	d6, [r3]
 800331a:	4ba1      	ldr	r3, [pc, #644]	; (80035a0 <jacobianoInverso+0x378>)
 800331c:	ed93 7b04 	vldr	d7, [r3, #16]
 8003320:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003324:	4b9f      	ldr	r3, [pc, #636]	; (80035a4 <jacobianoInverso+0x37c>)
 8003326:	ed83 7b04 	vstr	d7, [r3, #16]
	l1[1][0] = XJ2_1 - F2[0];//l12=[(XJ2(1)-F2(1,1));(YJ2(1)-F2(1,2));(ZJ2(1)-F2(1,3))];
 800332a:	4ba1      	ldr	r3, [pc, #644]	; (80035b0 <jacobianoInverso+0x388>)
 800332c:	ed93 6b00 	vldr	d6, [r3]
 8003330:	4ba0      	ldr	r3, [pc, #640]	; (80035b4 <jacobianoInverso+0x38c>)
 8003332:	ed93 7b00 	vldr	d7, [r3]
 8003336:	ee36 7b47 	vsub.f64	d7, d6, d7
 800333a:	4b9a      	ldr	r3, [pc, #616]	; (80035a4 <jacobianoInverso+0x37c>)
 800333c:	ed83 7b06 	vstr	d7, [r3, #24]
	l1[1][1] = YJ2_1 - F2[1];
 8003340:	4b9d      	ldr	r3, [pc, #628]	; (80035b8 <jacobianoInverso+0x390>)
 8003342:	ed93 6b00 	vldr	d6, [r3]
 8003346:	4b9b      	ldr	r3, [pc, #620]	; (80035b4 <jacobianoInverso+0x38c>)
 8003348:	ed93 7b02 	vldr	d7, [r3, #8]
 800334c:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003350:	4b94      	ldr	r3, [pc, #592]	; (80035a4 <jacobianoInverso+0x37c>)
 8003352:	ed83 7b08 	vstr	d7, [r3, #32]
	l1[1][2] = ZJ2_1 - F2[2];
 8003356:	4b99      	ldr	r3, [pc, #612]	; (80035bc <jacobianoInverso+0x394>)
 8003358:	ed93 6b00 	vldr	d6, [r3]
 800335c:	4b95      	ldr	r3, [pc, #596]	; (80035b4 <jacobianoInverso+0x38c>)
 800335e:	ed93 7b04 	vldr	d7, [r3, #16]
 8003362:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003366:	4b8f      	ldr	r3, [pc, #572]	; (80035a4 <jacobianoInverso+0x37c>)
 8003368:	ed83 7b0a 	vstr	d7, [r3, #40]	; 0x28
	l1[2][0] = XJ3_1 - F3[0];//l13=[(XJ3(1)-F3(1,1));(YJ3(1)-F3(1,2));(ZJ3(1)-F3(1,3))];
 800336c:	4b94      	ldr	r3, [pc, #592]	; (80035c0 <jacobianoInverso+0x398>)
 800336e:	ed93 6b00 	vldr	d6, [r3]
 8003372:	4b94      	ldr	r3, [pc, #592]	; (80035c4 <jacobianoInverso+0x39c>)
 8003374:	ed93 7b00 	vldr	d7, [r3]
 8003378:	ee36 7b47 	vsub.f64	d7, d6, d7
 800337c:	4b89      	ldr	r3, [pc, #548]	; (80035a4 <jacobianoInverso+0x37c>)
 800337e:	ed83 7b0c 	vstr	d7, [r3, #48]	; 0x30
	l1[2][1] = YJ3_1 - F3[1];
 8003382:	4b91      	ldr	r3, [pc, #580]	; (80035c8 <jacobianoInverso+0x3a0>)
 8003384:	ed93 6b00 	vldr	d6, [r3]
 8003388:	4b8e      	ldr	r3, [pc, #568]	; (80035c4 <jacobianoInverso+0x39c>)
 800338a:	ed93 7b02 	vldr	d7, [r3, #8]
 800338e:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003392:	4b84      	ldr	r3, [pc, #528]	; (80035a4 <jacobianoInverso+0x37c>)
 8003394:	ed83 7b0e 	vstr	d7, [r3, #56]	; 0x38
	l1[2][2] = ZJ3_1 - F3[2];
 8003398:	4b8c      	ldr	r3, [pc, #560]	; (80035cc <jacobianoInverso+0x3a4>)
 800339a:	ed93 6b00 	vldr	d6, [r3]
 800339e:	4b89      	ldr	r3, [pc, #548]	; (80035c4 <jacobianoInverso+0x39c>)
 80033a0:	ed93 7b04 	vldr	d7, [r3, #16]
 80033a4:	ee36 7b47 	vsub.f64	d7, d6, d7
 80033a8:	4b7e      	ldr	r3, [pc, #504]	; (80035a4 <jacobianoInverso+0x37c>)
 80033aa:	ed83 7b10 	vstr	d7, [r3, #64]	; 0x40

	l2[0][0] = E1[0] - XJ1_1;//l21=[(E1(1,1)-XJ1(1));(E1(1,2)-YJ1(1));(E1(1,3)-ZJ1(1))];
 80033ae:	4b78      	ldr	r3, [pc, #480]	; (8003590 <jacobianoInverso+0x368>)
 80033b0:	ed93 6b00 	vldr	d6, [r3]
 80033b4:	4b79      	ldr	r3, [pc, #484]	; (800359c <jacobianoInverso+0x374>)
 80033b6:	ed93 7b00 	vldr	d7, [r3]
 80033ba:	ee36 7b47 	vsub.f64	d7, d6, d7
 80033be:	4b84      	ldr	r3, [pc, #528]	; (80035d0 <jacobianoInverso+0x3a8>)
 80033c0:	ed83 7b00 	vstr	d7, [r3]
	l2[1][0] = E1[1] - YJ1_1;
 80033c4:	4b72      	ldr	r3, [pc, #456]	; (8003590 <jacobianoInverso+0x368>)
 80033c6:	ed93 6b02 	vldr	d6, [r3, #8]
 80033ca:	4b77      	ldr	r3, [pc, #476]	; (80035a8 <jacobianoInverso+0x380>)
 80033cc:	ed93 7b00 	vldr	d7, [r3]
 80033d0:	ee36 7b47 	vsub.f64	d7, d6, d7
 80033d4:	4b7e      	ldr	r3, [pc, #504]	; (80035d0 <jacobianoInverso+0x3a8>)
 80033d6:	ed83 7b06 	vstr	d7, [r3, #24]
	l2[2][0] = E1[2] - ZJ1_1;
 80033da:	4b6d      	ldr	r3, [pc, #436]	; (8003590 <jacobianoInverso+0x368>)
 80033dc:	ed93 6b04 	vldr	d6, [r3, #16]
 80033e0:	4b72      	ldr	r3, [pc, #456]	; (80035ac <jacobianoInverso+0x384>)
 80033e2:	ed93 7b00 	vldr	d7, [r3]
 80033e6:	ee36 7b47 	vsub.f64	d7, d6, d7
 80033ea:	4b79      	ldr	r3, [pc, #484]	; (80035d0 <jacobianoInverso+0x3a8>)
 80033ec:	ed83 7b0c 	vstr	d7, [r3, #48]	; 0x30
	l2[0][1] = E2[0] - XJ2_1;//l22=[(E2(1,1)-XJ2(1));(E2(1,2)-YJ2(1));(E2(1,3)-ZJ2(1))];
 80033f0:	4b68      	ldr	r3, [pc, #416]	; (8003594 <jacobianoInverso+0x36c>)
 80033f2:	ed93 6b00 	vldr	d6, [r3]
 80033f6:	4b6e      	ldr	r3, [pc, #440]	; (80035b0 <jacobianoInverso+0x388>)
 80033f8:	ed93 7b00 	vldr	d7, [r3]
 80033fc:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003400:	4b73      	ldr	r3, [pc, #460]	; (80035d0 <jacobianoInverso+0x3a8>)
 8003402:	ed83 7b02 	vstr	d7, [r3, #8]
	l2[1][1] = E2[1] - YJ2_1;
 8003406:	4b63      	ldr	r3, [pc, #396]	; (8003594 <jacobianoInverso+0x36c>)
 8003408:	ed93 6b02 	vldr	d6, [r3, #8]
 800340c:	4b6a      	ldr	r3, [pc, #424]	; (80035b8 <jacobianoInverso+0x390>)
 800340e:	ed93 7b00 	vldr	d7, [r3]
 8003412:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003416:	4b6e      	ldr	r3, [pc, #440]	; (80035d0 <jacobianoInverso+0x3a8>)
 8003418:	ed83 7b08 	vstr	d7, [r3, #32]
	l2[2][1] = E2[2] - ZJ2_1;
 800341c:	4b5d      	ldr	r3, [pc, #372]	; (8003594 <jacobianoInverso+0x36c>)
 800341e:	ed93 6b04 	vldr	d6, [r3, #16]
 8003422:	4b66      	ldr	r3, [pc, #408]	; (80035bc <jacobianoInverso+0x394>)
 8003424:	ed93 7b00 	vldr	d7, [r3]
 8003428:	ee36 7b47 	vsub.f64	d7, d6, d7
 800342c:	4b68      	ldr	r3, [pc, #416]	; (80035d0 <jacobianoInverso+0x3a8>)
 800342e:	ed83 7b0e 	vstr	d7, [r3, #56]	; 0x38
	l2[0][2] = E3[0] - XJ3_1;//l23=[(E3(1,1)-XJ3(1));(E3(1,2)-YJ3(1));(E3(1,3)-ZJ3(1))];
 8003432:	4b59      	ldr	r3, [pc, #356]	; (8003598 <jacobianoInverso+0x370>)
 8003434:	ed93 6b00 	vldr	d6, [r3]
 8003438:	4b61      	ldr	r3, [pc, #388]	; (80035c0 <jacobianoInverso+0x398>)
 800343a:	ed93 7b00 	vldr	d7, [r3]
 800343e:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003442:	4b63      	ldr	r3, [pc, #396]	; (80035d0 <jacobianoInverso+0x3a8>)
 8003444:	ed83 7b04 	vstr	d7, [r3, #16]
	l2[1][2] = E3[1] - YJ3_1;
 8003448:	4b53      	ldr	r3, [pc, #332]	; (8003598 <jacobianoInverso+0x370>)
 800344a:	ed93 6b02 	vldr	d6, [r3, #8]
 800344e:	4b5e      	ldr	r3, [pc, #376]	; (80035c8 <jacobianoInverso+0x3a0>)
 8003450:	ed93 7b00 	vldr	d7, [r3]
 8003454:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003458:	4b5d      	ldr	r3, [pc, #372]	; (80035d0 <jacobianoInverso+0x3a8>)
 800345a:	ed83 7b0a 	vstr	d7, [r3, #40]	; 0x28
	l2[2][2] = E3[2] - ZJ3_1;
 800345e:	4b4e      	ldr	r3, [pc, #312]	; (8003598 <jacobianoInverso+0x370>)
 8003460:	ed93 6b04 	vldr	d6, [r3, #16]
 8003464:	4b59      	ldr	r3, [pc, #356]	; (80035cc <jacobianoInverso+0x3a4>)
 8003466:	ed93 7b00 	vldr	d7, [r3]
 800346a:	ee36 7b47 	vsub.f64	d7, d6, d7
 800346e:	4b58      	ldr	r3, [pc, #352]	; (80035d0 <jacobianoInverso+0x3a8>)
 8003470:	ed83 7b10 	vstr	d7, [r3, #64]	; 0x40

	Jcd = transpuesta(l2);				//Jacobiano de la cinematica directa
 8003474:	4c57      	ldr	r4, [pc, #348]	; (80035d4 <jacobianoInverso+0x3ac>)
 8003476:	463b      	mov	r3, r7
 8003478:	4955      	ldr	r1, [pc, #340]	; (80035d0 <jacobianoInverso+0x3a8>)
 800347a:	4618      	mov	r0, r3
 800347c:	f7fd fafe 	bl	8000a7c <transpuesta>
 8003480:	4620      	mov	r0, r4
 8003482:	463b      	mov	r3, r7
 8003484:	2248      	movs	r2, #72	; 0x48
 8003486:	4619      	mov	r1, r3
 8003488:	f00c f830 	bl	800f4ec <memcpy>

	cross_P1[0] = SA1[1] * l1[0][2] - SA1[2] * l1[0][1];//Producto Cruz entre vectores
 800348c:	4b52      	ldr	r3, [pc, #328]	; (80035d8 <jacobianoInverso+0x3b0>)
 800348e:	ed93 6b02 	vldr	d6, [r3, #8]
 8003492:	4b44      	ldr	r3, [pc, #272]	; (80035a4 <jacobianoInverso+0x37c>)
 8003494:	ed93 7b04 	vldr	d7, [r3, #16]
 8003498:	ee26 6b07 	vmul.f64	d6, d6, d7
 800349c:	4b4e      	ldr	r3, [pc, #312]	; (80035d8 <jacobianoInverso+0x3b0>)
 800349e:	ed93 5b04 	vldr	d5, [r3, #16]
 80034a2:	4b40      	ldr	r3, [pc, #256]	; (80035a4 <jacobianoInverso+0x37c>)
 80034a4:	ed93 7b02 	vldr	d7, [r3, #8]
 80034a8:	ee25 7b07 	vmul.f64	d7, d5, d7
 80034ac:	ee36 7b47 	vsub.f64	d7, d6, d7
 80034b0:	4b4a      	ldr	r3, [pc, #296]	; (80035dc <jacobianoInverso+0x3b4>)
 80034b2:	ed83 7b00 	vstr	d7, [r3]
	cross_P1[1] = SA1[2] * l1[0][0] - SA1[0] * l1[0][2];
 80034b6:	4b48      	ldr	r3, [pc, #288]	; (80035d8 <jacobianoInverso+0x3b0>)
 80034b8:	ed93 6b04 	vldr	d6, [r3, #16]
 80034bc:	4b39      	ldr	r3, [pc, #228]	; (80035a4 <jacobianoInverso+0x37c>)
 80034be:	ed93 7b00 	vldr	d7, [r3]
 80034c2:	ee26 6b07 	vmul.f64	d6, d6, d7
 80034c6:	4b44      	ldr	r3, [pc, #272]	; (80035d8 <jacobianoInverso+0x3b0>)
 80034c8:	ed93 5b00 	vldr	d5, [r3]
 80034cc:	4b35      	ldr	r3, [pc, #212]	; (80035a4 <jacobianoInverso+0x37c>)
 80034ce:	ed93 7b04 	vldr	d7, [r3, #16]
 80034d2:	ee25 7b07 	vmul.f64	d7, d5, d7
 80034d6:	ee36 7b47 	vsub.f64	d7, d6, d7
 80034da:	4b40      	ldr	r3, [pc, #256]	; (80035dc <jacobianoInverso+0x3b4>)
 80034dc:	ed83 7b02 	vstr	d7, [r3, #8]
	cross_P1[2] = SA1[0] * l1[0][1] - SA1[1] * l1[0][0];
 80034e0:	4b3d      	ldr	r3, [pc, #244]	; (80035d8 <jacobianoInverso+0x3b0>)
 80034e2:	ed93 6b00 	vldr	d6, [r3]
 80034e6:	4b2f      	ldr	r3, [pc, #188]	; (80035a4 <jacobianoInverso+0x37c>)
 80034e8:	ed93 7b02 	vldr	d7, [r3, #8]
 80034ec:	ee26 6b07 	vmul.f64	d6, d6, d7
 80034f0:	4b39      	ldr	r3, [pc, #228]	; (80035d8 <jacobianoInverso+0x3b0>)
 80034f2:	ed93 5b02 	vldr	d5, [r3, #8]
 80034f6:	4b2b      	ldr	r3, [pc, #172]	; (80035a4 <jacobianoInverso+0x37c>)
 80034f8:	ed93 7b00 	vldr	d7, [r3]
 80034fc:	ee25 7b07 	vmul.f64	d7, d5, d7
 8003500:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003504:	4b35      	ldr	r3, [pc, #212]	; (80035dc <jacobianoInverso+0x3b4>)
 8003506:	ed83 7b04 	vstr	d7, [r3, #16]

	cross_P2[0] = SA2[1] * l1[1][2] - SA2[2] * l1[1][1];//vect_A[1] * vect_B[2] - vect_A[2] * vect_B[1]
 800350a:	4b35      	ldr	r3, [pc, #212]	; (80035e0 <jacobianoInverso+0x3b8>)
 800350c:	ed93 6b02 	vldr	d6, [r3, #8]
 8003510:	4b24      	ldr	r3, [pc, #144]	; (80035a4 <jacobianoInverso+0x37c>)
 8003512:	ed93 7b0a 	vldr	d7, [r3, #40]	; 0x28
 8003516:	ee26 6b07 	vmul.f64	d6, d6, d7
 800351a:	4b31      	ldr	r3, [pc, #196]	; (80035e0 <jacobianoInverso+0x3b8>)
 800351c:	ed93 5b04 	vldr	d5, [r3, #16]
 8003520:	4b20      	ldr	r3, [pc, #128]	; (80035a4 <jacobianoInverso+0x37c>)
 8003522:	ed93 7b08 	vldr	d7, [r3, #32]
 8003526:	ee25 7b07 	vmul.f64	d7, d5, d7
 800352a:	ee36 7b47 	vsub.f64	d7, d6, d7
 800352e:	4b2d      	ldr	r3, [pc, #180]	; (80035e4 <jacobianoInverso+0x3bc>)
 8003530:	ed83 7b00 	vstr	d7, [r3]
	cross_P2[1] = SA2[2] * l1[1][0] - SA2[0] * l1[1][2];//vect_A[2] * vect_B[0] - vect_A[0] * vect_B[2]
 8003534:	4b2a      	ldr	r3, [pc, #168]	; (80035e0 <jacobianoInverso+0x3b8>)
 8003536:	ed93 6b04 	vldr	d6, [r3, #16]
 800353a:	4b1a      	ldr	r3, [pc, #104]	; (80035a4 <jacobianoInverso+0x37c>)
 800353c:	ed93 7b06 	vldr	d7, [r3, #24]
 8003540:	ee26 6b07 	vmul.f64	d6, d6, d7
 8003544:	4b26      	ldr	r3, [pc, #152]	; (80035e0 <jacobianoInverso+0x3b8>)
 8003546:	ed93 5b00 	vldr	d5, [r3]
 800354a:	4b16      	ldr	r3, [pc, #88]	; (80035a4 <jacobianoInverso+0x37c>)
 800354c:	ed93 7b0a 	vldr	d7, [r3, #40]	; 0x28
 8003550:	ee25 7b07 	vmul.f64	d7, d5, d7
 8003554:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003558:	4b22      	ldr	r3, [pc, #136]	; (80035e4 <jacobianoInverso+0x3bc>)
 800355a:	ed83 7b02 	vstr	d7, [r3, #8]
	cross_P2[2] = SA2[0] * l1[1][1] - SA2[1] * l1[1][0];//vect_A[0] * vect_B[1] - vect_A[1] * vect_B[0]
 800355e:	4b20      	ldr	r3, [pc, #128]	; (80035e0 <jacobianoInverso+0x3b8>)
 8003560:	ed93 6b00 	vldr	d6, [r3]
 8003564:	4b0f      	ldr	r3, [pc, #60]	; (80035a4 <jacobianoInverso+0x37c>)
 8003566:	ed93 7b08 	vldr	d7, [r3, #32]
 800356a:	ee26 6b07 	vmul.f64	d6, d6, d7
 800356e:	e03b      	b.n	80035e8 <jacobianoInverso+0x3c0>
	...
 8003578:	1eb851ec 	.word	0x1eb851ec
 800357c:	3fb1eb85 	.word	0x3fb1eb85
 8003580:	562574c0 	.word	0x562574c0
 8003584:	3faf09d1 	.word	0x3faf09d1
 8003588:	1eb851ec 	.word	0x1eb851ec
 800358c:	3fa1eb85 	.word	0x3fa1eb85
 8003590:	240003b8 	.word	0x240003b8
 8003594:	240003d0 	.word	0x240003d0
 8003598:	240003e8 	.word	0x240003e8
 800359c:	240002d0 	.word	0x240002d0
 80035a0:	24000000 	.word	0x24000000
 80035a4:	24000400 	.word	0x24000400
 80035a8:	240002e0 	.word	0x240002e0
 80035ac:	240002f0 	.word	0x240002f0
 80035b0:	24000318 	.word	0x24000318
 80035b4:	24000018 	.word	0x24000018
 80035b8:	24000328 	.word	0x24000328
 80035bc:	24000338 	.word	0x24000338
 80035c0:	24000360 	.word	0x24000360
 80035c4:	24000030 	.word	0x24000030
 80035c8:	24000370 	.word	0x24000370
 80035cc:	24000380 	.word	0x24000380
 80035d0:	24000448 	.word	0x24000448
 80035d4:	24000490 	.word	0x24000490
 80035d8:	24000048 	.word	0x24000048
 80035dc:	240005b0 	.word	0x240005b0
 80035e0:	24000060 	.word	0x24000060
 80035e4:	240005c8 	.word	0x240005c8
 80035e8:	4b92      	ldr	r3, [pc, #584]	; (8003834 <jacobianoInverso+0x60c>)
 80035ea:	ed93 5b02 	vldr	d5, [r3, #8]
 80035ee:	4b92      	ldr	r3, [pc, #584]	; (8003838 <jacobianoInverso+0x610>)
 80035f0:	ed93 7b06 	vldr	d7, [r3, #24]
 80035f4:	ee25 7b07 	vmul.f64	d7, d5, d7
 80035f8:	ee36 7b47 	vsub.f64	d7, d6, d7
 80035fc:	4b8f      	ldr	r3, [pc, #572]	; (800383c <jacobianoInverso+0x614>)
 80035fe:	ed83 7b04 	vstr	d7, [r3, #16]

	cross_P3[0] = SA3[1] * l1[2][2] - SA3[2] * l1[2][1];
 8003602:	4b8f      	ldr	r3, [pc, #572]	; (8003840 <jacobianoInverso+0x618>)
 8003604:	ed93 6b02 	vldr	d6, [r3, #8]
 8003608:	4b8b      	ldr	r3, [pc, #556]	; (8003838 <jacobianoInverso+0x610>)
 800360a:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 800360e:	ee26 6b07 	vmul.f64	d6, d6, d7
 8003612:	4b8b      	ldr	r3, [pc, #556]	; (8003840 <jacobianoInverso+0x618>)
 8003614:	ed93 5b04 	vldr	d5, [r3, #16]
 8003618:	4b87      	ldr	r3, [pc, #540]	; (8003838 <jacobianoInverso+0x610>)
 800361a:	ed93 7b0e 	vldr	d7, [r3, #56]	; 0x38
 800361e:	ee25 7b07 	vmul.f64	d7, d5, d7
 8003622:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003626:	4b87      	ldr	r3, [pc, #540]	; (8003844 <jacobianoInverso+0x61c>)
 8003628:	ed83 7b00 	vstr	d7, [r3]
	cross_P3[1] = SA3[2] * l1[2][0] - SA3[0] * l1[2][2];
 800362c:	4b84      	ldr	r3, [pc, #528]	; (8003840 <jacobianoInverso+0x618>)
 800362e:	ed93 6b04 	vldr	d6, [r3, #16]
 8003632:	4b81      	ldr	r3, [pc, #516]	; (8003838 <jacobianoInverso+0x610>)
 8003634:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 8003638:	ee26 6b07 	vmul.f64	d6, d6, d7
 800363c:	4b80      	ldr	r3, [pc, #512]	; (8003840 <jacobianoInverso+0x618>)
 800363e:	ed93 5b00 	vldr	d5, [r3]
 8003642:	4b7d      	ldr	r3, [pc, #500]	; (8003838 <jacobianoInverso+0x610>)
 8003644:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 8003648:	ee25 7b07 	vmul.f64	d7, d5, d7
 800364c:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003650:	4b7c      	ldr	r3, [pc, #496]	; (8003844 <jacobianoInverso+0x61c>)
 8003652:	ed83 7b02 	vstr	d7, [r3, #8]
	cross_P3[2] = SA3[0] * l1[2][1] - SA3[1] * l1[2][0];
 8003656:	4b7a      	ldr	r3, [pc, #488]	; (8003840 <jacobianoInverso+0x618>)
 8003658:	ed93 6b00 	vldr	d6, [r3]
 800365c:	4b76      	ldr	r3, [pc, #472]	; (8003838 <jacobianoInverso+0x610>)
 800365e:	ed93 7b0e 	vldr	d7, [r3, #56]	; 0x38
 8003662:	ee26 6b07 	vmul.f64	d6, d6, d7
 8003666:	4b76      	ldr	r3, [pc, #472]	; (8003840 <jacobianoInverso+0x618>)
 8003668:	ed93 5b02 	vldr	d5, [r3, #8]
 800366c:	4b72      	ldr	r3, [pc, #456]	; (8003838 <jacobianoInverso+0x610>)
 800366e:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 8003672:	ee25 7b07 	vmul.f64	d7, d5, d7
 8003676:	ee36 7b47 	vsub.f64	d7, d6, d7
 800367a:	4b72      	ldr	r3, [pc, #456]	; (8003844 <jacobianoInverso+0x61c>)
 800367c:	ed83 7b04 	vstr	d7, [r3, #16]

	dot[0] = productDot(cross_P1, Jcd.m[0]);			//Producto Punto
 8003680:	4971      	ldr	r1, [pc, #452]	; (8003848 <jacobianoInverso+0x620>)
 8003682:	4872      	ldr	r0, [pc, #456]	; (800384c <jacobianoInverso+0x624>)
 8003684:	f7fd fa36 	bl	8000af4 <productDot>
 8003688:	eeb0 7b40 	vmov.f64	d7, d0
 800368c:	4b70      	ldr	r3, [pc, #448]	; (8003850 <jacobianoInverso+0x628>)
 800368e:	ed83 7b00 	vstr	d7, [r3]
	dot[1] = productDot(cross_P2, Jcd.m[1]);
 8003692:	4970      	ldr	r1, [pc, #448]	; (8003854 <jacobianoInverso+0x62c>)
 8003694:	4869      	ldr	r0, [pc, #420]	; (800383c <jacobianoInverso+0x614>)
 8003696:	f7fd fa2d 	bl	8000af4 <productDot>
 800369a:	eeb0 7b40 	vmov.f64	d7, d0
 800369e:	4b6c      	ldr	r3, [pc, #432]	; (8003850 <jacobianoInverso+0x628>)
 80036a0:	ed83 7b02 	vstr	d7, [r3, #8]
	dot[2] = productDot(cross_P3, Jcd.m[2]);
 80036a4:	496c      	ldr	r1, [pc, #432]	; (8003858 <jacobianoInverso+0x630>)
 80036a6:	4867      	ldr	r0, [pc, #412]	; (8003844 <jacobianoInverso+0x61c>)
 80036a8:	f7fd fa24 	bl	8000af4 <productDot>
 80036ac:	eeb0 7b40 	vmov.f64	d7, d0
 80036b0:	4b67      	ldr	r3, [pc, #412]	; (8003850 <jacobianoInverso+0x628>)
 80036b2:	ed83 7b04 	vstr	d7, [r3, #16]

	for (int i = 0; i < 3; ++i) {			//Jacobiano de la cinematica inversa
 80036b6:	2300      	movs	r3, #0
 80036b8:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80036bc:	e03d      	b.n	800373a <jacobianoInverso+0x512>
		for (int j = 0; j < 3; ++j) {
 80036be:	2300      	movs	r3, #0
 80036c0:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 80036c4:	e030      	b.n	8003728 <jacobianoInverso+0x500>
			if (i == j) {
 80036c6:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 80036ca:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 80036ce:	429a      	cmp	r2, r3
 80036d0:	d114      	bne.n	80036fc <jacobianoInverso+0x4d4>
				Jci[i][j] = dot[i];
 80036d2:	4a5f      	ldr	r2, [pc, #380]	; (8003850 <jacobianoInverso+0x628>)
 80036d4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80036d8:	00db      	lsls	r3, r3, #3
 80036da:	4413      	add	r3, r2
 80036dc:	e9d3 0100 	ldrd	r0, r1, [r3]
 80036e0:	4c5e      	ldr	r4, [pc, #376]	; (800385c <jacobianoInverso+0x634>)
 80036e2:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 80036e6:	4613      	mov	r3, r2
 80036e8:	005b      	lsls	r3, r3, #1
 80036ea:	4413      	add	r3, r2
 80036ec:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 80036f0:	4413      	add	r3, r2
 80036f2:	00db      	lsls	r3, r3, #3
 80036f4:	4423      	add	r3, r4
 80036f6:	e9c3 0100 	strd	r0, r1, [r3]
 80036fa:	e010      	b.n	800371e <jacobianoInverso+0x4f6>
			} else {
				Jci[i][j] = 0;
 80036fc:	4957      	ldr	r1, [pc, #348]	; (800385c <jacobianoInverso+0x634>)
 80036fe:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8003702:	4613      	mov	r3, r2
 8003704:	005b      	lsls	r3, r3, #1
 8003706:	4413      	add	r3, r2
 8003708:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800370c:	4413      	add	r3, r2
 800370e:	00db      	lsls	r3, r3, #3
 8003710:	4419      	add	r1, r3
 8003712:	f04f 0200 	mov.w	r2, #0
 8003716:	f04f 0300 	mov.w	r3, #0
 800371a:	e9c1 2300 	strd	r2, r3, [r1]
		for (int j = 0; j < 3; ++j) {
 800371e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8003722:	3301      	adds	r3, #1
 8003724:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8003728:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800372c:	2b02      	cmp	r3, #2
 800372e:	ddca      	ble.n	80036c6 <jacobianoInverso+0x49e>
	for (int i = 0; i < 3; ++i) {			//Jacobiano de la cinematica inversa
 8003730:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8003734:	3301      	adds	r3, #1
 8003736:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800373a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800373e:	2b02      	cmp	r3, #2
 8003740:	ddbd      	ble.n	80036be <jacobianoInverso+0x496>
			}
		}
	}

	Jci_inv = inversa(Jci);
 8003742:	4c47      	ldr	r4, [pc, #284]	; (8003860 <jacobianoInverso+0x638>)
 8003744:	463b      	mov	r3, r7
 8003746:	4945      	ldr	r1, [pc, #276]	; (800385c <jacobianoInverso+0x634>)
 8003748:	4618      	mov	r0, r3
 800374a:	f7fd fb03 	bl	8000d54 <inversa>
 800374e:	4620      	mov	r0, r4
 8003750:	463b      	mov	r3, r7
 8003752:	2248      	movs	r2, #72	; 0x48
 8003754:	4619      	mov	r1, r3
 8003756:	f00b fec9 	bl	800f4ec <memcpy>
	Jinv = productMatriz(Jcd.m,Jci_inv.m);	//Jacobiano Inverso
 800375a:	4c42      	ldr	r4, [pc, #264]	; (8003864 <jacobianoInverso+0x63c>)
 800375c:	463b      	mov	r3, r7
 800375e:	4a40      	ldr	r2, [pc, #256]	; (8003860 <jacobianoInverso+0x638>)
 8003760:	4939      	ldr	r1, [pc, #228]	; (8003848 <jacobianoInverso+0x620>)
 8003762:	4618      	mov	r0, r3
 8003764:	f7fd fb64 	bl	8000e30 <productMatriz>
 8003768:	4620      	mov	r0, r4
 800376a:	463b      	mov	r3, r7
 800376c:	2248      	movs	r2, #72	; 0x48
 800376e:	4619      	mov	r1, r3
 8003770:	f00b febc 	bl	800f4ec <memcpy>

	for (int i = 0; i < 3; ++i) {
 8003774:	2300      	movs	r3, #0
 8003776:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800377a:	e041      	b.n	8003800 <jacobianoInverso+0x5d8>
		double sum = 0;
 800377c:	f04f 0200 	mov.w	r2, #0
 8003780:	f04f 0300 	mov.w	r3, #0
 8003784:	e9c7 2326 	strd	r2, r3, [r7, #152]	; 0x98
		for (int j = 0; j < 3; ++j) {
 8003788:	2300      	movs	r3, #0
 800378a:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800378e:	e025      	b.n	80037dc <jacobianoInverso+0x5b4>
			sum += sum + Jinv.m[i][j] * Vaux[j];
 8003790:	4934      	ldr	r1, [pc, #208]	; (8003864 <jacobianoInverso+0x63c>)
 8003792:	f8d7 20a4 	ldr.w	r2, [r7, #164]	; 0xa4
 8003796:	4613      	mov	r3, r2
 8003798:	005b      	lsls	r3, r3, #1
 800379a:	4413      	add	r3, r2
 800379c:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80037a0:	4413      	add	r3, r2
 80037a2:	00db      	lsls	r3, r3, #3
 80037a4:	440b      	add	r3, r1
 80037a6:	ed93 6b00 	vldr	d6, [r3]
 80037aa:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 80037ae:	00db      	lsls	r3, r3, #3
 80037b0:	33b0      	adds	r3, #176	; 0xb0
 80037b2:	443b      	add	r3, r7
 80037b4:	3b38      	subs	r3, #56	; 0x38
 80037b6:	ed93 7b00 	vldr	d7, [r3]
 80037ba:	ee26 6b07 	vmul.f64	d6, d6, d7
 80037be:	ed97 7b26 	vldr	d7, [r7, #152]	; 0x98
 80037c2:	ee36 7b07 	vadd.f64	d7, d6, d7
 80037c6:	ed97 6b26 	vldr	d6, [r7, #152]	; 0x98
 80037ca:	ee36 7b07 	vadd.f64	d7, d6, d7
 80037ce:	ed87 7b26 	vstr	d7, [r7, #152]	; 0x98
		for (int j = 0; j < 3; ++j) {
 80037d2:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 80037d6:	3301      	adds	r3, #1
 80037d8:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 80037dc:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 80037e0:	2b02      	cmp	r3, #2
 80037e2:	ddd5      	ble.n	8003790 <jacobianoInverso+0x568>
		}
		omega[i] = sum;
 80037e4:	4a20      	ldr	r2, [pc, #128]	; (8003868 <jacobianoInverso+0x640>)
 80037e6:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 80037ea:	00db      	lsls	r3, r3, #3
 80037ec:	18d1      	adds	r1, r2, r3
 80037ee:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	; 0x98
 80037f2:	e9c1 2300 	strd	r2, r3, [r1]
	for (int i = 0; i < 3; ++i) {
 80037f6:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 80037fa:	3301      	adds	r3, #1
 80037fc:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8003800:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8003804:	2b02      	cmp	r3, #2
 8003806:	ddb9      	ble.n	800377c <jacobianoInverso+0x554>
	}
	omega1 = omega[0];
 8003808:	4b17      	ldr	r3, [pc, #92]	; (8003868 <jacobianoInverso+0x640>)
 800380a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800380e:	4917      	ldr	r1, [pc, #92]	; (800386c <jacobianoInverso+0x644>)
 8003810:	e9c1 2300 	strd	r2, r3, [r1]
	omega2 = omega[1];
 8003814:	4b14      	ldr	r3, [pc, #80]	; (8003868 <jacobianoInverso+0x640>)
 8003816:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 800381a:	4915      	ldr	r1, [pc, #84]	; (8003870 <jacobianoInverso+0x648>)
 800381c:	e9c1 2300 	strd	r2, r3, [r1]
	omega3 = omega[2];
 8003820:	4b11      	ldr	r3, [pc, #68]	; (8003868 <jacobianoInverso+0x640>)
 8003822:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 8003826:	4913      	ldr	r1, [pc, #76]	; (8003874 <jacobianoInverso+0x64c>)
 8003828:	e9c1 2300 	strd	r2, r3, [r1]

}
 800382c:	bf00      	nop
 800382e:	37b4      	adds	r7, #180	; 0xb4
 8003830:	46bd      	mov	sp, r7
 8003832:	bd90      	pop	{r4, r7, pc}
 8003834:	24000060 	.word	0x24000060
 8003838:	24000400 	.word	0x24000400
 800383c:	240005c8 	.word	0x240005c8
 8003840:	24000078 	.word	0x24000078
 8003844:	240005e0 	.word	0x240005e0
 8003848:	24000490 	.word	0x24000490
 800384c:	240005b0 	.word	0x240005b0
 8003850:	240005f8 	.word	0x240005f8
 8003854:	240004a8 	.word	0x240004a8
 8003858:	240004c0 	.word	0x240004c0
 800385c:	240004d8 	.word	0x240004d8
 8003860:	24000520 	.word	0x24000520
 8003864:	24000568 	.word	0x24000568
 8003868:	240006d8 	.word	0x240006d8
 800386c:	24000730 	.word	0x24000730
 8003870:	24000738 	.word	0x24000738
 8003874:	24000740 	.word	0x24000740

08003878 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8003878:	b580      	push	{r7, lr}
 800387a:	ed2d 8b02 	vpush	{d8}
 800387e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8003880:	f003 fdf0 	bl	8007464 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8003884:	f000 f97c 	bl	8003b80 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8003888:	f7fe fac0 	bl	8001e0c <MX_GPIO_Init>
  MX_TIM2_Init();
 800388c:	f001 f86a 	bl	8004964 <MX_TIM2_Init>
  MX_TIM3_Init();
 8003890:	f001 f8d8 	bl	8004a44 <MX_TIM3_Init>
  MX_TIM4_Init();
 8003894:	f001 f948 	bl	8004b28 <MX_TIM4_Init>
  MX_USART3_UART_Init();
 8003898:	f003 fc42 	bl	8007120 <MX_USART3_UART_Init>
  MX_TIM12_Init();
 800389c:	f001 fa06 	bl	8004cac <MX_TIM12_Init>
  MX_TIM13_Init();
 80038a0:	f001 fa68 	bl	8004d74 <MX_TIM13_Init>
  MX_TIM14_Init();
 80038a4:	f001 fab6 	bl	8004e14 <MX_TIM14_Init>
  MX_TIM5_Init();
 80038a8:	f001 f9b0 	bl	8004c0c <MX_TIM5_Init>
  MX_TIM15_Init();
 80038ac:	f001 fb02 	bl	8004eb4 <MX_TIM15_Init>
  MX_USART1_UART_Init();
 80038b0:	f003 fb9e 	bl	8006ff0 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 80038b4:	f003 fbe8 	bl	8007088 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
	HAL_UART_Transmit(&huart3, data, sizeof(data), 100); //Enviamos el mensaje: Start
 80038b8:	2364      	movs	r3, #100	; 0x64
 80038ba:	2207      	movs	r2, #7
 80038bc:	498c      	ldr	r1, [pc, #560]	; (8003af0 <main+0x278>)
 80038be:	488d      	ldr	r0, [pc, #564]	; (8003af4 <main+0x27c>)
 80038c0:	f009 fadc 	bl	800ce7c <HAL_UART_Transmit>
	HAL_UART_Receive_IT(&huart3, &rx_data, 1);
 80038c4:	2201      	movs	r2, #1
 80038c6:	498c      	ldr	r1, [pc, #560]	; (8003af8 <main+0x280>)
 80038c8:	488a      	ldr	r0, [pc, #552]	; (8003af4 <main+0x27c>)
 80038ca:	f009 fb6d 	bl	800cfa8 <HAL_UART_Receive_IT>


	HAL_TIM_Base_Start(&htim12);
 80038ce:	488b      	ldr	r0, [pc, #556]	; (8003afc <main+0x284>)
 80038d0:	f007 fae0 	bl	800ae94 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(&htim13);
 80038d4:	488a      	ldr	r0, [pc, #552]	; (8003b00 <main+0x288>)
 80038d6:	f007 fadd 	bl	800ae94 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(&htim14);
 80038da:	488a      	ldr	r0, [pc, #552]	; (8003b04 <main+0x28c>)
 80038dc:	f007 fada 	bl	800ae94 <HAL_TIM_Base_Start>

	HAL_TIM_IC_Start_IT(&htim2, TIM_CHANNEL_1);	//Enciendo interrupcion input capture motor 1
 80038e0:	2100      	movs	r1, #0
 80038e2:	4889      	ldr	r0, [pc, #548]	; (8003b08 <main+0x290>)
 80038e4:	f007 fe7c 	bl	800b5e0 <HAL_TIM_IC_Start_IT>
	HAL_TIM_IC_Start_IT(&htim3, TIM_CHANNEL_1);	//Enciendo interrupcion input capture motor 2
 80038e8:	2100      	movs	r1, #0
 80038ea:	4888      	ldr	r0, [pc, #544]	; (8003b0c <main+0x294>)
 80038ec:	f007 fe78 	bl	800b5e0 <HAL_TIM_IC_Start_IT>
	HAL_TIM_IC_Start_IT(&htim4, TIM_CHANNEL_1);	//Enciendo interrupcion input capture motor 3
 80038f0:	2100      	movs	r1, #0
 80038f2:	4887      	ldr	r0, [pc, #540]	; (8003b10 <main+0x298>)
 80038f4:	f007 fe74 	bl	800b5e0 <HAL_TIM_IC_Start_IT>
	HAL_UART_Transmit(&huart3, (uint8_t *)"Ej:px0 y0 z-0.8 \n", 18, 100);
 80038f8:	2364      	movs	r3, #100	; 0x64
 80038fa:	2212      	movs	r2, #18
 80038fc:	4985      	ldr	r1, [pc, #532]	; (8003b14 <main+0x29c>)
 80038fe:	487d      	ldr	r0, [pc, #500]	; (8003af4 <main+0x27c>)
 8003900:	f009 fabc 	bl	800ce7c <HAL_UART_Transmit>
  /* USER CODE BEGIN WHILE */
	while (1) {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
		if (FlagButton == 1) {
 8003904:	4b84      	ldr	r3, [pc, #528]	; (8003b18 <main+0x2a0>)
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	2b01      	cmp	r3, #1
 800390a:	d1fb      	bne.n	8003904 <main+0x8c>
			FlagButton = 0;
 800390c:	4b82      	ldr	r3, [pc, #520]	; (8003b18 <main+0x2a0>)
 800390e:	2200      	movs	r2, #0
 8003910:	601a      	str	r2, [r3, #0]
			distancia = sqrt(pow(Pfin.x - Pini.x, 2) + pow(Pfin.y - Pini.y, 2) + pow(Pfin.z - Pini.z, 2));
 8003912:	4b82      	ldr	r3, [pc, #520]	; (8003b1c <main+0x2a4>)
 8003914:	ed93 6b00 	vldr	d6, [r3]
 8003918:	4b81      	ldr	r3, [pc, #516]	; (8003b20 <main+0x2a8>)
 800391a:	ed93 7b00 	vldr	d7, [r3]
 800391e:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003922:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8003926:	eeb0 0b47 	vmov.f64	d0, d7
 800392a:	f00e fc81 	bl	8012230 <pow>
 800392e:	eeb0 8b40 	vmov.f64	d8, d0
 8003932:	4b7a      	ldr	r3, [pc, #488]	; (8003b1c <main+0x2a4>)
 8003934:	ed93 6b02 	vldr	d6, [r3, #8]
 8003938:	4b79      	ldr	r3, [pc, #484]	; (8003b20 <main+0x2a8>)
 800393a:	ed93 7b02 	vldr	d7, [r3, #8]
 800393e:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003942:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8003946:	eeb0 0b47 	vmov.f64	d0, d7
 800394a:	f00e fc71 	bl	8012230 <pow>
 800394e:	eeb0 7b40 	vmov.f64	d7, d0
 8003952:	ee38 8b07 	vadd.f64	d8, d8, d7
 8003956:	4b71      	ldr	r3, [pc, #452]	; (8003b1c <main+0x2a4>)
 8003958:	ed93 6b04 	vldr	d6, [r3, #16]
 800395c:	4b70      	ldr	r3, [pc, #448]	; (8003b20 <main+0x2a8>)
 800395e:	ed93 7b04 	vldr	d7, [r3, #16]
 8003962:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003966:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800396a:	eeb0 0b47 	vmov.f64	d0, d7
 800396e:	f00e fc5f 	bl	8012230 <pow>
 8003972:	eeb0 7b40 	vmov.f64	d7, d0
 8003976:	ee38 7b07 	vadd.f64	d7, d8, d7
 800397a:	eeb0 0b47 	vmov.f64	d0, d7
 800397e:	f00e fed7 	bl	8012730 <sqrt>
 8003982:	eeb0 7b40 	vmov.f64	d7, d0
 8003986:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 800398a:	4b66      	ldr	r3, [pc, #408]	; (8003b24 <main+0x2ac>)
 800398c:	edc3 7a00 	vstr	s15, [r3]
			vDirector[0] = (Pfin.x - Pini.x) / distancia;	//Vector director en X
 8003990:	4b62      	ldr	r3, [pc, #392]	; (8003b1c <main+0x2a4>)
 8003992:	ed93 6b00 	vldr	d6, [r3]
 8003996:	4b62      	ldr	r3, [pc, #392]	; (8003b20 <main+0x2a8>)
 8003998:	ed93 7b00 	vldr	d7, [r3]
 800399c:	ee36 5b47 	vsub.f64	d5, d6, d7
 80039a0:	4b60      	ldr	r3, [pc, #384]	; (8003b24 <main+0x2ac>)
 80039a2:	edd3 7a00 	vldr	s15, [r3]
 80039a6:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 80039aa:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80039ae:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 80039b2:	4b5d      	ldr	r3, [pc, #372]	; (8003b28 <main+0x2b0>)
 80039b4:	edc3 7a00 	vstr	s15, [r3]
			vDirector[1] = (Pfin.y - Pini.y) / distancia;	//Vector director en Y
 80039b8:	4b58      	ldr	r3, [pc, #352]	; (8003b1c <main+0x2a4>)
 80039ba:	ed93 6b02 	vldr	d6, [r3, #8]
 80039be:	4b58      	ldr	r3, [pc, #352]	; (8003b20 <main+0x2a8>)
 80039c0:	ed93 7b02 	vldr	d7, [r3, #8]
 80039c4:	ee36 5b47 	vsub.f64	d5, d6, d7
 80039c8:	4b56      	ldr	r3, [pc, #344]	; (8003b24 <main+0x2ac>)
 80039ca:	edd3 7a00 	vldr	s15, [r3]
 80039ce:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 80039d2:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80039d6:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 80039da:	4b53      	ldr	r3, [pc, #332]	; (8003b28 <main+0x2b0>)
 80039dc:	edc3 7a01 	vstr	s15, [r3, #4]
			vDirector[2] = (Pfin.z - Pini.z) / distancia;	//Vector director en Z
 80039e0:	4b4e      	ldr	r3, [pc, #312]	; (8003b1c <main+0x2a4>)
 80039e2:	ed93 6b04 	vldr	d6, [r3, #16]
 80039e6:	4b4e      	ldr	r3, [pc, #312]	; (8003b20 <main+0x2a8>)
 80039e8:	ed93 7b04 	vldr	d7, [r3, #16]
 80039ec:	ee36 5b47 	vsub.f64	d5, d6, d7
 80039f0:	4b4c      	ldr	r3, [pc, #304]	; (8003b24 <main+0x2ac>)
 80039f2:	edd3 7a00 	vldr	s15, [r3]
 80039f6:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 80039fa:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80039fe:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8003a02:	4b49      	ldr	r3, [pc, #292]	; (8003b28 <main+0x2b0>)
 8003a04:	edc3 7a02 	vstr	s15, [r3, #8]
			configStepMotor1(titha1);
 8003a08:	4b48      	ldr	r3, [pc, #288]	; (8003b2c <main+0x2b4>)
 8003a0a:	ed93 7b00 	vldr	d7, [r3]
 8003a0e:	eeb0 0b47 	vmov.f64	d0, d7
 8003a12:	f000 fb99 	bl	8004148 <configStepMotor1>
			configStepMotor2(titha2);
 8003a16:	4b46      	ldr	r3, [pc, #280]	; (8003b30 <main+0x2b8>)
 8003a18:	ed93 7b00 	vldr	d7, [r3]
 8003a1c:	eeb0 0b47 	vmov.f64	d0, d7
 8003a20:	f000 fc4e 	bl	80042c0 <configStepMotor2>
			configStepMotor3(titha3);
 8003a24:	4b43      	ldr	r3, [pc, #268]	; (8003b34 <main+0x2bc>)
 8003a26:	ed93 7b00 	vldr	d7, [r3]
 8003a2a:	eeb0 0b47 	vmov.f64	d0, d7
 8003a2e:	f000 fd03 	bl	8004438 <configStepMotor3>

			update_ScurveTraj(0, distancia, vi, vf, vmax, amax, jmax);
 8003a32:	4b3c      	ldr	r3, [pc, #240]	; (8003b24 <main+0x2ac>)
 8003a34:	edd3 7a00 	vldr	s15, [r3]
 8003a38:	4b3f      	ldr	r3, [pc, #252]	; (8003b38 <main+0x2c0>)
 8003a3a:	ed93 7a00 	vldr	s14, [r3]
 8003a3e:	4b3f      	ldr	r3, [pc, #252]	; (8003b3c <main+0x2c4>)
 8003a40:	edd3 6a00 	vldr	s13, [r3]
 8003a44:	4b3e      	ldr	r3, [pc, #248]	; (8003b40 <main+0x2c8>)
 8003a46:	ed93 6a00 	vldr	s12, [r3]
 8003a4a:	4b3e      	ldr	r3, [pc, #248]	; (8003b44 <main+0x2cc>)
 8003a4c:	edd3 5a00 	vldr	s11, [r3]
 8003a50:	4b3d      	ldr	r3, [pc, #244]	; (8003b48 <main+0x2d0>)
 8003a52:	ed93 5a00 	vldr	s10, [r3]
 8003a56:	eeb0 3a45 	vmov.f32	s6, s10
 8003a5a:	eef0 2a65 	vmov.f32	s5, s11
 8003a5e:	eeb0 2a46 	vmov.f32	s4, s12
 8003a62:	eef0 1a66 	vmov.f32	s3, s13
 8003a66:	eeb0 1a47 	vmov.f32	s2, s14
 8003a6a:	eef0 0a67 	vmov.f32	s1, s15
 8003a6e:	ed9f 0a37 	vldr	s0, [pc, #220]	; 8003b4c <main+0x2d4>
 8003a72:	f002 faf5 	bl	8006060 <update_ScurveTraj>
			FlagTiempo = 0;
 8003a76:	4b36      	ldr	r3, [pc, #216]	; (8003b50 <main+0x2d8>)
 8003a78:	2200      	movs	r2, #0
 8003a7a:	701a      	strb	r2, [r3, #0]
			FlagTrayectoM1 = 0;
 8003a7c:	4935      	ldr	r1, [pc, #212]	; (8003b54 <main+0x2dc>)
 8003a7e:	f04f 0200 	mov.w	r2, #0
 8003a82:	f04f 0300 	mov.w	r3, #0
 8003a86:	e9c1 2300 	strd	r2, r3, [r1]
			FlagTrayectoM2 = 0;
 8003a8a:	4933      	ldr	r1, [pc, #204]	; (8003b58 <main+0x2e0>)
 8003a8c:	f04f 0200 	mov.w	r2, #0
 8003a90:	f04f 0300 	mov.w	r3, #0
 8003a94:	e9c1 2300 	strd	r2, r3, [r1]
			FlagTrayectoM3 = 0;
 8003a98:	4930      	ldr	r1, [pc, #192]	; (8003b5c <main+0x2e4>)
 8003a9a:	f04f 0200 	mov.w	r2, #0
 8003a9e:	f04f 0300 	mov.w	r3, #0
 8003aa2:	e9c1 2300 	strd	r2, r3, [r1]
			Start=1;
 8003aa6:	4b2e      	ldr	r3, [pc, #184]	; (8003b60 <main+0x2e8>)
 8003aa8:	2201      	movs	r2, #1
 8003aaa:	701a      	strb	r2, [r3, #0]
			rpm1 = 0;
 8003aac:	492d      	ldr	r1, [pc, #180]	; (8003b64 <main+0x2ec>)
 8003aae:	f04f 0200 	mov.w	r2, #0
 8003ab2:	f04f 0300 	mov.w	r3, #0
 8003ab6:	e9c1 2300 	strd	r2, r3, [r1]
			rpm2 = 0;
 8003aba:	492b      	ldr	r1, [pc, #172]	; (8003b68 <main+0x2f0>)
 8003abc:	f04f 0200 	mov.w	r2, #0
 8003ac0:	f04f 0300 	mov.w	r3, #0
 8003ac4:	e9c1 2300 	strd	r2, r3, [r1]
			rpm3 = 0;
 8003ac8:	4928      	ldr	r1, [pc, #160]	; (8003b6c <main+0x2f4>)
 8003aca:	f04f 0200 	mov.w	r2, #0
 8003ace:	f04f 0300 	mov.w	r3, #0
 8003ad2:	e9c1 2300 	strd	r2, r3, [r1]
			mandalemecha = 1;
 8003ad6:	4926      	ldr	r1, [pc, #152]	; (8003b70 <main+0x2f8>)
 8003ad8:	f04f 0200 	mov.w	r2, #0
 8003adc:	4b25      	ldr	r3, [pc, #148]	; (8003b74 <main+0x2fc>)
 8003ade:	e9c1 2300 	strd	r2, r3, [r1]
			HAL_TIM_Base_Start(&htim5);
 8003ae2:	4825      	ldr	r0, [pc, #148]	; (8003b78 <main+0x300>)
 8003ae4:	f007 f9d6 	bl	800ae94 <HAL_TIM_Base_Start>
			HAL_TIM_Base_Start_IT(&htim15);
 8003ae8:	4824      	ldr	r0, [pc, #144]	; (8003b7c <main+0x304>)
 8003aea:	f007 fa6b 	bl	800afc4 <HAL_TIM_Base_Start_IT>
		if (FlagButton == 1) {
 8003aee:	e709      	b.n	8003904 <main+0x8c>
 8003af0:	2400009c 	.word	0x2400009c
 8003af4:	24000bcc 	.word	0x24000bcc
 8003af8:	24000712 	.word	0x24000712
 8003afc:	24000944 	.word	0x24000944
 8003b00:	24000990 	.word	0x24000990
 8003b04:	240009dc 	.word	0x240009dc
 8003b08:	24000814 	.word	0x24000814
 8003b0c:	24000860 	.word	0x24000860
 8003b10:	240008ac 	.word	0x240008ac
 8003b14:	08012bcc 	.word	0x08012bcc
 8003b18:	24000760 	.word	0x24000760
 8003b1c:	24000680 	.word	0x24000680
 8003b20:	24000668 	.word	0x24000668
 8003b24:	24000698 	.word	0x24000698
 8003b28:	2400069c 	.word	0x2400069c
 8003b2c:	24000628 	.word	0x24000628
 8003b30:	24000630 	.word	0x24000630
 8003b34:	24000638 	.word	0x24000638
 8003b38:	24000658 	.word	0x24000658
 8003b3c:	2400065c 	.word	0x2400065c
 8003b40:	24000094 	.word	0x24000094
 8003b44:	24000098 	.word	0x24000098
 8003b48:	24000090 	.word	0x24000090
 8003b4c:	00000000 	.word	0x00000000
 8003b50:	24000714 	.word	0x24000714
 8003b54:	24000720 	.word	0x24000720
 8003b58:	24000728 	.word	0x24000728
 8003b5c:	240000a8 	.word	0x240000a8
 8003b60:	240007b8 	.word	0x240007b8
 8003b64:	24000770 	.word	0x24000770
 8003b68:	24000778 	.word	0x24000778
 8003b6c:	24000780 	.word	0x24000780
 8003b70:	240007c0 	.word	0x240007c0
 8003b74:	3ff00000 	.word	0x3ff00000
 8003b78:	240008f8 	.word	0x240008f8
 8003b7c:	24000a28 	.word	0x24000a28

08003b80 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003b80:	b580      	push	{r7, lr}
 8003b82:	b09c      	sub	sp, #112	; 0x70
 8003b84:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003b86:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003b8a:	224c      	movs	r2, #76	; 0x4c
 8003b8c:	2100      	movs	r1, #0
 8003b8e:	4618      	mov	r0, r3
 8003b90:	f00b fcba 	bl	800f508 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003b94:	1d3b      	adds	r3, r7, #4
 8003b96:	2220      	movs	r2, #32
 8003b98:	2100      	movs	r1, #0
 8003b9a:	4618      	mov	r0, r3
 8003b9c:	f00b fcb4 	bl	800f508 <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 8003ba0:	2002      	movs	r0, #2
 8003ba2:	f004 fdc3 	bl	800872c <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8003ba6:	2300      	movs	r3, #0
 8003ba8:	603b      	str	r3, [r7, #0]
 8003baa:	4b32      	ldr	r3, [pc, #200]	; (8003c74 <SystemClock_Config+0xf4>)
 8003bac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003bae:	4a31      	ldr	r2, [pc, #196]	; (8003c74 <SystemClock_Config+0xf4>)
 8003bb0:	f023 0301 	bic.w	r3, r3, #1
 8003bb4:	62d3      	str	r3, [r2, #44]	; 0x2c
 8003bb6:	4b2f      	ldr	r3, [pc, #188]	; (8003c74 <SystemClock_Config+0xf4>)
 8003bb8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003bba:	f003 0301 	and.w	r3, r3, #1
 8003bbe:	603b      	str	r3, [r7, #0]
 8003bc0:	4b2d      	ldr	r3, [pc, #180]	; (8003c78 <SystemClock_Config+0xf8>)
 8003bc2:	699b      	ldr	r3, [r3, #24]
 8003bc4:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8003bc8:	4a2b      	ldr	r2, [pc, #172]	; (8003c78 <SystemClock_Config+0xf8>)
 8003bca:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003bce:	6193      	str	r3, [r2, #24]
 8003bd0:	4b29      	ldr	r3, [pc, #164]	; (8003c78 <SystemClock_Config+0xf8>)
 8003bd2:	699b      	ldr	r3, [r3, #24]
 8003bd4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8003bd8:	603b      	str	r3, [r7, #0]
 8003bda:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 8003bdc:	bf00      	nop
 8003bde:	4b26      	ldr	r3, [pc, #152]	; (8003c78 <SystemClock_Config+0xf8>)
 8003be0:	699b      	ldr	r3, [r3, #24]
 8003be2:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8003be6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003bea:	d1f8      	bne.n	8003bde <SystemClock_Config+0x5e>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8003bec:	2302      	movs	r3, #2
 8003bee:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 8003bf0:	2301      	movs	r3, #1
 8003bf2:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8003bf4:	2340      	movs	r3, #64	; 0x40
 8003bf6:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003bf8:	2302      	movs	r3, #2
 8003bfa:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8003bfc:	2300      	movs	r3, #0
 8003bfe:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8003c00:	2304      	movs	r3, #4
 8003c02:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLN = 16;
 8003c04:	2310      	movs	r3, #16
 8003c06:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLP = 2;
 8003c08:	2302      	movs	r3, #2
 8003c0a:	65bb      	str	r3, [r7, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8003c0c:	2302      	movs	r3, #2
 8003c0e:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 8003c10:	2302      	movs	r3, #2
 8003c12:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 8003c14:	230c      	movs	r3, #12
 8003c16:	667b      	str	r3, [r7, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8003c18:	2300      	movs	r3, #0
 8003c1a:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8003c1c:	2300      	movs	r3, #0
 8003c1e:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003c20:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003c24:	4618      	mov	r0, r3
 8003c26:	f004 fdbb 	bl	80087a0 <HAL_RCC_OscConfig>
 8003c2a:	4603      	mov	r3, r0
 8003c2c:	2b00      	cmp	r3, #0
 8003c2e:	d001      	beq.n	8003c34 <SystemClock_Config+0xb4>
  {
    Error_Handler();
 8003c30:	f000 fa82 	bl	8004138 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003c34:	233f      	movs	r3, #63	; 0x3f
 8003c36:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003c38:	2303      	movs	r3, #3
 8003c3a:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 8003c3c:	2300      	movs	r3, #0
 8003c3e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 8003c40:	2308      	movs	r3, #8
 8003c42:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 8003c44:	2300      	movs	r3, #0
 8003c46:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 8003c48:	2340      	movs	r3, #64	; 0x40
 8003c4a:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 8003c4c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003c50:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 8003c52:	2300      	movs	r3, #0
 8003c54:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8003c56:	1d3b      	adds	r3, r7, #4
 8003c58:	2101      	movs	r1, #1
 8003c5a:	4618      	mov	r0, r3
 8003c5c:	f005 f9ce 	bl	8008ffc <HAL_RCC_ClockConfig>
 8003c60:	4603      	mov	r3, r0
 8003c62:	2b00      	cmp	r3, #0
 8003c64:	d001      	beq.n	8003c6a <SystemClock_Config+0xea>
  {
    Error_Handler();
 8003c66:	f000 fa67 	bl	8004138 <Error_Handler>
  }
}
 8003c6a:	bf00      	nop
 8003c6c:	3770      	adds	r7, #112	; 0x70
 8003c6e:	46bd      	mov	sp, r7
 8003c70:	bd80      	pop	{r7, pc}
 8003c72:	bf00      	nop
 8003c74:	58000400 	.word	0x58000400
 8003c78:	58024800 	.word	0x58024800

08003c7c <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 8003c7c:	b480      	push	{r7}
 8003c7e:	b083      	sub	sp, #12
 8003c80:	af00      	add	r7, sp, #0
 8003c82:	4603      	mov	r3, r0
 8003c84:	80fb      	strh	r3, [r7, #6]
	switch (GPIO_Pin) {
 8003c86:	88fb      	ldrh	r3, [r7, #6]
 8003c88:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003c8c:	d103      	bne.n	8003c96 <HAL_GPIO_EXTI_Callback+0x1a>

	case BUTTON_Pin:
		FlagButton = 1;
 8003c8e:	4b05      	ldr	r3, [pc, #20]	; (8003ca4 <HAL_GPIO_EXTI_Callback+0x28>)
 8003c90:	2201      	movs	r2, #1
 8003c92:	601a      	str	r2, [r3, #0]
		break;
 8003c94:	e000      	b.n	8003c98 <HAL_GPIO_EXTI_Callback+0x1c>
		 HAL_UART_Transmit(&huart3, "EndStop3Sup\n\r", 13, 100);
		 break;*/

	default:

		break;
 8003c96:	bf00      	nop
	}

}
 8003c98:	bf00      	nop
 8003c9a:	370c      	adds	r7, #12
 8003c9c:	46bd      	mov	sp, r7
 8003c9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ca2:	4770      	bx	lr
 8003ca4:	24000760 	.word	0x24000760

08003ca8 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 8003ca8:	b580      	push	{r7, lr}
 8003caa:	b084      	sub	sp, #16
 8003cac:	af00      	add	r7, sp, #0
 8003cae:	6078      	str	r0, [r7, #4]

	if (huart->Instance == USART3) {
 8003cb0:	687b      	ldr	r3, [r7, #4]
 8003cb2:	681b      	ldr	r3, [r3, #0]
 8003cb4:	4a30      	ldr	r2, [pc, #192]	; (8003d78 <HAL_UART_RxCpltCallback+0xd0>)
 8003cb6:	4293      	cmp	r3, r2
 8003cb8:	d14d      	bne.n	8003d56 <HAL_UART_RxCpltCallback+0xae>
		char dato;
		dato = rx_data;
 8003cba:	4b30      	ldr	r3, [pc, #192]	; (8003d7c <HAL_UART_RxCpltCallback+0xd4>)
 8003cbc:	781b      	ldrb	r3, [r3, #0]
 8003cbe:	73fb      	strb	r3, [r7, #15]
		switch (dato) {
 8003cc0:	7bfb      	ldrb	r3, [r7, #15]
 8003cc2:	2b3a      	cmp	r3, #58	; 0x3a
 8003cc4:	d006      	beq.n	8003cd4 <HAL_UART_RxCpltCallback+0x2c>
 8003cc6:	2b3a      	cmp	r3, #58	; 0x3a
 8003cc8:	dc36      	bgt.n	8003d38 <HAL_UART_RxCpltCallback+0x90>
 8003cca:	2b08      	cmp	r3, #8
 8003ccc:	d009      	beq.n	8003ce2 <HAL_UART_RxCpltCallback+0x3a>
 8003cce:	2b0d      	cmp	r3, #13
 8003cd0:	d01e      	beq.n	8003d10 <HAL_UART_RxCpltCallback+0x68>
 8003cd2:	e031      	b.n	8003d38 <HAL_UART_RxCpltCallback+0x90>
		case ':':
			rx_index = 0;
 8003cd4:	4b2a      	ldr	r3, [pc, #168]	; (8003d80 <HAL_UART_RxCpltCallback+0xd8>)
 8003cd6:	2200      	movs	r2, #0
 8003cd8:	701a      	strb	r2, [r3, #0]
			cm0 = 1;
 8003cda:	4b2a      	ldr	r3, [pc, #168]	; (8003d84 <HAL_UART_RxCpltCallback+0xdc>)
 8003cdc:	2201      	movs	r2, #1
 8003cde:	701a      	strb	r2, [r3, #0]
			break;
 8003ce0:	e040      	b.n	8003d64 <HAL_UART_RxCpltCallback+0xbc>
		case 8:
			if (rx_index > 0) {
 8003ce2:	4b27      	ldr	r3, [pc, #156]	; (8003d80 <HAL_UART_RxCpltCallback+0xd8>)
 8003ce4:	781b      	ldrb	r3, [r3, #0]
 8003ce6:	2b00      	cmp	r3, #0
 8003ce8:	d037      	beq.n	8003d5a <HAL_UART_RxCpltCallback+0xb2>
				rx_index--;
 8003cea:	4b25      	ldr	r3, [pc, #148]	; (8003d80 <HAL_UART_RxCpltCallback+0xd8>)
 8003cec:	781b      	ldrb	r3, [r3, #0]
 8003cee:	3b01      	subs	r3, #1
 8003cf0:	b2da      	uxtb	r2, r3
 8003cf2:	4b23      	ldr	r3, [pc, #140]	; (8003d80 <HAL_UART_RxCpltCallback+0xd8>)
 8003cf4:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003cf6:	e030      	b.n	8003d5a <HAL_UART_RxCpltCallback+0xb2>
		case '\r':

			while (!(rx_index==30)){
				rx_buffer[rx_index]= (uint8_t) 0;
 8003cf8:	4b21      	ldr	r3, [pc, #132]	; (8003d80 <HAL_UART_RxCpltCallback+0xd8>)
 8003cfa:	781b      	ldrb	r3, [r3, #0]
 8003cfc:	461a      	mov	r2, r3
 8003cfe:	4b22      	ldr	r3, [pc, #136]	; (8003d88 <HAL_UART_RxCpltCallback+0xe0>)
 8003d00:	2100      	movs	r1, #0
 8003d02:	5499      	strb	r1, [r3, r2]
				rx_index++;
 8003d04:	4b1e      	ldr	r3, [pc, #120]	; (8003d80 <HAL_UART_RxCpltCallback+0xd8>)
 8003d06:	781b      	ldrb	r3, [r3, #0]
 8003d08:	3301      	adds	r3, #1
 8003d0a:	b2da      	uxtb	r2, r3
 8003d0c:	4b1c      	ldr	r3, [pc, #112]	; (8003d80 <HAL_UART_RxCpltCallback+0xd8>)
 8003d0e:	701a      	strb	r2, [r3, #0]
			while (!(rx_index==30)){
 8003d10:	4b1b      	ldr	r3, [pc, #108]	; (8003d80 <HAL_UART_RxCpltCallback+0xd8>)
 8003d12:	781b      	ldrb	r3, [r3, #0]
 8003d14:	2b1e      	cmp	r3, #30
 8003d16:	d1ef      	bne.n	8003cf8 <HAL_UART_RxCpltCallback+0x50>
			}

			if (cm0 == 1) {
 8003d18:	4b1a      	ldr	r3, [pc, #104]	; (8003d84 <HAL_UART_RxCpltCallback+0xdc>)
 8003d1a:	781b      	ldrb	r3, [r3, #0]
 8003d1c:	2b01      	cmp	r3, #1
 8003d1e:	d11e      	bne.n	8003d5e <HAL_UART_RxCpltCallback+0xb6>
				rx_buffer[rx_index] = 0;
 8003d20:	4b17      	ldr	r3, [pc, #92]	; (8003d80 <HAL_UART_RxCpltCallback+0xd8>)
 8003d22:	781b      	ldrb	r3, [r3, #0]
 8003d24:	461a      	mov	r2, r3
 8003d26:	4b18      	ldr	r3, [pc, #96]	; (8003d88 <HAL_UART_RxCpltCallback+0xe0>)
 8003d28:	2100      	movs	r1, #0
 8003d2a:	5499      	strb	r1, [r3, r2]
				interpretaComando();
 8003d2c:	f7fe fe68 	bl	8002a00 <interpretaComando>
				cm0 = 0;
 8003d30:	4b14      	ldr	r3, [pc, #80]	; (8003d84 <HAL_UART_RxCpltCallback+0xdc>)
 8003d32:	2200      	movs	r2, #0
 8003d34:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003d36:	e012      	b.n	8003d5e <HAL_UART_RxCpltCallback+0xb6>
		default:
			if (rx_index < 30) {
 8003d38:	4b11      	ldr	r3, [pc, #68]	; (8003d80 <HAL_UART_RxCpltCallback+0xd8>)
 8003d3a:	781b      	ldrb	r3, [r3, #0]
 8003d3c:	2b1d      	cmp	r3, #29
 8003d3e:	d810      	bhi.n	8003d62 <HAL_UART_RxCpltCallback+0xba>
				rx_buffer[rx_index++] = dato;
 8003d40:	4b0f      	ldr	r3, [pc, #60]	; (8003d80 <HAL_UART_RxCpltCallback+0xd8>)
 8003d42:	781b      	ldrb	r3, [r3, #0]
 8003d44:	1c5a      	adds	r2, r3, #1
 8003d46:	b2d1      	uxtb	r1, r2
 8003d48:	4a0d      	ldr	r2, [pc, #52]	; (8003d80 <HAL_UART_RxCpltCallback+0xd8>)
 8003d4a:	7011      	strb	r1, [r2, #0]
 8003d4c:	4619      	mov	r1, r3
 8003d4e:	4a0e      	ldr	r2, [pc, #56]	; (8003d88 <HAL_UART_RxCpltCallback+0xe0>)
 8003d50:	7bfb      	ldrb	r3, [r7, #15]
 8003d52:	5453      	strb	r3, [r2, r1]
			}
			break;
 8003d54:	e005      	b.n	8003d62 <HAL_UART_RxCpltCallback+0xba>
		}
	}
 8003d56:	bf00      	nop
 8003d58:	e004      	b.n	8003d64 <HAL_UART_RxCpltCallback+0xbc>
			break;
 8003d5a:	bf00      	nop
 8003d5c:	e002      	b.n	8003d64 <HAL_UART_RxCpltCallback+0xbc>
			break;
 8003d5e:	bf00      	nop
 8003d60:	e000      	b.n	8003d64 <HAL_UART_RxCpltCallback+0xbc>
			break;
 8003d62:	bf00      	nop
	HAL_UART_Receive_IT(&huart3, &rx_data, 1); //Receive data (one character only)
 8003d64:	2201      	movs	r2, #1
 8003d66:	4905      	ldr	r1, [pc, #20]	; (8003d7c <HAL_UART_RxCpltCallback+0xd4>)
 8003d68:	4808      	ldr	r0, [pc, #32]	; (8003d8c <HAL_UART_RxCpltCallback+0xe4>)
 8003d6a:	f009 f91d 	bl	800cfa8 <HAL_UART_Receive_IT>
}
 8003d6e:	bf00      	nop
 8003d70:	3710      	adds	r7, #16
 8003d72:	46bd      	mov	sp, r7
 8003d74:	bd80      	pop	{r7, pc}
 8003d76:	bf00      	nop
 8003d78:	40004800 	.word	0x40004800
 8003d7c:	24000712 	.word	0x24000712
 8003d80:	240006f0 	.word	0x240006f0
 8003d84:	24000713 	.word	0x24000713
 8003d88:	240006f4 	.word	0x240006f4
 8003d8c:	24000bcc 	.word	0x24000bcc

08003d90 <HAL_UART_TxCpltCallback>:

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart) {
 8003d90:	b480      	push	{r7}
 8003d92:	b083      	sub	sp, #12
 8003d94:	af00      	add	r7, sp, #0
 8003d96:	6078      	str	r0, [r7, #4]
	__NOP();
 8003d98:	bf00      	nop
}
 8003d9a:	bf00      	nop
 8003d9c:	370c      	adds	r7, #12
 8003d9e:	46bd      	mov	sp, r7
 8003da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003da4:	4770      	bx	lr
	...

08003da8 <HAL_TIM_IC_CaptureCallback>:

void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim) {
 8003da8:	b580      	push	{r7, lr}
 8003daa:	b082      	sub	sp, #8
 8003dac:	af00      	add	r7, sp, #0
 8003dae:	6078      	str	r0, [r7, #4]

	if (htim->Instance == TIM2) {
 8003db0:	687b      	ldr	r3, [r7, #4]
 8003db2:	681b      	ldr	r3, [r3, #0]
 8003db4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003db8:	d116      	bne.n	8003de8 <HAL_TIM_IC_CaptureCallback+0x40>
		if (pMotor1 == numStep1) {
 8003dba:	4b29      	ldr	r3, [pc, #164]	; (8003e60 <HAL_TIM_IC_CaptureCallback+0xb8>)
 8003dbc:	681a      	ldr	r2, [r3, #0]
 8003dbe:	4b29      	ldr	r3, [pc, #164]	; (8003e64 <HAL_TIM_IC_CaptureCallback+0xbc>)
 8003dc0:	681b      	ldr	r3, [r3, #0]
 8003dc2:	429a      	cmp	r2, r3
 8003dc4:	d10a      	bne.n	8003ddc <HAL_TIM_IC_CaptureCallback+0x34>
			HAL_TIM_PWM_Stop(&htim12, TIM_CHANNEL_1); //Apago el PWM del motor 1
 8003dc6:	2100      	movs	r1, #0
 8003dc8:	4827      	ldr	r0, [pc, #156]	; (8003e68 <HAL_TIM_IC_CaptureCallback+0xc0>)
 8003dca:	f007 fb11 	bl	800b3f0 <HAL_TIM_PWM_Stop>
			FlagTrayectoM1 = 1;
 8003dce:	4927      	ldr	r1, [pc, #156]	; (8003e6c <HAL_TIM_IC_CaptureCallback+0xc4>)
 8003dd0:	f04f 0200 	mov.w	r2, #0
 8003dd4:	4b26      	ldr	r3, [pc, #152]	; (8003e70 <HAL_TIM_IC_CaptureCallback+0xc8>)
 8003dd6:	e9c1 2300 	strd	r2, r3, [r1]
		} else {
			pMotor3++;
		}

	}
}
 8003dda:	e03c      	b.n	8003e56 <HAL_TIM_IC_CaptureCallback+0xae>
			pMotor1++;
 8003ddc:	4b20      	ldr	r3, [pc, #128]	; (8003e60 <HAL_TIM_IC_CaptureCallback+0xb8>)
 8003dde:	681b      	ldr	r3, [r3, #0]
 8003de0:	3301      	adds	r3, #1
 8003de2:	4a1f      	ldr	r2, [pc, #124]	; (8003e60 <HAL_TIM_IC_CaptureCallback+0xb8>)
 8003de4:	6013      	str	r3, [r2, #0]
}
 8003de6:	e036      	b.n	8003e56 <HAL_TIM_IC_CaptureCallback+0xae>
	} else if (htim->Instance == TIM3) {
 8003de8:	687b      	ldr	r3, [r7, #4]
 8003dea:	681b      	ldr	r3, [r3, #0]
 8003dec:	4a21      	ldr	r2, [pc, #132]	; (8003e74 <HAL_TIM_IC_CaptureCallback+0xcc>)
 8003dee:	4293      	cmp	r3, r2
 8003df0:	d116      	bne.n	8003e20 <HAL_TIM_IC_CaptureCallback+0x78>
		if (pMotor2 == numStep2) {
 8003df2:	4b21      	ldr	r3, [pc, #132]	; (8003e78 <HAL_TIM_IC_CaptureCallback+0xd0>)
 8003df4:	681a      	ldr	r2, [r3, #0]
 8003df6:	4b21      	ldr	r3, [pc, #132]	; (8003e7c <HAL_TIM_IC_CaptureCallback+0xd4>)
 8003df8:	681b      	ldr	r3, [r3, #0]
 8003dfa:	429a      	cmp	r2, r3
 8003dfc:	d10a      	bne.n	8003e14 <HAL_TIM_IC_CaptureCallback+0x6c>
			HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);//Apago el PWM del motor 1
 8003dfe:	2100      	movs	r1, #0
 8003e00:	481f      	ldr	r0, [pc, #124]	; (8003e80 <HAL_TIM_IC_CaptureCallback+0xd8>)
 8003e02:	f007 faf5 	bl	800b3f0 <HAL_TIM_PWM_Stop>
			FlagTrayectoM2 = 1;
 8003e06:	491f      	ldr	r1, [pc, #124]	; (8003e84 <HAL_TIM_IC_CaptureCallback+0xdc>)
 8003e08:	f04f 0200 	mov.w	r2, #0
 8003e0c:	4b18      	ldr	r3, [pc, #96]	; (8003e70 <HAL_TIM_IC_CaptureCallback+0xc8>)
 8003e0e:	e9c1 2300 	strd	r2, r3, [r1]
}
 8003e12:	e020      	b.n	8003e56 <HAL_TIM_IC_CaptureCallback+0xae>
			pMotor2++;
 8003e14:	4b18      	ldr	r3, [pc, #96]	; (8003e78 <HAL_TIM_IC_CaptureCallback+0xd0>)
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	3301      	adds	r3, #1
 8003e1a:	4a17      	ldr	r2, [pc, #92]	; (8003e78 <HAL_TIM_IC_CaptureCallback+0xd0>)
 8003e1c:	6013      	str	r3, [r2, #0]
}
 8003e1e:	e01a      	b.n	8003e56 <HAL_TIM_IC_CaptureCallback+0xae>
	} else if (htim->Instance == TIM4) {
 8003e20:	687b      	ldr	r3, [r7, #4]
 8003e22:	681b      	ldr	r3, [r3, #0]
 8003e24:	4a18      	ldr	r2, [pc, #96]	; (8003e88 <HAL_TIM_IC_CaptureCallback+0xe0>)
 8003e26:	4293      	cmp	r3, r2
 8003e28:	d115      	bne.n	8003e56 <HAL_TIM_IC_CaptureCallback+0xae>
		if (pMotor3 == numStep3) {
 8003e2a:	4b18      	ldr	r3, [pc, #96]	; (8003e8c <HAL_TIM_IC_CaptureCallback+0xe4>)
 8003e2c:	681a      	ldr	r2, [r3, #0]
 8003e2e:	4b18      	ldr	r3, [pc, #96]	; (8003e90 <HAL_TIM_IC_CaptureCallback+0xe8>)
 8003e30:	681b      	ldr	r3, [r3, #0]
 8003e32:	429a      	cmp	r2, r3
 8003e34:	d10a      	bne.n	8003e4c <HAL_TIM_IC_CaptureCallback+0xa4>
			HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);//Apago el PWM del motor 1
 8003e36:	2100      	movs	r1, #0
 8003e38:	4816      	ldr	r0, [pc, #88]	; (8003e94 <HAL_TIM_IC_CaptureCallback+0xec>)
 8003e3a:	f007 fad9 	bl	800b3f0 <HAL_TIM_PWM_Stop>
			FlagTrayectoM3 = 1;
 8003e3e:	4916      	ldr	r1, [pc, #88]	; (8003e98 <HAL_TIM_IC_CaptureCallback+0xf0>)
 8003e40:	f04f 0200 	mov.w	r2, #0
 8003e44:	4b0a      	ldr	r3, [pc, #40]	; (8003e70 <HAL_TIM_IC_CaptureCallback+0xc8>)
 8003e46:	e9c1 2300 	strd	r2, r3, [r1]
}
 8003e4a:	e004      	b.n	8003e56 <HAL_TIM_IC_CaptureCallback+0xae>
			pMotor3++;
 8003e4c:	4b0f      	ldr	r3, [pc, #60]	; (8003e8c <HAL_TIM_IC_CaptureCallback+0xe4>)
 8003e4e:	681b      	ldr	r3, [r3, #0]
 8003e50:	3301      	adds	r3, #1
 8003e52:	4a0e      	ldr	r2, [pc, #56]	; (8003e8c <HAL_TIM_IC_CaptureCallback+0xe4>)
 8003e54:	6013      	str	r3, [r2, #0]
}
 8003e56:	bf00      	nop
 8003e58:	3708      	adds	r7, #8
 8003e5a:	46bd      	mov	sp, r7
 8003e5c:	bd80      	pop	{r7, pc}
 8003e5e:	bf00      	nop
 8003e60:	24000610 	.word	0x24000610
 8003e64:	2400061c 	.word	0x2400061c
 8003e68:	24000944 	.word	0x24000944
 8003e6c:	24000720 	.word	0x24000720
 8003e70:	3ff00000 	.word	0x3ff00000
 8003e74:	40000400 	.word	0x40000400
 8003e78:	24000614 	.word	0x24000614
 8003e7c:	24000620 	.word	0x24000620
 8003e80:	24000990 	.word	0x24000990
 8003e84:	24000728 	.word	0x24000728
 8003e88:	40000800 	.word	0x40000800
 8003e8c:	24000618 	.word	0x24000618
 8003e90:	24000624 	.word	0x24000624
 8003e94:	240009dc 	.word	0x240009dc
 8003e98:	240000a8 	.word	0x240000a8
 8003e9c:	00000000 	.word	0x00000000

08003ea0 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 8003ea0:	b580      	push	{r7, lr}
 8003ea2:	b082      	sub	sp, #8
 8003ea4:	af00      	add	r7, sp, #0
 8003ea6:	6078      	str	r0, [r7, #4]
	if (htim == &htim15) {  //Timer que actualiza curva de velocidad
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	4a8d      	ldr	r2, [pc, #564]	; (80040e0 <HAL_TIM_PeriodElapsedCallback+0x240>)
 8003eac:	4293      	cmp	r3, r2
 8003eae:	f040 810c 	bne.w	80040ca <HAL_TIM_PeriodElapsedCallback+0x22a>
		if (FlagTrayectoM1 == 1 && FlagTrayectoM2 == 1 && FlagTrayectoM3 == 1) {
 8003eb2:	4b8c      	ldr	r3, [pc, #560]	; (80040e4 <HAL_TIM_PeriodElapsedCallback+0x244>)
 8003eb4:	ed93 7b00 	vldr	d7, [r3]
 8003eb8:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8003ebc:	eeb4 7b46 	vcmp.f64	d7, d6
 8003ec0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003ec4:	d133      	bne.n	8003f2e <HAL_TIM_PeriodElapsedCallback+0x8e>
 8003ec6:	4b88      	ldr	r3, [pc, #544]	; (80040e8 <HAL_TIM_PeriodElapsedCallback+0x248>)
 8003ec8:	ed93 7b00 	vldr	d7, [r3]
 8003ecc:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8003ed0:	eeb4 7b46 	vcmp.f64	d7, d6
 8003ed4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003ed8:	d129      	bne.n	8003f2e <HAL_TIM_PeriodElapsedCallback+0x8e>
 8003eda:	4b84      	ldr	r3, [pc, #528]	; (80040ec <HAL_TIM_PeriodElapsedCallback+0x24c>)
 8003edc:	ed93 7b00 	vldr	d7, [r3]
 8003ee0:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8003ee4:	eeb4 7b46 	vcmp.f64	d7, d6
 8003ee8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003eec:	d11f      	bne.n	8003f2e <HAL_TIM_PeriodElapsedCallback+0x8e>
			HAL_TIM_Base_Stop_IT(&htim15);
 8003eee:	487c      	ldr	r0, [pc, #496]	; (80040e0 <HAL_TIM_PeriodElapsedCallback+0x240>)
 8003ef0:	f007 f8e0 	bl	800b0b4 <HAL_TIM_Base_Stop_IT>
			HAL_TIM_Base_Stop(&htim5);
 8003ef4:	487e      	ldr	r0, [pc, #504]	; (80040f0 <HAL_TIM_PeriodElapsedCallback+0x250>)
 8003ef6:	f007 f83d 	bl	800af74 <HAL_TIM_Base_Stop>
			Pini.x = Pfin.x;
 8003efa:	4b7e      	ldr	r3, [pc, #504]	; (80040f4 <HAL_TIM_PeriodElapsedCallback+0x254>)
 8003efc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f00:	497d      	ldr	r1, [pc, #500]	; (80040f8 <HAL_TIM_PeriodElapsedCallback+0x258>)
 8003f02:	e9c1 2300 	strd	r2, r3, [r1]
			Pini.y = Pfin.y;
 8003f06:	4b7b      	ldr	r3, [pc, #492]	; (80040f4 <HAL_TIM_PeriodElapsedCallback+0x254>)
 8003f08:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8003f0c:	497a      	ldr	r1, [pc, #488]	; (80040f8 <HAL_TIM_PeriodElapsedCallback+0x258>)
 8003f0e:	e9c1 2302 	strd	r2, r3, [r1, #8]
			Pini.z = Pfin.z;
 8003f12:	4b78      	ldr	r3, [pc, #480]	; (80040f4 <HAL_TIM_PeriodElapsedCallback+0x254>)
 8003f14:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 8003f18:	4977      	ldr	r1, [pc, #476]	; (80040f8 <HAL_TIM_PeriodElapsedCallback+0x258>)
 8003f1a:	e9c1 2304 	strd	r2, r3, [r1, #16]
			mandalemecha = 0;
 8003f1e:	4977      	ldr	r1, [pc, #476]	; (80040fc <HAL_TIM_PeriodElapsedCallback+0x25c>)
 8003f20:	f04f 0200 	mov.w	r2, #0
 8003f24:	f04f 0300 	mov.w	r3, #0
 8003f28:	e9c1 2300 	strd	r2, r3, [r1]
				HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);	// Activar generacion de pwm
				HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);	// Activar generacion de pwm
			}
		}
	}
}
 8003f2c:	e0cd      	b.n	80040ca <HAL_TIM_PeriodElapsedCallback+0x22a>
			if (!FlagTiempo) {
 8003f2e:	4b74      	ldr	r3, [pc, #464]	; (8004100 <HAL_TIM_PeriodElapsedCallback+0x260>)
 8003f30:	781b      	ldrb	r3, [r3, #0]
 8003f32:	2b00      	cmp	r3, #0
 8003f34:	d105      	bne.n	8003f42 <HAL_TIM_PeriodElapsedCallback+0xa2>
				FlagTiempo = 1;
 8003f36:	4b72      	ldr	r3, [pc, #456]	; (8004100 <HAL_TIM_PeriodElapsedCallback+0x260>)
 8003f38:	2201      	movs	r2, #1
 8003f3a:	701a      	strb	r2, [r3, #0]
				TIM5->CNT = 0;	// comienzo a contabilizar el tiempo recien acá
 8003f3c:	4b71      	ldr	r3, [pc, #452]	; (8004104 <HAL_TIM_PeriodElapsedCallback+0x264>)
 8003f3e:	2200      	movs	r2, #0
 8003f40:	625a      	str	r2, [r3, #36]	; 0x24
			Tiempo = (((double) (TIM5->CNT)) * ((double)(TIM5->PSC + 1) / 64000000.0));
 8003f42:	4b70      	ldr	r3, [pc, #448]	; (8004104 <HAL_TIM_PeriodElapsedCallback+0x264>)
 8003f44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f46:	ee07 3a90 	vmov	s15, r3
 8003f4a:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 8003f4e:	4b6d      	ldr	r3, [pc, #436]	; (8004104 <HAL_TIM_PeriodElapsedCallback+0x264>)
 8003f50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003f52:	3301      	adds	r3, #1
 8003f54:	ee07 3a90 	vmov	s15, r3
 8003f58:	eeb8 5b67 	vcvt.f64.u32	d5, s15
 8003f5c:	ed9f 4b5e 	vldr	d4, [pc, #376]	; 80040d8 <HAL_TIM_PeriodElapsedCallback+0x238>
 8003f60:	ee85 7b04 	vdiv.f64	d7, d5, d4
 8003f64:	ee26 7b07 	vmul.f64	d7, d6, d7
 8003f68:	4b67      	ldr	r3, [pc, #412]	; (8004108 <HAL_TIM_PeriodElapsedCallback+0x268>)
 8003f6a:	ed83 7b00 	vstr	d7, [r3]
			get_Straj(Tiempo);
 8003f6e:	4b66      	ldr	r3, [pc, #408]	; (8004108 <HAL_TIM_PeriodElapsedCallback+0x268>)
 8003f70:	ed93 7b00 	vldr	d7, [r3]
 8003f74:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8003f78:	eeb0 0a67 	vmov.f32	s0, s15
 8003f7c:	f001 f9c4 	bl	8005308 <get_Straj>
			Recta3D[0] = Pini.x + q * vDirector[0];
 8003f80:	4b5d      	ldr	r3, [pc, #372]	; (80040f8 <HAL_TIM_PeriodElapsedCallback+0x258>)
 8003f82:	ed93 6b00 	vldr	d6, [r3]
 8003f86:	4b61      	ldr	r3, [pc, #388]	; (800410c <HAL_TIM_PeriodElapsedCallback+0x26c>)
 8003f88:	ed93 7a00 	vldr	s14, [r3]
 8003f8c:	4b60      	ldr	r3, [pc, #384]	; (8004110 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8003f8e:	edd3 7a00 	vldr	s15, [r3]
 8003f92:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003f96:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8003f9a:	ee36 7b07 	vadd.f64	d7, d6, d7
 8003f9e:	4b5d      	ldr	r3, [pc, #372]	; (8004114 <HAL_TIM_PeriodElapsedCallback+0x274>)
 8003fa0:	ed83 7b00 	vstr	d7, [r3]
			Recta3D[1] = Pini.y + q * vDirector[1];
 8003fa4:	4b54      	ldr	r3, [pc, #336]	; (80040f8 <HAL_TIM_PeriodElapsedCallback+0x258>)
 8003fa6:	ed93 6b02 	vldr	d6, [r3, #8]
 8003faa:	4b58      	ldr	r3, [pc, #352]	; (800410c <HAL_TIM_PeriodElapsedCallback+0x26c>)
 8003fac:	ed93 7a01 	vldr	s14, [r3, #4]
 8003fb0:	4b57      	ldr	r3, [pc, #348]	; (8004110 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8003fb2:	edd3 7a00 	vldr	s15, [r3]
 8003fb6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003fba:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8003fbe:	ee36 7b07 	vadd.f64	d7, d6, d7
 8003fc2:	4b54      	ldr	r3, [pc, #336]	; (8004114 <HAL_TIM_PeriodElapsedCallback+0x274>)
 8003fc4:	ed83 7b02 	vstr	d7, [r3, #8]
			Recta3D[2] = Pini.z + q * vDirector[2];
 8003fc8:	4b4b      	ldr	r3, [pc, #300]	; (80040f8 <HAL_TIM_PeriodElapsedCallback+0x258>)
 8003fca:	ed93 6b04 	vldr	d6, [r3, #16]
 8003fce:	4b4f      	ldr	r3, [pc, #316]	; (800410c <HAL_TIM_PeriodElapsedCallback+0x26c>)
 8003fd0:	ed93 7a02 	vldr	s14, [r3, #8]
 8003fd4:	4b4e      	ldr	r3, [pc, #312]	; (8004110 <HAL_TIM_PeriodElapsedCallback+0x270>)
 8003fd6:	edd3 7a00 	vldr	s15, [r3]
 8003fda:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003fde:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8003fe2:	ee36 7b07 	vadd.f64	d7, d6, d7
 8003fe6:	4b4b      	ldr	r3, [pc, #300]	; (8004114 <HAL_TIM_PeriodElapsedCallback+0x274>)
 8003fe8:	ed83 7b04 	vstr	d7, [r3, #16]
			dRecta3D[0] = 0 + qd * vDirector[0];
 8003fec:	4b47      	ldr	r3, [pc, #284]	; (800410c <HAL_TIM_PeriodElapsedCallback+0x26c>)
 8003fee:	ed93 7a00 	vldr	s14, [r3]
 8003ff2:	4b49      	ldr	r3, [pc, #292]	; (8004118 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8003ff4:	edd3 7a00 	vldr	s15, [r3]
 8003ff8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003ffc:	ed9f 7a47 	vldr	s14, [pc, #284]	; 800411c <HAL_TIM_PeriodElapsedCallback+0x27c>
 8004000:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004004:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8004008:	4b45      	ldr	r3, [pc, #276]	; (8004120 <HAL_TIM_PeriodElapsedCallback+0x280>)
 800400a:	ed83 7b00 	vstr	d7, [r3]
			dRecta3D[1] = 0 + qd * vDirector[1];
 800400e:	4b3f      	ldr	r3, [pc, #252]	; (800410c <HAL_TIM_PeriodElapsedCallback+0x26c>)
 8004010:	ed93 7a01 	vldr	s14, [r3, #4]
 8004014:	4b40      	ldr	r3, [pc, #256]	; (8004118 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8004016:	edd3 7a00 	vldr	s15, [r3]
 800401a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800401e:	ed9f 7a3f 	vldr	s14, [pc, #252]	; 800411c <HAL_TIM_PeriodElapsedCallback+0x27c>
 8004022:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004026:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800402a:	4b3d      	ldr	r3, [pc, #244]	; (8004120 <HAL_TIM_PeriodElapsedCallback+0x280>)
 800402c:	ed83 7b02 	vstr	d7, [r3, #8]
			dRecta3D[2] = 0 + qd * vDirector[2];
 8004030:	4b36      	ldr	r3, [pc, #216]	; (800410c <HAL_TIM_PeriodElapsedCallback+0x26c>)
 8004032:	ed93 7a02 	vldr	s14, [r3, #8]
 8004036:	4b38      	ldr	r3, [pc, #224]	; (8004118 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8004038:	edd3 7a00 	vldr	s15, [r3]
 800403c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004040:	ed9f 7a36 	vldr	s14, [pc, #216]	; 800411c <HAL_TIM_PeriodElapsedCallback+0x27c>
 8004044:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004048:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800404c:	4b34      	ldr	r3, [pc, #208]	; (8004120 <HAL_TIM_PeriodElapsedCallback+0x280>)
 800404e:	ed83 7b04 	vstr	d7, [r3, #16]
			jacobianoInverso(dRecta3D[0], dRecta3D[1], dRecta3D[2], Recta3D[0], Recta3D[1], Recta3D[2]);
 8004052:	4b33      	ldr	r3, [pc, #204]	; (8004120 <HAL_TIM_PeriodElapsedCallback+0x280>)
 8004054:	ed93 7b00 	vldr	d7, [r3]
 8004058:	4b31      	ldr	r3, [pc, #196]	; (8004120 <HAL_TIM_PeriodElapsedCallback+0x280>)
 800405a:	ed93 6b02 	vldr	d6, [r3, #8]
 800405e:	4b30      	ldr	r3, [pc, #192]	; (8004120 <HAL_TIM_PeriodElapsedCallback+0x280>)
 8004060:	ed93 2b04 	vldr	d2, [r3, #16]
 8004064:	4b2b      	ldr	r3, [pc, #172]	; (8004114 <HAL_TIM_PeriodElapsedCallback+0x274>)
 8004066:	ed93 3b00 	vldr	d3, [r3]
 800406a:	4b2a      	ldr	r3, [pc, #168]	; (8004114 <HAL_TIM_PeriodElapsedCallback+0x274>)
 800406c:	ed93 4b02 	vldr	d4, [r3, #8]
 8004070:	4b28      	ldr	r3, [pc, #160]	; (8004114 <HAL_TIM_PeriodElapsedCallback+0x274>)
 8004072:	ed93 5b04 	vldr	d5, [r3, #16]
 8004076:	eeb0 1b46 	vmov.f64	d1, d6
 800407a:	eeb0 0b47 	vmov.f64	d0, d7
 800407e:	f7ff f8d3 	bl	8003228 <jacobianoInverso>
			SetPerfilTimers(omega[0], omega[1], omega[2]);
 8004082:	4b28      	ldr	r3, [pc, #160]	; (8004124 <HAL_TIM_PeriodElapsedCallback+0x284>)
 8004084:	ed93 7b00 	vldr	d7, [r3]
 8004088:	4b26      	ldr	r3, [pc, #152]	; (8004124 <HAL_TIM_PeriodElapsedCallback+0x284>)
 800408a:	ed93 6b02 	vldr	d6, [r3, #8]
 800408e:	4b25      	ldr	r3, [pc, #148]	; (8004124 <HAL_TIM_PeriodElapsedCallback+0x284>)
 8004090:	ed93 5b04 	vldr	d5, [r3, #16]
 8004094:	eeb0 2b45 	vmov.f64	d2, d5
 8004098:	eeb0 1b46 	vmov.f64	d1, d6
 800409c:	eeb0 0b47 	vmov.f64	d0, d7
 80040a0:	f002 fd1e 	bl	8006ae0 <SetPerfilTimers>
			if(Start==1){
 80040a4:	4b20      	ldr	r3, [pc, #128]	; (8004128 <HAL_TIM_PeriodElapsedCallback+0x288>)
 80040a6:	781b      	ldrb	r3, [r3, #0]
 80040a8:	2b01      	cmp	r3, #1
 80040aa:	d10e      	bne.n	80040ca <HAL_TIM_PeriodElapsedCallback+0x22a>
				Start=0;
 80040ac:	4b1e      	ldr	r3, [pc, #120]	; (8004128 <HAL_TIM_PeriodElapsedCallback+0x288>)
 80040ae:	2200      	movs	r2, #0
 80040b0:	701a      	strb	r2, [r3, #0]
				HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);	// Activar generacion de pwm
 80040b2:	2100      	movs	r1, #0
 80040b4:	481d      	ldr	r0, [pc, #116]	; (800412c <HAL_TIM_PeriodElapsedCallback+0x28c>)
 80040b6:	f007 f88d 	bl	800b1d4 <HAL_TIM_PWM_Start>
				HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);	// Activar generacion de pwm
 80040ba:	2100      	movs	r1, #0
 80040bc:	481c      	ldr	r0, [pc, #112]	; (8004130 <HAL_TIM_PeriodElapsedCallback+0x290>)
 80040be:	f007 f889 	bl	800b1d4 <HAL_TIM_PWM_Start>
				HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);	// Activar generacion de pwm
 80040c2:	2100      	movs	r1, #0
 80040c4:	481b      	ldr	r0, [pc, #108]	; (8004134 <HAL_TIM_PeriodElapsedCallback+0x294>)
 80040c6:	f007 f885 	bl	800b1d4 <HAL_TIM_PWM_Start>
}
 80040ca:	bf00      	nop
 80040cc:	3708      	adds	r7, #8
 80040ce:	46bd      	mov	sp, r7
 80040d0:	bd80      	pop	{r7, pc}
 80040d2:	bf00      	nop
 80040d4:	f3af 8000 	nop.w
 80040d8:	00000000 	.word	0x00000000
 80040dc:	418e8480 	.word	0x418e8480
 80040e0:	24000a28 	.word	0x24000a28
 80040e4:	24000720 	.word	0x24000720
 80040e8:	24000728 	.word	0x24000728
 80040ec:	240000a8 	.word	0x240000a8
 80040f0:	240008f8 	.word	0x240008f8
 80040f4:	24000680 	.word	0x24000680
 80040f8:	24000668 	.word	0x24000668
 80040fc:	240007c0 	.word	0x240007c0
 8004100:	24000714 	.word	0x24000714
 8004104:	40000c00 	.word	0x40000c00
 8004108:	24000718 	.word	0x24000718
 800410c:	2400069c 	.word	0x2400069c
 8004110:	24000640 	.word	0x24000640
 8004114:	240006a8 	.word	0x240006a8
 8004118:	24000644 	.word	0x24000644
 800411c:	00000000 	.word	0x00000000
 8004120:	240006c0 	.word	0x240006c0
 8004124:	240006d8 	.word	0x240006d8
 8004128:	240007b8 	.word	0x240007b8
 800412c:	24000944 	.word	0x24000944
 8004130:	24000990 	.word	0x24000990
 8004134:	240009dc 	.word	0x240009dc

08004138 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8004138:	b480      	push	{r7}
 800413a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 800413c:	bf00      	nop
 800413e:	46bd      	mov	sp, r7
 8004140:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004144:	4770      	bx	lr
	...

08004148 <configStepMotor1>:
double remanente3;
double Periodo;		//periodo de timer PWM
//double ErrorPeriodo;
//double ErrorAcumuladoPeriodo[3];

void configStepMotor1(double angulo) {
 8004148:	b580      	push	{r7, lr}
 800414a:	b084      	sub	sp, #16
 800414c:	af00      	add	r7, sp, #0
 800414e:	ed87 0b00 	vstr	d0, [r7]
	double anguloDif;
	pMotor1 = 0;
 8004152:	4b51      	ldr	r3, [pc, #324]	; (8004298 <configStepMotor1+0x150>)
 8004154:	2200      	movs	r2, #0
 8004156:	601a      	str	r2, [r3, #0]
	if (angulo >= anguloActual1) {
 8004158:	4b50      	ldr	r3, [pc, #320]	; (800429c <configStepMotor1+0x154>)
 800415a:	ed93 7b00 	vldr	d7, [r3]
 800415e:	ed97 6b00 	vldr	d6, [r7]
 8004162:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8004166:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800416a:	db22      	blt.n	80041b2 <configStepMotor1+0x6a>
		if(!(HAL_GPIO_ReadPin(E_EndStop1_Inf_GPIO_Port, E_EndStop1_Inf_Pin))){
 800416c:	2102      	movs	r1, #2
 800416e:	484c      	ldr	r0, [pc, #304]	; (80042a0 <configStepMotor1+0x158>)
 8004170:	f004 fa90 	bl	8008694 <HAL_GPIO_ReadPin>
 8004174:	4603      	mov	r3, r0
 8004176:	2b00      	cmp	r3, #0
 8004178:	d106      	bne.n	8004188 <configStepMotor1+0x40>
			flagErrorEndStop = 1;
 800417a:	494a      	ldr	r1, [pc, #296]	; (80042a4 <configStepMotor1+0x15c>)
 800417c:	f04f 0200 	mov.w	r2, #0
 8004180:	4b49      	ldr	r3, [pc, #292]	; (80042a8 <configStepMotor1+0x160>)
 8004182:	e9c1 2300 	strd	r2, r3, [r1]
 8004186:	e036      	b.n	80041f6 <configStepMotor1+0xae>
		} else {
			anguloDif = angulo - anguloActual1;	//Calculo cuantos grados se tiene que mover.
 8004188:	4b44      	ldr	r3, [pc, #272]	; (800429c <configStepMotor1+0x154>)
 800418a:	ed93 7b00 	vldr	d7, [r3]
 800418e:	ed97 6b00 	vldr	d6, [r7]
 8004192:	ee36 7b47 	vsub.f64	d7, d6, d7
 8004196:	ed87 7b02 	vstr	d7, [r7, #8]
			anguloActual1 = angulo;
 800419a:	4940      	ldr	r1, [pc, #256]	; (800429c <configStepMotor1+0x154>)
 800419c:	e9d7 2300 	ldrd	r2, r3, [r7]
 80041a0:	e9c1 2300 	strd	r2, r3, [r1]
			HAL_GPIO_WritePin(S_DirPaP1_GPIO_Port, S_DirPaP1_Pin, GPIO_PIN_SET); //Antihorario visto de frente
 80041a4:	2201      	movs	r2, #1
 80041a6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80041aa:	4840      	ldr	r0, [pc, #256]	; (80042ac <configStepMotor1+0x164>)
 80041ac:	f004 fa8a 	bl	80086c4 <HAL_GPIO_WritePin>
 80041b0:	e021      	b.n	80041f6 <configStepMotor1+0xae>
		}
	} else {
		if(!(HAL_GPIO_ReadPin(E_EndStop1_Sup_GPIO_Port, E_EndStop1_Sup_Pin))){
 80041b2:	2101      	movs	r1, #1
 80041b4:	483a      	ldr	r0, [pc, #232]	; (80042a0 <configStepMotor1+0x158>)
 80041b6:	f004 fa6d 	bl	8008694 <HAL_GPIO_ReadPin>
 80041ba:	4603      	mov	r3, r0
 80041bc:	2b00      	cmp	r3, #0
 80041be:	d106      	bne.n	80041ce <configStepMotor1+0x86>
			flagErrorEndStop = 1;
 80041c0:	4938      	ldr	r1, [pc, #224]	; (80042a4 <configStepMotor1+0x15c>)
 80041c2:	f04f 0200 	mov.w	r2, #0
 80041c6:	4b38      	ldr	r3, [pc, #224]	; (80042a8 <configStepMotor1+0x160>)
 80041c8:	e9c1 2300 	strd	r2, r3, [r1]
 80041cc:	e013      	b.n	80041f6 <configStepMotor1+0xae>
		} else {
			anguloDif = anguloActual1 - angulo;	//Calculo cuantos grados se tiene que mover.
 80041ce:	4b33      	ldr	r3, [pc, #204]	; (800429c <configStepMotor1+0x154>)
 80041d0:	ed93 6b00 	vldr	d6, [r3]
 80041d4:	ed97 7b00 	vldr	d7, [r7]
 80041d8:	ee36 7b47 	vsub.f64	d7, d6, d7
 80041dc:	ed87 7b02 	vstr	d7, [r7, #8]
			anguloActual1 = angulo;
 80041e0:	492e      	ldr	r1, [pc, #184]	; (800429c <configStepMotor1+0x154>)
 80041e2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80041e6:	e9c1 2300 	strd	r2, r3, [r1]
			HAL_GPIO_WritePin(S_DirPaP1_GPIO_Port, S_DirPaP1_Pin, GPIO_PIN_RESET); // Horario visto de frente
 80041ea:	2200      	movs	r2, #0
 80041ec:	f44f 7180 	mov.w	r1, #256	; 0x100
 80041f0:	482e      	ldr	r0, [pc, #184]	; (80042ac <configStepMotor1+0x164>)
 80041f2:	f004 fa67 	bl	80086c4 <HAL_GPIO_WritePin>
		}

	}
	// Calculo el error de posicion por casteo a int, y cuando supera la unidad lo compenzo------
	calculoStep1 = (anguloDif * STEPREV) / 360; // Almaceno el remante de los numeros de pasos y
 80041f6:	ed97 7b02 	vldr	d7, [r7, #8]
 80041fa:	ed9f 6b23 	vldr	d6, [pc, #140]	; 8004288 <configStepMotor1+0x140>
 80041fe:	ee27 6b06 	vmul.f64	d6, d7, d6
 8004202:	ed9f 5b23 	vldr	d5, [pc, #140]	; 8004290 <configStepMotor1+0x148>
 8004206:	ee86 7b05 	vdiv.f64	d7, d6, d5
 800420a:	4b29      	ldr	r3, [pc, #164]	; (80042b0 <configStepMotor1+0x168>)
 800420c:	ed83 7b00 	vstr	d7, [r3]
	numStep1 = (uint32_t) calculoStep1;	// cuando pasa la unidad lo sumo al numero de pasos para
 8004210:	4b27      	ldr	r3, [pc, #156]	; (80042b0 <configStepMotor1+0x168>)
 8004212:	ed93 7b00 	vldr	d7, [r3]
 8004216:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800421a:	ee17 2a90 	vmov	r2, s15
 800421e:	4b25      	ldr	r3, [pc, #148]	; (80042b4 <configStepMotor1+0x16c>)
 8004220:	601a      	str	r2, [r3, #0]
	remanente1 = remanente1 + (calculoStep1 - numStep1);// que el error no se amplifique.
 8004222:	4b23      	ldr	r3, [pc, #140]	; (80042b0 <configStepMotor1+0x168>)
 8004224:	ed93 6b00 	vldr	d6, [r3]
 8004228:	4b22      	ldr	r3, [pc, #136]	; (80042b4 <configStepMotor1+0x16c>)
 800422a:	681b      	ldr	r3, [r3, #0]
 800422c:	ee07 3a90 	vmov	s15, r3
 8004230:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8004234:	ee36 6b47 	vsub.f64	d6, d6, d7
 8004238:	4b1f      	ldr	r3, [pc, #124]	; (80042b8 <configStepMotor1+0x170>)
 800423a:	ed93 7b00 	vldr	d7, [r3]
 800423e:	ee36 7b07 	vadd.f64	d7, d6, d7
 8004242:	4b1d      	ldr	r3, [pc, #116]	; (80042b8 <configStepMotor1+0x170>)
 8004244:	ed83 7b00 	vstr	d7, [r3]
	if (remanente1 >= 1) {
 8004248:	4b1b      	ldr	r3, [pc, #108]	; (80042b8 <configStepMotor1+0x170>)
 800424a:	ed93 7b00 	vldr	d7, [r3]
 800424e:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8004252:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8004256:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800425a:	da00      	bge.n	800425e <configStepMotor1+0x116>
		remanente1 = remanente1 - 1;
		numStep1 = numStep1 + 1;
	}
}
 800425c:	e00e      	b.n	800427c <configStepMotor1+0x134>
		remanente1 = remanente1 - 1;
 800425e:	4b16      	ldr	r3, [pc, #88]	; (80042b8 <configStepMotor1+0x170>)
 8004260:	ed93 7b00 	vldr	d7, [r3]
 8004264:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8004268:	ee37 7b46 	vsub.f64	d7, d7, d6
 800426c:	4b12      	ldr	r3, [pc, #72]	; (80042b8 <configStepMotor1+0x170>)
 800426e:	ed83 7b00 	vstr	d7, [r3]
		numStep1 = numStep1 + 1;
 8004272:	4b10      	ldr	r3, [pc, #64]	; (80042b4 <configStepMotor1+0x16c>)
 8004274:	681b      	ldr	r3, [r3, #0]
 8004276:	3301      	adds	r3, #1
 8004278:	4a0e      	ldr	r2, [pc, #56]	; (80042b4 <configStepMotor1+0x16c>)
 800427a:	6013      	str	r3, [r2, #0]
}
 800427c:	bf00      	nop
 800427e:	3710      	adds	r7, #16
 8004280:	46bd      	mov	sp, r7
 8004282:	bd80      	pop	{r7, pc}
 8004284:	f3af 8000 	nop.w
 8004288:	00000000 	.word	0x00000000
 800428c:	40bf4000 	.word	0x40bf4000
 8004290:	00000000 	.word	0x00000000
 8004294:	40768000 	.word	0x40768000
 8004298:	24000610 	.word	0x24000610
 800429c:	240007c8 	.word	0x240007c8
 80042a0:	58021000 	.word	0x58021000
 80042a4:	24000768 	.word	0x24000768
 80042a8:	3ff00000 	.word	0x3ff00000
 80042ac:	58020800 	.word	0x58020800
 80042b0:	240007e0 	.word	0x240007e0
 80042b4:	2400061c 	.word	0x2400061c
 80042b8:	240007f8 	.word	0x240007f8
 80042bc:	00000000 	.word	0x00000000

080042c0 <configStepMotor2>:

void configStepMotor2(double angulo) {
 80042c0:	b580      	push	{r7, lr}
 80042c2:	b084      	sub	sp, #16
 80042c4:	af00      	add	r7, sp, #0
 80042c6:	ed87 0b00 	vstr	d0, [r7]
	double anguloDif;
	pMotor2 = 0;
 80042ca:	4b51      	ldr	r3, [pc, #324]	; (8004410 <configStepMotor2+0x150>)
 80042cc:	2200      	movs	r2, #0
 80042ce:	601a      	str	r2, [r3, #0]
	if (angulo >= anguloActual2) {
 80042d0:	4b50      	ldr	r3, [pc, #320]	; (8004414 <configStepMotor2+0x154>)
 80042d2:	ed93 7b00 	vldr	d7, [r3]
 80042d6:	ed97 6b00 	vldr	d6, [r7]
 80042da:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80042de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80042e2:	db22      	blt.n	800432a <configStepMotor2+0x6a>
		if(!(HAL_GPIO_ReadPin(E_EndStop2_Inf_GPIO_Port, E_EndStop2_Inf_Pin))){
 80042e4:	2108      	movs	r1, #8
 80042e6:	484c      	ldr	r0, [pc, #304]	; (8004418 <configStepMotor2+0x158>)
 80042e8:	f004 f9d4 	bl	8008694 <HAL_GPIO_ReadPin>
 80042ec:	4603      	mov	r3, r0
 80042ee:	2b00      	cmp	r3, #0
 80042f0:	d106      	bne.n	8004300 <configStepMotor2+0x40>
			flagErrorEndStop = 1;
 80042f2:	494a      	ldr	r1, [pc, #296]	; (800441c <configStepMotor2+0x15c>)
 80042f4:	f04f 0200 	mov.w	r2, #0
 80042f8:	4b49      	ldr	r3, [pc, #292]	; (8004420 <configStepMotor2+0x160>)
 80042fa:	e9c1 2300 	strd	r2, r3, [r1]
 80042fe:	e036      	b.n	800436e <configStepMotor2+0xae>
		} else {
			anguloDif = angulo - anguloActual2;	//Calculo cuantos grados se tiene que mover.
 8004300:	4b44      	ldr	r3, [pc, #272]	; (8004414 <configStepMotor2+0x154>)
 8004302:	ed93 7b00 	vldr	d7, [r3]
 8004306:	ed97 6b00 	vldr	d6, [r7]
 800430a:	ee36 7b47 	vsub.f64	d7, d6, d7
 800430e:	ed87 7b02 	vstr	d7, [r7, #8]
			anguloActual2 = angulo;
 8004312:	4940      	ldr	r1, [pc, #256]	; (8004414 <configStepMotor2+0x154>)
 8004314:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004318:	e9c1 2300 	strd	r2, r3, [r1]
			HAL_GPIO_WritePin(S_DirPaP2_GPIO_Port, S_DirPaP2_Pin, GPIO_PIN_SET); // VERIFICAR SENTIDO DE GIRO
 800431c:	2201      	movs	r2, #1
 800431e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8004322:	4840      	ldr	r0, [pc, #256]	; (8004424 <configStepMotor2+0x164>)
 8004324:	f004 f9ce 	bl	80086c4 <HAL_GPIO_WritePin>
 8004328:	e021      	b.n	800436e <configStepMotor2+0xae>
		}
	} else {
		if(!(HAL_GPIO_ReadPin(E_EndStop2_Sup_GPIO_Port, E_EndStop2_Sup_Pin))){
 800432a:	2104      	movs	r1, #4
 800432c:	483a      	ldr	r0, [pc, #232]	; (8004418 <configStepMotor2+0x158>)
 800432e:	f004 f9b1 	bl	8008694 <HAL_GPIO_ReadPin>
 8004332:	4603      	mov	r3, r0
 8004334:	2b00      	cmp	r3, #0
 8004336:	d106      	bne.n	8004346 <configStepMotor2+0x86>
			flagErrorEndStop = 1;
 8004338:	4938      	ldr	r1, [pc, #224]	; (800441c <configStepMotor2+0x15c>)
 800433a:	f04f 0200 	mov.w	r2, #0
 800433e:	4b38      	ldr	r3, [pc, #224]	; (8004420 <configStepMotor2+0x160>)
 8004340:	e9c1 2300 	strd	r2, r3, [r1]
 8004344:	e013      	b.n	800436e <configStepMotor2+0xae>
		} else {
			anguloDif = anguloActual2 - angulo;	//Calculo cuantos grados se tiene que mover.
 8004346:	4b33      	ldr	r3, [pc, #204]	; (8004414 <configStepMotor2+0x154>)
 8004348:	ed93 6b00 	vldr	d6, [r3]
 800434c:	ed97 7b00 	vldr	d7, [r7]
 8004350:	ee36 7b47 	vsub.f64	d7, d6, d7
 8004354:	ed87 7b02 	vstr	d7, [r7, #8]
			anguloActual2 = angulo;
 8004358:	492e      	ldr	r1, [pc, #184]	; (8004414 <configStepMotor2+0x154>)
 800435a:	e9d7 2300 	ldrd	r2, r3, [r7]
 800435e:	e9c1 2300 	strd	r2, r3, [r1]
			HAL_GPIO_WritePin(S_DirPaP2_GPIO_Port, S_DirPaP2_Pin, GPIO_PIN_RESET); // VERIFICAR SENTIDO DE GIRO
 8004362:	2200      	movs	r2, #0
 8004364:	f44f 7100 	mov.w	r1, #512	; 0x200
 8004368:	482e      	ldr	r0, [pc, #184]	; (8004424 <configStepMotor2+0x164>)
 800436a:	f004 f9ab 	bl	80086c4 <HAL_GPIO_WritePin>
		}

	}
	// Calculo el error de posicion por casteo a int, y cuando supera la unidad lo compenzo------
	calculoStep2 = (anguloDif * STEPREV) / 360; // Almaceno el remante de los numeros de pasos y
 800436e:	ed97 7b02 	vldr	d7, [r7, #8]
 8004372:	ed9f 6b23 	vldr	d6, [pc, #140]	; 8004400 <configStepMotor2+0x140>
 8004376:	ee27 6b06 	vmul.f64	d6, d7, d6
 800437a:	ed9f 5b23 	vldr	d5, [pc, #140]	; 8004408 <configStepMotor2+0x148>
 800437e:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8004382:	4b29      	ldr	r3, [pc, #164]	; (8004428 <configStepMotor2+0x168>)
 8004384:	ed83 7b00 	vstr	d7, [r3]
	numStep2 = (uint32_t) calculoStep2;	// cuando pasa la unidad lo sumo al numero de pasos para
 8004388:	4b27      	ldr	r3, [pc, #156]	; (8004428 <configStepMotor2+0x168>)
 800438a:	ed93 7b00 	vldr	d7, [r3]
 800438e:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8004392:	ee17 2a90 	vmov	r2, s15
 8004396:	4b25      	ldr	r3, [pc, #148]	; (800442c <configStepMotor2+0x16c>)
 8004398:	601a      	str	r2, [r3, #0]
	remanente2 = remanente2 + (calculoStep2 - numStep2);// que el error no se amplifique.
 800439a:	4b23      	ldr	r3, [pc, #140]	; (8004428 <configStepMotor2+0x168>)
 800439c:	ed93 6b00 	vldr	d6, [r3]
 80043a0:	4b22      	ldr	r3, [pc, #136]	; (800442c <configStepMotor2+0x16c>)
 80043a2:	681b      	ldr	r3, [r3, #0]
 80043a4:	ee07 3a90 	vmov	s15, r3
 80043a8:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80043ac:	ee36 6b47 	vsub.f64	d6, d6, d7
 80043b0:	4b1f      	ldr	r3, [pc, #124]	; (8004430 <configStepMotor2+0x170>)
 80043b2:	ed93 7b00 	vldr	d7, [r3]
 80043b6:	ee36 7b07 	vadd.f64	d7, d6, d7
 80043ba:	4b1d      	ldr	r3, [pc, #116]	; (8004430 <configStepMotor2+0x170>)
 80043bc:	ed83 7b00 	vstr	d7, [r3]
	if (remanente2 >= 1) {
 80043c0:	4b1b      	ldr	r3, [pc, #108]	; (8004430 <configStepMotor2+0x170>)
 80043c2:	ed93 7b00 	vldr	d7, [r3]
 80043c6:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80043ca:	eeb4 7bc6 	vcmpe.f64	d7, d6
 80043ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043d2:	da00      	bge.n	80043d6 <configStepMotor2+0x116>
		remanente2 = remanente2 - 1;
		numStep2 = numStep2 + 1;
	}
}
 80043d4:	e00e      	b.n	80043f4 <configStepMotor2+0x134>
		remanente2 = remanente2 - 1;
 80043d6:	4b16      	ldr	r3, [pc, #88]	; (8004430 <configStepMotor2+0x170>)
 80043d8:	ed93 7b00 	vldr	d7, [r3]
 80043dc:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80043e0:	ee37 7b46 	vsub.f64	d7, d7, d6
 80043e4:	4b12      	ldr	r3, [pc, #72]	; (8004430 <configStepMotor2+0x170>)
 80043e6:	ed83 7b00 	vstr	d7, [r3]
		numStep2 = numStep2 + 1;
 80043ea:	4b10      	ldr	r3, [pc, #64]	; (800442c <configStepMotor2+0x16c>)
 80043ec:	681b      	ldr	r3, [r3, #0]
 80043ee:	3301      	adds	r3, #1
 80043f0:	4a0e      	ldr	r2, [pc, #56]	; (800442c <configStepMotor2+0x16c>)
 80043f2:	6013      	str	r3, [r2, #0]
}
 80043f4:	bf00      	nop
 80043f6:	3710      	adds	r7, #16
 80043f8:	46bd      	mov	sp, r7
 80043fa:	bd80      	pop	{r7, pc}
 80043fc:	f3af 8000 	nop.w
 8004400:	00000000 	.word	0x00000000
 8004404:	40bf4000 	.word	0x40bf4000
 8004408:	00000000 	.word	0x00000000
 800440c:	40768000 	.word	0x40768000
 8004410:	24000614 	.word	0x24000614
 8004414:	240007d0 	.word	0x240007d0
 8004418:	58021000 	.word	0x58021000
 800441c:	24000768 	.word	0x24000768
 8004420:	3ff00000 	.word	0x3ff00000
 8004424:	58020800 	.word	0x58020800
 8004428:	240007e8 	.word	0x240007e8
 800442c:	24000620 	.word	0x24000620
 8004430:	24000800 	.word	0x24000800
 8004434:	00000000 	.word	0x00000000

08004438 <configStepMotor3>:

void configStepMotor3(double angulo) {
 8004438:	b580      	push	{r7, lr}
 800443a:	b084      	sub	sp, #16
 800443c:	af00      	add	r7, sp, #0
 800443e:	ed87 0b00 	vstr	d0, [r7]
	double anguloDif;
	pMotor3 = 0;
 8004442:	4b51      	ldr	r3, [pc, #324]	; (8004588 <configStepMotor3+0x150>)
 8004444:	2200      	movs	r2, #0
 8004446:	601a      	str	r2, [r3, #0]
	if (angulo >= anguloActual3) {
 8004448:	4b50      	ldr	r3, [pc, #320]	; (800458c <configStepMotor3+0x154>)
 800444a:	ed93 7b00 	vldr	d7, [r3]
 800444e:	ed97 6b00 	vldr	d6, [r7]
 8004452:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8004456:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800445a:	db22      	blt.n	80044a2 <configStepMotor3+0x6a>
		if(!(HAL_GPIO_ReadPin(E_EndStop3_Inf_GPIO_Port, E_EndStop3_Inf_Pin))){
 800445c:	2120      	movs	r1, #32
 800445e:	484c      	ldr	r0, [pc, #304]	; (8004590 <configStepMotor3+0x158>)
 8004460:	f004 f918 	bl	8008694 <HAL_GPIO_ReadPin>
 8004464:	4603      	mov	r3, r0
 8004466:	2b00      	cmp	r3, #0
 8004468:	d106      	bne.n	8004478 <configStepMotor3+0x40>
			flagErrorEndStop = 1;
 800446a:	494a      	ldr	r1, [pc, #296]	; (8004594 <configStepMotor3+0x15c>)
 800446c:	f04f 0200 	mov.w	r2, #0
 8004470:	4b49      	ldr	r3, [pc, #292]	; (8004598 <configStepMotor3+0x160>)
 8004472:	e9c1 2300 	strd	r2, r3, [r1]
 8004476:	e036      	b.n	80044e6 <configStepMotor3+0xae>
		} else {
			anguloDif = angulo - anguloActual3;	//Calculo cuantos grados se tiene que mover.
 8004478:	4b44      	ldr	r3, [pc, #272]	; (800458c <configStepMotor3+0x154>)
 800447a:	ed93 7b00 	vldr	d7, [r3]
 800447e:	ed97 6b00 	vldr	d6, [r7]
 8004482:	ee36 7b47 	vsub.f64	d7, d6, d7
 8004486:	ed87 7b02 	vstr	d7, [r7, #8]
			anguloActual3 = angulo;
 800448a:	4940      	ldr	r1, [pc, #256]	; (800458c <configStepMotor3+0x154>)
 800448c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004490:	e9c1 2300 	strd	r2, r3, [r1]
			HAL_GPIO_WritePin(S_DirPaP3_GPIO_Port, S_DirPaP3_Pin, GPIO_PIN_SET); // Brazo Baja (Antihorario)
 8004494:	2201      	movs	r2, #1
 8004496:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800449a:	4840      	ldr	r0, [pc, #256]	; (800459c <configStepMotor3+0x164>)
 800449c:	f004 f912 	bl	80086c4 <HAL_GPIO_WritePin>
 80044a0:	e021      	b.n	80044e6 <configStepMotor3+0xae>
		}
	} else {
		if(!(HAL_GPIO_ReadPin(E_EndStop3_Inf_GPIO_Port, E_EndStop3_Inf_Pin))){
 80044a2:	2120      	movs	r1, #32
 80044a4:	483a      	ldr	r0, [pc, #232]	; (8004590 <configStepMotor3+0x158>)
 80044a6:	f004 f8f5 	bl	8008694 <HAL_GPIO_ReadPin>
 80044aa:	4603      	mov	r3, r0
 80044ac:	2b00      	cmp	r3, #0
 80044ae:	d106      	bne.n	80044be <configStepMotor3+0x86>
					flagErrorEndStop = 1;
 80044b0:	4938      	ldr	r1, [pc, #224]	; (8004594 <configStepMotor3+0x15c>)
 80044b2:	f04f 0200 	mov.w	r2, #0
 80044b6:	4b38      	ldr	r3, [pc, #224]	; (8004598 <configStepMotor3+0x160>)
 80044b8:	e9c1 2300 	strd	r2, r3, [r1]
 80044bc:	e013      	b.n	80044e6 <configStepMotor3+0xae>
		} else {
			anguloDif = anguloActual3 - angulo;	//Calculo cuantos grados se tiene que mover.
 80044be:	4b33      	ldr	r3, [pc, #204]	; (800458c <configStepMotor3+0x154>)
 80044c0:	ed93 6b00 	vldr	d6, [r3]
 80044c4:	ed97 7b00 	vldr	d7, [r7]
 80044c8:	ee36 7b47 	vsub.f64	d7, d6, d7
 80044cc:	ed87 7b02 	vstr	d7, [r7, #8]
			anguloActual3 = angulo;
 80044d0:	492e      	ldr	r1, [pc, #184]	; (800458c <configStepMotor3+0x154>)
 80044d2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80044d6:	e9c1 2300 	strd	r2, r3, [r1]
			HAL_GPIO_WritePin(S_DirPaP3_GPIO_Port, S_DirPaP3_Pin, GPIO_PIN_RESET); // Brazo Sube (Horario)
 80044da:	2200      	movs	r2, #0
 80044dc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80044e0:	482e      	ldr	r0, [pc, #184]	; (800459c <configStepMotor3+0x164>)
 80044e2:	f004 f8ef 	bl	80086c4 <HAL_GPIO_WritePin>
		}
	}
	// Calculo el error de posicion por casteo a int, y cuando supera la unidad lo compenzo------
	calculoStep3 = (anguloDif * STEPREV) / 360; // Almaceno el remante de los numeros de pasos y
 80044e6:	ed97 7b02 	vldr	d7, [r7, #8]
 80044ea:	ed9f 6b23 	vldr	d6, [pc, #140]	; 8004578 <configStepMotor3+0x140>
 80044ee:	ee27 6b06 	vmul.f64	d6, d7, d6
 80044f2:	ed9f 5b23 	vldr	d5, [pc, #140]	; 8004580 <configStepMotor3+0x148>
 80044f6:	ee86 7b05 	vdiv.f64	d7, d6, d5
 80044fa:	4b29      	ldr	r3, [pc, #164]	; (80045a0 <configStepMotor3+0x168>)
 80044fc:	ed83 7b00 	vstr	d7, [r3]
	numStep3 = (uint32_t) calculoStep3;	// cuando pasa la unidad lo sumo al numero de pasos para
 8004500:	4b27      	ldr	r3, [pc, #156]	; (80045a0 <configStepMotor3+0x168>)
 8004502:	ed93 7b00 	vldr	d7, [r3]
 8004506:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800450a:	ee17 2a90 	vmov	r2, s15
 800450e:	4b25      	ldr	r3, [pc, #148]	; (80045a4 <configStepMotor3+0x16c>)
 8004510:	601a      	str	r2, [r3, #0]
	remanente3 = remanente3 + (calculoStep3 - numStep3);// que el error no se amplifique.
 8004512:	4b23      	ldr	r3, [pc, #140]	; (80045a0 <configStepMotor3+0x168>)
 8004514:	ed93 6b00 	vldr	d6, [r3]
 8004518:	4b22      	ldr	r3, [pc, #136]	; (80045a4 <configStepMotor3+0x16c>)
 800451a:	681b      	ldr	r3, [r3, #0]
 800451c:	ee07 3a90 	vmov	s15, r3
 8004520:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8004524:	ee36 6b47 	vsub.f64	d6, d6, d7
 8004528:	4b1f      	ldr	r3, [pc, #124]	; (80045a8 <configStepMotor3+0x170>)
 800452a:	ed93 7b00 	vldr	d7, [r3]
 800452e:	ee36 7b07 	vadd.f64	d7, d6, d7
 8004532:	4b1d      	ldr	r3, [pc, #116]	; (80045a8 <configStepMotor3+0x170>)
 8004534:	ed83 7b00 	vstr	d7, [r3]
	if (remanente3 >= 1) {
 8004538:	4b1b      	ldr	r3, [pc, #108]	; (80045a8 <configStepMotor3+0x170>)
 800453a:	ed93 7b00 	vldr	d7, [r3]
 800453e:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8004542:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8004546:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800454a:	da00      	bge.n	800454e <configStepMotor3+0x116>
		remanente3 = remanente3 - 1;
		numStep3 = numStep3 + 1;
	}
}
 800454c:	e00e      	b.n	800456c <configStepMotor3+0x134>
		remanente3 = remanente3 - 1;
 800454e:	4b16      	ldr	r3, [pc, #88]	; (80045a8 <configStepMotor3+0x170>)
 8004550:	ed93 7b00 	vldr	d7, [r3]
 8004554:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8004558:	ee37 7b46 	vsub.f64	d7, d7, d6
 800455c:	4b12      	ldr	r3, [pc, #72]	; (80045a8 <configStepMotor3+0x170>)
 800455e:	ed83 7b00 	vstr	d7, [r3]
		numStep3 = numStep3 + 1;
 8004562:	4b10      	ldr	r3, [pc, #64]	; (80045a4 <configStepMotor3+0x16c>)
 8004564:	681b      	ldr	r3, [r3, #0]
 8004566:	3301      	adds	r3, #1
 8004568:	4a0e      	ldr	r2, [pc, #56]	; (80045a4 <configStepMotor3+0x16c>)
 800456a:	6013      	str	r3, [r2, #0]
}
 800456c:	bf00      	nop
 800456e:	3710      	adds	r7, #16
 8004570:	46bd      	mov	sp, r7
 8004572:	bd80      	pop	{r7, pc}
 8004574:	f3af 8000 	nop.w
 8004578:	00000000 	.word	0x00000000
 800457c:	40bf4000 	.word	0x40bf4000
 8004580:	00000000 	.word	0x00000000
 8004584:	40768000 	.word	0x40768000
 8004588:	24000618 	.word	0x24000618
 800458c:	240007d8 	.word	0x240007d8
 8004590:	58021000 	.word	0x58021000
 8004594:	24000768 	.word	0x24000768
 8004598:	3ff00000 	.word	0x3ff00000
 800459c:	58020800 	.word	0x58020800
 80045a0:	240007f0 	.word	0x240007f0
 80045a4:	24000624 	.word	0x24000624
 80045a8:	24000808 	.word	0x24000808

080045ac <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80045ac:	b580      	push	{r7, lr}
 80045ae:	b082      	sub	sp, #8
 80045b0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80045b2:	4b0f      	ldr	r3, [pc, #60]	; (80045f0 <HAL_MspInit+0x44>)
 80045b4:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 80045b8:	4a0d      	ldr	r2, [pc, #52]	; (80045f0 <HAL_MspInit+0x44>)
 80045ba:	f043 0302 	orr.w	r3, r3, #2
 80045be:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 80045c2:	4b0b      	ldr	r3, [pc, #44]	; (80045f0 <HAL_MspInit+0x44>)
 80045c4:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 80045c8:	f003 0302 	and.w	r3, r3, #2
 80045cc:	607b      	str	r3, [r7, #4]
 80045ce:	687b      	ldr	r3, [r7, #4]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_2);
 80045d0:	2005      	movs	r0, #5
 80045d2:	f003 f8fd 	bl	80077d0 <HAL_NVIC_SetPriorityGrouping>

  /* System interrupt init*/

  /* Peripheral interrupt init */
  /* FPU_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(FPU_IRQn, 1, 0);
 80045d6:	2200      	movs	r2, #0
 80045d8:	2101      	movs	r1, #1
 80045da:	2051      	movs	r0, #81	; 0x51
 80045dc:	f003 f903 	bl	80077e6 <HAL_NVIC_SetPriority>
  /* FPU_IRQn interrupt configuration */
  HAL_NVIC_EnableIRQ(FPU_IRQn);
 80045e0:	2051      	movs	r0, #81	; 0x51
 80045e2:	f003 f91a 	bl	800781a <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80045e6:	bf00      	nop
 80045e8:	3708      	adds	r7, #8
 80045ea:	46bd      	mov	sp, r7
 80045ec:	bd80      	pop	{r7, pc}
 80045ee:	bf00      	nop
 80045f0:	58024400 	.word	0x58024400

080045f4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80045f4:	b480      	push	{r7}
 80045f6:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80045f8:	bf00      	nop
 80045fa:	46bd      	mov	sp, r7
 80045fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004600:	4770      	bx	lr

08004602 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004602:	b480      	push	{r7}
 8004604:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8004606:	e7fe      	b.n	8004606 <HardFault_Handler+0x4>

08004608 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8004608:	b480      	push	{r7}
 800460a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800460c:	e7fe      	b.n	800460c <MemManage_Handler+0x4>

0800460e <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800460e:	b480      	push	{r7}
 8004610:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8004612:	e7fe      	b.n	8004612 <BusFault_Handler+0x4>

08004614 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8004614:	b480      	push	{r7}
 8004616:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8004618:	e7fe      	b.n	8004618 <UsageFault_Handler+0x4>

0800461a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800461a:	b480      	push	{r7}
 800461c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800461e:	bf00      	nop
 8004620:	46bd      	mov	sp, r7
 8004622:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004626:	4770      	bx	lr

08004628 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8004628:	b480      	push	{r7}
 800462a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800462c:	bf00      	nop
 800462e:	46bd      	mov	sp, r7
 8004630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004634:	4770      	bx	lr

08004636 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8004636:	b480      	push	{r7}
 8004638:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800463a:	bf00      	nop
 800463c:	46bd      	mov	sp, r7
 800463e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004642:	4770      	bx	lr

08004644 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8004644:	b580      	push	{r7, lr}
 8004646:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8004648:	f002 ff7e 	bl	8007548 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800464c:	bf00      	nop
 800464e:	bd80      	pop	{r7, pc}

08004650 <EXTI0_IRQHandler>:

/**
  * @brief This function handles EXTI line0 interrupt.
  */
void EXTI0_IRQHandler(void)
{
 8004650:	b580      	push	{r7, lr}
 8004652:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI0_IRQn 0 */

  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(E_EndStop1_Sup_Pin);
 8004654:	2001      	movs	r0, #1
 8004656:	f004 f84e 	bl	80086f6 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_IRQn 1 */

  /* USER CODE END EXTI0_IRQn 1 */
}
 800465a:	bf00      	nop
 800465c:	bd80      	pop	{r7, pc}

0800465e <EXTI1_IRQHandler>:

/**
  * @brief This function handles EXTI line1 interrupt.
  */
void EXTI1_IRQHandler(void)
{
 800465e:	b580      	push	{r7, lr}
 8004660:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI1_IRQn 0 */

  /* USER CODE END EXTI1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(E_EndStop1_Inf_Pin);
 8004662:	2002      	movs	r0, #2
 8004664:	f004 f847 	bl	80086f6 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI1_IRQn 1 */

  /* USER CODE END EXTI1_IRQn 1 */
}
 8004668:	bf00      	nop
 800466a:	bd80      	pop	{r7, pc}

0800466c <EXTI2_IRQHandler>:

/**
  * @brief This function handles EXTI line2 interrupt.
  */
void EXTI2_IRQHandler(void)
{
 800466c:	b580      	push	{r7, lr}
 800466e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI2_IRQn 0 */

  /* USER CODE END EXTI2_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(E_EndStop2_Sup_Pin);
 8004670:	2004      	movs	r0, #4
 8004672:	f004 f840 	bl	80086f6 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI2_IRQn 1 */

  /* USER CODE END EXTI2_IRQn 1 */
}
 8004676:	bf00      	nop
 8004678:	bd80      	pop	{r7, pc}

0800467a <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 800467a:	b580      	push	{r7, lr}
 800467c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(E_EndStop2_Inf_Pin);
 800467e:	2008      	movs	r0, #8
 8004680:	f004 f839 	bl	80086f6 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8004684:	bf00      	nop
 8004686:	bd80      	pop	{r7, pc}

08004688 <EXTI4_IRQHandler>:

/**
  * @brief This function handles EXTI line4 interrupt.
  */
void EXTI4_IRQHandler(void)
{
 8004688:	b580      	push	{r7, lr}
 800468a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_IRQn 0 */

  /* USER CODE END EXTI4_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(E_EndStop3_Sup_Pin);
 800468c:	2010      	movs	r0, #16
 800468e:	f004 f832 	bl	80086f6 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_IRQn 1 */

  /* USER CODE END EXTI4_IRQn 1 */
}
 8004692:	bf00      	nop
 8004694:	bd80      	pop	{r7, pc}

08004696 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8004696:	b580      	push	{r7, lr}
 8004698:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(E_EndStop3_Inf_Pin);
 800469a:	2020      	movs	r0, #32
 800469c:	f004 f82b 	bl	80086f6 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 80046a0:	bf00      	nop
 80046a2:	bd80      	pop	{r7, pc}

080046a4 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 80046a4:	b580      	push	{r7, lr}
 80046a6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 80046a8:	4802      	ldr	r0, [pc, #8]	; (80046b4 <TIM2_IRQHandler+0x10>)
 80046aa:	f007 f9a7 	bl	800b9fc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 80046ae:	bf00      	nop
 80046b0:	bd80      	pop	{r7, pc}
 80046b2:	bf00      	nop
 80046b4:	24000814 	.word	0x24000814

080046b8 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 80046b8:	b580      	push	{r7, lr}
 80046ba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 80046bc:	4802      	ldr	r0, [pc, #8]	; (80046c8 <TIM3_IRQHandler+0x10>)
 80046be:	f007 f99d 	bl	800b9fc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 80046c2:	bf00      	nop
 80046c4:	bd80      	pop	{r7, pc}
 80046c6:	bf00      	nop
 80046c8:	24000860 	.word	0x24000860

080046cc <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 80046cc:	b580      	push	{r7, lr}
 80046ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 80046d0:	4802      	ldr	r0, [pc, #8]	; (80046dc <TIM4_IRQHandler+0x10>)
 80046d2:	f007 f993 	bl	800b9fc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 80046d6:	bf00      	nop
 80046d8:	bd80      	pop	{r7, pc}
 80046da:	bf00      	nop
 80046dc:	240008ac 	.word	0x240008ac

080046e0 <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
 80046e0:	b580      	push	{r7, lr}
 80046e2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 80046e4:	4802      	ldr	r0, [pc, #8]	; (80046f0 <USART3_IRQHandler+0x10>)
 80046e6:	f008 fcb5 	bl	800d054 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 80046ea:	bf00      	nop
 80046ec:	bd80      	pop	{r7, pc}
 80046ee:	bf00      	nop
 80046f0:	24000bcc 	.word	0x24000bcc

080046f4 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80046f4:	b580      	push	{r7, lr}
 80046f6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(BUTTON_Pin);
 80046f8:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80046fc:	f003 fffb 	bl	80086f6 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8004700:	bf00      	nop
 8004702:	bd80      	pop	{r7, pc}

08004704 <FPU_IRQHandler>:

/**
  * @brief This function handles FPU global interrupt.
  */
void FPU_IRQHandler(void)
{
 8004704:	b480      	push	{r7}
 8004706:	af00      	add	r7, sp, #0

  /* USER CODE END FPU_IRQn 0 */
  /* USER CODE BEGIN FPU_IRQn 1 */

  /* USER CODE END FPU_IRQn 1 */
}
 8004708:	bf00      	nop
 800470a:	46bd      	mov	sp, r7
 800470c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004710:	4770      	bx	lr
	...

08004714 <TIM15_IRQHandler>:

/**
  * @brief This function handles TIM15 global interrupt.
  */
void TIM15_IRQHandler(void)
{
 8004714:	b580      	push	{r7, lr}
 8004716:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM15_IRQn 0 */

  /* USER CODE END TIM15_IRQn 0 */
  HAL_TIM_IRQHandler(&htim15);
 8004718:	4802      	ldr	r0, [pc, #8]	; (8004724 <TIM15_IRQHandler+0x10>)
 800471a:	f007 f96f 	bl	800b9fc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM15_IRQn 1 */

  /* USER CODE END TIM15_IRQn 1 */
}
 800471e:	bf00      	nop
 8004720:	bd80      	pop	{r7, pc}
 8004722:	bf00      	nop
 8004724:	24000a28 	.word	0x24000a28

08004728 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8004728:	b480      	push	{r7}
 800472a:	af00      	add	r7, sp, #0
	return 1;
 800472c:	2301      	movs	r3, #1
}
 800472e:	4618      	mov	r0, r3
 8004730:	46bd      	mov	sp, r7
 8004732:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004736:	4770      	bx	lr

08004738 <_kill>:

int _kill(int pid, int sig)
{
 8004738:	b580      	push	{r7, lr}
 800473a:	b082      	sub	sp, #8
 800473c:	af00      	add	r7, sp, #0
 800473e:	6078      	str	r0, [r7, #4]
 8004740:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8004742:	f00a fea9 	bl	800f498 <__errno>
 8004746:	4603      	mov	r3, r0
 8004748:	2216      	movs	r2, #22
 800474a:	601a      	str	r2, [r3, #0]
	return -1;
 800474c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8004750:	4618      	mov	r0, r3
 8004752:	3708      	adds	r7, #8
 8004754:	46bd      	mov	sp, r7
 8004756:	bd80      	pop	{r7, pc}

08004758 <_exit>:

void _exit (int status)
{
 8004758:	b580      	push	{r7, lr}
 800475a:	b082      	sub	sp, #8
 800475c:	af00      	add	r7, sp, #0
 800475e:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8004760:	f04f 31ff 	mov.w	r1, #4294967295
 8004764:	6878      	ldr	r0, [r7, #4]
 8004766:	f7ff ffe7 	bl	8004738 <_kill>
	while (1) {}		/* Make sure we hang here */
 800476a:	e7fe      	b.n	800476a <_exit+0x12>

0800476c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800476c:	b580      	push	{r7, lr}
 800476e:	b086      	sub	sp, #24
 8004770:	af00      	add	r7, sp, #0
 8004772:	60f8      	str	r0, [r7, #12]
 8004774:	60b9      	str	r1, [r7, #8]
 8004776:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004778:	2300      	movs	r3, #0
 800477a:	617b      	str	r3, [r7, #20]
 800477c:	e00a      	b.n	8004794 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800477e:	f3af 8000 	nop.w
 8004782:	4601      	mov	r1, r0
 8004784:	68bb      	ldr	r3, [r7, #8]
 8004786:	1c5a      	adds	r2, r3, #1
 8004788:	60ba      	str	r2, [r7, #8]
 800478a:	b2ca      	uxtb	r2, r1
 800478c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800478e:	697b      	ldr	r3, [r7, #20]
 8004790:	3301      	adds	r3, #1
 8004792:	617b      	str	r3, [r7, #20]
 8004794:	697a      	ldr	r2, [r7, #20]
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	429a      	cmp	r2, r3
 800479a:	dbf0      	blt.n	800477e <_read+0x12>
	}

return len;
 800479c:	687b      	ldr	r3, [r7, #4]
}
 800479e:	4618      	mov	r0, r3
 80047a0:	3718      	adds	r7, #24
 80047a2:	46bd      	mov	sp, r7
 80047a4:	bd80      	pop	{r7, pc}

080047a6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80047a6:	b580      	push	{r7, lr}
 80047a8:	b086      	sub	sp, #24
 80047aa:	af00      	add	r7, sp, #0
 80047ac:	60f8      	str	r0, [r7, #12]
 80047ae:	60b9      	str	r1, [r7, #8]
 80047b0:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80047b2:	2300      	movs	r3, #0
 80047b4:	617b      	str	r3, [r7, #20]
 80047b6:	e009      	b.n	80047cc <_write+0x26>
	{
		__io_putchar(*ptr++);
 80047b8:	68bb      	ldr	r3, [r7, #8]
 80047ba:	1c5a      	adds	r2, r3, #1
 80047bc:	60ba      	str	r2, [r7, #8]
 80047be:	781b      	ldrb	r3, [r3, #0]
 80047c0:	4618      	mov	r0, r3
 80047c2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80047c6:	697b      	ldr	r3, [r7, #20]
 80047c8:	3301      	adds	r3, #1
 80047ca:	617b      	str	r3, [r7, #20]
 80047cc:	697a      	ldr	r2, [r7, #20]
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	429a      	cmp	r2, r3
 80047d2:	dbf1      	blt.n	80047b8 <_write+0x12>
	}
	return len;
 80047d4:	687b      	ldr	r3, [r7, #4]
}
 80047d6:	4618      	mov	r0, r3
 80047d8:	3718      	adds	r7, #24
 80047da:	46bd      	mov	sp, r7
 80047dc:	bd80      	pop	{r7, pc}

080047de <_close>:

int _close(int file)
{
 80047de:	b480      	push	{r7}
 80047e0:	b083      	sub	sp, #12
 80047e2:	af00      	add	r7, sp, #0
 80047e4:	6078      	str	r0, [r7, #4]
	return -1;
 80047e6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80047ea:	4618      	mov	r0, r3
 80047ec:	370c      	adds	r7, #12
 80047ee:	46bd      	mov	sp, r7
 80047f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047f4:	4770      	bx	lr

080047f6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80047f6:	b480      	push	{r7}
 80047f8:	b083      	sub	sp, #12
 80047fa:	af00      	add	r7, sp, #0
 80047fc:	6078      	str	r0, [r7, #4]
 80047fe:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8004800:	683b      	ldr	r3, [r7, #0]
 8004802:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8004806:	605a      	str	r2, [r3, #4]
	return 0;
 8004808:	2300      	movs	r3, #0
}
 800480a:	4618      	mov	r0, r3
 800480c:	370c      	adds	r7, #12
 800480e:	46bd      	mov	sp, r7
 8004810:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004814:	4770      	bx	lr

08004816 <_isatty>:

int _isatty(int file)
{
 8004816:	b480      	push	{r7}
 8004818:	b083      	sub	sp, #12
 800481a:	af00      	add	r7, sp, #0
 800481c:	6078      	str	r0, [r7, #4]
	return 1;
 800481e:	2301      	movs	r3, #1
}
 8004820:	4618      	mov	r0, r3
 8004822:	370c      	adds	r7, #12
 8004824:	46bd      	mov	sp, r7
 8004826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800482a:	4770      	bx	lr

0800482c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800482c:	b480      	push	{r7}
 800482e:	b085      	sub	sp, #20
 8004830:	af00      	add	r7, sp, #0
 8004832:	60f8      	str	r0, [r7, #12]
 8004834:	60b9      	str	r1, [r7, #8]
 8004836:	607a      	str	r2, [r7, #4]
	return 0;
 8004838:	2300      	movs	r3, #0
}
 800483a:	4618      	mov	r0, r3
 800483c:	3714      	adds	r7, #20
 800483e:	46bd      	mov	sp, r7
 8004840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004844:	4770      	bx	lr
	...

08004848 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8004848:	b580      	push	{r7, lr}
 800484a:	b084      	sub	sp, #16
 800484c:	af00      	add	r7, sp, #0
 800484e:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8004850:	4b11      	ldr	r3, [pc, #68]	; (8004898 <_sbrk+0x50>)
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	2b00      	cmp	r3, #0
 8004856:	d102      	bne.n	800485e <_sbrk+0x16>
		heap_end = &end;
 8004858:	4b0f      	ldr	r3, [pc, #60]	; (8004898 <_sbrk+0x50>)
 800485a:	4a10      	ldr	r2, [pc, #64]	; (800489c <_sbrk+0x54>)
 800485c:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800485e:	4b0e      	ldr	r3, [pc, #56]	; (8004898 <_sbrk+0x50>)
 8004860:	681b      	ldr	r3, [r3, #0]
 8004862:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8004864:	4b0c      	ldr	r3, [pc, #48]	; (8004898 <_sbrk+0x50>)
 8004866:	681a      	ldr	r2, [r3, #0]
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	4413      	add	r3, r2
 800486c:	466a      	mov	r2, sp
 800486e:	4293      	cmp	r3, r2
 8004870:	d907      	bls.n	8004882 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8004872:	f00a fe11 	bl	800f498 <__errno>
 8004876:	4603      	mov	r3, r0
 8004878:	220c      	movs	r2, #12
 800487a:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 800487c:	f04f 33ff 	mov.w	r3, #4294967295
 8004880:	e006      	b.n	8004890 <_sbrk+0x48>
	}

	heap_end += incr;
 8004882:	4b05      	ldr	r3, [pc, #20]	; (8004898 <_sbrk+0x50>)
 8004884:	681a      	ldr	r2, [r3, #0]
 8004886:	687b      	ldr	r3, [r7, #4]
 8004888:	4413      	add	r3, r2
 800488a:	4a03      	ldr	r2, [pc, #12]	; (8004898 <_sbrk+0x50>)
 800488c:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800488e:	68fb      	ldr	r3, [r7, #12]
}
 8004890:	4618      	mov	r0, r3
 8004892:	3710      	adds	r7, #16
 8004894:	46bd      	mov	sp, r7
 8004896:	bd80      	pop	{r7, pc}
 8004898:	24000810 	.word	0x24000810
 800489c:	24000c70 	.word	0x24000c70

080048a0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80048a0:	b480      	push	{r7}
 80048a2:	af00      	add	r7, sp, #0
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 80048a4:	4b29      	ldr	r3, [pc, #164]	; (800494c <SystemInit+0xac>)
 80048a6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80048aa:	4a28      	ldr	r2, [pc, #160]	; (800494c <SystemInit+0xac>)
 80048ac:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80048b0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 80048b4:	4b26      	ldr	r3, [pc, #152]	; (8004950 <SystemInit+0xb0>)
 80048b6:	681b      	ldr	r3, [r3, #0]
 80048b8:	4a25      	ldr	r2, [pc, #148]	; (8004950 <SystemInit+0xb0>)
 80048ba:	f043 0301 	orr.w	r3, r3, #1
 80048be:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80048c0:	4b23      	ldr	r3, [pc, #140]	; (8004950 <SystemInit+0xb0>)
 80048c2:	2200      	movs	r2, #0
 80048c4:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 80048c6:	4b22      	ldr	r3, [pc, #136]	; (8004950 <SystemInit+0xb0>)
 80048c8:	681a      	ldr	r2, [r3, #0]
 80048ca:	4921      	ldr	r1, [pc, #132]	; (8004950 <SystemInit+0xb0>)
 80048cc:	4b21      	ldr	r3, [pc, #132]	; (8004954 <SystemInit+0xb4>)
 80048ce:	4013      	ands	r3, r2
 80048d0:	600b      	str	r3, [r1, #0]

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 80048d2:	4b1f      	ldr	r3, [pc, #124]	; (8004950 <SystemInit+0xb0>)
 80048d4:	2200      	movs	r2, #0
 80048d6:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 80048d8:	4b1d      	ldr	r3, [pc, #116]	; (8004950 <SystemInit+0xb0>)
 80048da:	2200      	movs	r2, #0
 80048dc:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 80048de:	4b1c      	ldr	r3, [pc, #112]	; (8004950 <SystemInit+0xb0>)
 80048e0:	2200      	movs	r2, #0
 80048e2:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x00000000;
 80048e4:	4b1a      	ldr	r3, [pc, #104]	; (8004950 <SystemInit+0xb0>)
 80048e6:	2200      	movs	r2, #0
 80048e8:	629a      	str	r2, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x00000000;
 80048ea:	4b19      	ldr	r3, [pc, #100]	; (8004950 <SystemInit+0xb0>)
 80048ec:	2200      	movs	r2, #0
 80048ee:	62da      	str	r2, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x00000000;
 80048f0:	4b17      	ldr	r3, [pc, #92]	; (8004950 <SystemInit+0xb0>)
 80048f2:	2200      	movs	r2, #0
 80048f4:	631a      	str	r2, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 80048f6:	4b16      	ldr	r3, [pc, #88]	; (8004950 <SystemInit+0xb0>)
 80048f8:	2200      	movs	r2, #0
 80048fa:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x00000000;
 80048fc:	4b14      	ldr	r3, [pc, #80]	; (8004950 <SystemInit+0xb0>)
 80048fe:	2200      	movs	r2, #0
 8004900:	639a      	str	r2, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 8004902:	4b13      	ldr	r3, [pc, #76]	; (8004950 <SystemInit+0xb0>)
 8004904:	2200      	movs	r2, #0
 8004906:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x00000000;
 8004908:	4b11      	ldr	r3, [pc, #68]	; (8004950 <SystemInit+0xb0>)
 800490a:	2200      	movs	r2, #0
 800490c:	641a      	str	r2, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 800490e:	4b10      	ldr	r3, [pc, #64]	; (8004950 <SystemInit+0xb0>)
 8004910:	2200      	movs	r2, #0
 8004912:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8004914:	4b0e      	ldr	r3, [pc, #56]	; (8004950 <SystemInit+0xb0>)
 8004916:	681b      	ldr	r3, [r3, #0]
 8004918:	4a0d      	ldr	r2, [pc, #52]	; (8004950 <SystemInit+0xb0>)
 800491a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800491e:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 8004920:	4b0b      	ldr	r3, [pc, #44]	; (8004950 <SystemInit+0xb0>)
 8004922:	2200      	movs	r2, #0
 8004924:	661a      	str	r2, [r3, #96]	; 0x60
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 8004926:	4b0c      	ldr	r3, [pc, #48]	; (8004958 <SystemInit+0xb8>)
 8004928:	681a      	ldr	r2, [r3, #0]
 800492a:	4b0c      	ldr	r3, [pc, #48]	; (800495c <SystemInit+0xbc>)
 800492c:	4013      	ands	r3, r2
 800492e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8004932:	d202      	bcs.n	800493a <SystemInit+0x9a>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
 8004934:	4b0a      	ldr	r3, [pc, #40]	; (8004960 <SystemInit+0xc0>)
 8004936:	2201      	movs	r2, #1
 8004938:	601a      	str	r2, [r3, #0]

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#else
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800493a:	4b04      	ldr	r3, [pc, #16]	; (800494c <SystemInit+0xac>)
 800493c:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004940:	609a      	str	r2, [r3, #8]
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
 8004942:	bf00      	nop
 8004944:	46bd      	mov	sp, r7
 8004946:	f85d 7b04 	ldr.w	r7, [sp], #4
 800494a:	4770      	bx	lr
 800494c:	e000ed00 	.word	0xe000ed00
 8004950:	58024400 	.word	0x58024400
 8004954:	eaf6ed7f 	.word	0xeaf6ed7f
 8004958:	5c001000 	.word	0x5c001000
 800495c:	ffff0000 	.word	0xffff0000
 8004960:	51008108 	.word	0x51008108

08004964 <MX_TIM2_Init>:
TIM_HandleTypeDef htim14;
TIM_HandleTypeDef htim15;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8004964:	b580      	push	{r7, lr}
 8004966:	b08c      	sub	sp, #48	; 0x30
 8004968:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800496a:	f107 0320 	add.w	r3, r7, #32
 800496e:	2200      	movs	r2, #0
 8004970:	601a      	str	r2, [r3, #0]
 8004972:	605a      	str	r2, [r3, #4]
 8004974:	609a      	str	r2, [r3, #8]
 8004976:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004978:	f107 0314 	add.w	r3, r7, #20
 800497c:	2200      	movs	r2, #0
 800497e:	601a      	str	r2, [r3, #0]
 8004980:	605a      	str	r2, [r3, #4]
 8004982:	609a      	str	r2, [r3, #8]
  TIM_IC_InitTypeDef sConfigIC = {0};
 8004984:	1d3b      	adds	r3, r7, #4
 8004986:	2200      	movs	r2, #0
 8004988:	601a      	str	r2, [r3, #0]
 800498a:	605a      	str	r2, [r3, #4]
 800498c:	609a      	str	r2, [r3, #8]
 800498e:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8004990:	4b2b      	ldr	r3, [pc, #172]	; (8004a40 <MX_TIM2_Init+0xdc>)
 8004992:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004996:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8004998:	4b29      	ldr	r3, [pc, #164]	; (8004a40 <MX_TIM2_Init+0xdc>)
 800499a:	2200      	movs	r2, #0
 800499c:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800499e:	4b28      	ldr	r3, [pc, #160]	; (8004a40 <MX_TIM2_Init+0xdc>)
 80049a0:	2200      	movs	r2, #0
 80049a2:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 65535;
 80049a4:	4b26      	ldr	r3, [pc, #152]	; (8004a40 <MX_TIM2_Init+0xdc>)
 80049a6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80049aa:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80049ac:	4b24      	ldr	r3, [pc, #144]	; (8004a40 <MX_TIM2_Init+0xdc>)
 80049ae:	2200      	movs	r2, #0
 80049b0:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80049b2:	4b23      	ldr	r3, [pc, #140]	; (8004a40 <MX_TIM2_Init+0xdc>)
 80049b4:	2200      	movs	r2, #0
 80049b6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80049b8:	4821      	ldr	r0, [pc, #132]	; (8004a40 <MX_TIM2_Init+0xdc>)
 80049ba:	f006 fa13 	bl	800ade4 <HAL_TIM_Base_Init>
 80049be:	4603      	mov	r3, r0
 80049c0:	2b00      	cmp	r3, #0
 80049c2:	d001      	beq.n	80049c8 <MX_TIM2_Init+0x64>
  {
    Error_Handler();
 80049c4:	f7ff fbb8 	bl	8004138 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80049c8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80049cc:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80049ce:	f107 0320 	add.w	r3, r7, #32
 80049d2:	4619      	mov	r1, r3
 80049d4:	481a      	ldr	r0, [pc, #104]	; (8004a40 <MX_TIM2_Init+0xdc>)
 80049d6:	f007 fae1 	bl	800bf9c <HAL_TIM_ConfigClockSource>
 80049da:	4603      	mov	r3, r0
 80049dc:	2b00      	cmp	r3, #0
 80049de:	d001      	beq.n	80049e4 <MX_TIM2_Init+0x80>
  {
    Error_Handler();
 80049e0:	f7ff fbaa 	bl	8004138 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim2) != HAL_OK)
 80049e4:	4816      	ldr	r0, [pc, #88]	; (8004a40 <MX_TIM2_Init+0xdc>)
 80049e6:	f006 fd99 	bl	800b51c <HAL_TIM_IC_Init>
 80049ea:	4603      	mov	r3, r0
 80049ec:	2b00      	cmp	r3, #0
 80049ee:	d001      	beq.n	80049f4 <MX_TIM2_Init+0x90>
  {
    Error_Handler();
 80049f0:	f7ff fba2 	bl	8004138 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80049f4:	2300      	movs	r3, #0
 80049f6:	617b      	str	r3, [r7, #20]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80049f8:	2300      	movs	r3, #0
 80049fa:	61fb      	str	r3, [r7, #28]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80049fc:	f107 0314 	add.w	r3, r7, #20
 8004a00:	4619      	mov	r1, r3
 8004a02:	480f      	ldr	r0, [pc, #60]	; (8004a40 <MX_TIM2_Init+0xdc>)
 8004a04:	f008 f93e 	bl	800cc84 <HAL_TIMEx_MasterConfigSynchronization>
 8004a08:	4603      	mov	r3, r0
 8004a0a:	2b00      	cmp	r3, #0
 8004a0c:	d001      	beq.n	8004a12 <MX_TIM2_Init+0xae>
  {
    Error_Handler();
 8004a0e:	f7ff fb93 	bl	8004138 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 8004a12:	2300      	movs	r3, #0
 8004a14:	607b      	str	r3, [r7, #4]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8004a16:	2301      	movs	r3, #1
 8004a18:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8004a1a:	2300      	movs	r3, #0
 8004a1c:	60fb      	str	r3, [r7, #12]
  sConfigIC.ICFilter = 0;
 8004a1e:	2300      	movs	r3, #0
 8004a20:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 8004a22:	1d3b      	adds	r3, r7, #4
 8004a24:	2200      	movs	r2, #0
 8004a26:	4619      	mov	r1, r3
 8004a28:	4805      	ldr	r0, [pc, #20]	; (8004a40 <MX_TIM2_Init+0xdc>)
 8004a2a:	f007 f906 	bl	800bc3a <HAL_TIM_IC_ConfigChannel>
 8004a2e:	4603      	mov	r3, r0
 8004a30:	2b00      	cmp	r3, #0
 8004a32:	d001      	beq.n	8004a38 <MX_TIM2_Init+0xd4>
  {
    Error_Handler();
 8004a34:	f7ff fb80 	bl	8004138 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8004a38:	bf00      	nop
 8004a3a:	3730      	adds	r7, #48	; 0x30
 8004a3c:	46bd      	mov	sp, r7
 8004a3e:	bd80      	pop	{r7, pc}
 8004a40:	24000814 	.word	0x24000814

08004a44 <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 8004a44:	b580      	push	{r7, lr}
 8004a46:	b08c      	sub	sp, #48	; 0x30
 8004a48:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004a4a:	f107 0320 	add.w	r3, r7, #32
 8004a4e:	2200      	movs	r2, #0
 8004a50:	601a      	str	r2, [r3, #0]
 8004a52:	605a      	str	r2, [r3, #4]
 8004a54:	609a      	str	r2, [r3, #8]
 8004a56:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004a58:	f107 0314 	add.w	r3, r7, #20
 8004a5c:	2200      	movs	r2, #0
 8004a5e:	601a      	str	r2, [r3, #0]
 8004a60:	605a      	str	r2, [r3, #4]
 8004a62:	609a      	str	r2, [r3, #8]
  TIM_IC_InitTypeDef sConfigIC = {0};
 8004a64:	1d3b      	adds	r3, r7, #4
 8004a66:	2200      	movs	r2, #0
 8004a68:	601a      	str	r2, [r3, #0]
 8004a6a:	605a      	str	r2, [r3, #4]
 8004a6c:	609a      	str	r2, [r3, #8]
 8004a6e:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8004a70:	4b2b      	ldr	r3, [pc, #172]	; (8004b20 <MX_TIM3_Init+0xdc>)
 8004a72:	4a2c      	ldr	r2, [pc, #176]	; (8004b24 <MX_TIM3_Init+0xe0>)
 8004a74:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 8004a76:	4b2a      	ldr	r3, [pc, #168]	; (8004b20 <MX_TIM3_Init+0xdc>)
 8004a78:	2200      	movs	r2, #0
 8004a7a:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004a7c:	4b28      	ldr	r3, [pc, #160]	; (8004b20 <MX_TIM3_Init+0xdc>)
 8004a7e:	2200      	movs	r2, #0
 8004a80:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 8004a82:	4b27      	ldr	r3, [pc, #156]	; (8004b20 <MX_TIM3_Init+0xdc>)
 8004a84:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004a88:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004a8a:	4b25      	ldr	r3, [pc, #148]	; (8004b20 <MX_TIM3_Init+0xdc>)
 8004a8c:	2200      	movs	r2, #0
 8004a8e:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004a90:	4b23      	ldr	r3, [pc, #140]	; (8004b20 <MX_TIM3_Init+0xdc>)
 8004a92:	2200      	movs	r2, #0
 8004a94:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8004a96:	4822      	ldr	r0, [pc, #136]	; (8004b20 <MX_TIM3_Init+0xdc>)
 8004a98:	f006 f9a4 	bl	800ade4 <HAL_TIM_Base_Init>
 8004a9c:	4603      	mov	r3, r0
 8004a9e:	2b00      	cmp	r3, #0
 8004aa0:	d001      	beq.n	8004aa6 <MX_TIM3_Init+0x62>
  {
    Error_Handler();
 8004aa2:	f7ff fb49 	bl	8004138 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8004aa6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004aaa:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8004aac:	f107 0320 	add.w	r3, r7, #32
 8004ab0:	4619      	mov	r1, r3
 8004ab2:	481b      	ldr	r0, [pc, #108]	; (8004b20 <MX_TIM3_Init+0xdc>)
 8004ab4:	f007 fa72 	bl	800bf9c <HAL_TIM_ConfigClockSource>
 8004ab8:	4603      	mov	r3, r0
 8004aba:	2b00      	cmp	r3, #0
 8004abc:	d001      	beq.n	8004ac2 <MX_TIM3_Init+0x7e>
  {
    Error_Handler();
 8004abe:	f7ff fb3b 	bl	8004138 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim3) != HAL_OK)
 8004ac2:	4817      	ldr	r0, [pc, #92]	; (8004b20 <MX_TIM3_Init+0xdc>)
 8004ac4:	f006 fd2a 	bl	800b51c <HAL_TIM_IC_Init>
 8004ac8:	4603      	mov	r3, r0
 8004aca:	2b00      	cmp	r3, #0
 8004acc:	d001      	beq.n	8004ad2 <MX_TIM3_Init+0x8e>
  {
    Error_Handler();
 8004ace:	f7ff fb33 	bl	8004138 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004ad2:	2300      	movs	r3, #0
 8004ad4:	617b      	str	r3, [r7, #20]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004ad6:	2300      	movs	r3, #0
 8004ad8:	61fb      	str	r3, [r7, #28]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8004ada:	f107 0314 	add.w	r3, r7, #20
 8004ade:	4619      	mov	r1, r3
 8004ae0:	480f      	ldr	r0, [pc, #60]	; (8004b20 <MX_TIM3_Init+0xdc>)
 8004ae2:	f008 f8cf 	bl	800cc84 <HAL_TIMEx_MasterConfigSynchronization>
 8004ae6:	4603      	mov	r3, r0
 8004ae8:	2b00      	cmp	r3, #0
 8004aea:	d001      	beq.n	8004af0 <MX_TIM3_Init+0xac>
  {
    Error_Handler();
 8004aec:	f7ff fb24 	bl	8004138 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 8004af0:	2300      	movs	r3, #0
 8004af2:	607b      	str	r3, [r7, #4]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8004af4:	2301      	movs	r3, #1
 8004af6:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8004af8:	2300      	movs	r3, #0
 8004afa:	60fb      	str	r3, [r7, #12]
  sConfigIC.ICFilter = 0;
 8004afc:	2300      	movs	r3, #0
 8004afe:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 8004b00:	1d3b      	adds	r3, r7, #4
 8004b02:	2200      	movs	r2, #0
 8004b04:	4619      	mov	r1, r3
 8004b06:	4806      	ldr	r0, [pc, #24]	; (8004b20 <MX_TIM3_Init+0xdc>)
 8004b08:	f007 f897 	bl	800bc3a <HAL_TIM_IC_ConfigChannel>
 8004b0c:	4603      	mov	r3, r0
 8004b0e:	2b00      	cmp	r3, #0
 8004b10:	d001      	beq.n	8004b16 <MX_TIM3_Init+0xd2>
  {
    Error_Handler();
 8004b12:	f7ff fb11 	bl	8004138 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8004b16:	bf00      	nop
 8004b18:	3730      	adds	r7, #48	; 0x30
 8004b1a:	46bd      	mov	sp, r7
 8004b1c:	bd80      	pop	{r7, pc}
 8004b1e:	bf00      	nop
 8004b20:	24000860 	.word	0x24000860
 8004b24:	40000400 	.word	0x40000400

08004b28 <MX_TIM4_Init>:
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 8004b28:	b580      	push	{r7, lr}
 8004b2a:	b08c      	sub	sp, #48	; 0x30
 8004b2c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004b2e:	f107 0320 	add.w	r3, r7, #32
 8004b32:	2200      	movs	r2, #0
 8004b34:	601a      	str	r2, [r3, #0]
 8004b36:	605a      	str	r2, [r3, #4]
 8004b38:	609a      	str	r2, [r3, #8]
 8004b3a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004b3c:	f107 0314 	add.w	r3, r7, #20
 8004b40:	2200      	movs	r2, #0
 8004b42:	601a      	str	r2, [r3, #0]
 8004b44:	605a      	str	r2, [r3, #4]
 8004b46:	609a      	str	r2, [r3, #8]
  TIM_IC_InitTypeDef sConfigIC = {0};
 8004b48:	1d3b      	adds	r3, r7, #4
 8004b4a:	2200      	movs	r2, #0
 8004b4c:	601a      	str	r2, [r3, #0]
 8004b4e:	605a      	str	r2, [r3, #4]
 8004b50:	609a      	str	r2, [r3, #8]
 8004b52:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8004b54:	4b2b      	ldr	r3, [pc, #172]	; (8004c04 <MX_TIM4_Init+0xdc>)
 8004b56:	4a2c      	ldr	r2, [pc, #176]	; (8004c08 <MX_TIM4_Init+0xe0>)
 8004b58:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8004b5a:	4b2a      	ldr	r3, [pc, #168]	; (8004c04 <MX_TIM4_Init+0xdc>)
 8004b5c:	2200      	movs	r2, #0
 8004b5e:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004b60:	4b28      	ldr	r3, [pc, #160]	; (8004c04 <MX_TIM4_Init+0xdc>)
 8004b62:	2200      	movs	r2, #0
 8004b64:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 8004b66:	4b27      	ldr	r3, [pc, #156]	; (8004c04 <MX_TIM4_Init+0xdc>)
 8004b68:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004b6c:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004b6e:	4b25      	ldr	r3, [pc, #148]	; (8004c04 <MX_TIM4_Init+0xdc>)
 8004b70:	2200      	movs	r2, #0
 8004b72:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004b74:	4b23      	ldr	r3, [pc, #140]	; (8004c04 <MX_TIM4_Init+0xdc>)
 8004b76:	2200      	movs	r2, #0
 8004b78:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8004b7a:	4822      	ldr	r0, [pc, #136]	; (8004c04 <MX_TIM4_Init+0xdc>)
 8004b7c:	f006 f932 	bl	800ade4 <HAL_TIM_Base_Init>
 8004b80:	4603      	mov	r3, r0
 8004b82:	2b00      	cmp	r3, #0
 8004b84:	d001      	beq.n	8004b8a <MX_TIM4_Init+0x62>
  {
    Error_Handler();
 8004b86:	f7ff fad7 	bl	8004138 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8004b8a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004b8e:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8004b90:	f107 0320 	add.w	r3, r7, #32
 8004b94:	4619      	mov	r1, r3
 8004b96:	481b      	ldr	r0, [pc, #108]	; (8004c04 <MX_TIM4_Init+0xdc>)
 8004b98:	f007 fa00 	bl	800bf9c <HAL_TIM_ConfigClockSource>
 8004b9c:	4603      	mov	r3, r0
 8004b9e:	2b00      	cmp	r3, #0
 8004ba0:	d001      	beq.n	8004ba6 <MX_TIM4_Init+0x7e>
  {
    Error_Handler();
 8004ba2:	f7ff fac9 	bl	8004138 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim4) != HAL_OK)
 8004ba6:	4817      	ldr	r0, [pc, #92]	; (8004c04 <MX_TIM4_Init+0xdc>)
 8004ba8:	f006 fcb8 	bl	800b51c <HAL_TIM_IC_Init>
 8004bac:	4603      	mov	r3, r0
 8004bae:	2b00      	cmp	r3, #0
 8004bb0:	d001      	beq.n	8004bb6 <MX_TIM4_Init+0x8e>
  {
    Error_Handler();
 8004bb2:	f7ff fac1 	bl	8004138 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004bb6:	2300      	movs	r3, #0
 8004bb8:	617b      	str	r3, [r7, #20]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004bba:	2300      	movs	r3, #0
 8004bbc:	61fb      	str	r3, [r7, #28]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8004bbe:	f107 0314 	add.w	r3, r7, #20
 8004bc2:	4619      	mov	r1, r3
 8004bc4:	480f      	ldr	r0, [pc, #60]	; (8004c04 <MX_TIM4_Init+0xdc>)
 8004bc6:	f008 f85d 	bl	800cc84 <HAL_TIMEx_MasterConfigSynchronization>
 8004bca:	4603      	mov	r3, r0
 8004bcc:	2b00      	cmp	r3, #0
 8004bce:	d001      	beq.n	8004bd4 <MX_TIM4_Init+0xac>
  {
    Error_Handler();
 8004bd0:	f7ff fab2 	bl	8004138 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 8004bd4:	2300      	movs	r3, #0
 8004bd6:	607b      	str	r3, [r7, #4]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8004bd8:	2301      	movs	r3, #1
 8004bda:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8004bdc:	2300      	movs	r3, #0
 8004bde:	60fb      	str	r3, [r7, #12]
  sConfigIC.ICFilter = 0;
 8004be0:	2300      	movs	r3, #0
 8004be2:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 8004be4:	1d3b      	adds	r3, r7, #4
 8004be6:	2200      	movs	r2, #0
 8004be8:	4619      	mov	r1, r3
 8004bea:	4806      	ldr	r0, [pc, #24]	; (8004c04 <MX_TIM4_Init+0xdc>)
 8004bec:	f007 f825 	bl	800bc3a <HAL_TIM_IC_ConfigChannel>
 8004bf0:	4603      	mov	r3, r0
 8004bf2:	2b00      	cmp	r3, #0
 8004bf4:	d001      	beq.n	8004bfa <MX_TIM4_Init+0xd2>
  {
    Error_Handler();
 8004bf6:	f7ff fa9f 	bl	8004138 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8004bfa:	bf00      	nop
 8004bfc:	3730      	adds	r7, #48	; 0x30
 8004bfe:	46bd      	mov	sp, r7
 8004c00:	bd80      	pop	{r7, pc}
 8004c02:	bf00      	nop
 8004c04:	240008ac 	.word	0x240008ac
 8004c08:	40000800 	.word	0x40000800

08004c0c <MX_TIM5_Init>:
/* TIM5 init function */
void MX_TIM5_Init(void)
{
 8004c0c:	b580      	push	{r7, lr}
 8004c0e:	b088      	sub	sp, #32
 8004c10:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004c12:	f107 0310 	add.w	r3, r7, #16
 8004c16:	2200      	movs	r2, #0
 8004c18:	601a      	str	r2, [r3, #0]
 8004c1a:	605a      	str	r2, [r3, #4]
 8004c1c:	609a      	str	r2, [r3, #8]
 8004c1e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004c20:	1d3b      	adds	r3, r7, #4
 8004c22:	2200      	movs	r2, #0
 8004c24:	601a      	str	r2, [r3, #0]
 8004c26:	605a      	str	r2, [r3, #4]
 8004c28:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8004c2a:	4b1e      	ldr	r3, [pc, #120]	; (8004ca4 <MX_TIM5_Init+0x98>)
 8004c2c:	4a1e      	ldr	r2, [pc, #120]	; (8004ca8 <MX_TIM5_Init+0x9c>)
 8004c2e:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 64000-1;
 8004c30:	4b1c      	ldr	r3, [pc, #112]	; (8004ca4 <MX_TIM5_Init+0x98>)
 8004c32:	f64f 12ff 	movw	r2, #63999	; 0xf9ff
 8004c36:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004c38:	4b1a      	ldr	r3, [pc, #104]	; (8004ca4 <MX_TIM5_Init+0x98>)
 8004c3a:	2200      	movs	r2, #0
 8004c3c:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 8004c3e:	4b19      	ldr	r3, [pc, #100]	; (8004ca4 <MX_TIM5_Init+0x98>)
 8004c40:	f04f 32ff 	mov.w	r2, #4294967295
 8004c44:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004c46:	4b17      	ldr	r3, [pc, #92]	; (8004ca4 <MX_TIM5_Init+0x98>)
 8004c48:	2200      	movs	r2, #0
 8004c4a:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004c4c:	4b15      	ldr	r3, [pc, #84]	; (8004ca4 <MX_TIM5_Init+0x98>)
 8004c4e:	2200      	movs	r2, #0
 8004c50:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8004c52:	4814      	ldr	r0, [pc, #80]	; (8004ca4 <MX_TIM5_Init+0x98>)
 8004c54:	f006 f8c6 	bl	800ade4 <HAL_TIM_Base_Init>
 8004c58:	4603      	mov	r3, r0
 8004c5a:	2b00      	cmp	r3, #0
 8004c5c:	d001      	beq.n	8004c62 <MX_TIM5_Init+0x56>
  {
    Error_Handler();
 8004c5e:	f7ff fa6b 	bl	8004138 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8004c62:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004c66:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8004c68:	f107 0310 	add.w	r3, r7, #16
 8004c6c:	4619      	mov	r1, r3
 8004c6e:	480d      	ldr	r0, [pc, #52]	; (8004ca4 <MX_TIM5_Init+0x98>)
 8004c70:	f007 f994 	bl	800bf9c <HAL_TIM_ConfigClockSource>
 8004c74:	4603      	mov	r3, r0
 8004c76:	2b00      	cmp	r3, #0
 8004c78:	d001      	beq.n	8004c7e <MX_TIM5_Init+0x72>
  {
    Error_Handler();
 8004c7a:	f7ff fa5d 	bl	8004138 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004c7e:	2300      	movs	r3, #0
 8004c80:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004c82:	2300      	movs	r3, #0
 8004c84:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8004c86:	1d3b      	adds	r3, r7, #4
 8004c88:	4619      	mov	r1, r3
 8004c8a:	4806      	ldr	r0, [pc, #24]	; (8004ca4 <MX_TIM5_Init+0x98>)
 8004c8c:	f007 fffa 	bl	800cc84 <HAL_TIMEx_MasterConfigSynchronization>
 8004c90:	4603      	mov	r3, r0
 8004c92:	2b00      	cmp	r3, #0
 8004c94:	d001      	beq.n	8004c9a <MX_TIM5_Init+0x8e>
  {
    Error_Handler();
 8004c96:	f7ff fa4f 	bl	8004138 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 8004c9a:	bf00      	nop
 8004c9c:	3720      	adds	r7, #32
 8004c9e:	46bd      	mov	sp, r7
 8004ca0:	bd80      	pop	{r7, pc}
 8004ca2:	bf00      	nop
 8004ca4:	240008f8 	.word	0x240008f8
 8004ca8:	40000c00 	.word	0x40000c00

08004cac <MX_TIM12_Init>:
/* TIM12 init function */
void MX_TIM12_Init(void)
{
 8004cac:	b580      	push	{r7, lr}
 8004cae:	b08c      	sub	sp, #48	; 0x30
 8004cb0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM12_Init 0 */

  /* USER CODE END TIM12_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004cb2:	f107 0320 	add.w	r3, r7, #32
 8004cb6:	2200      	movs	r2, #0
 8004cb8:	601a      	str	r2, [r3, #0]
 8004cba:	605a      	str	r2, [r3, #4]
 8004cbc:	609a      	str	r2, [r3, #8]
 8004cbe:	60da      	str	r2, [r3, #12]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8004cc0:	1d3b      	adds	r3, r7, #4
 8004cc2:	2200      	movs	r2, #0
 8004cc4:	601a      	str	r2, [r3, #0]
 8004cc6:	605a      	str	r2, [r3, #4]
 8004cc8:	609a      	str	r2, [r3, #8]
 8004cca:	60da      	str	r2, [r3, #12]
 8004ccc:	611a      	str	r2, [r3, #16]
 8004cce:	615a      	str	r2, [r3, #20]
 8004cd0:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM12_Init 1 */

  /* USER CODE END TIM12_Init 1 */
  htim12.Instance = TIM12;
 8004cd2:	4b26      	ldr	r3, [pc, #152]	; (8004d6c <MX_TIM12_Init+0xc0>)
 8004cd4:	4a26      	ldr	r2, [pc, #152]	; (8004d70 <MX_TIM12_Init+0xc4>)
 8004cd6:	601a      	str	r2, [r3, #0]
  htim12.Init.Prescaler = 500-1;
 8004cd8:	4b24      	ldr	r3, [pc, #144]	; (8004d6c <MX_TIM12_Init+0xc0>)
 8004cda:	f240 12f3 	movw	r2, #499	; 0x1f3
 8004cde:	605a      	str	r2, [r3, #4]
  htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004ce0:	4b22      	ldr	r3, [pc, #136]	; (8004d6c <MX_TIM12_Init+0xc0>)
 8004ce2:	2200      	movs	r2, #0
 8004ce4:	609a      	str	r2, [r3, #8]
  htim12.Init.Period = 40000;
 8004ce6:	4b21      	ldr	r3, [pc, #132]	; (8004d6c <MX_TIM12_Init+0xc0>)
 8004ce8:	f649 4240 	movw	r2, #40000	; 0x9c40
 8004cec:	60da      	str	r2, [r3, #12]
  htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004cee:	4b1f      	ldr	r3, [pc, #124]	; (8004d6c <MX_TIM12_Init+0xc0>)
 8004cf0:	2200      	movs	r2, #0
 8004cf2:	611a      	str	r2, [r3, #16]
  htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004cf4:	4b1d      	ldr	r3, [pc, #116]	; (8004d6c <MX_TIM12_Init+0xc0>)
 8004cf6:	2200      	movs	r2, #0
 8004cf8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim12) != HAL_OK)
 8004cfa:	481c      	ldr	r0, [pc, #112]	; (8004d6c <MX_TIM12_Init+0xc0>)
 8004cfc:	f006 f872 	bl	800ade4 <HAL_TIM_Base_Init>
 8004d00:	4603      	mov	r3, r0
 8004d02:	2b00      	cmp	r3, #0
 8004d04:	d001      	beq.n	8004d0a <MX_TIM12_Init+0x5e>
  {
    Error_Handler();
 8004d06:	f7ff fa17 	bl	8004138 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8004d0a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004d0e:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim12, &sClockSourceConfig) != HAL_OK)
 8004d10:	f107 0320 	add.w	r3, r7, #32
 8004d14:	4619      	mov	r1, r3
 8004d16:	4815      	ldr	r0, [pc, #84]	; (8004d6c <MX_TIM12_Init+0xc0>)
 8004d18:	f007 f940 	bl	800bf9c <HAL_TIM_ConfigClockSource>
 8004d1c:	4603      	mov	r3, r0
 8004d1e:	2b00      	cmp	r3, #0
 8004d20:	d001      	beq.n	8004d26 <MX_TIM12_Init+0x7a>
  {
    Error_Handler();
 8004d22:	f7ff fa09 	bl	8004138 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 8004d26:	4811      	ldr	r0, [pc, #68]	; (8004d6c <MX_TIM12_Init+0xc0>)
 8004d28:	f006 f9f3 	bl	800b112 <HAL_TIM_PWM_Init>
 8004d2c:	4603      	mov	r3, r0
 8004d2e:	2b00      	cmp	r3, #0
 8004d30:	d001      	beq.n	8004d36 <MX_TIM12_Init+0x8a>
  {
    Error_Handler();
 8004d32:	f7ff fa01 	bl	8004138 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8004d36:	2360      	movs	r3, #96	; 0x60
 8004d38:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 20000;
 8004d3a:	f644 6320 	movw	r3, #20000	; 0x4e20
 8004d3e:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8004d40:	2300      	movs	r3, #0
 8004d42:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8004d44:	2300      	movs	r3, #0
 8004d46:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8004d48:	1d3b      	adds	r3, r7, #4
 8004d4a:	2200      	movs	r2, #0
 8004d4c:	4619      	mov	r1, r3
 8004d4e:	4807      	ldr	r0, [pc, #28]	; (8004d6c <MX_TIM12_Init+0xc0>)
 8004d50:	f007 f810 	bl	800bd74 <HAL_TIM_PWM_ConfigChannel>
 8004d54:	4603      	mov	r3, r0
 8004d56:	2b00      	cmp	r3, #0
 8004d58:	d001      	beq.n	8004d5e <MX_TIM12_Init+0xb2>
  {
    Error_Handler();
 8004d5a:	f7ff f9ed 	bl	8004138 <Error_Handler>
  }
  /* USER CODE BEGIN TIM12_Init 2 */

  /* USER CODE END TIM12_Init 2 */
  HAL_TIM_MspPostInit(&htim12);
 8004d5e:	4803      	ldr	r0, [pc, #12]	; (8004d6c <MX_TIM12_Init+0xc0>)
 8004d60:	f000 fa44 	bl	80051ec <HAL_TIM_MspPostInit>

}
 8004d64:	bf00      	nop
 8004d66:	3730      	adds	r7, #48	; 0x30
 8004d68:	46bd      	mov	sp, r7
 8004d6a:	bd80      	pop	{r7, pc}
 8004d6c:	24000944 	.word	0x24000944
 8004d70:	40001800 	.word	0x40001800

08004d74 <MX_TIM13_Init>:
/* TIM13 init function */
void MX_TIM13_Init(void)
{
 8004d74:	b580      	push	{r7, lr}
 8004d76:	b088      	sub	sp, #32
 8004d78:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM13_Init 0 */

  /* USER CODE END TIM13_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 8004d7a:	1d3b      	adds	r3, r7, #4
 8004d7c:	2200      	movs	r2, #0
 8004d7e:	601a      	str	r2, [r3, #0]
 8004d80:	605a      	str	r2, [r3, #4]
 8004d82:	609a      	str	r2, [r3, #8]
 8004d84:	60da      	str	r2, [r3, #12]
 8004d86:	611a      	str	r2, [r3, #16]
 8004d88:	615a      	str	r2, [r3, #20]
 8004d8a:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM13_Init 1 */

  /* USER CODE END TIM13_Init 1 */
  htim13.Instance = TIM13;
 8004d8c:	4b1f      	ldr	r3, [pc, #124]	; (8004e0c <MX_TIM13_Init+0x98>)
 8004d8e:	4a20      	ldr	r2, [pc, #128]	; (8004e10 <MX_TIM13_Init+0x9c>)
 8004d90:	601a      	str	r2, [r3, #0]
  htim13.Init.Prescaler = 500-1;
 8004d92:	4b1e      	ldr	r3, [pc, #120]	; (8004e0c <MX_TIM13_Init+0x98>)
 8004d94:	f240 12f3 	movw	r2, #499	; 0x1f3
 8004d98:	605a      	str	r2, [r3, #4]
  htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004d9a:	4b1c      	ldr	r3, [pc, #112]	; (8004e0c <MX_TIM13_Init+0x98>)
 8004d9c:	2200      	movs	r2, #0
 8004d9e:	609a      	str	r2, [r3, #8]
  htim13.Init.Period = 40000;
 8004da0:	4b1a      	ldr	r3, [pc, #104]	; (8004e0c <MX_TIM13_Init+0x98>)
 8004da2:	f649 4240 	movw	r2, #40000	; 0x9c40
 8004da6:	60da      	str	r2, [r3, #12]
  htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004da8:	4b18      	ldr	r3, [pc, #96]	; (8004e0c <MX_TIM13_Init+0x98>)
 8004daa:	2200      	movs	r2, #0
 8004dac:	611a      	str	r2, [r3, #16]
  htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004dae:	4b17      	ldr	r3, [pc, #92]	; (8004e0c <MX_TIM13_Init+0x98>)
 8004db0:	2200      	movs	r2, #0
 8004db2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 8004db4:	4815      	ldr	r0, [pc, #84]	; (8004e0c <MX_TIM13_Init+0x98>)
 8004db6:	f006 f815 	bl	800ade4 <HAL_TIM_Base_Init>
 8004dba:	4603      	mov	r3, r0
 8004dbc:	2b00      	cmp	r3, #0
 8004dbe:	d001      	beq.n	8004dc4 <MX_TIM13_Init+0x50>
  {
    Error_Handler();
 8004dc0:	f7ff f9ba 	bl	8004138 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim13) != HAL_OK)
 8004dc4:	4811      	ldr	r0, [pc, #68]	; (8004e0c <MX_TIM13_Init+0x98>)
 8004dc6:	f006 f9a4 	bl	800b112 <HAL_TIM_PWM_Init>
 8004dca:	4603      	mov	r3, r0
 8004dcc:	2b00      	cmp	r3, #0
 8004dce:	d001      	beq.n	8004dd4 <MX_TIM13_Init+0x60>
  {
    Error_Handler();
 8004dd0:	f7ff f9b2 	bl	8004138 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8004dd4:	2360      	movs	r3, #96	; 0x60
 8004dd6:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 20000;
 8004dd8:	f644 6320 	movw	r3, #20000	; 0x4e20
 8004ddc:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8004dde:	2300      	movs	r3, #0
 8004de0:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8004de2:	2300      	movs	r3, #0
 8004de4:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8004de6:	1d3b      	adds	r3, r7, #4
 8004de8:	2200      	movs	r2, #0
 8004dea:	4619      	mov	r1, r3
 8004dec:	4807      	ldr	r0, [pc, #28]	; (8004e0c <MX_TIM13_Init+0x98>)
 8004dee:	f006 ffc1 	bl	800bd74 <HAL_TIM_PWM_ConfigChannel>
 8004df2:	4603      	mov	r3, r0
 8004df4:	2b00      	cmp	r3, #0
 8004df6:	d001      	beq.n	8004dfc <MX_TIM13_Init+0x88>
  {
    Error_Handler();
 8004df8:	f7ff f99e 	bl	8004138 <Error_Handler>
  }
  /* USER CODE BEGIN TIM13_Init 2 */

  /* USER CODE END TIM13_Init 2 */
  HAL_TIM_MspPostInit(&htim13);
 8004dfc:	4803      	ldr	r0, [pc, #12]	; (8004e0c <MX_TIM13_Init+0x98>)
 8004dfe:	f000 f9f5 	bl	80051ec <HAL_TIM_MspPostInit>

}
 8004e02:	bf00      	nop
 8004e04:	3720      	adds	r7, #32
 8004e06:	46bd      	mov	sp, r7
 8004e08:	bd80      	pop	{r7, pc}
 8004e0a:	bf00      	nop
 8004e0c:	24000990 	.word	0x24000990
 8004e10:	40001c00 	.word	0x40001c00

08004e14 <MX_TIM14_Init>:
/* TIM14 init function */
void MX_TIM14_Init(void)
{
 8004e14:	b580      	push	{r7, lr}
 8004e16:	b088      	sub	sp, #32
 8004e18:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM14_Init 0 */

  /* USER CODE END TIM14_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 8004e1a:	1d3b      	adds	r3, r7, #4
 8004e1c:	2200      	movs	r2, #0
 8004e1e:	601a      	str	r2, [r3, #0]
 8004e20:	605a      	str	r2, [r3, #4]
 8004e22:	609a      	str	r2, [r3, #8]
 8004e24:	60da      	str	r2, [r3, #12]
 8004e26:	611a      	str	r2, [r3, #16]
 8004e28:	615a      	str	r2, [r3, #20]
 8004e2a:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM14_Init 1 */

  /* USER CODE END TIM14_Init 1 */
  htim14.Instance = TIM14;
 8004e2c:	4b1f      	ldr	r3, [pc, #124]	; (8004eac <MX_TIM14_Init+0x98>)
 8004e2e:	4a20      	ldr	r2, [pc, #128]	; (8004eb0 <MX_TIM14_Init+0x9c>)
 8004e30:	601a      	str	r2, [r3, #0]
  htim14.Init.Prescaler = 500-1;
 8004e32:	4b1e      	ldr	r3, [pc, #120]	; (8004eac <MX_TIM14_Init+0x98>)
 8004e34:	f240 12f3 	movw	r2, #499	; 0x1f3
 8004e38:	605a      	str	r2, [r3, #4]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004e3a:	4b1c      	ldr	r3, [pc, #112]	; (8004eac <MX_TIM14_Init+0x98>)
 8004e3c:	2200      	movs	r2, #0
 8004e3e:	609a      	str	r2, [r3, #8]
  htim14.Init.Period = 40000;
 8004e40:	4b1a      	ldr	r3, [pc, #104]	; (8004eac <MX_TIM14_Init+0x98>)
 8004e42:	f649 4240 	movw	r2, #40000	; 0x9c40
 8004e46:	60da      	str	r2, [r3, #12]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004e48:	4b18      	ldr	r3, [pc, #96]	; (8004eac <MX_TIM14_Init+0x98>)
 8004e4a:	2200      	movs	r2, #0
 8004e4c:	611a      	str	r2, [r3, #16]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004e4e:	4b17      	ldr	r3, [pc, #92]	; (8004eac <MX_TIM14_Init+0x98>)
 8004e50:	2200      	movs	r2, #0
 8004e52:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8004e54:	4815      	ldr	r0, [pc, #84]	; (8004eac <MX_TIM14_Init+0x98>)
 8004e56:	f005 ffc5 	bl	800ade4 <HAL_TIM_Base_Init>
 8004e5a:	4603      	mov	r3, r0
 8004e5c:	2b00      	cmp	r3, #0
 8004e5e:	d001      	beq.n	8004e64 <MX_TIM14_Init+0x50>
  {
    Error_Handler();
 8004e60:	f7ff f96a 	bl	8004138 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 8004e64:	4811      	ldr	r0, [pc, #68]	; (8004eac <MX_TIM14_Init+0x98>)
 8004e66:	f006 f954 	bl	800b112 <HAL_TIM_PWM_Init>
 8004e6a:	4603      	mov	r3, r0
 8004e6c:	2b00      	cmp	r3, #0
 8004e6e:	d001      	beq.n	8004e74 <MX_TIM14_Init+0x60>
  {
    Error_Handler();
 8004e70:	f7ff f962 	bl	8004138 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8004e74:	2360      	movs	r3, #96	; 0x60
 8004e76:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 20000;
 8004e78:	f644 6320 	movw	r3, #20000	; 0x4e20
 8004e7c:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8004e7e:	2300      	movs	r3, #0
 8004e80:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8004e82:	2300      	movs	r3, #0
 8004e84:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8004e86:	1d3b      	adds	r3, r7, #4
 8004e88:	2200      	movs	r2, #0
 8004e8a:	4619      	mov	r1, r3
 8004e8c:	4807      	ldr	r0, [pc, #28]	; (8004eac <MX_TIM14_Init+0x98>)
 8004e8e:	f006 ff71 	bl	800bd74 <HAL_TIM_PWM_ConfigChannel>
 8004e92:	4603      	mov	r3, r0
 8004e94:	2b00      	cmp	r3, #0
 8004e96:	d001      	beq.n	8004e9c <MX_TIM14_Init+0x88>
  {
    Error_Handler();
 8004e98:	f7ff f94e 	bl	8004138 <Error_Handler>
  }
  /* USER CODE BEGIN TIM14_Init 2 */

  /* USER CODE END TIM14_Init 2 */
  HAL_TIM_MspPostInit(&htim14);
 8004e9c:	4803      	ldr	r0, [pc, #12]	; (8004eac <MX_TIM14_Init+0x98>)
 8004e9e:	f000 f9a5 	bl	80051ec <HAL_TIM_MspPostInit>

}
 8004ea2:	bf00      	nop
 8004ea4:	3720      	adds	r7, #32
 8004ea6:	46bd      	mov	sp, r7
 8004ea8:	bd80      	pop	{r7, pc}
 8004eaa:	bf00      	nop
 8004eac:	240009dc 	.word	0x240009dc
 8004eb0:	40002000 	.word	0x40002000

08004eb4 <MX_TIM15_Init>:
/* TIM15 init function */
void MX_TIM15_Init(void)
{
 8004eb4:	b580      	push	{r7, lr}
 8004eb6:	b088      	sub	sp, #32
 8004eb8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM15_Init 0 */

  /* USER CODE END TIM15_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004eba:	f107 0310 	add.w	r3, r7, #16
 8004ebe:	2200      	movs	r2, #0
 8004ec0:	601a      	str	r2, [r3, #0]
 8004ec2:	605a      	str	r2, [r3, #4]
 8004ec4:	609a      	str	r2, [r3, #8]
 8004ec6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004ec8:	1d3b      	adds	r3, r7, #4
 8004eca:	2200      	movs	r2, #0
 8004ecc:	601a      	str	r2, [r3, #0]
 8004ece:	605a      	str	r2, [r3, #4]
 8004ed0:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM15_Init 1 */

  /* USER CODE END TIM15_Init 1 */
  htim15.Instance = TIM15;
 8004ed2:	4b1f      	ldr	r3, [pc, #124]	; (8004f50 <MX_TIM15_Init+0x9c>)
 8004ed4:	4a1f      	ldr	r2, [pc, #124]	; (8004f54 <MX_TIM15_Init+0xa0>)
 8004ed6:	601a      	str	r2, [r3, #0]
  htim15.Init.Prescaler = 1;
 8004ed8:	4b1d      	ldr	r3, [pc, #116]	; (8004f50 <MX_TIM15_Init+0x9c>)
 8004eda:	2201      	movs	r2, #1
 8004edc:	605a      	str	r2, [r3, #4]
  htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004ede:	4b1c      	ldr	r3, [pc, #112]	; (8004f50 <MX_TIM15_Init+0x9c>)
 8004ee0:	2200      	movs	r2, #0
 8004ee2:	609a      	str	r2, [r3, #8]
  htim15.Init.Period = 64000;
 8004ee4:	4b1a      	ldr	r3, [pc, #104]	; (8004f50 <MX_TIM15_Init+0x9c>)
 8004ee6:	f44f 427a 	mov.w	r2, #64000	; 0xfa00
 8004eea:	60da      	str	r2, [r3, #12]
  htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004eec:	4b18      	ldr	r3, [pc, #96]	; (8004f50 <MX_TIM15_Init+0x9c>)
 8004eee:	2200      	movs	r2, #0
 8004ef0:	611a      	str	r2, [r3, #16]
  htim15.Init.RepetitionCounter = 0;
 8004ef2:	4b17      	ldr	r3, [pc, #92]	; (8004f50 <MX_TIM15_Init+0x9c>)
 8004ef4:	2200      	movs	r2, #0
 8004ef6:	615a      	str	r2, [r3, #20]
  htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004ef8:	4b15      	ldr	r3, [pc, #84]	; (8004f50 <MX_TIM15_Init+0x9c>)
 8004efa:	2200      	movs	r2, #0
 8004efc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 8004efe:	4814      	ldr	r0, [pc, #80]	; (8004f50 <MX_TIM15_Init+0x9c>)
 8004f00:	f005 ff70 	bl	800ade4 <HAL_TIM_Base_Init>
 8004f04:	4603      	mov	r3, r0
 8004f06:	2b00      	cmp	r3, #0
 8004f08:	d001      	beq.n	8004f0e <MX_TIM15_Init+0x5a>
  {
    Error_Handler();
 8004f0a:	f7ff f915 	bl	8004138 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8004f0e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004f12:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 8004f14:	f107 0310 	add.w	r3, r7, #16
 8004f18:	4619      	mov	r1, r3
 8004f1a:	480d      	ldr	r0, [pc, #52]	; (8004f50 <MX_TIM15_Init+0x9c>)
 8004f1c:	f007 f83e 	bl	800bf9c <HAL_TIM_ConfigClockSource>
 8004f20:	4603      	mov	r3, r0
 8004f22:	2b00      	cmp	r3, #0
 8004f24:	d001      	beq.n	8004f2a <MX_TIM15_Init+0x76>
  {
    Error_Handler();
 8004f26:	f7ff f907 	bl	8004138 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004f2a:	2300      	movs	r3, #0
 8004f2c:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004f2e:	2300      	movs	r3, #0
 8004f30:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 8004f32:	1d3b      	adds	r3, r7, #4
 8004f34:	4619      	mov	r1, r3
 8004f36:	4806      	ldr	r0, [pc, #24]	; (8004f50 <MX_TIM15_Init+0x9c>)
 8004f38:	f007 fea4 	bl	800cc84 <HAL_TIMEx_MasterConfigSynchronization>
 8004f3c:	4603      	mov	r3, r0
 8004f3e:	2b00      	cmp	r3, #0
 8004f40:	d001      	beq.n	8004f46 <MX_TIM15_Init+0x92>
  {
    Error_Handler();
 8004f42:	f7ff f8f9 	bl	8004138 <Error_Handler>
  }
  /* USER CODE BEGIN TIM15_Init 2 */

  /* USER CODE END TIM15_Init 2 */

}
 8004f46:	bf00      	nop
 8004f48:	3720      	adds	r7, #32
 8004f4a:	46bd      	mov	sp, r7
 8004f4c:	bd80      	pop	{r7, pc}
 8004f4e:	bf00      	nop
 8004f50:	24000a28 	.word	0x24000a28
 8004f54:	40014000 	.word	0x40014000

08004f58 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8004f58:	b580      	push	{r7, lr}
 8004f5a:	b092      	sub	sp, #72	; 0x48
 8004f5c:	af00      	add	r7, sp, #0
 8004f5e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004f60:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8004f64:	2200      	movs	r2, #0
 8004f66:	601a      	str	r2, [r3, #0]
 8004f68:	605a      	str	r2, [r3, #4]
 8004f6a:	609a      	str	r2, [r3, #8]
 8004f6c:	60da      	str	r2, [r3, #12]
 8004f6e:	611a      	str	r2, [r3, #16]
  if(tim_baseHandle->Instance==TIM2)
 8004f70:	687b      	ldr	r3, [r7, #4]
 8004f72:	681b      	ldr	r3, [r3, #0]
 8004f74:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004f78:	d136      	bne.n	8004fe8 <HAL_TIM_Base_MspInit+0x90>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8004f7a:	4b92      	ldr	r3, [pc, #584]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8004f7c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004f80:	4a90      	ldr	r2, [pc, #576]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8004f82:	f043 0301 	orr.w	r3, r3, #1
 8004f86:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8004f8a:	4b8e      	ldr	r3, [pc, #568]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8004f8c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004f90:	f003 0301 	and.w	r3, r3, #1
 8004f94:	633b      	str	r3, [r7, #48]	; 0x30
 8004f96:	6b3b      	ldr	r3, [r7, #48]	; 0x30

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004f98:	4b8a      	ldr	r3, [pc, #552]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8004f9a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004f9e:	4a89      	ldr	r2, [pc, #548]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8004fa0:	f043 0301 	orr.w	r3, r3, #1
 8004fa4:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8004fa8:	4b86      	ldr	r3, [pc, #536]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8004faa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004fae:	f003 0301 	and.w	r3, r3, #1
 8004fb2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004fb4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    /**TIM2 GPIO Configuration
    PA5     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = E_CountPap1_Pin;
 8004fb6:	2320      	movs	r3, #32
 8004fb8:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004fba:	2302      	movs	r3, #2
 8004fbc:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8004fbe:	2302      	movs	r3, #2
 8004fc0:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004fc2:	2300      	movs	r3, #0
 8004fc4:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8004fc6:	2301      	movs	r3, #1
 8004fc8:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(E_CountPap1_GPIO_Port, &GPIO_InitStruct);
 8004fca:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8004fce:	4619      	mov	r1, r3
 8004fd0:	487d      	ldr	r0, [pc, #500]	; (80051c8 <HAL_TIM_Base_MspInit+0x270>)
 8004fd2:	f003 f9af 	bl	8008334 <HAL_GPIO_Init>

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 1, 0);
 8004fd6:	2200      	movs	r2, #0
 8004fd8:	2101      	movs	r1, #1
 8004fda:	201c      	movs	r0, #28
 8004fdc:	f002 fc03 	bl	80077e6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8004fe0:	201c      	movs	r0, #28
 8004fe2:	f002 fc1a 	bl	800781a <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(TIM15_IRQn);
  /* USER CODE BEGIN TIM15_MspInit 1 */

  /* USER CODE END TIM15_MspInit 1 */
  }
}
 8004fe6:	e0e8      	b.n	80051ba <HAL_TIM_Base_MspInit+0x262>
  else if(tim_baseHandle->Instance==TIM3)
 8004fe8:	687b      	ldr	r3, [r7, #4]
 8004fea:	681b      	ldr	r3, [r3, #0]
 8004fec:	4a77      	ldr	r2, [pc, #476]	; (80051cc <HAL_TIM_Base_MspInit+0x274>)
 8004fee:	4293      	cmp	r3, r2
 8004ff0:	d136      	bne.n	8005060 <HAL_TIM_Base_MspInit+0x108>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8004ff2:	4b74      	ldr	r3, [pc, #464]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8004ff4:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004ff8:	4a72      	ldr	r2, [pc, #456]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8004ffa:	f043 0302 	orr.w	r3, r3, #2
 8004ffe:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8005002:	4b70      	ldr	r3, [pc, #448]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8005004:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8005008:	f003 0302 	and.w	r3, r3, #2
 800500c:	62bb      	str	r3, [r7, #40]	; 0x28
 800500e:	6abb      	ldr	r3, [r7, #40]	; 0x28
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8005010:	4b6c      	ldr	r3, [pc, #432]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8005012:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8005016:	4a6b      	ldr	r2, [pc, #428]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8005018:	f043 0301 	orr.w	r3, r3, #1
 800501c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8005020:	4b68      	ldr	r3, [pc, #416]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8005022:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8005026:	f003 0301 	and.w	r3, r3, #1
 800502a:	627b      	str	r3, [r7, #36]	; 0x24
 800502c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Pin = E_CountPaP2_Pin;
 800502e:	2340      	movs	r3, #64	; 0x40
 8005030:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8005032:	2302      	movs	r3, #2
 8005034:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8005036:	2302      	movs	r3, #2
 8005038:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800503a:	2300      	movs	r3, #0
 800503c:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 800503e:	2302      	movs	r3, #2
 8005040:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(E_CountPaP2_GPIO_Port, &GPIO_InitStruct);
 8005042:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8005046:	4619      	mov	r1, r3
 8005048:	485f      	ldr	r0, [pc, #380]	; (80051c8 <HAL_TIM_Base_MspInit+0x270>)
 800504a:	f003 f973 	bl	8008334 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(TIM3_IRQn, 1, 0);
 800504e:	2200      	movs	r2, #0
 8005050:	2101      	movs	r1, #1
 8005052:	201d      	movs	r0, #29
 8005054:	f002 fbc7 	bl	80077e6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8005058:	201d      	movs	r0, #29
 800505a:	f002 fbde 	bl	800781a <HAL_NVIC_EnableIRQ>
}
 800505e:	e0ac      	b.n	80051ba <HAL_TIM_Base_MspInit+0x262>
  else if(tim_baseHandle->Instance==TIM4)
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	4a5a      	ldr	r2, [pc, #360]	; (80051d0 <HAL_TIM_Base_MspInit+0x278>)
 8005066:	4293      	cmp	r3, r2
 8005068:	d137      	bne.n	80050da <HAL_TIM_Base_MspInit+0x182>
    __HAL_RCC_TIM4_CLK_ENABLE();
 800506a:	4b56      	ldr	r3, [pc, #344]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 800506c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8005070:	4a54      	ldr	r2, [pc, #336]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8005072:	f043 0304 	orr.w	r3, r3, #4
 8005076:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 800507a:	4b52      	ldr	r3, [pc, #328]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 800507c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8005080:	f003 0304 	and.w	r3, r3, #4
 8005084:	623b      	str	r3, [r7, #32]
 8005086:	6a3b      	ldr	r3, [r7, #32]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8005088:	4b4e      	ldr	r3, [pc, #312]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 800508a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800508e:	4a4d      	ldr	r2, [pc, #308]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8005090:	f043 0308 	orr.w	r3, r3, #8
 8005094:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8005098:	4b4a      	ldr	r3, [pc, #296]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 800509a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800509e:	f003 0308 	and.w	r3, r3, #8
 80050a2:	61fb      	str	r3, [r7, #28]
 80050a4:	69fb      	ldr	r3, [r7, #28]
    GPIO_InitStruct.Pin = E_CountPaP3_Pin;
 80050a6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80050aa:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80050ac:	2302      	movs	r3, #2
 80050ae:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80050b0:	2302      	movs	r3, #2
 80050b2:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80050b4:	2300      	movs	r3, #0
 80050b6:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 80050b8:	2302      	movs	r3, #2
 80050ba:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(E_CountPaP3_GPIO_Port, &GPIO_InitStruct);
 80050bc:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80050c0:	4619      	mov	r1, r3
 80050c2:	4844      	ldr	r0, [pc, #272]	; (80051d4 <HAL_TIM_Base_MspInit+0x27c>)
 80050c4:	f003 f936 	bl	8008334 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(TIM4_IRQn, 1, 0);
 80050c8:	2200      	movs	r2, #0
 80050ca:	2101      	movs	r1, #1
 80050cc:	201e      	movs	r0, #30
 80050ce:	f002 fb8a 	bl	80077e6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 80050d2:	201e      	movs	r0, #30
 80050d4:	f002 fba1 	bl	800781a <HAL_NVIC_EnableIRQ>
}
 80050d8:	e06f      	b.n	80051ba <HAL_TIM_Base_MspInit+0x262>
  else if(tim_baseHandle->Instance==TIM5)
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	681b      	ldr	r3, [r3, #0]
 80050de:	4a3e      	ldr	r2, [pc, #248]	; (80051d8 <HAL_TIM_Base_MspInit+0x280>)
 80050e0:	4293      	cmp	r3, r2
 80050e2:	d10f      	bne.n	8005104 <HAL_TIM_Base_MspInit+0x1ac>
    __HAL_RCC_TIM5_CLK_ENABLE();
 80050e4:	4b37      	ldr	r3, [pc, #220]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 80050e6:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80050ea:	4a36      	ldr	r2, [pc, #216]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 80050ec:	f043 0308 	orr.w	r3, r3, #8
 80050f0:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 80050f4:	4b33      	ldr	r3, [pc, #204]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 80050f6:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80050fa:	f003 0308 	and.w	r3, r3, #8
 80050fe:	61bb      	str	r3, [r7, #24]
 8005100:	69bb      	ldr	r3, [r7, #24]
}
 8005102:	e05a      	b.n	80051ba <HAL_TIM_Base_MspInit+0x262>
  else if(tim_baseHandle->Instance==TIM12)
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	4a34      	ldr	r2, [pc, #208]	; (80051dc <HAL_TIM_Base_MspInit+0x284>)
 800510a:	4293      	cmp	r3, r2
 800510c:	d10f      	bne.n	800512e <HAL_TIM_Base_MspInit+0x1d6>
    __HAL_RCC_TIM12_CLK_ENABLE();
 800510e:	4b2d      	ldr	r3, [pc, #180]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8005110:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8005114:	4a2b      	ldr	r2, [pc, #172]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8005116:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800511a:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 800511e:	4b29      	ldr	r3, [pc, #164]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8005120:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8005124:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005128:	617b      	str	r3, [r7, #20]
 800512a:	697b      	ldr	r3, [r7, #20]
}
 800512c:	e045      	b.n	80051ba <HAL_TIM_Base_MspInit+0x262>
  else if(tim_baseHandle->Instance==TIM13)
 800512e:	687b      	ldr	r3, [r7, #4]
 8005130:	681b      	ldr	r3, [r3, #0]
 8005132:	4a2b      	ldr	r2, [pc, #172]	; (80051e0 <HAL_TIM_Base_MspInit+0x288>)
 8005134:	4293      	cmp	r3, r2
 8005136:	d10f      	bne.n	8005158 <HAL_TIM_Base_MspInit+0x200>
    __HAL_RCC_TIM13_CLK_ENABLE();
 8005138:	4b22      	ldr	r3, [pc, #136]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 800513a:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 800513e:	4a21      	ldr	r2, [pc, #132]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8005140:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005144:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8005148:	4b1e      	ldr	r3, [pc, #120]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 800514a:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 800514e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005152:	613b      	str	r3, [r7, #16]
 8005154:	693b      	ldr	r3, [r7, #16]
}
 8005156:	e030      	b.n	80051ba <HAL_TIM_Base_MspInit+0x262>
  else if(tim_baseHandle->Instance==TIM14)
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	681b      	ldr	r3, [r3, #0]
 800515c:	4a21      	ldr	r2, [pc, #132]	; (80051e4 <HAL_TIM_Base_MspInit+0x28c>)
 800515e:	4293      	cmp	r3, r2
 8005160:	d10f      	bne.n	8005182 <HAL_TIM_Base_MspInit+0x22a>
    __HAL_RCC_TIM14_CLK_ENABLE();
 8005162:	4b18      	ldr	r3, [pc, #96]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8005164:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8005168:	4a16      	ldr	r2, [pc, #88]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 800516a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800516e:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8005172:	4b14      	ldr	r3, [pc, #80]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8005174:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8005178:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800517c:	60fb      	str	r3, [r7, #12]
 800517e:	68fb      	ldr	r3, [r7, #12]
}
 8005180:	e01b      	b.n	80051ba <HAL_TIM_Base_MspInit+0x262>
  else if(tim_baseHandle->Instance==TIM15)
 8005182:	687b      	ldr	r3, [r7, #4]
 8005184:	681b      	ldr	r3, [r3, #0]
 8005186:	4a18      	ldr	r2, [pc, #96]	; (80051e8 <HAL_TIM_Base_MspInit+0x290>)
 8005188:	4293      	cmp	r3, r2
 800518a:	d116      	bne.n	80051ba <HAL_TIM_Base_MspInit+0x262>
    __HAL_RCC_TIM15_CLK_ENABLE();
 800518c:	4b0d      	ldr	r3, [pc, #52]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 800518e:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8005192:	4a0c      	ldr	r2, [pc, #48]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 8005194:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005198:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 800519c:	4b09      	ldr	r3, [pc, #36]	; (80051c4 <HAL_TIM_Base_MspInit+0x26c>)
 800519e:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 80051a2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80051a6:	60bb      	str	r3, [r7, #8]
 80051a8:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM15_IRQn, 1, 0);
 80051aa:	2200      	movs	r2, #0
 80051ac:	2101      	movs	r1, #1
 80051ae:	2074      	movs	r0, #116	; 0x74
 80051b0:	f002 fb19 	bl	80077e6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM15_IRQn);
 80051b4:	2074      	movs	r0, #116	; 0x74
 80051b6:	f002 fb30 	bl	800781a <HAL_NVIC_EnableIRQ>
}
 80051ba:	bf00      	nop
 80051bc:	3748      	adds	r7, #72	; 0x48
 80051be:	46bd      	mov	sp, r7
 80051c0:	bd80      	pop	{r7, pc}
 80051c2:	bf00      	nop
 80051c4:	58024400 	.word	0x58024400
 80051c8:	58020000 	.word	0x58020000
 80051cc:	40000400 	.word	0x40000400
 80051d0:	40000800 	.word	0x40000800
 80051d4:	58020c00 	.word	0x58020c00
 80051d8:	40000c00 	.word	0x40000c00
 80051dc:	40001800 	.word	0x40001800
 80051e0:	40001c00 	.word	0x40001c00
 80051e4:	40002000 	.word	0x40002000
 80051e8:	40014000 	.word	0x40014000

080051ec <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 80051ec:	b580      	push	{r7, lr}
 80051ee:	b08a      	sub	sp, #40	; 0x28
 80051f0:	af00      	add	r7, sp, #0
 80051f2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80051f4:	f107 0314 	add.w	r3, r7, #20
 80051f8:	2200      	movs	r2, #0
 80051fa:	601a      	str	r2, [r3, #0]
 80051fc:	605a      	str	r2, [r3, #4]
 80051fe:	609a      	str	r2, [r3, #8]
 8005200:	60da      	str	r2, [r3, #12]
 8005202:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM12)
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	681b      	ldr	r3, [r3, #0]
 8005208:	4a39      	ldr	r2, [pc, #228]	; (80052f0 <HAL_TIM_MspPostInit+0x104>)
 800520a:	4293      	cmp	r3, r2
 800520c:	d120      	bne.n	8005250 <HAL_TIM_MspPostInit+0x64>
  {
  /* USER CODE BEGIN TIM12_MspPostInit 0 */

  /* USER CODE END TIM12_MspPostInit 0 */
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800520e:	4b39      	ldr	r3, [pc, #228]	; (80052f4 <HAL_TIM_MspPostInit+0x108>)
 8005210:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8005214:	4a37      	ldr	r2, [pc, #220]	; (80052f4 <HAL_TIM_MspPostInit+0x108>)
 8005216:	f043 0302 	orr.w	r3, r3, #2
 800521a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800521e:	4b35      	ldr	r3, [pc, #212]	; (80052f4 <HAL_TIM_MspPostInit+0x108>)
 8005220:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8005224:	f003 0302 	and.w	r3, r3, #2
 8005228:	613b      	str	r3, [r7, #16]
 800522a:	693b      	ldr	r3, [r7, #16]
    /**TIM12 GPIO Configuration
    PB14     ------> TIM12_CH1
    */
    GPIO_InitStruct.Pin = S_PulsoPaP1_Pin;
 800522c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8005230:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8005232:	2302      	movs	r3, #2
 8005234:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8005236:	2302      	movs	r3, #2
 8005238:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800523a:	2300      	movs	r3, #0
 800523c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM12;
 800523e:	2302      	movs	r3, #2
 8005240:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(S_PulsoPaP1_GPIO_Port, &GPIO_InitStruct);
 8005242:	f107 0314 	add.w	r3, r7, #20
 8005246:	4619      	mov	r1, r3
 8005248:	482b      	ldr	r0, [pc, #172]	; (80052f8 <HAL_TIM_MspPostInit+0x10c>)
 800524a:	f003 f873 	bl	8008334 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 800524e:	e04a      	b.n	80052e6 <HAL_TIM_MspPostInit+0xfa>
  else if(timHandle->Instance==TIM13)
 8005250:	687b      	ldr	r3, [r7, #4]
 8005252:	681b      	ldr	r3, [r3, #0]
 8005254:	4a29      	ldr	r2, [pc, #164]	; (80052fc <HAL_TIM_MspPostInit+0x110>)
 8005256:	4293      	cmp	r3, r2
 8005258:	d120      	bne.n	800529c <HAL_TIM_MspPostInit+0xb0>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800525a:	4b26      	ldr	r3, [pc, #152]	; (80052f4 <HAL_TIM_MspPostInit+0x108>)
 800525c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8005260:	4a24      	ldr	r2, [pc, #144]	; (80052f4 <HAL_TIM_MspPostInit+0x108>)
 8005262:	f043 0320 	orr.w	r3, r3, #32
 8005266:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800526a:	4b22      	ldr	r3, [pc, #136]	; (80052f4 <HAL_TIM_MspPostInit+0x108>)
 800526c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8005270:	f003 0320 	and.w	r3, r3, #32
 8005274:	60fb      	str	r3, [r7, #12]
 8005276:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = S_PulsoPaP2_Pin;
 8005278:	f44f 7380 	mov.w	r3, #256	; 0x100
 800527c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800527e:	2302      	movs	r3, #2
 8005280:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8005282:	2302      	movs	r3, #2
 8005284:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005286:	2300      	movs	r3, #0
 8005288:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 800528a:	2309      	movs	r3, #9
 800528c:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(S_PulsoPaP2_GPIO_Port, &GPIO_InitStruct);
 800528e:	f107 0314 	add.w	r3, r7, #20
 8005292:	4619      	mov	r1, r3
 8005294:	481a      	ldr	r0, [pc, #104]	; (8005300 <HAL_TIM_MspPostInit+0x114>)
 8005296:	f003 f84d 	bl	8008334 <HAL_GPIO_Init>
}
 800529a:	e024      	b.n	80052e6 <HAL_TIM_MspPostInit+0xfa>
  else if(timHandle->Instance==TIM14)
 800529c:	687b      	ldr	r3, [r7, #4]
 800529e:	681b      	ldr	r3, [r3, #0]
 80052a0:	4a18      	ldr	r2, [pc, #96]	; (8005304 <HAL_TIM_MspPostInit+0x118>)
 80052a2:	4293      	cmp	r3, r2
 80052a4:	d11f      	bne.n	80052e6 <HAL_TIM_MspPostInit+0xfa>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80052a6:	4b13      	ldr	r3, [pc, #76]	; (80052f4 <HAL_TIM_MspPostInit+0x108>)
 80052a8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80052ac:	4a11      	ldr	r2, [pc, #68]	; (80052f4 <HAL_TIM_MspPostInit+0x108>)
 80052ae:	f043 0320 	orr.w	r3, r3, #32
 80052b2:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80052b6:	4b0f      	ldr	r3, [pc, #60]	; (80052f4 <HAL_TIM_MspPostInit+0x108>)
 80052b8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80052bc:	f003 0320 	and.w	r3, r3, #32
 80052c0:	60bb      	str	r3, [r7, #8]
 80052c2:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = S_PulsoPaP3_Pin;
 80052c4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80052c8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80052ca:	2302      	movs	r3, #2
 80052cc:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80052ce:	2302      	movs	r3, #2
 80052d0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80052d2:	2300      	movs	r3, #0
 80052d4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 80052d6:	2309      	movs	r3, #9
 80052d8:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(S_PulsoPaP3_GPIO_Port, &GPIO_InitStruct);
 80052da:	f107 0314 	add.w	r3, r7, #20
 80052de:	4619      	mov	r1, r3
 80052e0:	4807      	ldr	r0, [pc, #28]	; (8005300 <HAL_TIM_MspPostInit+0x114>)
 80052e2:	f003 f827 	bl	8008334 <HAL_GPIO_Init>
}
 80052e6:	bf00      	nop
 80052e8:	3728      	adds	r7, #40	; 0x28
 80052ea:	46bd      	mov	sp, r7
 80052ec:	bd80      	pop	{r7, pc}
 80052ee:	bf00      	nop
 80052f0:	40001800 	.word	0x40001800
 80052f4:	58024400 	.word	0x58024400
 80052f8:	58020400 	.word	0x58020400
 80052fc:	40001c00 	.word	0x40001c00
 8005300:	58021400 	.word	0x58021400
 8005304:	40002000 	.word	0x40002000

08005308 <get_Straj>:
float alimd;
float vlim;
float T,Ta,Td,Tv,Tj1,Tj2,Tj,delta;
float qi,qf;

void get_Straj(float t){
 8005308:	b580      	push	{r7, lr}
 800530a:	ed2d 8b06 	vpush	{d8-d10}
 800530e:	b082      	sub	sp, #8
 8005310:	af00      	add	r7, sp, #0
 8005312:	ed87 0a01 	vstr	s0, [r7, #4]

    if (qf < qi){
 8005316:	4bb6      	ldr	r3, [pc, #728]	; (80055f0 <get_Straj+0x2e8>)
 8005318:	ed93 7a00 	vldr	s14, [r3]
 800531c:	4bb5      	ldr	r3, [pc, #724]	; (80055f4 <get_Straj+0x2ec>)
 800531e:	edd3 7a00 	vldr	s15, [r3]
 8005322:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005326:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800532a:	f140 8081 	bpl.w	8005430 <get_Straj+0x128>

    flagInv = true;
 800532e:	4bb2      	ldr	r3, [pc, #712]	; (80055f8 <get_Straj+0x2f0>)
 8005330:	2201      	movs	r2, #1
 8005332:	701a      	strb	r2, [r3, #0]

    qi = -qi;
 8005334:	4baf      	ldr	r3, [pc, #700]	; (80055f4 <get_Straj+0x2ec>)
 8005336:	edd3 7a00 	vldr	s15, [r3]
 800533a:	eef1 7a67 	vneg.f32	s15, s15
 800533e:	4bad      	ldr	r3, [pc, #692]	; (80055f4 <get_Straj+0x2ec>)
 8005340:	edc3 7a00 	vstr	s15, [r3]
    qf = -qf;
 8005344:	4baa      	ldr	r3, [pc, #680]	; (80055f0 <get_Straj+0x2e8>)
 8005346:	edd3 7a00 	vldr	s15, [r3]
 800534a:	eef1 7a67 	vneg.f32	s15, s15
 800534e:	4ba8      	ldr	r3, [pc, #672]	; (80055f0 <get_Straj+0x2e8>)
 8005350:	edc3 7a00 	vstr	s15, [r3]
    vi = -vi;
 8005354:	4ba9      	ldr	r3, [pc, #676]	; (80055fc <get_Straj+0x2f4>)
 8005356:	edd3 7a00 	vldr	s15, [r3]
 800535a:	eef1 7a67 	vneg.f32	s15, s15
 800535e:	4ba7      	ldr	r3, [pc, #668]	; (80055fc <get_Straj+0x2f4>)
 8005360:	edc3 7a00 	vstr	s15, [r3]
    vf = -vf;
 8005364:	4ba6      	ldr	r3, [pc, #664]	; (8005600 <get_Straj+0x2f8>)
 8005366:	edd3 7a00 	vldr	s15, [r3]
 800536a:	eef1 7a67 	vneg.f32	s15, s15
 800536e:	4ba4      	ldr	r3, [pc, #656]	; (8005600 <get_Straj+0x2f8>)
 8005370:	edc3 7a00 	vstr	s15, [r3]

    vmax = -vmin;
 8005374:	4ba3      	ldr	r3, [pc, #652]	; (8005604 <get_Straj+0x2fc>)
 8005376:	edd3 7a00 	vldr	s15, [r3]
 800537a:	eef1 7a67 	vneg.f32	s15, s15
 800537e:	4ba2      	ldr	r3, [pc, #648]	; (8005608 <get_Straj+0x300>)
 8005380:	edc3 7a00 	vstr	s15, [r3]
    vmin = -vmax;
 8005384:	4ba0      	ldr	r3, [pc, #640]	; (8005608 <get_Straj+0x300>)
 8005386:	edd3 7a00 	vldr	s15, [r3]
 800538a:	eef1 7a67 	vneg.f32	s15, s15
 800538e:	4b9d      	ldr	r3, [pc, #628]	; (8005604 <get_Straj+0x2fc>)
 8005390:	edc3 7a00 	vstr	s15, [r3]
    amax = -amin;
 8005394:	4b9d      	ldr	r3, [pc, #628]	; (800560c <get_Straj+0x304>)
 8005396:	edd3 7a00 	vldr	s15, [r3]
 800539a:	eef1 7a67 	vneg.f32	s15, s15
 800539e:	4b9c      	ldr	r3, [pc, #624]	; (8005610 <get_Straj+0x308>)
 80053a0:	edc3 7a00 	vstr	s15, [r3]
    amin = -amax;
 80053a4:	4b9a      	ldr	r3, [pc, #616]	; (8005610 <get_Straj+0x308>)
 80053a6:	edd3 7a00 	vldr	s15, [r3]
 80053aa:	eef1 7a67 	vneg.f32	s15, s15
 80053ae:	4b97      	ldr	r3, [pc, #604]	; (800560c <get_Straj+0x304>)
 80053b0:	edc3 7a00 	vstr	s15, [r3]
    jmax = -jmin;
 80053b4:	4b97      	ldr	r3, [pc, #604]	; (8005614 <get_Straj+0x30c>)
 80053b6:	edd3 7a00 	vldr	s15, [r3]
 80053ba:	eef1 7a67 	vneg.f32	s15, s15
 80053be:	4b96      	ldr	r3, [pc, #600]	; (8005618 <get_Straj+0x310>)
 80053c0:	edc3 7a00 	vstr	s15, [r3]
    jmin = -jmax;
 80053c4:	4b94      	ldr	r3, [pc, #592]	; (8005618 <get_Straj+0x310>)
 80053c6:	edd3 7a00 	vldr	s15, [r3]
 80053ca:	eef1 7a67 	vneg.f32	s15, s15
 80053ce:	4b91      	ldr	r3, [pc, #580]	; (8005614 <get_Straj+0x30c>)
 80053d0:	edc3 7a00 	vstr	s15, [r3]

    alima = jmax*Tj1;
 80053d4:	4b90      	ldr	r3, [pc, #576]	; (8005618 <get_Straj+0x310>)
 80053d6:	ed93 7a00 	vldr	s14, [r3]
 80053da:	4b90      	ldr	r3, [pc, #576]	; (800561c <get_Straj+0x314>)
 80053dc:	edd3 7a00 	vldr	s15, [r3]
 80053e0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80053e4:	4b8e      	ldr	r3, [pc, #568]	; (8005620 <get_Straj+0x318>)
 80053e6:	edc3 7a00 	vstr	s15, [r3]
    alimd = -jmax*Tj2;
 80053ea:	4b8b      	ldr	r3, [pc, #556]	; (8005618 <get_Straj+0x310>)
 80053ec:	edd3 7a00 	vldr	s15, [r3]
 80053f0:	eeb1 7a67 	vneg.f32	s14, s15
 80053f4:	4b8b      	ldr	r3, [pc, #556]	; (8005624 <get_Straj+0x31c>)
 80053f6:	edd3 7a00 	vldr	s15, [r3]
 80053fa:	ee67 7a27 	vmul.f32	s15, s14, s15
 80053fe:	4b8a      	ldr	r3, [pc, #552]	; (8005628 <get_Straj+0x320>)
 8005400:	edc3 7a00 	vstr	s15, [r3]
    vlim = vi+(Ta-Tj1)*alima;
 8005404:	4b89      	ldr	r3, [pc, #548]	; (800562c <get_Straj+0x324>)
 8005406:	ed93 7a00 	vldr	s14, [r3]
 800540a:	4b84      	ldr	r3, [pc, #528]	; (800561c <get_Straj+0x314>)
 800540c:	edd3 7a00 	vldr	s15, [r3]
 8005410:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005414:	4b82      	ldr	r3, [pc, #520]	; (8005620 <get_Straj+0x318>)
 8005416:	edd3 7a00 	vldr	s15, [r3]
 800541a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800541e:	4b77      	ldr	r3, [pc, #476]	; (80055fc <get_Straj+0x2f4>)
 8005420:	edd3 7a00 	vldr	s15, [r3]
 8005424:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005428:	4b81      	ldr	r3, [pc, #516]	; (8005630 <get_Straj+0x328>)
 800542a:	edc3 7a00 	vstr	s15, [r3]
 800542e:	e044      	b.n	80054ba <get_Straj+0x1b2>

    }else{
        jmin = -jmax;
 8005430:	4b79      	ldr	r3, [pc, #484]	; (8005618 <get_Straj+0x310>)
 8005432:	edd3 7a00 	vldr	s15, [r3]
 8005436:	eef1 7a67 	vneg.f32	s15, s15
 800543a:	4b76      	ldr	r3, [pc, #472]	; (8005614 <get_Straj+0x30c>)
 800543c:	edc3 7a00 	vstr	s15, [r3]
        amin = -amax;
 8005440:	4b73      	ldr	r3, [pc, #460]	; (8005610 <get_Straj+0x308>)
 8005442:	edd3 7a00 	vldr	s15, [r3]
 8005446:	eef1 7a67 	vneg.f32	s15, s15
 800544a:	4b70      	ldr	r3, [pc, #448]	; (800560c <get_Straj+0x304>)
 800544c:	edc3 7a00 	vstr	s15, [r3]
        vmin = -vmax;
 8005450:	4b6d      	ldr	r3, [pc, #436]	; (8005608 <get_Straj+0x300>)
 8005452:	edd3 7a00 	vldr	s15, [r3]
 8005456:	eef1 7a67 	vneg.f32	s15, s15
 800545a:	4b6a      	ldr	r3, [pc, #424]	; (8005604 <get_Straj+0x2fc>)
 800545c:	edc3 7a00 	vstr	s15, [r3]

        alima = jmax*Tj1;
 8005460:	4b6d      	ldr	r3, [pc, #436]	; (8005618 <get_Straj+0x310>)
 8005462:	ed93 7a00 	vldr	s14, [r3]
 8005466:	4b6d      	ldr	r3, [pc, #436]	; (800561c <get_Straj+0x314>)
 8005468:	edd3 7a00 	vldr	s15, [r3]
 800546c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005470:	4b6b      	ldr	r3, [pc, #428]	; (8005620 <get_Straj+0x318>)
 8005472:	edc3 7a00 	vstr	s15, [r3]
        alimd = -jmax*Tj2;
 8005476:	4b68      	ldr	r3, [pc, #416]	; (8005618 <get_Straj+0x310>)
 8005478:	edd3 7a00 	vldr	s15, [r3]
 800547c:	eeb1 7a67 	vneg.f32	s14, s15
 8005480:	4b68      	ldr	r3, [pc, #416]	; (8005624 <get_Straj+0x31c>)
 8005482:	edd3 7a00 	vldr	s15, [r3]
 8005486:	ee67 7a27 	vmul.f32	s15, s14, s15
 800548a:	4b67      	ldr	r3, [pc, #412]	; (8005628 <get_Straj+0x320>)
 800548c:	edc3 7a00 	vstr	s15, [r3]
        vlim = vi+(Ta-Tj1)*alima;
 8005490:	4b66      	ldr	r3, [pc, #408]	; (800562c <get_Straj+0x324>)
 8005492:	ed93 7a00 	vldr	s14, [r3]
 8005496:	4b61      	ldr	r3, [pc, #388]	; (800561c <get_Straj+0x314>)
 8005498:	edd3 7a00 	vldr	s15, [r3]
 800549c:	ee37 7a67 	vsub.f32	s14, s14, s15
 80054a0:	4b5f      	ldr	r3, [pc, #380]	; (8005620 <get_Straj+0x318>)
 80054a2:	edd3 7a00 	vldr	s15, [r3]
 80054a6:	ee27 7a27 	vmul.f32	s14, s14, s15
 80054aa:	4b54      	ldr	r3, [pc, #336]	; (80055fc <get_Straj+0x2f4>)
 80054ac:	edd3 7a00 	vldr	s15, [r3]
 80054b0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80054b4:	4b5e      	ldr	r3, [pc, #376]	; (8005630 <get_Straj+0x328>)
 80054b6:	edc3 7a00 	vstr	s15, [r3]
    }


    //#Acceleration phase

    if (t>=0 && t<=Tj1){               //a) [0,Tj1]
 80054ba:	edd7 7a01 	vldr	s15, [r7, #4]
 80054be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80054c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054c6:	f2c0 80bd 	blt.w	8005644 <get_Straj+0x33c>
 80054ca:	4b54      	ldr	r3, [pc, #336]	; (800561c <get_Straj+0x314>)
 80054cc:	edd3 7a00 	vldr	s15, [r3]
 80054d0:	ed97 7a01 	vldr	s14, [r7, #4]
 80054d4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80054d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054dc:	f200 80b2 	bhi.w	8005644 <get_Straj+0x33c>
        //printf("tramo1\n");
        q = qi+vi*t+jmax*pow(t,3)/6;
 80054e0:	4b46      	ldr	r3, [pc, #280]	; (80055fc <get_Straj+0x2f4>)
 80054e2:	ed93 7a00 	vldr	s14, [r3]
 80054e6:	edd7 7a01 	vldr	s15, [r7, #4]
 80054ea:	ee27 7a27 	vmul.f32	s14, s14, s15
 80054ee:	4b41      	ldr	r3, [pc, #260]	; (80055f4 <get_Straj+0x2ec>)
 80054f0:	edd3 7a00 	vldr	s15, [r3]
 80054f4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80054f8:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 80054fc:	4b46      	ldr	r3, [pc, #280]	; (8005618 <get_Straj+0x310>)
 80054fe:	edd3 7a00 	vldr	s15, [r3]
 8005502:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8005506:	edd7 7a01 	vldr	s15, [r7, #4]
 800550a:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800550e:	eeb0 1b08 	vmov.f64	d1, #8	; 0x40400000  3.0
 8005512:	eeb0 0b47 	vmov.f64	d0, d7
 8005516:	f00c fe8b 	bl	8012230 <pow>
 800551a:	eeb0 7b40 	vmov.f64	d7, d0
 800551e:	ee29 6b07 	vmul.f64	d6, d9, d7
 8005522:	eeb1 5b08 	vmov.f64	d5, #24	; 0x40c00000  6.0
 8005526:	ee86 7b05 	vdiv.f64	d7, d6, d5
 800552a:	ee38 7b07 	vadd.f64	d7, d8, d7
 800552e:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005532:	4b40      	ldr	r3, [pc, #256]	; (8005634 <get_Straj+0x32c>)
 8005534:	edc3 7a00 	vstr	s15, [r3]
        qd = vi+jmax*pow(t,2)/2;
 8005538:	4b30      	ldr	r3, [pc, #192]	; (80055fc <get_Straj+0x2f4>)
 800553a:	edd3 7a00 	vldr	s15, [r3]
 800553e:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8005542:	4b35      	ldr	r3, [pc, #212]	; (8005618 <get_Straj+0x310>)
 8005544:	edd3 7a00 	vldr	s15, [r3]
 8005548:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 800554c:	edd7 7a01 	vldr	s15, [r7, #4]
 8005550:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005554:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005558:	eeb0 0b47 	vmov.f64	d0, d7
 800555c:	f00c fe68 	bl	8012230 <pow>
 8005560:	eeb0 7b40 	vmov.f64	d7, d0
 8005564:	ee29 6b07 	vmul.f64	d6, d9, d7
 8005568:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 800556c:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8005570:	ee38 7b07 	vadd.f64	d7, d8, d7
 8005574:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005578:	4b2f      	ldr	r3, [pc, #188]	; (8005638 <get_Straj+0x330>)
 800557a:	edc3 7a00 	vstr	s15, [r3]
        qdd = jmax*t;
 800557e:	4b26      	ldr	r3, [pc, #152]	; (8005618 <get_Straj+0x310>)
 8005580:	ed93 7a00 	vldr	s14, [r3]
 8005584:	edd7 7a01 	vldr	s15, [r7, #4]
 8005588:	ee67 7a27 	vmul.f32	s15, s14, s15
 800558c:	4b2b      	ldr	r3, [pc, #172]	; (800563c <get_Straj+0x334>)
 800558e:	edc3 7a00 	vstr	s15, [r3]
        qddd = jmax;
 8005592:	4b21      	ldr	r3, [pc, #132]	; (8005618 <get_Straj+0x310>)
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	4a2a      	ldr	r2, [pc, #168]	; (8005640 <get_Straj+0x338>)
 8005598:	6013      	str	r3, [r2, #0]
        if (flagInv){
 800559a:	4b17      	ldr	r3, [pc, #92]	; (80055f8 <get_Straj+0x2f0>)
 800559c:	781b      	ldrb	r3, [r3, #0]
 800559e:	2b00      	cmp	r3, #0
 80055a0:	f000 8545 	beq.w	800602e <get_Straj+0xd26>
            q=-q; qd=-qd; qdd=-qdd; qddd=-qddd;
 80055a4:	4b23      	ldr	r3, [pc, #140]	; (8005634 <get_Straj+0x32c>)
 80055a6:	edd3 7a00 	vldr	s15, [r3]
 80055aa:	eef1 7a67 	vneg.f32	s15, s15
 80055ae:	4b21      	ldr	r3, [pc, #132]	; (8005634 <get_Straj+0x32c>)
 80055b0:	edc3 7a00 	vstr	s15, [r3]
 80055b4:	4b20      	ldr	r3, [pc, #128]	; (8005638 <get_Straj+0x330>)
 80055b6:	edd3 7a00 	vldr	s15, [r3]
 80055ba:	eef1 7a67 	vneg.f32	s15, s15
 80055be:	4b1e      	ldr	r3, [pc, #120]	; (8005638 <get_Straj+0x330>)
 80055c0:	edc3 7a00 	vstr	s15, [r3]
 80055c4:	4b1d      	ldr	r3, [pc, #116]	; (800563c <get_Straj+0x334>)
 80055c6:	edd3 7a00 	vldr	s15, [r3]
 80055ca:	eef1 7a67 	vneg.f32	s15, s15
 80055ce:	4b1b      	ldr	r3, [pc, #108]	; (800563c <get_Straj+0x334>)
 80055d0:	edc3 7a00 	vstr	s15, [r3]
 80055d4:	4b1a      	ldr	r3, [pc, #104]	; (8005640 <get_Straj+0x338>)
 80055d6:	edd3 7a00 	vldr	s15, [r3]
 80055da:	eef1 7a67 	vneg.f32	s15, s15
 80055de:	4b18      	ldr	r3, [pc, #96]	; (8005640 <get_Straj+0x338>)
 80055e0:	edc3 7a00 	vstr	s15, [r3]
            flagInv = false;
 80055e4:	4b04      	ldr	r3, [pc, #16]	; (80055f8 <get_Straj+0x2f0>)
 80055e6:	2200      	movs	r2, #0
 80055e8:	701a      	strb	r2, [r3, #0]
        if (flagInv){
 80055ea:	f000 bd20 	b.w	800602e <get_Straj+0xd26>
 80055ee:	bf00      	nop
 80055f0:	24000aa8 	.word	0x24000aa8
 80055f4:	24000aa4 	.word	0x24000aa4
 80055f8:	24000a74 	.word	0x24000a74
 80055fc:	24000658 	.word	0x24000658
 8005600:	2400065c 	.word	0x2400065c
 8005604:	24000654 	.word	0x24000654
 8005608:	24000094 	.word	0x24000094
 800560c:	24000660 	.word	0x24000660
 8005610:	24000098 	.word	0x24000098
 8005614:	24000650 	.word	0x24000650
 8005618:	24000090 	.word	0x24000090
 800561c:	24000a94 	.word	0x24000a94
 8005620:	24000a78 	.word	0x24000a78
 8005624:	24000a98 	.word	0x24000a98
 8005628:	24000a7c 	.word	0x24000a7c
 800562c:	24000a88 	.word	0x24000a88
 8005630:	24000a80 	.word	0x24000a80
 8005634:	24000640 	.word	0x24000640
 8005638:	24000644 	.word	0x24000644
 800563c:	24000648 	.word	0x24000648
 8005640:	2400064c 	.word	0x2400064c
        }

    } else if (t>Tj1 && t<=Ta-Tj1){   //b) [Tj1,Ta-Tj1]
 8005644:	4bc1      	ldr	r3, [pc, #772]	; (800594c <get_Straj+0x644>)
 8005646:	edd3 7a00 	vldr	s15, [r3]
 800564a:	ed97 7a01 	vldr	s14, [r7, #4]
 800564e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005652:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005656:	f340 80af 	ble.w	80057b8 <get_Straj+0x4b0>
 800565a:	4bbd      	ldr	r3, [pc, #756]	; (8005950 <get_Straj+0x648>)
 800565c:	ed93 7a00 	vldr	s14, [r3]
 8005660:	4bba      	ldr	r3, [pc, #744]	; (800594c <get_Straj+0x644>)
 8005662:	edd3 7a00 	vldr	s15, [r3]
 8005666:	ee77 7a67 	vsub.f32	s15, s14, s15
 800566a:	ed97 7a01 	vldr	s14, [r7, #4]
 800566e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005672:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005676:	f200 809f 	bhi.w	80057b8 <get_Straj+0x4b0>
        //printf("tramo2\n");
        q = qi+vi*t+(alima/6)*(3*pow(t,2)-3*Tj1*t+pow(Tj1,2));
 800567a:	4bb6      	ldr	r3, [pc, #728]	; (8005954 <get_Straj+0x64c>)
 800567c:	ed93 7a00 	vldr	s14, [r3]
 8005680:	edd7 7a01 	vldr	s15, [r7, #4]
 8005684:	ee27 7a27 	vmul.f32	s14, s14, s15
 8005688:	4bb3      	ldr	r3, [pc, #716]	; (8005958 <get_Straj+0x650>)
 800568a:	edd3 7a00 	vldr	s15, [r3]
 800568e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005692:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8005696:	4bb1      	ldr	r3, [pc, #708]	; (800595c <get_Straj+0x654>)
 8005698:	ed93 7a00 	vldr	s14, [r3]
 800569c:	eef1 6a08 	vmov.f32	s13, #24	; 0x40c00000  6.0
 80056a0:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80056a4:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 80056a8:	edd7 7a01 	vldr	s15, [r7, #4]
 80056ac:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80056b0:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80056b4:	eeb0 0b47 	vmov.f64	d0, d7
 80056b8:	f00c fdba 	bl	8012230 <pow>
 80056bc:	eeb0 7b40 	vmov.f64	d7, d0
 80056c0:	eeb0 6b08 	vmov.f64	d6, #8	; 0x40400000  3.0
 80056c4:	ee27 6b06 	vmul.f64	d6, d7, d6
 80056c8:	4ba0      	ldr	r3, [pc, #640]	; (800594c <get_Straj+0x644>)
 80056ca:	edd3 7a00 	vldr	s15, [r3]
 80056ce:	eeb0 7a08 	vmov.f32	s14, #8	; 0x40400000  3.0
 80056d2:	ee27 7a87 	vmul.f32	s14, s15, s14
 80056d6:	edd7 7a01 	vldr	s15, [r7, #4]
 80056da:	ee67 7a27 	vmul.f32	s15, s14, s15
 80056de:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80056e2:	ee36 ab47 	vsub.f64	d10, d6, d7
 80056e6:	4b99      	ldr	r3, [pc, #612]	; (800594c <get_Straj+0x644>)
 80056e8:	edd3 7a00 	vldr	s15, [r3]
 80056ec:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80056f0:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80056f4:	eeb0 0b47 	vmov.f64	d0, d7
 80056f8:	f00c fd9a 	bl	8012230 <pow>
 80056fc:	eeb0 7b40 	vmov.f64	d7, d0
 8005700:	ee3a 7b07 	vadd.f64	d7, d10, d7
 8005704:	ee29 7b07 	vmul.f64	d7, d9, d7
 8005708:	ee38 7b07 	vadd.f64	d7, d8, d7
 800570c:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005710:	4b93      	ldr	r3, [pc, #588]	; (8005960 <get_Straj+0x658>)
 8005712:	edc3 7a00 	vstr	s15, [r3]
        qd = vi+amax*(t-Tj1/2);
 8005716:	4b8d      	ldr	r3, [pc, #564]	; (800594c <get_Straj+0x644>)
 8005718:	ed93 7a00 	vldr	s14, [r3]
 800571c:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8005720:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8005724:	ed97 7a01 	vldr	s14, [r7, #4]
 8005728:	ee37 7a67 	vsub.f32	s14, s14, s15
 800572c:	4b8d      	ldr	r3, [pc, #564]	; (8005964 <get_Straj+0x65c>)
 800572e:	edd3 7a00 	vldr	s15, [r3]
 8005732:	ee27 7a27 	vmul.f32	s14, s14, s15
 8005736:	4b87      	ldr	r3, [pc, #540]	; (8005954 <get_Straj+0x64c>)
 8005738:	edd3 7a00 	vldr	s15, [r3]
 800573c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005740:	4b89      	ldr	r3, [pc, #548]	; (8005968 <get_Straj+0x660>)
 8005742:	edc3 7a00 	vstr	s15, [r3]
        qdd = jmax*Tj1;
 8005746:	4b89      	ldr	r3, [pc, #548]	; (800596c <get_Straj+0x664>)
 8005748:	ed93 7a00 	vldr	s14, [r3]
 800574c:	4b7f      	ldr	r3, [pc, #508]	; (800594c <get_Straj+0x644>)
 800574e:	edd3 7a00 	vldr	s15, [r3]
 8005752:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005756:	4b86      	ldr	r3, [pc, #536]	; (8005970 <get_Straj+0x668>)
 8005758:	edc3 7a00 	vstr	s15, [r3]
        qddd = 0;
 800575c:	4b85      	ldr	r3, [pc, #532]	; (8005974 <get_Straj+0x66c>)
 800575e:	f04f 0200 	mov.w	r2, #0
 8005762:	601a      	str	r2, [r3, #0]

        if (flagInv){
 8005764:	4b84      	ldr	r3, [pc, #528]	; (8005978 <get_Straj+0x670>)
 8005766:	781b      	ldrb	r3, [r3, #0]
 8005768:	2b00      	cmp	r3, #0
 800576a:	f000 8460 	beq.w	800602e <get_Straj+0xd26>
            q=-q; qd=-qd; qdd=-qdd; qddd=-qddd;
 800576e:	4b7c      	ldr	r3, [pc, #496]	; (8005960 <get_Straj+0x658>)
 8005770:	edd3 7a00 	vldr	s15, [r3]
 8005774:	eef1 7a67 	vneg.f32	s15, s15
 8005778:	4b79      	ldr	r3, [pc, #484]	; (8005960 <get_Straj+0x658>)
 800577a:	edc3 7a00 	vstr	s15, [r3]
 800577e:	4b7a      	ldr	r3, [pc, #488]	; (8005968 <get_Straj+0x660>)
 8005780:	edd3 7a00 	vldr	s15, [r3]
 8005784:	eef1 7a67 	vneg.f32	s15, s15
 8005788:	4b77      	ldr	r3, [pc, #476]	; (8005968 <get_Straj+0x660>)
 800578a:	edc3 7a00 	vstr	s15, [r3]
 800578e:	4b78      	ldr	r3, [pc, #480]	; (8005970 <get_Straj+0x668>)
 8005790:	edd3 7a00 	vldr	s15, [r3]
 8005794:	eef1 7a67 	vneg.f32	s15, s15
 8005798:	4b75      	ldr	r3, [pc, #468]	; (8005970 <get_Straj+0x668>)
 800579a:	edc3 7a00 	vstr	s15, [r3]
 800579e:	4b75      	ldr	r3, [pc, #468]	; (8005974 <get_Straj+0x66c>)
 80057a0:	edd3 7a00 	vldr	s15, [r3]
 80057a4:	eef1 7a67 	vneg.f32	s15, s15
 80057a8:	4b72      	ldr	r3, [pc, #456]	; (8005974 <get_Straj+0x66c>)
 80057aa:	edc3 7a00 	vstr	s15, [r3]
            flagInv = false;
 80057ae:	4b72      	ldr	r3, [pc, #456]	; (8005978 <get_Straj+0x670>)
 80057b0:	2200      	movs	r2, #0
 80057b2:	701a      	strb	r2, [r3, #0]
        if (flagInv){
 80057b4:	f000 bc3b 	b.w	800602e <get_Straj+0xd26>
        }

    } else if (t>Ta-Tj1 && t<=Ta){    //c) [Ta-Tj1,Ta]
 80057b8:	4b65      	ldr	r3, [pc, #404]	; (8005950 <get_Straj+0x648>)
 80057ba:	ed93 7a00 	vldr	s14, [r3]
 80057be:	4b63      	ldr	r3, [pc, #396]	; (800594c <get_Straj+0x644>)
 80057c0:	edd3 7a00 	vldr	s15, [r3]
 80057c4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80057c8:	ed97 7a01 	vldr	s14, [r7, #4]
 80057cc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80057d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80057d4:	f340 80d8 	ble.w	8005988 <get_Straj+0x680>
 80057d8:	4b5d      	ldr	r3, [pc, #372]	; (8005950 <get_Straj+0x648>)
 80057da:	edd3 7a00 	vldr	s15, [r3]
 80057de:	ed97 7a01 	vldr	s14, [r7, #4]
 80057e2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80057e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80057ea:	f200 80cd 	bhi.w	8005988 <get_Straj+0x680>
        //printf("tramo3\n");
        q = qi+(vlim+vi)*Ta/2-vlim*(Ta-t)-jmin*pow(Ta-t,3)/6;
 80057ee:	4b63      	ldr	r3, [pc, #396]	; (800597c <get_Straj+0x674>)
 80057f0:	ed93 7a00 	vldr	s14, [r3]
 80057f4:	4b57      	ldr	r3, [pc, #348]	; (8005954 <get_Straj+0x64c>)
 80057f6:	edd3 7a00 	vldr	s15, [r3]
 80057fa:	ee37 7a27 	vadd.f32	s14, s14, s15
 80057fe:	4b54      	ldr	r3, [pc, #336]	; (8005950 <get_Straj+0x648>)
 8005800:	edd3 7a00 	vldr	s15, [r3]
 8005804:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005808:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 800580c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8005810:	4b51      	ldr	r3, [pc, #324]	; (8005958 <get_Straj+0x650>)
 8005812:	edd3 7a00 	vldr	s15, [r3]
 8005816:	ee37 7a27 	vadd.f32	s14, s14, s15
 800581a:	4b4d      	ldr	r3, [pc, #308]	; (8005950 <get_Straj+0x648>)
 800581c:	edd3 6a00 	vldr	s13, [r3]
 8005820:	edd7 7a01 	vldr	s15, [r7, #4]
 8005824:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8005828:	4b54      	ldr	r3, [pc, #336]	; (800597c <get_Straj+0x674>)
 800582a:	edd3 7a00 	vldr	s15, [r3]
 800582e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005832:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005836:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 800583a:	4b51      	ldr	r3, [pc, #324]	; (8005980 <get_Straj+0x678>)
 800583c:	edd3 7a00 	vldr	s15, [r3]
 8005840:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8005844:	4b42      	ldr	r3, [pc, #264]	; (8005950 <get_Straj+0x648>)
 8005846:	ed93 7a00 	vldr	s14, [r3]
 800584a:	edd7 7a01 	vldr	s15, [r7, #4]
 800584e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005852:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005856:	eeb0 1b08 	vmov.f64	d1, #8	; 0x40400000  3.0
 800585a:	eeb0 0b47 	vmov.f64	d0, d7
 800585e:	f00c fce7 	bl	8012230 <pow>
 8005862:	eeb0 7b40 	vmov.f64	d7, d0
 8005866:	ee29 6b07 	vmul.f64	d6, d9, d7
 800586a:	eeb1 5b08 	vmov.f64	d5, #24	; 0x40c00000  6.0
 800586e:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8005872:	ee38 7b47 	vsub.f64	d7, d8, d7
 8005876:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 800587a:	4b39      	ldr	r3, [pc, #228]	; (8005960 <get_Straj+0x658>)
 800587c:	edc3 7a00 	vstr	s15, [r3]
        qd = vmax+jmin*pow(Ta-t,2)/2;
 8005880:	4b40      	ldr	r3, [pc, #256]	; (8005984 <get_Straj+0x67c>)
 8005882:	edd3 7a00 	vldr	s15, [r3]
 8005886:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 800588a:	4b3d      	ldr	r3, [pc, #244]	; (8005980 <get_Straj+0x678>)
 800588c:	edd3 7a00 	vldr	s15, [r3]
 8005890:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8005894:	4b2e      	ldr	r3, [pc, #184]	; (8005950 <get_Straj+0x648>)
 8005896:	ed93 7a00 	vldr	s14, [r3]
 800589a:	edd7 7a01 	vldr	s15, [r7, #4]
 800589e:	ee77 7a67 	vsub.f32	s15, s14, s15
 80058a2:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80058a6:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80058aa:	eeb0 0b47 	vmov.f64	d0, d7
 80058ae:	f00c fcbf 	bl	8012230 <pow>
 80058b2:	eeb0 7b40 	vmov.f64	d7, d0
 80058b6:	ee29 6b07 	vmul.f64	d6, d9, d7
 80058ba:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 80058be:	ee86 7b05 	vdiv.f64	d7, d6, d5
 80058c2:	ee38 7b07 	vadd.f64	d7, d8, d7
 80058c6:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 80058ca:	4b27      	ldr	r3, [pc, #156]	; (8005968 <get_Straj+0x660>)
 80058cc:	edc3 7a00 	vstr	s15, [r3]
        qdd = -jmin*(Ta-t);
 80058d0:	4b2b      	ldr	r3, [pc, #172]	; (8005980 <get_Straj+0x678>)
 80058d2:	edd3 7a00 	vldr	s15, [r3]
 80058d6:	eeb1 7a67 	vneg.f32	s14, s15
 80058da:	4b1d      	ldr	r3, [pc, #116]	; (8005950 <get_Straj+0x648>)
 80058dc:	edd3 6a00 	vldr	s13, [r3]
 80058e0:	edd7 7a01 	vldr	s15, [r7, #4]
 80058e4:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80058e8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80058ec:	4b20      	ldr	r3, [pc, #128]	; (8005970 <get_Straj+0x668>)
 80058ee:	edc3 7a00 	vstr	s15, [r3]
        qddd = jmin;
 80058f2:	4b23      	ldr	r3, [pc, #140]	; (8005980 <get_Straj+0x678>)
 80058f4:	681b      	ldr	r3, [r3, #0]
 80058f6:	4a1f      	ldr	r2, [pc, #124]	; (8005974 <get_Straj+0x66c>)
 80058f8:	6013      	str	r3, [r2, #0]
        if (flagInv){
 80058fa:	4b1f      	ldr	r3, [pc, #124]	; (8005978 <get_Straj+0x670>)
 80058fc:	781b      	ldrb	r3, [r3, #0]
 80058fe:	2b00      	cmp	r3, #0
 8005900:	f000 8395 	beq.w	800602e <get_Straj+0xd26>
            q=-q; qd=-qd; qdd=-qdd; qddd=-qddd;
 8005904:	4b16      	ldr	r3, [pc, #88]	; (8005960 <get_Straj+0x658>)
 8005906:	edd3 7a00 	vldr	s15, [r3]
 800590a:	eef1 7a67 	vneg.f32	s15, s15
 800590e:	4b14      	ldr	r3, [pc, #80]	; (8005960 <get_Straj+0x658>)
 8005910:	edc3 7a00 	vstr	s15, [r3]
 8005914:	4b14      	ldr	r3, [pc, #80]	; (8005968 <get_Straj+0x660>)
 8005916:	edd3 7a00 	vldr	s15, [r3]
 800591a:	eef1 7a67 	vneg.f32	s15, s15
 800591e:	4b12      	ldr	r3, [pc, #72]	; (8005968 <get_Straj+0x660>)
 8005920:	edc3 7a00 	vstr	s15, [r3]
 8005924:	4b12      	ldr	r3, [pc, #72]	; (8005970 <get_Straj+0x668>)
 8005926:	edd3 7a00 	vldr	s15, [r3]
 800592a:	eef1 7a67 	vneg.f32	s15, s15
 800592e:	4b10      	ldr	r3, [pc, #64]	; (8005970 <get_Straj+0x668>)
 8005930:	edc3 7a00 	vstr	s15, [r3]
 8005934:	4b0f      	ldr	r3, [pc, #60]	; (8005974 <get_Straj+0x66c>)
 8005936:	edd3 7a00 	vldr	s15, [r3]
 800593a:	eef1 7a67 	vneg.f32	s15, s15
 800593e:	4b0d      	ldr	r3, [pc, #52]	; (8005974 <get_Straj+0x66c>)
 8005940:	edc3 7a00 	vstr	s15, [r3]
            flagInv = false;
 8005944:	4b0c      	ldr	r3, [pc, #48]	; (8005978 <get_Straj+0x670>)
 8005946:	2200      	movs	r2, #0
 8005948:	701a      	strb	r2, [r3, #0]
        if (flagInv){
 800594a:	e370      	b.n	800602e <get_Straj+0xd26>
 800594c:	24000a94 	.word	0x24000a94
 8005950:	24000a88 	.word	0x24000a88
 8005954:	24000658 	.word	0x24000658
 8005958:	24000aa4 	.word	0x24000aa4
 800595c:	24000a78 	.word	0x24000a78
 8005960:	24000640 	.word	0x24000640
 8005964:	24000098 	.word	0x24000098
 8005968:	24000644 	.word	0x24000644
 800596c:	24000090 	.word	0x24000090
 8005970:	24000648 	.word	0x24000648
 8005974:	2400064c 	.word	0x2400064c
 8005978:	24000a74 	.word	0x24000a74
 800597c:	24000a80 	.word	0x24000a80
 8005980:	24000650 	.word	0x24000650
 8005984:	24000094 	.word	0x24000094
        }
    }

    /*-------------Constant phase ----------------*/
    else if (t>Ta && t<=Ta+Tv){
 8005988:	4bae      	ldr	r3, [pc, #696]	; (8005c44 <get_Straj+0x93c>)
 800598a:	edd3 7a00 	vldr	s15, [r3]
 800598e:	ed97 7a01 	vldr	s14, [r7, #4]
 8005992:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005996:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800599a:	dd6a      	ble.n	8005a72 <get_Straj+0x76a>
 800599c:	4ba9      	ldr	r3, [pc, #676]	; (8005c44 <get_Straj+0x93c>)
 800599e:	ed93 7a00 	vldr	s14, [r3]
 80059a2:	4ba9      	ldr	r3, [pc, #676]	; (8005c48 <get_Straj+0x940>)
 80059a4:	edd3 7a00 	vldr	s15, [r3]
 80059a8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80059ac:	ed97 7a01 	vldr	s14, [r7, #4]
 80059b0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80059b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80059b8:	d85b      	bhi.n	8005a72 <get_Straj+0x76a>
        //printf("tramo4\n");
        q = qi+(vlim+vi)*Ta/2+vlim*(t-Ta);
 80059ba:	4ba4      	ldr	r3, [pc, #656]	; (8005c4c <get_Straj+0x944>)
 80059bc:	ed93 7a00 	vldr	s14, [r3]
 80059c0:	4ba3      	ldr	r3, [pc, #652]	; (8005c50 <get_Straj+0x948>)
 80059c2:	edd3 7a00 	vldr	s15, [r3]
 80059c6:	ee37 7a27 	vadd.f32	s14, s14, s15
 80059ca:	4b9e      	ldr	r3, [pc, #632]	; (8005c44 <get_Straj+0x93c>)
 80059cc:	edd3 7a00 	vldr	s15, [r3]
 80059d0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80059d4:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 80059d8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80059dc:	4b9d      	ldr	r3, [pc, #628]	; (8005c54 <get_Straj+0x94c>)
 80059de:	edd3 7a00 	vldr	s15, [r3]
 80059e2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80059e6:	4b97      	ldr	r3, [pc, #604]	; (8005c44 <get_Straj+0x93c>)
 80059e8:	edd3 7a00 	vldr	s15, [r3]
 80059ec:	edd7 6a01 	vldr	s13, [r7, #4]
 80059f0:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80059f4:	4b95      	ldr	r3, [pc, #596]	; (8005c4c <get_Straj+0x944>)
 80059f6:	edd3 7a00 	vldr	s15, [r3]
 80059fa:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80059fe:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005a02:	4b95      	ldr	r3, [pc, #596]	; (8005c58 <get_Straj+0x950>)
 8005a04:	edc3 7a00 	vstr	s15, [r3]
        qd = vmax;
 8005a08:	4b94      	ldr	r3, [pc, #592]	; (8005c5c <get_Straj+0x954>)
 8005a0a:	681b      	ldr	r3, [r3, #0]
 8005a0c:	4a94      	ldr	r2, [pc, #592]	; (8005c60 <get_Straj+0x958>)
 8005a0e:	6013      	str	r3, [r2, #0]
        qdd = 0;
 8005a10:	4b94      	ldr	r3, [pc, #592]	; (8005c64 <get_Straj+0x95c>)
 8005a12:	f04f 0200 	mov.w	r2, #0
 8005a16:	601a      	str	r2, [r3, #0]
        qddd = 0;
 8005a18:	4b93      	ldr	r3, [pc, #588]	; (8005c68 <get_Straj+0x960>)
 8005a1a:	f04f 0200 	mov.w	r2, #0
 8005a1e:	601a      	str	r2, [r3, #0]
        if (flagInv){
 8005a20:	4b92      	ldr	r3, [pc, #584]	; (8005c6c <get_Straj+0x964>)
 8005a22:	781b      	ldrb	r3, [r3, #0]
 8005a24:	2b00      	cmp	r3, #0
 8005a26:	f000 8302 	beq.w	800602e <get_Straj+0xd26>
            q=-q; qd=-qd; qdd=-qdd; qddd=-qddd;
 8005a2a:	4b8b      	ldr	r3, [pc, #556]	; (8005c58 <get_Straj+0x950>)
 8005a2c:	edd3 7a00 	vldr	s15, [r3]
 8005a30:	eef1 7a67 	vneg.f32	s15, s15
 8005a34:	4b88      	ldr	r3, [pc, #544]	; (8005c58 <get_Straj+0x950>)
 8005a36:	edc3 7a00 	vstr	s15, [r3]
 8005a3a:	4b89      	ldr	r3, [pc, #548]	; (8005c60 <get_Straj+0x958>)
 8005a3c:	edd3 7a00 	vldr	s15, [r3]
 8005a40:	eef1 7a67 	vneg.f32	s15, s15
 8005a44:	4b86      	ldr	r3, [pc, #536]	; (8005c60 <get_Straj+0x958>)
 8005a46:	edc3 7a00 	vstr	s15, [r3]
 8005a4a:	4b86      	ldr	r3, [pc, #536]	; (8005c64 <get_Straj+0x95c>)
 8005a4c:	edd3 7a00 	vldr	s15, [r3]
 8005a50:	eef1 7a67 	vneg.f32	s15, s15
 8005a54:	4b83      	ldr	r3, [pc, #524]	; (8005c64 <get_Straj+0x95c>)
 8005a56:	edc3 7a00 	vstr	s15, [r3]
 8005a5a:	4b83      	ldr	r3, [pc, #524]	; (8005c68 <get_Straj+0x960>)
 8005a5c:	edd3 7a00 	vldr	s15, [r3]
 8005a60:	eef1 7a67 	vneg.f32	s15, s15
 8005a64:	4b80      	ldr	r3, [pc, #512]	; (8005c68 <get_Straj+0x960>)
 8005a66:	edc3 7a00 	vstr	s15, [r3]
            flagInv = false;
 8005a6a:	4b80      	ldr	r3, [pc, #512]	; (8005c6c <get_Straj+0x964>)
 8005a6c:	2200      	movs	r2, #0
 8005a6e:	701a      	strb	r2, [r3, #0]
        if (flagInv){
 8005a70:	e2dd      	b.n	800602e <get_Straj+0xd26>
        }
    }
    /*-------------Dese phase ----------------*/

    else if (t>=T-Td && t<=T-Td+Tj2){
 8005a72:	4b7f      	ldr	r3, [pc, #508]	; (8005c70 <get_Straj+0x968>)
 8005a74:	ed93 7a00 	vldr	s14, [r3]
 8005a78:	4b7e      	ldr	r3, [pc, #504]	; (8005c74 <get_Straj+0x96c>)
 8005a7a:	edd3 7a00 	vldr	s15, [r3]
 8005a7e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005a82:	ed97 7a01 	vldr	s14, [r7, #4]
 8005a86:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005a8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a8e:	f2c0 80fd 	blt.w	8005c8c <get_Straj+0x984>
 8005a92:	4b77      	ldr	r3, [pc, #476]	; (8005c70 <get_Straj+0x968>)
 8005a94:	ed93 7a00 	vldr	s14, [r3]
 8005a98:	4b76      	ldr	r3, [pc, #472]	; (8005c74 <get_Straj+0x96c>)
 8005a9a:	edd3 7a00 	vldr	s15, [r3]
 8005a9e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005aa2:	4b75      	ldr	r3, [pc, #468]	; (8005c78 <get_Straj+0x970>)
 8005aa4:	edd3 7a00 	vldr	s15, [r3]
 8005aa8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005aac:	ed97 7a01 	vldr	s14, [r7, #4]
 8005ab0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005ab4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005ab8:	f200 80e8 	bhi.w	8005c8c <get_Straj+0x984>
        //printf("tramo5\n");
        q=qf-(vlim+vf)*Td/2+vlim*(t-T+Td)-jmax*(pow(t-T+Td,3)/6);
 8005abc:	4b6f      	ldr	r3, [pc, #444]	; (8005c7c <get_Straj+0x974>)
 8005abe:	ed93 7a00 	vldr	s14, [r3]
 8005ac2:	4b62      	ldr	r3, [pc, #392]	; (8005c4c <get_Straj+0x944>)
 8005ac4:	edd3 6a00 	vldr	s13, [r3]
 8005ac8:	4b6d      	ldr	r3, [pc, #436]	; (8005c80 <get_Straj+0x978>)
 8005aca:	edd3 7a00 	vldr	s15, [r3]
 8005ace:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8005ad2:	4b68      	ldr	r3, [pc, #416]	; (8005c74 <get_Straj+0x96c>)
 8005ad4:	edd3 7a00 	vldr	s15, [r3]
 8005ad8:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8005adc:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 8005ae0:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8005ae4:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005ae8:	4b61      	ldr	r3, [pc, #388]	; (8005c70 <get_Straj+0x968>)
 8005aea:	edd3 7a00 	vldr	s15, [r3]
 8005aee:	edd7 6a01 	vldr	s13, [r7, #4]
 8005af2:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8005af6:	4b5f      	ldr	r3, [pc, #380]	; (8005c74 <get_Straj+0x96c>)
 8005af8:	edd3 7a00 	vldr	s15, [r3]
 8005afc:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8005b00:	4b52      	ldr	r3, [pc, #328]	; (8005c4c <get_Straj+0x944>)
 8005b02:	edd3 7a00 	vldr	s15, [r3]
 8005b06:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005b0a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005b0e:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8005b12:	4b5c      	ldr	r3, [pc, #368]	; (8005c84 <get_Straj+0x97c>)
 8005b14:	edd3 7a00 	vldr	s15, [r3]
 8005b18:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8005b1c:	4b54      	ldr	r3, [pc, #336]	; (8005c70 <get_Straj+0x968>)
 8005b1e:	edd3 7a00 	vldr	s15, [r3]
 8005b22:	ed97 7a01 	vldr	s14, [r7, #4]
 8005b26:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005b2a:	4b52      	ldr	r3, [pc, #328]	; (8005c74 <get_Straj+0x96c>)
 8005b2c:	edd3 7a00 	vldr	s15, [r3]
 8005b30:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005b34:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005b38:	eeb0 1b08 	vmov.f64	d1, #8	; 0x40400000  3.0
 8005b3c:	eeb0 0b47 	vmov.f64	d0, d7
 8005b40:	f00c fb76 	bl	8012230 <pow>
 8005b44:	eeb0 6b40 	vmov.f64	d6, d0
 8005b48:	eeb1 5b08 	vmov.f64	d5, #24	; 0x40c00000  6.0
 8005b4c:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8005b50:	ee29 7b07 	vmul.f64	d7, d9, d7
 8005b54:	ee38 7b47 	vsub.f64	d7, d8, d7
 8005b58:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005b5c:	4b3e      	ldr	r3, [pc, #248]	; (8005c58 <get_Straj+0x950>)
 8005b5e:	edc3 7a00 	vstr	s15, [r3]
        qd=vlim-jmax*(pow(t-T+Td,2)/2);
 8005b62:	4b3a      	ldr	r3, [pc, #232]	; (8005c4c <get_Straj+0x944>)
 8005b64:	edd3 7a00 	vldr	s15, [r3]
 8005b68:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8005b6c:	4b45      	ldr	r3, [pc, #276]	; (8005c84 <get_Straj+0x97c>)
 8005b6e:	edd3 7a00 	vldr	s15, [r3]
 8005b72:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8005b76:	4b3e      	ldr	r3, [pc, #248]	; (8005c70 <get_Straj+0x968>)
 8005b78:	edd3 7a00 	vldr	s15, [r3]
 8005b7c:	ed97 7a01 	vldr	s14, [r7, #4]
 8005b80:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005b84:	4b3b      	ldr	r3, [pc, #236]	; (8005c74 <get_Straj+0x96c>)
 8005b86:	edd3 7a00 	vldr	s15, [r3]
 8005b8a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005b8e:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005b92:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005b96:	eeb0 0b47 	vmov.f64	d0, d7
 8005b9a:	f00c fb49 	bl	8012230 <pow>
 8005b9e:	eeb0 6b40 	vmov.f64	d6, d0
 8005ba2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 8005ba6:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8005baa:	ee29 7b07 	vmul.f64	d7, d9, d7
 8005bae:	ee38 7b47 	vsub.f64	d7, d8, d7
 8005bb2:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005bb6:	4b2a      	ldr	r3, [pc, #168]	; (8005c60 <get_Straj+0x958>)
 8005bb8:	edc3 7a00 	vstr	s15, [r3]
        qdd=-jmax*(t-T+Td);
 8005bbc:	4b31      	ldr	r3, [pc, #196]	; (8005c84 <get_Straj+0x97c>)
 8005bbe:	edd3 7a00 	vldr	s15, [r3]
 8005bc2:	eeb1 7a67 	vneg.f32	s14, s15
 8005bc6:	4b2a      	ldr	r3, [pc, #168]	; (8005c70 <get_Straj+0x968>)
 8005bc8:	edd3 7a00 	vldr	s15, [r3]
 8005bcc:	edd7 6a01 	vldr	s13, [r7, #4]
 8005bd0:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8005bd4:	4b27      	ldr	r3, [pc, #156]	; (8005c74 <get_Straj+0x96c>)
 8005bd6:	edd3 7a00 	vldr	s15, [r3]
 8005bda:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8005bde:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005be2:	4b20      	ldr	r3, [pc, #128]	; (8005c64 <get_Straj+0x95c>)
 8005be4:	edc3 7a00 	vstr	s15, [r3]
        qddd=jmin;
 8005be8:	4b27      	ldr	r3, [pc, #156]	; (8005c88 <get_Straj+0x980>)
 8005bea:	681b      	ldr	r3, [r3, #0]
 8005bec:	4a1e      	ldr	r2, [pc, #120]	; (8005c68 <get_Straj+0x960>)
 8005bee:	6013      	str	r3, [r2, #0]
        if (flagInv){
 8005bf0:	4b1e      	ldr	r3, [pc, #120]	; (8005c6c <get_Straj+0x964>)
 8005bf2:	781b      	ldrb	r3, [r3, #0]
 8005bf4:	2b00      	cmp	r3, #0
 8005bf6:	f000 821a 	beq.w	800602e <get_Straj+0xd26>
            q=-q; qd=-qd; qdd=-qdd; qddd=-qddd;
 8005bfa:	4b17      	ldr	r3, [pc, #92]	; (8005c58 <get_Straj+0x950>)
 8005bfc:	edd3 7a00 	vldr	s15, [r3]
 8005c00:	eef1 7a67 	vneg.f32	s15, s15
 8005c04:	4b14      	ldr	r3, [pc, #80]	; (8005c58 <get_Straj+0x950>)
 8005c06:	edc3 7a00 	vstr	s15, [r3]
 8005c0a:	4b15      	ldr	r3, [pc, #84]	; (8005c60 <get_Straj+0x958>)
 8005c0c:	edd3 7a00 	vldr	s15, [r3]
 8005c10:	eef1 7a67 	vneg.f32	s15, s15
 8005c14:	4b12      	ldr	r3, [pc, #72]	; (8005c60 <get_Straj+0x958>)
 8005c16:	edc3 7a00 	vstr	s15, [r3]
 8005c1a:	4b12      	ldr	r3, [pc, #72]	; (8005c64 <get_Straj+0x95c>)
 8005c1c:	edd3 7a00 	vldr	s15, [r3]
 8005c20:	eef1 7a67 	vneg.f32	s15, s15
 8005c24:	4b0f      	ldr	r3, [pc, #60]	; (8005c64 <get_Straj+0x95c>)
 8005c26:	edc3 7a00 	vstr	s15, [r3]
 8005c2a:	4b0f      	ldr	r3, [pc, #60]	; (8005c68 <get_Straj+0x960>)
 8005c2c:	edd3 7a00 	vldr	s15, [r3]
 8005c30:	eef1 7a67 	vneg.f32	s15, s15
 8005c34:	4b0c      	ldr	r3, [pc, #48]	; (8005c68 <get_Straj+0x960>)
 8005c36:	edc3 7a00 	vstr	s15, [r3]
            flagInv = false;
 8005c3a:	4b0c      	ldr	r3, [pc, #48]	; (8005c6c <get_Straj+0x964>)
 8005c3c:	2200      	movs	r2, #0
 8005c3e:	701a      	strb	r2, [r3, #0]
        if (flagInv){
 8005c40:	e1f5      	b.n	800602e <get_Straj+0xd26>
 8005c42:	bf00      	nop
 8005c44:	24000a88 	.word	0x24000a88
 8005c48:	24000a90 	.word	0x24000a90
 8005c4c:	24000a80 	.word	0x24000a80
 8005c50:	24000658 	.word	0x24000658
 8005c54:	24000aa4 	.word	0x24000aa4
 8005c58:	24000640 	.word	0x24000640
 8005c5c:	24000094 	.word	0x24000094
 8005c60:	24000644 	.word	0x24000644
 8005c64:	24000648 	.word	0x24000648
 8005c68:	2400064c 	.word	0x2400064c
 8005c6c:	24000a74 	.word	0x24000a74
 8005c70:	24000a84 	.word	0x24000a84
 8005c74:	24000a8c 	.word	0x24000a8c
 8005c78:	24000a98 	.word	0x24000a98
 8005c7c:	24000aa8 	.word	0x24000aa8
 8005c80:	2400065c 	.word	0x2400065c
 8005c84:	24000090 	.word	0x24000090
 8005c88:	24000650 	.word	0x24000650
        }
    } else if (t>T-Td+Tj2 && t<=T-Tj2){
 8005c8c:	4b8d      	ldr	r3, [pc, #564]	; (8005ec4 <get_Straj+0xbbc>)
 8005c8e:	ed93 7a00 	vldr	s14, [r3]
 8005c92:	4b8d      	ldr	r3, [pc, #564]	; (8005ec8 <get_Straj+0xbc0>)
 8005c94:	edd3 7a00 	vldr	s15, [r3]
 8005c98:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005c9c:	4b8b      	ldr	r3, [pc, #556]	; (8005ecc <get_Straj+0xbc4>)
 8005c9e:	edd3 7a00 	vldr	s15, [r3]
 8005ca2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005ca6:	ed97 7a01 	vldr	s14, [r7, #4]
 8005caa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005cae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005cb2:	f340 80eb 	ble.w	8005e8c <get_Straj+0xb84>
 8005cb6:	4b83      	ldr	r3, [pc, #524]	; (8005ec4 <get_Straj+0xbbc>)
 8005cb8:	ed93 7a00 	vldr	s14, [r3]
 8005cbc:	4b83      	ldr	r3, [pc, #524]	; (8005ecc <get_Straj+0xbc4>)
 8005cbe:	edd3 7a00 	vldr	s15, [r3]
 8005cc2:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005cc6:	ed97 7a01 	vldr	s14, [r7, #4]
 8005cca:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005cce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005cd2:	f200 80db 	bhi.w	8005e8c <get_Straj+0xb84>
        //printf("tramo6\n");
        q=qf-(vlim+vf)*Td/2+vlim*(t-T+Td)+(alimd/6)*(3*pow(t-T+Td,2)-3*Tj2*(t-T+Td)+pow(Tj2,2));
 8005cd6:	4b7e      	ldr	r3, [pc, #504]	; (8005ed0 <get_Straj+0xbc8>)
 8005cd8:	ed93 7a00 	vldr	s14, [r3]
 8005cdc:	4b7d      	ldr	r3, [pc, #500]	; (8005ed4 <get_Straj+0xbcc>)
 8005cde:	edd3 6a00 	vldr	s13, [r3]
 8005ce2:	4b7d      	ldr	r3, [pc, #500]	; (8005ed8 <get_Straj+0xbd0>)
 8005ce4:	edd3 7a00 	vldr	s15, [r3]
 8005ce8:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8005cec:	4b76      	ldr	r3, [pc, #472]	; (8005ec8 <get_Straj+0xbc0>)
 8005cee:	edd3 7a00 	vldr	s15, [r3]
 8005cf2:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8005cf6:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 8005cfa:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8005cfe:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005d02:	4b70      	ldr	r3, [pc, #448]	; (8005ec4 <get_Straj+0xbbc>)
 8005d04:	edd3 7a00 	vldr	s15, [r3]
 8005d08:	edd7 6a01 	vldr	s13, [r7, #4]
 8005d0c:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8005d10:	4b6d      	ldr	r3, [pc, #436]	; (8005ec8 <get_Straj+0xbc0>)
 8005d12:	edd3 7a00 	vldr	s15, [r3]
 8005d16:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8005d1a:	4b6e      	ldr	r3, [pc, #440]	; (8005ed4 <get_Straj+0xbcc>)
 8005d1c:	edd3 7a00 	vldr	s15, [r3]
 8005d20:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005d24:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005d28:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8005d2c:	4b6b      	ldr	r3, [pc, #428]	; (8005edc <get_Straj+0xbd4>)
 8005d2e:	ed93 7a00 	vldr	s14, [r3]
 8005d32:	eef1 6a08 	vmov.f32	s13, #24	; 0x40c00000  6.0
 8005d36:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8005d3a:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8005d3e:	4b61      	ldr	r3, [pc, #388]	; (8005ec4 <get_Straj+0xbbc>)
 8005d40:	edd3 7a00 	vldr	s15, [r3]
 8005d44:	ed97 7a01 	vldr	s14, [r7, #4]
 8005d48:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005d4c:	4b5e      	ldr	r3, [pc, #376]	; (8005ec8 <get_Straj+0xbc0>)
 8005d4e:	edd3 7a00 	vldr	s15, [r3]
 8005d52:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005d56:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005d5a:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005d5e:	eeb0 0b47 	vmov.f64	d0, d7
 8005d62:	f00c fa65 	bl	8012230 <pow>
 8005d66:	eeb0 7b40 	vmov.f64	d7, d0
 8005d6a:	eeb0 6b08 	vmov.f64	d6, #8	; 0x40400000  3.0
 8005d6e:	ee27 6b06 	vmul.f64	d6, d7, d6
 8005d72:	4b56      	ldr	r3, [pc, #344]	; (8005ecc <get_Straj+0xbc4>)
 8005d74:	edd3 7a00 	vldr	s15, [r3]
 8005d78:	eeb0 7a08 	vmov.f32	s14, #8	; 0x40400000  3.0
 8005d7c:	ee27 7a87 	vmul.f32	s14, s15, s14
 8005d80:	4b50      	ldr	r3, [pc, #320]	; (8005ec4 <get_Straj+0xbbc>)
 8005d82:	edd3 7a00 	vldr	s15, [r3]
 8005d86:	edd7 5a01 	vldr	s11, [r7, #4]
 8005d8a:	ee75 5ae7 	vsub.f32	s11, s11, s15
 8005d8e:	4b4e      	ldr	r3, [pc, #312]	; (8005ec8 <get_Straj+0xbc0>)
 8005d90:	edd3 7a00 	vldr	s15, [r3]
 8005d94:	ee75 7aa7 	vadd.f32	s15, s11, s15
 8005d98:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005d9c:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005da0:	ee36 ab47 	vsub.f64	d10, d6, d7
 8005da4:	4b49      	ldr	r3, [pc, #292]	; (8005ecc <get_Straj+0xbc4>)
 8005da6:	edd3 7a00 	vldr	s15, [r3]
 8005daa:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005dae:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005db2:	eeb0 0b47 	vmov.f64	d0, d7
 8005db6:	f00c fa3b 	bl	8012230 <pow>
 8005dba:	eeb0 7b40 	vmov.f64	d7, d0
 8005dbe:	ee3a 7b07 	vadd.f64	d7, d10, d7
 8005dc2:	ee29 7b07 	vmul.f64	d7, d9, d7
 8005dc6:	ee38 7b07 	vadd.f64	d7, d8, d7
 8005dca:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005dce:	4b44      	ldr	r3, [pc, #272]	; (8005ee0 <get_Straj+0xbd8>)
 8005dd0:	edc3 7a00 	vstr	s15, [r3]
        qd=vlim+alimd*(t-T+Td-Tj2/2);
 8005dd4:	4b3b      	ldr	r3, [pc, #236]	; (8005ec4 <get_Straj+0xbbc>)
 8005dd6:	edd3 7a00 	vldr	s15, [r3]
 8005dda:	ed97 7a01 	vldr	s14, [r7, #4]
 8005dde:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005de2:	4b39      	ldr	r3, [pc, #228]	; (8005ec8 <get_Straj+0xbc0>)
 8005de4:	edd3 7a00 	vldr	s15, [r3]
 8005de8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005dec:	4b37      	ldr	r3, [pc, #220]	; (8005ecc <get_Straj+0xbc4>)
 8005dee:	edd3 6a00 	vldr	s13, [r3]
 8005df2:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 8005df6:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8005dfa:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005dfe:	4b37      	ldr	r3, [pc, #220]	; (8005edc <get_Straj+0xbd4>)
 8005e00:	edd3 7a00 	vldr	s15, [r3]
 8005e04:	ee27 7a27 	vmul.f32	s14, s14, s15
 8005e08:	4b32      	ldr	r3, [pc, #200]	; (8005ed4 <get_Straj+0xbcc>)
 8005e0a:	edd3 7a00 	vldr	s15, [r3]
 8005e0e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005e12:	4b34      	ldr	r3, [pc, #208]	; (8005ee4 <get_Straj+0xbdc>)
 8005e14:	edc3 7a00 	vstr	s15, [r3]
        qdd = -jmax*Tj2;
 8005e18:	4b33      	ldr	r3, [pc, #204]	; (8005ee8 <get_Straj+0xbe0>)
 8005e1a:	edd3 7a00 	vldr	s15, [r3]
 8005e1e:	eeb1 7a67 	vneg.f32	s14, s15
 8005e22:	4b2a      	ldr	r3, [pc, #168]	; (8005ecc <get_Straj+0xbc4>)
 8005e24:	edd3 7a00 	vldr	s15, [r3]
 8005e28:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005e2c:	4b2f      	ldr	r3, [pc, #188]	; (8005eec <get_Straj+0xbe4>)
 8005e2e:	edc3 7a00 	vstr	s15, [r3]
        qddd = 0;
 8005e32:	4b2f      	ldr	r3, [pc, #188]	; (8005ef0 <get_Straj+0xbe8>)
 8005e34:	f04f 0200 	mov.w	r2, #0
 8005e38:	601a      	str	r2, [r3, #0]
        if (flagInv){
 8005e3a:	4b2e      	ldr	r3, [pc, #184]	; (8005ef4 <get_Straj+0xbec>)
 8005e3c:	781b      	ldrb	r3, [r3, #0]
 8005e3e:	2b00      	cmp	r3, #0
 8005e40:	f000 80f5 	beq.w	800602e <get_Straj+0xd26>
            q=-q; qd=-qd; qdd=-qdd; qddd=-qddd;
 8005e44:	4b26      	ldr	r3, [pc, #152]	; (8005ee0 <get_Straj+0xbd8>)
 8005e46:	edd3 7a00 	vldr	s15, [r3]
 8005e4a:	eef1 7a67 	vneg.f32	s15, s15
 8005e4e:	4b24      	ldr	r3, [pc, #144]	; (8005ee0 <get_Straj+0xbd8>)
 8005e50:	edc3 7a00 	vstr	s15, [r3]
 8005e54:	4b23      	ldr	r3, [pc, #140]	; (8005ee4 <get_Straj+0xbdc>)
 8005e56:	edd3 7a00 	vldr	s15, [r3]
 8005e5a:	eef1 7a67 	vneg.f32	s15, s15
 8005e5e:	4b21      	ldr	r3, [pc, #132]	; (8005ee4 <get_Straj+0xbdc>)
 8005e60:	edc3 7a00 	vstr	s15, [r3]
 8005e64:	4b21      	ldr	r3, [pc, #132]	; (8005eec <get_Straj+0xbe4>)
 8005e66:	edd3 7a00 	vldr	s15, [r3]
 8005e6a:	eef1 7a67 	vneg.f32	s15, s15
 8005e6e:	4b1f      	ldr	r3, [pc, #124]	; (8005eec <get_Straj+0xbe4>)
 8005e70:	edc3 7a00 	vstr	s15, [r3]
 8005e74:	4b1e      	ldr	r3, [pc, #120]	; (8005ef0 <get_Straj+0xbe8>)
 8005e76:	edd3 7a00 	vldr	s15, [r3]
 8005e7a:	eef1 7a67 	vneg.f32	s15, s15
 8005e7e:	4b1c      	ldr	r3, [pc, #112]	; (8005ef0 <get_Straj+0xbe8>)
 8005e80:	edc3 7a00 	vstr	s15, [r3]
            flagInv = false;
 8005e84:	4b1b      	ldr	r3, [pc, #108]	; (8005ef4 <get_Straj+0xbec>)
 8005e86:	2200      	movs	r2, #0
 8005e88:	701a      	strb	r2, [r3, #0]
        if (flagInv){
 8005e8a:	e0d0      	b.n	800602e <get_Straj+0xd26>
        }

    } else if (t>T-Tj2 && t<=T){
 8005e8c:	4b0d      	ldr	r3, [pc, #52]	; (8005ec4 <get_Straj+0xbbc>)
 8005e8e:	ed93 7a00 	vldr	s14, [r3]
 8005e92:	4b0e      	ldr	r3, [pc, #56]	; (8005ecc <get_Straj+0xbc4>)
 8005e94:	edd3 7a00 	vldr	s15, [r3]
 8005e98:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005e9c:	ed97 7a01 	vldr	s14, [r7, #4]
 8005ea0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005ea4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005ea8:	dc00      	bgt.n	8005eac <get_Straj+0xba4>
            flagInv = false;
        }
    }


}
 8005eaa:	e0c0      	b.n	800602e <get_Straj+0xd26>
    } else if (t>T-Tj2 && t<=T){
 8005eac:	4b05      	ldr	r3, [pc, #20]	; (8005ec4 <get_Straj+0xbbc>)
 8005eae:	edd3 7a00 	vldr	s15, [r3]
 8005eb2:	ed97 7a01 	vldr	s14, [r7, #4]
 8005eb6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005eba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005ebe:	d91b      	bls.n	8005ef8 <get_Straj+0xbf0>
}
 8005ec0:	e0b5      	b.n	800602e <get_Straj+0xd26>
 8005ec2:	bf00      	nop
 8005ec4:	24000a84 	.word	0x24000a84
 8005ec8:	24000a8c 	.word	0x24000a8c
 8005ecc:	24000a98 	.word	0x24000a98
 8005ed0:	24000aa8 	.word	0x24000aa8
 8005ed4:	24000a80 	.word	0x24000a80
 8005ed8:	2400065c 	.word	0x2400065c
 8005edc:	24000a7c 	.word	0x24000a7c
 8005ee0:	24000640 	.word	0x24000640
 8005ee4:	24000644 	.word	0x24000644
 8005ee8:	24000090 	.word	0x24000090
 8005eec:	24000648 	.word	0x24000648
 8005ef0:	2400064c 	.word	0x2400064c
 8005ef4:	24000a74 	.word	0x24000a74
        q = qf-vf*(T-t)-jmax*(pow(T-t,3)/6);
 8005ef8:	4b50      	ldr	r3, [pc, #320]	; (800603c <get_Straj+0xd34>)
 8005efa:	ed93 7a00 	vldr	s14, [r3]
 8005efe:	4b50      	ldr	r3, [pc, #320]	; (8006040 <get_Straj+0xd38>)
 8005f00:	edd3 6a00 	vldr	s13, [r3]
 8005f04:	edd7 7a01 	vldr	s15, [r7, #4]
 8005f08:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8005f0c:	4b4d      	ldr	r3, [pc, #308]	; (8006044 <get_Straj+0xd3c>)
 8005f0e:	edd3 7a00 	vldr	s15, [r3]
 8005f12:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005f16:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005f1a:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8005f1e:	4b4a      	ldr	r3, [pc, #296]	; (8006048 <get_Straj+0xd40>)
 8005f20:	edd3 7a00 	vldr	s15, [r3]
 8005f24:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8005f28:	4b45      	ldr	r3, [pc, #276]	; (8006040 <get_Straj+0xd38>)
 8005f2a:	ed93 7a00 	vldr	s14, [r3]
 8005f2e:	edd7 7a01 	vldr	s15, [r7, #4]
 8005f32:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005f36:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005f3a:	eeb0 1b08 	vmov.f64	d1, #8	; 0x40400000  3.0
 8005f3e:	eeb0 0b47 	vmov.f64	d0, d7
 8005f42:	f00c f975 	bl	8012230 <pow>
 8005f46:	eeb0 6b40 	vmov.f64	d6, d0
 8005f4a:	eeb1 5b08 	vmov.f64	d5, #24	; 0x40c00000  6.0
 8005f4e:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8005f52:	ee29 7b07 	vmul.f64	d7, d9, d7
 8005f56:	ee38 7b47 	vsub.f64	d7, d8, d7
 8005f5a:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005f5e:	4b3b      	ldr	r3, [pc, #236]	; (800604c <get_Straj+0xd44>)
 8005f60:	edc3 7a00 	vstr	s15, [r3]
        qd = vf+jmax*(pow(T-t,2))/2;
 8005f64:	4b37      	ldr	r3, [pc, #220]	; (8006044 <get_Straj+0xd3c>)
 8005f66:	edd3 7a00 	vldr	s15, [r3]
 8005f6a:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8005f6e:	4b36      	ldr	r3, [pc, #216]	; (8006048 <get_Straj+0xd40>)
 8005f70:	edd3 7a00 	vldr	s15, [r3]
 8005f74:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8005f78:	4b31      	ldr	r3, [pc, #196]	; (8006040 <get_Straj+0xd38>)
 8005f7a:	ed93 7a00 	vldr	s14, [r3]
 8005f7e:	edd7 7a01 	vldr	s15, [r7, #4]
 8005f82:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005f86:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005f8a:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005f8e:	eeb0 0b47 	vmov.f64	d0, d7
 8005f92:	f00c f94d 	bl	8012230 <pow>
 8005f96:	eeb0 7b40 	vmov.f64	d7, d0
 8005f9a:	ee29 6b07 	vmul.f64	d6, d9, d7
 8005f9e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 8005fa2:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8005fa6:	ee38 7b07 	vadd.f64	d7, d8, d7
 8005faa:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005fae:	4b28      	ldr	r3, [pc, #160]	; (8006050 <get_Straj+0xd48>)
 8005fb0:	edc3 7a00 	vstr	s15, [r3]
        qdd = -jmax*(T-t);
 8005fb4:	4b24      	ldr	r3, [pc, #144]	; (8006048 <get_Straj+0xd40>)
 8005fb6:	edd3 7a00 	vldr	s15, [r3]
 8005fba:	eeb1 7a67 	vneg.f32	s14, s15
 8005fbe:	4b20      	ldr	r3, [pc, #128]	; (8006040 <get_Straj+0xd38>)
 8005fc0:	edd3 6a00 	vldr	s13, [r3]
 8005fc4:	edd7 7a01 	vldr	s15, [r7, #4]
 8005fc8:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8005fcc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005fd0:	4b20      	ldr	r3, [pc, #128]	; (8006054 <get_Straj+0xd4c>)
 8005fd2:	edc3 7a00 	vstr	s15, [r3]
        qddd = jmax;
 8005fd6:	4b1c      	ldr	r3, [pc, #112]	; (8006048 <get_Straj+0xd40>)
 8005fd8:	681b      	ldr	r3, [r3, #0]
 8005fda:	4a1f      	ldr	r2, [pc, #124]	; (8006058 <get_Straj+0xd50>)
 8005fdc:	6013      	str	r3, [r2, #0]
        if (flagInv){
 8005fde:	4b1f      	ldr	r3, [pc, #124]	; (800605c <get_Straj+0xd54>)
 8005fe0:	781b      	ldrb	r3, [r3, #0]
 8005fe2:	2b00      	cmp	r3, #0
 8005fe4:	d023      	beq.n	800602e <get_Straj+0xd26>
            q=-q; qd=-qd; qdd=-qdd; qddd=-qddd;
 8005fe6:	4b19      	ldr	r3, [pc, #100]	; (800604c <get_Straj+0xd44>)
 8005fe8:	edd3 7a00 	vldr	s15, [r3]
 8005fec:	eef1 7a67 	vneg.f32	s15, s15
 8005ff0:	4b16      	ldr	r3, [pc, #88]	; (800604c <get_Straj+0xd44>)
 8005ff2:	edc3 7a00 	vstr	s15, [r3]
 8005ff6:	4b16      	ldr	r3, [pc, #88]	; (8006050 <get_Straj+0xd48>)
 8005ff8:	edd3 7a00 	vldr	s15, [r3]
 8005ffc:	eef1 7a67 	vneg.f32	s15, s15
 8006000:	4b13      	ldr	r3, [pc, #76]	; (8006050 <get_Straj+0xd48>)
 8006002:	edc3 7a00 	vstr	s15, [r3]
 8006006:	4b13      	ldr	r3, [pc, #76]	; (8006054 <get_Straj+0xd4c>)
 8006008:	edd3 7a00 	vldr	s15, [r3]
 800600c:	eef1 7a67 	vneg.f32	s15, s15
 8006010:	4b10      	ldr	r3, [pc, #64]	; (8006054 <get_Straj+0xd4c>)
 8006012:	edc3 7a00 	vstr	s15, [r3]
 8006016:	4b10      	ldr	r3, [pc, #64]	; (8006058 <get_Straj+0xd50>)
 8006018:	edd3 7a00 	vldr	s15, [r3]
 800601c:	eef1 7a67 	vneg.f32	s15, s15
 8006020:	4b0d      	ldr	r3, [pc, #52]	; (8006058 <get_Straj+0xd50>)
 8006022:	edc3 7a00 	vstr	s15, [r3]
            flagInv = false;
 8006026:	4b0d      	ldr	r3, [pc, #52]	; (800605c <get_Straj+0xd54>)
 8006028:	2200      	movs	r2, #0
 800602a:	701a      	strb	r2, [r3, #0]
}
 800602c:	e7ff      	b.n	800602e <get_Straj+0xd26>
 800602e:	bf00      	nop
 8006030:	3708      	adds	r7, #8
 8006032:	46bd      	mov	sp, r7
 8006034:	ecbd 8b06 	vpop	{d8-d10}
 8006038:	bd80      	pop	{r7, pc}
 800603a:	bf00      	nop
 800603c:	24000aa8 	.word	0x24000aa8
 8006040:	24000a84 	.word	0x24000a84
 8006044:	2400065c 	.word	0x2400065c
 8006048:	24000090 	.word	0x24000090
 800604c:	24000640 	.word	0x24000640
 8006050:	24000644 	.word	0x24000644
 8006054:	24000648 	.word	0x24000648
 8006058:	2400064c 	.word	0x2400064c
 800605c:	24000a74 	.word	0x24000a74

08006060 <update_ScurveTraj>:


void update_ScurveTraj(float _qi ,float _qf, float vi,float vf ,float vmax,float amax,float jmax){
 8006060:	b580      	push	{r7, lr}
 8006062:	ed2d 8b06 	vpush	{d8-d10}
 8006066:	b08a      	sub	sp, #40	; 0x28
 8006068:	af00      	add	r7, sp, #0
 800606a:	ed87 0a07 	vstr	s0, [r7, #28]
 800606e:	edc7 0a06 	vstr	s1, [r7, #24]
 8006072:	ed87 1a05 	vstr	s2, [r7, #20]
 8006076:	edc7 1a04 	vstr	s3, [r7, #16]
 800607a:	ed87 2a03 	vstr	s4, [r7, #12]
 800607e:	edc7 2a02 	vstr	s5, [r7, #8]
 8006082:	ed87 3a01 	vstr	s6, [r7, #4]

jmin = -jmax;
 8006086:	edd7 7a01 	vldr	s15, [r7, #4]
 800608a:	eef1 7a67 	vneg.f32	s15, s15
 800608e:	4bae      	ldr	r3, [pc, #696]	; (8006348 <update_ScurveTraj+0x2e8>)
 8006090:	edc3 7a00 	vstr	s15, [r3]
amin = -amax;
 8006094:	edd7 7a02 	vldr	s15, [r7, #8]
 8006098:	eef1 7a67 	vneg.f32	s15, s15
 800609c:	4bab      	ldr	r3, [pc, #684]	; (800634c <update_ScurveTraj+0x2ec>)
 800609e:	edc3 7a00 	vstr	s15, [r3]
vmin = -vmax;
 80060a2:	edd7 7a03 	vldr	s15, [r7, #12]
 80060a6:	eef1 7a67 	vneg.f32	s15, s15
 80060aa:	4ba9      	ldr	r3, [pc, #676]	; (8006350 <update_ScurveTraj+0x2f0>)
 80060ac:	edc3 7a00 	vstr	s15, [r3]
qi=qi;
 80060b0:	4ba8      	ldr	r3, [pc, #672]	; (8006354 <update_ScurveTraj+0x2f4>)
 80060b2:	681b      	ldr	r3, [r3, #0]
 80060b4:	4aa7      	ldr	r2, [pc, #668]	; (8006354 <update_ScurveTraj+0x2f4>)
 80060b6:	6013      	str	r3, [r2, #0]
qf=qf;
 80060b8:	4ba7      	ldr	r3, [pc, #668]	; (8006358 <update_ScurveTraj+0x2f8>)
 80060ba:	681b      	ldr	r3, [r3, #0]
 80060bc:	4aa6      	ldr	r2, [pc, #664]	; (8006358 <update_ScurveTraj+0x2f8>)
 80060be:	6013      	str	r3, [r2, #0]

if (qf < qi){
 80060c0:	4ba5      	ldr	r3, [pc, #660]	; (8006358 <update_ScurveTraj+0x2f8>)
 80060c2:	ed93 7a00 	vldr	s14, [r3]
 80060c6:	4ba3      	ldr	r3, [pc, #652]	; (8006354 <update_ScurveTraj+0x2f4>)
 80060c8:	edd3 7a00 	vldr	s15, [r3]
 80060cc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80060d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80060d4:	d548      	bpl.n	8006168 <update_ScurveTraj+0x108>

    flagInv = true;
 80060d6:	4ba1      	ldr	r3, [pc, #644]	; (800635c <update_ScurveTraj+0x2fc>)
 80060d8:	2201      	movs	r2, #1
 80060da:	701a      	strb	r2, [r3, #0]

    qi = -qi;
 80060dc:	4b9d      	ldr	r3, [pc, #628]	; (8006354 <update_ScurveTraj+0x2f4>)
 80060de:	edd3 7a00 	vldr	s15, [r3]
 80060e2:	eef1 7a67 	vneg.f32	s15, s15
 80060e6:	4b9b      	ldr	r3, [pc, #620]	; (8006354 <update_ScurveTraj+0x2f4>)
 80060e8:	edc3 7a00 	vstr	s15, [r3]
    qf = -qf;
 80060ec:	4b9a      	ldr	r3, [pc, #616]	; (8006358 <update_ScurveTraj+0x2f8>)
 80060ee:	edd3 7a00 	vldr	s15, [r3]
 80060f2:	eef1 7a67 	vneg.f32	s15, s15
 80060f6:	4b98      	ldr	r3, [pc, #608]	; (8006358 <update_ScurveTraj+0x2f8>)
 80060f8:	edc3 7a00 	vstr	s15, [r3]
    vi = -vi;
 80060fc:	edd7 7a05 	vldr	s15, [r7, #20]
 8006100:	eef1 7a67 	vneg.f32	s15, s15
 8006104:	edc7 7a05 	vstr	s15, [r7, #20]
    vf = -vf;
 8006108:	edd7 7a04 	vldr	s15, [r7, #16]
 800610c:	eef1 7a67 	vneg.f32	s15, s15
 8006110:	edc7 7a04 	vstr	s15, [r7, #16]

    vmax = -vmin;
 8006114:	4b8e      	ldr	r3, [pc, #568]	; (8006350 <update_ScurveTraj+0x2f0>)
 8006116:	edd3 7a00 	vldr	s15, [r3]
 800611a:	eef1 7a67 	vneg.f32	s15, s15
 800611e:	edc7 7a03 	vstr	s15, [r7, #12]
    vmin = -vmax;
 8006122:	edd7 7a03 	vldr	s15, [r7, #12]
 8006126:	eef1 7a67 	vneg.f32	s15, s15
 800612a:	4b89      	ldr	r3, [pc, #548]	; (8006350 <update_ScurveTraj+0x2f0>)
 800612c:	edc3 7a00 	vstr	s15, [r3]
    amax = -amin;
 8006130:	4b86      	ldr	r3, [pc, #536]	; (800634c <update_ScurveTraj+0x2ec>)
 8006132:	edd3 7a00 	vldr	s15, [r3]
 8006136:	eef1 7a67 	vneg.f32	s15, s15
 800613a:	edc7 7a02 	vstr	s15, [r7, #8]
    amin = -amax;
 800613e:	edd7 7a02 	vldr	s15, [r7, #8]
 8006142:	eef1 7a67 	vneg.f32	s15, s15
 8006146:	4b81      	ldr	r3, [pc, #516]	; (800634c <update_ScurveTraj+0x2ec>)
 8006148:	edc3 7a00 	vstr	s15, [r3]
    jmax = -jmin;
 800614c:	4b7e      	ldr	r3, [pc, #504]	; (8006348 <update_ScurveTraj+0x2e8>)
 800614e:	edd3 7a00 	vldr	s15, [r3]
 8006152:	eef1 7a67 	vneg.f32	s15, s15
 8006156:	edc7 7a01 	vstr	s15, [r7, #4]
    jmin = -jmax;
 800615a:	edd7 7a01 	vldr	s15, [r7, #4]
 800615e:	eef1 7a67 	vneg.f32	s15, s15
 8006162:	4b79      	ldr	r3, [pc, #484]	; (8006348 <update_ScurveTraj+0x2e8>)
 8006164:	edc3 7a00 	vstr	s15, [r3]

}

volatile float Tjaux = MIN(sqrt(fabs(vf-vi)/jmax),amax/jmax);
 8006168:	ed97 7a04 	vldr	s14, [r7, #16]
 800616c:	edd7 7a05 	vldr	s15, [r7, #20]
 8006170:	ee77 7a67 	vsub.f32	s15, s14, s15
 8006174:	eef0 7ae7 	vabs.f32	s15, s15
 8006178:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 800617c:	edd7 7a01 	vldr	s15, [r7, #4]
 8006180:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006184:	ee86 5b07 	vdiv.f64	d5, d6, d7
 8006188:	eeb0 0b45 	vmov.f64	d0, d5
 800618c:	f00c fad0 	bl	8012730 <sqrt>
 8006190:	eeb0 6b40 	vmov.f64	d6, d0
 8006194:	edd7 5a02 	vldr	s11, [r7, #8]
 8006198:	ed97 7a01 	vldr	s14, [r7, #4]
 800619c:	eec5 7a87 	vdiv.f32	s15, s11, s14
 80061a0:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80061a4:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80061a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80061ac:	d518      	bpl.n	80061e0 <update_ScurveTraj+0x180>
 80061ae:	ed97 7a04 	vldr	s14, [r7, #16]
 80061b2:	edd7 7a05 	vldr	s15, [r7, #20]
 80061b6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80061ba:	eef0 7ae7 	vabs.f32	s15, s15
 80061be:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 80061c2:	edd7 7a01 	vldr	s15, [r7, #4]
 80061c6:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80061ca:	ee86 5b07 	vdiv.f64	d5, d6, d7
 80061ce:	eeb0 0b45 	vmov.f64	d0, d5
 80061d2:	f00c faad 	bl	8012730 <sqrt>
 80061d6:	eeb0 7b40 	vmov.f64	d7, d0
 80061da:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 80061de:	e005      	b.n	80061ec <update_ScurveTraj+0x18c>
 80061e0:	edd7 6a02 	vldr	s13, [r7, #8]
 80061e4:	ed97 7a01 	vldr	s14, [r7, #4]
 80061e8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80061ec:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24


if (Tjaux<amax/jmax){
 80061f0:	edd7 6a02 	vldr	s13, [r7, #8]
 80061f4:	edd7 7a01 	vldr	s15, [r7, #4]
 80061f8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80061fc:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8006200:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8006204:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006208:	dc00      	bgt.n	800620c <update_ScurveTraj+0x1ac>
    //if (qf-qi > Tjaux*(vi+vf)) {printf("the trajectory is feasible \n");}
    //else {printf("the trajectory is NOT \n");}
}
else if (Tjaux == amax/jmax){
 800620a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    //if (qf-qi > 0.5*(vi+vf)*(Tjaux+fabs(vi+vf)/amax)) {printf("the trajectory is feasible\n");}
    //else {printf("the trajectory is NOT feasible\n");}
}
//Phase 1: acceleration
if ((vmax-vi)*jmax < pow(amax,2)){
 800620c:	ed97 7a03 	vldr	s14, [r7, #12]
 8006210:	edd7 7a05 	vldr	s15, [r7, #20]
 8006214:	ee37 7a67 	vsub.f32	s14, s14, s15
 8006218:	edd7 7a01 	vldr	s15, [r7, #4]
 800621c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006220:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8006224:	edd7 7a02 	vldr	s15, [r7, #8]
 8006228:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800622c:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8006230:	eeb0 0b47 	vmov.f64	d0, d7
 8006234:	f00b fffc 	bl	8012230 <pow>
 8006238:	eeb0 7b40 	vmov.f64	d7, d0
 800623c:	eeb4 8bc7 	vcmpe.f64	d8, d7
 8006240:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006244:	d523      	bpl.n	800628e <update_ScurveTraj+0x22e>
    //printf("amax is NOT reached\n");

    Tj1=sqrt(fabs(vmax-vi)/jmax);
 8006246:	ed97 7a03 	vldr	s14, [r7, #12]
 800624a:	edd7 7a05 	vldr	s15, [r7, #20]
 800624e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8006252:	eef0 7ae7 	vabs.f32	s15, s15
 8006256:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 800625a:	edd7 7a01 	vldr	s15, [r7, #4]
 800625e:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006262:	ee86 5b07 	vdiv.f64	d5, d6, d7
 8006266:	eeb0 0b45 	vmov.f64	d0, d5
 800626a:	f00c fa61 	bl	8012730 <sqrt>
 800626e:	eeb0 7b40 	vmov.f64	d7, d0
 8006272:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8006276:	4b3a      	ldr	r3, [pc, #232]	; (8006360 <update_ScurveTraj+0x300>)
 8006278:	edc3 7a00 	vstr	s15, [r3]
    Ta=Tj1*2;
 800627c:	4b38      	ldr	r3, [pc, #224]	; (8006360 <update_ScurveTraj+0x300>)
 800627e:	edd3 7a00 	vldr	s15, [r3]
 8006282:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8006286:	4b37      	ldr	r3, [pc, #220]	; (8006364 <update_ScurveTraj+0x304>)
 8006288:	edc3 7a00 	vstr	s15, [r3]
 800628c:	e01a      	b.n	80062c4 <update_ScurveTraj+0x264>
}
else{
    //printf("amax is reached\n");
    Tj1=amax/jmax;
 800628e:	edd7 6a02 	vldr	s13, [r7, #8]
 8006292:	ed97 7a01 	vldr	s14, [r7, #4]
 8006296:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800629a:	4b31      	ldr	r3, [pc, #196]	; (8006360 <update_ScurveTraj+0x300>)
 800629c:	edc3 7a00 	vstr	s15, [r3]
    Ta=Tj1+(vmax-vi)/amax;
 80062a0:	ed97 7a03 	vldr	s14, [r7, #12]
 80062a4:	edd7 7a05 	vldr	s15, [r7, #20]
 80062a8:	ee77 6a67 	vsub.f32	s13, s14, s15
 80062ac:	edd7 7a02 	vldr	s15, [r7, #8]
 80062b0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80062b4:	4b2a      	ldr	r3, [pc, #168]	; (8006360 <update_ScurveTraj+0x300>)
 80062b6:	edd3 7a00 	vldr	s15, [r3]
 80062ba:	ee77 7a27 	vadd.f32	s15, s14, s15
 80062be:	4b29      	ldr	r3, [pc, #164]	; (8006364 <update_ScurveTraj+0x304>)
 80062c0:	edc3 7a00 	vstr	s15, [r3]
}

//Phase 3: Desacceleration


if ((vmax-vf)*jmax < pow(amax,2)){
 80062c4:	ed97 7a03 	vldr	s14, [r7, #12]
 80062c8:	edd7 7a04 	vldr	s15, [r7, #16]
 80062cc:	ee37 7a67 	vsub.f32	s14, s14, s15
 80062d0:	edd7 7a01 	vldr	s15, [r7, #4]
 80062d4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80062d8:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 80062dc:	edd7 7a02 	vldr	s15, [r7, #8]
 80062e0:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80062e4:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80062e8:	eeb0 0b47 	vmov.f64	d0, d7
 80062ec:	f00b ffa0 	bl	8012230 <pow>
 80062f0:	eeb0 7b40 	vmov.f64	d7, d0
 80062f4:	eeb4 8bc7 	vcmpe.f64	d8, d7
 80062f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80062fc:	d538      	bpl.n	8006370 <update_ScurveTraj+0x310>
    //printf("amin is NOT reached\n");

    Tj2=sqrt(fabs(vmax-vf)/jmax);
 80062fe:	ed97 7a03 	vldr	s14, [r7, #12]
 8006302:	edd7 7a04 	vldr	s15, [r7, #16]
 8006306:	ee77 7a67 	vsub.f32	s15, s14, s15
 800630a:	eef0 7ae7 	vabs.f32	s15, s15
 800630e:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 8006312:	edd7 7a01 	vldr	s15, [r7, #4]
 8006316:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800631a:	ee86 5b07 	vdiv.f64	d5, d6, d7
 800631e:	eeb0 0b45 	vmov.f64	d0, d5
 8006322:	f00c fa05 	bl	8012730 <sqrt>
 8006326:	eeb0 7b40 	vmov.f64	d7, d0
 800632a:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 800632e:	4b0e      	ldr	r3, [pc, #56]	; (8006368 <update_ScurveTraj+0x308>)
 8006330:	edc3 7a00 	vstr	s15, [r3]
    Td=Tj2*2;
 8006334:	4b0c      	ldr	r3, [pc, #48]	; (8006368 <update_ScurveTraj+0x308>)
 8006336:	edd3 7a00 	vldr	s15, [r3]
 800633a:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800633e:	4b0b      	ldr	r3, [pc, #44]	; (800636c <update_ScurveTraj+0x30c>)
 8006340:	edc3 7a00 	vstr	s15, [r3]
 8006344:	e02f      	b.n	80063a6 <update_ScurveTraj+0x346>
 8006346:	bf00      	nop
 8006348:	24000650 	.word	0x24000650
 800634c:	24000660 	.word	0x24000660
 8006350:	24000654 	.word	0x24000654
 8006354:	24000aa4 	.word	0x24000aa4
 8006358:	24000aa8 	.word	0x24000aa8
 800635c:	24000a74 	.word	0x24000a74
 8006360:	24000a94 	.word	0x24000a94
 8006364:	24000a88 	.word	0x24000a88
 8006368:	24000a98 	.word	0x24000a98
 800636c:	24000a8c 	.word	0x24000a8c
}
else{
    //printf("amin is reached\n");
    Tj2=amax/jmax;
 8006370:	edd7 6a02 	vldr	s13, [r7, #8]
 8006374:	ed97 7a01 	vldr	s14, [r7, #4]
 8006378:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800637c:	4ba9      	ldr	r3, [pc, #676]	; (8006624 <update_ScurveTraj+0x5c4>)
 800637e:	edc3 7a00 	vstr	s15, [r3]
    Td=Tj2+(vmax-vf)/amax;
 8006382:	ed97 7a03 	vldr	s14, [r7, #12]
 8006386:	edd7 7a04 	vldr	s15, [r7, #16]
 800638a:	ee77 6a67 	vsub.f32	s13, s14, s15
 800638e:	edd7 7a02 	vldr	s15, [r7, #8]
 8006392:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006396:	4ba3      	ldr	r3, [pc, #652]	; (8006624 <update_ScurveTraj+0x5c4>)
 8006398:	edd3 7a00 	vldr	s15, [r3]
 800639c:	ee77 7a27 	vadd.f32	s15, s14, s15
 80063a0:	4ba1      	ldr	r3, [pc, #644]	; (8006628 <update_ScurveTraj+0x5c8>)
 80063a2:	edc3 7a00 	vstr	s15, [r3]
}


Tv = (qf-qi)/vmax - Ta/2*(1+vi/vmax)-Td/2*(1+vf/vmax);
 80063a6:	4ba1      	ldr	r3, [pc, #644]	; (800662c <update_ScurveTraj+0x5cc>)
 80063a8:	ed93 7a00 	vldr	s14, [r3]
 80063ac:	4ba0      	ldr	r3, [pc, #640]	; (8006630 <update_ScurveTraj+0x5d0>)
 80063ae:	edd3 7a00 	vldr	s15, [r3]
 80063b2:	ee77 6a67 	vsub.f32	s13, s14, s15
 80063b6:	edd7 7a03 	vldr	s15, [r7, #12]
 80063ba:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80063be:	4b9d      	ldr	r3, [pc, #628]	; (8006634 <update_ScurveTraj+0x5d4>)
 80063c0:	edd3 7a00 	vldr	s15, [r3]
 80063c4:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 80063c8:	eec7 6a86 	vdiv.f32	s13, s15, s12
 80063cc:	edd7 5a05 	vldr	s11, [r7, #20]
 80063d0:	ed97 6a03 	vldr	s12, [r7, #12]
 80063d4:	eec5 7a86 	vdiv.f32	s15, s11, s12
 80063d8:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 80063dc:	ee77 7a86 	vadd.f32	s15, s15, s12
 80063e0:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80063e4:	ee37 7a67 	vsub.f32	s14, s14, s15
 80063e8:	4b8f      	ldr	r3, [pc, #572]	; (8006628 <update_ScurveTraj+0x5c8>)
 80063ea:	edd3 7a00 	vldr	s15, [r3]
 80063ee:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 80063f2:	eec7 6a86 	vdiv.f32	s13, s15, s12
 80063f6:	edd7 5a04 	vldr	s11, [r7, #16]
 80063fa:	ed97 6a03 	vldr	s12, [r7, #12]
 80063fe:	eec5 7a86 	vdiv.f32	s15, s11, s12
 8006402:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8006406:	ee77 7a86 	vadd.f32	s15, s15, s12
 800640a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800640e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8006412:	4b89      	ldr	r3, [pc, #548]	; (8006638 <update_ScurveTraj+0x5d8>)
 8006414:	edc3 7a00 	vstr	s15, [r3]

if (Tv>0){
 8006418:	4b87      	ldr	r3, [pc, #540]	; (8006638 <update_ScurveTraj+0x5d8>)
 800641a:	edd3 7a00 	vldr	s15, [r3]
 800641e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006426:	f300 8345 	bgt.w	8006ab4 <update_ScurveTraj+0xa54>
    //printf("the max velocity is reached\n");
}
else{
    //printf("CASE 2\n");
    //printf("In this case vmax is NOT reached, so Tv=0\n");
    Tj1=amax/jmax;
 800642a:	edd7 6a02 	vldr	s13, [r7, #8]
 800642e:	ed97 7a01 	vldr	s14, [r7, #4]
 8006432:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006436:	4b81      	ldr	r3, [pc, #516]	; (800663c <update_ScurveTraj+0x5dc>)
 8006438:	edc3 7a00 	vstr	s15, [r3]
    Tj2=Tj1;
 800643c:	4b7f      	ldr	r3, [pc, #508]	; (800663c <update_ScurveTraj+0x5dc>)
 800643e:	681b      	ldr	r3, [r3, #0]
 8006440:	4a78      	ldr	r2, [pc, #480]	; (8006624 <update_ScurveTraj+0x5c4>)
 8006442:	6013      	str	r3, [r2, #0]
    Tj=Tj1;
 8006444:	4b7d      	ldr	r3, [pc, #500]	; (800663c <update_ScurveTraj+0x5dc>)
 8006446:	681b      	ldr	r3, [r3, #0]
 8006448:	4a7d      	ldr	r2, [pc, #500]	; (8006640 <update_ScurveTraj+0x5e0>)
 800644a:	6013      	str	r3, [r2, #0]
    delta = (pow(amax,4)/pow(jmax,2))+2*(pow(vi,2)+pow(vf,2))+amax*(4*(qf-qi)-2*(amax/jmax)*(vi+vf));
 800644c:	edd7 7a02 	vldr	s15, [r7, #8]
 8006450:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006454:	eeb1 1b00 	vmov.f64	d1, #16	; 0x40800000  4.0
 8006458:	eeb0 0b47 	vmov.f64	d0, d7
 800645c:	f00b fee8 	bl	8012230 <pow>
 8006460:	eeb0 9b40 	vmov.f64	d9, d0
 8006464:	edd7 7a01 	vldr	s15, [r7, #4]
 8006468:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800646c:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8006470:	eeb0 0b47 	vmov.f64	d0, d7
 8006474:	f00b fedc 	bl	8012230 <pow>
 8006478:	eeb0 7b40 	vmov.f64	d7, d0
 800647c:	ee89 8b07 	vdiv.f64	d8, d9, d7
 8006480:	edd7 7a05 	vldr	s15, [r7, #20]
 8006484:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006488:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800648c:	eeb0 0b47 	vmov.f64	d0, d7
 8006490:	f00b fece 	bl	8012230 <pow>
 8006494:	eeb0 9b40 	vmov.f64	d9, d0
 8006498:	edd7 7a04 	vldr	s15, [r7, #16]
 800649c:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80064a0:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80064a4:	eeb0 0b47 	vmov.f64	d0, d7
 80064a8:	f00b fec2 	bl	8012230 <pow>
 80064ac:	eeb0 7b40 	vmov.f64	d7, d0
 80064b0:	ee39 7b07 	vadd.f64	d7, d9, d7
 80064b4:	ee37 7b07 	vadd.f64	d7, d7, d7
 80064b8:	ee38 6b07 	vadd.f64	d6, d8, d7
 80064bc:	4b5b      	ldr	r3, [pc, #364]	; (800662c <update_ScurveTraj+0x5cc>)
 80064be:	ed93 7a00 	vldr	s14, [r3]
 80064c2:	4b5b      	ldr	r3, [pc, #364]	; (8006630 <update_ScurveTraj+0x5d0>)
 80064c4:	edd3 7a00 	vldr	s15, [r3]
 80064c8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80064cc:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 80064d0:	ee27 7a87 	vmul.f32	s14, s15, s14
 80064d4:	ed97 5a02 	vldr	s10, [r7, #8]
 80064d8:	edd7 5a01 	vldr	s11, [r7, #4]
 80064dc:	eec5 7a25 	vdiv.f32	s15, s10, s11
 80064e0:	ee77 5aa7 	vadd.f32	s11, s15, s15
 80064e4:	ed97 5a05 	vldr	s10, [r7, #20]
 80064e8:	edd7 7a04 	vldr	s15, [r7, #16]
 80064ec:	ee75 7a27 	vadd.f32	s15, s10, s15
 80064f0:	ee65 7aa7 	vmul.f32	s15, s11, s15
 80064f4:	ee37 7a67 	vsub.f32	s14, s14, s15
 80064f8:	edd7 7a02 	vldr	s15, [r7, #8]
 80064fc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006500:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006504:	ee36 7b07 	vadd.f64	d7, d6, d7
 8006508:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 800650c:	4b4d      	ldr	r3, [pc, #308]	; (8006644 <update_ScurveTraj+0x5e4>)
 800650e:	edc3 7a00 	vstr	s15, [r3]
    Ta=((pow(amax,2)/jmax)-2*vi+sqrt(delta))/(2*amax);
 8006512:	edd7 7a02 	vldr	s15, [r7, #8]
 8006516:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800651a:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800651e:	eeb0 0b47 	vmov.f64	d0, d7
 8006522:	f00b fe85 	bl	8012230 <pow>
 8006526:	eeb0 5b40 	vmov.f64	d5, d0
 800652a:	edd7 7a01 	vldr	s15, [r7, #4]
 800652e:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006532:	ee85 6b07 	vdiv.f64	d6, d5, d7
 8006536:	edd7 7a05 	vldr	s15, [r7, #20]
 800653a:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800653e:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006542:	ee36 8b47 	vsub.f64	d8, d6, d7
 8006546:	4b3f      	ldr	r3, [pc, #252]	; (8006644 <update_ScurveTraj+0x5e4>)
 8006548:	edd3 7a00 	vldr	s15, [r3]
 800654c:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006550:	eeb0 0b47 	vmov.f64	d0, d7
 8006554:	f00c f8ec 	bl	8012730 <sqrt>
 8006558:	eeb0 7b40 	vmov.f64	d7, d0
 800655c:	ee38 5b07 	vadd.f64	d5, d8, d7
 8006560:	edd7 7a02 	vldr	s15, [r7, #8]
 8006564:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8006568:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 800656c:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006570:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8006574:	4b2f      	ldr	r3, [pc, #188]	; (8006634 <update_ScurveTraj+0x5d4>)
 8006576:	edc3 7a00 	vstr	s15, [r3]
    Td=((pow(amax,2)/jmax)-2*vf+sqrt(delta))/(2*amax);
 800657a:	edd7 7a02 	vldr	s15, [r7, #8]
 800657e:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006582:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8006586:	eeb0 0b47 	vmov.f64	d0, d7
 800658a:	f00b fe51 	bl	8012230 <pow>
 800658e:	eeb0 5b40 	vmov.f64	d5, d0
 8006592:	edd7 7a01 	vldr	s15, [r7, #4]
 8006596:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800659a:	ee85 6b07 	vdiv.f64	d6, d5, d7
 800659e:	edd7 7a04 	vldr	s15, [r7, #16]
 80065a2:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80065a6:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80065aa:	ee36 8b47 	vsub.f64	d8, d6, d7
 80065ae:	4b25      	ldr	r3, [pc, #148]	; (8006644 <update_ScurveTraj+0x5e4>)
 80065b0:	edd3 7a00 	vldr	s15, [r3]
 80065b4:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80065b8:	eeb0 0b47 	vmov.f64	d0, d7
 80065bc:	f00c f8b8 	bl	8012730 <sqrt>
 80065c0:	eeb0 7b40 	vmov.f64	d7, d0
 80065c4:	ee38 5b07 	vadd.f64	d5, d8, d7
 80065c8:	edd7 7a02 	vldr	s15, [r7, #8]
 80065cc:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80065d0:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 80065d4:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80065d8:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 80065dc:	4b12      	ldr	r3, [pc, #72]	; (8006628 <update_ScurveTraj+0x5c8>)
 80065de:	edc3 7a00 	vstr	s15, [r3]
    Tv=0;
 80065e2:	4b15      	ldr	r3, [pc, #84]	; (8006638 <update_ScurveTraj+0x5d8>)
 80065e4:	f04f 0200 	mov.w	r2, #0
 80065e8:	601a      	str	r2, [r3, #0]


    if (Ta<2*Tj || Td<2*Tj){
 80065ea:	4b15      	ldr	r3, [pc, #84]	; (8006640 <update_ScurveTraj+0x5e0>)
 80065ec:	edd3 7a00 	vldr	s15, [r3]
 80065f0:	ee37 7aa7 	vadd.f32	s14, s15, s15
 80065f4:	4b0f      	ldr	r3, [pc, #60]	; (8006634 <update_ScurveTraj+0x5d4>)
 80065f6:	edd3 7a00 	vldr	s15, [r3]
 80065fa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80065fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006602:	f300 822a 	bgt.w	8006a5a <update_ScurveTraj+0x9fa>
 8006606:	4b0e      	ldr	r3, [pc, #56]	; (8006640 <update_ScurveTraj+0x5e0>)
 8006608:	edd3 7a00 	vldr	s15, [r3]
 800660c:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8006610:	4b05      	ldr	r3, [pc, #20]	; (8006628 <update_ScurveTraj+0x5c8>)
 8006612:	edd3 7a00 	vldr	s15, [r3]
 8006616:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800661a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800661e:	f300 821c 	bgt.w	8006a5a <update_ScurveTraj+0x9fa>
        }
    }

}

}
 8006622:	e247      	b.n	8006ab4 <update_ScurveTraj+0xa54>
 8006624:	24000a98 	.word	0x24000a98
 8006628:	24000a8c 	.word	0x24000a8c
 800662c:	24000aa8 	.word	0x24000aa8
 8006630:	24000aa4 	.word	0x24000aa4
 8006634:	24000a88 	.word	0x24000a88
 8006638:	24000a90 	.word	0x24000a90
 800663c:	24000a94 	.word	0x24000a94
 8006640:	24000a9c 	.word	0x24000a9c
 8006644:	24000aa0 	.word	0x24000aa0
            amax=amax*0.99;
 8006648:	edd7 7a02 	vldr	s15, [r7, #8]
 800664c:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006650:	ed9f 6bb7 	vldr	d6, [pc, #732]	; 8006930 <update_ScurveTraj+0x8d0>
 8006654:	ee27 7b06 	vmul.f64	d7, d7, d6
 8006658:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 800665c:	edc7 7a02 	vstr	s15, [r7, #8]
            Tj=amax/jmax;
 8006660:	edd7 6a02 	vldr	s13, [r7, #8]
 8006664:	ed97 7a01 	vldr	s14, [r7, #4]
 8006668:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800666c:	4bb2      	ldr	r3, [pc, #712]	; (8006938 <update_ScurveTraj+0x8d8>)
 800666e:	edc3 7a00 	vstr	s15, [r3]
            delta = (pow(amax,4)/pow(jmax,2))+2*(pow(vi,2)+pow(vf,2))+amax*(4*(qf-qi)-2*(amax/jmax)*(vi+vf));
 8006672:	edd7 7a02 	vldr	s15, [r7, #8]
 8006676:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800667a:	eeb1 1b00 	vmov.f64	d1, #16	; 0x40800000  4.0
 800667e:	eeb0 0b47 	vmov.f64	d0, d7
 8006682:	f00b fdd5 	bl	8012230 <pow>
 8006686:	eeb0 9b40 	vmov.f64	d9, d0
 800668a:	edd7 7a01 	vldr	s15, [r7, #4]
 800668e:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006692:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8006696:	eeb0 0b47 	vmov.f64	d0, d7
 800669a:	f00b fdc9 	bl	8012230 <pow>
 800669e:	eeb0 7b40 	vmov.f64	d7, d0
 80066a2:	ee89 8b07 	vdiv.f64	d8, d9, d7
 80066a6:	edd7 7a05 	vldr	s15, [r7, #20]
 80066aa:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80066ae:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80066b2:	eeb0 0b47 	vmov.f64	d0, d7
 80066b6:	f00b fdbb 	bl	8012230 <pow>
 80066ba:	eeb0 9b40 	vmov.f64	d9, d0
 80066be:	edd7 7a04 	vldr	s15, [r7, #16]
 80066c2:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80066c6:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80066ca:	eeb0 0b47 	vmov.f64	d0, d7
 80066ce:	f00b fdaf 	bl	8012230 <pow>
 80066d2:	eeb0 7b40 	vmov.f64	d7, d0
 80066d6:	ee39 7b07 	vadd.f64	d7, d9, d7
 80066da:	ee37 7b07 	vadd.f64	d7, d7, d7
 80066de:	ee38 6b07 	vadd.f64	d6, d8, d7
 80066e2:	4b96      	ldr	r3, [pc, #600]	; (800693c <update_ScurveTraj+0x8dc>)
 80066e4:	ed93 7a00 	vldr	s14, [r3]
 80066e8:	4b95      	ldr	r3, [pc, #596]	; (8006940 <update_ScurveTraj+0x8e0>)
 80066ea:	edd3 7a00 	vldr	s15, [r3]
 80066ee:	ee77 7a67 	vsub.f32	s15, s14, s15
 80066f2:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 80066f6:	ee27 7a87 	vmul.f32	s14, s15, s14
 80066fa:	ed97 5a02 	vldr	s10, [r7, #8]
 80066fe:	edd7 5a01 	vldr	s11, [r7, #4]
 8006702:	eec5 7a25 	vdiv.f32	s15, s10, s11
 8006706:	ee77 5aa7 	vadd.f32	s11, s15, s15
 800670a:	ed97 5a05 	vldr	s10, [r7, #20]
 800670e:	edd7 7a04 	vldr	s15, [r7, #16]
 8006712:	ee75 7a27 	vadd.f32	s15, s10, s15
 8006716:	ee65 7aa7 	vmul.f32	s15, s11, s15
 800671a:	ee37 7a67 	vsub.f32	s14, s14, s15
 800671e:	edd7 7a02 	vldr	s15, [r7, #8]
 8006722:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006726:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800672a:	ee36 7b07 	vadd.f64	d7, d6, d7
 800672e:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8006732:	4b84      	ldr	r3, [pc, #528]	; (8006944 <update_ScurveTraj+0x8e4>)
 8006734:	edc3 7a00 	vstr	s15, [r3]
            Ta=((pow(amax,2)/jmax)-2*vi+sqrt(delta))/(2*amax);
 8006738:	edd7 7a02 	vldr	s15, [r7, #8]
 800673c:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006740:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8006744:	eeb0 0b47 	vmov.f64	d0, d7
 8006748:	f00b fd72 	bl	8012230 <pow>
 800674c:	eeb0 5b40 	vmov.f64	d5, d0
 8006750:	edd7 7a01 	vldr	s15, [r7, #4]
 8006754:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006758:	ee85 6b07 	vdiv.f64	d6, d5, d7
 800675c:	edd7 7a05 	vldr	s15, [r7, #20]
 8006760:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8006764:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006768:	ee36 8b47 	vsub.f64	d8, d6, d7
 800676c:	4b75      	ldr	r3, [pc, #468]	; (8006944 <update_ScurveTraj+0x8e4>)
 800676e:	edd3 7a00 	vldr	s15, [r3]
 8006772:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006776:	eeb0 0b47 	vmov.f64	d0, d7
 800677a:	f00b ffd9 	bl	8012730 <sqrt>
 800677e:	eeb0 7b40 	vmov.f64	d7, d0
 8006782:	ee38 5b07 	vadd.f64	d5, d8, d7
 8006786:	edd7 7a02 	vldr	s15, [r7, #8]
 800678a:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800678e:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 8006792:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006796:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 800679a:	4b6b      	ldr	r3, [pc, #428]	; (8006948 <update_ScurveTraj+0x8e8>)
 800679c:	edc3 7a00 	vstr	s15, [r3]
            Td=((pow(amax,2)/jmax)-2*vf+sqrt(delta))/(2*amax);
 80067a0:	edd7 7a02 	vldr	s15, [r7, #8]
 80067a4:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80067a8:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80067ac:	eeb0 0b47 	vmov.f64	d0, d7
 80067b0:	f00b fd3e 	bl	8012230 <pow>
 80067b4:	eeb0 5b40 	vmov.f64	d5, d0
 80067b8:	edd7 7a01 	vldr	s15, [r7, #4]
 80067bc:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80067c0:	ee85 6b07 	vdiv.f64	d6, d5, d7
 80067c4:	edd7 7a04 	vldr	s15, [r7, #16]
 80067c8:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80067cc:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80067d0:	ee36 8b47 	vsub.f64	d8, d6, d7
 80067d4:	4b5b      	ldr	r3, [pc, #364]	; (8006944 <update_ScurveTraj+0x8e4>)
 80067d6:	edd3 7a00 	vldr	s15, [r3]
 80067da:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80067de:	eeb0 0b47 	vmov.f64	d0, d7
 80067e2:	f00b ffa5 	bl	8012730 <sqrt>
 80067e6:	eeb0 7b40 	vmov.f64	d7, d0
 80067ea:	ee38 5b07 	vadd.f64	d5, d8, d7
 80067ee:	edd7 7a02 	vldr	s15, [r7, #8]
 80067f2:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80067f6:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 80067fa:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80067fe:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8006802:	4b52      	ldr	r3, [pc, #328]	; (800694c <update_ScurveTraj+0x8ec>)
 8006804:	edc3 7a00 	vstr	s15, [r3]
            if (Ta<0){
 8006808:	4b4f      	ldr	r3, [pc, #316]	; (8006948 <update_ScurveTraj+0x8e8>)
 800680a:	edd3 7a00 	vldr	s15, [r3]
 800680e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006812:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006816:	f140 8081 	bpl.w	800691c <update_ScurveTraj+0x8bc>
                Ta=0;
 800681a:	4b4b      	ldr	r3, [pc, #300]	; (8006948 <update_ScurveTraj+0x8e8>)
 800681c:	f04f 0200 	mov.w	r2, #0
 8006820:	601a      	str	r2, [r3, #0]
                Tj1=0;
 8006822:	4b4b      	ldr	r3, [pc, #300]	; (8006950 <update_ScurveTraj+0x8f0>)
 8006824:	f04f 0200 	mov.w	r2, #0
 8006828:	601a      	str	r2, [r3, #0]
                Td=2*((qf-qi)/(vf+vi));
 800682a:	4b44      	ldr	r3, [pc, #272]	; (800693c <update_ScurveTraj+0x8dc>)
 800682c:	ed93 7a00 	vldr	s14, [r3]
 8006830:	4b43      	ldr	r3, [pc, #268]	; (8006940 <update_ScurveTraj+0x8e0>)
 8006832:	edd3 7a00 	vldr	s15, [r3]
 8006836:	ee77 6a67 	vsub.f32	s13, s14, s15
 800683a:	ed97 7a04 	vldr	s14, [r7, #16]
 800683e:	edd7 7a05 	vldr	s15, [r7, #20]
 8006842:	ee37 7a27 	vadd.f32	s14, s14, s15
 8006846:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800684a:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800684e:	4b3f      	ldr	r3, [pc, #252]	; (800694c <update_ScurveTraj+0x8ec>)
 8006850:	edc3 7a00 	vstr	s15, [r3]
                Tj2=(jmax*(qf-qi)-sqrt(jmax*(jmax*(pow(qf-qi,2))+pow(vf+vi,2)*(vf-vi))))/(jmax*(vf+vi));
 8006854:	4b39      	ldr	r3, [pc, #228]	; (800693c <update_ScurveTraj+0x8dc>)
 8006856:	ed93 7a00 	vldr	s14, [r3]
 800685a:	4b39      	ldr	r3, [pc, #228]	; (8006940 <update_ScurveTraj+0x8e0>)
 800685c:	edd3 7a00 	vldr	s15, [r3]
 8006860:	ee37 7a67 	vsub.f32	s14, s14, s15
 8006864:	edd7 7a01 	vldr	s15, [r7, #4]
 8006868:	ee67 7a27 	vmul.f32	s15, s14, s15
 800686c:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8006870:	edd7 7a01 	vldr	s15, [r7, #4]
 8006874:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8006878:	edd7 7a01 	vldr	s15, [r7, #4]
 800687c:	eeb7 aae7 	vcvt.f64.f32	d10, s15
 8006880:	4b2e      	ldr	r3, [pc, #184]	; (800693c <update_ScurveTraj+0x8dc>)
 8006882:	ed93 7a00 	vldr	s14, [r3]
 8006886:	4b2e      	ldr	r3, [pc, #184]	; (8006940 <update_ScurveTraj+0x8e0>)
 8006888:	edd3 7a00 	vldr	s15, [r3]
 800688c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8006890:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006894:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8006898:	eeb0 0b47 	vmov.f64	d0, d7
 800689c:	f00b fcc8 	bl	8012230 <pow>
 80068a0:	eeb0 7b40 	vmov.f64	d7, d0
 80068a4:	ee2a ab07 	vmul.f64	d10, d10, d7
 80068a8:	ed97 7a04 	vldr	s14, [r7, #16]
 80068ac:	edd7 7a05 	vldr	s15, [r7, #20]
 80068b0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80068b4:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80068b8:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80068bc:	eeb0 0b47 	vmov.f64	d0, d7
 80068c0:	f00b fcb6 	bl	8012230 <pow>
 80068c4:	eeb0 6b40 	vmov.f64	d6, d0
 80068c8:	ed97 7a04 	vldr	s14, [r7, #16]
 80068cc:	edd7 7a05 	vldr	s15, [r7, #20]
 80068d0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80068d4:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80068d8:	ee26 7b07 	vmul.f64	d7, d6, d7
 80068dc:	ee3a 7b07 	vadd.f64	d7, d10, d7
 80068e0:	ee29 7b07 	vmul.f64	d7, d9, d7
 80068e4:	eeb0 0b47 	vmov.f64	d0, d7
 80068e8:	f00b ff22 	bl	8012730 <sqrt>
 80068ec:	eeb0 7b40 	vmov.f64	d7, d0
 80068f0:	ee38 5b47 	vsub.f64	d5, d8, d7
 80068f4:	ed97 7a04 	vldr	s14, [r7, #16]
 80068f8:	edd7 7a05 	vldr	s15, [r7, #20]
 80068fc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8006900:	edd7 7a01 	vldr	s15, [r7, #4]
 8006904:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006908:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 800690c:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006910:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8006914:	4b0f      	ldr	r3, [pc, #60]	; (8006954 <update_ScurveTraj+0x8f4>)
 8006916:	edc3 7a00 	vstr	s15, [r3]
                break;
 800691a:	e0cb      	b.n	8006ab4 <update_ScurveTraj+0xa54>
            if (Td<0){
 800691c:	4b0b      	ldr	r3, [pc, #44]	; (800694c <update_ScurveTraj+0x8ec>)
 800691e:	edd3 7a00 	vldr	s15, [r3]
 8006922:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006926:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800692a:	d415      	bmi.n	8006958 <update_ScurveTraj+0x8f8>
 800692c:	e095      	b.n	8006a5a <update_ScurveTraj+0x9fa>
 800692e:	bf00      	nop
 8006930:	7ae147ae 	.word	0x7ae147ae
 8006934:	3fefae14 	.word	0x3fefae14
 8006938:	24000a9c 	.word	0x24000a9c
 800693c:	24000aa8 	.word	0x24000aa8
 8006940:	24000aa4 	.word	0x24000aa4
 8006944:	24000aa0 	.word	0x24000aa0
 8006948:	24000a88 	.word	0x24000a88
 800694c:	24000a8c 	.word	0x24000a8c
 8006950:	24000a94 	.word	0x24000a94
 8006954:	24000a98 	.word	0x24000a98
                Td=0;
 8006958:	4b59      	ldr	r3, [pc, #356]	; (8006ac0 <update_ScurveTraj+0xa60>)
 800695a:	f04f 0200 	mov.w	r2, #0
 800695e:	601a      	str	r2, [r3, #0]
                Ta=2*((qf-qi)/(vf+vi));
 8006960:	4b58      	ldr	r3, [pc, #352]	; (8006ac4 <update_ScurveTraj+0xa64>)
 8006962:	ed93 7a00 	vldr	s14, [r3]
 8006966:	4b58      	ldr	r3, [pc, #352]	; (8006ac8 <update_ScurveTraj+0xa68>)
 8006968:	edd3 7a00 	vldr	s15, [r3]
 800696c:	ee77 6a67 	vsub.f32	s13, s14, s15
 8006970:	ed97 7a04 	vldr	s14, [r7, #16]
 8006974:	edd7 7a05 	vldr	s15, [r7, #20]
 8006978:	ee37 7a27 	vadd.f32	s14, s14, s15
 800697c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006980:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8006984:	4b51      	ldr	r3, [pc, #324]	; (8006acc <update_ScurveTraj+0xa6c>)
 8006986:	edc3 7a00 	vstr	s15, [r3]
                Tj1=(jmax*(qf-qi)-sqrt(jmax*(jmax*(pow(qf-qi,2))-pow(vf+vi,2)*(vf-vi))))/(jmax*(vf+vi));
 800698a:	4b4e      	ldr	r3, [pc, #312]	; (8006ac4 <update_ScurveTraj+0xa64>)
 800698c:	ed93 7a00 	vldr	s14, [r3]
 8006990:	4b4d      	ldr	r3, [pc, #308]	; (8006ac8 <update_ScurveTraj+0xa68>)
 8006992:	edd3 7a00 	vldr	s15, [r3]
 8006996:	ee37 7a67 	vsub.f32	s14, s14, s15
 800699a:	edd7 7a01 	vldr	s15, [r7, #4]
 800699e:	ee67 7a27 	vmul.f32	s15, s14, s15
 80069a2:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 80069a6:	edd7 7a01 	vldr	s15, [r7, #4]
 80069aa:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 80069ae:	edd7 7a01 	vldr	s15, [r7, #4]
 80069b2:	eeb7 aae7 	vcvt.f64.f32	d10, s15
 80069b6:	4b43      	ldr	r3, [pc, #268]	; (8006ac4 <update_ScurveTraj+0xa64>)
 80069b8:	ed93 7a00 	vldr	s14, [r3]
 80069bc:	4b42      	ldr	r3, [pc, #264]	; (8006ac8 <update_ScurveTraj+0xa68>)
 80069be:	edd3 7a00 	vldr	s15, [r3]
 80069c2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80069c6:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80069ca:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80069ce:	eeb0 0b47 	vmov.f64	d0, d7
 80069d2:	f00b fc2d 	bl	8012230 <pow>
 80069d6:	eeb0 7b40 	vmov.f64	d7, d0
 80069da:	ee2a ab07 	vmul.f64	d10, d10, d7
 80069de:	ed97 7a04 	vldr	s14, [r7, #16]
 80069e2:	edd7 7a05 	vldr	s15, [r7, #20]
 80069e6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80069ea:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80069ee:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80069f2:	eeb0 0b47 	vmov.f64	d0, d7
 80069f6:	f00b fc1b 	bl	8012230 <pow>
 80069fa:	eeb0 6b40 	vmov.f64	d6, d0
 80069fe:	ed97 7a04 	vldr	s14, [r7, #16]
 8006a02:	edd7 7a05 	vldr	s15, [r7, #20]
 8006a06:	ee77 7a67 	vsub.f32	s15, s14, s15
 8006a0a:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006a0e:	ee26 7b07 	vmul.f64	d7, d6, d7
 8006a12:	ee3a 7b47 	vsub.f64	d7, d10, d7
 8006a16:	ee29 7b07 	vmul.f64	d7, d9, d7
 8006a1a:	eeb0 0b47 	vmov.f64	d0, d7
 8006a1e:	f00b fe87 	bl	8012730 <sqrt>
 8006a22:	eeb0 7b40 	vmov.f64	d7, d0
 8006a26:	ee38 5b47 	vsub.f64	d5, d8, d7
 8006a2a:	ed97 7a04 	vldr	s14, [r7, #16]
 8006a2e:	edd7 7a05 	vldr	s15, [r7, #20]
 8006a32:	ee37 7a27 	vadd.f32	s14, s14, s15
 8006a36:	edd7 7a01 	vldr	s15, [r7, #4]
 8006a3a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006a3e:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 8006a42:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006a46:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8006a4a:	4b21      	ldr	r3, [pc, #132]	; (8006ad0 <update_ScurveTraj+0xa70>)
 8006a4c:	edc3 7a00 	vstr	s15, [r3]
                Tj2=0;
 8006a50:	4b20      	ldr	r3, [pc, #128]	; (8006ad4 <update_ScurveTraj+0xa74>)
 8006a52:	f04f 0200 	mov.w	r2, #0
 8006a56:	601a      	str	r2, [r3, #0]
                break;
 8006a58:	e02c      	b.n	8006ab4 <update_ScurveTraj+0xa54>
        while (!(Ta>2*Tj && Td>2*Tj)){
 8006a5a:	4b1f      	ldr	r3, [pc, #124]	; (8006ad8 <update_ScurveTraj+0xa78>)
 8006a5c:	edd3 7a00 	vldr	s15, [r3]
 8006a60:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8006a64:	4b19      	ldr	r3, [pc, #100]	; (8006acc <update_ScurveTraj+0xa6c>)
 8006a66:	edd3 7a00 	vldr	s15, [r3]
 8006a6a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8006a6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006a72:	bf4c      	ite	mi
 8006a74:	2301      	movmi	r3, #1
 8006a76:	2300      	movpl	r3, #0
 8006a78:	b2db      	uxtb	r3, r3
 8006a7a:	f083 0301 	eor.w	r3, r3, #1
 8006a7e:	b2db      	uxtb	r3, r3
 8006a80:	2b00      	cmp	r3, #0
 8006a82:	f47f ade1 	bne.w	8006648 <update_ScurveTraj+0x5e8>
 8006a86:	4b14      	ldr	r3, [pc, #80]	; (8006ad8 <update_ScurveTraj+0xa78>)
 8006a88:	edd3 7a00 	vldr	s15, [r3]
 8006a8c:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8006a90:	4b0b      	ldr	r3, [pc, #44]	; (8006ac0 <update_ScurveTraj+0xa60>)
 8006a92:	edd3 7a00 	vldr	s15, [r3]
 8006a96:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8006a9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006a9e:	bf4c      	ite	mi
 8006aa0:	2301      	movmi	r3, #1
 8006aa2:	2300      	movpl	r3, #0
 8006aa4:	b2db      	uxtb	r3, r3
 8006aa6:	f083 0301 	eor.w	r3, r3, #1
 8006aaa:	b2db      	uxtb	r3, r3
 8006aac:	2b00      	cmp	r3, #0
 8006aae:	f47f adcb 	bne.w	8006648 <update_ScurveTraj+0x5e8>
}
 8006ab2:	e7ff      	b.n	8006ab4 <update_ScurveTraj+0xa54>
 8006ab4:	bf00      	nop
 8006ab6:	3728      	adds	r7, #40	; 0x28
 8006ab8:	46bd      	mov	sp, r7
 8006aba:	ecbd 8b06 	vpop	{d8-d10}
 8006abe:	bd80      	pop	{r7, pc}
 8006ac0:	24000a8c 	.word	0x24000a8c
 8006ac4:	24000aa8 	.word	0x24000aa8
 8006ac8:	24000aa4 	.word	0x24000aa4
 8006acc:	24000a88 	.word	0x24000a88
 8006ad0:	24000a94 	.word	0x24000a94
 8006ad4:	24000a98 	.word	0x24000a98
 8006ad8:	24000a9c 	.word	0x24000a9c
 8006adc:	00000000 	.word	0x00000000

08006ae0 <SetPerfilTimers>:


void SetPerfilTimers(double omeg1, double omeg2, double omeg3) {	// velAng en rpm
 8006ae0:	b480      	push	{r7}
 8006ae2:	b089      	sub	sp, #36	; 0x24
 8006ae4:	af00      	add	r7, sp, #0
 8006ae6:	ed87 0b04 	vstr	d0, [r7, #16]
 8006aea:	ed87 1b02 	vstr	d1, [r7, #8]
 8006aee:	ed87 2b00 	vstr	d2, [r7]
	 *   Funcion que configura el PWM del timer 12,13 14, para que el motor vaya a la
	 *   velocidad deseada.
	 *   Entrada: velocidad Angular de cada eslabon, en rad/s.
	 ----------------------------------------------------------------------- */

		rpm1 = (omeg1*((60.00)/(2.00*pi)));
 8006af2:	ed97 7b04 	vldr	d7, [r7, #16]
 8006af6:	ed9f 6b8c 	vldr	d6, [pc, #560]	; 8006d28 <SetPerfilTimers+0x248>
 8006afa:	ee27 7b06 	vmul.f64	d7, d7, d6
 8006afe:	4b92      	ldr	r3, [pc, #584]	; (8006d48 <SetPerfilTimers+0x268>)
 8006b00:	ed83 7b00 	vstr	d7, [r3]
		rpm2 = (omeg2*((60.00)/(2.00*pi)));
 8006b04:	ed97 7b02 	vldr	d7, [r7, #8]
 8006b08:	ed9f 6b87 	vldr	d6, [pc, #540]	; 8006d28 <SetPerfilTimers+0x248>
 8006b0c:	ee27 7b06 	vmul.f64	d7, d7, d6
 8006b10:	4b8e      	ldr	r3, [pc, #568]	; (8006d4c <SetPerfilTimers+0x26c>)
 8006b12:	ed83 7b00 	vstr	d7, [r3]
		rpm3 = (omeg3*((60.00)/(2.00*pi)));
 8006b16:	ed97 7b00 	vldr	d7, [r7]
 8006b1a:	ed9f 6b83 	vldr	d6, [pc, #524]	; 8006d28 <SetPerfilTimers+0x248>
 8006b1e:	ee27 7b06 	vmul.f64	d7, d7, d6
 8006b22:	4b8b      	ldr	r3, [pc, #556]	; (8006d50 <SetPerfilTimers+0x270>)
 8006b24:	ed83 7b00 	vstr	d7, [r3]
		if(rpm1<=0.1){
 8006b28:	4b87      	ldr	r3, [pc, #540]	; (8006d48 <SetPerfilTimers+0x268>)
 8006b2a:	ed93 7b00 	vldr	d7, [r3]
 8006b2e:	ed9f 6b80 	vldr	d6, [pc, #512]	; 8006d30 <SetPerfilTimers+0x250>
 8006b32:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8006b36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b3a:	d805      	bhi.n	8006b48 <SetPerfilTimers+0x68>
			rpm1=0.1;
 8006b3c:	4982      	ldr	r1, [pc, #520]	; (8006d48 <SetPerfilTimers+0x268>)
 8006b3e:	a37c      	add	r3, pc, #496	; (adr r3, 8006d30 <SetPerfilTimers+0x250>)
 8006b40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b44:	e9c1 2300 	strd	r2, r3, [r1]
		}
		if(rpm2<=0.1){
 8006b48:	4b80      	ldr	r3, [pc, #512]	; (8006d4c <SetPerfilTimers+0x26c>)
 8006b4a:	ed93 7b00 	vldr	d7, [r3]
 8006b4e:	ed9f 6b78 	vldr	d6, [pc, #480]	; 8006d30 <SetPerfilTimers+0x250>
 8006b52:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8006b56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b5a:	d805      	bhi.n	8006b68 <SetPerfilTimers+0x88>
			rpm2=0.1;
 8006b5c:	497b      	ldr	r1, [pc, #492]	; (8006d4c <SetPerfilTimers+0x26c>)
 8006b5e:	a374      	add	r3, pc, #464	; (adr r3, 8006d30 <SetPerfilTimers+0x250>)
 8006b60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b64:	e9c1 2300 	strd	r2, r3, [r1]
		}
		if(rpm3<=0.1){
 8006b68:	4b79      	ldr	r3, [pc, #484]	; (8006d50 <SetPerfilTimers+0x270>)
 8006b6a:	ed93 7b00 	vldr	d7, [r3]
 8006b6e:	ed9f 6b70 	vldr	d6, [pc, #448]	; 8006d30 <SetPerfilTimers+0x250>
 8006b72:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8006b76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b7a:	d805      	bhi.n	8006b88 <SetPerfilTimers+0xa8>
			rpm3=0.1;
 8006b7c:	4974      	ldr	r1, [pc, #464]	; (8006d50 <SetPerfilTimers+0x270>)
 8006b7e:	a36c      	add	r3, pc, #432	; (adr r3, 8006d30 <SetPerfilTimers+0x250>)
 8006b80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b84:	e9c1 2300 	strd	r2, r3, [r1]
		}


		periodoM[0] = (((FCL * 60.00) / ((double)rpm1 * ((double)(TIM12->PSC) + 1.00) * STEPREV)) - 1.00);	//Fpwm = 64M / ((ARR+1)*(PSC+1)
 8006b88:	4b72      	ldr	r3, [pc, #456]	; (8006d54 <SetPerfilTimers+0x274>)
 8006b8a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006b8c:	ee07 3a90 	vmov	s15, r3
 8006b90:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8006b94:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006b98:	ee37 6b06 	vadd.f64	d6, d7, d6
 8006b9c:	4b6a      	ldr	r3, [pc, #424]	; (8006d48 <SetPerfilTimers+0x268>)
 8006b9e:	ed93 7b00 	vldr	d7, [r3]
 8006ba2:	ee26 7b07 	vmul.f64	d7, d6, d7
 8006ba6:	ed9f 6b64 	vldr	d6, [pc, #400]	; 8006d38 <SetPerfilTimers+0x258>
 8006baa:	ee27 6b06 	vmul.f64	d6, d7, d6
 8006bae:	ed9f 5b64 	vldr	d5, [pc, #400]	; 8006d40 <SetPerfilTimers+0x260>
 8006bb2:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006bb6:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006bba:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006bbe:	4b66      	ldr	r3, [pc, #408]	; (8006d58 <SetPerfilTimers+0x278>)
 8006bc0:	ed83 7b00 	vstr	d7, [r3]
		periodoM[1] = (((FCL * 60.00) / ((double)rpm2 * ((double)(TIM13->PSC) + 1.00) * STEPREV)) - 1.00);
 8006bc4:	4b65      	ldr	r3, [pc, #404]	; (8006d5c <SetPerfilTimers+0x27c>)
 8006bc6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006bc8:	ee07 3a90 	vmov	s15, r3
 8006bcc:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8006bd0:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006bd4:	ee37 6b06 	vadd.f64	d6, d7, d6
 8006bd8:	4b5c      	ldr	r3, [pc, #368]	; (8006d4c <SetPerfilTimers+0x26c>)
 8006bda:	ed93 7b00 	vldr	d7, [r3]
 8006bde:	ee26 7b07 	vmul.f64	d7, d6, d7
 8006be2:	ed9f 6b55 	vldr	d6, [pc, #340]	; 8006d38 <SetPerfilTimers+0x258>
 8006be6:	ee27 6b06 	vmul.f64	d6, d7, d6
 8006bea:	ed9f 5b55 	vldr	d5, [pc, #340]	; 8006d40 <SetPerfilTimers+0x260>
 8006bee:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006bf2:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006bf6:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006bfa:	4b57      	ldr	r3, [pc, #348]	; (8006d58 <SetPerfilTimers+0x278>)
 8006bfc:	ed83 7b02 	vstr	d7, [r3, #8]
		periodoM[2] = (((FCL * 60.00) / ((double)rpm3 * ((double)(TIM14->PSC) + 1.00) * STEPREV)) - 1.00);
 8006c00:	4b57      	ldr	r3, [pc, #348]	; (8006d60 <SetPerfilTimers+0x280>)
 8006c02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006c04:	ee07 3a90 	vmov	s15, r3
 8006c08:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8006c0c:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006c10:	ee37 6b06 	vadd.f64	d6, d7, d6
 8006c14:	4b4e      	ldr	r3, [pc, #312]	; (8006d50 <SetPerfilTimers+0x270>)
 8006c16:	ed93 7b00 	vldr	d7, [r3]
 8006c1a:	ee26 7b07 	vmul.f64	d7, d6, d7
 8006c1e:	ed9f 6b46 	vldr	d6, [pc, #280]	; 8006d38 <SetPerfilTimers+0x258>
 8006c22:	ee27 6b06 	vmul.f64	d6, d7, d6
 8006c26:	ed9f 5b46 	vldr	d5, [pc, #280]	; 8006d40 <SetPerfilTimers+0x260>
 8006c2a:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006c2e:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006c32:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006c36:	4b48      	ldr	r3, [pc, #288]	; (8006d58 <SetPerfilTimers+0x278>)
 8006c38:	ed83 7b04 	vstr	d7, [r3, #16]


		// Calculo el error por casteo a int, y cuando supero la unidad, lo compenzo --------------
		for (int i = 0; i < 3; ++i) {
 8006c3c:	2300      	movs	r3, #0
 8006c3e:	61fb      	str	r3, [r7, #28]
 8006c40:	e0ad      	b.n	8006d9e <SetPerfilTimers+0x2be>
			ErrorPeriodo[i] = periodoM[i] - (double) ((int32_t) periodoM[i]);
 8006c42:	4a45      	ldr	r2, [pc, #276]	; (8006d58 <SetPerfilTimers+0x278>)
 8006c44:	69fb      	ldr	r3, [r7, #28]
 8006c46:	00db      	lsls	r3, r3, #3
 8006c48:	4413      	add	r3, r2
 8006c4a:	ed93 6b00 	vldr	d6, [r3]
 8006c4e:	4a42      	ldr	r2, [pc, #264]	; (8006d58 <SetPerfilTimers+0x278>)
 8006c50:	69fb      	ldr	r3, [r7, #28]
 8006c52:	00db      	lsls	r3, r3, #3
 8006c54:	4413      	add	r3, r2
 8006c56:	ed93 7b00 	vldr	d7, [r3]
 8006c5a:	eefd 7bc7 	vcvt.s32.f64	s15, d7
 8006c5e:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 8006c62:	ee36 7b47 	vsub.f64	d7, d6, d7
 8006c66:	4a3f      	ldr	r2, [pc, #252]	; (8006d64 <SetPerfilTimers+0x284>)
 8006c68:	69fb      	ldr	r3, [r7, #28]
 8006c6a:	00db      	lsls	r3, r3, #3
 8006c6c:	4413      	add	r3, r2
 8006c6e:	ed83 7b00 	vstr	d7, [r3]
			ErrorAcumuladoPeriodo[i] = ErrorAcumuladoPeriodo[i] + ErrorPeriodo[i];
 8006c72:	4a3d      	ldr	r2, [pc, #244]	; (8006d68 <SetPerfilTimers+0x288>)
 8006c74:	69fb      	ldr	r3, [r7, #28]
 8006c76:	00db      	lsls	r3, r3, #3
 8006c78:	4413      	add	r3, r2
 8006c7a:	ed93 6b00 	vldr	d6, [r3]
 8006c7e:	4a39      	ldr	r2, [pc, #228]	; (8006d64 <SetPerfilTimers+0x284>)
 8006c80:	69fb      	ldr	r3, [r7, #28]
 8006c82:	00db      	lsls	r3, r3, #3
 8006c84:	4413      	add	r3, r2
 8006c86:	ed93 7b00 	vldr	d7, [r3]
 8006c8a:	ee36 7b07 	vadd.f64	d7, d6, d7
 8006c8e:	4a36      	ldr	r2, [pc, #216]	; (8006d68 <SetPerfilTimers+0x288>)
 8006c90:	69fb      	ldr	r3, [r7, #28]
 8006c92:	00db      	lsls	r3, r3, #3
 8006c94:	4413      	add	r3, r2
 8006c96:	ed83 7b00 	vstr	d7, [r3]
			if (ErrorAcumuladoPeriodo[i] > 1) {
 8006c9a:	4a33      	ldr	r2, [pc, #204]	; (8006d68 <SetPerfilTimers+0x288>)
 8006c9c:	69fb      	ldr	r3, [r7, #28]
 8006c9e:	00db      	lsls	r3, r3, #3
 8006ca0:	4413      	add	r3, r2
 8006ca2:	ed93 7b00 	vldr	d7, [r3]
 8006ca6:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006caa:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8006cae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006cb2:	dd1f      	ble.n	8006cf4 <SetPerfilTimers+0x214>
				periodoM[i] = periodoM[i] + 1;
 8006cb4:	4a28      	ldr	r2, [pc, #160]	; (8006d58 <SetPerfilTimers+0x278>)
 8006cb6:	69fb      	ldr	r3, [r7, #28]
 8006cb8:	00db      	lsls	r3, r3, #3
 8006cba:	4413      	add	r3, r2
 8006cbc:	ed93 7b00 	vldr	d7, [r3]
 8006cc0:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006cc4:	ee37 7b06 	vadd.f64	d7, d7, d6
 8006cc8:	4a23      	ldr	r2, [pc, #140]	; (8006d58 <SetPerfilTimers+0x278>)
 8006cca:	69fb      	ldr	r3, [r7, #28]
 8006ccc:	00db      	lsls	r3, r3, #3
 8006cce:	4413      	add	r3, r2
 8006cd0:	ed83 7b00 	vstr	d7, [r3]
				ErrorAcumuladoPeriodo[i] = ErrorAcumuladoPeriodo[i] - 1;
 8006cd4:	4a24      	ldr	r2, [pc, #144]	; (8006d68 <SetPerfilTimers+0x288>)
 8006cd6:	69fb      	ldr	r3, [r7, #28]
 8006cd8:	00db      	lsls	r3, r3, #3
 8006cda:	4413      	add	r3, r2
 8006cdc:	ed93 7b00 	vldr	d7, [r3]
 8006ce0:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006ce4:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006ce8:	4a1f      	ldr	r2, [pc, #124]	; (8006d68 <SetPerfilTimers+0x288>)
 8006cea:	69fb      	ldr	r3, [r7, #28]
 8006cec:	00db      	lsls	r3, r3, #3
 8006cee:	4413      	add	r3, r2
 8006cf0:	ed83 7b00 	vstr	d7, [r3]
			}
			if (periodoM[i] < 2) {
 8006cf4:	4a18      	ldr	r2, [pc, #96]	; (8006d58 <SetPerfilTimers+0x278>)
 8006cf6:	69fb      	ldr	r3, [r7, #28]
 8006cf8:	00db      	lsls	r3, r3, #3
 8006cfa:	4413      	add	r3, r2
 8006cfc:	ed93 7b00 	vldr	d7, [r3]
 8006d00:	eeb0 6b00 	vmov.f64	d6, #0	; 0x40000000  2.0
 8006d04:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8006d08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006d0c:	d52e      	bpl.n	8006d6c <SetPerfilTimers+0x28c>
				periodoM[i] = 0; // velocidad lineal de 10.000mm/s !!!
 8006d0e:	4a12      	ldr	r2, [pc, #72]	; (8006d58 <SetPerfilTimers+0x278>)
 8006d10:	69fb      	ldr	r3, [r7, #28]
 8006d12:	00db      	lsls	r3, r3, #3
 8006d14:	18d1      	adds	r1, r2, r3
 8006d16:	f04f 0200 	mov.w	r2, #0
 8006d1a:	f04f 0300 	mov.w	r3, #0
 8006d1e:	e9c1 2300 	strd	r2, r3, [r1]
 8006d22:	e039      	b.n	8006d98 <SetPerfilTimers+0x2b8>
 8006d24:	f3af 8000 	nop.w
 8006d28:	66ed2a99 	.word	0x66ed2a99
 8006d2c:	4023193d 	.word	0x4023193d
 8006d30:	9999999a 	.word	0x9999999a
 8006d34:	3fb99999 	.word	0x3fb99999
 8006d38:	00000000 	.word	0x00000000
 8006d3c:	40bf4000 	.word	0x40bf4000
 8006d40:	00000000 	.word	0x00000000
 8006d44:	41ec9c38 	.word	0x41ec9c38
 8006d48:	24000770 	.word	0x24000770
 8006d4c:	24000778 	.word	0x24000778
 8006d50:	24000780 	.word	0x24000780
 8006d54:	40001800 	.word	0x40001800
 8006d58:	24000748 	.word	0x24000748
 8006d5c:	40001c00 	.word	0x40001c00
 8006d60:	40002000 	.word	0x40002000
 8006d64:	24000788 	.word	0x24000788
 8006d68:	240007a0 	.word	0x240007a0
			}

			else if (periodoM[i] > pow(2, 16)) { 		// desborde de timer 32 bits
 8006d6c:	4a98      	ldr	r2, [pc, #608]	; (8006fd0 <SetPerfilTimers+0x4f0>)
 8006d6e:	69fb      	ldr	r3, [r7, #28]
 8006d70:	00db      	lsls	r3, r3, #3
 8006d72:	4413      	add	r3, r2
 8006d74:	ed93 7b00 	vldr	d7, [r3]
 8006d78:	ed9f 6b8f 	vldr	d6, [pc, #572]	; 8006fb8 <SetPerfilTimers+0x4d8>
 8006d7c:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8006d80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006d84:	dd08      	ble.n	8006d98 <SetPerfilTimers+0x2b8>
				periodoM[i] = pow(2, 16);
 8006d86:	4a92      	ldr	r2, [pc, #584]	; (8006fd0 <SetPerfilTimers+0x4f0>)
 8006d88:	69fb      	ldr	r3, [r7, #28]
 8006d8a:	00db      	lsls	r3, r3, #3
 8006d8c:	18d1      	adds	r1, r2, r3
 8006d8e:	f04f 0200 	mov.w	r2, #0
 8006d92:	4b90      	ldr	r3, [pc, #576]	; (8006fd4 <SetPerfilTimers+0x4f4>)
 8006d94:	e9c1 2300 	strd	r2, r3, [r1]
		for (int i = 0; i < 3; ++i) {
 8006d98:	69fb      	ldr	r3, [r7, #28]
 8006d9a:	3301      	adds	r3, #1
 8006d9c:	61fb      	str	r3, [r7, #28]
 8006d9e:	69fb      	ldr	r3, [r7, #28]
 8006da0:	2b02      	cmp	r3, #2
 8006da2:	f77f af4e 	ble.w	8006c42 <SetPerfilTimers+0x162>
			}
		}

			periodoM[0]=(uint32_t)(((FCL * 60.0) / (rpm1 * ((double)(TIM12->PSC) + 1.0) * STEPREV)) - 1.0);
 8006da6:	4b8c      	ldr	r3, [pc, #560]	; (8006fd8 <SetPerfilTimers+0x4f8>)
 8006da8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006daa:	ee07 3a90 	vmov	s15, r3
 8006dae:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8006db2:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006db6:	ee37 6b06 	vadd.f64	d6, d7, d6
 8006dba:	4b88      	ldr	r3, [pc, #544]	; (8006fdc <SetPerfilTimers+0x4fc>)
 8006dbc:	ed93 7b00 	vldr	d7, [r3]
 8006dc0:	ee26 7b07 	vmul.f64	d7, d6, d7
 8006dc4:	ed9f 6b7e 	vldr	d6, [pc, #504]	; 8006fc0 <SetPerfilTimers+0x4e0>
 8006dc8:	ee27 6b06 	vmul.f64	d6, d7, d6
 8006dcc:	ed9f 5b7e 	vldr	d5, [pc, #504]	; 8006fc8 <SetPerfilTimers+0x4e8>
 8006dd0:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006dd4:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006dd8:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006ddc:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8006de0:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8006de4:	4b7a      	ldr	r3, [pc, #488]	; (8006fd0 <SetPerfilTimers+0x4f0>)
 8006de6:	ed83 7b00 	vstr	d7, [r3]
			periodoM[1]=(uint32_t)(((FCL * 60.0) / (rpm2 * ((double)(TIM13->PSC) + 1.0) * STEPREV)) - 1.0);
 8006dea:	4b7d      	ldr	r3, [pc, #500]	; (8006fe0 <SetPerfilTimers+0x500>)
 8006dec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006dee:	ee07 3a90 	vmov	s15, r3
 8006df2:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8006df6:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006dfa:	ee37 6b06 	vadd.f64	d6, d7, d6
 8006dfe:	4b79      	ldr	r3, [pc, #484]	; (8006fe4 <SetPerfilTimers+0x504>)
 8006e00:	ed93 7b00 	vldr	d7, [r3]
 8006e04:	ee26 7b07 	vmul.f64	d7, d6, d7
 8006e08:	ed9f 6b6d 	vldr	d6, [pc, #436]	; 8006fc0 <SetPerfilTimers+0x4e0>
 8006e0c:	ee27 6b06 	vmul.f64	d6, d7, d6
 8006e10:	ed9f 5b6d 	vldr	d5, [pc, #436]	; 8006fc8 <SetPerfilTimers+0x4e8>
 8006e14:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006e18:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006e1c:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006e20:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8006e24:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8006e28:	4b69      	ldr	r3, [pc, #420]	; (8006fd0 <SetPerfilTimers+0x4f0>)
 8006e2a:	ed83 7b02 	vstr	d7, [r3, #8]
			periodoM[2]=(uint32_t)(((FCL * 60.0) / (rpm3 * ((double)(TIM14->PSC) + 1.0) * STEPREV)) - 1.0);
 8006e2e:	4b6e      	ldr	r3, [pc, #440]	; (8006fe8 <SetPerfilTimers+0x508>)
 8006e30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006e32:	ee07 3a90 	vmov	s15, r3
 8006e36:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8006e3a:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006e3e:	ee37 6b06 	vadd.f64	d6, d7, d6
 8006e42:	4b6a      	ldr	r3, [pc, #424]	; (8006fec <SetPerfilTimers+0x50c>)
 8006e44:	ed93 7b00 	vldr	d7, [r3]
 8006e48:	ee26 7b07 	vmul.f64	d7, d6, d7
 8006e4c:	ed9f 6b5c 	vldr	d6, [pc, #368]	; 8006fc0 <SetPerfilTimers+0x4e0>
 8006e50:	ee27 6b06 	vmul.f64	d6, d7, d6
 8006e54:	ed9f 5b5c 	vldr	d5, [pc, #368]	; 8006fc8 <SetPerfilTimers+0x4e8>
 8006e58:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006e5c:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006e60:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006e64:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8006e68:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8006e6c:	4b58      	ldr	r3, [pc, #352]	; (8006fd0 <SetPerfilTimers+0x4f0>)
 8006e6e:	ed83 7b04 	vstr	d7, [r3, #16]


			if (TIM12->CNT > periodoM[0]) {
 8006e72:	4b59      	ldr	r3, [pc, #356]	; (8006fd8 <SetPerfilTimers+0x4f8>)
 8006e74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006e76:	ee07 3a90 	vmov	s15, r3
 8006e7a:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 8006e7e:	4b54      	ldr	r3, [pc, #336]	; (8006fd0 <SetPerfilTimers+0x4f0>)
 8006e80:	ed93 7b00 	vldr	d7, [r3]
 8006e84:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8006e88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006e8c:	dd0c      	ble.n	8006ea8 <SetPerfilTimers+0x3c8>
						TIM12->CNT = periodoM[0] - 1;// Reinicio clock solo si hace falta y a un valor cercano a la interrupcion, para que no haga ese paso de nuevo
 8006e8e:	4b50      	ldr	r3, [pc, #320]	; (8006fd0 <SetPerfilTimers+0x4f0>)
 8006e90:	ed93 7b00 	vldr	d7, [r3]
 8006e94:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006e98:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006e9c:	4b4e      	ldr	r3, [pc, #312]	; (8006fd8 <SetPerfilTimers+0x4f8>)
 8006e9e:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8006ea2:	ee17 2a90 	vmov	r2, s15
 8006ea6:	625a      	str	r2, [r3, #36]	; 0x24
			}
			if (TIM13->CNT > periodoM[1]) {
 8006ea8:	4b4d      	ldr	r3, [pc, #308]	; (8006fe0 <SetPerfilTimers+0x500>)
 8006eaa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006eac:	ee07 3a90 	vmov	s15, r3
 8006eb0:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 8006eb4:	4b46      	ldr	r3, [pc, #280]	; (8006fd0 <SetPerfilTimers+0x4f0>)
 8006eb6:	ed93 7b02 	vldr	d7, [r3, #8]
 8006eba:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8006ebe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006ec2:	dd0c      	ble.n	8006ede <SetPerfilTimers+0x3fe>
						TIM13->CNT = periodoM[1] - 1;// Reinicio clock solo si hace falta y a un valor cercano a la interrupcion, para que no haga ese paso de nuevo
 8006ec4:	4b42      	ldr	r3, [pc, #264]	; (8006fd0 <SetPerfilTimers+0x4f0>)
 8006ec6:	ed93 7b02 	vldr	d7, [r3, #8]
 8006eca:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006ece:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006ed2:	4b43      	ldr	r3, [pc, #268]	; (8006fe0 <SetPerfilTimers+0x500>)
 8006ed4:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8006ed8:	ee17 2a90 	vmov	r2, s15
 8006edc:	625a      	str	r2, [r3, #36]	; 0x24
			}
			if (TIM14->CNT > periodoM[2]) {
 8006ede:	4b42      	ldr	r3, [pc, #264]	; (8006fe8 <SetPerfilTimers+0x508>)
 8006ee0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006ee2:	ee07 3a90 	vmov	s15, r3
 8006ee6:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 8006eea:	4b39      	ldr	r3, [pc, #228]	; (8006fd0 <SetPerfilTimers+0x4f0>)
 8006eec:	ed93 7b04 	vldr	d7, [r3, #16]
 8006ef0:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8006ef4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006ef8:	dd0c      	ble.n	8006f14 <SetPerfilTimers+0x434>
						TIM14->CNT = periodoM[2] - 1;// Reinicio clock solo si hace falta y a un valor cercano a la interrupcion, para que no haga ese paso de nuevo
 8006efa:	4b35      	ldr	r3, [pc, #212]	; (8006fd0 <SetPerfilTimers+0x4f0>)
 8006efc:	ed93 7b04 	vldr	d7, [r3, #16]
 8006f00:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006f04:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006f08:	4b37      	ldr	r3, [pc, #220]	; (8006fe8 <SetPerfilTimers+0x508>)
 8006f0a:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8006f0e:	ee17 2a90 	vmov	r2, s15
 8006f12:	625a      	str	r2, [r3, #36]	; 0x24
			}

			TIM12->ARR =periodoM[0];
 8006f14:	4b2e      	ldr	r3, [pc, #184]	; (8006fd0 <SetPerfilTimers+0x4f0>)
 8006f16:	ed93 7b00 	vldr	d7, [r3]
 8006f1a:	4b2f      	ldr	r3, [pc, #188]	; (8006fd8 <SetPerfilTimers+0x4f8>)
 8006f1c:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8006f20:	ee17 2a90 	vmov	r2, s15
 8006f24:	62da      	str	r2, [r3, #44]	; 0x2c
			TIM12->CCR1 = (uint32_t)((double)(TIM12->ARR) / 2.0);
 8006f26:	4b2c      	ldr	r3, [pc, #176]	; (8006fd8 <SetPerfilTimers+0x4f8>)
 8006f28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006f2a:	ee07 3a90 	vmov	s15, r3
 8006f2e:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 8006f32:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 8006f36:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8006f3a:	4b27      	ldr	r3, [pc, #156]	; (8006fd8 <SetPerfilTimers+0x4f8>)
 8006f3c:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8006f40:	ee17 2a90 	vmov	r2, s15
 8006f44:	635a      	str	r2, [r3, #52]	; 0x34
			TIM13->ARR =periodoM[1];
 8006f46:	4b22      	ldr	r3, [pc, #136]	; (8006fd0 <SetPerfilTimers+0x4f0>)
 8006f48:	ed93 7b02 	vldr	d7, [r3, #8]
 8006f4c:	4b24      	ldr	r3, [pc, #144]	; (8006fe0 <SetPerfilTimers+0x500>)
 8006f4e:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8006f52:	ee17 2a90 	vmov	r2, s15
 8006f56:	62da      	str	r2, [r3, #44]	; 0x2c
			TIM13->CCR1 = (uint32_t)((double)(TIM13->ARR) / 2.0);
 8006f58:	4b21      	ldr	r3, [pc, #132]	; (8006fe0 <SetPerfilTimers+0x500>)
 8006f5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006f5c:	ee07 3a90 	vmov	s15, r3
 8006f60:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 8006f64:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 8006f68:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8006f6c:	4b1c      	ldr	r3, [pc, #112]	; (8006fe0 <SetPerfilTimers+0x500>)
 8006f6e:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8006f72:	ee17 2a90 	vmov	r2, s15
 8006f76:	635a      	str	r2, [r3, #52]	; 0x34
			TIM14->ARR =periodoM[2];
 8006f78:	4b15      	ldr	r3, [pc, #84]	; (8006fd0 <SetPerfilTimers+0x4f0>)
 8006f7a:	ed93 7b04 	vldr	d7, [r3, #16]
 8006f7e:	4b1a      	ldr	r3, [pc, #104]	; (8006fe8 <SetPerfilTimers+0x508>)
 8006f80:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8006f84:	ee17 2a90 	vmov	r2, s15
 8006f88:	62da      	str	r2, [r3, #44]	; 0x2c
			TIM14->CCR1 = (uint32_t)((double)(TIM14->ARR) / 2.0);
 8006f8a:	4b17      	ldr	r3, [pc, #92]	; (8006fe8 <SetPerfilTimers+0x508>)
 8006f8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006f8e:	ee07 3a90 	vmov	s15, r3
 8006f92:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 8006f96:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 8006f9a:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8006f9e:	4b12      	ldr	r3, [pc, #72]	; (8006fe8 <SetPerfilTimers+0x508>)
 8006fa0:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8006fa4:	ee17 2a90 	vmov	r2, s15
 8006fa8:	635a      	str	r2, [r3, #52]	; 0x34
			TIM13->CNT = Periodo[1] - 1;// Reinicio clock solo si hace falta y a un valor cercano a la interrupcion, para que no haga ese paso de nuevo
		}
		if (TIM14->CNT > Periodo[2]) {
			TIM14->CNT = Periodo[2] - 1;// Reinicio clock solo si hace falta y a un valor cercano a la interrupcion, para que no haga ese paso de nuevo
		}*/
}
 8006faa:	bf00      	nop
 8006fac:	3724      	adds	r7, #36	; 0x24
 8006fae:	46bd      	mov	sp, r7
 8006fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fb4:	4770      	bx	lr
 8006fb6:	bf00      	nop
 8006fb8:	00000000 	.word	0x00000000
 8006fbc:	40f00000 	.word	0x40f00000
 8006fc0:	00000000 	.word	0x00000000
 8006fc4:	40bf4000 	.word	0x40bf4000
 8006fc8:	00000000 	.word	0x00000000
 8006fcc:	41ec9c38 	.word	0x41ec9c38
 8006fd0:	24000748 	.word	0x24000748
 8006fd4:	40f00000 	.word	0x40f00000
 8006fd8:	40001800 	.word	0x40001800
 8006fdc:	24000770 	.word	0x24000770
 8006fe0:	40001c00 	.word	0x40001c00
 8006fe4:	24000778 	.word	0x24000778
 8006fe8:	40002000 	.word	0x40002000
 8006fec:	24000780 	.word	0x24000780

08006ff0 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart3;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8006ff0:	b580      	push	{r7, lr}
 8006ff2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8006ff4:	4b22      	ldr	r3, [pc, #136]	; (8007080 <MX_USART1_UART_Init+0x90>)
 8006ff6:	4a23      	ldr	r2, [pc, #140]	; (8007084 <MX_USART1_UART_Init+0x94>)
 8006ff8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 8006ffa:	4b21      	ldr	r3, [pc, #132]	; (8007080 <MX_USART1_UART_Init+0x90>)
 8006ffc:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8007000:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8007002:	4b1f      	ldr	r3, [pc, #124]	; (8007080 <MX_USART1_UART_Init+0x90>)
 8007004:	2200      	movs	r2, #0
 8007006:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8007008:	4b1d      	ldr	r3, [pc, #116]	; (8007080 <MX_USART1_UART_Init+0x90>)
 800700a:	2200      	movs	r2, #0
 800700c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800700e:	4b1c      	ldr	r3, [pc, #112]	; (8007080 <MX_USART1_UART_Init+0x90>)
 8007010:	2200      	movs	r2, #0
 8007012:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8007014:	4b1a      	ldr	r3, [pc, #104]	; (8007080 <MX_USART1_UART_Init+0x90>)
 8007016:	220c      	movs	r2, #12
 8007018:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800701a:	4b19      	ldr	r3, [pc, #100]	; (8007080 <MX_USART1_UART_Init+0x90>)
 800701c:	2200      	movs	r2, #0
 800701e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8007020:	4b17      	ldr	r3, [pc, #92]	; (8007080 <MX_USART1_UART_Init+0x90>)
 8007022:	2200      	movs	r2, #0
 8007024:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8007026:	4b16      	ldr	r3, [pc, #88]	; (8007080 <MX_USART1_UART_Init+0x90>)
 8007028:	2200      	movs	r2, #0
 800702a:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 800702c:	4b14      	ldr	r3, [pc, #80]	; (8007080 <MX_USART1_UART_Init+0x90>)
 800702e:	2200      	movs	r2, #0
 8007030:	625a      	str	r2, [r3, #36]	; 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8007032:	4b13      	ldr	r3, [pc, #76]	; (8007080 <MX_USART1_UART_Init+0x90>)
 8007034:	2200      	movs	r2, #0
 8007036:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8007038:	4811      	ldr	r0, [pc, #68]	; (8007080 <MX_USART1_UART_Init+0x90>)
 800703a:	f005 fecf 	bl	800cddc <HAL_UART_Init>
 800703e:	4603      	mov	r3, r0
 8007040:	2b00      	cmp	r3, #0
 8007042:	d001      	beq.n	8007048 <MX_USART1_UART_Init+0x58>
  {
    Error_Handler();
 8007044:	f7fd f878 	bl	8004138 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8007048:	2100      	movs	r1, #0
 800704a:	480d      	ldr	r0, [pc, #52]	; (8007080 <MX_USART1_UART_Init+0x90>)
 800704c:	f008 f959 	bl	800f302 <HAL_UARTEx_SetTxFifoThreshold>
 8007050:	4603      	mov	r3, r0
 8007052:	2b00      	cmp	r3, #0
 8007054:	d001      	beq.n	800705a <MX_USART1_UART_Init+0x6a>
  {
    Error_Handler();
 8007056:	f7fd f86f 	bl	8004138 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 800705a:	2100      	movs	r1, #0
 800705c:	4808      	ldr	r0, [pc, #32]	; (8007080 <MX_USART1_UART_Init+0x90>)
 800705e:	f008 f98e 	bl	800f37e <HAL_UARTEx_SetRxFifoThreshold>
 8007062:	4603      	mov	r3, r0
 8007064:	2b00      	cmp	r3, #0
 8007066:	d001      	beq.n	800706c <MX_USART1_UART_Init+0x7c>
  {
    Error_Handler();
 8007068:	f7fd f866 	bl	8004138 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 800706c:	4804      	ldr	r0, [pc, #16]	; (8007080 <MX_USART1_UART_Init+0x90>)
 800706e:	f008 f90f 	bl	800f290 <HAL_UARTEx_DisableFifoMode>
 8007072:	4603      	mov	r3, r0
 8007074:	2b00      	cmp	r3, #0
 8007076:	d001      	beq.n	800707c <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
 8007078:	f7fd f85e 	bl	8004138 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800707c:	bf00      	nop
 800707e:	bd80      	pop	{r7, pc}
 8007080:	24000aac 	.word	0x24000aac
 8007084:	40011000 	.word	0x40011000

08007088 <MX_USART2_UART_Init>:
/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 8007088:	b580      	push	{r7, lr}
 800708a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800708c:	4b22      	ldr	r3, [pc, #136]	; (8007118 <MX_USART2_UART_Init+0x90>)
 800708e:	4a23      	ldr	r2, [pc, #140]	; (800711c <MX_USART2_UART_Init+0x94>)
 8007090:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8007092:	4b21      	ldr	r3, [pc, #132]	; (8007118 <MX_USART2_UART_Init+0x90>)
 8007094:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8007098:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800709a:	4b1f      	ldr	r3, [pc, #124]	; (8007118 <MX_USART2_UART_Init+0x90>)
 800709c:	2200      	movs	r2, #0
 800709e:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80070a0:	4b1d      	ldr	r3, [pc, #116]	; (8007118 <MX_USART2_UART_Init+0x90>)
 80070a2:	2200      	movs	r2, #0
 80070a4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80070a6:	4b1c      	ldr	r3, [pc, #112]	; (8007118 <MX_USART2_UART_Init+0x90>)
 80070a8:	2200      	movs	r2, #0
 80070aa:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80070ac:	4b1a      	ldr	r3, [pc, #104]	; (8007118 <MX_USART2_UART_Init+0x90>)
 80070ae:	220c      	movs	r2, #12
 80070b0:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80070b2:	4b19      	ldr	r3, [pc, #100]	; (8007118 <MX_USART2_UART_Init+0x90>)
 80070b4:	2200      	movs	r2, #0
 80070b6:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80070b8:	4b17      	ldr	r3, [pc, #92]	; (8007118 <MX_USART2_UART_Init+0x90>)
 80070ba:	2200      	movs	r2, #0
 80070bc:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80070be:	4b16      	ldr	r3, [pc, #88]	; (8007118 <MX_USART2_UART_Init+0x90>)
 80070c0:	2200      	movs	r2, #0
 80070c2:	621a      	str	r2, [r3, #32]
  huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 80070c4:	4b14      	ldr	r3, [pc, #80]	; (8007118 <MX_USART2_UART_Init+0x90>)
 80070c6:	2200      	movs	r2, #0
 80070c8:	625a      	str	r2, [r3, #36]	; 0x24
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80070ca:	4b13      	ldr	r3, [pc, #76]	; (8007118 <MX_USART2_UART_Init+0x90>)
 80070cc:	2200      	movs	r2, #0
 80070ce:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80070d0:	4811      	ldr	r0, [pc, #68]	; (8007118 <MX_USART2_UART_Init+0x90>)
 80070d2:	f005 fe83 	bl	800cddc <HAL_UART_Init>
 80070d6:	4603      	mov	r3, r0
 80070d8:	2b00      	cmp	r3, #0
 80070da:	d001      	beq.n	80070e0 <MX_USART2_UART_Init+0x58>
  {
    Error_Handler();
 80070dc:	f7fd f82c 	bl	8004138 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart2, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80070e0:	2100      	movs	r1, #0
 80070e2:	480d      	ldr	r0, [pc, #52]	; (8007118 <MX_USART2_UART_Init+0x90>)
 80070e4:	f008 f90d 	bl	800f302 <HAL_UARTEx_SetTxFifoThreshold>
 80070e8:	4603      	mov	r3, r0
 80070ea:	2b00      	cmp	r3, #0
 80070ec:	d001      	beq.n	80070f2 <MX_USART2_UART_Init+0x6a>
  {
    Error_Handler();
 80070ee:	f7fd f823 	bl	8004138 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart2, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 80070f2:	2100      	movs	r1, #0
 80070f4:	4808      	ldr	r0, [pc, #32]	; (8007118 <MX_USART2_UART_Init+0x90>)
 80070f6:	f008 f942 	bl	800f37e <HAL_UARTEx_SetRxFifoThreshold>
 80070fa:	4603      	mov	r3, r0
 80070fc:	2b00      	cmp	r3, #0
 80070fe:	d001      	beq.n	8007104 <MX_USART2_UART_Init+0x7c>
  {
    Error_Handler();
 8007100:	f7fd f81a 	bl	8004138 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart2) != HAL_OK)
 8007104:	4804      	ldr	r0, [pc, #16]	; (8007118 <MX_USART2_UART_Init+0x90>)
 8007106:	f008 f8c3 	bl	800f290 <HAL_UARTEx_DisableFifoMode>
 800710a:	4603      	mov	r3, r0
 800710c:	2b00      	cmp	r3, #0
 800710e:	d001      	beq.n	8007114 <MX_USART2_UART_Init+0x8c>
  {
    Error_Handler();
 8007110:	f7fd f812 	bl	8004138 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8007114:	bf00      	nop
 8007116:	bd80      	pop	{r7, pc}
 8007118:	24000b3c 	.word	0x24000b3c
 800711c:	40004400 	.word	0x40004400

08007120 <MX_USART3_UART_Init>:
/* USART3 init function */

void MX_USART3_UART_Init(void)
{
 8007120:	b580      	push	{r7, lr}
 8007122:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8007124:	4b22      	ldr	r3, [pc, #136]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 8007126:	4a23      	ldr	r2, [pc, #140]	; (80071b4 <MX_USART3_UART_Init+0x94>)
 8007128:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 9600;
 800712a:	4b21      	ldr	r3, [pc, #132]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 800712c:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8007130:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8007132:	4b1f      	ldr	r3, [pc, #124]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 8007134:	2200      	movs	r2, #0
 8007136:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8007138:	4b1d      	ldr	r3, [pc, #116]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 800713a:	2200      	movs	r2, #0
 800713c:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 800713e:	4b1c      	ldr	r3, [pc, #112]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 8007140:	2200      	movs	r2, #0
 8007142:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8007144:	4b1a      	ldr	r3, [pc, #104]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 8007146:	220c      	movs	r2, #12
 8007148:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800714a:	4b19      	ldr	r3, [pc, #100]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 800714c:	2200      	movs	r2, #0
 800714e:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8007150:	4b17      	ldr	r3, [pc, #92]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 8007152:	2200      	movs	r2, #0
 8007154:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8007156:	4b16      	ldr	r3, [pc, #88]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 8007158:	2200      	movs	r2, #0
 800715a:	621a      	str	r2, [r3, #32]
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 800715c:	4b14      	ldr	r3, [pc, #80]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 800715e:	2200      	movs	r2, #0
 8007160:	625a      	str	r2, [r3, #36]	; 0x24
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8007162:	4b13      	ldr	r3, [pc, #76]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 8007164:	2200      	movs	r2, #0
 8007166:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8007168:	4811      	ldr	r0, [pc, #68]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 800716a:	f005 fe37 	bl	800cddc <HAL_UART_Init>
 800716e:	4603      	mov	r3, r0
 8007170:	2b00      	cmp	r3, #0
 8007172:	d001      	beq.n	8007178 <MX_USART3_UART_Init+0x58>
  {
    Error_Handler();
 8007174:	f7fc ffe0 	bl	8004138 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8007178:	2100      	movs	r1, #0
 800717a:	480d      	ldr	r0, [pc, #52]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 800717c:	f008 f8c1 	bl	800f302 <HAL_UARTEx_SetTxFifoThreshold>
 8007180:	4603      	mov	r3, r0
 8007182:	2b00      	cmp	r3, #0
 8007184:	d001      	beq.n	800718a <MX_USART3_UART_Init+0x6a>
  {
    Error_Handler();
 8007186:	f7fc ffd7 	bl	8004138 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 800718a:	2100      	movs	r1, #0
 800718c:	4808      	ldr	r0, [pc, #32]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 800718e:	f008 f8f6 	bl	800f37e <HAL_UARTEx_SetRxFifoThreshold>
 8007192:	4603      	mov	r3, r0
 8007194:	2b00      	cmp	r3, #0
 8007196:	d001      	beq.n	800719c <MX_USART3_UART_Init+0x7c>
  {
    Error_Handler();
 8007198:	f7fc ffce 	bl	8004138 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
 800719c:	4804      	ldr	r0, [pc, #16]	; (80071b0 <MX_USART3_UART_Init+0x90>)
 800719e:	f008 f877 	bl	800f290 <HAL_UARTEx_DisableFifoMode>
 80071a2:	4603      	mov	r3, r0
 80071a4:	2b00      	cmp	r3, #0
 80071a6:	d001      	beq.n	80071ac <MX_USART3_UART_Init+0x8c>
  {
    Error_Handler();
 80071a8:	f7fc ffc6 	bl	8004138 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 80071ac:	bf00      	nop
 80071ae:	bd80      	pop	{r7, pc}
 80071b0:	24000bcc 	.word	0x24000bcc
 80071b4:	40004800 	.word	0x40004800

080071b8 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80071b8:	b580      	push	{r7, lr}
 80071ba:	b0be      	sub	sp, #248	; 0xf8
 80071bc:	af00      	add	r7, sp, #0
 80071be:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80071c0:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 80071c4:	2200      	movs	r2, #0
 80071c6:	601a      	str	r2, [r3, #0]
 80071c8:	605a      	str	r2, [r3, #4]
 80071ca:	609a      	str	r2, [r3, #8]
 80071cc:	60da      	str	r2, [r3, #12]
 80071ce:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80071d0:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80071d4:	22bc      	movs	r2, #188	; 0xbc
 80071d6:	2100      	movs	r1, #0
 80071d8:	4618      	mov	r0, r3
 80071da:	f008 f995 	bl	800f508 <memset>
  if(uartHandle->Instance==USART1)
 80071de:	687b      	ldr	r3, [r7, #4]
 80071e0:	681b      	ldr	r3, [r3, #0]
 80071e2:	4a84      	ldr	r2, [pc, #528]	; (80073f4 <HAL_UART_MspInit+0x23c>)
 80071e4:	4293      	cmp	r3, r2
 80071e6:	d168      	bne.n	80072ba <HAL_UART_MspInit+0x102>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 80071e8:	2301      	movs	r3, #1
 80071ea:	62bb      	str	r3, [r7, #40]	; 0x28
    PeriphClkInitStruct.Usart16ClockSelection = RCC_USART16CLKSOURCE_D2PCLK2;
 80071ec:	2300      	movs	r3, #0
 80071ee:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80071f2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80071f6:	4618      	mov	r0, r3
 80071f8:	f002 fa8c 	bl	8009714 <HAL_RCCEx_PeriphCLKConfig>
 80071fc:	4603      	mov	r3, r0
 80071fe:	2b00      	cmp	r3, #0
 8007200:	d001      	beq.n	8007206 <HAL_UART_MspInit+0x4e>
    {
      Error_Handler();
 8007202:	f7fc ff99 	bl	8004138 <Error_Handler>
    }

    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8007206:	4b7c      	ldr	r3, [pc, #496]	; (80073f8 <HAL_UART_MspInit+0x240>)
 8007208:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 800720c:	4a7a      	ldr	r2, [pc, #488]	; (80073f8 <HAL_UART_MspInit+0x240>)
 800720e:	f043 0310 	orr.w	r3, r3, #16
 8007212:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 8007216:	4b78      	ldr	r3, [pc, #480]	; (80073f8 <HAL_UART_MspInit+0x240>)
 8007218:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 800721c:	f003 0310 	and.w	r3, r3, #16
 8007220:	627b      	str	r3, [r7, #36]	; 0x24
 8007222:	6a7b      	ldr	r3, [r7, #36]	; 0x24

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8007224:	4b74      	ldr	r3, [pc, #464]	; (80073f8 <HAL_UART_MspInit+0x240>)
 8007226:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800722a:	4a73      	ldr	r2, [pc, #460]	; (80073f8 <HAL_UART_MspInit+0x240>)
 800722c:	f043 0302 	orr.w	r3, r3, #2
 8007230:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8007234:	4b70      	ldr	r3, [pc, #448]	; (80073f8 <HAL_UART_MspInit+0x240>)
 8007236:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800723a:	f003 0302 	and.w	r3, r3, #2
 800723e:	623b      	str	r3, [r7, #32]
 8007240:	6a3b      	ldr	r3, [r7, #32]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8007242:	4b6d      	ldr	r3, [pc, #436]	; (80073f8 <HAL_UART_MspInit+0x240>)
 8007244:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8007248:	4a6b      	ldr	r2, [pc, #428]	; (80073f8 <HAL_UART_MspInit+0x240>)
 800724a:	f043 0301 	orr.w	r3, r3, #1
 800724e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8007252:	4b69      	ldr	r3, [pc, #420]	; (80073f8 <HAL_UART_MspInit+0x240>)
 8007254:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8007258:	f003 0301 	and.w	r3, r3, #1
 800725c:	61fb      	str	r3, [r7, #28]
 800725e:	69fb      	ldr	r3, [r7, #28]
    /**USART1 GPIO Configuration
    PB15     ------> USART1_RX
    PA9     ------> USART1_TX
    */
    GPIO_InitStruct.Pin = Jetson_RX_Pin;
 8007260:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8007264:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007268:	2302      	movs	r3, #2
 800726a:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800726e:	2300      	movs	r3, #0
 8007270:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8007274:	2300      	movs	r3, #0
 8007276:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF4_USART1;
 800727a:	2304      	movs	r3, #4
 800727c:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(Jetson_RX_GPIO_Port, &GPIO_InitStruct);
 8007280:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8007284:	4619      	mov	r1, r3
 8007286:	485d      	ldr	r0, [pc, #372]	; (80073fc <HAL_UART_MspInit+0x244>)
 8007288:	f001 f854 	bl	8008334 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = Jetson_TX_Pin;
 800728c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007290:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007294:	2302      	movs	r3, #2
 8007296:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800729a:	2300      	movs	r3, #0
 800729c:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80072a0:	2300      	movs	r3, #0
 80072a2:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80072a6:	2307      	movs	r3, #7
 80072a8:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(Jetson_TX_GPIO_Port, &GPIO_InitStruct);
 80072ac:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 80072b0:	4619      	mov	r1, r3
 80072b2:	4853      	ldr	r0, [pc, #332]	; (8007400 <HAL_UART_MspInit+0x248>)
 80072b4:	f001 f83e 	bl	8008334 <HAL_GPIO_Init>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }
}
 80072b8:	e097      	b.n	80073ea <HAL_UART_MspInit+0x232>
  else if(uartHandle->Instance==USART2)
 80072ba:	687b      	ldr	r3, [r7, #4]
 80072bc:	681b      	ldr	r3, [r3, #0]
 80072be:	4a51      	ldr	r2, [pc, #324]	; (8007404 <HAL_UART_MspInit+0x24c>)
 80072c0:	4293      	cmp	r3, r2
 80072c2:	d142      	bne.n	800734a <HAL_UART_MspInit+0x192>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 80072c4:	2302      	movs	r3, #2
 80072c6:	62bb      	str	r3, [r7, #40]	; 0x28
    PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
 80072c8:	2300      	movs	r3, #0
 80072ca:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80072ce:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80072d2:	4618      	mov	r0, r3
 80072d4:	f002 fa1e 	bl	8009714 <HAL_RCCEx_PeriphCLKConfig>
 80072d8:	4603      	mov	r3, r0
 80072da:	2b00      	cmp	r3, #0
 80072dc:	d001      	beq.n	80072e2 <HAL_UART_MspInit+0x12a>
      Error_Handler();
 80072de:	f7fc ff2b 	bl	8004138 <Error_Handler>
    __HAL_RCC_USART2_CLK_ENABLE();
 80072e2:	4b45      	ldr	r3, [pc, #276]	; (80073f8 <HAL_UART_MspInit+0x240>)
 80072e4:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80072e8:	4a43      	ldr	r2, [pc, #268]	; (80073f8 <HAL_UART_MspInit+0x240>)
 80072ea:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80072ee:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 80072f2:	4b41      	ldr	r3, [pc, #260]	; (80073f8 <HAL_UART_MspInit+0x240>)
 80072f4:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80072f8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80072fc:	61bb      	str	r3, [r7, #24]
 80072fe:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8007300:	4b3d      	ldr	r3, [pc, #244]	; (80073f8 <HAL_UART_MspInit+0x240>)
 8007302:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8007306:	4a3c      	ldr	r2, [pc, #240]	; (80073f8 <HAL_UART_MspInit+0x240>)
 8007308:	f043 0301 	orr.w	r3, r3, #1
 800730c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8007310:	4b39      	ldr	r3, [pc, #228]	; (80073f8 <HAL_UART_MspInit+0x240>)
 8007312:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8007316:	f003 0301 	and.w	r3, r3, #1
 800731a:	617b      	str	r3, [r7, #20]
 800731c:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = NucleoF4_RX_Pin|NucleoF4_TX_Pin;
 800731e:	230c      	movs	r3, #12
 8007320:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007324:	2302      	movs	r3, #2
 8007326:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800732a:	2300      	movs	r3, #0
 800732c:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8007330:	2300      	movs	r3, #0
 8007332:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8007336:	2307      	movs	r3, #7
 8007338:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800733c:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8007340:	4619      	mov	r1, r3
 8007342:	482f      	ldr	r0, [pc, #188]	; (8007400 <HAL_UART_MspInit+0x248>)
 8007344:	f000 fff6 	bl	8008334 <HAL_GPIO_Init>
}
 8007348:	e04f      	b.n	80073ea <HAL_UART_MspInit+0x232>
  else if(uartHandle->Instance==USART3)
 800734a:	687b      	ldr	r3, [r7, #4]
 800734c:	681b      	ldr	r3, [r3, #0]
 800734e:	4a2e      	ldr	r2, [pc, #184]	; (8007408 <HAL_UART_MspInit+0x250>)
 8007350:	4293      	cmp	r3, r2
 8007352:	d14a      	bne.n	80073ea <HAL_UART_MspInit+0x232>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 8007354:	2302      	movs	r3, #2
 8007356:	62bb      	str	r3, [r7, #40]	; 0x28
    PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
 8007358:	2300      	movs	r3, #0
 800735a:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800735e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8007362:	4618      	mov	r0, r3
 8007364:	f002 f9d6 	bl	8009714 <HAL_RCCEx_PeriphCLKConfig>
 8007368:	4603      	mov	r3, r0
 800736a:	2b00      	cmp	r3, #0
 800736c:	d001      	beq.n	8007372 <HAL_UART_MspInit+0x1ba>
      Error_Handler();
 800736e:	f7fc fee3 	bl	8004138 <Error_Handler>
    __HAL_RCC_USART3_CLK_ENABLE();
 8007372:	4b21      	ldr	r3, [pc, #132]	; (80073f8 <HAL_UART_MspInit+0x240>)
 8007374:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8007378:	4a1f      	ldr	r2, [pc, #124]	; (80073f8 <HAL_UART_MspInit+0x240>)
 800737a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800737e:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8007382:	4b1d      	ldr	r3, [pc, #116]	; (80073f8 <HAL_UART_MspInit+0x240>)
 8007384:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8007388:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800738c:	613b      	str	r3, [r7, #16]
 800738e:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8007390:	4b19      	ldr	r3, [pc, #100]	; (80073f8 <HAL_UART_MspInit+0x240>)
 8007392:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8007396:	4a18      	ldr	r2, [pc, #96]	; (80073f8 <HAL_UART_MspInit+0x240>)
 8007398:	f043 0308 	orr.w	r3, r3, #8
 800739c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80073a0:	4b15      	ldr	r3, [pc, #84]	; (80073f8 <HAL_UART_MspInit+0x240>)
 80073a2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80073a6:	f003 0308 	and.w	r3, r3, #8
 80073aa:	60fb      	str	r3, [r7, #12]
 80073ac:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = STLINK_TX_Pin|STLINK_RX_Pin;
 80073ae:	f44f 7340 	mov.w	r3, #768	; 0x300
 80073b2:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80073b6:	2302      	movs	r3, #2
 80073b8:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80073bc:	2300      	movs	r3, #0
 80073be:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80073c2:	2300      	movs	r3, #0
 80073c4:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 80073c8:	2307      	movs	r3, #7
 80073ca:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80073ce:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 80073d2:	4619      	mov	r1, r3
 80073d4:	480d      	ldr	r0, [pc, #52]	; (800740c <HAL_UART_MspInit+0x254>)
 80073d6:	f000 ffad 	bl	8008334 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART3_IRQn, 1, 1);
 80073da:	2201      	movs	r2, #1
 80073dc:	2101      	movs	r1, #1
 80073de:	2027      	movs	r0, #39	; 0x27
 80073e0:	f000 fa01 	bl	80077e6 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 80073e4:	2027      	movs	r0, #39	; 0x27
 80073e6:	f000 fa18 	bl	800781a <HAL_NVIC_EnableIRQ>
}
 80073ea:	bf00      	nop
 80073ec:	37f8      	adds	r7, #248	; 0xf8
 80073ee:	46bd      	mov	sp, r7
 80073f0:	bd80      	pop	{r7, pc}
 80073f2:	bf00      	nop
 80073f4:	40011000 	.word	0x40011000
 80073f8:	58024400 	.word	0x58024400
 80073fc:	58020400 	.word	0x58020400
 8007400:	58020000 	.word	0x58020000
 8007404:	40004400 	.word	0x40004400
 8007408:	40004800 	.word	0x40004800
 800740c:	58020c00 	.word	0x58020c00

08007410 <Reset_Handler>:
 8007410:	f8df d034 	ldr.w	sp, [pc, #52]	; 8007448 <LoopFillZerobss+0x14>
 8007414:	2100      	movs	r1, #0
 8007416:	e003      	b.n	8007420 <LoopCopyDataInit>

08007418 <CopyDataInit>:
 8007418:	4b0c      	ldr	r3, [pc, #48]	; (800744c <LoopFillZerobss+0x18>)
 800741a:	585b      	ldr	r3, [r3, r1]
 800741c:	5043      	str	r3, [r0, r1]
 800741e:	3104      	adds	r1, #4

08007420 <LoopCopyDataInit>:
 8007420:	480b      	ldr	r0, [pc, #44]	; (8007450 <LoopFillZerobss+0x1c>)
 8007422:	4b0c      	ldr	r3, [pc, #48]	; (8007454 <LoopFillZerobss+0x20>)
 8007424:	1842      	adds	r2, r0, r1
 8007426:	429a      	cmp	r2, r3
 8007428:	d3f6      	bcc.n	8007418 <CopyDataInit>
 800742a:	4a0b      	ldr	r2, [pc, #44]	; (8007458 <LoopFillZerobss+0x24>)
 800742c:	e002      	b.n	8007434 <LoopFillZerobss>

0800742e <FillZerobss>:
 800742e:	2300      	movs	r3, #0
 8007430:	f842 3b04 	str.w	r3, [r2], #4

08007434 <LoopFillZerobss>:
 8007434:	4b09      	ldr	r3, [pc, #36]	; (800745c <LoopFillZerobss+0x28>)
 8007436:	429a      	cmp	r2, r3
 8007438:	d3f9      	bcc.n	800742e <FillZerobss>
 800743a:	f7fd fa31 	bl	80048a0 <SystemInit>
 800743e:	f008 f831 	bl	800f4a4 <__libc_init_array>
 8007442:	f7fc fa19 	bl	8003878 <main>
 8007446:	4770      	bx	lr
 8007448:	24080000 	.word	0x24080000
 800744c:	08014910 	.word	0x08014910
 8007450:	24000000 	.word	0x24000000
 8007454:	24000294 	.word	0x24000294
 8007458:	24000298 	.word	0x24000298
 800745c:	24000c70 	.word	0x24000c70

08007460 <ADC3_IRQHandler>:
 8007460:	e7fe      	b.n	8007460 <ADC3_IRQHandler>
	...

08007464 <HAL_Init>:
 8007464:	b580      	push	{r7, lr}
 8007466:	b082      	sub	sp, #8
 8007468:	af00      	add	r7, sp, #0
 800746a:	2003      	movs	r0, #3
 800746c:	f000 f9b0 	bl	80077d0 <HAL_NVIC_SetPriorityGrouping>
 8007470:	f001 ff7a 	bl	8009368 <HAL_RCC_GetSysClockFreq>
 8007474:	4602      	mov	r2, r0
 8007476:	4b15      	ldr	r3, [pc, #84]	; (80074cc <HAL_Init+0x68>)
 8007478:	699b      	ldr	r3, [r3, #24]
 800747a:	0a1b      	lsrs	r3, r3, #8
 800747c:	f003 030f 	and.w	r3, r3, #15
 8007480:	4913      	ldr	r1, [pc, #76]	; (80074d0 <HAL_Init+0x6c>)
 8007482:	5ccb      	ldrb	r3, [r1, r3]
 8007484:	f003 031f 	and.w	r3, r3, #31
 8007488:	fa22 f303 	lsr.w	r3, r2, r3
 800748c:	607b      	str	r3, [r7, #4]
 800748e:	4b0f      	ldr	r3, [pc, #60]	; (80074cc <HAL_Init+0x68>)
 8007490:	699b      	ldr	r3, [r3, #24]
 8007492:	f003 030f 	and.w	r3, r3, #15
 8007496:	4a0e      	ldr	r2, [pc, #56]	; (80074d0 <HAL_Init+0x6c>)
 8007498:	5cd3      	ldrb	r3, [r2, r3]
 800749a:	f003 031f 	and.w	r3, r3, #31
 800749e:	687a      	ldr	r2, [r7, #4]
 80074a0:	fa22 f303 	lsr.w	r3, r2, r3
 80074a4:	4a0b      	ldr	r2, [pc, #44]	; (80074d4 <HAL_Init+0x70>)
 80074a6:	6013      	str	r3, [r2, #0]
 80074a8:	4a0b      	ldr	r2, [pc, #44]	; (80074d8 <HAL_Init+0x74>)
 80074aa:	687b      	ldr	r3, [r7, #4]
 80074ac:	6013      	str	r3, [r2, #0]
 80074ae:	2000      	movs	r0, #0
 80074b0:	f000 f814 	bl	80074dc <HAL_InitTick>
 80074b4:	4603      	mov	r3, r0
 80074b6:	2b00      	cmp	r3, #0
 80074b8:	d001      	beq.n	80074be <HAL_Init+0x5a>
 80074ba:	2301      	movs	r3, #1
 80074bc:	e002      	b.n	80074c4 <HAL_Init+0x60>
 80074be:	f7fd f875 	bl	80045ac <HAL_MspInit>
 80074c2:	2300      	movs	r3, #0
 80074c4:	4618      	mov	r0, r3
 80074c6:	3708      	adds	r7, #8
 80074c8:	46bd      	mov	sp, r7
 80074ca:	bd80      	pop	{r7, pc}
 80074cc:	58024400 	.word	0x58024400
 80074d0:	08012be0 	.word	0x08012be0
 80074d4:	240000b4 	.word	0x240000b4
 80074d8:	240000b0 	.word	0x240000b0

080074dc <HAL_InitTick>:
 80074dc:	b580      	push	{r7, lr}
 80074de:	b082      	sub	sp, #8
 80074e0:	af00      	add	r7, sp, #0
 80074e2:	6078      	str	r0, [r7, #4]
 80074e4:	4b15      	ldr	r3, [pc, #84]	; (800753c <HAL_InitTick+0x60>)
 80074e6:	781b      	ldrb	r3, [r3, #0]
 80074e8:	2b00      	cmp	r3, #0
 80074ea:	d101      	bne.n	80074f0 <HAL_InitTick+0x14>
 80074ec:	2301      	movs	r3, #1
 80074ee:	e021      	b.n	8007534 <HAL_InitTick+0x58>
 80074f0:	4b13      	ldr	r3, [pc, #76]	; (8007540 <HAL_InitTick+0x64>)
 80074f2:	681a      	ldr	r2, [r3, #0]
 80074f4:	4b11      	ldr	r3, [pc, #68]	; (800753c <HAL_InitTick+0x60>)
 80074f6:	781b      	ldrb	r3, [r3, #0]
 80074f8:	4619      	mov	r1, r3
 80074fa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80074fe:	fbb3 f3f1 	udiv	r3, r3, r1
 8007502:	fbb2 f3f3 	udiv	r3, r2, r3
 8007506:	4618      	mov	r0, r3
 8007508:	f000 f9a3 	bl	8007852 <HAL_SYSTICK_Config>
 800750c:	4603      	mov	r3, r0
 800750e:	2b00      	cmp	r3, #0
 8007510:	d001      	beq.n	8007516 <HAL_InitTick+0x3a>
 8007512:	2301      	movs	r3, #1
 8007514:	e00e      	b.n	8007534 <HAL_InitTick+0x58>
 8007516:	687b      	ldr	r3, [r7, #4]
 8007518:	2b0f      	cmp	r3, #15
 800751a:	d80a      	bhi.n	8007532 <HAL_InitTick+0x56>
 800751c:	2200      	movs	r2, #0
 800751e:	6879      	ldr	r1, [r7, #4]
 8007520:	f04f 30ff 	mov.w	r0, #4294967295
 8007524:	f000 f95f 	bl	80077e6 <HAL_NVIC_SetPriority>
 8007528:	4a06      	ldr	r2, [pc, #24]	; (8007544 <HAL_InitTick+0x68>)
 800752a:	687b      	ldr	r3, [r7, #4]
 800752c:	6013      	str	r3, [r2, #0]
 800752e:	2300      	movs	r3, #0
 8007530:	e000      	b.n	8007534 <HAL_InitTick+0x58>
 8007532:	2301      	movs	r3, #1
 8007534:	4618      	mov	r0, r3
 8007536:	3708      	adds	r7, #8
 8007538:	46bd      	mov	sp, r7
 800753a:	bd80      	pop	{r7, pc}
 800753c:	240000bc 	.word	0x240000bc
 8007540:	240000b0 	.word	0x240000b0
 8007544:	240000b8 	.word	0x240000b8

08007548 <HAL_IncTick>:
 8007548:	b480      	push	{r7}
 800754a:	af00      	add	r7, sp, #0
 800754c:	4b06      	ldr	r3, [pc, #24]	; (8007568 <HAL_IncTick+0x20>)
 800754e:	781b      	ldrb	r3, [r3, #0]
 8007550:	461a      	mov	r2, r3
 8007552:	4b06      	ldr	r3, [pc, #24]	; (800756c <HAL_IncTick+0x24>)
 8007554:	681b      	ldr	r3, [r3, #0]
 8007556:	4413      	add	r3, r2
 8007558:	4a04      	ldr	r2, [pc, #16]	; (800756c <HAL_IncTick+0x24>)
 800755a:	6013      	str	r3, [r2, #0]
 800755c:	bf00      	nop
 800755e:	46bd      	mov	sp, r7
 8007560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007564:	4770      	bx	lr
 8007566:	bf00      	nop
 8007568:	240000bc 	.word	0x240000bc
 800756c:	24000c5c 	.word	0x24000c5c

08007570 <HAL_GetTick>:
 8007570:	b480      	push	{r7}
 8007572:	af00      	add	r7, sp, #0
 8007574:	4b03      	ldr	r3, [pc, #12]	; (8007584 <HAL_GetTick+0x14>)
 8007576:	681b      	ldr	r3, [r3, #0]
 8007578:	4618      	mov	r0, r3
 800757a:	46bd      	mov	sp, r7
 800757c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007580:	4770      	bx	lr
 8007582:	bf00      	nop
 8007584:	24000c5c 	.word	0x24000c5c

08007588 <HAL_Delay>:
 8007588:	b580      	push	{r7, lr}
 800758a:	b084      	sub	sp, #16
 800758c:	af00      	add	r7, sp, #0
 800758e:	6078      	str	r0, [r7, #4]
 8007590:	f7ff ffee 	bl	8007570 <HAL_GetTick>
 8007594:	60b8      	str	r0, [r7, #8]
 8007596:	687b      	ldr	r3, [r7, #4]
 8007598:	60fb      	str	r3, [r7, #12]
 800759a:	68fb      	ldr	r3, [r7, #12]
 800759c:	f1b3 3fff 	cmp.w	r3, #4294967295
 80075a0:	d005      	beq.n	80075ae <HAL_Delay+0x26>
 80075a2:	4b0a      	ldr	r3, [pc, #40]	; (80075cc <HAL_Delay+0x44>)
 80075a4:	781b      	ldrb	r3, [r3, #0]
 80075a6:	461a      	mov	r2, r3
 80075a8:	68fb      	ldr	r3, [r7, #12]
 80075aa:	4413      	add	r3, r2
 80075ac:	60fb      	str	r3, [r7, #12]
 80075ae:	bf00      	nop
 80075b0:	f7ff ffde 	bl	8007570 <HAL_GetTick>
 80075b4:	4602      	mov	r2, r0
 80075b6:	68bb      	ldr	r3, [r7, #8]
 80075b8:	1ad3      	subs	r3, r2, r3
 80075ba:	68fa      	ldr	r2, [r7, #12]
 80075bc:	429a      	cmp	r2, r3
 80075be:	d8f7      	bhi.n	80075b0 <HAL_Delay+0x28>
 80075c0:	bf00      	nop
 80075c2:	bf00      	nop
 80075c4:	3710      	adds	r7, #16
 80075c6:	46bd      	mov	sp, r7
 80075c8:	bd80      	pop	{r7, pc}
 80075ca:	bf00      	nop
 80075cc:	240000bc 	.word	0x240000bc

080075d0 <HAL_GetREVID>:
 80075d0:	b480      	push	{r7}
 80075d2:	af00      	add	r7, sp, #0
 80075d4:	4b03      	ldr	r3, [pc, #12]	; (80075e4 <HAL_GetREVID+0x14>)
 80075d6:	681b      	ldr	r3, [r3, #0]
 80075d8:	0c1b      	lsrs	r3, r3, #16
 80075da:	4618      	mov	r0, r3
 80075dc:	46bd      	mov	sp, r7
 80075de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075e2:	4770      	bx	lr
 80075e4:	5c001000 	.word	0x5c001000

080075e8 <__NVIC_SetPriorityGrouping>:
 80075e8:	b480      	push	{r7}
 80075ea:	b085      	sub	sp, #20
 80075ec:	af00      	add	r7, sp, #0
 80075ee:	6078      	str	r0, [r7, #4]
 80075f0:	687b      	ldr	r3, [r7, #4]
 80075f2:	f003 0307 	and.w	r3, r3, #7
 80075f6:	60fb      	str	r3, [r7, #12]
 80075f8:	4b0b      	ldr	r3, [pc, #44]	; (8007628 <__NVIC_SetPriorityGrouping+0x40>)
 80075fa:	68db      	ldr	r3, [r3, #12]
 80075fc:	60bb      	str	r3, [r7, #8]
 80075fe:	68ba      	ldr	r2, [r7, #8]
 8007600:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8007604:	4013      	ands	r3, r2
 8007606:	60bb      	str	r3, [r7, #8]
 8007608:	68fb      	ldr	r3, [r7, #12]
 800760a:	021a      	lsls	r2, r3, #8
 800760c:	68bb      	ldr	r3, [r7, #8]
 800760e:	431a      	orrs	r2, r3
 8007610:	4b06      	ldr	r3, [pc, #24]	; (800762c <__NVIC_SetPriorityGrouping+0x44>)
 8007612:	4313      	orrs	r3, r2
 8007614:	60bb      	str	r3, [r7, #8]
 8007616:	4a04      	ldr	r2, [pc, #16]	; (8007628 <__NVIC_SetPriorityGrouping+0x40>)
 8007618:	68bb      	ldr	r3, [r7, #8]
 800761a:	60d3      	str	r3, [r2, #12]
 800761c:	bf00      	nop
 800761e:	3714      	adds	r7, #20
 8007620:	46bd      	mov	sp, r7
 8007622:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007626:	4770      	bx	lr
 8007628:	e000ed00 	.word	0xe000ed00
 800762c:	05fa0000 	.word	0x05fa0000

08007630 <__NVIC_GetPriorityGrouping>:
 8007630:	b480      	push	{r7}
 8007632:	af00      	add	r7, sp, #0
 8007634:	4b04      	ldr	r3, [pc, #16]	; (8007648 <__NVIC_GetPriorityGrouping+0x18>)
 8007636:	68db      	ldr	r3, [r3, #12]
 8007638:	0a1b      	lsrs	r3, r3, #8
 800763a:	f003 0307 	and.w	r3, r3, #7
 800763e:	4618      	mov	r0, r3
 8007640:	46bd      	mov	sp, r7
 8007642:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007646:	4770      	bx	lr
 8007648:	e000ed00 	.word	0xe000ed00

0800764c <__NVIC_EnableIRQ>:
 800764c:	b480      	push	{r7}
 800764e:	b083      	sub	sp, #12
 8007650:	af00      	add	r7, sp, #0
 8007652:	4603      	mov	r3, r0
 8007654:	80fb      	strh	r3, [r7, #6]
 8007656:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800765a:	2b00      	cmp	r3, #0
 800765c:	db0b      	blt.n	8007676 <__NVIC_EnableIRQ+0x2a>
 800765e:	88fb      	ldrh	r3, [r7, #6]
 8007660:	f003 021f 	and.w	r2, r3, #31
 8007664:	4907      	ldr	r1, [pc, #28]	; (8007684 <__NVIC_EnableIRQ+0x38>)
 8007666:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800766a:	095b      	lsrs	r3, r3, #5
 800766c:	2001      	movs	r0, #1
 800766e:	fa00 f202 	lsl.w	r2, r0, r2
 8007672:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8007676:	bf00      	nop
 8007678:	370c      	adds	r7, #12
 800767a:	46bd      	mov	sp, r7
 800767c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007680:	4770      	bx	lr
 8007682:	bf00      	nop
 8007684:	e000e100 	.word	0xe000e100

08007688 <__NVIC_DisableIRQ>:
 8007688:	b480      	push	{r7}
 800768a:	b083      	sub	sp, #12
 800768c:	af00      	add	r7, sp, #0
 800768e:	4603      	mov	r3, r0
 8007690:	80fb      	strh	r3, [r7, #6]
 8007692:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8007696:	2b00      	cmp	r3, #0
 8007698:	db12      	blt.n	80076c0 <__NVIC_DisableIRQ+0x38>
 800769a:	88fb      	ldrh	r3, [r7, #6]
 800769c:	f003 021f 	and.w	r2, r3, #31
 80076a0:	490a      	ldr	r1, [pc, #40]	; (80076cc <__NVIC_DisableIRQ+0x44>)
 80076a2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80076a6:	095b      	lsrs	r3, r3, #5
 80076a8:	2001      	movs	r0, #1
 80076aa:	fa00 f202 	lsl.w	r2, r0, r2
 80076ae:	3320      	adds	r3, #32
 80076b0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80076b4:	f3bf 8f4f 	dsb	sy
 80076b8:	bf00      	nop
 80076ba:	f3bf 8f6f 	isb	sy
 80076be:	bf00      	nop
 80076c0:	bf00      	nop
 80076c2:	370c      	adds	r7, #12
 80076c4:	46bd      	mov	sp, r7
 80076c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076ca:	4770      	bx	lr
 80076cc:	e000e100 	.word	0xe000e100

080076d0 <__NVIC_SetPriority>:
 80076d0:	b480      	push	{r7}
 80076d2:	b083      	sub	sp, #12
 80076d4:	af00      	add	r7, sp, #0
 80076d6:	4603      	mov	r3, r0
 80076d8:	6039      	str	r1, [r7, #0]
 80076da:	80fb      	strh	r3, [r7, #6]
 80076dc:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80076e0:	2b00      	cmp	r3, #0
 80076e2:	db0a      	blt.n	80076fa <__NVIC_SetPriority+0x2a>
 80076e4:	683b      	ldr	r3, [r7, #0]
 80076e6:	b2da      	uxtb	r2, r3
 80076e8:	490c      	ldr	r1, [pc, #48]	; (800771c <__NVIC_SetPriority+0x4c>)
 80076ea:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80076ee:	0112      	lsls	r2, r2, #4
 80076f0:	b2d2      	uxtb	r2, r2
 80076f2:	440b      	add	r3, r1
 80076f4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80076f8:	e00a      	b.n	8007710 <__NVIC_SetPriority+0x40>
 80076fa:	683b      	ldr	r3, [r7, #0]
 80076fc:	b2da      	uxtb	r2, r3
 80076fe:	4908      	ldr	r1, [pc, #32]	; (8007720 <__NVIC_SetPriority+0x50>)
 8007700:	88fb      	ldrh	r3, [r7, #6]
 8007702:	f003 030f 	and.w	r3, r3, #15
 8007706:	3b04      	subs	r3, #4
 8007708:	0112      	lsls	r2, r2, #4
 800770a:	b2d2      	uxtb	r2, r2
 800770c:	440b      	add	r3, r1
 800770e:	761a      	strb	r2, [r3, #24]
 8007710:	bf00      	nop
 8007712:	370c      	adds	r7, #12
 8007714:	46bd      	mov	sp, r7
 8007716:	f85d 7b04 	ldr.w	r7, [sp], #4
 800771a:	4770      	bx	lr
 800771c:	e000e100 	.word	0xe000e100
 8007720:	e000ed00 	.word	0xe000ed00

08007724 <NVIC_EncodePriority>:
 8007724:	b480      	push	{r7}
 8007726:	b089      	sub	sp, #36	; 0x24
 8007728:	af00      	add	r7, sp, #0
 800772a:	60f8      	str	r0, [r7, #12]
 800772c:	60b9      	str	r1, [r7, #8]
 800772e:	607a      	str	r2, [r7, #4]
 8007730:	68fb      	ldr	r3, [r7, #12]
 8007732:	f003 0307 	and.w	r3, r3, #7
 8007736:	61fb      	str	r3, [r7, #28]
 8007738:	69fb      	ldr	r3, [r7, #28]
 800773a:	f1c3 0307 	rsb	r3, r3, #7
 800773e:	2b04      	cmp	r3, #4
 8007740:	bf28      	it	cs
 8007742:	2304      	movcs	r3, #4
 8007744:	61bb      	str	r3, [r7, #24]
 8007746:	69fb      	ldr	r3, [r7, #28]
 8007748:	3304      	adds	r3, #4
 800774a:	2b06      	cmp	r3, #6
 800774c:	d902      	bls.n	8007754 <NVIC_EncodePriority+0x30>
 800774e:	69fb      	ldr	r3, [r7, #28]
 8007750:	3b03      	subs	r3, #3
 8007752:	e000      	b.n	8007756 <NVIC_EncodePriority+0x32>
 8007754:	2300      	movs	r3, #0
 8007756:	617b      	str	r3, [r7, #20]
 8007758:	f04f 32ff 	mov.w	r2, #4294967295
 800775c:	69bb      	ldr	r3, [r7, #24]
 800775e:	fa02 f303 	lsl.w	r3, r2, r3
 8007762:	43da      	mvns	r2, r3
 8007764:	68bb      	ldr	r3, [r7, #8]
 8007766:	401a      	ands	r2, r3
 8007768:	697b      	ldr	r3, [r7, #20]
 800776a:	409a      	lsls	r2, r3
 800776c:	f04f 31ff 	mov.w	r1, #4294967295
 8007770:	697b      	ldr	r3, [r7, #20]
 8007772:	fa01 f303 	lsl.w	r3, r1, r3
 8007776:	43d9      	mvns	r1, r3
 8007778:	687b      	ldr	r3, [r7, #4]
 800777a:	400b      	ands	r3, r1
 800777c:	4313      	orrs	r3, r2
 800777e:	4618      	mov	r0, r3
 8007780:	3724      	adds	r7, #36	; 0x24
 8007782:	46bd      	mov	sp, r7
 8007784:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007788:	4770      	bx	lr
	...

0800778c <SysTick_Config>:
 800778c:	b580      	push	{r7, lr}
 800778e:	b082      	sub	sp, #8
 8007790:	af00      	add	r7, sp, #0
 8007792:	6078      	str	r0, [r7, #4]
 8007794:	687b      	ldr	r3, [r7, #4]
 8007796:	3b01      	subs	r3, #1
 8007798:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800779c:	d301      	bcc.n	80077a2 <SysTick_Config+0x16>
 800779e:	2301      	movs	r3, #1
 80077a0:	e00f      	b.n	80077c2 <SysTick_Config+0x36>
 80077a2:	4a0a      	ldr	r2, [pc, #40]	; (80077cc <SysTick_Config+0x40>)
 80077a4:	687b      	ldr	r3, [r7, #4]
 80077a6:	3b01      	subs	r3, #1
 80077a8:	6053      	str	r3, [r2, #4]
 80077aa:	210f      	movs	r1, #15
 80077ac:	f04f 30ff 	mov.w	r0, #4294967295
 80077b0:	f7ff ff8e 	bl	80076d0 <__NVIC_SetPriority>
 80077b4:	4b05      	ldr	r3, [pc, #20]	; (80077cc <SysTick_Config+0x40>)
 80077b6:	2200      	movs	r2, #0
 80077b8:	609a      	str	r2, [r3, #8]
 80077ba:	4b04      	ldr	r3, [pc, #16]	; (80077cc <SysTick_Config+0x40>)
 80077bc:	2207      	movs	r2, #7
 80077be:	601a      	str	r2, [r3, #0]
 80077c0:	2300      	movs	r3, #0
 80077c2:	4618      	mov	r0, r3
 80077c4:	3708      	adds	r7, #8
 80077c6:	46bd      	mov	sp, r7
 80077c8:	bd80      	pop	{r7, pc}
 80077ca:	bf00      	nop
 80077cc:	e000e010 	.word	0xe000e010

080077d0 <HAL_NVIC_SetPriorityGrouping>:
 80077d0:	b580      	push	{r7, lr}
 80077d2:	b082      	sub	sp, #8
 80077d4:	af00      	add	r7, sp, #0
 80077d6:	6078      	str	r0, [r7, #4]
 80077d8:	6878      	ldr	r0, [r7, #4]
 80077da:	f7ff ff05 	bl	80075e8 <__NVIC_SetPriorityGrouping>
 80077de:	bf00      	nop
 80077e0:	3708      	adds	r7, #8
 80077e2:	46bd      	mov	sp, r7
 80077e4:	bd80      	pop	{r7, pc}

080077e6 <HAL_NVIC_SetPriority>:
 80077e6:	b580      	push	{r7, lr}
 80077e8:	b086      	sub	sp, #24
 80077ea:	af00      	add	r7, sp, #0
 80077ec:	4603      	mov	r3, r0
 80077ee:	60b9      	str	r1, [r7, #8]
 80077f0:	607a      	str	r2, [r7, #4]
 80077f2:	81fb      	strh	r3, [r7, #14]
 80077f4:	f7ff ff1c 	bl	8007630 <__NVIC_GetPriorityGrouping>
 80077f8:	6178      	str	r0, [r7, #20]
 80077fa:	687a      	ldr	r2, [r7, #4]
 80077fc:	68b9      	ldr	r1, [r7, #8]
 80077fe:	6978      	ldr	r0, [r7, #20]
 8007800:	f7ff ff90 	bl	8007724 <NVIC_EncodePriority>
 8007804:	4602      	mov	r2, r0
 8007806:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800780a:	4611      	mov	r1, r2
 800780c:	4618      	mov	r0, r3
 800780e:	f7ff ff5f 	bl	80076d0 <__NVIC_SetPriority>
 8007812:	bf00      	nop
 8007814:	3718      	adds	r7, #24
 8007816:	46bd      	mov	sp, r7
 8007818:	bd80      	pop	{r7, pc}

0800781a <HAL_NVIC_EnableIRQ>:
 800781a:	b580      	push	{r7, lr}
 800781c:	b082      	sub	sp, #8
 800781e:	af00      	add	r7, sp, #0
 8007820:	4603      	mov	r3, r0
 8007822:	80fb      	strh	r3, [r7, #6]
 8007824:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8007828:	4618      	mov	r0, r3
 800782a:	f7ff ff0f 	bl	800764c <__NVIC_EnableIRQ>
 800782e:	bf00      	nop
 8007830:	3708      	adds	r7, #8
 8007832:	46bd      	mov	sp, r7
 8007834:	bd80      	pop	{r7, pc}

08007836 <HAL_NVIC_DisableIRQ>:
 8007836:	b580      	push	{r7, lr}
 8007838:	b082      	sub	sp, #8
 800783a:	af00      	add	r7, sp, #0
 800783c:	4603      	mov	r3, r0
 800783e:	80fb      	strh	r3, [r7, #6]
 8007840:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8007844:	4618      	mov	r0, r3
 8007846:	f7ff ff1f 	bl	8007688 <__NVIC_DisableIRQ>
 800784a:	bf00      	nop
 800784c:	3708      	adds	r7, #8
 800784e:	46bd      	mov	sp, r7
 8007850:	bd80      	pop	{r7, pc}

08007852 <HAL_SYSTICK_Config>:
 8007852:	b580      	push	{r7, lr}
 8007854:	b082      	sub	sp, #8
 8007856:	af00      	add	r7, sp, #0
 8007858:	6078      	str	r0, [r7, #4]
 800785a:	6878      	ldr	r0, [r7, #4]
 800785c:	f7ff ff96 	bl	800778c <SysTick_Config>
 8007860:	4603      	mov	r3, r0
 8007862:	4618      	mov	r0, r3
 8007864:	3708      	adds	r7, #8
 8007866:	46bd      	mov	sp, r7
 8007868:	bd80      	pop	{r7, pc}
	...

0800786c <HAL_DMA_Abort>:
 800786c:	b580      	push	{r7, lr}
 800786e:	b086      	sub	sp, #24
 8007870:	af00      	add	r7, sp, #0
 8007872:	6078      	str	r0, [r7, #4]
 8007874:	f7ff fe7c 	bl	8007570 <HAL_GetTick>
 8007878:	6138      	str	r0, [r7, #16]
 800787a:	687b      	ldr	r3, [r7, #4]
 800787c:	2b00      	cmp	r3, #0
 800787e:	d101      	bne.n	8007884 <HAL_DMA_Abort+0x18>
 8007880:	2301      	movs	r3, #1
 8007882:	e2dc      	b.n	8007e3e <HAL_DMA_Abort+0x5d2>
 8007884:	687b      	ldr	r3, [r7, #4]
 8007886:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800788a:	b2db      	uxtb	r3, r3
 800788c:	2b02      	cmp	r3, #2
 800788e:	d008      	beq.n	80078a2 <HAL_DMA_Abort+0x36>
 8007890:	687b      	ldr	r3, [r7, #4]
 8007892:	2280      	movs	r2, #128	; 0x80
 8007894:	655a      	str	r2, [r3, #84]	; 0x54
 8007896:	687b      	ldr	r3, [r7, #4]
 8007898:	2200      	movs	r2, #0
 800789a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800789e:	2301      	movs	r3, #1
 80078a0:	e2cd      	b.n	8007e3e <HAL_DMA_Abort+0x5d2>
 80078a2:	687b      	ldr	r3, [r7, #4]
 80078a4:	681b      	ldr	r3, [r3, #0]
 80078a6:	4a76      	ldr	r2, [pc, #472]	; (8007a80 <HAL_DMA_Abort+0x214>)
 80078a8:	4293      	cmp	r3, r2
 80078aa:	d04a      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 80078ac:	687b      	ldr	r3, [r7, #4]
 80078ae:	681b      	ldr	r3, [r3, #0]
 80078b0:	4a74      	ldr	r2, [pc, #464]	; (8007a84 <HAL_DMA_Abort+0x218>)
 80078b2:	4293      	cmp	r3, r2
 80078b4:	d045      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 80078b6:	687b      	ldr	r3, [r7, #4]
 80078b8:	681b      	ldr	r3, [r3, #0]
 80078ba:	4a73      	ldr	r2, [pc, #460]	; (8007a88 <HAL_DMA_Abort+0x21c>)
 80078bc:	4293      	cmp	r3, r2
 80078be:	d040      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 80078c0:	687b      	ldr	r3, [r7, #4]
 80078c2:	681b      	ldr	r3, [r3, #0]
 80078c4:	4a71      	ldr	r2, [pc, #452]	; (8007a8c <HAL_DMA_Abort+0x220>)
 80078c6:	4293      	cmp	r3, r2
 80078c8:	d03b      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 80078ca:	687b      	ldr	r3, [r7, #4]
 80078cc:	681b      	ldr	r3, [r3, #0]
 80078ce:	4a70      	ldr	r2, [pc, #448]	; (8007a90 <HAL_DMA_Abort+0x224>)
 80078d0:	4293      	cmp	r3, r2
 80078d2:	d036      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 80078d4:	687b      	ldr	r3, [r7, #4]
 80078d6:	681b      	ldr	r3, [r3, #0]
 80078d8:	4a6e      	ldr	r2, [pc, #440]	; (8007a94 <HAL_DMA_Abort+0x228>)
 80078da:	4293      	cmp	r3, r2
 80078dc:	d031      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 80078de:	687b      	ldr	r3, [r7, #4]
 80078e0:	681b      	ldr	r3, [r3, #0]
 80078e2:	4a6d      	ldr	r2, [pc, #436]	; (8007a98 <HAL_DMA_Abort+0x22c>)
 80078e4:	4293      	cmp	r3, r2
 80078e6:	d02c      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 80078e8:	687b      	ldr	r3, [r7, #4]
 80078ea:	681b      	ldr	r3, [r3, #0]
 80078ec:	4a6b      	ldr	r2, [pc, #428]	; (8007a9c <HAL_DMA_Abort+0x230>)
 80078ee:	4293      	cmp	r3, r2
 80078f0:	d027      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 80078f2:	687b      	ldr	r3, [r7, #4]
 80078f4:	681b      	ldr	r3, [r3, #0]
 80078f6:	4a6a      	ldr	r2, [pc, #424]	; (8007aa0 <HAL_DMA_Abort+0x234>)
 80078f8:	4293      	cmp	r3, r2
 80078fa:	d022      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	681b      	ldr	r3, [r3, #0]
 8007900:	4a68      	ldr	r2, [pc, #416]	; (8007aa4 <HAL_DMA_Abort+0x238>)
 8007902:	4293      	cmp	r3, r2
 8007904:	d01d      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 8007906:	687b      	ldr	r3, [r7, #4]
 8007908:	681b      	ldr	r3, [r3, #0]
 800790a:	4a67      	ldr	r2, [pc, #412]	; (8007aa8 <HAL_DMA_Abort+0x23c>)
 800790c:	4293      	cmp	r3, r2
 800790e:	d018      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 8007910:	687b      	ldr	r3, [r7, #4]
 8007912:	681b      	ldr	r3, [r3, #0]
 8007914:	4a65      	ldr	r2, [pc, #404]	; (8007aac <HAL_DMA_Abort+0x240>)
 8007916:	4293      	cmp	r3, r2
 8007918:	d013      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 800791a:	687b      	ldr	r3, [r7, #4]
 800791c:	681b      	ldr	r3, [r3, #0]
 800791e:	4a64      	ldr	r2, [pc, #400]	; (8007ab0 <HAL_DMA_Abort+0x244>)
 8007920:	4293      	cmp	r3, r2
 8007922:	d00e      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 8007924:	687b      	ldr	r3, [r7, #4]
 8007926:	681b      	ldr	r3, [r3, #0]
 8007928:	4a62      	ldr	r2, [pc, #392]	; (8007ab4 <HAL_DMA_Abort+0x248>)
 800792a:	4293      	cmp	r3, r2
 800792c:	d009      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 800792e:	687b      	ldr	r3, [r7, #4]
 8007930:	681b      	ldr	r3, [r3, #0]
 8007932:	4a61      	ldr	r2, [pc, #388]	; (8007ab8 <HAL_DMA_Abort+0x24c>)
 8007934:	4293      	cmp	r3, r2
 8007936:	d004      	beq.n	8007942 <HAL_DMA_Abort+0xd6>
 8007938:	687b      	ldr	r3, [r7, #4]
 800793a:	681b      	ldr	r3, [r3, #0]
 800793c:	4a5f      	ldr	r2, [pc, #380]	; (8007abc <HAL_DMA_Abort+0x250>)
 800793e:	4293      	cmp	r3, r2
 8007940:	d101      	bne.n	8007946 <HAL_DMA_Abort+0xda>
 8007942:	2301      	movs	r3, #1
 8007944:	e000      	b.n	8007948 <HAL_DMA_Abort+0xdc>
 8007946:	2300      	movs	r3, #0
 8007948:	2b00      	cmp	r3, #0
 800794a:	d013      	beq.n	8007974 <HAL_DMA_Abort+0x108>
 800794c:	687b      	ldr	r3, [r7, #4]
 800794e:	681b      	ldr	r3, [r3, #0]
 8007950:	681a      	ldr	r2, [r3, #0]
 8007952:	687b      	ldr	r3, [r7, #4]
 8007954:	681b      	ldr	r3, [r3, #0]
 8007956:	f022 021e 	bic.w	r2, r2, #30
 800795a:	601a      	str	r2, [r3, #0]
 800795c:	687b      	ldr	r3, [r7, #4]
 800795e:	681b      	ldr	r3, [r3, #0]
 8007960:	695a      	ldr	r2, [r3, #20]
 8007962:	687b      	ldr	r3, [r7, #4]
 8007964:	681b      	ldr	r3, [r3, #0]
 8007966:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800796a:	615a      	str	r2, [r3, #20]
 800796c:	687b      	ldr	r3, [r7, #4]
 800796e:	681b      	ldr	r3, [r3, #0]
 8007970:	617b      	str	r3, [r7, #20]
 8007972:	e00a      	b.n	800798a <HAL_DMA_Abort+0x11e>
 8007974:	687b      	ldr	r3, [r7, #4]
 8007976:	681b      	ldr	r3, [r3, #0]
 8007978:	681a      	ldr	r2, [r3, #0]
 800797a:	687b      	ldr	r3, [r7, #4]
 800797c:	681b      	ldr	r3, [r3, #0]
 800797e:	f022 020e 	bic.w	r2, r2, #14
 8007982:	601a      	str	r2, [r3, #0]
 8007984:	687b      	ldr	r3, [r7, #4]
 8007986:	681b      	ldr	r3, [r3, #0]
 8007988:	617b      	str	r3, [r7, #20]
 800798a:	687b      	ldr	r3, [r7, #4]
 800798c:	681b      	ldr	r3, [r3, #0]
 800798e:	4a3c      	ldr	r2, [pc, #240]	; (8007a80 <HAL_DMA_Abort+0x214>)
 8007990:	4293      	cmp	r3, r2
 8007992:	d072      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 8007994:	687b      	ldr	r3, [r7, #4]
 8007996:	681b      	ldr	r3, [r3, #0]
 8007998:	4a3a      	ldr	r2, [pc, #232]	; (8007a84 <HAL_DMA_Abort+0x218>)
 800799a:	4293      	cmp	r3, r2
 800799c:	d06d      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 800799e:	687b      	ldr	r3, [r7, #4]
 80079a0:	681b      	ldr	r3, [r3, #0]
 80079a2:	4a39      	ldr	r2, [pc, #228]	; (8007a88 <HAL_DMA_Abort+0x21c>)
 80079a4:	4293      	cmp	r3, r2
 80079a6:	d068      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 80079a8:	687b      	ldr	r3, [r7, #4]
 80079aa:	681b      	ldr	r3, [r3, #0]
 80079ac:	4a37      	ldr	r2, [pc, #220]	; (8007a8c <HAL_DMA_Abort+0x220>)
 80079ae:	4293      	cmp	r3, r2
 80079b0:	d063      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 80079b2:	687b      	ldr	r3, [r7, #4]
 80079b4:	681b      	ldr	r3, [r3, #0]
 80079b6:	4a36      	ldr	r2, [pc, #216]	; (8007a90 <HAL_DMA_Abort+0x224>)
 80079b8:	4293      	cmp	r3, r2
 80079ba:	d05e      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 80079bc:	687b      	ldr	r3, [r7, #4]
 80079be:	681b      	ldr	r3, [r3, #0]
 80079c0:	4a34      	ldr	r2, [pc, #208]	; (8007a94 <HAL_DMA_Abort+0x228>)
 80079c2:	4293      	cmp	r3, r2
 80079c4:	d059      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 80079c6:	687b      	ldr	r3, [r7, #4]
 80079c8:	681b      	ldr	r3, [r3, #0]
 80079ca:	4a33      	ldr	r2, [pc, #204]	; (8007a98 <HAL_DMA_Abort+0x22c>)
 80079cc:	4293      	cmp	r3, r2
 80079ce:	d054      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 80079d0:	687b      	ldr	r3, [r7, #4]
 80079d2:	681b      	ldr	r3, [r3, #0]
 80079d4:	4a31      	ldr	r2, [pc, #196]	; (8007a9c <HAL_DMA_Abort+0x230>)
 80079d6:	4293      	cmp	r3, r2
 80079d8:	d04f      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 80079da:	687b      	ldr	r3, [r7, #4]
 80079dc:	681b      	ldr	r3, [r3, #0]
 80079de:	4a30      	ldr	r2, [pc, #192]	; (8007aa0 <HAL_DMA_Abort+0x234>)
 80079e0:	4293      	cmp	r3, r2
 80079e2:	d04a      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 80079e4:	687b      	ldr	r3, [r7, #4]
 80079e6:	681b      	ldr	r3, [r3, #0]
 80079e8:	4a2e      	ldr	r2, [pc, #184]	; (8007aa4 <HAL_DMA_Abort+0x238>)
 80079ea:	4293      	cmp	r3, r2
 80079ec:	d045      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 80079ee:	687b      	ldr	r3, [r7, #4]
 80079f0:	681b      	ldr	r3, [r3, #0]
 80079f2:	4a2d      	ldr	r2, [pc, #180]	; (8007aa8 <HAL_DMA_Abort+0x23c>)
 80079f4:	4293      	cmp	r3, r2
 80079f6:	d040      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 80079f8:	687b      	ldr	r3, [r7, #4]
 80079fa:	681b      	ldr	r3, [r3, #0]
 80079fc:	4a2b      	ldr	r2, [pc, #172]	; (8007aac <HAL_DMA_Abort+0x240>)
 80079fe:	4293      	cmp	r3, r2
 8007a00:	d03b      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 8007a02:	687b      	ldr	r3, [r7, #4]
 8007a04:	681b      	ldr	r3, [r3, #0]
 8007a06:	4a2a      	ldr	r2, [pc, #168]	; (8007ab0 <HAL_DMA_Abort+0x244>)
 8007a08:	4293      	cmp	r3, r2
 8007a0a:	d036      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 8007a0c:	687b      	ldr	r3, [r7, #4]
 8007a0e:	681b      	ldr	r3, [r3, #0]
 8007a10:	4a28      	ldr	r2, [pc, #160]	; (8007ab4 <HAL_DMA_Abort+0x248>)
 8007a12:	4293      	cmp	r3, r2
 8007a14:	d031      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 8007a16:	687b      	ldr	r3, [r7, #4]
 8007a18:	681b      	ldr	r3, [r3, #0]
 8007a1a:	4a27      	ldr	r2, [pc, #156]	; (8007ab8 <HAL_DMA_Abort+0x24c>)
 8007a1c:	4293      	cmp	r3, r2
 8007a1e:	d02c      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 8007a20:	687b      	ldr	r3, [r7, #4]
 8007a22:	681b      	ldr	r3, [r3, #0]
 8007a24:	4a25      	ldr	r2, [pc, #148]	; (8007abc <HAL_DMA_Abort+0x250>)
 8007a26:	4293      	cmp	r3, r2
 8007a28:	d027      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 8007a2a:	687b      	ldr	r3, [r7, #4]
 8007a2c:	681b      	ldr	r3, [r3, #0]
 8007a2e:	4a24      	ldr	r2, [pc, #144]	; (8007ac0 <HAL_DMA_Abort+0x254>)
 8007a30:	4293      	cmp	r3, r2
 8007a32:	d022      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 8007a34:	687b      	ldr	r3, [r7, #4]
 8007a36:	681b      	ldr	r3, [r3, #0]
 8007a38:	4a22      	ldr	r2, [pc, #136]	; (8007ac4 <HAL_DMA_Abort+0x258>)
 8007a3a:	4293      	cmp	r3, r2
 8007a3c:	d01d      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 8007a3e:	687b      	ldr	r3, [r7, #4]
 8007a40:	681b      	ldr	r3, [r3, #0]
 8007a42:	4a21      	ldr	r2, [pc, #132]	; (8007ac8 <HAL_DMA_Abort+0x25c>)
 8007a44:	4293      	cmp	r3, r2
 8007a46:	d018      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 8007a48:	687b      	ldr	r3, [r7, #4]
 8007a4a:	681b      	ldr	r3, [r3, #0]
 8007a4c:	4a1f      	ldr	r2, [pc, #124]	; (8007acc <HAL_DMA_Abort+0x260>)
 8007a4e:	4293      	cmp	r3, r2
 8007a50:	d013      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 8007a52:	687b      	ldr	r3, [r7, #4]
 8007a54:	681b      	ldr	r3, [r3, #0]
 8007a56:	4a1e      	ldr	r2, [pc, #120]	; (8007ad0 <HAL_DMA_Abort+0x264>)
 8007a58:	4293      	cmp	r3, r2
 8007a5a:	d00e      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 8007a5c:	687b      	ldr	r3, [r7, #4]
 8007a5e:	681b      	ldr	r3, [r3, #0]
 8007a60:	4a1c      	ldr	r2, [pc, #112]	; (8007ad4 <HAL_DMA_Abort+0x268>)
 8007a62:	4293      	cmp	r3, r2
 8007a64:	d009      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 8007a66:	687b      	ldr	r3, [r7, #4]
 8007a68:	681b      	ldr	r3, [r3, #0]
 8007a6a:	4a1b      	ldr	r2, [pc, #108]	; (8007ad8 <HAL_DMA_Abort+0x26c>)
 8007a6c:	4293      	cmp	r3, r2
 8007a6e:	d004      	beq.n	8007a7a <HAL_DMA_Abort+0x20e>
 8007a70:	687b      	ldr	r3, [r7, #4]
 8007a72:	681b      	ldr	r3, [r3, #0]
 8007a74:	4a19      	ldr	r2, [pc, #100]	; (8007adc <HAL_DMA_Abort+0x270>)
 8007a76:	4293      	cmp	r3, r2
 8007a78:	d132      	bne.n	8007ae0 <HAL_DMA_Abort+0x274>
 8007a7a:	2301      	movs	r3, #1
 8007a7c:	e031      	b.n	8007ae2 <HAL_DMA_Abort+0x276>
 8007a7e:	bf00      	nop
 8007a80:	40020010 	.word	0x40020010
 8007a84:	40020028 	.word	0x40020028
 8007a88:	40020040 	.word	0x40020040
 8007a8c:	40020058 	.word	0x40020058
 8007a90:	40020070 	.word	0x40020070
 8007a94:	40020088 	.word	0x40020088
 8007a98:	400200a0 	.word	0x400200a0
 8007a9c:	400200b8 	.word	0x400200b8
 8007aa0:	40020410 	.word	0x40020410
 8007aa4:	40020428 	.word	0x40020428
 8007aa8:	40020440 	.word	0x40020440
 8007aac:	40020458 	.word	0x40020458
 8007ab0:	40020470 	.word	0x40020470
 8007ab4:	40020488 	.word	0x40020488
 8007ab8:	400204a0 	.word	0x400204a0
 8007abc:	400204b8 	.word	0x400204b8
 8007ac0:	58025408 	.word	0x58025408
 8007ac4:	5802541c 	.word	0x5802541c
 8007ac8:	58025430 	.word	0x58025430
 8007acc:	58025444 	.word	0x58025444
 8007ad0:	58025458 	.word	0x58025458
 8007ad4:	5802546c 	.word	0x5802546c
 8007ad8:	58025480 	.word	0x58025480
 8007adc:	58025494 	.word	0x58025494
 8007ae0:	2300      	movs	r3, #0
 8007ae2:	2b00      	cmp	r3, #0
 8007ae4:	d007      	beq.n	8007af6 <HAL_DMA_Abort+0x28a>
 8007ae6:	687b      	ldr	r3, [r7, #4]
 8007ae8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007aea:	681a      	ldr	r2, [r3, #0]
 8007aec:	687b      	ldr	r3, [r7, #4]
 8007aee:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007af0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007af4:	601a      	str	r2, [r3, #0]
 8007af6:	687b      	ldr	r3, [r7, #4]
 8007af8:	681b      	ldr	r3, [r3, #0]
 8007afa:	4a6d      	ldr	r2, [pc, #436]	; (8007cb0 <HAL_DMA_Abort+0x444>)
 8007afc:	4293      	cmp	r3, r2
 8007afe:	d04a      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b00:	687b      	ldr	r3, [r7, #4]
 8007b02:	681b      	ldr	r3, [r3, #0]
 8007b04:	4a6b      	ldr	r2, [pc, #428]	; (8007cb4 <HAL_DMA_Abort+0x448>)
 8007b06:	4293      	cmp	r3, r2
 8007b08:	d045      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b0a:	687b      	ldr	r3, [r7, #4]
 8007b0c:	681b      	ldr	r3, [r3, #0]
 8007b0e:	4a6a      	ldr	r2, [pc, #424]	; (8007cb8 <HAL_DMA_Abort+0x44c>)
 8007b10:	4293      	cmp	r3, r2
 8007b12:	d040      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b14:	687b      	ldr	r3, [r7, #4]
 8007b16:	681b      	ldr	r3, [r3, #0]
 8007b18:	4a68      	ldr	r2, [pc, #416]	; (8007cbc <HAL_DMA_Abort+0x450>)
 8007b1a:	4293      	cmp	r3, r2
 8007b1c:	d03b      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b1e:	687b      	ldr	r3, [r7, #4]
 8007b20:	681b      	ldr	r3, [r3, #0]
 8007b22:	4a67      	ldr	r2, [pc, #412]	; (8007cc0 <HAL_DMA_Abort+0x454>)
 8007b24:	4293      	cmp	r3, r2
 8007b26:	d036      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b28:	687b      	ldr	r3, [r7, #4]
 8007b2a:	681b      	ldr	r3, [r3, #0]
 8007b2c:	4a65      	ldr	r2, [pc, #404]	; (8007cc4 <HAL_DMA_Abort+0x458>)
 8007b2e:	4293      	cmp	r3, r2
 8007b30:	d031      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b32:	687b      	ldr	r3, [r7, #4]
 8007b34:	681b      	ldr	r3, [r3, #0]
 8007b36:	4a64      	ldr	r2, [pc, #400]	; (8007cc8 <HAL_DMA_Abort+0x45c>)
 8007b38:	4293      	cmp	r3, r2
 8007b3a:	d02c      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b3c:	687b      	ldr	r3, [r7, #4]
 8007b3e:	681b      	ldr	r3, [r3, #0]
 8007b40:	4a62      	ldr	r2, [pc, #392]	; (8007ccc <HAL_DMA_Abort+0x460>)
 8007b42:	4293      	cmp	r3, r2
 8007b44:	d027      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b46:	687b      	ldr	r3, [r7, #4]
 8007b48:	681b      	ldr	r3, [r3, #0]
 8007b4a:	4a61      	ldr	r2, [pc, #388]	; (8007cd0 <HAL_DMA_Abort+0x464>)
 8007b4c:	4293      	cmp	r3, r2
 8007b4e:	d022      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b50:	687b      	ldr	r3, [r7, #4]
 8007b52:	681b      	ldr	r3, [r3, #0]
 8007b54:	4a5f      	ldr	r2, [pc, #380]	; (8007cd4 <HAL_DMA_Abort+0x468>)
 8007b56:	4293      	cmp	r3, r2
 8007b58:	d01d      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b5a:	687b      	ldr	r3, [r7, #4]
 8007b5c:	681b      	ldr	r3, [r3, #0]
 8007b5e:	4a5e      	ldr	r2, [pc, #376]	; (8007cd8 <HAL_DMA_Abort+0x46c>)
 8007b60:	4293      	cmp	r3, r2
 8007b62:	d018      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	681b      	ldr	r3, [r3, #0]
 8007b68:	4a5c      	ldr	r2, [pc, #368]	; (8007cdc <HAL_DMA_Abort+0x470>)
 8007b6a:	4293      	cmp	r3, r2
 8007b6c:	d013      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b6e:	687b      	ldr	r3, [r7, #4]
 8007b70:	681b      	ldr	r3, [r3, #0]
 8007b72:	4a5b      	ldr	r2, [pc, #364]	; (8007ce0 <HAL_DMA_Abort+0x474>)
 8007b74:	4293      	cmp	r3, r2
 8007b76:	d00e      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b78:	687b      	ldr	r3, [r7, #4]
 8007b7a:	681b      	ldr	r3, [r3, #0]
 8007b7c:	4a59      	ldr	r2, [pc, #356]	; (8007ce4 <HAL_DMA_Abort+0x478>)
 8007b7e:	4293      	cmp	r3, r2
 8007b80:	d009      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b82:	687b      	ldr	r3, [r7, #4]
 8007b84:	681b      	ldr	r3, [r3, #0]
 8007b86:	4a58      	ldr	r2, [pc, #352]	; (8007ce8 <HAL_DMA_Abort+0x47c>)
 8007b88:	4293      	cmp	r3, r2
 8007b8a:	d004      	beq.n	8007b96 <HAL_DMA_Abort+0x32a>
 8007b8c:	687b      	ldr	r3, [r7, #4]
 8007b8e:	681b      	ldr	r3, [r3, #0]
 8007b90:	4a56      	ldr	r2, [pc, #344]	; (8007cec <HAL_DMA_Abort+0x480>)
 8007b92:	4293      	cmp	r3, r2
 8007b94:	d108      	bne.n	8007ba8 <HAL_DMA_Abort+0x33c>
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	681b      	ldr	r3, [r3, #0]
 8007b9a:	681a      	ldr	r2, [r3, #0]
 8007b9c:	687b      	ldr	r3, [r7, #4]
 8007b9e:	681b      	ldr	r3, [r3, #0]
 8007ba0:	f022 0201 	bic.w	r2, r2, #1
 8007ba4:	601a      	str	r2, [r3, #0]
 8007ba6:	e007      	b.n	8007bb8 <HAL_DMA_Abort+0x34c>
 8007ba8:	687b      	ldr	r3, [r7, #4]
 8007baa:	681b      	ldr	r3, [r3, #0]
 8007bac:	681a      	ldr	r2, [r3, #0]
 8007bae:	687b      	ldr	r3, [r7, #4]
 8007bb0:	681b      	ldr	r3, [r3, #0]
 8007bb2:	f022 0201 	bic.w	r2, r2, #1
 8007bb6:	601a      	str	r2, [r3, #0]
 8007bb8:	e013      	b.n	8007be2 <HAL_DMA_Abort+0x376>
 8007bba:	f7ff fcd9 	bl	8007570 <HAL_GetTick>
 8007bbe:	4602      	mov	r2, r0
 8007bc0:	693b      	ldr	r3, [r7, #16]
 8007bc2:	1ad3      	subs	r3, r2, r3
 8007bc4:	2b05      	cmp	r3, #5
 8007bc6:	d90c      	bls.n	8007be2 <HAL_DMA_Abort+0x376>
 8007bc8:	687b      	ldr	r3, [r7, #4]
 8007bca:	2220      	movs	r2, #32
 8007bcc:	655a      	str	r2, [r3, #84]	; 0x54
 8007bce:	687b      	ldr	r3, [r7, #4]
 8007bd0:	2203      	movs	r2, #3
 8007bd2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007bd6:	687b      	ldr	r3, [r7, #4]
 8007bd8:	2200      	movs	r2, #0
 8007bda:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007bde:	2301      	movs	r3, #1
 8007be0:	e12d      	b.n	8007e3e <HAL_DMA_Abort+0x5d2>
 8007be2:	697b      	ldr	r3, [r7, #20]
 8007be4:	681b      	ldr	r3, [r3, #0]
 8007be6:	f003 0301 	and.w	r3, r3, #1
 8007bea:	2b00      	cmp	r3, #0
 8007bec:	d1e5      	bne.n	8007bba <HAL_DMA_Abort+0x34e>
 8007bee:	687b      	ldr	r3, [r7, #4]
 8007bf0:	681b      	ldr	r3, [r3, #0]
 8007bf2:	4a2f      	ldr	r2, [pc, #188]	; (8007cb0 <HAL_DMA_Abort+0x444>)
 8007bf4:	4293      	cmp	r3, r2
 8007bf6:	d04a      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007bf8:	687b      	ldr	r3, [r7, #4]
 8007bfa:	681b      	ldr	r3, [r3, #0]
 8007bfc:	4a2d      	ldr	r2, [pc, #180]	; (8007cb4 <HAL_DMA_Abort+0x448>)
 8007bfe:	4293      	cmp	r3, r2
 8007c00:	d045      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007c02:	687b      	ldr	r3, [r7, #4]
 8007c04:	681b      	ldr	r3, [r3, #0]
 8007c06:	4a2c      	ldr	r2, [pc, #176]	; (8007cb8 <HAL_DMA_Abort+0x44c>)
 8007c08:	4293      	cmp	r3, r2
 8007c0a:	d040      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007c0c:	687b      	ldr	r3, [r7, #4]
 8007c0e:	681b      	ldr	r3, [r3, #0]
 8007c10:	4a2a      	ldr	r2, [pc, #168]	; (8007cbc <HAL_DMA_Abort+0x450>)
 8007c12:	4293      	cmp	r3, r2
 8007c14:	d03b      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007c16:	687b      	ldr	r3, [r7, #4]
 8007c18:	681b      	ldr	r3, [r3, #0]
 8007c1a:	4a29      	ldr	r2, [pc, #164]	; (8007cc0 <HAL_DMA_Abort+0x454>)
 8007c1c:	4293      	cmp	r3, r2
 8007c1e:	d036      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007c20:	687b      	ldr	r3, [r7, #4]
 8007c22:	681b      	ldr	r3, [r3, #0]
 8007c24:	4a27      	ldr	r2, [pc, #156]	; (8007cc4 <HAL_DMA_Abort+0x458>)
 8007c26:	4293      	cmp	r3, r2
 8007c28:	d031      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007c2a:	687b      	ldr	r3, [r7, #4]
 8007c2c:	681b      	ldr	r3, [r3, #0]
 8007c2e:	4a26      	ldr	r2, [pc, #152]	; (8007cc8 <HAL_DMA_Abort+0x45c>)
 8007c30:	4293      	cmp	r3, r2
 8007c32:	d02c      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007c34:	687b      	ldr	r3, [r7, #4]
 8007c36:	681b      	ldr	r3, [r3, #0]
 8007c38:	4a24      	ldr	r2, [pc, #144]	; (8007ccc <HAL_DMA_Abort+0x460>)
 8007c3a:	4293      	cmp	r3, r2
 8007c3c:	d027      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007c3e:	687b      	ldr	r3, [r7, #4]
 8007c40:	681b      	ldr	r3, [r3, #0]
 8007c42:	4a23      	ldr	r2, [pc, #140]	; (8007cd0 <HAL_DMA_Abort+0x464>)
 8007c44:	4293      	cmp	r3, r2
 8007c46:	d022      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007c48:	687b      	ldr	r3, [r7, #4]
 8007c4a:	681b      	ldr	r3, [r3, #0]
 8007c4c:	4a21      	ldr	r2, [pc, #132]	; (8007cd4 <HAL_DMA_Abort+0x468>)
 8007c4e:	4293      	cmp	r3, r2
 8007c50:	d01d      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007c52:	687b      	ldr	r3, [r7, #4]
 8007c54:	681b      	ldr	r3, [r3, #0]
 8007c56:	4a20      	ldr	r2, [pc, #128]	; (8007cd8 <HAL_DMA_Abort+0x46c>)
 8007c58:	4293      	cmp	r3, r2
 8007c5a:	d018      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007c5c:	687b      	ldr	r3, [r7, #4]
 8007c5e:	681b      	ldr	r3, [r3, #0]
 8007c60:	4a1e      	ldr	r2, [pc, #120]	; (8007cdc <HAL_DMA_Abort+0x470>)
 8007c62:	4293      	cmp	r3, r2
 8007c64:	d013      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007c66:	687b      	ldr	r3, [r7, #4]
 8007c68:	681b      	ldr	r3, [r3, #0]
 8007c6a:	4a1d      	ldr	r2, [pc, #116]	; (8007ce0 <HAL_DMA_Abort+0x474>)
 8007c6c:	4293      	cmp	r3, r2
 8007c6e:	d00e      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007c70:	687b      	ldr	r3, [r7, #4]
 8007c72:	681b      	ldr	r3, [r3, #0]
 8007c74:	4a1b      	ldr	r2, [pc, #108]	; (8007ce4 <HAL_DMA_Abort+0x478>)
 8007c76:	4293      	cmp	r3, r2
 8007c78:	d009      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007c7a:	687b      	ldr	r3, [r7, #4]
 8007c7c:	681b      	ldr	r3, [r3, #0]
 8007c7e:	4a1a      	ldr	r2, [pc, #104]	; (8007ce8 <HAL_DMA_Abort+0x47c>)
 8007c80:	4293      	cmp	r3, r2
 8007c82:	d004      	beq.n	8007c8e <HAL_DMA_Abort+0x422>
 8007c84:	687b      	ldr	r3, [r7, #4]
 8007c86:	681b      	ldr	r3, [r3, #0]
 8007c88:	4a18      	ldr	r2, [pc, #96]	; (8007cec <HAL_DMA_Abort+0x480>)
 8007c8a:	4293      	cmp	r3, r2
 8007c8c:	d101      	bne.n	8007c92 <HAL_DMA_Abort+0x426>
 8007c8e:	2301      	movs	r3, #1
 8007c90:	e000      	b.n	8007c94 <HAL_DMA_Abort+0x428>
 8007c92:	2300      	movs	r3, #0
 8007c94:	2b00      	cmp	r3, #0
 8007c96:	d02b      	beq.n	8007cf0 <HAL_DMA_Abort+0x484>
 8007c98:	687b      	ldr	r3, [r7, #4]
 8007c9a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007c9c:	60bb      	str	r3, [r7, #8]
 8007c9e:	687b      	ldr	r3, [r7, #4]
 8007ca0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007ca2:	f003 031f 	and.w	r3, r3, #31
 8007ca6:	223f      	movs	r2, #63	; 0x3f
 8007ca8:	409a      	lsls	r2, r3
 8007caa:	68bb      	ldr	r3, [r7, #8]
 8007cac:	609a      	str	r2, [r3, #8]
 8007cae:	e02a      	b.n	8007d06 <HAL_DMA_Abort+0x49a>
 8007cb0:	40020010 	.word	0x40020010
 8007cb4:	40020028 	.word	0x40020028
 8007cb8:	40020040 	.word	0x40020040
 8007cbc:	40020058 	.word	0x40020058
 8007cc0:	40020070 	.word	0x40020070
 8007cc4:	40020088 	.word	0x40020088
 8007cc8:	400200a0 	.word	0x400200a0
 8007ccc:	400200b8 	.word	0x400200b8
 8007cd0:	40020410 	.word	0x40020410
 8007cd4:	40020428 	.word	0x40020428
 8007cd8:	40020440 	.word	0x40020440
 8007cdc:	40020458 	.word	0x40020458
 8007ce0:	40020470 	.word	0x40020470
 8007ce4:	40020488 	.word	0x40020488
 8007ce8:	400204a0 	.word	0x400204a0
 8007cec:	400204b8 	.word	0x400204b8
 8007cf0:	687b      	ldr	r3, [r7, #4]
 8007cf2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007cf4:	60fb      	str	r3, [r7, #12]
 8007cf6:	687b      	ldr	r3, [r7, #4]
 8007cf8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007cfa:	f003 031f 	and.w	r3, r3, #31
 8007cfe:	2201      	movs	r2, #1
 8007d00:	409a      	lsls	r2, r3
 8007d02:	68fb      	ldr	r3, [r7, #12]
 8007d04:	605a      	str	r2, [r3, #4]
 8007d06:	687b      	ldr	r3, [r7, #4]
 8007d08:	681b      	ldr	r3, [r3, #0]
 8007d0a:	4a4f      	ldr	r2, [pc, #316]	; (8007e48 <HAL_DMA_Abort+0x5dc>)
 8007d0c:	4293      	cmp	r3, r2
 8007d0e:	d072      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d10:	687b      	ldr	r3, [r7, #4]
 8007d12:	681b      	ldr	r3, [r3, #0]
 8007d14:	4a4d      	ldr	r2, [pc, #308]	; (8007e4c <HAL_DMA_Abort+0x5e0>)
 8007d16:	4293      	cmp	r3, r2
 8007d18:	d06d      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d1a:	687b      	ldr	r3, [r7, #4]
 8007d1c:	681b      	ldr	r3, [r3, #0]
 8007d1e:	4a4c      	ldr	r2, [pc, #304]	; (8007e50 <HAL_DMA_Abort+0x5e4>)
 8007d20:	4293      	cmp	r3, r2
 8007d22:	d068      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d24:	687b      	ldr	r3, [r7, #4]
 8007d26:	681b      	ldr	r3, [r3, #0]
 8007d28:	4a4a      	ldr	r2, [pc, #296]	; (8007e54 <HAL_DMA_Abort+0x5e8>)
 8007d2a:	4293      	cmp	r3, r2
 8007d2c:	d063      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d2e:	687b      	ldr	r3, [r7, #4]
 8007d30:	681b      	ldr	r3, [r3, #0]
 8007d32:	4a49      	ldr	r2, [pc, #292]	; (8007e58 <HAL_DMA_Abort+0x5ec>)
 8007d34:	4293      	cmp	r3, r2
 8007d36:	d05e      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d38:	687b      	ldr	r3, [r7, #4]
 8007d3a:	681b      	ldr	r3, [r3, #0]
 8007d3c:	4a47      	ldr	r2, [pc, #284]	; (8007e5c <HAL_DMA_Abort+0x5f0>)
 8007d3e:	4293      	cmp	r3, r2
 8007d40:	d059      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d42:	687b      	ldr	r3, [r7, #4]
 8007d44:	681b      	ldr	r3, [r3, #0]
 8007d46:	4a46      	ldr	r2, [pc, #280]	; (8007e60 <HAL_DMA_Abort+0x5f4>)
 8007d48:	4293      	cmp	r3, r2
 8007d4a:	d054      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d4c:	687b      	ldr	r3, [r7, #4]
 8007d4e:	681b      	ldr	r3, [r3, #0]
 8007d50:	4a44      	ldr	r2, [pc, #272]	; (8007e64 <HAL_DMA_Abort+0x5f8>)
 8007d52:	4293      	cmp	r3, r2
 8007d54:	d04f      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d56:	687b      	ldr	r3, [r7, #4]
 8007d58:	681b      	ldr	r3, [r3, #0]
 8007d5a:	4a43      	ldr	r2, [pc, #268]	; (8007e68 <HAL_DMA_Abort+0x5fc>)
 8007d5c:	4293      	cmp	r3, r2
 8007d5e:	d04a      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d60:	687b      	ldr	r3, [r7, #4]
 8007d62:	681b      	ldr	r3, [r3, #0]
 8007d64:	4a41      	ldr	r2, [pc, #260]	; (8007e6c <HAL_DMA_Abort+0x600>)
 8007d66:	4293      	cmp	r3, r2
 8007d68:	d045      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d6a:	687b      	ldr	r3, [r7, #4]
 8007d6c:	681b      	ldr	r3, [r3, #0]
 8007d6e:	4a40      	ldr	r2, [pc, #256]	; (8007e70 <HAL_DMA_Abort+0x604>)
 8007d70:	4293      	cmp	r3, r2
 8007d72:	d040      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d74:	687b      	ldr	r3, [r7, #4]
 8007d76:	681b      	ldr	r3, [r3, #0]
 8007d78:	4a3e      	ldr	r2, [pc, #248]	; (8007e74 <HAL_DMA_Abort+0x608>)
 8007d7a:	4293      	cmp	r3, r2
 8007d7c:	d03b      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d7e:	687b      	ldr	r3, [r7, #4]
 8007d80:	681b      	ldr	r3, [r3, #0]
 8007d82:	4a3d      	ldr	r2, [pc, #244]	; (8007e78 <HAL_DMA_Abort+0x60c>)
 8007d84:	4293      	cmp	r3, r2
 8007d86:	d036      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d88:	687b      	ldr	r3, [r7, #4]
 8007d8a:	681b      	ldr	r3, [r3, #0]
 8007d8c:	4a3b      	ldr	r2, [pc, #236]	; (8007e7c <HAL_DMA_Abort+0x610>)
 8007d8e:	4293      	cmp	r3, r2
 8007d90:	d031      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d92:	687b      	ldr	r3, [r7, #4]
 8007d94:	681b      	ldr	r3, [r3, #0]
 8007d96:	4a3a      	ldr	r2, [pc, #232]	; (8007e80 <HAL_DMA_Abort+0x614>)
 8007d98:	4293      	cmp	r3, r2
 8007d9a:	d02c      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007d9c:	687b      	ldr	r3, [r7, #4]
 8007d9e:	681b      	ldr	r3, [r3, #0]
 8007da0:	4a38      	ldr	r2, [pc, #224]	; (8007e84 <HAL_DMA_Abort+0x618>)
 8007da2:	4293      	cmp	r3, r2
 8007da4:	d027      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007da6:	687b      	ldr	r3, [r7, #4]
 8007da8:	681b      	ldr	r3, [r3, #0]
 8007daa:	4a37      	ldr	r2, [pc, #220]	; (8007e88 <HAL_DMA_Abort+0x61c>)
 8007dac:	4293      	cmp	r3, r2
 8007dae:	d022      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007db0:	687b      	ldr	r3, [r7, #4]
 8007db2:	681b      	ldr	r3, [r3, #0]
 8007db4:	4a35      	ldr	r2, [pc, #212]	; (8007e8c <HAL_DMA_Abort+0x620>)
 8007db6:	4293      	cmp	r3, r2
 8007db8:	d01d      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007dba:	687b      	ldr	r3, [r7, #4]
 8007dbc:	681b      	ldr	r3, [r3, #0]
 8007dbe:	4a34      	ldr	r2, [pc, #208]	; (8007e90 <HAL_DMA_Abort+0x624>)
 8007dc0:	4293      	cmp	r3, r2
 8007dc2:	d018      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007dc4:	687b      	ldr	r3, [r7, #4]
 8007dc6:	681b      	ldr	r3, [r3, #0]
 8007dc8:	4a32      	ldr	r2, [pc, #200]	; (8007e94 <HAL_DMA_Abort+0x628>)
 8007dca:	4293      	cmp	r3, r2
 8007dcc:	d013      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007dce:	687b      	ldr	r3, [r7, #4]
 8007dd0:	681b      	ldr	r3, [r3, #0]
 8007dd2:	4a31      	ldr	r2, [pc, #196]	; (8007e98 <HAL_DMA_Abort+0x62c>)
 8007dd4:	4293      	cmp	r3, r2
 8007dd6:	d00e      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007dd8:	687b      	ldr	r3, [r7, #4]
 8007dda:	681b      	ldr	r3, [r3, #0]
 8007ddc:	4a2f      	ldr	r2, [pc, #188]	; (8007e9c <HAL_DMA_Abort+0x630>)
 8007dde:	4293      	cmp	r3, r2
 8007de0:	d009      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007de2:	687b      	ldr	r3, [r7, #4]
 8007de4:	681b      	ldr	r3, [r3, #0]
 8007de6:	4a2e      	ldr	r2, [pc, #184]	; (8007ea0 <HAL_DMA_Abort+0x634>)
 8007de8:	4293      	cmp	r3, r2
 8007dea:	d004      	beq.n	8007df6 <HAL_DMA_Abort+0x58a>
 8007dec:	687b      	ldr	r3, [r7, #4]
 8007dee:	681b      	ldr	r3, [r3, #0]
 8007df0:	4a2c      	ldr	r2, [pc, #176]	; (8007ea4 <HAL_DMA_Abort+0x638>)
 8007df2:	4293      	cmp	r3, r2
 8007df4:	d101      	bne.n	8007dfa <HAL_DMA_Abort+0x58e>
 8007df6:	2301      	movs	r3, #1
 8007df8:	e000      	b.n	8007dfc <HAL_DMA_Abort+0x590>
 8007dfa:	2300      	movs	r3, #0
 8007dfc:	2b00      	cmp	r3, #0
 8007dfe:	d015      	beq.n	8007e2c <HAL_DMA_Abort+0x5c0>
 8007e00:	687b      	ldr	r3, [r7, #4]
 8007e02:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8007e04:	687a      	ldr	r2, [r7, #4]
 8007e06:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8007e08:	605a      	str	r2, [r3, #4]
 8007e0a:	687b      	ldr	r3, [r7, #4]
 8007e0c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007e0e:	2b00      	cmp	r3, #0
 8007e10:	d00c      	beq.n	8007e2c <HAL_DMA_Abort+0x5c0>
 8007e12:	687b      	ldr	r3, [r7, #4]
 8007e14:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007e16:	681a      	ldr	r2, [r3, #0]
 8007e18:	687b      	ldr	r3, [r7, #4]
 8007e1a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007e1c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007e20:	601a      	str	r2, [r3, #0]
 8007e22:	687b      	ldr	r3, [r7, #4]
 8007e24:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007e26:	687a      	ldr	r2, [r7, #4]
 8007e28:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8007e2a:	605a      	str	r2, [r3, #4]
 8007e2c:	687b      	ldr	r3, [r7, #4]
 8007e2e:	2201      	movs	r2, #1
 8007e30:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007e34:	687b      	ldr	r3, [r7, #4]
 8007e36:	2200      	movs	r2, #0
 8007e38:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007e3c:	2300      	movs	r3, #0
 8007e3e:	4618      	mov	r0, r3
 8007e40:	3718      	adds	r7, #24
 8007e42:	46bd      	mov	sp, r7
 8007e44:	bd80      	pop	{r7, pc}
 8007e46:	bf00      	nop
 8007e48:	40020010 	.word	0x40020010
 8007e4c:	40020028 	.word	0x40020028
 8007e50:	40020040 	.word	0x40020040
 8007e54:	40020058 	.word	0x40020058
 8007e58:	40020070 	.word	0x40020070
 8007e5c:	40020088 	.word	0x40020088
 8007e60:	400200a0 	.word	0x400200a0
 8007e64:	400200b8 	.word	0x400200b8
 8007e68:	40020410 	.word	0x40020410
 8007e6c:	40020428 	.word	0x40020428
 8007e70:	40020440 	.word	0x40020440
 8007e74:	40020458 	.word	0x40020458
 8007e78:	40020470 	.word	0x40020470
 8007e7c:	40020488 	.word	0x40020488
 8007e80:	400204a0 	.word	0x400204a0
 8007e84:	400204b8 	.word	0x400204b8
 8007e88:	58025408 	.word	0x58025408
 8007e8c:	5802541c 	.word	0x5802541c
 8007e90:	58025430 	.word	0x58025430
 8007e94:	58025444 	.word	0x58025444
 8007e98:	58025458 	.word	0x58025458
 8007e9c:	5802546c 	.word	0x5802546c
 8007ea0:	58025480 	.word	0x58025480
 8007ea4:	58025494 	.word	0x58025494

08007ea8 <HAL_DMA_Abort_IT>:
 8007ea8:	b580      	push	{r7, lr}
 8007eaa:	b084      	sub	sp, #16
 8007eac:	af00      	add	r7, sp, #0
 8007eae:	6078      	str	r0, [r7, #4]
 8007eb0:	687b      	ldr	r3, [r7, #4]
 8007eb2:	2b00      	cmp	r3, #0
 8007eb4:	d101      	bne.n	8007eba <HAL_DMA_Abort_IT+0x12>
 8007eb6:	2301      	movs	r3, #1
 8007eb8:	e237      	b.n	800832a <HAL_DMA_Abort_IT+0x482>
 8007eba:	687b      	ldr	r3, [r7, #4]
 8007ebc:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8007ec0:	b2db      	uxtb	r3, r3
 8007ec2:	2b02      	cmp	r3, #2
 8007ec4:	d004      	beq.n	8007ed0 <HAL_DMA_Abort_IT+0x28>
 8007ec6:	687b      	ldr	r3, [r7, #4]
 8007ec8:	2280      	movs	r2, #128	; 0x80
 8007eca:	655a      	str	r2, [r3, #84]	; 0x54
 8007ecc:	2301      	movs	r3, #1
 8007ece:	e22c      	b.n	800832a <HAL_DMA_Abort_IT+0x482>
 8007ed0:	687b      	ldr	r3, [r7, #4]
 8007ed2:	681b      	ldr	r3, [r3, #0]
 8007ed4:	4a5c      	ldr	r2, [pc, #368]	; (8008048 <HAL_DMA_Abort_IT+0x1a0>)
 8007ed6:	4293      	cmp	r3, r2
 8007ed8:	d04a      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007eda:	687b      	ldr	r3, [r7, #4]
 8007edc:	681b      	ldr	r3, [r3, #0]
 8007ede:	4a5b      	ldr	r2, [pc, #364]	; (800804c <HAL_DMA_Abort_IT+0x1a4>)
 8007ee0:	4293      	cmp	r3, r2
 8007ee2:	d045      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007ee4:	687b      	ldr	r3, [r7, #4]
 8007ee6:	681b      	ldr	r3, [r3, #0]
 8007ee8:	4a59      	ldr	r2, [pc, #356]	; (8008050 <HAL_DMA_Abort_IT+0x1a8>)
 8007eea:	4293      	cmp	r3, r2
 8007eec:	d040      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007eee:	687b      	ldr	r3, [r7, #4]
 8007ef0:	681b      	ldr	r3, [r3, #0]
 8007ef2:	4a58      	ldr	r2, [pc, #352]	; (8008054 <HAL_DMA_Abort_IT+0x1ac>)
 8007ef4:	4293      	cmp	r3, r2
 8007ef6:	d03b      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007ef8:	687b      	ldr	r3, [r7, #4]
 8007efa:	681b      	ldr	r3, [r3, #0]
 8007efc:	4a56      	ldr	r2, [pc, #344]	; (8008058 <HAL_DMA_Abort_IT+0x1b0>)
 8007efe:	4293      	cmp	r3, r2
 8007f00:	d036      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007f02:	687b      	ldr	r3, [r7, #4]
 8007f04:	681b      	ldr	r3, [r3, #0]
 8007f06:	4a55      	ldr	r2, [pc, #340]	; (800805c <HAL_DMA_Abort_IT+0x1b4>)
 8007f08:	4293      	cmp	r3, r2
 8007f0a:	d031      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007f0c:	687b      	ldr	r3, [r7, #4]
 8007f0e:	681b      	ldr	r3, [r3, #0]
 8007f10:	4a53      	ldr	r2, [pc, #332]	; (8008060 <HAL_DMA_Abort_IT+0x1b8>)
 8007f12:	4293      	cmp	r3, r2
 8007f14:	d02c      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007f16:	687b      	ldr	r3, [r7, #4]
 8007f18:	681b      	ldr	r3, [r3, #0]
 8007f1a:	4a52      	ldr	r2, [pc, #328]	; (8008064 <HAL_DMA_Abort_IT+0x1bc>)
 8007f1c:	4293      	cmp	r3, r2
 8007f1e:	d027      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007f20:	687b      	ldr	r3, [r7, #4]
 8007f22:	681b      	ldr	r3, [r3, #0]
 8007f24:	4a50      	ldr	r2, [pc, #320]	; (8008068 <HAL_DMA_Abort_IT+0x1c0>)
 8007f26:	4293      	cmp	r3, r2
 8007f28:	d022      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007f2a:	687b      	ldr	r3, [r7, #4]
 8007f2c:	681b      	ldr	r3, [r3, #0]
 8007f2e:	4a4f      	ldr	r2, [pc, #316]	; (800806c <HAL_DMA_Abort_IT+0x1c4>)
 8007f30:	4293      	cmp	r3, r2
 8007f32:	d01d      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007f34:	687b      	ldr	r3, [r7, #4]
 8007f36:	681b      	ldr	r3, [r3, #0]
 8007f38:	4a4d      	ldr	r2, [pc, #308]	; (8008070 <HAL_DMA_Abort_IT+0x1c8>)
 8007f3a:	4293      	cmp	r3, r2
 8007f3c:	d018      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007f3e:	687b      	ldr	r3, [r7, #4]
 8007f40:	681b      	ldr	r3, [r3, #0]
 8007f42:	4a4c      	ldr	r2, [pc, #304]	; (8008074 <HAL_DMA_Abort_IT+0x1cc>)
 8007f44:	4293      	cmp	r3, r2
 8007f46:	d013      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007f48:	687b      	ldr	r3, [r7, #4]
 8007f4a:	681b      	ldr	r3, [r3, #0]
 8007f4c:	4a4a      	ldr	r2, [pc, #296]	; (8008078 <HAL_DMA_Abort_IT+0x1d0>)
 8007f4e:	4293      	cmp	r3, r2
 8007f50:	d00e      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007f52:	687b      	ldr	r3, [r7, #4]
 8007f54:	681b      	ldr	r3, [r3, #0]
 8007f56:	4a49      	ldr	r2, [pc, #292]	; (800807c <HAL_DMA_Abort_IT+0x1d4>)
 8007f58:	4293      	cmp	r3, r2
 8007f5a:	d009      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007f5c:	687b      	ldr	r3, [r7, #4]
 8007f5e:	681b      	ldr	r3, [r3, #0]
 8007f60:	4a47      	ldr	r2, [pc, #284]	; (8008080 <HAL_DMA_Abort_IT+0x1d8>)
 8007f62:	4293      	cmp	r3, r2
 8007f64:	d004      	beq.n	8007f70 <HAL_DMA_Abort_IT+0xc8>
 8007f66:	687b      	ldr	r3, [r7, #4]
 8007f68:	681b      	ldr	r3, [r3, #0]
 8007f6a:	4a46      	ldr	r2, [pc, #280]	; (8008084 <HAL_DMA_Abort_IT+0x1dc>)
 8007f6c:	4293      	cmp	r3, r2
 8007f6e:	d101      	bne.n	8007f74 <HAL_DMA_Abort_IT+0xcc>
 8007f70:	2301      	movs	r3, #1
 8007f72:	e000      	b.n	8007f76 <HAL_DMA_Abort_IT+0xce>
 8007f74:	2300      	movs	r3, #0
 8007f76:	2b00      	cmp	r3, #0
 8007f78:	f000 8086 	beq.w	8008088 <HAL_DMA_Abort_IT+0x1e0>
 8007f7c:	687b      	ldr	r3, [r7, #4]
 8007f7e:	2204      	movs	r2, #4
 8007f80:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007f84:	687b      	ldr	r3, [r7, #4]
 8007f86:	681b      	ldr	r3, [r3, #0]
 8007f88:	4a2f      	ldr	r2, [pc, #188]	; (8008048 <HAL_DMA_Abort_IT+0x1a0>)
 8007f8a:	4293      	cmp	r3, r2
 8007f8c:	d04a      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 8007f8e:	687b      	ldr	r3, [r7, #4]
 8007f90:	681b      	ldr	r3, [r3, #0]
 8007f92:	4a2e      	ldr	r2, [pc, #184]	; (800804c <HAL_DMA_Abort_IT+0x1a4>)
 8007f94:	4293      	cmp	r3, r2
 8007f96:	d045      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 8007f98:	687b      	ldr	r3, [r7, #4]
 8007f9a:	681b      	ldr	r3, [r3, #0]
 8007f9c:	4a2c      	ldr	r2, [pc, #176]	; (8008050 <HAL_DMA_Abort_IT+0x1a8>)
 8007f9e:	4293      	cmp	r3, r2
 8007fa0:	d040      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 8007fa2:	687b      	ldr	r3, [r7, #4]
 8007fa4:	681b      	ldr	r3, [r3, #0]
 8007fa6:	4a2b      	ldr	r2, [pc, #172]	; (8008054 <HAL_DMA_Abort_IT+0x1ac>)
 8007fa8:	4293      	cmp	r3, r2
 8007faa:	d03b      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 8007fac:	687b      	ldr	r3, [r7, #4]
 8007fae:	681b      	ldr	r3, [r3, #0]
 8007fb0:	4a29      	ldr	r2, [pc, #164]	; (8008058 <HAL_DMA_Abort_IT+0x1b0>)
 8007fb2:	4293      	cmp	r3, r2
 8007fb4:	d036      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 8007fb6:	687b      	ldr	r3, [r7, #4]
 8007fb8:	681b      	ldr	r3, [r3, #0]
 8007fba:	4a28      	ldr	r2, [pc, #160]	; (800805c <HAL_DMA_Abort_IT+0x1b4>)
 8007fbc:	4293      	cmp	r3, r2
 8007fbe:	d031      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 8007fc0:	687b      	ldr	r3, [r7, #4]
 8007fc2:	681b      	ldr	r3, [r3, #0]
 8007fc4:	4a26      	ldr	r2, [pc, #152]	; (8008060 <HAL_DMA_Abort_IT+0x1b8>)
 8007fc6:	4293      	cmp	r3, r2
 8007fc8:	d02c      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 8007fca:	687b      	ldr	r3, [r7, #4]
 8007fcc:	681b      	ldr	r3, [r3, #0]
 8007fce:	4a25      	ldr	r2, [pc, #148]	; (8008064 <HAL_DMA_Abort_IT+0x1bc>)
 8007fd0:	4293      	cmp	r3, r2
 8007fd2:	d027      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 8007fd4:	687b      	ldr	r3, [r7, #4]
 8007fd6:	681b      	ldr	r3, [r3, #0]
 8007fd8:	4a23      	ldr	r2, [pc, #140]	; (8008068 <HAL_DMA_Abort_IT+0x1c0>)
 8007fda:	4293      	cmp	r3, r2
 8007fdc:	d022      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 8007fde:	687b      	ldr	r3, [r7, #4]
 8007fe0:	681b      	ldr	r3, [r3, #0]
 8007fe2:	4a22      	ldr	r2, [pc, #136]	; (800806c <HAL_DMA_Abort_IT+0x1c4>)
 8007fe4:	4293      	cmp	r3, r2
 8007fe6:	d01d      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 8007fe8:	687b      	ldr	r3, [r7, #4]
 8007fea:	681b      	ldr	r3, [r3, #0]
 8007fec:	4a20      	ldr	r2, [pc, #128]	; (8008070 <HAL_DMA_Abort_IT+0x1c8>)
 8007fee:	4293      	cmp	r3, r2
 8007ff0:	d018      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 8007ff2:	687b      	ldr	r3, [r7, #4]
 8007ff4:	681b      	ldr	r3, [r3, #0]
 8007ff6:	4a1f      	ldr	r2, [pc, #124]	; (8008074 <HAL_DMA_Abort_IT+0x1cc>)
 8007ff8:	4293      	cmp	r3, r2
 8007ffa:	d013      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 8007ffc:	687b      	ldr	r3, [r7, #4]
 8007ffe:	681b      	ldr	r3, [r3, #0]
 8008000:	4a1d      	ldr	r2, [pc, #116]	; (8008078 <HAL_DMA_Abort_IT+0x1d0>)
 8008002:	4293      	cmp	r3, r2
 8008004:	d00e      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 8008006:	687b      	ldr	r3, [r7, #4]
 8008008:	681b      	ldr	r3, [r3, #0]
 800800a:	4a1c      	ldr	r2, [pc, #112]	; (800807c <HAL_DMA_Abort_IT+0x1d4>)
 800800c:	4293      	cmp	r3, r2
 800800e:	d009      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 8008010:	687b      	ldr	r3, [r7, #4]
 8008012:	681b      	ldr	r3, [r3, #0]
 8008014:	4a1a      	ldr	r2, [pc, #104]	; (8008080 <HAL_DMA_Abort_IT+0x1d8>)
 8008016:	4293      	cmp	r3, r2
 8008018:	d004      	beq.n	8008024 <HAL_DMA_Abort_IT+0x17c>
 800801a:	687b      	ldr	r3, [r7, #4]
 800801c:	681b      	ldr	r3, [r3, #0]
 800801e:	4a19      	ldr	r2, [pc, #100]	; (8008084 <HAL_DMA_Abort_IT+0x1dc>)
 8008020:	4293      	cmp	r3, r2
 8008022:	d108      	bne.n	8008036 <HAL_DMA_Abort_IT+0x18e>
 8008024:	687b      	ldr	r3, [r7, #4]
 8008026:	681b      	ldr	r3, [r3, #0]
 8008028:	681a      	ldr	r2, [r3, #0]
 800802a:	687b      	ldr	r3, [r7, #4]
 800802c:	681b      	ldr	r3, [r3, #0]
 800802e:	f022 0201 	bic.w	r2, r2, #1
 8008032:	601a      	str	r2, [r3, #0]
 8008034:	e178      	b.n	8008328 <HAL_DMA_Abort_IT+0x480>
 8008036:	687b      	ldr	r3, [r7, #4]
 8008038:	681b      	ldr	r3, [r3, #0]
 800803a:	681a      	ldr	r2, [r3, #0]
 800803c:	687b      	ldr	r3, [r7, #4]
 800803e:	681b      	ldr	r3, [r3, #0]
 8008040:	f022 0201 	bic.w	r2, r2, #1
 8008044:	601a      	str	r2, [r3, #0]
 8008046:	e16f      	b.n	8008328 <HAL_DMA_Abort_IT+0x480>
 8008048:	40020010 	.word	0x40020010
 800804c:	40020028 	.word	0x40020028
 8008050:	40020040 	.word	0x40020040
 8008054:	40020058 	.word	0x40020058
 8008058:	40020070 	.word	0x40020070
 800805c:	40020088 	.word	0x40020088
 8008060:	400200a0 	.word	0x400200a0
 8008064:	400200b8 	.word	0x400200b8
 8008068:	40020410 	.word	0x40020410
 800806c:	40020428 	.word	0x40020428
 8008070:	40020440 	.word	0x40020440
 8008074:	40020458 	.word	0x40020458
 8008078:	40020470 	.word	0x40020470
 800807c:	40020488 	.word	0x40020488
 8008080:	400204a0 	.word	0x400204a0
 8008084:	400204b8 	.word	0x400204b8
 8008088:	687b      	ldr	r3, [r7, #4]
 800808a:	681b      	ldr	r3, [r3, #0]
 800808c:	681a      	ldr	r2, [r3, #0]
 800808e:	687b      	ldr	r3, [r7, #4]
 8008090:	681b      	ldr	r3, [r3, #0]
 8008092:	f022 020e 	bic.w	r2, r2, #14
 8008096:	601a      	str	r2, [r3, #0]
 8008098:	687b      	ldr	r3, [r7, #4]
 800809a:	681b      	ldr	r3, [r3, #0]
 800809c:	4a6c      	ldr	r2, [pc, #432]	; (8008250 <HAL_DMA_Abort_IT+0x3a8>)
 800809e:	4293      	cmp	r3, r2
 80080a0:	d04a      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 80080a2:	687b      	ldr	r3, [r7, #4]
 80080a4:	681b      	ldr	r3, [r3, #0]
 80080a6:	4a6b      	ldr	r2, [pc, #428]	; (8008254 <HAL_DMA_Abort_IT+0x3ac>)
 80080a8:	4293      	cmp	r3, r2
 80080aa:	d045      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 80080ac:	687b      	ldr	r3, [r7, #4]
 80080ae:	681b      	ldr	r3, [r3, #0]
 80080b0:	4a69      	ldr	r2, [pc, #420]	; (8008258 <HAL_DMA_Abort_IT+0x3b0>)
 80080b2:	4293      	cmp	r3, r2
 80080b4:	d040      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 80080b6:	687b      	ldr	r3, [r7, #4]
 80080b8:	681b      	ldr	r3, [r3, #0]
 80080ba:	4a68      	ldr	r2, [pc, #416]	; (800825c <HAL_DMA_Abort_IT+0x3b4>)
 80080bc:	4293      	cmp	r3, r2
 80080be:	d03b      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 80080c0:	687b      	ldr	r3, [r7, #4]
 80080c2:	681b      	ldr	r3, [r3, #0]
 80080c4:	4a66      	ldr	r2, [pc, #408]	; (8008260 <HAL_DMA_Abort_IT+0x3b8>)
 80080c6:	4293      	cmp	r3, r2
 80080c8:	d036      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 80080ca:	687b      	ldr	r3, [r7, #4]
 80080cc:	681b      	ldr	r3, [r3, #0]
 80080ce:	4a65      	ldr	r2, [pc, #404]	; (8008264 <HAL_DMA_Abort_IT+0x3bc>)
 80080d0:	4293      	cmp	r3, r2
 80080d2:	d031      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 80080d4:	687b      	ldr	r3, [r7, #4]
 80080d6:	681b      	ldr	r3, [r3, #0]
 80080d8:	4a63      	ldr	r2, [pc, #396]	; (8008268 <HAL_DMA_Abort_IT+0x3c0>)
 80080da:	4293      	cmp	r3, r2
 80080dc:	d02c      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 80080de:	687b      	ldr	r3, [r7, #4]
 80080e0:	681b      	ldr	r3, [r3, #0]
 80080e2:	4a62      	ldr	r2, [pc, #392]	; (800826c <HAL_DMA_Abort_IT+0x3c4>)
 80080e4:	4293      	cmp	r3, r2
 80080e6:	d027      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 80080e8:	687b      	ldr	r3, [r7, #4]
 80080ea:	681b      	ldr	r3, [r3, #0]
 80080ec:	4a60      	ldr	r2, [pc, #384]	; (8008270 <HAL_DMA_Abort_IT+0x3c8>)
 80080ee:	4293      	cmp	r3, r2
 80080f0:	d022      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 80080f2:	687b      	ldr	r3, [r7, #4]
 80080f4:	681b      	ldr	r3, [r3, #0]
 80080f6:	4a5f      	ldr	r2, [pc, #380]	; (8008274 <HAL_DMA_Abort_IT+0x3cc>)
 80080f8:	4293      	cmp	r3, r2
 80080fa:	d01d      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 80080fc:	687b      	ldr	r3, [r7, #4]
 80080fe:	681b      	ldr	r3, [r3, #0]
 8008100:	4a5d      	ldr	r2, [pc, #372]	; (8008278 <HAL_DMA_Abort_IT+0x3d0>)
 8008102:	4293      	cmp	r3, r2
 8008104:	d018      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 8008106:	687b      	ldr	r3, [r7, #4]
 8008108:	681b      	ldr	r3, [r3, #0]
 800810a:	4a5c      	ldr	r2, [pc, #368]	; (800827c <HAL_DMA_Abort_IT+0x3d4>)
 800810c:	4293      	cmp	r3, r2
 800810e:	d013      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 8008110:	687b      	ldr	r3, [r7, #4]
 8008112:	681b      	ldr	r3, [r3, #0]
 8008114:	4a5a      	ldr	r2, [pc, #360]	; (8008280 <HAL_DMA_Abort_IT+0x3d8>)
 8008116:	4293      	cmp	r3, r2
 8008118:	d00e      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 800811a:	687b      	ldr	r3, [r7, #4]
 800811c:	681b      	ldr	r3, [r3, #0]
 800811e:	4a59      	ldr	r2, [pc, #356]	; (8008284 <HAL_DMA_Abort_IT+0x3dc>)
 8008120:	4293      	cmp	r3, r2
 8008122:	d009      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 8008124:	687b      	ldr	r3, [r7, #4]
 8008126:	681b      	ldr	r3, [r3, #0]
 8008128:	4a57      	ldr	r2, [pc, #348]	; (8008288 <HAL_DMA_Abort_IT+0x3e0>)
 800812a:	4293      	cmp	r3, r2
 800812c:	d004      	beq.n	8008138 <HAL_DMA_Abort_IT+0x290>
 800812e:	687b      	ldr	r3, [r7, #4]
 8008130:	681b      	ldr	r3, [r3, #0]
 8008132:	4a56      	ldr	r2, [pc, #344]	; (800828c <HAL_DMA_Abort_IT+0x3e4>)
 8008134:	4293      	cmp	r3, r2
 8008136:	d108      	bne.n	800814a <HAL_DMA_Abort_IT+0x2a2>
 8008138:	687b      	ldr	r3, [r7, #4]
 800813a:	681b      	ldr	r3, [r3, #0]
 800813c:	681a      	ldr	r2, [r3, #0]
 800813e:	687b      	ldr	r3, [r7, #4]
 8008140:	681b      	ldr	r3, [r3, #0]
 8008142:	f022 0201 	bic.w	r2, r2, #1
 8008146:	601a      	str	r2, [r3, #0]
 8008148:	e007      	b.n	800815a <HAL_DMA_Abort_IT+0x2b2>
 800814a:	687b      	ldr	r3, [r7, #4]
 800814c:	681b      	ldr	r3, [r3, #0]
 800814e:	681a      	ldr	r2, [r3, #0]
 8008150:	687b      	ldr	r3, [r7, #4]
 8008152:	681b      	ldr	r3, [r3, #0]
 8008154:	f022 0201 	bic.w	r2, r2, #1
 8008158:	601a      	str	r2, [r3, #0]
 800815a:	687b      	ldr	r3, [r7, #4]
 800815c:	681b      	ldr	r3, [r3, #0]
 800815e:	4a3c      	ldr	r2, [pc, #240]	; (8008250 <HAL_DMA_Abort_IT+0x3a8>)
 8008160:	4293      	cmp	r3, r2
 8008162:	d072      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 8008164:	687b      	ldr	r3, [r7, #4]
 8008166:	681b      	ldr	r3, [r3, #0]
 8008168:	4a3a      	ldr	r2, [pc, #232]	; (8008254 <HAL_DMA_Abort_IT+0x3ac>)
 800816a:	4293      	cmp	r3, r2
 800816c:	d06d      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 800816e:	687b      	ldr	r3, [r7, #4]
 8008170:	681b      	ldr	r3, [r3, #0]
 8008172:	4a39      	ldr	r2, [pc, #228]	; (8008258 <HAL_DMA_Abort_IT+0x3b0>)
 8008174:	4293      	cmp	r3, r2
 8008176:	d068      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 8008178:	687b      	ldr	r3, [r7, #4]
 800817a:	681b      	ldr	r3, [r3, #0]
 800817c:	4a37      	ldr	r2, [pc, #220]	; (800825c <HAL_DMA_Abort_IT+0x3b4>)
 800817e:	4293      	cmp	r3, r2
 8008180:	d063      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 8008182:	687b      	ldr	r3, [r7, #4]
 8008184:	681b      	ldr	r3, [r3, #0]
 8008186:	4a36      	ldr	r2, [pc, #216]	; (8008260 <HAL_DMA_Abort_IT+0x3b8>)
 8008188:	4293      	cmp	r3, r2
 800818a:	d05e      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 800818c:	687b      	ldr	r3, [r7, #4]
 800818e:	681b      	ldr	r3, [r3, #0]
 8008190:	4a34      	ldr	r2, [pc, #208]	; (8008264 <HAL_DMA_Abort_IT+0x3bc>)
 8008192:	4293      	cmp	r3, r2
 8008194:	d059      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 8008196:	687b      	ldr	r3, [r7, #4]
 8008198:	681b      	ldr	r3, [r3, #0]
 800819a:	4a33      	ldr	r2, [pc, #204]	; (8008268 <HAL_DMA_Abort_IT+0x3c0>)
 800819c:	4293      	cmp	r3, r2
 800819e:	d054      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 80081a0:	687b      	ldr	r3, [r7, #4]
 80081a2:	681b      	ldr	r3, [r3, #0]
 80081a4:	4a31      	ldr	r2, [pc, #196]	; (800826c <HAL_DMA_Abort_IT+0x3c4>)
 80081a6:	4293      	cmp	r3, r2
 80081a8:	d04f      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 80081aa:	687b      	ldr	r3, [r7, #4]
 80081ac:	681b      	ldr	r3, [r3, #0]
 80081ae:	4a30      	ldr	r2, [pc, #192]	; (8008270 <HAL_DMA_Abort_IT+0x3c8>)
 80081b0:	4293      	cmp	r3, r2
 80081b2:	d04a      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 80081b4:	687b      	ldr	r3, [r7, #4]
 80081b6:	681b      	ldr	r3, [r3, #0]
 80081b8:	4a2e      	ldr	r2, [pc, #184]	; (8008274 <HAL_DMA_Abort_IT+0x3cc>)
 80081ba:	4293      	cmp	r3, r2
 80081bc:	d045      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 80081be:	687b      	ldr	r3, [r7, #4]
 80081c0:	681b      	ldr	r3, [r3, #0]
 80081c2:	4a2d      	ldr	r2, [pc, #180]	; (8008278 <HAL_DMA_Abort_IT+0x3d0>)
 80081c4:	4293      	cmp	r3, r2
 80081c6:	d040      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 80081c8:	687b      	ldr	r3, [r7, #4]
 80081ca:	681b      	ldr	r3, [r3, #0]
 80081cc:	4a2b      	ldr	r2, [pc, #172]	; (800827c <HAL_DMA_Abort_IT+0x3d4>)
 80081ce:	4293      	cmp	r3, r2
 80081d0:	d03b      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 80081d2:	687b      	ldr	r3, [r7, #4]
 80081d4:	681b      	ldr	r3, [r3, #0]
 80081d6:	4a2a      	ldr	r2, [pc, #168]	; (8008280 <HAL_DMA_Abort_IT+0x3d8>)
 80081d8:	4293      	cmp	r3, r2
 80081da:	d036      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 80081dc:	687b      	ldr	r3, [r7, #4]
 80081de:	681b      	ldr	r3, [r3, #0]
 80081e0:	4a28      	ldr	r2, [pc, #160]	; (8008284 <HAL_DMA_Abort_IT+0x3dc>)
 80081e2:	4293      	cmp	r3, r2
 80081e4:	d031      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 80081e6:	687b      	ldr	r3, [r7, #4]
 80081e8:	681b      	ldr	r3, [r3, #0]
 80081ea:	4a27      	ldr	r2, [pc, #156]	; (8008288 <HAL_DMA_Abort_IT+0x3e0>)
 80081ec:	4293      	cmp	r3, r2
 80081ee:	d02c      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 80081f0:	687b      	ldr	r3, [r7, #4]
 80081f2:	681b      	ldr	r3, [r3, #0]
 80081f4:	4a25      	ldr	r2, [pc, #148]	; (800828c <HAL_DMA_Abort_IT+0x3e4>)
 80081f6:	4293      	cmp	r3, r2
 80081f8:	d027      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 80081fa:	687b      	ldr	r3, [r7, #4]
 80081fc:	681b      	ldr	r3, [r3, #0]
 80081fe:	4a24      	ldr	r2, [pc, #144]	; (8008290 <HAL_DMA_Abort_IT+0x3e8>)
 8008200:	4293      	cmp	r3, r2
 8008202:	d022      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 8008204:	687b      	ldr	r3, [r7, #4]
 8008206:	681b      	ldr	r3, [r3, #0]
 8008208:	4a22      	ldr	r2, [pc, #136]	; (8008294 <HAL_DMA_Abort_IT+0x3ec>)
 800820a:	4293      	cmp	r3, r2
 800820c:	d01d      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 800820e:	687b      	ldr	r3, [r7, #4]
 8008210:	681b      	ldr	r3, [r3, #0]
 8008212:	4a21      	ldr	r2, [pc, #132]	; (8008298 <HAL_DMA_Abort_IT+0x3f0>)
 8008214:	4293      	cmp	r3, r2
 8008216:	d018      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 8008218:	687b      	ldr	r3, [r7, #4]
 800821a:	681b      	ldr	r3, [r3, #0]
 800821c:	4a1f      	ldr	r2, [pc, #124]	; (800829c <HAL_DMA_Abort_IT+0x3f4>)
 800821e:	4293      	cmp	r3, r2
 8008220:	d013      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 8008222:	687b      	ldr	r3, [r7, #4]
 8008224:	681b      	ldr	r3, [r3, #0]
 8008226:	4a1e      	ldr	r2, [pc, #120]	; (80082a0 <HAL_DMA_Abort_IT+0x3f8>)
 8008228:	4293      	cmp	r3, r2
 800822a:	d00e      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 800822c:	687b      	ldr	r3, [r7, #4]
 800822e:	681b      	ldr	r3, [r3, #0]
 8008230:	4a1c      	ldr	r2, [pc, #112]	; (80082a4 <HAL_DMA_Abort_IT+0x3fc>)
 8008232:	4293      	cmp	r3, r2
 8008234:	d009      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 8008236:	687b      	ldr	r3, [r7, #4]
 8008238:	681b      	ldr	r3, [r3, #0]
 800823a:	4a1b      	ldr	r2, [pc, #108]	; (80082a8 <HAL_DMA_Abort_IT+0x400>)
 800823c:	4293      	cmp	r3, r2
 800823e:	d004      	beq.n	800824a <HAL_DMA_Abort_IT+0x3a2>
 8008240:	687b      	ldr	r3, [r7, #4]
 8008242:	681b      	ldr	r3, [r3, #0]
 8008244:	4a19      	ldr	r2, [pc, #100]	; (80082ac <HAL_DMA_Abort_IT+0x404>)
 8008246:	4293      	cmp	r3, r2
 8008248:	d132      	bne.n	80082b0 <HAL_DMA_Abort_IT+0x408>
 800824a:	2301      	movs	r3, #1
 800824c:	e031      	b.n	80082b2 <HAL_DMA_Abort_IT+0x40a>
 800824e:	bf00      	nop
 8008250:	40020010 	.word	0x40020010
 8008254:	40020028 	.word	0x40020028
 8008258:	40020040 	.word	0x40020040
 800825c:	40020058 	.word	0x40020058
 8008260:	40020070 	.word	0x40020070
 8008264:	40020088 	.word	0x40020088
 8008268:	400200a0 	.word	0x400200a0
 800826c:	400200b8 	.word	0x400200b8
 8008270:	40020410 	.word	0x40020410
 8008274:	40020428 	.word	0x40020428
 8008278:	40020440 	.word	0x40020440
 800827c:	40020458 	.word	0x40020458
 8008280:	40020470 	.word	0x40020470
 8008284:	40020488 	.word	0x40020488
 8008288:	400204a0 	.word	0x400204a0
 800828c:	400204b8 	.word	0x400204b8
 8008290:	58025408 	.word	0x58025408
 8008294:	5802541c 	.word	0x5802541c
 8008298:	58025430 	.word	0x58025430
 800829c:	58025444 	.word	0x58025444
 80082a0:	58025458 	.word	0x58025458
 80082a4:	5802546c 	.word	0x5802546c
 80082a8:	58025480 	.word	0x58025480
 80082ac:	58025494 	.word	0x58025494
 80082b0:	2300      	movs	r3, #0
 80082b2:	2b00      	cmp	r3, #0
 80082b4:	d028      	beq.n	8008308 <HAL_DMA_Abort_IT+0x460>
 80082b6:	687b      	ldr	r3, [r7, #4]
 80082b8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80082ba:	681a      	ldr	r2, [r3, #0]
 80082bc:	687b      	ldr	r3, [r7, #4]
 80082be:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80082c0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80082c4:	601a      	str	r2, [r3, #0]
 80082c6:	687b      	ldr	r3, [r7, #4]
 80082c8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80082ca:	60fb      	str	r3, [r7, #12]
 80082cc:	687b      	ldr	r3, [r7, #4]
 80082ce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80082d0:	f003 031f 	and.w	r3, r3, #31
 80082d4:	2201      	movs	r2, #1
 80082d6:	409a      	lsls	r2, r3
 80082d8:	68fb      	ldr	r3, [r7, #12]
 80082da:	605a      	str	r2, [r3, #4]
 80082dc:	687b      	ldr	r3, [r7, #4]
 80082de:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80082e0:	687a      	ldr	r2, [r7, #4]
 80082e2:	6e92      	ldr	r2, [r2, #104]	; 0x68
 80082e4:	605a      	str	r2, [r3, #4]
 80082e6:	687b      	ldr	r3, [r7, #4]
 80082e8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80082ea:	2b00      	cmp	r3, #0
 80082ec:	d00c      	beq.n	8008308 <HAL_DMA_Abort_IT+0x460>
 80082ee:	687b      	ldr	r3, [r7, #4]
 80082f0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80082f2:	681a      	ldr	r2, [r3, #0]
 80082f4:	687b      	ldr	r3, [r7, #4]
 80082f6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80082f8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80082fc:	601a      	str	r2, [r3, #0]
 80082fe:	687b      	ldr	r3, [r7, #4]
 8008300:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008302:	687a      	ldr	r2, [r7, #4]
 8008304:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8008306:	605a      	str	r2, [r3, #4]
 8008308:	687b      	ldr	r3, [r7, #4]
 800830a:	2201      	movs	r2, #1
 800830c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008310:	687b      	ldr	r3, [r7, #4]
 8008312:	2200      	movs	r2, #0
 8008314:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008318:	687b      	ldr	r3, [r7, #4]
 800831a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800831c:	2b00      	cmp	r3, #0
 800831e:	d003      	beq.n	8008328 <HAL_DMA_Abort_IT+0x480>
 8008320:	687b      	ldr	r3, [r7, #4]
 8008322:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008324:	6878      	ldr	r0, [r7, #4]
 8008326:	4798      	blx	r3
 8008328:	2300      	movs	r3, #0
 800832a:	4618      	mov	r0, r3
 800832c:	3710      	adds	r7, #16
 800832e:	46bd      	mov	sp, r7
 8008330:	bd80      	pop	{r7, pc}
 8008332:	bf00      	nop

08008334 <HAL_GPIO_Init>:
 8008334:	b480      	push	{r7}
 8008336:	b089      	sub	sp, #36	; 0x24
 8008338:	af00      	add	r7, sp, #0
 800833a:	6078      	str	r0, [r7, #4]
 800833c:	6039      	str	r1, [r7, #0]
 800833e:	2300      	movs	r3, #0
 8008340:	61fb      	str	r3, [r7, #28]
 8008342:	4b89      	ldr	r3, [pc, #548]	; (8008568 <HAL_GPIO_Init+0x234>)
 8008344:	617b      	str	r3, [r7, #20]
 8008346:	e194      	b.n	8008672 <HAL_GPIO_Init+0x33e>
 8008348:	683b      	ldr	r3, [r7, #0]
 800834a:	681a      	ldr	r2, [r3, #0]
 800834c:	2101      	movs	r1, #1
 800834e:	69fb      	ldr	r3, [r7, #28]
 8008350:	fa01 f303 	lsl.w	r3, r1, r3
 8008354:	4013      	ands	r3, r2
 8008356:	613b      	str	r3, [r7, #16]
 8008358:	693b      	ldr	r3, [r7, #16]
 800835a:	2b00      	cmp	r3, #0
 800835c:	f000 8186 	beq.w	800866c <HAL_GPIO_Init+0x338>
 8008360:	683b      	ldr	r3, [r7, #0]
 8008362:	685b      	ldr	r3, [r3, #4]
 8008364:	f003 0303 	and.w	r3, r3, #3
 8008368:	2b01      	cmp	r3, #1
 800836a:	d005      	beq.n	8008378 <HAL_GPIO_Init+0x44>
 800836c:	683b      	ldr	r3, [r7, #0]
 800836e:	685b      	ldr	r3, [r3, #4]
 8008370:	f003 0303 	and.w	r3, r3, #3
 8008374:	2b02      	cmp	r3, #2
 8008376:	d130      	bne.n	80083da <HAL_GPIO_Init+0xa6>
 8008378:	687b      	ldr	r3, [r7, #4]
 800837a:	689b      	ldr	r3, [r3, #8]
 800837c:	61bb      	str	r3, [r7, #24]
 800837e:	69fb      	ldr	r3, [r7, #28]
 8008380:	005b      	lsls	r3, r3, #1
 8008382:	2203      	movs	r2, #3
 8008384:	fa02 f303 	lsl.w	r3, r2, r3
 8008388:	43db      	mvns	r3, r3
 800838a:	69ba      	ldr	r2, [r7, #24]
 800838c:	4013      	ands	r3, r2
 800838e:	61bb      	str	r3, [r7, #24]
 8008390:	683b      	ldr	r3, [r7, #0]
 8008392:	68da      	ldr	r2, [r3, #12]
 8008394:	69fb      	ldr	r3, [r7, #28]
 8008396:	005b      	lsls	r3, r3, #1
 8008398:	fa02 f303 	lsl.w	r3, r2, r3
 800839c:	69ba      	ldr	r2, [r7, #24]
 800839e:	4313      	orrs	r3, r2
 80083a0:	61bb      	str	r3, [r7, #24]
 80083a2:	687b      	ldr	r3, [r7, #4]
 80083a4:	69ba      	ldr	r2, [r7, #24]
 80083a6:	609a      	str	r2, [r3, #8]
 80083a8:	687b      	ldr	r3, [r7, #4]
 80083aa:	685b      	ldr	r3, [r3, #4]
 80083ac:	61bb      	str	r3, [r7, #24]
 80083ae:	2201      	movs	r2, #1
 80083b0:	69fb      	ldr	r3, [r7, #28]
 80083b2:	fa02 f303 	lsl.w	r3, r2, r3
 80083b6:	43db      	mvns	r3, r3
 80083b8:	69ba      	ldr	r2, [r7, #24]
 80083ba:	4013      	ands	r3, r2
 80083bc:	61bb      	str	r3, [r7, #24]
 80083be:	683b      	ldr	r3, [r7, #0]
 80083c0:	685b      	ldr	r3, [r3, #4]
 80083c2:	091b      	lsrs	r3, r3, #4
 80083c4:	f003 0201 	and.w	r2, r3, #1
 80083c8:	69fb      	ldr	r3, [r7, #28]
 80083ca:	fa02 f303 	lsl.w	r3, r2, r3
 80083ce:	69ba      	ldr	r2, [r7, #24]
 80083d0:	4313      	orrs	r3, r2
 80083d2:	61bb      	str	r3, [r7, #24]
 80083d4:	687b      	ldr	r3, [r7, #4]
 80083d6:	69ba      	ldr	r2, [r7, #24]
 80083d8:	605a      	str	r2, [r3, #4]
 80083da:	683b      	ldr	r3, [r7, #0]
 80083dc:	685b      	ldr	r3, [r3, #4]
 80083de:	f003 0303 	and.w	r3, r3, #3
 80083e2:	2b03      	cmp	r3, #3
 80083e4:	d017      	beq.n	8008416 <HAL_GPIO_Init+0xe2>
 80083e6:	687b      	ldr	r3, [r7, #4]
 80083e8:	68db      	ldr	r3, [r3, #12]
 80083ea:	61bb      	str	r3, [r7, #24]
 80083ec:	69fb      	ldr	r3, [r7, #28]
 80083ee:	005b      	lsls	r3, r3, #1
 80083f0:	2203      	movs	r2, #3
 80083f2:	fa02 f303 	lsl.w	r3, r2, r3
 80083f6:	43db      	mvns	r3, r3
 80083f8:	69ba      	ldr	r2, [r7, #24]
 80083fa:	4013      	ands	r3, r2
 80083fc:	61bb      	str	r3, [r7, #24]
 80083fe:	683b      	ldr	r3, [r7, #0]
 8008400:	689a      	ldr	r2, [r3, #8]
 8008402:	69fb      	ldr	r3, [r7, #28]
 8008404:	005b      	lsls	r3, r3, #1
 8008406:	fa02 f303 	lsl.w	r3, r2, r3
 800840a:	69ba      	ldr	r2, [r7, #24]
 800840c:	4313      	orrs	r3, r2
 800840e:	61bb      	str	r3, [r7, #24]
 8008410:	687b      	ldr	r3, [r7, #4]
 8008412:	69ba      	ldr	r2, [r7, #24]
 8008414:	60da      	str	r2, [r3, #12]
 8008416:	683b      	ldr	r3, [r7, #0]
 8008418:	685b      	ldr	r3, [r3, #4]
 800841a:	f003 0303 	and.w	r3, r3, #3
 800841e:	2b02      	cmp	r3, #2
 8008420:	d123      	bne.n	800846a <HAL_GPIO_Init+0x136>
 8008422:	69fb      	ldr	r3, [r7, #28]
 8008424:	08da      	lsrs	r2, r3, #3
 8008426:	687b      	ldr	r3, [r7, #4]
 8008428:	3208      	adds	r2, #8
 800842a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800842e:	61bb      	str	r3, [r7, #24]
 8008430:	69fb      	ldr	r3, [r7, #28]
 8008432:	f003 0307 	and.w	r3, r3, #7
 8008436:	009b      	lsls	r3, r3, #2
 8008438:	220f      	movs	r2, #15
 800843a:	fa02 f303 	lsl.w	r3, r2, r3
 800843e:	43db      	mvns	r3, r3
 8008440:	69ba      	ldr	r2, [r7, #24]
 8008442:	4013      	ands	r3, r2
 8008444:	61bb      	str	r3, [r7, #24]
 8008446:	683b      	ldr	r3, [r7, #0]
 8008448:	691a      	ldr	r2, [r3, #16]
 800844a:	69fb      	ldr	r3, [r7, #28]
 800844c:	f003 0307 	and.w	r3, r3, #7
 8008450:	009b      	lsls	r3, r3, #2
 8008452:	fa02 f303 	lsl.w	r3, r2, r3
 8008456:	69ba      	ldr	r2, [r7, #24]
 8008458:	4313      	orrs	r3, r2
 800845a:	61bb      	str	r3, [r7, #24]
 800845c:	69fb      	ldr	r3, [r7, #28]
 800845e:	08da      	lsrs	r2, r3, #3
 8008460:	687b      	ldr	r3, [r7, #4]
 8008462:	3208      	adds	r2, #8
 8008464:	69b9      	ldr	r1, [r7, #24]
 8008466:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800846a:	687b      	ldr	r3, [r7, #4]
 800846c:	681b      	ldr	r3, [r3, #0]
 800846e:	61bb      	str	r3, [r7, #24]
 8008470:	69fb      	ldr	r3, [r7, #28]
 8008472:	005b      	lsls	r3, r3, #1
 8008474:	2203      	movs	r2, #3
 8008476:	fa02 f303 	lsl.w	r3, r2, r3
 800847a:	43db      	mvns	r3, r3
 800847c:	69ba      	ldr	r2, [r7, #24]
 800847e:	4013      	ands	r3, r2
 8008480:	61bb      	str	r3, [r7, #24]
 8008482:	683b      	ldr	r3, [r7, #0]
 8008484:	685b      	ldr	r3, [r3, #4]
 8008486:	f003 0203 	and.w	r2, r3, #3
 800848a:	69fb      	ldr	r3, [r7, #28]
 800848c:	005b      	lsls	r3, r3, #1
 800848e:	fa02 f303 	lsl.w	r3, r2, r3
 8008492:	69ba      	ldr	r2, [r7, #24]
 8008494:	4313      	orrs	r3, r2
 8008496:	61bb      	str	r3, [r7, #24]
 8008498:	687b      	ldr	r3, [r7, #4]
 800849a:	69ba      	ldr	r2, [r7, #24]
 800849c:	601a      	str	r2, [r3, #0]
 800849e:	683b      	ldr	r3, [r7, #0]
 80084a0:	685b      	ldr	r3, [r3, #4]
 80084a2:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80084a6:	2b00      	cmp	r3, #0
 80084a8:	f000 80e0 	beq.w	800866c <HAL_GPIO_Init+0x338>
 80084ac:	4b2f      	ldr	r3, [pc, #188]	; (800856c <HAL_GPIO_Init+0x238>)
 80084ae:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 80084b2:	4a2e      	ldr	r2, [pc, #184]	; (800856c <HAL_GPIO_Init+0x238>)
 80084b4:	f043 0302 	orr.w	r3, r3, #2
 80084b8:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 80084bc:	4b2b      	ldr	r3, [pc, #172]	; (800856c <HAL_GPIO_Init+0x238>)
 80084be:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 80084c2:	f003 0302 	and.w	r3, r3, #2
 80084c6:	60fb      	str	r3, [r7, #12]
 80084c8:	68fb      	ldr	r3, [r7, #12]
 80084ca:	4a29      	ldr	r2, [pc, #164]	; (8008570 <HAL_GPIO_Init+0x23c>)
 80084cc:	69fb      	ldr	r3, [r7, #28]
 80084ce:	089b      	lsrs	r3, r3, #2
 80084d0:	3302      	adds	r3, #2
 80084d2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80084d6:	61bb      	str	r3, [r7, #24]
 80084d8:	69fb      	ldr	r3, [r7, #28]
 80084da:	f003 0303 	and.w	r3, r3, #3
 80084de:	009b      	lsls	r3, r3, #2
 80084e0:	220f      	movs	r2, #15
 80084e2:	fa02 f303 	lsl.w	r3, r2, r3
 80084e6:	43db      	mvns	r3, r3
 80084e8:	69ba      	ldr	r2, [r7, #24]
 80084ea:	4013      	ands	r3, r2
 80084ec:	61bb      	str	r3, [r7, #24]
 80084ee:	687b      	ldr	r3, [r7, #4]
 80084f0:	4a20      	ldr	r2, [pc, #128]	; (8008574 <HAL_GPIO_Init+0x240>)
 80084f2:	4293      	cmp	r3, r2
 80084f4:	d052      	beq.n	800859c <HAL_GPIO_Init+0x268>
 80084f6:	687b      	ldr	r3, [r7, #4]
 80084f8:	4a1f      	ldr	r2, [pc, #124]	; (8008578 <HAL_GPIO_Init+0x244>)
 80084fa:	4293      	cmp	r3, r2
 80084fc:	d031      	beq.n	8008562 <HAL_GPIO_Init+0x22e>
 80084fe:	687b      	ldr	r3, [r7, #4]
 8008500:	4a1e      	ldr	r2, [pc, #120]	; (800857c <HAL_GPIO_Init+0x248>)
 8008502:	4293      	cmp	r3, r2
 8008504:	d02b      	beq.n	800855e <HAL_GPIO_Init+0x22a>
 8008506:	687b      	ldr	r3, [r7, #4]
 8008508:	4a1d      	ldr	r2, [pc, #116]	; (8008580 <HAL_GPIO_Init+0x24c>)
 800850a:	4293      	cmp	r3, r2
 800850c:	d025      	beq.n	800855a <HAL_GPIO_Init+0x226>
 800850e:	687b      	ldr	r3, [r7, #4]
 8008510:	4a1c      	ldr	r2, [pc, #112]	; (8008584 <HAL_GPIO_Init+0x250>)
 8008512:	4293      	cmp	r3, r2
 8008514:	d01f      	beq.n	8008556 <HAL_GPIO_Init+0x222>
 8008516:	687b      	ldr	r3, [r7, #4]
 8008518:	4a1b      	ldr	r2, [pc, #108]	; (8008588 <HAL_GPIO_Init+0x254>)
 800851a:	4293      	cmp	r3, r2
 800851c:	d019      	beq.n	8008552 <HAL_GPIO_Init+0x21e>
 800851e:	687b      	ldr	r3, [r7, #4]
 8008520:	4a1a      	ldr	r2, [pc, #104]	; (800858c <HAL_GPIO_Init+0x258>)
 8008522:	4293      	cmp	r3, r2
 8008524:	d013      	beq.n	800854e <HAL_GPIO_Init+0x21a>
 8008526:	687b      	ldr	r3, [r7, #4]
 8008528:	4a19      	ldr	r2, [pc, #100]	; (8008590 <HAL_GPIO_Init+0x25c>)
 800852a:	4293      	cmp	r3, r2
 800852c:	d00d      	beq.n	800854a <HAL_GPIO_Init+0x216>
 800852e:	687b      	ldr	r3, [r7, #4]
 8008530:	4a18      	ldr	r2, [pc, #96]	; (8008594 <HAL_GPIO_Init+0x260>)
 8008532:	4293      	cmp	r3, r2
 8008534:	d007      	beq.n	8008546 <HAL_GPIO_Init+0x212>
 8008536:	687b      	ldr	r3, [r7, #4]
 8008538:	4a17      	ldr	r2, [pc, #92]	; (8008598 <HAL_GPIO_Init+0x264>)
 800853a:	4293      	cmp	r3, r2
 800853c:	d101      	bne.n	8008542 <HAL_GPIO_Init+0x20e>
 800853e:	2309      	movs	r3, #9
 8008540:	e02d      	b.n	800859e <HAL_GPIO_Init+0x26a>
 8008542:	230a      	movs	r3, #10
 8008544:	e02b      	b.n	800859e <HAL_GPIO_Init+0x26a>
 8008546:	2308      	movs	r3, #8
 8008548:	e029      	b.n	800859e <HAL_GPIO_Init+0x26a>
 800854a:	2307      	movs	r3, #7
 800854c:	e027      	b.n	800859e <HAL_GPIO_Init+0x26a>
 800854e:	2306      	movs	r3, #6
 8008550:	e025      	b.n	800859e <HAL_GPIO_Init+0x26a>
 8008552:	2305      	movs	r3, #5
 8008554:	e023      	b.n	800859e <HAL_GPIO_Init+0x26a>
 8008556:	2304      	movs	r3, #4
 8008558:	e021      	b.n	800859e <HAL_GPIO_Init+0x26a>
 800855a:	2303      	movs	r3, #3
 800855c:	e01f      	b.n	800859e <HAL_GPIO_Init+0x26a>
 800855e:	2302      	movs	r3, #2
 8008560:	e01d      	b.n	800859e <HAL_GPIO_Init+0x26a>
 8008562:	2301      	movs	r3, #1
 8008564:	e01b      	b.n	800859e <HAL_GPIO_Init+0x26a>
 8008566:	bf00      	nop
 8008568:	58000080 	.word	0x58000080
 800856c:	58024400 	.word	0x58024400
 8008570:	58000400 	.word	0x58000400
 8008574:	58020000 	.word	0x58020000
 8008578:	58020400 	.word	0x58020400
 800857c:	58020800 	.word	0x58020800
 8008580:	58020c00 	.word	0x58020c00
 8008584:	58021000 	.word	0x58021000
 8008588:	58021400 	.word	0x58021400
 800858c:	58021800 	.word	0x58021800
 8008590:	58021c00 	.word	0x58021c00
 8008594:	58022000 	.word	0x58022000
 8008598:	58022400 	.word	0x58022400
 800859c:	2300      	movs	r3, #0
 800859e:	69fa      	ldr	r2, [r7, #28]
 80085a0:	f002 0203 	and.w	r2, r2, #3
 80085a4:	0092      	lsls	r2, r2, #2
 80085a6:	4093      	lsls	r3, r2
 80085a8:	69ba      	ldr	r2, [r7, #24]
 80085aa:	4313      	orrs	r3, r2
 80085ac:	61bb      	str	r3, [r7, #24]
 80085ae:	4938      	ldr	r1, [pc, #224]	; (8008690 <HAL_GPIO_Init+0x35c>)
 80085b0:	69fb      	ldr	r3, [r7, #28]
 80085b2:	089b      	lsrs	r3, r3, #2
 80085b4:	3302      	adds	r3, #2
 80085b6:	69ba      	ldr	r2, [r7, #24]
 80085b8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80085bc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80085c0:	681b      	ldr	r3, [r3, #0]
 80085c2:	61bb      	str	r3, [r7, #24]
 80085c4:	693b      	ldr	r3, [r7, #16]
 80085c6:	43db      	mvns	r3, r3
 80085c8:	69ba      	ldr	r2, [r7, #24]
 80085ca:	4013      	ands	r3, r2
 80085cc:	61bb      	str	r3, [r7, #24]
 80085ce:	683b      	ldr	r3, [r7, #0]
 80085d0:	685b      	ldr	r3, [r3, #4]
 80085d2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80085d6:	2b00      	cmp	r3, #0
 80085d8:	d003      	beq.n	80085e2 <HAL_GPIO_Init+0x2ae>
 80085da:	69ba      	ldr	r2, [r7, #24]
 80085dc:	693b      	ldr	r3, [r7, #16]
 80085de:	4313      	orrs	r3, r2
 80085e0:	61bb      	str	r3, [r7, #24]
 80085e2:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 80085e6:	69bb      	ldr	r3, [r7, #24]
 80085e8:	6013      	str	r3, [r2, #0]
 80085ea:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80085ee:	685b      	ldr	r3, [r3, #4]
 80085f0:	61bb      	str	r3, [r7, #24]
 80085f2:	693b      	ldr	r3, [r7, #16]
 80085f4:	43db      	mvns	r3, r3
 80085f6:	69ba      	ldr	r2, [r7, #24]
 80085f8:	4013      	ands	r3, r2
 80085fa:	61bb      	str	r3, [r7, #24]
 80085fc:	683b      	ldr	r3, [r7, #0]
 80085fe:	685b      	ldr	r3, [r3, #4]
 8008600:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8008604:	2b00      	cmp	r3, #0
 8008606:	d003      	beq.n	8008610 <HAL_GPIO_Init+0x2dc>
 8008608:	69ba      	ldr	r2, [r7, #24]
 800860a:	693b      	ldr	r3, [r7, #16]
 800860c:	4313      	orrs	r3, r2
 800860e:	61bb      	str	r3, [r7, #24]
 8008610:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8008614:	69bb      	ldr	r3, [r7, #24]
 8008616:	6053      	str	r3, [r2, #4]
 8008618:	697b      	ldr	r3, [r7, #20]
 800861a:	685b      	ldr	r3, [r3, #4]
 800861c:	61bb      	str	r3, [r7, #24]
 800861e:	693b      	ldr	r3, [r7, #16]
 8008620:	43db      	mvns	r3, r3
 8008622:	69ba      	ldr	r2, [r7, #24]
 8008624:	4013      	ands	r3, r2
 8008626:	61bb      	str	r3, [r7, #24]
 8008628:	683b      	ldr	r3, [r7, #0]
 800862a:	685b      	ldr	r3, [r3, #4]
 800862c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008630:	2b00      	cmp	r3, #0
 8008632:	d003      	beq.n	800863c <HAL_GPIO_Init+0x308>
 8008634:	69ba      	ldr	r2, [r7, #24]
 8008636:	693b      	ldr	r3, [r7, #16]
 8008638:	4313      	orrs	r3, r2
 800863a:	61bb      	str	r3, [r7, #24]
 800863c:	697b      	ldr	r3, [r7, #20]
 800863e:	69ba      	ldr	r2, [r7, #24]
 8008640:	605a      	str	r2, [r3, #4]
 8008642:	697b      	ldr	r3, [r7, #20]
 8008644:	681b      	ldr	r3, [r3, #0]
 8008646:	61bb      	str	r3, [r7, #24]
 8008648:	693b      	ldr	r3, [r7, #16]
 800864a:	43db      	mvns	r3, r3
 800864c:	69ba      	ldr	r2, [r7, #24]
 800864e:	4013      	ands	r3, r2
 8008650:	61bb      	str	r3, [r7, #24]
 8008652:	683b      	ldr	r3, [r7, #0]
 8008654:	685b      	ldr	r3, [r3, #4]
 8008656:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800865a:	2b00      	cmp	r3, #0
 800865c:	d003      	beq.n	8008666 <HAL_GPIO_Init+0x332>
 800865e:	69ba      	ldr	r2, [r7, #24]
 8008660:	693b      	ldr	r3, [r7, #16]
 8008662:	4313      	orrs	r3, r2
 8008664:	61bb      	str	r3, [r7, #24]
 8008666:	697b      	ldr	r3, [r7, #20]
 8008668:	69ba      	ldr	r2, [r7, #24]
 800866a:	601a      	str	r2, [r3, #0]
 800866c:	69fb      	ldr	r3, [r7, #28]
 800866e:	3301      	adds	r3, #1
 8008670:	61fb      	str	r3, [r7, #28]
 8008672:	683b      	ldr	r3, [r7, #0]
 8008674:	681a      	ldr	r2, [r3, #0]
 8008676:	69fb      	ldr	r3, [r7, #28]
 8008678:	fa22 f303 	lsr.w	r3, r2, r3
 800867c:	2b00      	cmp	r3, #0
 800867e:	f47f ae63 	bne.w	8008348 <HAL_GPIO_Init+0x14>
 8008682:	bf00      	nop
 8008684:	bf00      	nop
 8008686:	3724      	adds	r7, #36	; 0x24
 8008688:	46bd      	mov	sp, r7
 800868a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800868e:	4770      	bx	lr
 8008690:	58000400 	.word	0x58000400

08008694 <HAL_GPIO_ReadPin>:
 8008694:	b480      	push	{r7}
 8008696:	b085      	sub	sp, #20
 8008698:	af00      	add	r7, sp, #0
 800869a:	6078      	str	r0, [r7, #4]
 800869c:	460b      	mov	r3, r1
 800869e:	807b      	strh	r3, [r7, #2]
 80086a0:	687b      	ldr	r3, [r7, #4]
 80086a2:	691a      	ldr	r2, [r3, #16]
 80086a4:	887b      	ldrh	r3, [r7, #2]
 80086a6:	4013      	ands	r3, r2
 80086a8:	2b00      	cmp	r3, #0
 80086aa:	d002      	beq.n	80086b2 <HAL_GPIO_ReadPin+0x1e>
 80086ac:	2301      	movs	r3, #1
 80086ae:	73fb      	strb	r3, [r7, #15]
 80086b0:	e001      	b.n	80086b6 <HAL_GPIO_ReadPin+0x22>
 80086b2:	2300      	movs	r3, #0
 80086b4:	73fb      	strb	r3, [r7, #15]
 80086b6:	7bfb      	ldrb	r3, [r7, #15]
 80086b8:	4618      	mov	r0, r3
 80086ba:	3714      	adds	r7, #20
 80086bc:	46bd      	mov	sp, r7
 80086be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086c2:	4770      	bx	lr

080086c4 <HAL_GPIO_WritePin>:
 80086c4:	b480      	push	{r7}
 80086c6:	b083      	sub	sp, #12
 80086c8:	af00      	add	r7, sp, #0
 80086ca:	6078      	str	r0, [r7, #4]
 80086cc:	460b      	mov	r3, r1
 80086ce:	807b      	strh	r3, [r7, #2]
 80086d0:	4613      	mov	r3, r2
 80086d2:	707b      	strb	r3, [r7, #1]
 80086d4:	787b      	ldrb	r3, [r7, #1]
 80086d6:	2b00      	cmp	r3, #0
 80086d8:	d003      	beq.n	80086e2 <HAL_GPIO_WritePin+0x1e>
 80086da:	887a      	ldrh	r2, [r7, #2]
 80086dc:	687b      	ldr	r3, [r7, #4]
 80086de:	619a      	str	r2, [r3, #24]
 80086e0:	e003      	b.n	80086ea <HAL_GPIO_WritePin+0x26>
 80086e2:	887b      	ldrh	r3, [r7, #2]
 80086e4:	041a      	lsls	r2, r3, #16
 80086e6:	687b      	ldr	r3, [r7, #4]
 80086e8:	619a      	str	r2, [r3, #24]
 80086ea:	bf00      	nop
 80086ec:	370c      	adds	r7, #12
 80086ee:	46bd      	mov	sp, r7
 80086f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086f4:	4770      	bx	lr

080086f6 <HAL_GPIO_EXTI_IRQHandler>:
 80086f6:	b580      	push	{r7, lr}
 80086f8:	b082      	sub	sp, #8
 80086fa:	af00      	add	r7, sp, #0
 80086fc:	4603      	mov	r3, r0
 80086fe:	80fb      	strh	r3, [r7, #6]
 8008700:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008704:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8008708:	88fb      	ldrh	r3, [r7, #6]
 800870a:	4013      	ands	r3, r2
 800870c:	2b00      	cmp	r3, #0
 800870e:	d008      	beq.n	8008722 <HAL_GPIO_EXTI_IRQHandler+0x2c>
 8008710:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8008714:	88fb      	ldrh	r3, [r7, #6]
 8008716:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800871a:	88fb      	ldrh	r3, [r7, #6]
 800871c:	4618      	mov	r0, r3
 800871e:	f7fb faad 	bl	8003c7c <HAL_GPIO_EXTI_Callback>
 8008722:	bf00      	nop
 8008724:	3708      	adds	r7, #8
 8008726:	46bd      	mov	sp, r7
 8008728:	bd80      	pop	{r7, pc}
	...

0800872c <HAL_PWREx_ConfigSupply>:
 800872c:	b580      	push	{r7, lr}
 800872e:	b084      	sub	sp, #16
 8008730:	af00      	add	r7, sp, #0
 8008732:	6078      	str	r0, [r7, #4]
 8008734:	4b19      	ldr	r3, [pc, #100]	; (800879c <HAL_PWREx_ConfigSupply+0x70>)
 8008736:	68db      	ldr	r3, [r3, #12]
 8008738:	f003 0304 	and.w	r3, r3, #4
 800873c:	2b04      	cmp	r3, #4
 800873e:	d00a      	beq.n	8008756 <HAL_PWREx_ConfigSupply+0x2a>
 8008740:	4b16      	ldr	r3, [pc, #88]	; (800879c <HAL_PWREx_ConfigSupply+0x70>)
 8008742:	68db      	ldr	r3, [r3, #12]
 8008744:	f003 0307 	and.w	r3, r3, #7
 8008748:	687a      	ldr	r2, [r7, #4]
 800874a:	429a      	cmp	r2, r3
 800874c:	d001      	beq.n	8008752 <HAL_PWREx_ConfigSupply+0x26>
 800874e:	2301      	movs	r3, #1
 8008750:	e01f      	b.n	8008792 <HAL_PWREx_ConfigSupply+0x66>
 8008752:	2300      	movs	r3, #0
 8008754:	e01d      	b.n	8008792 <HAL_PWREx_ConfigSupply+0x66>
 8008756:	4b11      	ldr	r3, [pc, #68]	; (800879c <HAL_PWREx_ConfigSupply+0x70>)
 8008758:	68db      	ldr	r3, [r3, #12]
 800875a:	f023 0207 	bic.w	r2, r3, #7
 800875e:	490f      	ldr	r1, [pc, #60]	; (800879c <HAL_PWREx_ConfigSupply+0x70>)
 8008760:	687b      	ldr	r3, [r7, #4]
 8008762:	4313      	orrs	r3, r2
 8008764:	60cb      	str	r3, [r1, #12]
 8008766:	f7fe ff03 	bl	8007570 <HAL_GetTick>
 800876a:	60f8      	str	r0, [r7, #12]
 800876c:	e009      	b.n	8008782 <HAL_PWREx_ConfigSupply+0x56>
 800876e:	f7fe feff 	bl	8007570 <HAL_GetTick>
 8008772:	4602      	mov	r2, r0
 8008774:	68fb      	ldr	r3, [r7, #12]
 8008776:	1ad3      	subs	r3, r2, r3
 8008778:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800877c:	d901      	bls.n	8008782 <HAL_PWREx_ConfigSupply+0x56>
 800877e:	2301      	movs	r3, #1
 8008780:	e007      	b.n	8008792 <HAL_PWREx_ConfigSupply+0x66>
 8008782:	4b06      	ldr	r3, [pc, #24]	; (800879c <HAL_PWREx_ConfigSupply+0x70>)
 8008784:	685b      	ldr	r3, [r3, #4]
 8008786:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800878a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800878e:	d1ee      	bne.n	800876e <HAL_PWREx_ConfigSupply+0x42>
 8008790:	2300      	movs	r3, #0
 8008792:	4618      	mov	r0, r3
 8008794:	3710      	adds	r7, #16
 8008796:	46bd      	mov	sp, r7
 8008798:	bd80      	pop	{r7, pc}
 800879a:	bf00      	nop
 800879c:	58024800 	.word	0x58024800

080087a0 <HAL_RCC_OscConfig>:
 80087a0:	b580      	push	{r7, lr}
 80087a2:	b08c      	sub	sp, #48	; 0x30
 80087a4:	af00      	add	r7, sp, #0
 80087a6:	6078      	str	r0, [r7, #4]
 80087a8:	687b      	ldr	r3, [r7, #4]
 80087aa:	2b00      	cmp	r3, #0
 80087ac:	d102      	bne.n	80087b4 <HAL_RCC_OscConfig+0x14>
 80087ae:	2301      	movs	r3, #1
 80087b0:	f000 bc1d 	b.w	8008fee <HAL_RCC_OscConfig+0x84e>
 80087b4:	687b      	ldr	r3, [r7, #4]
 80087b6:	681b      	ldr	r3, [r3, #0]
 80087b8:	f003 0301 	and.w	r3, r3, #1
 80087bc:	2b00      	cmp	r3, #0
 80087be:	f000 8087 	beq.w	80088d0 <HAL_RCC_OscConfig+0x130>
 80087c2:	4b99      	ldr	r3, [pc, #612]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 80087c4:	691b      	ldr	r3, [r3, #16]
 80087c6:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80087ca:	62fb      	str	r3, [r7, #44]	; 0x2c
 80087cc:	4b96      	ldr	r3, [pc, #600]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 80087ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80087d0:	62bb      	str	r3, [r7, #40]	; 0x28
 80087d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80087d4:	2b10      	cmp	r3, #16
 80087d6:	d007      	beq.n	80087e8 <HAL_RCC_OscConfig+0x48>
 80087d8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80087da:	2b18      	cmp	r3, #24
 80087dc:	d110      	bne.n	8008800 <HAL_RCC_OscConfig+0x60>
 80087de:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80087e0:	f003 0303 	and.w	r3, r3, #3
 80087e4:	2b02      	cmp	r3, #2
 80087e6:	d10b      	bne.n	8008800 <HAL_RCC_OscConfig+0x60>
 80087e8:	4b8f      	ldr	r3, [pc, #572]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 80087ea:	681b      	ldr	r3, [r3, #0]
 80087ec:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80087f0:	2b00      	cmp	r3, #0
 80087f2:	d06c      	beq.n	80088ce <HAL_RCC_OscConfig+0x12e>
 80087f4:	687b      	ldr	r3, [r7, #4]
 80087f6:	685b      	ldr	r3, [r3, #4]
 80087f8:	2b00      	cmp	r3, #0
 80087fa:	d168      	bne.n	80088ce <HAL_RCC_OscConfig+0x12e>
 80087fc:	2301      	movs	r3, #1
 80087fe:	e3f6      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008800:	687b      	ldr	r3, [r7, #4]
 8008802:	685b      	ldr	r3, [r3, #4]
 8008804:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008808:	d106      	bne.n	8008818 <HAL_RCC_OscConfig+0x78>
 800880a:	4b87      	ldr	r3, [pc, #540]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 800880c:	681b      	ldr	r3, [r3, #0]
 800880e:	4a86      	ldr	r2, [pc, #536]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008810:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008814:	6013      	str	r3, [r2, #0]
 8008816:	e02e      	b.n	8008876 <HAL_RCC_OscConfig+0xd6>
 8008818:	687b      	ldr	r3, [r7, #4]
 800881a:	685b      	ldr	r3, [r3, #4]
 800881c:	2b00      	cmp	r3, #0
 800881e:	d10c      	bne.n	800883a <HAL_RCC_OscConfig+0x9a>
 8008820:	4b81      	ldr	r3, [pc, #516]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008822:	681b      	ldr	r3, [r3, #0]
 8008824:	4a80      	ldr	r2, [pc, #512]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008826:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800882a:	6013      	str	r3, [r2, #0]
 800882c:	4b7e      	ldr	r3, [pc, #504]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 800882e:	681b      	ldr	r3, [r3, #0]
 8008830:	4a7d      	ldr	r2, [pc, #500]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008832:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008836:	6013      	str	r3, [r2, #0]
 8008838:	e01d      	b.n	8008876 <HAL_RCC_OscConfig+0xd6>
 800883a:	687b      	ldr	r3, [r7, #4]
 800883c:	685b      	ldr	r3, [r3, #4]
 800883e:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8008842:	d10c      	bne.n	800885e <HAL_RCC_OscConfig+0xbe>
 8008844:	4b78      	ldr	r3, [pc, #480]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008846:	681b      	ldr	r3, [r3, #0]
 8008848:	4a77      	ldr	r2, [pc, #476]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 800884a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800884e:	6013      	str	r3, [r2, #0]
 8008850:	4b75      	ldr	r3, [pc, #468]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008852:	681b      	ldr	r3, [r3, #0]
 8008854:	4a74      	ldr	r2, [pc, #464]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008856:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800885a:	6013      	str	r3, [r2, #0]
 800885c:	e00b      	b.n	8008876 <HAL_RCC_OscConfig+0xd6>
 800885e:	4b72      	ldr	r3, [pc, #456]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008860:	681b      	ldr	r3, [r3, #0]
 8008862:	4a71      	ldr	r2, [pc, #452]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008864:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008868:	6013      	str	r3, [r2, #0]
 800886a:	4b6f      	ldr	r3, [pc, #444]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 800886c:	681b      	ldr	r3, [r3, #0]
 800886e:	4a6e      	ldr	r2, [pc, #440]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008870:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008874:	6013      	str	r3, [r2, #0]
 8008876:	687b      	ldr	r3, [r7, #4]
 8008878:	685b      	ldr	r3, [r3, #4]
 800887a:	2b00      	cmp	r3, #0
 800887c:	d013      	beq.n	80088a6 <HAL_RCC_OscConfig+0x106>
 800887e:	f7fe fe77 	bl	8007570 <HAL_GetTick>
 8008882:	6278      	str	r0, [r7, #36]	; 0x24
 8008884:	e008      	b.n	8008898 <HAL_RCC_OscConfig+0xf8>
 8008886:	f7fe fe73 	bl	8007570 <HAL_GetTick>
 800888a:	4602      	mov	r2, r0
 800888c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800888e:	1ad3      	subs	r3, r2, r3
 8008890:	2b64      	cmp	r3, #100	; 0x64
 8008892:	d901      	bls.n	8008898 <HAL_RCC_OscConfig+0xf8>
 8008894:	2303      	movs	r3, #3
 8008896:	e3aa      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008898:	4b63      	ldr	r3, [pc, #396]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 800889a:	681b      	ldr	r3, [r3, #0]
 800889c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80088a0:	2b00      	cmp	r3, #0
 80088a2:	d0f0      	beq.n	8008886 <HAL_RCC_OscConfig+0xe6>
 80088a4:	e014      	b.n	80088d0 <HAL_RCC_OscConfig+0x130>
 80088a6:	f7fe fe63 	bl	8007570 <HAL_GetTick>
 80088aa:	6278      	str	r0, [r7, #36]	; 0x24
 80088ac:	e008      	b.n	80088c0 <HAL_RCC_OscConfig+0x120>
 80088ae:	f7fe fe5f 	bl	8007570 <HAL_GetTick>
 80088b2:	4602      	mov	r2, r0
 80088b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80088b6:	1ad3      	subs	r3, r2, r3
 80088b8:	2b64      	cmp	r3, #100	; 0x64
 80088ba:	d901      	bls.n	80088c0 <HAL_RCC_OscConfig+0x120>
 80088bc:	2303      	movs	r3, #3
 80088be:	e396      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 80088c0:	4b59      	ldr	r3, [pc, #356]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 80088c2:	681b      	ldr	r3, [r3, #0]
 80088c4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80088c8:	2b00      	cmp	r3, #0
 80088ca:	d1f0      	bne.n	80088ae <HAL_RCC_OscConfig+0x10e>
 80088cc:	e000      	b.n	80088d0 <HAL_RCC_OscConfig+0x130>
 80088ce:	bf00      	nop
 80088d0:	687b      	ldr	r3, [r7, #4]
 80088d2:	681b      	ldr	r3, [r3, #0]
 80088d4:	f003 0302 	and.w	r3, r3, #2
 80088d8:	2b00      	cmp	r3, #0
 80088da:	f000 80cb 	beq.w	8008a74 <HAL_RCC_OscConfig+0x2d4>
 80088de:	4b52      	ldr	r3, [pc, #328]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 80088e0:	691b      	ldr	r3, [r3, #16]
 80088e2:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80088e6:	623b      	str	r3, [r7, #32]
 80088e8:	4b4f      	ldr	r3, [pc, #316]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 80088ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80088ec:	61fb      	str	r3, [r7, #28]
 80088ee:	6a3b      	ldr	r3, [r7, #32]
 80088f0:	2b00      	cmp	r3, #0
 80088f2:	d007      	beq.n	8008904 <HAL_RCC_OscConfig+0x164>
 80088f4:	6a3b      	ldr	r3, [r7, #32]
 80088f6:	2b18      	cmp	r3, #24
 80088f8:	d156      	bne.n	80089a8 <HAL_RCC_OscConfig+0x208>
 80088fa:	69fb      	ldr	r3, [r7, #28]
 80088fc:	f003 0303 	and.w	r3, r3, #3
 8008900:	2b00      	cmp	r3, #0
 8008902:	d151      	bne.n	80089a8 <HAL_RCC_OscConfig+0x208>
 8008904:	4b48      	ldr	r3, [pc, #288]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008906:	681b      	ldr	r3, [r3, #0]
 8008908:	f003 0304 	and.w	r3, r3, #4
 800890c:	2b00      	cmp	r3, #0
 800890e:	d005      	beq.n	800891c <HAL_RCC_OscConfig+0x17c>
 8008910:	687b      	ldr	r3, [r7, #4]
 8008912:	68db      	ldr	r3, [r3, #12]
 8008914:	2b00      	cmp	r3, #0
 8008916:	d101      	bne.n	800891c <HAL_RCC_OscConfig+0x17c>
 8008918:	2301      	movs	r3, #1
 800891a:	e368      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 800891c:	4b42      	ldr	r3, [pc, #264]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 800891e:	681b      	ldr	r3, [r3, #0]
 8008920:	f023 0219 	bic.w	r2, r3, #25
 8008924:	687b      	ldr	r3, [r7, #4]
 8008926:	68db      	ldr	r3, [r3, #12]
 8008928:	493f      	ldr	r1, [pc, #252]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 800892a:	4313      	orrs	r3, r2
 800892c:	600b      	str	r3, [r1, #0]
 800892e:	f7fe fe1f 	bl	8007570 <HAL_GetTick>
 8008932:	6278      	str	r0, [r7, #36]	; 0x24
 8008934:	e008      	b.n	8008948 <HAL_RCC_OscConfig+0x1a8>
 8008936:	f7fe fe1b 	bl	8007570 <HAL_GetTick>
 800893a:	4602      	mov	r2, r0
 800893c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800893e:	1ad3      	subs	r3, r2, r3
 8008940:	2b02      	cmp	r3, #2
 8008942:	d901      	bls.n	8008948 <HAL_RCC_OscConfig+0x1a8>
 8008944:	2303      	movs	r3, #3
 8008946:	e352      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008948:	4b37      	ldr	r3, [pc, #220]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 800894a:	681b      	ldr	r3, [r3, #0]
 800894c:	f003 0304 	and.w	r3, r3, #4
 8008950:	2b00      	cmp	r3, #0
 8008952:	d0f0      	beq.n	8008936 <HAL_RCC_OscConfig+0x196>
 8008954:	f7fe fe3c 	bl	80075d0 <HAL_GetREVID>
 8008958:	4603      	mov	r3, r0
 800895a:	f241 0203 	movw	r2, #4099	; 0x1003
 800895e:	4293      	cmp	r3, r2
 8008960:	d817      	bhi.n	8008992 <HAL_RCC_OscConfig+0x1f2>
 8008962:	687b      	ldr	r3, [r7, #4]
 8008964:	691b      	ldr	r3, [r3, #16]
 8008966:	2b40      	cmp	r3, #64	; 0x40
 8008968:	d108      	bne.n	800897c <HAL_RCC_OscConfig+0x1dc>
 800896a:	4b2f      	ldr	r3, [pc, #188]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 800896c:	685b      	ldr	r3, [r3, #4]
 800896e:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 8008972:	4a2d      	ldr	r2, [pc, #180]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008974:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008978:	6053      	str	r3, [r2, #4]
 800897a:	e07b      	b.n	8008a74 <HAL_RCC_OscConfig+0x2d4>
 800897c:	4b2a      	ldr	r3, [pc, #168]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 800897e:	685b      	ldr	r3, [r3, #4]
 8008980:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	691b      	ldr	r3, [r3, #16]
 8008988:	031b      	lsls	r3, r3, #12
 800898a:	4927      	ldr	r1, [pc, #156]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 800898c:	4313      	orrs	r3, r2
 800898e:	604b      	str	r3, [r1, #4]
 8008990:	e070      	b.n	8008a74 <HAL_RCC_OscConfig+0x2d4>
 8008992:	4b25      	ldr	r3, [pc, #148]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008994:	685b      	ldr	r3, [r3, #4]
 8008996:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 800899a:	687b      	ldr	r3, [r7, #4]
 800899c:	691b      	ldr	r3, [r3, #16]
 800899e:	061b      	lsls	r3, r3, #24
 80089a0:	4921      	ldr	r1, [pc, #132]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 80089a2:	4313      	orrs	r3, r2
 80089a4:	604b      	str	r3, [r1, #4]
 80089a6:	e065      	b.n	8008a74 <HAL_RCC_OscConfig+0x2d4>
 80089a8:	687b      	ldr	r3, [r7, #4]
 80089aa:	68db      	ldr	r3, [r3, #12]
 80089ac:	2b00      	cmp	r3, #0
 80089ae:	d048      	beq.n	8008a42 <HAL_RCC_OscConfig+0x2a2>
 80089b0:	4b1d      	ldr	r3, [pc, #116]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 80089b2:	681b      	ldr	r3, [r3, #0]
 80089b4:	f023 0219 	bic.w	r2, r3, #25
 80089b8:	687b      	ldr	r3, [r7, #4]
 80089ba:	68db      	ldr	r3, [r3, #12]
 80089bc:	491a      	ldr	r1, [pc, #104]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 80089be:	4313      	orrs	r3, r2
 80089c0:	600b      	str	r3, [r1, #0]
 80089c2:	f7fe fdd5 	bl	8007570 <HAL_GetTick>
 80089c6:	6278      	str	r0, [r7, #36]	; 0x24
 80089c8:	e008      	b.n	80089dc <HAL_RCC_OscConfig+0x23c>
 80089ca:	f7fe fdd1 	bl	8007570 <HAL_GetTick>
 80089ce:	4602      	mov	r2, r0
 80089d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80089d2:	1ad3      	subs	r3, r2, r3
 80089d4:	2b02      	cmp	r3, #2
 80089d6:	d901      	bls.n	80089dc <HAL_RCC_OscConfig+0x23c>
 80089d8:	2303      	movs	r3, #3
 80089da:	e308      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 80089dc:	4b12      	ldr	r3, [pc, #72]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 80089de:	681b      	ldr	r3, [r3, #0]
 80089e0:	f003 0304 	and.w	r3, r3, #4
 80089e4:	2b00      	cmp	r3, #0
 80089e6:	d0f0      	beq.n	80089ca <HAL_RCC_OscConfig+0x22a>
 80089e8:	f7fe fdf2 	bl	80075d0 <HAL_GetREVID>
 80089ec:	4603      	mov	r3, r0
 80089ee:	f241 0203 	movw	r2, #4099	; 0x1003
 80089f2:	4293      	cmp	r3, r2
 80089f4:	d81a      	bhi.n	8008a2c <HAL_RCC_OscConfig+0x28c>
 80089f6:	687b      	ldr	r3, [r7, #4]
 80089f8:	691b      	ldr	r3, [r3, #16]
 80089fa:	2b40      	cmp	r3, #64	; 0x40
 80089fc:	d108      	bne.n	8008a10 <HAL_RCC_OscConfig+0x270>
 80089fe:	4b0a      	ldr	r3, [pc, #40]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008a00:	685b      	ldr	r3, [r3, #4]
 8008a02:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 8008a06:	4a08      	ldr	r2, [pc, #32]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008a08:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008a0c:	6053      	str	r3, [r2, #4]
 8008a0e:	e031      	b.n	8008a74 <HAL_RCC_OscConfig+0x2d4>
 8008a10:	4b05      	ldr	r3, [pc, #20]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008a12:	685b      	ldr	r3, [r3, #4]
 8008a14:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 8008a18:	687b      	ldr	r3, [r7, #4]
 8008a1a:	691b      	ldr	r3, [r3, #16]
 8008a1c:	031b      	lsls	r3, r3, #12
 8008a1e:	4902      	ldr	r1, [pc, #8]	; (8008a28 <HAL_RCC_OscConfig+0x288>)
 8008a20:	4313      	orrs	r3, r2
 8008a22:	604b      	str	r3, [r1, #4]
 8008a24:	e026      	b.n	8008a74 <HAL_RCC_OscConfig+0x2d4>
 8008a26:	bf00      	nop
 8008a28:	58024400 	.word	0x58024400
 8008a2c:	4b9a      	ldr	r3, [pc, #616]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008a2e:	685b      	ldr	r3, [r3, #4]
 8008a30:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8008a34:	687b      	ldr	r3, [r7, #4]
 8008a36:	691b      	ldr	r3, [r3, #16]
 8008a38:	061b      	lsls	r3, r3, #24
 8008a3a:	4997      	ldr	r1, [pc, #604]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008a3c:	4313      	orrs	r3, r2
 8008a3e:	604b      	str	r3, [r1, #4]
 8008a40:	e018      	b.n	8008a74 <HAL_RCC_OscConfig+0x2d4>
 8008a42:	4b95      	ldr	r3, [pc, #596]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008a44:	681b      	ldr	r3, [r3, #0]
 8008a46:	4a94      	ldr	r2, [pc, #592]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008a48:	f023 0301 	bic.w	r3, r3, #1
 8008a4c:	6013      	str	r3, [r2, #0]
 8008a4e:	f7fe fd8f 	bl	8007570 <HAL_GetTick>
 8008a52:	6278      	str	r0, [r7, #36]	; 0x24
 8008a54:	e008      	b.n	8008a68 <HAL_RCC_OscConfig+0x2c8>
 8008a56:	f7fe fd8b 	bl	8007570 <HAL_GetTick>
 8008a5a:	4602      	mov	r2, r0
 8008a5c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008a5e:	1ad3      	subs	r3, r2, r3
 8008a60:	2b02      	cmp	r3, #2
 8008a62:	d901      	bls.n	8008a68 <HAL_RCC_OscConfig+0x2c8>
 8008a64:	2303      	movs	r3, #3
 8008a66:	e2c2      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008a68:	4b8b      	ldr	r3, [pc, #556]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008a6a:	681b      	ldr	r3, [r3, #0]
 8008a6c:	f003 0304 	and.w	r3, r3, #4
 8008a70:	2b00      	cmp	r3, #0
 8008a72:	d1f0      	bne.n	8008a56 <HAL_RCC_OscConfig+0x2b6>
 8008a74:	687b      	ldr	r3, [r7, #4]
 8008a76:	681b      	ldr	r3, [r3, #0]
 8008a78:	f003 0310 	and.w	r3, r3, #16
 8008a7c:	2b00      	cmp	r3, #0
 8008a7e:	f000 80a9 	beq.w	8008bd4 <HAL_RCC_OscConfig+0x434>
 8008a82:	4b85      	ldr	r3, [pc, #532]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008a84:	691b      	ldr	r3, [r3, #16]
 8008a86:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8008a8a:	61bb      	str	r3, [r7, #24]
 8008a8c:	4b82      	ldr	r3, [pc, #520]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008a8e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008a90:	617b      	str	r3, [r7, #20]
 8008a92:	69bb      	ldr	r3, [r7, #24]
 8008a94:	2b08      	cmp	r3, #8
 8008a96:	d007      	beq.n	8008aa8 <HAL_RCC_OscConfig+0x308>
 8008a98:	69bb      	ldr	r3, [r7, #24]
 8008a9a:	2b18      	cmp	r3, #24
 8008a9c:	d13a      	bne.n	8008b14 <HAL_RCC_OscConfig+0x374>
 8008a9e:	697b      	ldr	r3, [r7, #20]
 8008aa0:	f003 0303 	and.w	r3, r3, #3
 8008aa4:	2b01      	cmp	r3, #1
 8008aa6:	d135      	bne.n	8008b14 <HAL_RCC_OscConfig+0x374>
 8008aa8:	4b7b      	ldr	r3, [pc, #492]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008aaa:	681b      	ldr	r3, [r3, #0]
 8008aac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008ab0:	2b00      	cmp	r3, #0
 8008ab2:	d005      	beq.n	8008ac0 <HAL_RCC_OscConfig+0x320>
 8008ab4:	687b      	ldr	r3, [r7, #4]
 8008ab6:	69db      	ldr	r3, [r3, #28]
 8008ab8:	2b80      	cmp	r3, #128	; 0x80
 8008aba:	d001      	beq.n	8008ac0 <HAL_RCC_OscConfig+0x320>
 8008abc:	2301      	movs	r3, #1
 8008abe:	e296      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008ac0:	f7fe fd86 	bl	80075d0 <HAL_GetREVID>
 8008ac4:	4603      	mov	r3, r0
 8008ac6:	f241 0203 	movw	r2, #4099	; 0x1003
 8008aca:	4293      	cmp	r3, r2
 8008acc:	d817      	bhi.n	8008afe <HAL_RCC_OscConfig+0x35e>
 8008ace:	687b      	ldr	r3, [r7, #4]
 8008ad0:	6a1b      	ldr	r3, [r3, #32]
 8008ad2:	2b20      	cmp	r3, #32
 8008ad4:	d108      	bne.n	8008ae8 <HAL_RCC_OscConfig+0x348>
 8008ad6:	4b70      	ldr	r3, [pc, #448]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008ad8:	685b      	ldr	r3, [r3, #4]
 8008ada:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 8008ade:	4a6e      	ldr	r2, [pc, #440]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008ae0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8008ae4:	6053      	str	r3, [r2, #4]
 8008ae6:	e075      	b.n	8008bd4 <HAL_RCC_OscConfig+0x434>
 8008ae8:	4b6b      	ldr	r3, [pc, #428]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008aea:	685b      	ldr	r3, [r3, #4]
 8008aec:	f023 42f8 	bic.w	r2, r3, #2080374784	; 0x7c000000
 8008af0:	687b      	ldr	r3, [r7, #4]
 8008af2:	6a1b      	ldr	r3, [r3, #32]
 8008af4:	069b      	lsls	r3, r3, #26
 8008af6:	4968      	ldr	r1, [pc, #416]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008af8:	4313      	orrs	r3, r2
 8008afa:	604b      	str	r3, [r1, #4]
 8008afc:	e06a      	b.n	8008bd4 <HAL_RCC_OscConfig+0x434>
 8008afe:	4b66      	ldr	r3, [pc, #408]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008b00:	68db      	ldr	r3, [r3, #12]
 8008b02:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 8008b06:	687b      	ldr	r3, [r7, #4]
 8008b08:	6a1b      	ldr	r3, [r3, #32]
 8008b0a:	061b      	lsls	r3, r3, #24
 8008b0c:	4962      	ldr	r1, [pc, #392]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008b0e:	4313      	orrs	r3, r2
 8008b10:	60cb      	str	r3, [r1, #12]
 8008b12:	e05f      	b.n	8008bd4 <HAL_RCC_OscConfig+0x434>
 8008b14:	687b      	ldr	r3, [r7, #4]
 8008b16:	69db      	ldr	r3, [r3, #28]
 8008b18:	2b00      	cmp	r3, #0
 8008b1a:	d042      	beq.n	8008ba2 <HAL_RCC_OscConfig+0x402>
 8008b1c:	4b5e      	ldr	r3, [pc, #376]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008b1e:	681b      	ldr	r3, [r3, #0]
 8008b20:	4a5d      	ldr	r2, [pc, #372]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008b22:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008b26:	6013      	str	r3, [r2, #0]
 8008b28:	f7fe fd22 	bl	8007570 <HAL_GetTick>
 8008b2c:	6278      	str	r0, [r7, #36]	; 0x24
 8008b2e:	e008      	b.n	8008b42 <HAL_RCC_OscConfig+0x3a2>
 8008b30:	f7fe fd1e 	bl	8007570 <HAL_GetTick>
 8008b34:	4602      	mov	r2, r0
 8008b36:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008b38:	1ad3      	subs	r3, r2, r3
 8008b3a:	2b02      	cmp	r3, #2
 8008b3c:	d901      	bls.n	8008b42 <HAL_RCC_OscConfig+0x3a2>
 8008b3e:	2303      	movs	r3, #3
 8008b40:	e255      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008b42:	4b55      	ldr	r3, [pc, #340]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008b44:	681b      	ldr	r3, [r3, #0]
 8008b46:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008b4a:	2b00      	cmp	r3, #0
 8008b4c:	d0f0      	beq.n	8008b30 <HAL_RCC_OscConfig+0x390>
 8008b4e:	f7fe fd3f 	bl	80075d0 <HAL_GetREVID>
 8008b52:	4603      	mov	r3, r0
 8008b54:	f241 0203 	movw	r2, #4099	; 0x1003
 8008b58:	4293      	cmp	r3, r2
 8008b5a:	d817      	bhi.n	8008b8c <HAL_RCC_OscConfig+0x3ec>
 8008b5c:	687b      	ldr	r3, [r7, #4]
 8008b5e:	6a1b      	ldr	r3, [r3, #32]
 8008b60:	2b20      	cmp	r3, #32
 8008b62:	d108      	bne.n	8008b76 <HAL_RCC_OscConfig+0x3d6>
 8008b64:	4b4c      	ldr	r3, [pc, #304]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008b66:	685b      	ldr	r3, [r3, #4]
 8008b68:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 8008b6c:	4a4a      	ldr	r2, [pc, #296]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008b6e:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8008b72:	6053      	str	r3, [r2, #4]
 8008b74:	e02e      	b.n	8008bd4 <HAL_RCC_OscConfig+0x434>
 8008b76:	4b48      	ldr	r3, [pc, #288]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008b78:	685b      	ldr	r3, [r3, #4]
 8008b7a:	f023 42f8 	bic.w	r2, r3, #2080374784	; 0x7c000000
 8008b7e:	687b      	ldr	r3, [r7, #4]
 8008b80:	6a1b      	ldr	r3, [r3, #32]
 8008b82:	069b      	lsls	r3, r3, #26
 8008b84:	4944      	ldr	r1, [pc, #272]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008b86:	4313      	orrs	r3, r2
 8008b88:	604b      	str	r3, [r1, #4]
 8008b8a:	e023      	b.n	8008bd4 <HAL_RCC_OscConfig+0x434>
 8008b8c:	4b42      	ldr	r3, [pc, #264]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008b8e:	68db      	ldr	r3, [r3, #12]
 8008b90:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 8008b94:	687b      	ldr	r3, [r7, #4]
 8008b96:	6a1b      	ldr	r3, [r3, #32]
 8008b98:	061b      	lsls	r3, r3, #24
 8008b9a:	493f      	ldr	r1, [pc, #252]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008b9c:	4313      	orrs	r3, r2
 8008b9e:	60cb      	str	r3, [r1, #12]
 8008ba0:	e018      	b.n	8008bd4 <HAL_RCC_OscConfig+0x434>
 8008ba2:	4b3d      	ldr	r3, [pc, #244]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008ba4:	681b      	ldr	r3, [r3, #0]
 8008ba6:	4a3c      	ldr	r2, [pc, #240]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008ba8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008bac:	6013      	str	r3, [r2, #0]
 8008bae:	f7fe fcdf 	bl	8007570 <HAL_GetTick>
 8008bb2:	6278      	str	r0, [r7, #36]	; 0x24
 8008bb4:	e008      	b.n	8008bc8 <HAL_RCC_OscConfig+0x428>
 8008bb6:	f7fe fcdb 	bl	8007570 <HAL_GetTick>
 8008bba:	4602      	mov	r2, r0
 8008bbc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008bbe:	1ad3      	subs	r3, r2, r3
 8008bc0:	2b02      	cmp	r3, #2
 8008bc2:	d901      	bls.n	8008bc8 <HAL_RCC_OscConfig+0x428>
 8008bc4:	2303      	movs	r3, #3
 8008bc6:	e212      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008bc8:	4b33      	ldr	r3, [pc, #204]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008bca:	681b      	ldr	r3, [r3, #0]
 8008bcc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008bd0:	2b00      	cmp	r3, #0
 8008bd2:	d1f0      	bne.n	8008bb6 <HAL_RCC_OscConfig+0x416>
 8008bd4:	687b      	ldr	r3, [r7, #4]
 8008bd6:	681b      	ldr	r3, [r3, #0]
 8008bd8:	f003 0308 	and.w	r3, r3, #8
 8008bdc:	2b00      	cmp	r3, #0
 8008bde:	d036      	beq.n	8008c4e <HAL_RCC_OscConfig+0x4ae>
 8008be0:	687b      	ldr	r3, [r7, #4]
 8008be2:	695b      	ldr	r3, [r3, #20]
 8008be4:	2b00      	cmp	r3, #0
 8008be6:	d019      	beq.n	8008c1c <HAL_RCC_OscConfig+0x47c>
 8008be8:	4b2b      	ldr	r3, [pc, #172]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008bea:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008bec:	4a2a      	ldr	r2, [pc, #168]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008bee:	f043 0301 	orr.w	r3, r3, #1
 8008bf2:	6753      	str	r3, [r2, #116]	; 0x74
 8008bf4:	f7fe fcbc 	bl	8007570 <HAL_GetTick>
 8008bf8:	6278      	str	r0, [r7, #36]	; 0x24
 8008bfa:	e008      	b.n	8008c0e <HAL_RCC_OscConfig+0x46e>
 8008bfc:	f7fe fcb8 	bl	8007570 <HAL_GetTick>
 8008c00:	4602      	mov	r2, r0
 8008c02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008c04:	1ad3      	subs	r3, r2, r3
 8008c06:	2b02      	cmp	r3, #2
 8008c08:	d901      	bls.n	8008c0e <HAL_RCC_OscConfig+0x46e>
 8008c0a:	2303      	movs	r3, #3
 8008c0c:	e1ef      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008c0e:	4b22      	ldr	r3, [pc, #136]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008c10:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008c12:	f003 0302 	and.w	r3, r3, #2
 8008c16:	2b00      	cmp	r3, #0
 8008c18:	d0f0      	beq.n	8008bfc <HAL_RCC_OscConfig+0x45c>
 8008c1a:	e018      	b.n	8008c4e <HAL_RCC_OscConfig+0x4ae>
 8008c1c:	4b1e      	ldr	r3, [pc, #120]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008c1e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008c20:	4a1d      	ldr	r2, [pc, #116]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008c22:	f023 0301 	bic.w	r3, r3, #1
 8008c26:	6753      	str	r3, [r2, #116]	; 0x74
 8008c28:	f7fe fca2 	bl	8007570 <HAL_GetTick>
 8008c2c:	6278      	str	r0, [r7, #36]	; 0x24
 8008c2e:	e008      	b.n	8008c42 <HAL_RCC_OscConfig+0x4a2>
 8008c30:	f7fe fc9e 	bl	8007570 <HAL_GetTick>
 8008c34:	4602      	mov	r2, r0
 8008c36:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008c38:	1ad3      	subs	r3, r2, r3
 8008c3a:	2b02      	cmp	r3, #2
 8008c3c:	d901      	bls.n	8008c42 <HAL_RCC_OscConfig+0x4a2>
 8008c3e:	2303      	movs	r3, #3
 8008c40:	e1d5      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008c42:	4b15      	ldr	r3, [pc, #84]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008c44:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008c46:	f003 0302 	and.w	r3, r3, #2
 8008c4a:	2b00      	cmp	r3, #0
 8008c4c:	d1f0      	bne.n	8008c30 <HAL_RCC_OscConfig+0x490>
 8008c4e:	687b      	ldr	r3, [r7, #4]
 8008c50:	681b      	ldr	r3, [r3, #0]
 8008c52:	f003 0320 	and.w	r3, r3, #32
 8008c56:	2b00      	cmp	r3, #0
 8008c58:	d039      	beq.n	8008cce <HAL_RCC_OscConfig+0x52e>
 8008c5a:	687b      	ldr	r3, [r7, #4]
 8008c5c:	699b      	ldr	r3, [r3, #24]
 8008c5e:	2b00      	cmp	r3, #0
 8008c60:	d01c      	beq.n	8008c9c <HAL_RCC_OscConfig+0x4fc>
 8008c62:	4b0d      	ldr	r3, [pc, #52]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008c64:	681b      	ldr	r3, [r3, #0]
 8008c66:	4a0c      	ldr	r2, [pc, #48]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008c68:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8008c6c:	6013      	str	r3, [r2, #0]
 8008c6e:	f7fe fc7f 	bl	8007570 <HAL_GetTick>
 8008c72:	6278      	str	r0, [r7, #36]	; 0x24
 8008c74:	e008      	b.n	8008c88 <HAL_RCC_OscConfig+0x4e8>
 8008c76:	f7fe fc7b 	bl	8007570 <HAL_GetTick>
 8008c7a:	4602      	mov	r2, r0
 8008c7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008c7e:	1ad3      	subs	r3, r2, r3
 8008c80:	2b02      	cmp	r3, #2
 8008c82:	d901      	bls.n	8008c88 <HAL_RCC_OscConfig+0x4e8>
 8008c84:	2303      	movs	r3, #3
 8008c86:	e1b2      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008c88:	4b03      	ldr	r3, [pc, #12]	; (8008c98 <HAL_RCC_OscConfig+0x4f8>)
 8008c8a:	681b      	ldr	r3, [r3, #0]
 8008c8c:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8008c90:	2b00      	cmp	r3, #0
 8008c92:	d0f0      	beq.n	8008c76 <HAL_RCC_OscConfig+0x4d6>
 8008c94:	e01b      	b.n	8008cce <HAL_RCC_OscConfig+0x52e>
 8008c96:	bf00      	nop
 8008c98:	58024400 	.word	0x58024400
 8008c9c:	4b9b      	ldr	r3, [pc, #620]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008c9e:	681b      	ldr	r3, [r3, #0]
 8008ca0:	4a9a      	ldr	r2, [pc, #616]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008ca2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8008ca6:	6013      	str	r3, [r2, #0]
 8008ca8:	f7fe fc62 	bl	8007570 <HAL_GetTick>
 8008cac:	6278      	str	r0, [r7, #36]	; 0x24
 8008cae:	e008      	b.n	8008cc2 <HAL_RCC_OscConfig+0x522>
 8008cb0:	f7fe fc5e 	bl	8007570 <HAL_GetTick>
 8008cb4:	4602      	mov	r2, r0
 8008cb6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008cb8:	1ad3      	subs	r3, r2, r3
 8008cba:	2b02      	cmp	r3, #2
 8008cbc:	d901      	bls.n	8008cc2 <HAL_RCC_OscConfig+0x522>
 8008cbe:	2303      	movs	r3, #3
 8008cc0:	e195      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008cc2:	4b92      	ldr	r3, [pc, #584]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008cc4:	681b      	ldr	r3, [r3, #0]
 8008cc6:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8008cca:	2b00      	cmp	r3, #0
 8008ccc:	d1f0      	bne.n	8008cb0 <HAL_RCC_OscConfig+0x510>
 8008cce:	687b      	ldr	r3, [r7, #4]
 8008cd0:	681b      	ldr	r3, [r3, #0]
 8008cd2:	f003 0304 	and.w	r3, r3, #4
 8008cd6:	2b00      	cmp	r3, #0
 8008cd8:	f000 8081 	beq.w	8008dde <HAL_RCC_OscConfig+0x63e>
 8008cdc:	4b8c      	ldr	r3, [pc, #560]	; (8008f10 <HAL_RCC_OscConfig+0x770>)
 8008cde:	681b      	ldr	r3, [r3, #0]
 8008ce0:	4a8b      	ldr	r2, [pc, #556]	; (8008f10 <HAL_RCC_OscConfig+0x770>)
 8008ce2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008ce6:	6013      	str	r3, [r2, #0]
 8008ce8:	f7fe fc42 	bl	8007570 <HAL_GetTick>
 8008cec:	6278      	str	r0, [r7, #36]	; 0x24
 8008cee:	e008      	b.n	8008d02 <HAL_RCC_OscConfig+0x562>
 8008cf0:	f7fe fc3e 	bl	8007570 <HAL_GetTick>
 8008cf4:	4602      	mov	r2, r0
 8008cf6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008cf8:	1ad3      	subs	r3, r2, r3
 8008cfa:	2b64      	cmp	r3, #100	; 0x64
 8008cfc:	d901      	bls.n	8008d02 <HAL_RCC_OscConfig+0x562>
 8008cfe:	2303      	movs	r3, #3
 8008d00:	e175      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008d02:	4b83      	ldr	r3, [pc, #524]	; (8008f10 <HAL_RCC_OscConfig+0x770>)
 8008d04:	681b      	ldr	r3, [r3, #0]
 8008d06:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008d0a:	2b00      	cmp	r3, #0
 8008d0c:	d0f0      	beq.n	8008cf0 <HAL_RCC_OscConfig+0x550>
 8008d0e:	687b      	ldr	r3, [r7, #4]
 8008d10:	689b      	ldr	r3, [r3, #8]
 8008d12:	2b01      	cmp	r3, #1
 8008d14:	d106      	bne.n	8008d24 <HAL_RCC_OscConfig+0x584>
 8008d16:	4b7d      	ldr	r3, [pc, #500]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008d18:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008d1a:	4a7c      	ldr	r2, [pc, #496]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008d1c:	f043 0301 	orr.w	r3, r3, #1
 8008d20:	6713      	str	r3, [r2, #112]	; 0x70
 8008d22:	e02d      	b.n	8008d80 <HAL_RCC_OscConfig+0x5e0>
 8008d24:	687b      	ldr	r3, [r7, #4]
 8008d26:	689b      	ldr	r3, [r3, #8]
 8008d28:	2b00      	cmp	r3, #0
 8008d2a:	d10c      	bne.n	8008d46 <HAL_RCC_OscConfig+0x5a6>
 8008d2c:	4b77      	ldr	r3, [pc, #476]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008d2e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008d30:	4a76      	ldr	r2, [pc, #472]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008d32:	f023 0301 	bic.w	r3, r3, #1
 8008d36:	6713      	str	r3, [r2, #112]	; 0x70
 8008d38:	4b74      	ldr	r3, [pc, #464]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008d3a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008d3c:	4a73      	ldr	r2, [pc, #460]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008d3e:	f023 0304 	bic.w	r3, r3, #4
 8008d42:	6713      	str	r3, [r2, #112]	; 0x70
 8008d44:	e01c      	b.n	8008d80 <HAL_RCC_OscConfig+0x5e0>
 8008d46:	687b      	ldr	r3, [r7, #4]
 8008d48:	689b      	ldr	r3, [r3, #8]
 8008d4a:	2b05      	cmp	r3, #5
 8008d4c:	d10c      	bne.n	8008d68 <HAL_RCC_OscConfig+0x5c8>
 8008d4e:	4b6f      	ldr	r3, [pc, #444]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008d50:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008d52:	4a6e      	ldr	r2, [pc, #440]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008d54:	f043 0304 	orr.w	r3, r3, #4
 8008d58:	6713      	str	r3, [r2, #112]	; 0x70
 8008d5a:	4b6c      	ldr	r3, [pc, #432]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008d5c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008d5e:	4a6b      	ldr	r2, [pc, #428]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008d60:	f043 0301 	orr.w	r3, r3, #1
 8008d64:	6713      	str	r3, [r2, #112]	; 0x70
 8008d66:	e00b      	b.n	8008d80 <HAL_RCC_OscConfig+0x5e0>
 8008d68:	4b68      	ldr	r3, [pc, #416]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008d6a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008d6c:	4a67      	ldr	r2, [pc, #412]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008d6e:	f023 0301 	bic.w	r3, r3, #1
 8008d72:	6713      	str	r3, [r2, #112]	; 0x70
 8008d74:	4b65      	ldr	r3, [pc, #404]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008d76:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008d78:	4a64      	ldr	r2, [pc, #400]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008d7a:	f023 0304 	bic.w	r3, r3, #4
 8008d7e:	6713      	str	r3, [r2, #112]	; 0x70
 8008d80:	687b      	ldr	r3, [r7, #4]
 8008d82:	689b      	ldr	r3, [r3, #8]
 8008d84:	2b00      	cmp	r3, #0
 8008d86:	d015      	beq.n	8008db4 <HAL_RCC_OscConfig+0x614>
 8008d88:	f7fe fbf2 	bl	8007570 <HAL_GetTick>
 8008d8c:	6278      	str	r0, [r7, #36]	; 0x24
 8008d8e:	e00a      	b.n	8008da6 <HAL_RCC_OscConfig+0x606>
 8008d90:	f7fe fbee 	bl	8007570 <HAL_GetTick>
 8008d94:	4602      	mov	r2, r0
 8008d96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008d98:	1ad3      	subs	r3, r2, r3
 8008d9a:	f241 3288 	movw	r2, #5000	; 0x1388
 8008d9e:	4293      	cmp	r3, r2
 8008da0:	d901      	bls.n	8008da6 <HAL_RCC_OscConfig+0x606>
 8008da2:	2303      	movs	r3, #3
 8008da4:	e123      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008da6:	4b59      	ldr	r3, [pc, #356]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008da8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008daa:	f003 0302 	and.w	r3, r3, #2
 8008dae:	2b00      	cmp	r3, #0
 8008db0:	d0ee      	beq.n	8008d90 <HAL_RCC_OscConfig+0x5f0>
 8008db2:	e014      	b.n	8008dde <HAL_RCC_OscConfig+0x63e>
 8008db4:	f7fe fbdc 	bl	8007570 <HAL_GetTick>
 8008db8:	6278      	str	r0, [r7, #36]	; 0x24
 8008dba:	e00a      	b.n	8008dd2 <HAL_RCC_OscConfig+0x632>
 8008dbc:	f7fe fbd8 	bl	8007570 <HAL_GetTick>
 8008dc0:	4602      	mov	r2, r0
 8008dc2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008dc4:	1ad3      	subs	r3, r2, r3
 8008dc6:	f241 3288 	movw	r2, #5000	; 0x1388
 8008dca:	4293      	cmp	r3, r2
 8008dcc:	d901      	bls.n	8008dd2 <HAL_RCC_OscConfig+0x632>
 8008dce:	2303      	movs	r3, #3
 8008dd0:	e10d      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008dd2:	4b4e      	ldr	r3, [pc, #312]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008dd4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008dd6:	f003 0302 	and.w	r3, r3, #2
 8008dda:	2b00      	cmp	r3, #0
 8008ddc:	d1ee      	bne.n	8008dbc <HAL_RCC_OscConfig+0x61c>
 8008dde:	687b      	ldr	r3, [r7, #4]
 8008de0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008de2:	2b00      	cmp	r3, #0
 8008de4:	f000 8102 	beq.w	8008fec <HAL_RCC_OscConfig+0x84c>
 8008de8:	4b48      	ldr	r3, [pc, #288]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008dea:	691b      	ldr	r3, [r3, #16]
 8008dec:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8008df0:	2b18      	cmp	r3, #24
 8008df2:	f000 80bd 	beq.w	8008f70 <HAL_RCC_OscConfig+0x7d0>
 8008df6:	687b      	ldr	r3, [r7, #4]
 8008df8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008dfa:	2b02      	cmp	r3, #2
 8008dfc:	f040 809e 	bne.w	8008f3c <HAL_RCC_OscConfig+0x79c>
 8008e00:	4b42      	ldr	r3, [pc, #264]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008e02:	681b      	ldr	r3, [r3, #0]
 8008e04:	4a41      	ldr	r2, [pc, #260]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008e06:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8008e0a:	6013      	str	r3, [r2, #0]
 8008e0c:	f7fe fbb0 	bl	8007570 <HAL_GetTick>
 8008e10:	6278      	str	r0, [r7, #36]	; 0x24
 8008e12:	e008      	b.n	8008e26 <HAL_RCC_OscConfig+0x686>
 8008e14:	f7fe fbac 	bl	8007570 <HAL_GetTick>
 8008e18:	4602      	mov	r2, r0
 8008e1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008e1c:	1ad3      	subs	r3, r2, r3
 8008e1e:	2b02      	cmp	r3, #2
 8008e20:	d901      	bls.n	8008e26 <HAL_RCC_OscConfig+0x686>
 8008e22:	2303      	movs	r3, #3
 8008e24:	e0e3      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008e26:	4b39      	ldr	r3, [pc, #228]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008e28:	681b      	ldr	r3, [r3, #0]
 8008e2a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008e2e:	2b00      	cmp	r3, #0
 8008e30:	d1f0      	bne.n	8008e14 <HAL_RCC_OscConfig+0x674>
 8008e32:	4b36      	ldr	r3, [pc, #216]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008e34:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8008e36:	4b37      	ldr	r3, [pc, #220]	; (8008f14 <HAL_RCC_OscConfig+0x774>)
 8008e38:	4013      	ands	r3, r2
 8008e3a:	687a      	ldr	r2, [r7, #4]
 8008e3c:	6a91      	ldr	r1, [r2, #40]	; 0x28
 8008e3e:	687a      	ldr	r2, [r7, #4]
 8008e40:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8008e42:	0112      	lsls	r2, r2, #4
 8008e44:	430a      	orrs	r2, r1
 8008e46:	4931      	ldr	r1, [pc, #196]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008e48:	4313      	orrs	r3, r2
 8008e4a:	628b      	str	r3, [r1, #40]	; 0x28
 8008e4c:	687b      	ldr	r3, [r7, #4]
 8008e4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008e50:	3b01      	subs	r3, #1
 8008e52:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8008e56:	687b      	ldr	r3, [r7, #4]
 8008e58:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008e5a:	3b01      	subs	r3, #1
 8008e5c:	025b      	lsls	r3, r3, #9
 8008e5e:	b29b      	uxth	r3, r3
 8008e60:	431a      	orrs	r2, r3
 8008e62:	687b      	ldr	r3, [r7, #4]
 8008e64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008e66:	3b01      	subs	r3, #1
 8008e68:	041b      	lsls	r3, r3, #16
 8008e6a:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 8008e6e:	431a      	orrs	r2, r3
 8008e70:	687b      	ldr	r3, [r7, #4]
 8008e72:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008e74:	3b01      	subs	r3, #1
 8008e76:	061b      	lsls	r3, r3, #24
 8008e78:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 8008e7c:	4923      	ldr	r1, [pc, #140]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008e7e:	4313      	orrs	r3, r2
 8008e80:	630b      	str	r3, [r1, #48]	; 0x30
 8008e82:	4b22      	ldr	r3, [pc, #136]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008e84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e86:	4a21      	ldr	r2, [pc, #132]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008e88:	f023 0301 	bic.w	r3, r3, #1
 8008e8c:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008e8e:	4b1f      	ldr	r3, [pc, #124]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008e90:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008e92:	4b21      	ldr	r3, [pc, #132]	; (8008f18 <HAL_RCC_OscConfig+0x778>)
 8008e94:	4013      	ands	r3, r2
 8008e96:	687a      	ldr	r2, [r7, #4]
 8008e98:	6c92      	ldr	r2, [r2, #72]	; 0x48
 8008e9a:	00d2      	lsls	r2, r2, #3
 8008e9c:	491b      	ldr	r1, [pc, #108]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008e9e:	4313      	orrs	r3, r2
 8008ea0:	634b      	str	r3, [r1, #52]	; 0x34
 8008ea2:	4b1a      	ldr	r3, [pc, #104]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008ea4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ea6:	f023 020c 	bic.w	r2, r3, #12
 8008eaa:	687b      	ldr	r3, [r7, #4]
 8008eac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008eae:	4917      	ldr	r1, [pc, #92]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008eb0:	4313      	orrs	r3, r2
 8008eb2:	62cb      	str	r3, [r1, #44]	; 0x2c
 8008eb4:	4b15      	ldr	r3, [pc, #84]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008eb6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008eb8:	f023 0202 	bic.w	r2, r3, #2
 8008ebc:	687b      	ldr	r3, [r7, #4]
 8008ebe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008ec0:	4912      	ldr	r1, [pc, #72]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008ec2:	4313      	orrs	r3, r2
 8008ec4:	62cb      	str	r3, [r1, #44]	; 0x2c
 8008ec6:	4b11      	ldr	r3, [pc, #68]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008ec8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008eca:	4a10      	ldr	r2, [pc, #64]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008ecc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008ed0:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008ed2:	4b0e      	ldr	r3, [pc, #56]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008ed4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ed6:	4a0d      	ldr	r2, [pc, #52]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008ed8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008edc:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008ede:	4b0b      	ldr	r3, [pc, #44]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008ee0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ee2:	4a0a      	ldr	r2, [pc, #40]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008ee4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8008ee8:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008eea:	4b08      	ldr	r3, [pc, #32]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008eec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008eee:	4a07      	ldr	r2, [pc, #28]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008ef0:	f043 0301 	orr.w	r3, r3, #1
 8008ef4:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008ef6:	4b05      	ldr	r3, [pc, #20]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008ef8:	681b      	ldr	r3, [r3, #0]
 8008efa:	4a04      	ldr	r2, [pc, #16]	; (8008f0c <HAL_RCC_OscConfig+0x76c>)
 8008efc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8008f00:	6013      	str	r3, [r2, #0]
 8008f02:	f7fe fb35 	bl	8007570 <HAL_GetTick>
 8008f06:	6278      	str	r0, [r7, #36]	; 0x24
 8008f08:	e011      	b.n	8008f2e <HAL_RCC_OscConfig+0x78e>
 8008f0a:	bf00      	nop
 8008f0c:	58024400 	.word	0x58024400
 8008f10:	58024800 	.word	0x58024800
 8008f14:	fffffc0c 	.word	0xfffffc0c
 8008f18:	ffff0007 	.word	0xffff0007
 8008f1c:	f7fe fb28 	bl	8007570 <HAL_GetTick>
 8008f20:	4602      	mov	r2, r0
 8008f22:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008f24:	1ad3      	subs	r3, r2, r3
 8008f26:	2b02      	cmp	r3, #2
 8008f28:	d901      	bls.n	8008f2e <HAL_RCC_OscConfig+0x78e>
 8008f2a:	2303      	movs	r3, #3
 8008f2c:	e05f      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008f2e:	4b32      	ldr	r3, [pc, #200]	; (8008ff8 <HAL_RCC_OscConfig+0x858>)
 8008f30:	681b      	ldr	r3, [r3, #0]
 8008f32:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008f36:	2b00      	cmp	r3, #0
 8008f38:	d0f0      	beq.n	8008f1c <HAL_RCC_OscConfig+0x77c>
 8008f3a:	e057      	b.n	8008fec <HAL_RCC_OscConfig+0x84c>
 8008f3c:	4b2e      	ldr	r3, [pc, #184]	; (8008ff8 <HAL_RCC_OscConfig+0x858>)
 8008f3e:	681b      	ldr	r3, [r3, #0]
 8008f40:	4a2d      	ldr	r2, [pc, #180]	; (8008ff8 <HAL_RCC_OscConfig+0x858>)
 8008f42:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8008f46:	6013      	str	r3, [r2, #0]
 8008f48:	f7fe fb12 	bl	8007570 <HAL_GetTick>
 8008f4c:	6278      	str	r0, [r7, #36]	; 0x24
 8008f4e:	e008      	b.n	8008f62 <HAL_RCC_OscConfig+0x7c2>
 8008f50:	f7fe fb0e 	bl	8007570 <HAL_GetTick>
 8008f54:	4602      	mov	r2, r0
 8008f56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008f58:	1ad3      	subs	r3, r2, r3
 8008f5a:	2b02      	cmp	r3, #2
 8008f5c:	d901      	bls.n	8008f62 <HAL_RCC_OscConfig+0x7c2>
 8008f5e:	2303      	movs	r3, #3
 8008f60:	e045      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008f62:	4b25      	ldr	r3, [pc, #148]	; (8008ff8 <HAL_RCC_OscConfig+0x858>)
 8008f64:	681b      	ldr	r3, [r3, #0]
 8008f66:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008f6a:	2b00      	cmp	r3, #0
 8008f6c:	d1f0      	bne.n	8008f50 <HAL_RCC_OscConfig+0x7b0>
 8008f6e:	e03d      	b.n	8008fec <HAL_RCC_OscConfig+0x84c>
 8008f70:	4b21      	ldr	r3, [pc, #132]	; (8008ff8 <HAL_RCC_OscConfig+0x858>)
 8008f72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008f74:	613b      	str	r3, [r7, #16]
 8008f76:	4b20      	ldr	r3, [pc, #128]	; (8008ff8 <HAL_RCC_OscConfig+0x858>)
 8008f78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008f7a:	60fb      	str	r3, [r7, #12]
 8008f7c:	687b      	ldr	r3, [r7, #4]
 8008f7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008f80:	2b01      	cmp	r3, #1
 8008f82:	d031      	beq.n	8008fe8 <HAL_RCC_OscConfig+0x848>
 8008f84:	693b      	ldr	r3, [r7, #16]
 8008f86:	f003 0203 	and.w	r2, r3, #3
 8008f8a:	687b      	ldr	r3, [r7, #4]
 8008f8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008f8e:	429a      	cmp	r2, r3
 8008f90:	d12a      	bne.n	8008fe8 <HAL_RCC_OscConfig+0x848>
 8008f92:	693b      	ldr	r3, [r7, #16]
 8008f94:	091b      	lsrs	r3, r3, #4
 8008f96:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8008f9a:	687b      	ldr	r3, [r7, #4]
 8008f9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f9e:	429a      	cmp	r2, r3
 8008fa0:	d122      	bne.n	8008fe8 <HAL_RCC_OscConfig+0x848>
 8008fa2:	68fb      	ldr	r3, [r7, #12]
 8008fa4:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8008fa8:	687b      	ldr	r3, [r7, #4]
 8008faa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008fac:	3b01      	subs	r3, #1
 8008fae:	429a      	cmp	r2, r3
 8008fb0:	d11a      	bne.n	8008fe8 <HAL_RCC_OscConfig+0x848>
 8008fb2:	68fb      	ldr	r3, [r7, #12]
 8008fb4:	0a5b      	lsrs	r3, r3, #9
 8008fb6:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8008fba:	687b      	ldr	r3, [r7, #4]
 8008fbc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008fbe:	3b01      	subs	r3, #1
 8008fc0:	429a      	cmp	r2, r3
 8008fc2:	d111      	bne.n	8008fe8 <HAL_RCC_OscConfig+0x848>
 8008fc4:	68fb      	ldr	r3, [r7, #12]
 8008fc6:	0c1b      	lsrs	r3, r3, #16
 8008fc8:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8008fcc:	687b      	ldr	r3, [r7, #4]
 8008fce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008fd0:	3b01      	subs	r3, #1
 8008fd2:	429a      	cmp	r2, r3
 8008fd4:	d108      	bne.n	8008fe8 <HAL_RCC_OscConfig+0x848>
 8008fd6:	68fb      	ldr	r3, [r7, #12]
 8008fd8:	0e1b      	lsrs	r3, r3, #24
 8008fda:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8008fde:	687b      	ldr	r3, [r7, #4]
 8008fe0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008fe2:	3b01      	subs	r3, #1
 8008fe4:	429a      	cmp	r2, r3
 8008fe6:	d001      	beq.n	8008fec <HAL_RCC_OscConfig+0x84c>
 8008fe8:	2301      	movs	r3, #1
 8008fea:	e000      	b.n	8008fee <HAL_RCC_OscConfig+0x84e>
 8008fec:	2300      	movs	r3, #0
 8008fee:	4618      	mov	r0, r3
 8008ff0:	3730      	adds	r7, #48	; 0x30
 8008ff2:	46bd      	mov	sp, r7
 8008ff4:	bd80      	pop	{r7, pc}
 8008ff6:	bf00      	nop
 8008ff8:	58024400 	.word	0x58024400

08008ffc <HAL_RCC_ClockConfig>:
 8008ffc:	b580      	push	{r7, lr}
 8008ffe:	b086      	sub	sp, #24
 8009000:	af00      	add	r7, sp, #0
 8009002:	6078      	str	r0, [r7, #4]
 8009004:	6039      	str	r1, [r7, #0]
 8009006:	687b      	ldr	r3, [r7, #4]
 8009008:	2b00      	cmp	r3, #0
 800900a:	d101      	bne.n	8009010 <HAL_RCC_ClockConfig+0x14>
 800900c:	2301      	movs	r3, #1
 800900e:	e19c      	b.n	800934a <HAL_RCC_ClockConfig+0x34e>
 8009010:	4b8a      	ldr	r3, [pc, #552]	; (800923c <HAL_RCC_ClockConfig+0x240>)
 8009012:	681b      	ldr	r3, [r3, #0]
 8009014:	f003 030f 	and.w	r3, r3, #15
 8009018:	683a      	ldr	r2, [r7, #0]
 800901a:	429a      	cmp	r2, r3
 800901c:	d910      	bls.n	8009040 <HAL_RCC_ClockConfig+0x44>
 800901e:	4b87      	ldr	r3, [pc, #540]	; (800923c <HAL_RCC_ClockConfig+0x240>)
 8009020:	681b      	ldr	r3, [r3, #0]
 8009022:	f023 020f 	bic.w	r2, r3, #15
 8009026:	4985      	ldr	r1, [pc, #532]	; (800923c <HAL_RCC_ClockConfig+0x240>)
 8009028:	683b      	ldr	r3, [r7, #0]
 800902a:	4313      	orrs	r3, r2
 800902c:	600b      	str	r3, [r1, #0]
 800902e:	4b83      	ldr	r3, [pc, #524]	; (800923c <HAL_RCC_ClockConfig+0x240>)
 8009030:	681b      	ldr	r3, [r3, #0]
 8009032:	f003 030f 	and.w	r3, r3, #15
 8009036:	683a      	ldr	r2, [r7, #0]
 8009038:	429a      	cmp	r2, r3
 800903a:	d001      	beq.n	8009040 <HAL_RCC_ClockConfig+0x44>
 800903c:	2301      	movs	r3, #1
 800903e:	e184      	b.n	800934a <HAL_RCC_ClockConfig+0x34e>
 8009040:	687b      	ldr	r3, [r7, #4]
 8009042:	681b      	ldr	r3, [r3, #0]
 8009044:	f003 0304 	and.w	r3, r3, #4
 8009048:	2b00      	cmp	r3, #0
 800904a:	d010      	beq.n	800906e <HAL_RCC_ClockConfig+0x72>
 800904c:	687b      	ldr	r3, [r7, #4]
 800904e:	691a      	ldr	r2, [r3, #16]
 8009050:	4b7b      	ldr	r3, [pc, #492]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 8009052:	699b      	ldr	r3, [r3, #24]
 8009054:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8009058:	429a      	cmp	r2, r3
 800905a:	d908      	bls.n	800906e <HAL_RCC_ClockConfig+0x72>
 800905c:	4b78      	ldr	r3, [pc, #480]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 800905e:	699b      	ldr	r3, [r3, #24]
 8009060:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8009064:	687b      	ldr	r3, [r7, #4]
 8009066:	691b      	ldr	r3, [r3, #16]
 8009068:	4975      	ldr	r1, [pc, #468]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 800906a:	4313      	orrs	r3, r2
 800906c:	618b      	str	r3, [r1, #24]
 800906e:	687b      	ldr	r3, [r7, #4]
 8009070:	681b      	ldr	r3, [r3, #0]
 8009072:	f003 0308 	and.w	r3, r3, #8
 8009076:	2b00      	cmp	r3, #0
 8009078:	d010      	beq.n	800909c <HAL_RCC_ClockConfig+0xa0>
 800907a:	687b      	ldr	r3, [r7, #4]
 800907c:	695a      	ldr	r2, [r3, #20]
 800907e:	4b70      	ldr	r3, [pc, #448]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 8009080:	69db      	ldr	r3, [r3, #28]
 8009082:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8009086:	429a      	cmp	r2, r3
 8009088:	d908      	bls.n	800909c <HAL_RCC_ClockConfig+0xa0>
 800908a:	4b6d      	ldr	r3, [pc, #436]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 800908c:	69db      	ldr	r3, [r3, #28]
 800908e:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8009092:	687b      	ldr	r3, [r7, #4]
 8009094:	695b      	ldr	r3, [r3, #20]
 8009096:	496a      	ldr	r1, [pc, #424]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 8009098:	4313      	orrs	r3, r2
 800909a:	61cb      	str	r3, [r1, #28]
 800909c:	687b      	ldr	r3, [r7, #4]
 800909e:	681b      	ldr	r3, [r3, #0]
 80090a0:	f003 0310 	and.w	r3, r3, #16
 80090a4:	2b00      	cmp	r3, #0
 80090a6:	d010      	beq.n	80090ca <HAL_RCC_ClockConfig+0xce>
 80090a8:	687b      	ldr	r3, [r7, #4]
 80090aa:	699a      	ldr	r2, [r3, #24]
 80090ac:	4b64      	ldr	r3, [pc, #400]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 80090ae:	69db      	ldr	r3, [r3, #28]
 80090b0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80090b4:	429a      	cmp	r2, r3
 80090b6:	d908      	bls.n	80090ca <HAL_RCC_ClockConfig+0xce>
 80090b8:	4b61      	ldr	r3, [pc, #388]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 80090ba:	69db      	ldr	r3, [r3, #28]
 80090bc:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80090c0:	687b      	ldr	r3, [r7, #4]
 80090c2:	699b      	ldr	r3, [r3, #24]
 80090c4:	495e      	ldr	r1, [pc, #376]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 80090c6:	4313      	orrs	r3, r2
 80090c8:	61cb      	str	r3, [r1, #28]
 80090ca:	687b      	ldr	r3, [r7, #4]
 80090cc:	681b      	ldr	r3, [r3, #0]
 80090ce:	f003 0320 	and.w	r3, r3, #32
 80090d2:	2b00      	cmp	r3, #0
 80090d4:	d010      	beq.n	80090f8 <HAL_RCC_ClockConfig+0xfc>
 80090d6:	687b      	ldr	r3, [r7, #4]
 80090d8:	69da      	ldr	r2, [r3, #28]
 80090da:	4b59      	ldr	r3, [pc, #356]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 80090dc:	6a1b      	ldr	r3, [r3, #32]
 80090de:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80090e2:	429a      	cmp	r2, r3
 80090e4:	d908      	bls.n	80090f8 <HAL_RCC_ClockConfig+0xfc>
 80090e6:	4b56      	ldr	r3, [pc, #344]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 80090e8:	6a1b      	ldr	r3, [r3, #32]
 80090ea:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80090ee:	687b      	ldr	r3, [r7, #4]
 80090f0:	69db      	ldr	r3, [r3, #28]
 80090f2:	4953      	ldr	r1, [pc, #332]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 80090f4:	4313      	orrs	r3, r2
 80090f6:	620b      	str	r3, [r1, #32]
 80090f8:	687b      	ldr	r3, [r7, #4]
 80090fa:	681b      	ldr	r3, [r3, #0]
 80090fc:	f003 0302 	and.w	r3, r3, #2
 8009100:	2b00      	cmp	r3, #0
 8009102:	d010      	beq.n	8009126 <HAL_RCC_ClockConfig+0x12a>
 8009104:	687b      	ldr	r3, [r7, #4]
 8009106:	68da      	ldr	r2, [r3, #12]
 8009108:	4b4d      	ldr	r3, [pc, #308]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 800910a:	699b      	ldr	r3, [r3, #24]
 800910c:	f003 030f 	and.w	r3, r3, #15
 8009110:	429a      	cmp	r2, r3
 8009112:	d908      	bls.n	8009126 <HAL_RCC_ClockConfig+0x12a>
 8009114:	4b4a      	ldr	r3, [pc, #296]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 8009116:	699b      	ldr	r3, [r3, #24]
 8009118:	f023 020f 	bic.w	r2, r3, #15
 800911c:	687b      	ldr	r3, [r7, #4]
 800911e:	68db      	ldr	r3, [r3, #12]
 8009120:	4947      	ldr	r1, [pc, #284]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 8009122:	4313      	orrs	r3, r2
 8009124:	618b      	str	r3, [r1, #24]
 8009126:	687b      	ldr	r3, [r7, #4]
 8009128:	681b      	ldr	r3, [r3, #0]
 800912a:	f003 0301 	and.w	r3, r3, #1
 800912e:	2b00      	cmp	r3, #0
 8009130:	d055      	beq.n	80091de <HAL_RCC_ClockConfig+0x1e2>
 8009132:	4b43      	ldr	r3, [pc, #268]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 8009134:	699b      	ldr	r3, [r3, #24]
 8009136:	f423 6270 	bic.w	r2, r3, #3840	; 0xf00
 800913a:	687b      	ldr	r3, [r7, #4]
 800913c:	689b      	ldr	r3, [r3, #8]
 800913e:	4940      	ldr	r1, [pc, #256]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 8009140:	4313      	orrs	r3, r2
 8009142:	618b      	str	r3, [r1, #24]
 8009144:	687b      	ldr	r3, [r7, #4]
 8009146:	685b      	ldr	r3, [r3, #4]
 8009148:	2b02      	cmp	r3, #2
 800914a:	d107      	bne.n	800915c <HAL_RCC_ClockConfig+0x160>
 800914c:	4b3c      	ldr	r3, [pc, #240]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 800914e:	681b      	ldr	r3, [r3, #0]
 8009150:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009154:	2b00      	cmp	r3, #0
 8009156:	d121      	bne.n	800919c <HAL_RCC_ClockConfig+0x1a0>
 8009158:	2301      	movs	r3, #1
 800915a:	e0f6      	b.n	800934a <HAL_RCC_ClockConfig+0x34e>
 800915c:	687b      	ldr	r3, [r7, #4]
 800915e:	685b      	ldr	r3, [r3, #4]
 8009160:	2b03      	cmp	r3, #3
 8009162:	d107      	bne.n	8009174 <HAL_RCC_ClockConfig+0x178>
 8009164:	4b36      	ldr	r3, [pc, #216]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 8009166:	681b      	ldr	r3, [r3, #0]
 8009168:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800916c:	2b00      	cmp	r3, #0
 800916e:	d115      	bne.n	800919c <HAL_RCC_ClockConfig+0x1a0>
 8009170:	2301      	movs	r3, #1
 8009172:	e0ea      	b.n	800934a <HAL_RCC_ClockConfig+0x34e>
 8009174:	687b      	ldr	r3, [r7, #4]
 8009176:	685b      	ldr	r3, [r3, #4]
 8009178:	2b01      	cmp	r3, #1
 800917a:	d107      	bne.n	800918c <HAL_RCC_ClockConfig+0x190>
 800917c:	4b30      	ldr	r3, [pc, #192]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 800917e:	681b      	ldr	r3, [r3, #0]
 8009180:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009184:	2b00      	cmp	r3, #0
 8009186:	d109      	bne.n	800919c <HAL_RCC_ClockConfig+0x1a0>
 8009188:	2301      	movs	r3, #1
 800918a:	e0de      	b.n	800934a <HAL_RCC_ClockConfig+0x34e>
 800918c:	4b2c      	ldr	r3, [pc, #176]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 800918e:	681b      	ldr	r3, [r3, #0]
 8009190:	f003 0304 	and.w	r3, r3, #4
 8009194:	2b00      	cmp	r3, #0
 8009196:	d101      	bne.n	800919c <HAL_RCC_ClockConfig+0x1a0>
 8009198:	2301      	movs	r3, #1
 800919a:	e0d6      	b.n	800934a <HAL_RCC_ClockConfig+0x34e>
 800919c:	4b28      	ldr	r3, [pc, #160]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 800919e:	691b      	ldr	r3, [r3, #16]
 80091a0:	f023 0207 	bic.w	r2, r3, #7
 80091a4:	687b      	ldr	r3, [r7, #4]
 80091a6:	685b      	ldr	r3, [r3, #4]
 80091a8:	4925      	ldr	r1, [pc, #148]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 80091aa:	4313      	orrs	r3, r2
 80091ac:	610b      	str	r3, [r1, #16]
 80091ae:	f7fe f9df 	bl	8007570 <HAL_GetTick>
 80091b2:	6178      	str	r0, [r7, #20]
 80091b4:	e00a      	b.n	80091cc <HAL_RCC_ClockConfig+0x1d0>
 80091b6:	f7fe f9db 	bl	8007570 <HAL_GetTick>
 80091ba:	4602      	mov	r2, r0
 80091bc:	697b      	ldr	r3, [r7, #20]
 80091be:	1ad3      	subs	r3, r2, r3
 80091c0:	f241 3288 	movw	r2, #5000	; 0x1388
 80091c4:	4293      	cmp	r3, r2
 80091c6:	d901      	bls.n	80091cc <HAL_RCC_ClockConfig+0x1d0>
 80091c8:	2303      	movs	r3, #3
 80091ca:	e0be      	b.n	800934a <HAL_RCC_ClockConfig+0x34e>
 80091cc:	4b1c      	ldr	r3, [pc, #112]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 80091ce:	691b      	ldr	r3, [r3, #16]
 80091d0:	f003 0238 	and.w	r2, r3, #56	; 0x38
 80091d4:	687b      	ldr	r3, [r7, #4]
 80091d6:	685b      	ldr	r3, [r3, #4]
 80091d8:	00db      	lsls	r3, r3, #3
 80091da:	429a      	cmp	r2, r3
 80091dc:	d1eb      	bne.n	80091b6 <HAL_RCC_ClockConfig+0x1ba>
 80091de:	687b      	ldr	r3, [r7, #4]
 80091e0:	681b      	ldr	r3, [r3, #0]
 80091e2:	f003 0302 	and.w	r3, r3, #2
 80091e6:	2b00      	cmp	r3, #0
 80091e8:	d010      	beq.n	800920c <HAL_RCC_ClockConfig+0x210>
 80091ea:	687b      	ldr	r3, [r7, #4]
 80091ec:	68da      	ldr	r2, [r3, #12]
 80091ee:	4b14      	ldr	r3, [pc, #80]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 80091f0:	699b      	ldr	r3, [r3, #24]
 80091f2:	f003 030f 	and.w	r3, r3, #15
 80091f6:	429a      	cmp	r2, r3
 80091f8:	d208      	bcs.n	800920c <HAL_RCC_ClockConfig+0x210>
 80091fa:	4b11      	ldr	r3, [pc, #68]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 80091fc:	699b      	ldr	r3, [r3, #24]
 80091fe:	f023 020f 	bic.w	r2, r3, #15
 8009202:	687b      	ldr	r3, [r7, #4]
 8009204:	68db      	ldr	r3, [r3, #12]
 8009206:	490e      	ldr	r1, [pc, #56]	; (8009240 <HAL_RCC_ClockConfig+0x244>)
 8009208:	4313      	orrs	r3, r2
 800920a:	618b      	str	r3, [r1, #24]
 800920c:	4b0b      	ldr	r3, [pc, #44]	; (800923c <HAL_RCC_ClockConfig+0x240>)
 800920e:	681b      	ldr	r3, [r3, #0]
 8009210:	f003 030f 	and.w	r3, r3, #15
 8009214:	683a      	ldr	r2, [r7, #0]
 8009216:	429a      	cmp	r2, r3
 8009218:	d214      	bcs.n	8009244 <HAL_RCC_ClockConfig+0x248>
 800921a:	4b08      	ldr	r3, [pc, #32]	; (800923c <HAL_RCC_ClockConfig+0x240>)
 800921c:	681b      	ldr	r3, [r3, #0]
 800921e:	f023 020f 	bic.w	r2, r3, #15
 8009222:	4906      	ldr	r1, [pc, #24]	; (800923c <HAL_RCC_ClockConfig+0x240>)
 8009224:	683b      	ldr	r3, [r7, #0]
 8009226:	4313      	orrs	r3, r2
 8009228:	600b      	str	r3, [r1, #0]
 800922a:	4b04      	ldr	r3, [pc, #16]	; (800923c <HAL_RCC_ClockConfig+0x240>)
 800922c:	681b      	ldr	r3, [r3, #0]
 800922e:	f003 030f 	and.w	r3, r3, #15
 8009232:	683a      	ldr	r2, [r7, #0]
 8009234:	429a      	cmp	r2, r3
 8009236:	d005      	beq.n	8009244 <HAL_RCC_ClockConfig+0x248>
 8009238:	2301      	movs	r3, #1
 800923a:	e086      	b.n	800934a <HAL_RCC_ClockConfig+0x34e>
 800923c:	52002000 	.word	0x52002000
 8009240:	58024400 	.word	0x58024400
 8009244:	687b      	ldr	r3, [r7, #4]
 8009246:	681b      	ldr	r3, [r3, #0]
 8009248:	f003 0304 	and.w	r3, r3, #4
 800924c:	2b00      	cmp	r3, #0
 800924e:	d010      	beq.n	8009272 <HAL_RCC_ClockConfig+0x276>
 8009250:	687b      	ldr	r3, [r7, #4]
 8009252:	691a      	ldr	r2, [r3, #16]
 8009254:	4b3f      	ldr	r3, [pc, #252]	; (8009354 <HAL_RCC_ClockConfig+0x358>)
 8009256:	699b      	ldr	r3, [r3, #24]
 8009258:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800925c:	429a      	cmp	r2, r3
 800925e:	d208      	bcs.n	8009272 <HAL_RCC_ClockConfig+0x276>
 8009260:	4b3c      	ldr	r3, [pc, #240]	; (8009354 <HAL_RCC_ClockConfig+0x358>)
 8009262:	699b      	ldr	r3, [r3, #24]
 8009264:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8009268:	687b      	ldr	r3, [r7, #4]
 800926a:	691b      	ldr	r3, [r3, #16]
 800926c:	4939      	ldr	r1, [pc, #228]	; (8009354 <HAL_RCC_ClockConfig+0x358>)
 800926e:	4313      	orrs	r3, r2
 8009270:	618b      	str	r3, [r1, #24]
 8009272:	687b      	ldr	r3, [r7, #4]
 8009274:	681b      	ldr	r3, [r3, #0]
 8009276:	f003 0308 	and.w	r3, r3, #8
 800927a:	2b00      	cmp	r3, #0
 800927c:	d010      	beq.n	80092a0 <HAL_RCC_ClockConfig+0x2a4>
 800927e:	687b      	ldr	r3, [r7, #4]
 8009280:	695a      	ldr	r2, [r3, #20]
 8009282:	4b34      	ldr	r3, [pc, #208]	; (8009354 <HAL_RCC_ClockConfig+0x358>)
 8009284:	69db      	ldr	r3, [r3, #28]
 8009286:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800928a:	429a      	cmp	r2, r3
 800928c:	d208      	bcs.n	80092a0 <HAL_RCC_ClockConfig+0x2a4>
 800928e:	4b31      	ldr	r3, [pc, #196]	; (8009354 <HAL_RCC_ClockConfig+0x358>)
 8009290:	69db      	ldr	r3, [r3, #28]
 8009292:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8009296:	687b      	ldr	r3, [r7, #4]
 8009298:	695b      	ldr	r3, [r3, #20]
 800929a:	492e      	ldr	r1, [pc, #184]	; (8009354 <HAL_RCC_ClockConfig+0x358>)
 800929c:	4313      	orrs	r3, r2
 800929e:	61cb      	str	r3, [r1, #28]
 80092a0:	687b      	ldr	r3, [r7, #4]
 80092a2:	681b      	ldr	r3, [r3, #0]
 80092a4:	f003 0310 	and.w	r3, r3, #16
 80092a8:	2b00      	cmp	r3, #0
 80092aa:	d010      	beq.n	80092ce <HAL_RCC_ClockConfig+0x2d2>
 80092ac:	687b      	ldr	r3, [r7, #4]
 80092ae:	699a      	ldr	r2, [r3, #24]
 80092b0:	4b28      	ldr	r3, [pc, #160]	; (8009354 <HAL_RCC_ClockConfig+0x358>)
 80092b2:	69db      	ldr	r3, [r3, #28]
 80092b4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80092b8:	429a      	cmp	r2, r3
 80092ba:	d208      	bcs.n	80092ce <HAL_RCC_ClockConfig+0x2d2>
 80092bc:	4b25      	ldr	r3, [pc, #148]	; (8009354 <HAL_RCC_ClockConfig+0x358>)
 80092be:	69db      	ldr	r3, [r3, #28]
 80092c0:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80092c4:	687b      	ldr	r3, [r7, #4]
 80092c6:	699b      	ldr	r3, [r3, #24]
 80092c8:	4922      	ldr	r1, [pc, #136]	; (8009354 <HAL_RCC_ClockConfig+0x358>)
 80092ca:	4313      	orrs	r3, r2
 80092cc:	61cb      	str	r3, [r1, #28]
 80092ce:	687b      	ldr	r3, [r7, #4]
 80092d0:	681b      	ldr	r3, [r3, #0]
 80092d2:	f003 0320 	and.w	r3, r3, #32
 80092d6:	2b00      	cmp	r3, #0
 80092d8:	d010      	beq.n	80092fc <HAL_RCC_ClockConfig+0x300>
 80092da:	687b      	ldr	r3, [r7, #4]
 80092dc:	69da      	ldr	r2, [r3, #28]
 80092de:	4b1d      	ldr	r3, [pc, #116]	; (8009354 <HAL_RCC_ClockConfig+0x358>)
 80092e0:	6a1b      	ldr	r3, [r3, #32]
 80092e2:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80092e6:	429a      	cmp	r2, r3
 80092e8:	d208      	bcs.n	80092fc <HAL_RCC_ClockConfig+0x300>
 80092ea:	4b1a      	ldr	r3, [pc, #104]	; (8009354 <HAL_RCC_ClockConfig+0x358>)
 80092ec:	6a1b      	ldr	r3, [r3, #32]
 80092ee:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80092f2:	687b      	ldr	r3, [r7, #4]
 80092f4:	69db      	ldr	r3, [r3, #28]
 80092f6:	4917      	ldr	r1, [pc, #92]	; (8009354 <HAL_RCC_ClockConfig+0x358>)
 80092f8:	4313      	orrs	r3, r2
 80092fa:	620b      	str	r3, [r1, #32]
 80092fc:	f000 f834 	bl	8009368 <HAL_RCC_GetSysClockFreq>
 8009300:	4602      	mov	r2, r0
 8009302:	4b14      	ldr	r3, [pc, #80]	; (8009354 <HAL_RCC_ClockConfig+0x358>)
 8009304:	699b      	ldr	r3, [r3, #24]
 8009306:	0a1b      	lsrs	r3, r3, #8
 8009308:	f003 030f 	and.w	r3, r3, #15
 800930c:	4912      	ldr	r1, [pc, #72]	; (8009358 <HAL_RCC_ClockConfig+0x35c>)
 800930e:	5ccb      	ldrb	r3, [r1, r3]
 8009310:	f003 031f 	and.w	r3, r3, #31
 8009314:	fa22 f303 	lsr.w	r3, r2, r3
 8009318:	613b      	str	r3, [r7, #16]
 800931a:	4b0e      	ldr	r3, [pc, #56]	; (8009354 <HAL_RCC_ClockConfig+0x358>)
 800931c:	699b      	ldr	r3, [r3, #24]
 800931e:	f003 030f 	and.w	r3, r3, #15
 8009322:	4a0d      	ldr	r2, [pc, #52]	; (8009358 <HAL_RCC_ClockConfig+0x35c>)
 8009324:	5cd3      	ldrb	r3, [r2, r3]
 8009326:	f003 031f 	and.w	r3, r3, #31
 800932a:	693a      	ldr	r2, [r7, #16]
 800932c:	fa22 f303 	lsr.w	r3, r2, r3
 8009330:	4a0a      	ldr	r2, [pc, #40]	; (800935c <HAL_RCC_ClockConfig+0x360>)
 8009332:	6013      	str	r3, [r2, #0]
 8009334:	4a0a      	ldr	r2, [pc, #40]	; (8009360 <HAL_RCC_ClockConfig+0x364>)
 8009336:	693b      	ldr	r3, [r7, #16]
 8009338:	6013      	str	r3, [r2, #0]
 800933a:	4b0a      	ldr	r3, [pc, #40]	; (8009364 <HAL_RCC_ClockConfig+0x368>)
 800933c:	681b      	ldr	r3, [r3, #0]
 800933e:	4618      	mov	r0, r3
 8009340:	f7fe f8cc 	bl	80074dc <HAL_InitTick>
 8009344:	4603      	mov	r3, r0
 8009346:	73fb      	strb	r3, [r7, #15]
 8009348:	7bfb      	ldrb	r3, [r7, #15]
 800934a:	4618      	mov	r0, r3
 800934c:	3718      	adds	r7, #24
 800934e:	46bd      	mov	sp, r7
 8009350:	bd80      	pop	{r7, pc}
 8009352:	bf00      	nop
 8009354:	58024400 	.word	0x58024400
 8009358:	08012be0 	.word	0x08012be0
 800935c:	240000b4 	.word	0x240000b4
 8009360:	240000b0 	.word	0x240000b0
 8009364:	240000b8 	.word	0x240000b8

08009368 <HAL_RCC_GetSysClockFreq>:
 8009368:	b480      	push	{r7}
 800936a:	b089      	sub	sp, #36	; 0x24
 800936c:	af00      	add	r7, sp, #0
 800936e:	4bb3      	ldr	r3, [pc, #716]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8009370:	691b      	ldr	r3, [r3, #16]
 8009372:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8009376:	2b18      	cmp	r3, #24
 8009378:	f200 8155 	bhi.w	8009626 <HAL_RCC_GetSysClockFreq+0x2be>
 800937c:	a201      	add	r2, pc, #4	; (adr r2, 8009384 <HAL_RCC_GetSysClockFreq+0x1c>)
 800937e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009382:	bf00      	nop
 8009384:	080093e9 	.word	0x080093e9
 8009388:	08009627 	.word	0x08009627
 800938c:	08009627 	.word	0x08009627
 8009390:	08009627 	.word	0x08009627
 8009394:	08009627 	.word	0x08009627
 8009398:	08009627 	.word	0x08009627
 800939c:	08009627 	.word	0x08009627
 80093a0:	08009627 	.word	0x08009627
 80093a4:	0800940f 	.word	0x0800940f
 80093a8:	08009627 	.word	0x08009627
 80093ac:	08009627 	.word	0x08009627
 80093b0:	08009627 	.word	0x08009627
 80093b4:	08009627 	.word	0x08009627
 80093b8:	08009627 	.word	0x08009627
 80093bc:	08009627 	.word	0x08009627
 80093c0:	08009627 	.word	0x08009627
 80093c4:	08009415 	.word	0x08009415
 80093c8:	08009627 	.word	0x08009627
 80093cc:	08009627 	.word	0x08009627
 80093d0:	08009627 	.word	0x08009627
 80093d4:	08009627 	.word	0x08009627
 80093d8:	08009627 	.word	0x08009627
 80093dc:	08009627 	.word	0x08009627
 80093e0:	08009627 	.word	0x08009627
 80093e4:	0800941b 	.word	0x0800941b
 80093e8:	4b94      	ldr	r3, [pc, #592]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 80093ea:	681b      	ldr	r3, [r3, #0]
 80093ec:	f003 0320 	and.w	r3, r3, #32
 80093f0:	2b00      	cmp	r3, #0
 80093f2:	d009      	beq.n	8009408 <HAL_RCC_GetSysClockFreq+0xa0>
 80093f4:	4b91      	ldr	r3, [pc, #580]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 80093f6:	681b      	ldr	r3, [r3, #0]
 80093f8:	08db      	lsrs	r3, r3, #3
 80093fa:	f003 0303 	and.w	r3, r3, #3
 80093fe:	4a90      	ldr	r2, [pc, #576]	; (8009640 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8009400:	fa22 f303 	lsr.w	r3, r2, r3
 8009404:	61bb      	str	r3, [r7, #24]
 8009406:	e111      	b.n	800962c <HAL_RCC_GetSysClockFreq+0x2c4>
 8009408:	4b8d      	ldr	r3, [pc, #564]	; (8009640 <HAL_RCC_GetSysClockFreq+0x2d8>)
 800940a:	61bb      	str	r3, [r7, #24]
 800940c:	e10e      	b.n	800962c <HAL_RCC_GetSysClockFreq+0x2c4>
 800940e:	4b8d      	ldr	r3, [pc, #564]	; (8009644 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8009410:	61bb      	str	r3, [r7, #24]
 8009412:	e10b      	b.n	800962c <HAL_RCC_GetSysClockFreq+0x2c4>
 8009414:	4b8c      	ldr	r3, [pc, #560]	; (8009648 <HAL_RCC_GetSysClockFreq+0x2e0>)
 8009416:	61bb      	str	r3, [r7, #24]
 8009418:	e108      	b.n	800962c <HAL_RCC_GetSysClockFreq+0x2c4>
 800941a:	4b88      	ldr	r3, [pc, #544]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 800941c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800941e:	f003 0303 	and.w	r3, r3, #3
 8009422:	617b      	str	r3, [r7, #20]
 8009424:	4b85      	ldr	r3, [pc, #532]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8009426:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009428:	091b      	lsrs	r3, r3, #4
 800942a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800942e:	613b      	str	r3, [r7, #16]
 8009430:	4b82      	ldr	r3, [pc, #520]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8009432:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009434:	f003 0301 	and.w	r3, r3, #1
 8009438:	60fb      	str	r3, [r7, #12]
 800943a:	4b80      	ldr	r3, [pc, #512]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 800943c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800943e:	08db      	lsrs	r3, r3, #3
 8009440:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8009444:	68fa      	ldr	r2, [r7, #12]
 8009446:	fb02 f303 	mul.w	r3, r2, r3
 800944a:	ee07 3a90 	vmov	s15, r3
 800944e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009452:	edc7 7a02 	vstr	s15, [r7, #8]
 8009456:	693b      	ldr	r3, [r7, #16]
 8009458:	2b00      	cmp	r3, #0
 800945a:	f000 80e1 	beq.w	8009620 <HAL_RCC_GetSysClockFreq+0x2b8>
 800945e:	697b      	ldr	r3, [r7, #20]
 8009460:	2b02      	cmp	r3, #2
 8009462:	f000 8083 	beq.w	800956c <HAL_RCC_GetSysClockFreq+0x204>
 8009466:	697b      	ldr	r3, [r7, #20]
 8009468:	2b02      	cmp	r3, #2
 800946a:	f200 80a1 	bhi.w	80095b0 <HAL_RCC_GetSysClockFreq+0x248>
 800946e:	697b      	ldr	r3, [r7, #20]
 8009470:	2b00      	cmp	r3, #0
 8009472:	d003      	beq.n	800947c <HAL_RCC_GetSysClockFreq+0x114>
 8009474:	697b      	ldr	r3, [r7, #20]
 8009476:	2b01      	cmp	r3, #1
 8009478:	d056      	beq.n	8009528 <HAL_RCC_GetSysClockFreq+0x1c0>
 800947a:	e099      	b.n	80095b0 <HAL_RCC_GetSysClockFreq+0x248>
 800947c:	4b6f      	ldr	r3, [pc, #444]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 800947e:	681b      	ldr	r3, [r3, #0]
 8009480:	f003 0320 	and.w	r3, r3, #32
 8009484:	2b00      	cmp	r3, #0
 8009486:	d02d      	beq.n	80094e4 <HAL_RCC_GetSysClockFreq+0x17c>
 8009488:	4b6c      	ldr	r3, [pc, #432]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 800948a:	681b      	ldr	r3, [r3, #0]
 800948c:	08db      	lsrs	r3, r3, #3
 800948e:	f003 0303 	and.w	r3, r3, #3
 8009492:	4a6b      	ldr	r2, [pc, #428]	; (8009640 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8009494:	fa22 f303 	lsr.w	r3, r2, r3
 8009498:	607b      	str	r3, [r7, #4]
 800949a:	687b      	ldr	r3, [r7, #4]
 800949c:	ee07 3a90 	vmov	s15, r3
 80094a0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80094a4:	693b      	ldr	r3, [r7, #16]
 80094a6:	ee07 3a90 	vmov	s15, r3
 80094aa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80094ae:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80094b2:	4b62      	ldr	r3, [pc, #392]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 80094b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80094b6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80094ba:	ee07 3a90 	vmov	s15, r3
 80094be:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80094c2:	ed97 6a02 	vldr	s12, [r7, #8]
 80094c6:	eddf 5a61 	vldr	s11, [pc, #388]	; 800964c <HAL_RCC_GetSysClockFreq+0x2e4>
 80094ca:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80094ce:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80094d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80094d6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80094da:	ee67 7a27 	vmul.f32	s15, s14, s15
 80094de:	edc7 7a07 	vstr	s15, [r7, #28]
 80094e2:	e087      	b.n	80095f4 <HAL_RCC_GetSysClockFreq+0x28c>
 80094e4:	693b      	ldr	r3, [r7, #16]
 80094e6:	ee07 3a90 	vmov	s15, r3
 80094ea:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80094ee:	eddf 6a58 	vldr	s13, [pc, #352]	; 8009650 <HAL_RCC_GetSysClockFreq+0x2e8>
 80094f2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80094f6:	4b51      	ldr	r3, [pc, #324]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 80094f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80094fa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80094fe:	ee07 3a90 	vmov	s15, r3
 8009502:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009506:	ed97 6a02 	vldr	s12, [r7, #8]
 800950a:	eddf 5a50 	vldr	s11, [pc, #320]	; 800964c <HAL_RCC_GetSysClockFreq+0x2e4>
 800950e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009512:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009516:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800951a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800951e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009522:	edc7 7a07 	vstr	s15, [r7, #28]
 8009526:	e065      	b.n	80095f4 <HAL_RCC_GetSysClockFreq+0x28c>
 8009528:	693b      	ldr	r3, [r7, #16]
 800952a:	ee07 3a90 	vmov	s15, r3
 800952e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009532:	eddf 6a48 	vldr	s13, [pc, #288]	; 8009654 <HAL_RCC_GetSysClockFreq+0x2ec>
 8009536:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800953a:	4b40      	ldr	r3, [pc, #256]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 800953c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800953e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009542:	ee07 3a90 	vmov	s15, r3
 8009546:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800954a:	ed97 6a02 	vldr	s12, [r7, #8]
 800954e:	eddf 5a3f 	vldr	s11, [pc, #252]	; 800964c <HAL_RCC_GetSysClockFreq+0x2e4>
 8009552:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009556:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800955a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800955e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009562:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009566:	edc7 7a07 	vstr	s15, [r7, #28]
 800956a:	e043      	b.n	80095f4 <HAL_RCC_GetSysClockFreq+0x28c>
 800956c:	693b      	ldr	r3, [r7, #16]
 800956e:	ee07 3a90 	vmov	s15, r3
 8009572:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009576:	eddf 6a38 	vldr	s13, [pc, #224]	; 8009658 <HAL_RCC_GetSysClockFreq+0x2f0>
 800957a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800957e:	4b2f      	ldr	r3, [pc, #188]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8009580:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009582:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009586:	ee07 3a90 	vmov	s15, r3
 800958a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800958e:	ed97 6a02 	vldr	s12, [r7, #8]
 8009592:	eddf 5a2e 	vldr	s11, [pc, #184]	; 800964c <HAL_RCC_GetSysClockFreq+0x2e4>
 8009596:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800959a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800959e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80095a2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80095a6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80095aa:	edc7 7a07 	vstr	s15, [r7, #28]
 80095ae:	e021      	b.n	80095f4 <HAL_RCC_GetSysClockFreq+0x28c>
 80095b0:	693b      	ldr	r3, [r7, #16]
 80095b2:	ee07 3a90 	vmov	s15, r3
 80095b6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80095ba:	eddf 6a26 	vldr	s13, [pc, #152]	; 8009654 <HAL_RCC_GetSysClockFreq+0x2ec>
 80095be:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80095c2:	4b1e      	ldr	r3, [pc, #120]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 80095c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80095c6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80095ca:	ee07 3a90 	vmov	s15, r3
 80095ce:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80095d2:	ed97 6a02 	vldr	s12, [r7, #8]
 80095d6:	eddf 5a1d 	vldr	s11, [pc, #116]	; 800964c <HAL_RCC_GetSysClockFreq+0x2e4>
 80095da:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80095de:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80095e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80095e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80095ea:	ee67 7a27 	vmul.f32	s15, s14, s15
 80095ee:	edc7 7a07 	vstr	s15, [r7, #28]
 80095f2:	bf00      	nop
 80095f4:	4b11      	ldr	r3, [pc, #68]	; (800963c <HAL_RCC_GetSysClockFreq+0x2d4>)
 80095f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80095f8:	0a5b      	lsrs	r3, r3, #9
 80095fa:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80095fe:	3301      	adds	r3, #1
 8009600:	603b      	str	r3, [r7, #0]
 8009602:	683b      	ldr	r3, [r7, #0]
 8009604:	ee07 3a90 	vmov	s15, r3
 8009608:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800960c:	edd7 6a07 	vldr	s13, [r7, #28]
 8009610:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009614:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009618:	ee17 3a90 	vmov	r3, s15
 800961c:	61bb      	str	r3, [r7, #24]
 800961e:	e005      	b.n	800962c <HAL_RCC_GetSysClockFreq+0x2c4>
 8009620:	2300      	movs	r3, #0
 8009622:	61bb      	str	r3, [r7, #24]
 8009624:	e002      	b.n	800962c <HAL_RCC_GetSysClockFreq+0x2c4>
 8009626:	4b07      	ldr	r3, [pc, #28]	; (8009644 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8009628:	61bb      	str	r3, [r7, #24]
 800962a:	bf00      	nop
 800962c:	69bb      	ldr	r3, [r7, #24]
 800962e:	4618      	mov	r0, r3
 8009630:	3724      	adds	r7, #36	; 0x24
 8009632:	46bd      	mov	sp, r7
 8009634:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009638:	4770      	bx	lr
 800963a:	bf00      	nop
 800963c:	58024400 	.word	0x58024400
 8009640:	03d09000 	.word	0x03d09000
 8009644:	003d0900 	.word	0x003d0900
 8009648:	017d7840 	.word	0x017d7840
 800964c:	46000000 	.word	0x46000000
 8009650:	4c742400 	.word	0x4c742400
 8009654:	4a742400 	.word	0x4a742400
 8009658:	4bbebc20 	.word	0x4bbebc20

0800965c <HAL_RCC_GetHCLKFreq>:
 800965c:	b580      	push	{r7, lr}
 800965e:	b082      	sub	sp, #8
 8009660:	af00      	add	r7, sp, #0
 8009662:	f7ff fe81 	bl	8009368 <HAL_RCC_GetSysClockFreq>
 8009666:	4602      	mov	r2, r0
 8009668:	4b10      	ldr	r3, [pc, #64]	; (80096ac <HAL_RCC_GetHCLKFreq+0x50>)
 800966a:	699b      	ldr	r3, [r3, #24]
 800966c:	0a1b      	lsrs	r3, r3, #8
 800966e:	f003 030f 	and.w	r3, r3, #15
 8009672:	490f      	ldr	r1, [pc, #60]	; (80096b0 <HAL_RCC_GetHCLKFreq+0x54>)
 8009674:	5ccb      	ldrb	r3, [r1, r3]
 8009676:	f003 031f 	and.w	r3, r3, #31
 800967a:	fa22 f303 	lsr.w	r3, r2, r3
 800967e:	607b      	str	r3, [r7, #4]
 8009680:	4b0a      	ldr	r3, [pc, #40]	; (80096ac <HAL_RCC_GetHCLKFreq+0x50>)
 8009682:	699b      	ldr	r3, [r3, #24]
 8009684:	f003 030f 	and.w	r3, r3, #15
 8009688:	4a09      	ldr	r2, [pc, #36]	; (80096b0 <HAL_RCC_GetHCLKFreq+0x54>)
 800968a:	5cd3      	ldrb	r3, [r2, r3]
 800968c:	f003 031f 	and.w	r3, r3, #31
 8009690:	687a      	ldr	r2, [r7, #4]
 8009692:	fa22 f303 	lsr.w	r3, r2, r3
 8009696:	4a07      	ldr	r2, [pc, #28]	; (80096b4 <HAL_RCC_GetHCLKFreq+0x58>)
 8009698:	6013      	str	r3, [r2, #0]
 800969a:	4a07      	ldr	r2, [pc, #28]	; (80096b8 <HAL_RCC_GetHCLKFreq+0x5c>)
 800969c:	687b      	ldr	r3, [r7, #4]
 800969e:	6013      	str	r3, [r2, #0]
 80096a0:	4b04      	ldr	r3, [pc, #16]	; (80096b4 <HAL_RCC_GetHCLKFreq+0x58>)
 80096a2:	681b      	ldr	r3, [r3, #0]
 80096a4:	4618      	mov	r0, r3
 80096a6:	3708      	adds	r7, #8
 80096a8:	46bd      	mov	sp, r7
 80096aa:	bd80      	pop	{r7, pc}
 80096ac:	58024400 	.word	0x58024400
 80096b0:	08012be0 	.word	0x08012be0
 80096b4:	240000b4 	.word	0x240000b4
 80096b8:	240000b0 	.word	0x240000b0

080096bc <HAL_RCC_GetPCLK1Freq>:
 80096bc:	b580      	push	{r7, lr}
 80096be:	af00      	add	r7, sp, #0
 80096c0:	f7ff ffcc 	bl	800965c <HAL_RCC_GetHCLKFreq>
 80096c4:	4602      	mov	r2, r0
 80096c6:	4b06      	ldr	r3, [pc, #24]	; (80096e0 <HAL_RCC_GetPCLK1Freq+0x24>)
 80096c8:	69db      	ldr	r3, [r3, #28]
 80096ca:	091b      	lsrs	r3, r3, #4
 80096cc:	f003 0307 	and.w	r3, r3, #7
 80096d0:	4904      	ldr	r1, [pc, #16]	; (80096e4 <HAL_RCC_GetPCLK1Freq+0x28>)
 80096d2:	5ccb      	ldrb	r3, [r1, r3]
 80096d4:	f003 031f 	and.w	r3, r3, #31
 80096d8:	fa22 f303 	lsr.w	r3, r2, r3
 80096dc:	4618      	mov	r0, r3
 80096de:	bd80      	pop	{r7, pc}
 80096e0:	58024400 	.word	0x58024400
 80096e4:	08012be0 	.word	0x08012be0

080096e8 <HAL_RCC_GetPCLK2Freq>:
 80096e8:	b580      	push	{r7, lr}
 80096ea:	af00      	add	r7, sp, #0
 80096ec:	f7ff ffb6 	bl	800965c <HAL_RCC_GetHCLKFreq>
 80096f0:	4602      	mov	r2, r0
 80096f2:	4b06      	ldr	r3, [pc, #24]	; (800970c <HAL_RCC_GetPCLK2Freq+0x24>)
 80096f4:	69db      	ldr	r3, [r3, #28]
 80096f6:	0a1b      	lsrs	r3, r3, #8
 80096f8:	f003 0307 	and.w	r3, r3, #7
 80096fc:	4904      	ldr	r1, [pc, #16]	; (8009710 <HAL_RCC_GetPCLK2Freq+0x28>)
 80096fe:	5ccb      	ldrb	r3, [r1, r3]
 8009700:	f003 031f 	and.w	r3, r3, #31
 8009704:	fa22 f303 	lsr.w	r3, r2, r3
 8009708:	4618      	mov	r0, r3
 800970a:	bd80      	pop	{r7, pc}
 800970c:	58024400 	.word	0x58024400
 8009710:	08012be0 	.word	0x08012be0

08009714 <HAL_RCCEx_PeriphCLKConfig>:
 8009714:	b580      	push	{r7, lr}
 8009716:	b086      	sub	sp, #24
 8009718:	af00      	add	r7, sp, #0
 800971a:	6078      	str	r0, [r7, #4]
 800971c:	2300      	movs	r3, #0
 800971e:	75fb      	strb	r3, [r7, #23]
 8009720:	2300      	movs	r3, #0
 8009722:	75bb      	strb	r3, [r7, #22]
 8009724:	687b      	ldr	r3, [r7, #4]
 8009726:	681b      	ldr	r3, [r3, #0]
 8009728:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800972c:	2b00      	cmp	r3, #0
 800972e:	d03f      	beq.n	80097b0 <HAL_RCCEx_PeriphCLKConfig+0x9c>
 8009730:	687b      	ldr	r3, [r7, #4]
 8009732:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009734:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8009738:	d02a      	beq.n	8009790 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 800973a:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 800973e:	d824      	bhi.n	800978a <HAL_RCCEx_PeriphCLKConfig+0x76>
 8009740:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8009744:	d018      	beq.n	8009778 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8009746:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 800974a:	d81e      	bhi.n	800978a <HAL_RCCEx_PeriphCLKConfig+0x76>
 800974c:	2b00      	cmp	r3, #0
 800974e:	d003      	beq.n	8009758 <HAL_RCCEx_PeriphCLKConfig+0x44>
 8009750:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8009754:	d007      	beq.n	8009766 <HAL_RCCEx_PeriphCLKConfig+0x52>
 8009756:	e018      	b.n	800978a <HAL_RCCEx_PeriphCLKConfig+0x76>
 8009758:	4ba3      	ldr	r3, [pc, #652]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 800975a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800975c:	4aa2      	ldr	r2, [pc, #648]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 800975e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009762:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009764:	e015      	b.n	8009792 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8009766:	687b      	ldr	r3, [r7, #4]
 8009768:	3304      	adds	r3, #4
 800976a:	2102      	movs	r1, #2
 800976c:	4618      	mov	r0, r3
 800976e:	f001 f9d5 	bl	800ab1c <RCCEx_PLL2_Config>
 8009772:	4603      	mov	r3, r0
 8009774:	75fb      	strb	r3, [r7, #23]
 8009776:	e00c      	b.n	8009792 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8009778:	687b      	ldr	r3, [r7, #4]
 800977a:	3324      	adds	r3, #36	; 0x24
 800977c:	2102      	movs	r1, #2
 800977e:	4618      	mov	r0, r3
 8009780:	f001 fa7e 	bl	800ac80 <RCCEx_PLL3_Config>
 8009784:	4603      	mov	r3, r0
 8009786:	75fb      	strb	r3, [r7, #23]
 8009788:	e003      	b.n	8009792 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 800978a:	2301      	movs	r3, #1
 800978c:	75fb      	strb	r3, [r7, #23]
 800978e:	e000      	b.n	8009792 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8009790:	bf00      	nop
 8009792:	7dfb      	ldrb	r3, [r7, #23]
 8009794:	2b00      	cmp	r3, #0
 8009796:	d109      	bne.n	80097ac <HAL_RCCEx_PeriphCLKConfig+0x98>
 8009798:	4b93      	ldr	r3, [pc, #588]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 800979a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800979c:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 80097a0:	687b      	ldr	r3, [r7, #4]
 80097a2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80097a4:	4990      	ldr	r1, [pc, #576]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 80097a6:	4313      	orrs	r3, r2
 80097a8:	650b      	str	r3, [r1, #80]	; 0x50
 80097aa:	e001      	b.n	80097b0 <HAL_RCCEx_PeriphCLKConfig+0x9c>
 80097ac:	7dfb      	ldrb	r3, [r7, #23]
 80097ae:	75bb      	strb	r3, [r7, #22]
 80097b0:	687b      	ldr	r3, [r7, #4]
 80097b2:	681b      	ldr	r3, [r3, #0]
 80097b4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80097b8:	2b00      	cmp	r3, #0
 80097ba:	d03d      	beq.n	8009838 <HAL_RCCEx_PeriphCLKConfig+0x124>
 80097bc:	687b      	ldr	r3, [r7, #4]
 80097be:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80097c0:	2b04      	cmp	r3, #4
 80097c2:	d826      	bhi.n	8009812 <HAL_RCCEx_PeriphCLKConfig+0xfe>
 80097c4:	a201      	add	r2, pc, #4	; (adr r2, 80097cc <HAL_RCCEx_PeriphCLKConfig+0xb8>)
 80097c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80097ca:	bf00      	nop
 80097cc:	080097e1 	.word	0x080097e1
 80097d0:	080097ef 	.word	0x080097ef
 80097d4:	08009801 	.word	0x08009801
 80097d8:	08009819 	.word	0x08009819
 80097dc:	08009819 	.word	0x08009819
 80097e0:	4b81      	ldr	r3, [pc, #516]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 80097e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80097e4:	4a80      	ldr	r2, [pc, #512]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 80097e6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80097ea:	62d3      	str	r3, [r2, #44]	; 0x2c
 80097ec:	e015      	b.n	800981a <HAL_RCCEx_PeriphCLKConfig+0x106>
 80097ee:	687b      	ldr	r3, [r7, #4]
 80097f0:	3304      	adds	r3, #4
 80097f2:	2100      	movs	r1, #0
 80097f4:	4618      	mov	r0, r3
 80097f6:	f001 f991 	bl	800ab1c <RCCEx_PLL2_Config>
 80097fa:	4603      	mov	r3, r0
 80097fc:	75fb      	strb	r3, [r7, #23]
 80097fe:	e00c      	b.n	800981a <HAL_RCCEx_PeriphCLKConfig+0x106>
 8009800:	687b      	ldr	r3, [r7, #4]
 8009802:	3324      	adds	r3, #36	; 0x24
 8009804:	2100      	movs	r1, #0
 8009806:	4618      	mov	r0, r3
 8009808:	f001 fa3a 	bl	800ac80 <RCCEx_PLL3_Config>
 800980c:	4603      	mov	r3, r0
 800980e:	75fb      	strb	r3, [r7, #23]
 8009810:	e003      	b.n	800981a <HAL_RCCEx_PeriphCLKConfig+0x106>
 8009812:	2301      	movs	r3, #1
 8009814:	75fb      	strb	r3, [r7, #23]
 8009816:	e000      	b.n	800981a <HAL_RCCEx_PeriphCLKConfig+0x106>
 8009818:	bf00      	nop
 800981a:	7dfb      	ldrb	r3, [r7, #23]
 800981c:	2b00      	cmp	r3, #0
 800981e:	d109      	bne.n	8009834 <HAL_RCCEx_PeriphCLKConfig+0x120>
 8009820:	4b71      	ldr	r3, [pc, #452]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8009822:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009824:	f023 0207 	bic.w	r2, r3, #7
 8009828:	687b      	ldr	r3, [r7, #4]
 800982a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800982c:	496e      	ldr	r1, [pc, #440]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 800982e:	4313      	orrs	r3, r2
 8009830:	650b      	str	r3, [r1, #80]	; 0x50
 8009832:	e001      	b.n	8009838 <HAL_RCCEx_PeriphCLKConfig+0x124>
 8009834:	7dfb      	ldrb	r3, [r7, #23]
 8009836:	75bb      	strb	r3, [r7, #22]
 8009838:	687b      	ldr	r3, [r7, #4]
 800983a:	681b      	ldr	r3, [r3, #0]
 800983c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8009840:	2b00      	cmp	r3, #0
 8009842:	d042      	beq.n	80098ca <HAL_RCCEx_PeriphCLKConfig+0x1b6>
 8009844:	687b      	ldr	r3, [r7, #4]
 8009846:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009848:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800984c:	d02b      	beq.n	80098a6 <HAL_RCCEx_PeriphCLKConfig+0x192>
 800984e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009852:	d825      	bhi.n	80098a0 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 8009854:	2bc0      	cmp	r3, #192	; 0xc0
 8009856:	d028      	beq.n	80098aa <HAL_RCCEx_PeriphCLKConfig+0x196>
 8009858:	2bc0      	cmp	r3, #192	; 0xc0
 800985a:	d821      	bhi.n	80098a0 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 800985c:	2b80      	cmp	r3, #128	; 0x80
 800985e:	d016      	beq.n	800988e <HAL_RCCEx_PeriphCLKConfig+0x17a>
 8009860:	2b80      	cmp	r3, #128	; 0x80
 8009862:	d81d      	bhi.n	80098a0 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 8009864:	2b00      	cmp	r3, #0
 8009866:	d002      	beq.n	800986e <HAL_RCCEx_PeriphCLKConfig+0x15a>
 8009868:	2b40      	cmp	r3, #64	; 0x40
 800986a:	d007      	beq.n	800987c <HAL_RCCEx_PeriphCLKConfig+0x168>
 800986c:	e018      	b.n	80098a0 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 800986e:	4b5e      	ldr	r3, [pc, #376]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8009870:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009872:	4a5d      	ldr	r2, [pc, #372]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8009874:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009878:	62d3      	str	r3, [r2, #44]	; 0x2c
 800987a:	e017      	b.n	80098ac <HAL_RCCEx_PeriphCLKConfig+0x198>
 800987c:	687b      	ldr	r3, [r7, #4]
 800987e:	3304      	adds	r3, #4
 8009880:	2100      	movs	r1, #0
 8009882:	4618      	mov	r0, r3
 8009884:	f001 f94a 	bl	800ab1c <RCCEx_PLL2_Config>
 8009888:	4603      	mov	r3, r0
 800988a:	75fb      	strb	r3, [r7, #23]
 800988c:	e00e      	b.n	80098ac <HAL_RCCEx_PeriphCLKConfig+0x198>
 800988e:	687b      	ldr	r3, [r7, #4]
 8009890:	3324      	adds	r3, #36	; 0x24
 8009892:	2100      	movs	r1, #0
 8009894:	4618      	mov	r0, r3
 8009896:	f001 f9f3 	bl	800ac80 <RCCEx_PLL3_Config>
 800989a:	4603      	mov	r3, r0
 800989c:	75fb      	strb	r3, [r7, #23]
 800989e:	e005      	b.n	80098ac <HAL_RCCEx_PeriphCLKConfig+0x198>
 80098a0:	2301      	movs	r3, #1
 80098a2:	75fb      	strb	r3, [r7, #23]
 80098a4:	e002      	b.n	80098ac <HAL_RCCEx_PeriphCLKConfig+0x198>
 80098a6:	bf00      	nop
 80098a8:	e000      	b.n	80098ac <HAL_RCCEx_PeriphCLKConfig+0x198>
 80098aa:	bf00      	nop
 80098ac:	7dfb      	ldrb	r3, [r7, #23]
 80098ae:	2b00      	cmp	r3, #0
 80098b0:	d109      	bne.n	80098c6 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
 80098b2:	4b4d      	ldr	r3, [pc, #308]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 80098b4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80098b6:	f423 72e0 	bic.w	r2, r3, #448	; 0x1c0
 80098ba:	687b      	ldr	r3, [r7, #4]
 80098bc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80098be:	494a      	ldr	r1, [pc, #296]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 80098c0:	4313      	orrs	r3, r2
 80098c2:	650b      	str	r3, [r1, #80]	; 0x50
 80098c4:	e001      	b.n	80098ca <HAL_RCCEx_PeriphCLKConfig+0x1b6>
 80098c6:	7dfb      	ldrb	r3, [r7, #23]
 80098c8:	75bb      	strb	r3, [r7, #22]
 80098ca:	687b      	ldr	r3, [r7, #4]
 80098cc:	681b      	ldr	r3, [r3, #0]
 80098ce:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80098d2:	2b00      	cmp	r3, #0
 80098d4:	d049      	beq.n	800996a <HAL_RCCEx_PeriphCLKConfig+0x256>
 80098d6:	687b      	ldr	r3, [r7, #4]
 80098d8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80098dc:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80098e0:	d030      	beq.n	8009944 <HAL_RCCEx_PeriphCLKConfig+0x230>
 80098e2:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 80098e6:	d82a      	bhi.n	800993e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 80098e8:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 80098ec:	d02c      	beq.n	8009948 <HAL_RCCEx_PeriphCLKConfig+0x234>
 80098ee:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 80098f2:	d824      	bhi.n	800993e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 80098f4:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80098f8:	d018      	beq.n	800992c <HAL_RCCEx_PeriphCLKConfig+0x218>
 80098fa:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80098fe:	d81e      	bhi.n	800993e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8009900:	2b00      	cmp	r3, #0
 8009902:	d003      	beq.n	800990c <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8009904:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8009908:	d007      	beq.n	800991a <HAL_RCCEx_PeriphCLKConfig+0x206>
 800990a:	e018      	b.n	800993e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 800990c:	4b36      	ldr	r3, [pc, #216]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 800990e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009910:	4a35      	ldr	r2, [pc, #212]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8009912:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009916:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009918:	e017      	b.n	800994a <HAL_RCCEx_PeriphCLKConfig+0x236>
 800991a:	687b      	ldr	r3, [r7, #4]
 800991c:	3304      	adds	r3, #4
 800991e:	2100      	movs	r1, #0
 8009920:	4618      	mov	r0, r3
 8009922:	f001 f8fb 	bl	800ab1c <RCCEx_PLL2_Config>
 8009926:	4603      	mov	r3, r0
 8009928:	75fb      	strb	r3, [r7, #23]
 800992a:	e00e      	b.n	800994a <HAL_RCCEx_PeriphCLKConfig+0x236>
 800992c:	687b      	ldr	r3, [r7, #4]
 800992e:	3324      	adds	r3, #36	; 0x24
 8009930:	2100      	movs	r1, #0
 8009932:	4618      	mov	r0, r3
 8009934:	f001 f9a4 	bl	800ac80 <RCCEx_PLL3_Config>
 8009938:	4603      	mov	r3, r0
 800993a:	75fb      	strb	r3, [r7, #23]
 800993c:	e005      	b.n	800994a <HAL_RCCEx_PeriphCLKConfig+0x236>
 800993e:	2301      	movs	r3, #1
 8009940:	75fb      	strb	r3, [r7, #23]
 8009942:	e002      	b.n	800994a <HAL_RCCEx_PeriphCLKConfig+0x236>
 8009944:	bf00      	nop
 8009946:	e000      	b.n	800994a <HAL_RCCEx_PeriphCLKConfig+0x236>
 8009948:	bf00      	nop
 800994a:	7dfb      	ldrb	r3, [r7, #23]
 800994c:	2b00      	cmp	r3, #0
 800994e:	d10a      	bne.n	8009966 <HAL_RCCEx_PeriphCLKConfig+0x252>
 8009950:	4b25      	ldr	r3, [pc, #148]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8009952:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009954:	f423 0260 	bic.w	r2, r3, #14680064	; 0xe00000
 8009958:	687b      	ldr	r3, [r7, #4]
 800995a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800995e:	4922      	ldr	r1, [pc, #136]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8009960:	4313      	orrs	r3, r2
 8009962:	658b      	str	r3, [r1, #88]	; 0x58
 8009964:	e001      	b.n	800996a <HAL_RCCEx_PeriphCLKConfig+0x256>
 8009966:	7dfb      	ldrb	r3, [r7, #23]
 8009968:	75bb      	strb	r3, [r7, #22]
 800996a:	687b      	ldr	r3, [r7, #4]
 800996c:	681b      	ldr	r3, [r3, #0]
 800996e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8009972:	2b00      	cmp	r3, #0
 8009974:	d04b      	beq.n	8009a0e <HAL_RCCEx_PeriphCLKConfig+0x2fa>
 8009976:	687b      	ldr	r3, [r7, #4]
 8009978:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800997c:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8009980:	d030      	beq.n	80099e4 <HAL_RCCEx_PeriphCLKConfig+0x2d0>
 8009982:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8009986:	d82a      	bhi.n	80099de <HAL_RCCEx_PeriphCLKConfig+0x2ca>
 8009988:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 800998c:	d02e      	beq.n	80099ec <HAL_RCCEx_PeriphCLKConfig+0x2d8>
 800998e:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8009992:	d824      	bhi.n	80099de <HAL_RCCEx_PeriphCLKConfig+0x2ca>
 8009994:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009998:	d018      	beq.n	80099cc <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 800999a:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 800999e:	d81e      	bhi.n	80099de <HAL_RCCEx_PeriphCLKConfig+0x2ca>
 80099a0:	2b00      	cmp	r3, #0
 80099a2:	d003      	beq.n	80099ac <HAL_RCCEx_PeriphCLKConfig+0x298>
 80099a4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80099a8:	d007      	beq.n	80099ba <HAL_RCCEx_PeriphCLKConfig+0x2a6>
 80099aa:	e018      	b.n	80099de <HAL_RCCEx_PeriphCLKConfig+0x2ca>
 80099ac:	4b0e      	ldr	r3, [pc, #56]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 80099ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80099b0:	4a0d      	ldr	r2, [pc, #52]	; (80099e8 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 80099b2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80099b6:	62d3      	str	r3, [r2, #44]	; 0x2c
 80099b8:	e019      	b.n	80099ee <HAL_RCCEx_PeriphCLKConfig+0x2da>
 80099ba:	687b      	ldr	r3, [r7, #4]
 80099bc:	3304      	adds	r3, #4
 80099be:	2100      	movs	r1, #0
 80099c0:	4618      	mov	r0, r3
 80099c2:	f001 f8ab 	bl	800ab1c <RCCEx_PLL2_Config>
 80099c6:	4603      	mov	r3, r0
 80099c8:	75fb      	strb	r3, [r7, #23]
 80099ca:	e010      	b.n	80099ee <HAL_RCCEx_PeriphCLKConfig+0x2da>
 80099cc:	687b      	ldr	r3, [r7, #4]
 80099ce:	3324      	adds	r3, #36	; 0x24
 80099d0:	2100      	movs	r1, #0
 80099d2:	4618      	mov	r0, r3
 80099d4:	f001 f954 	bl	800ac80 <RCCEx_PLL3_Config>
 80099d8:	4603      	mov	r3, r0
 80099da:	75fb      	strb	r3, [r7, #23]
 80099dc:	e007      	b.n	80099ee <HAL_RCCEx_PeriphCLKConfig+0x2da>
 80099de:	2301      	movs	r3, #1
 80099e0:	75fb      	strb	r3, [r7, #23]
 80099e2:	e004      	b.n	80099ee <HAL_RCCEx_PeriphCLKConfig+0x2da>
 80099e4:	bf00      	nop
 80099e6:	e002      	b.n	80099ee <HAL_RCCEx_PeriphCLKConfig+0x2da>
 80099e8:	58024400 	.word	0x58024400
 80099ec:	bf00      	nop
 80099ee:	7dfb      	ldrb	r3, [r7, #23]
 80099f0:	2b00      	cmp	r3, #0
 80099f2:	d10a      	bne.n	8009a0a <HAL_RCCEx_PeriphCLKConfig+0x2f6>
 80099f4:	4b99      	ldr	r3, [pc, #612]	; (8009c5c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 80099f6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80099f8:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 80099fc:	687b      	ldr	r3, [r7, #4]
 80099fe:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8009a02:	4996      	ldr	r1, [pc, #600]	; (8009c5c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009a04:	4313      	orrs	r3, r2
 8009a06:	658b      	str	r3, [r1, #88]	; 0x58
 8009a08:	e001      	b.n	8009a0e <HAL_RCCEx_PeriphCLKConfig+0x2fa>
 8009a0a:	7dfb      	ldrb	r3, [r7, #23]
 8009a0c:	75bb      	strb	r3, [r7, #22]
 8009a0e:	687b      	ldr	r3, [r7, #4]
 8009a10:	681b      	ldr	r3, [r3, #0]
 8009a12:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009a16:	2b00      	cmp	r3, #0
 8009a18:	d032      	beq.n	8009a80 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8009a1a:	687b      	ldr	r3, [r7, #4]
 8009a1c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8009a1e:	2b30      	cmp	r3, #48	; 0x30
 8009a20:	d01c      	beq.n	8009a5c <HAL_RCCEx_PeriphCLKConfig+0x348>
 8009a22:	2b30      	cmp	r3, #48	; 0x30
 8009a24:	d817      	bhi.n	8009a56 <HAL_RCCEx_PeriphCLKConfig+0x342>
 8009a26:	2b20      	cmp	r3, #32
 8009a28:	d00c      	beq.n	8009a44 <HAL_RCCEx_PeriphCLKConfig+0x330>
 8009a2a:	2b20      	cmp	r3, #32
 8009a2c:	d813      	bhi.n	8009a56 <HAL_RCCEx_PeriphCLKConfig+0x342>
 8009a2e:	2b00      	cmp	r3, #0
 8009a30:	d016      	beq.n	8009a60 <HAL_RCCEx_PeriphCLKConfig+0x34c>
 8009a32:	2b10      	cmp	r3, #16
 8009a34:	d10f      	bne.n	8009a56 <HAL_RCCEx_PeriphCLKConfig+0x342>
 8009a36:	4b89      	ldr	r3, [pc, #548]	; (8009c5c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009a38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009a3a:	4a88      	ldr	r2, [pc, #544]	; (8009c5c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009a3c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009a40:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009a42:	e00e      	b.n	8009a62 <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8009a44:	687b      	ldr	r3, [r7, #4]
 8009a46:	3304      	adds	r3, #4
 8009a48:	2102      	movs	r1, #2
 8009a4a:	4618      	mov	r0, r3
 8009a4c:	f001 f866 	bl	800ab1c <RCCEx_PLL2_Config>
 8009a50:	4603      	mov	r3, r0
 8009a52:	75fb      	strb	r3, [r7, #23]
 8009a54:	e005      	b.n	8009a62 <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8009a56:	2301      	movs	r3, #1
 8009a58:	75fb      	strb	r3, [r7, #23]
 8009a5a:	e002      	b.n	8009a62 <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8009a5c:	bf00      	nop
 8009a5e:	e000      	b.n	8009a62 <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8009a60:	bf00      	nop
 8009a62:	7dfb      	ldrb	r3, [r7, #23]
 8009a64:	2b00      	cmp	r3, #0
 8009a66:	d109      	bne.n	8009a7c <HAL_RCCEx_PeriphCLKConfig+0x368>
 8009a68:	4b7c      	ldr	r3, [pc, #496]	; (8009c5c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009a6a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009a6c:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8009a70:	687b      	ldr	r3, [r7, #4]
 8009a72:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8009a74:	4979      	ldr	r1, [pc, #484]	; (8009c5c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009a76:	4313      	orrs	r3, r2
 8009a78:	64cb      	str	r3, [r1, #76]	; 0x4c
 8009a7a:	e001      	b.n	8009a80 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8009a7c:	7dfb      	ldrb	r3, [r7, #23]
 8009a7e:	75bb      	strb	r3, [r7, #22]
 8009a80:	687b      	ldr	r3, [r7, #4]
 8009a82:	681b      	ldr	r3, [r3, #0]
 8009a84:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8009a88:	2b00      	cmp	r3, #0
 8009a8a:	d047      	beq.n	8009b1c <HAL_RCCEx_PeriphCLKConfig+0x408>
 8009a8c:	687b      	ldr	r3, [r7, #4]
 8009a8e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009a90:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009a94:	d030      	beq.n	8009af8 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
 8009a96:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009a9a:	d82a      	bhi.n	8009af2 <HAL_RCCEx_PeriphCLKConfig+0x3de>
 8009a9c:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8009aa0:	d02c      	beq.n	8009afc <HAL_RCCEx_PeriphCLKConfig+0x3e8>
 8009aa2:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8009aa6:	d824      	bhi.n	8009af2 <HAL_RCCEx_PeriphCLKConfig+0x3de>
 8009aa8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009aac:	d018      	beq.n	8009ae0 <HAL_RCCEx_PeriphCLKConfig+0x3cc>
 8009aae:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009ab2:	d81e      	bhi.n	8009af2 <HAL_RCCEx_PeriphCLKConfig+0x3de>
 8009ab4:	2b00      	cmp	r3, #0
 8009ab6:	d003      	beq.n	8009ac0 <HAL_RCCEx_PeriphCLKConfig+0x3ac>
 8009ab8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009abc:	d007      	beq.n	8009ace <HAL_RCCEx_PeriphCLKConfig+0x3ba>
 8009abe:	e018      	b.n	8009af2 <HAL_RCCEx_PeriphCLKConfig+0x3de>
 8009ac0:	4b66      	ldr	r3, [pc, #408]	; (8009c5c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009ac2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ac4:	4a65      	ldr	r2, [pc, #404]	; (8009c5c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009ac6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009aca:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009acc:	e017      	b.n	8009afe <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 8009ace:	687b      	ldr	r3, [r7, #4]
 8009ad0:	3304      	adds	r3, #4
 8009ad2:	2100      	movs	r1, #0
 8009ad4:	4618      	mov	r0, r3
 8009ad6:	f001 f821 	bl	800ab1c <RCCEx_PLL2_Config>
 8009ada:	4603      	mov	r3, r0
 8009adc:	75fb      	strb	r3, [r7, #23]
 8009ade:	e00e      	b.n	8009afe <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 8009ae0:	687b      	ldr	r3, [r7, #4]
 8009ae2:	3324      	adds	r3, #36	; 0x24
 8009ae4:	2100      	movs	r1, #0
 8009ae6:	4618      	mov	r0, r3
 8009ae8:	f001 f8ca 	bl	800ac80 <RCCEx_PLL3_Config>
 8009aec:	4603      	mov	r3, r0
 8009aee:	75fb      	strb	r3, [r7, #23]
 8009af0:	e005      	b.n	8009afe <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 8009af2:	2301      	movs	r3, #1
 8009af4:	75fb      	strb	r3, [r7, #23]
 8009af6:	e002      	b.n	8009afe <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 8009af8:	bf00      	nop
 8009afa:	e000      	b.n	8009afe <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 8009afc:	bf00      	nop
 8009afe:	7dfb      	ldrb	r3, [r7, #23]
 8009b00:	2b00      	cmp	r3, #0
 8009b02:	d109      	bne.n	8009b18 <HAL_RCCEx_PeriphCLKConfig+0x404>
 8009b04:	4b55      	ldr	r3, [pc, #340]	; (8009c5c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009b06:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009b08:	f423 42e0 	bic.w	r2, r3, #28672	; 0x7000
 8009b0c:	687b      	ldr	r3, [r7, #4]
 8009b0e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009b10:	4952      	ldr	r1, [pc, #328]	; (8009c5c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009b12:	4313      	orrs	r3, r2
 8009b14:	650b      	str	r3, [r1, #80]	; 0x50
 8009b16:	e001      	b.n	8009b1c <HAL_RCCEx_PeriphCLKConfig+0x408>
 8009b18:	7dfb      	ldrb	r3, [r7, #23]
 8009b1a:	75bb      	strb	r3, [r7, #22]
 8009b1c:	687b      	ldr	r3, [r7, #4]
 8009b1e:	681b      	ldr	r3, [r3, #0]
 8009b20:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8009b24:	2b00      	cmp	r3, #0
 8009b26:	d049      	beq.n	8009bbc <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8009b28:	687b      	ldr	r3, [r7, #4]
 8009b2a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009b2c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009b30:	d02e      	beq.n	8009b90 <HAL_RCCEx_PeriphCLKConfig+0x47c>
 8009b32:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009b36:	d828      	bhi.n	8009b8a <HAL_RCCEx_PeriphCLKConfig+0x476>
 8009b38:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8009b3c:	d02a      	beq.n	8009b94 <HAL_RCCEx_PeriphCLKConfig+0x480>
 8009b3e:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8009b42:	d822      	bhi.n	8009b8a <HAL_RCCEx_PeriphCLKConfig+0x476>
 8009b44:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8009b48:	d026      	beq.n	8009b98 <HAL_RCCEx_PeriphCLKConfig+0x484>
 8009b4a:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8009b4e:	d81c      	bhi.n	8009b8a <HAL_RCCEx_PeriphCLKConfig+0x476>
 8009b50:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009b54:	d010      	beq.n	8009b78 <HAL_RCCEx_PeriphCLKConfig+0x464>
 8009b56:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009b5a:	d816      	bhi.n	8009b8a <HAL_RCCEx_PeriphCLKConfig+0x476>
 8009b5c:	2b00      	cmp	r3, #0
 8009b5e:	d01d      	beq.n	8009b9c <HAL_RCCEx_PeriphCLKConfig+0x488>
 8009b60:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009b64:	d111      	bne.n	8009b8a <HAL_RCCEx_PeriphCLKConfig+0x476>
 8009b66:	687b      	ldr	r3, [r7, #4]
 8009b68:	3304      	adds	r3, #4
 8009b6a:	2101      	movs	r1, #1
 8009b6c:	4618      	mov	r0, r3
 8009b6e:	f000 ffd5 	bl	800ab1c <RCCEx_PLL2_Config>
 8009b72:	4603      	mov	r3, r0
 8009b74:	75fb      	strb	r3, [r7, #23]
 8009b76:	e012      	b.n	8009b9e <HAL_RCCEx_PeriphCLKConfig+0x48a>
 8009b78:	687b      	ldr	r3, [r7, #4]
 8009b7a:	3324      	adds	r3, #36	; 0x24
 8009b7c:	2101      	movs	r1, #1
 8009b7e:	4618      	mov	r0, r3
 8009b80:	f001 f87e 	bl	800ac80 <RCCEx_PLL3_Config>
 8009b84:	4603      	mov	r3, r0
 8009b86:	75fb      	strb	r3, [r7, #23]
 8009b88:	e009      	b.n	8009b9e <HAL_RCCEx_PeriphCLKConfig+0x48a>
 8009b8a:	2301      	movs	r3, #1
 8009b8c:	75fb      	strb	r3, [r7, #23]
 8009b8e:	e006      	b.n	8009b9e <HAL_RCCEx_PeriphCLKConfig+0x48a>
 8009b90:	bf00      	nop
 8009b92:	e004      	b.n	8009b9e <HAL_RCCEx_PeriphCLKConfig+0x48a>
 8009b94:	bf00      	nop
 8009b96:	e002      	b.n	8009b9e <HAL_RCCEx_PeriphCLKConfig+0x48a>
 8009b98:	bf00      	nop
 8009b9a:	e000      	b.n	8009b9e <HAL_RCCEx_PeriphCLKConfig+0x48a>
 8009b9c:	bf00      	nop
 8009b9e:	7dfb      	ldrb	r3, [r7, #23]
 8009ba0:	2b00      	cmp	r3, #0
 8009ba2:	d109      	bne.n	8009bb8 <HAL_RCCEx_PeriphCLKConfig+0x4a4>
 8009ba4:	4b2d      	ldr	r3, [pc, #180]	; (8009c5c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009ba6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009ba8:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 8009bac:	687b      	ldr	r3, [r7, #4]
 8009bae:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009bb0:	492a      	ldr	r1, [pc, #168]	; (8009c5c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009bb2:	4313      	orrs	r3, r2
 8009bb4:	650b      	str	r3, [r1, #80]	; 0x50
 8009bb6:	e001      	b.n	8009bbc <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8009bb8:	7dfb      	ldrb	r3, [r7, #23]
 8009bba:	75bb      	strb	r3, [r7, #22]
 8009bbc:	687b      	ldr	r3, [r7, #4]
 8009bbe:	681b      	ldr	r3, [r3, #0]
 8009bc0:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8009bc4:	2b00      	cmp	r3, #0
 8009bc6:	d04d      	beq.n	8009c64 <HAL_RCCEx_PeriphCLKConfig+0x550>
 8009bc8:	687b      	ldr	r3, [r7, #4]
 8009bca:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8009bce:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8009bd2:	d02e      	beq.n	8009c32 <HAL_RCCEx_PeriphCLKConfig+0x51e>
 8009bd4:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8009bd8:	d828      	bhi.n	8009c2c <HAL_RCCEx_PeriphCLKConfig+0x518>
 8009bda:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009bde:	d02a      	beq.n	8009c36 <HAL_RCCEx_PeriphCLKConfig+0x522>
 8009be0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009be4:	d822      	bhi.n	8009c2c <HAL_RCCEx_PeriphCLKConfig+0x518>
 8009be6:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8009bea:	d026      	beq.n	8009c3a <HAL_RCCEx_PeriphCLKConfig+0x526>
 8009bec:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8009bf0:	d81c      	bhi.n	8009c2c <HAL_RCCEx_PeriphCLKConfig+0x518>
 8009bf2:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009bf6:	d010      	beq.n	8009c1a <HAL_RCCEx_PeriphCLKConfig+0x506>
 8009bf8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009bfc:	d816      	bhi.n	8009c2c <HAL_RCCEx_PeriphCLKConfig+0x518>
 8009bfe:	2b00      	cmp	r3, #0
 8009c00:	d01d      	beq.n	8009c3e <HAL_RCCEx_PeriphCLKConfig+0x52a>
 8009c02:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009c06:	d111      	bne.n	8009c2c <HAL_RCCEx_PeriphCLKConfig+0x518>
 8009c08:	687b      	ldr	r3, [r7, #4]
 8009c0a:	3304      	adds	r3, #4
 8009c0c:	2101      	movs	r1, #1
 8009c0e:	4618      	mov	r0, r3
 8009c10:	f000 ff84 	bl	800ab1c <RCCEx_PLL2_Config>
 8009c14:	4603      	mov	r3, r0
 8009c16:	75fb      	strb	r3, [r7, #23]
 8009c18:	e012      	b.n	8009c40 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 8009c1a:	687b      	ldr	r3, [r7, #4]
 8009c1c:	3324      	adds	r3, #36	; 0x24
 8009c1e:	2101      	movs	r1, #1
 8009c20:	4618      	mov	r0, r3
 8009c22:	f001 f82d 	bl	800ac80 <RCCEx_PLL3_Config>
 8009c26:	4603      	mov	r3, r0
 8009c28:	75fb      	strb	r3, [r7, #23]
 8009c2a:	e009      	b.n	8009c40 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 8009c2c:	2301      	movs	r3, #1
 8009c2e:	75fb      	strb	r3, [r7, #23]
 8009c30:	e006      	b.n	8009c40 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 8009c32:	bf00      	nop
 8009c34:	e004      	b.n	8009c40 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 8009c36:	bf00      	nop
 8009c38:	e002      	b.n	8009c40 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 8009c3a:	bf00      	nop
 8009c3c:	e000      	b.n	8009c40 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 8009c3e:	bf00      	nop
 8009c40:	7dfb      	ldrb	r3, [r7, #23]
 8009c42:	2b00      	cmp	r3, #0
 8009c44:	d10c      	bne.n	8009c60 <HAL_RCCEx_PeriphCLKConfig+0x54c>
 8009c46:	4b05      	ldr	r3, [pc, #20]	; (8009c5c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009c48:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009c4a:	f023 42e0 	bic.w	r2, r3, #1879048192	; 0x70000000
 8009c4e:	687b      	ldr	r3, [r7, #4]
 8009c50:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8009c54:	4901      	ldr	r1, [pc, #4]	; (8009c5c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009c56:	4313      	orrs	r3, r2
 8009c58:	658b      	str	r3, [r1, #88]	; 0x58
 8009c5a:	e003      	b.n	8009c64 <HAL_RCCEx_PeriphCLKConfig+0x550>
 8009c5c:	58024400 	.word	0x58024400
 8009c60:	7dfb      	ldrb	r3, [r7, #23]
 8009c62:	75bb      	strb	r3, [r7, #22]
 8009c64:	687b      	ldr	r3, [r7, #4]
 8009c66:	681b      	ldr	r3, [r3, #0]
 8009c68:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8009c6c:	2b00      	cmp	r3, #0
 8009c6e:	d02f      	beq.n	8009cd0 <HAL_RCCEx_PeriphCLKConfig+0x5bc>
 8009c70:	687b      	ldr	r3, [r7, #4]
 8009c72:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009c74:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009c78:	d00e      	beq.n	8009c98 <HAL_RCCEx_PeriphCLKConfig+0x584>
 8009c7a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009c7e:	d814      	bhi.n	8009caa <HAL_RCCEx_PeriphCLKConfig+0x596>
 8009c80:	2b00      	cmp	r3, #0
 8009c82:	d015      	beq.n	8009cb0 <HAL_RCCEx_PeriphCLKConfig+0x59c>
 8009c84:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009c88:	d10f      	bne.n	8009caa <HAL_RCCEx_PeriphCLKConfig+0x596>
 8009c8a:	4baf      	ldr	r3, [pc, #700]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009c8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c8e:	4aae      	ldr	r2, [pc, #696]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009c90:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009c94:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009c96:	e00c      	b.n	8009cb2 <HAL_RCCEx_PeriphCLKConfig+0x59e>
 8009c98:	687b      	ldr	r3, [r7, #4]
 8009c9a:	3304      	adds	r3, #4
 8009c9c:	2101      	movs	r1, #1
 8009c9e:	4618      	mov	r0, r3
 8009ca0:	f000 ff3c 	bl	800ab1c <RCCEx_PLL2_Config>
 8009ca4:	4603      	mov	r3, r0
 8009ca6:	75fb      	strb	r3, [r7, #23]
 8009ca8:	e003      	b.n	8009cb2 <HAL_RCCEx_PeriphCLKConfig+0x59e>
 8009caa:	2301      	movs	r3, #1
 8009cac:	75fb      	strb	r3, [r7, #23]
 8009cae:	e000      	b.n	8009cb2 <HAL_RCCEx_PeriphCLKConfig+0x59e>
 8009cb0:	bf00      	nop
 8009cb2:	7dfb      	ldrb	r3, [r7, #23]
 8009cb4:	2b00      	cmp	r3, #0
 8009cb6:	d109      	bne.n	8009ccc <HAL_RCCEx_PeriphCLKConfig+0x5b8>
 8009cb8:	4ba3      	ldr	r3, [pc, #652]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009cba:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009cbc:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 8009cc0:	687b      	ldr	r3, [r7, #4]
 8009cc2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009cc4:	49a0      	ldr	r1, [pc, #640]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009cc6:	4313      	orrs	r3, r2
 8009cc8:	650b      	str	r3, [r1, #80]	; 0x50
 8009cca:	e001      	b.n	8009cd0 <HAL_RCCEx_PeriphCLKConfig+0x5bc>
 8009ccc:	7dfb      	ldrb	r3, [r7, #23]
 8009cce:	75bb      	strb	r3, [r7, #22]
 8009cd0:	687b      	ldr	r3, [r7, #4]
 8009cd2:	681b      	ldr	r3, [r3, #0]
 8009cd4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8009cd8:	2b00      	cmp	r3, #0
 8009cda:	d032      	beq.n	8009d42 <HAL_RCCEx_PeriphCLKConfig+0x62e>
 8009cdc:	687b      	ldr	r3, [r7, #4]
 8009cde:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009ce0:	2b03      	cmp	r3, #3
 8009ce2:	d81b      	bhi.n	8009d1c <HAL_RCCEx_PeriphCLKConfig+0x608>
 8009ce4:	a201      	add	r2, pc, #4	; (adr r2, 8009cec <HAL_RCCEx_PeriphCLKConfig+0x5d8>)
 8009ce6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009cea:	bf00      	nop
 8009cec:	08009d23 	.word	0x08009d23
 8009cf0:	08009cfd 	.word	0x08009cfd
 8009cf4:	08009d0b 	.word	0x08009d0b
 8009cf8:	08009d23 	.word	0x08009d23
 8009cfc:	4b92      	ldr	r3, [pc, #584]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009cfe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d00:	4a91      	ldr	r2, [pc, #580]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009d02:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009d06:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009d08:	e00c      	b.n	8009d24 <HAL_RCCEx_PeriphCLKConfig+0x610>
 8009d0a:	687b      	ldr	r3, [r7, #4]
 8009d0c:	3304      	adds	r3, #4
 8009d0e:	2102      	movs	r1, #2
 8009d10:	4618      	mov	r0, r3
 8009d12:	f000 ff03 	bl	800ab1c <RCCEx_PLL2_Config>
 8009d16:	4603      	mov	r3, r0
 8009d18:	75fb      	strb	r3, [r7, #23]
 8009d1a:	e003      	b.n	8009d24 <HAL_RCCEx_PeriphCLKConfig+0x610>
 8009d1c:	2301      	movs	r3, #1
 8009d1e:	75fb      	strb	r3, [r7, #23]
 8009d20:	e000      	b.n	8009d24 <HAL_RCCEx_PeriphCLKConfig+0x610>
 8009d22:	bf00      	nop
 8009d24:	7dfb      	ldrb	r3, [r7, #23]
 8009d26:	2b00      	cmp	r3, #0
 8009d28:	d109      	bne.n	8009d3e <HAL_RCCEx_PeriphCLKConfig+0x62a>
 8009d2a:	4b87      	ldr	r3, [pc, #540]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009d2c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009d2e:	f023 0203 	bic.w	r2, r3, #3
 8009d32:	687b      	ldr	r3, [r7, #4]
 8009d34:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009d36:	4984      	ldr	r1, [pc, #528]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009d38:	4313      	orrs	r3, r2
 8009d3a:	64cb      	str	r3, [r1, #76]	; 0x4c
 8009d3c:	e001      	b.n	8009d42 <HAL_RCCEx_PeriphCLKConfig+0x62e>
 8009d3e:	7dfb      	ldrb	r3, [r7, #23]
 8009d40:	75bb      	strb	r3, [r7, #22]
 8009d42:	687b      	ldr	r3, [r7, #4]
 8009d44:	681b      	ldr	r3, [r3, #0]
 8009d46:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009d4a:	2b00      	cmp	r3, #0
 8009d4c:	f000 8086 	beq.w	8009e5c <HAL_RCCEx_PeriphCLKConfig+0x748>
 8009d50:	4b7e      	ldr	r3, [pc, #504]	; (8009f4c <HAL_RCCEx_PeriphCLKConfig+0x838>)
 8009d52:	681b      	ldr	r3, [r3, #0]
 8009d54:	4a7d      	ldr	r2, [pc, #500]	; (8009f4c <HAL_RCCEx_PeriphCLKConfig+0x838>)
 8009d56:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009d5a:	6013      	str	r3, [r2, #0]
 8009d5c:	f7fd fc08 	bl	8007570 <HAL_GetTick>
 8009d60:	6138      	str	r0, [r7, #16]
 8009d62:	e009      	b.n	8009d78 <HAL_RCCEx_PeriphCLKConfig+0x664>
 8009d64:	f7fd fc04 	bl	8007570 <HAL_GetTick>
 8009d68:	4602      	mov	r2, r0
 8009d6a:	693b      	ldr	r3, [r7, #16]
 8009d6c:	1ad3      	subs	r3, r2, r3
 8009d6e:	2b64      	cmp	r3, #100	; 0x64
 8009d70:	d902      	bls.n	8009d78 <HAL_RCCEx_PeriphCLKConfig+0x664>
 8009d72:	2303      	movs	r3, #3
 8009d74:	75fb      	strb	r3, [r7, #23]
 8009d76:	e005      	b.n	8009d84 <HAL_RCCEx_PeriphCLKConfig+0x670>
 8009d78:	4b74      	ldr	r3, [pc, #464]	; (8009f4c <HAL_RCCEx_PeriphCLKConfig+0x838>)
 8009d7a:	681b      	ldr	r3, [r3, #0]
 8009d7c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009d80:	2b00      	cmp	r3, #0
 8009d82:	d0ef      	beq.n	8009d64 <HAL_RCCEx_PeriphCLKConfig+0x650>
 8009d84:	7dfb      	ldrb	r3, [r7, #23]
 8009d86:	2b00      	cmp	r3, #0
 8009d88:	d166      	bne.n	8009e58 <HAL_RCCEx_PeriphCLKConfig+0x744>
 8009d8a:	4b6f      	ldr	r3, [pc, #444]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009d8c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8009d8e:	687b      	ldr	r3, [r7, #4]
 8009d90:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009d94:	4053      	eors	r3, r2
 8009d96:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009d9a:	2b00      	cmp	r3, #0
 8009d9c:	d013      	beq.n	8009dc6 <HAL_RCCEx_PeriphCLKConfig+0x6b2>
 8009d9e:	4b6a      	ldr	r3, [pc, #424]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009da0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009da2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009da6:	60fb      	str	r3, [r7, #12]
 8009da8:	4b67      	ldr	r3, [pc, #412]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009daa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009dac:	4a66      	ldr	r2, [pc, #408]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009dae:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009db2:	6713      	str	r3, [r2, #112]	; 0x70
 8009db4:	4b64      	ldr	r3, [pc, #400]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009db6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009db8:	4a63      	ldr	r2, [pc, #396]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009dba:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009dbe:	6713      	str	r3, [r2, #112]	; 0x70
 8009dc0:	4a61      	ldr	r2, [pc, #388]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009dc2:	68fb      	ldr	r3, [r7, #12]
 8009dc4:	6713      	str	r3, [r2, #112]	; 0x70
 8009dc6:	687b      	ldr	r3, [r7, #4]
 8009dc8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009dcc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009dd0:	d115      	bne.n	8009dfe <HAL_RCCEx_PeriphCLKConfig+0x6ea>
 8009dd2:	f7fd fbcd 	bl	8007570 <HAL_GetTick>
 8009dd6:	6138      	str	r0, [r7, #16]
 8009dd8:	e00b      	b.n	8009df2 <HAL_RCCEx_PeriphCLKConfig+0x6de>
 8009dda:	f7fd fbc9 	bl	8007570 <HAL_GetTick>
 8009dde:	4602      	mov	r2, r0
 8009de0:	693b      	ldr	r3, [r7, #16]
 8009de2:	1ad3      	subs	r3, r2, r3
 8009de4:	f241 3288 	movw	r2, #5000	; 0x1388
 8009de8:	4293      	cmp	r3, r2
 8009dea:	d902      	bls.n	8009df2 <HAL_RCCEx_PeriphCLKConfig+0x6de>
 8009dec:	2303      	movs	r3, #3
 8009dee:	75fb      	strb	r3, [r7, #23]
 8009df0:	e005      	b.n	8009dfe <HAL_RCCEx_PeriphCLKConfig+0x6ea>
 8009df2:	4b55      	ldr	r3, [pc, #340]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009df4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009df6:	f003 0302 	and.w	r3, r3, #2
 8009dfa:	2b00      	cmp	r3, #0
 8009dfc:	d0ed      	beq.n	8009dda <HAL_RCCEx_PeriphCLKConfig+0x6c6>
 8009dfe:	7dfb      	ldrb	r3, [r7, #23]
 8009e00:	2b00      	cmp	r3, #0
 8009e02:	d126      	bne.n	8009e52 <HAL_RCCEx_PeriphCLKConfig+0x73e>
 8009e04:	687b      	ldr	r3, [r7, #4]
 8009e06:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009e0a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009e0e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8009e12:	d10d      	bne.n	8009e30 <HAL_RCCEx_PeriphCLKConfig+0x71c>
 8009e14:	4b4c      	ldr	r3, [pc, #304]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009e16:	691b      	ldr	r3, [r3, #16]
 8009e18:	f423 527c 	bic.w	r2, r3, #16128	; 0x3f00
 8009e1c:	687b      	ldr	r3, [r7, #4]
 8009e1e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009e22:	0919      	lsrs	r1, r3, #4
 8009e24:	4b4a      	ldr	r3, [pc, #296]	; (8009f50 <HAL_RCCEx_PeriphCLKConfig+0x83c>)
 8009e26:	400b      	ands	r3, r1
 8009e28:	4947      	ldr	r1, [pc, #284]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009e2a:	4313      	orrs	r3, r2
 8009e2c:	610b      	str	r3, [r1, #16]
 8009e2e:	e005      	b.n	8009e3c <HAL_RCCEx_PeriphCLKConfig+0x728>
 8009e30:	4b45      	ldr	r3, [pc, #276]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009e32:	691b      	ldr	r3, [r3, #16]
 8009e34:	4a44      	ldr	r2, [pc, #272]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009e36:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 8009e3a:	6113      	str	r3, [r2, #16]
 8009e3c:	4b42      	ldr	r3, [pc, #264]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009e3e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8009e40:	687b      	ldr	r3, [r7, #4]
 8009e42:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009e46:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009e4a:	493f      	ldr	r1, [pc, #252]	; (8009f48 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009e4c:	4313      	orrs	r3, r2
 8009e4e:	670b      	str	r3, [r1, #112]	; 0x70
 8009e50:	e004      	b.n	8009e5c <HAL_RCCEx_PeriphCLKConfig+0x748>
 8009e52:	7dfb      	ldrb	r3, [r7, #23]
 8009e54:	75bb      	strb	r3, [r7, #22]
 8009e56:	e001      	b.n	8009e5c <HAL_RCCEx_PeriphCLKConfig+0x748>
 8009e58:	7dfb      	ldrb	r3, [r7, #23]
 8009e5a:	75bb      	strb	r3, [r7, #22]
 8009e5c:	687b      	ldr	r3, [r7, #4]
 8009e5e:	681b      	ldr	r3, [r3, #0]
 8009e60:	f003 0301 	and.w	r3, r3, #1
 8009e64:	2b00      	cmp	r3, #0
 8009e66:	f000 8085 	beq.w	8009f74 <HAL_RCCEx_PeriphCLKConfig+0x860>
 8009e6a:	687b      	ldr	r3, [r7, #4]
 8009e6c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009e6e:	2b28      	cmp	r3, #40	; 0x28
 8009e70:	d866      	bhi.n	8009f40 <HAL_RCCEx_PeriphCLKConfig+0x82c>
 8009e72:	a201      	add	r2, pc, #4	; (adr r2, 8009e78 <HAL_RCCEx_PeriphCLKConfig+0x764>)
 8009e74:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009e78:	08009f55 	.word	0x08009f55
 8009e7c:	08009f41 	.word	0x08009f41
 8009e80:	08009f41 	.word	0x08009f41
 8009e84:	08009f41 	.word	0x08009f41
 8009e88:	08009f41 	.word	0x08009f41
 8009e8c:	08009f41 	.word	0x08009f41
 8009e90:	08009f41 	.word	0x08009f41
 8009e94:	08009f41 	.word	0x08009f41
 8009e98:	08009f1d 	.word	0x08009f1d
 8009e9c:	08009f41 	.word	0x08009f41
 8009ea0:	08009f41 	.word	0x08009f41
 8009ea4:	08009f41 	.word	0x08009f41
 8009ea8:	08009f41 	.word	0x08009f41
 8009eac:	08009f41 	.word	0x08009f41
 8009eb0:	08009f41 	.word	0x08009f41
 8009eb4:	08009f41 	.word	0x08009f41
 8009eb8:	08009f2f 	.word	0x08009f2f
 8009ebc:	08009f41 	.word	0x08009f41
 8009ec0:	08009f41 	.word	0x08009f41
 8009ec4:	08009f41 	.word	0x08009f41
 8009ec8:	08009f41 	.word	0x08009f41
 8009ecc:	08009f41 	.word	0x08009f41
 8009ed0:	08009f41 	.word	0x08009f41
 8009ed4:	08009f41 	.word	0x08009f41
 8009ed8:	08009f55 	.word	0x08009f55
 8009edc:	08009f41 	.word	0x08009f41
 8009ee0:	08009f41 	.word	0x08009f41
 8009ee4:	08009f41 	.word	0x08009f41
 8009ee8:	08009f41 	.word	0x08009f41
 8009eec:	08009f41 	.word	0x08009f41
 8009ef0:	08009f41 	.word	0x08009f41
 8009ef4:	08009f41 	.word	0x08009f41
 8009ef8:	08009f55 	.word	0x08009f55
 8009efc:	08009f41 	.word	0x08009f41
 8009f00:	08009f41 	.word	0x08009f41
 8009f04:	08009f41 	.word	0x08009f41
 8009f08:	08009f41 	.word	0x08009f41
 8009f0c:	08009f41 	.word	0x08009f41
 8009f10:	08009f41 	.word	0x08009f41
 8009f14:	08009f41 	.word	0x08009f41
 8009f18:	08009f55 	.word	0x08009f55
 8009f1c:	687b      	ldr	r3, [r7, #4]
 8009f1e:	3304      	adds	r3, #4
 8009f20:	2101      	movs	r1, #1
 8009f22:	4618      	mov	r0, r3
 8009f24:	f000 fdfa 	bl	800ab1c <RCCEx_PLL2_Config>
 8009f28:	4603      	mov	r3, r0
 8009f2a:	75fb      	strb	r3, [r7, #23]
 8009f2c:	e013      	b.n	8009f56 <HAL_RCCEx_PeriphCLKConfig+0x842>
 8009f2e:	687b      	ldr	r3, [r7, #4]
 8009f30:	3324      	adds	r3, #36	; 0x24
 8009f32:	2101      	movs	r1, #1
 8009f34:	4618      	mov	r0, r3
 8009f36:	f000 fea3 	bl	800ac80 <RCCEx_PLL3_Config>
 8009f3a:	4603      	mov	r3, r0
 8009f3c:	75fb      	strb	r3, [r7, #23]
 8009f3e:	e00a      	b.n	8009f56 <HAL_RCCEx_PeriphCLKConfig+0x842>
 8009f40:	2301      	movs	r3, #1
 8009f42:	75fb      	strb	r3, [r7, #23]
 8009f44:	e007      	b.n	8009f56 <HAL_RCCEx_PeriphCLKConfig+0x842>
 8009f46:	bf00      	nop
 8009f48:	58024400 	.word	0x58024400
 8009f4c:	58024800 	.word	0x58024800
 8009f50:	00ffffcf 	.word	0x00ffffcf
 8009f54:	bf00      	nop
 8009f56:	7dfb      	ldrb	r3, [r7, #23]
 8009f58:	2b00      	cmp	r3, #0
 8009f5a:	d109      	bne.n	8009f70 <HAL_RCCEx_PeriphCLKConfig+0x85c>
 8009f5c:	4b96      	ldr	r3, [pc, #600]	; (800a1b8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 8009f5e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009f60:	f023 0238 	bic.w	r2, r3, #56	; 0x38
 8009f64:	687b      	ldr	r3, [r7, #4]
 8009f66:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009f68:	4993      	ldr	r1, [pc, #588]	; (800a1b8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 8009f6a:	4313      	orrs	r3, r2
 8009f6c:	654b      	str	r3, [r1, #84]	; 0x54
 8009f6e:	e001      	b.n	8009f74 <HAL_RCCEx_PeriphCLKConfig+0x860>
 8009f70:	7dfb      	ldrb	r3, [r7, #23]
 8009f72:	75bb      	strb	r3, [r7, #22]
 8009f74:	687b      	ldr	r3, [r7, #4]
 8009f76:	681b      	ldr	r3, [r3, #0]
 8009f78:	f003 0302 	and.w	r3, r3, #2
 8009f7c:	2b00      	cmp	r3, #0
 8009f7e:	d038      	beq.n	8009ff2 <HAL_RCCEx_PeriphCLKConfig+0x8de>
 8009f80:	687b      	ldr	r3, [r7, #4]
 8009f82:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009f84:	2b05      	cmp	r3, #5
 8009f86:	d821      	bhi.n	8009fcc <HAL_RCCEx_PeriphCLKConfig+0x8b8>
 8009f88:	a201      	add	r2, pc, #4	; (adr r2, 8009f90 <HAL_RCCEx_PeriphCLKConfig+0x87c>)
 8009f8a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009f8e:	bf00      	nop
 8009f90:	08009fd3 	.word	0x08009fd3
 8009f94:	08009fa9 	.word	0x08009fa9
 8009f98:	08009fbb 	.word	0x08009fbb
 8009f9c:	08009fd3 	.word	0x08009fd3
 8009fa0:	08009fd3 	.word	0x08009fd3
 8009fa4:	08009fd3 	.word	0x08009fd3
 8009fa8:	687b      	ldr	r3, [r7, #4]
 8009faa:	3304      	adds	r3, #4
 8009fac:	2101      	movs	r1, #1
 8009fae:	4618      	mov	r0, r3
 8009fb0:	f000 fdb4 	bl	800ab1c <RCCEx_PLL2_Config>
 8009fb4:	4603      	mov	r3, r0
 8009fb6:	75fb      	strb	r3, [r7, #23]
 8009fb8:	e00c      	b.n	8009fd4 <HAL_RCCEx_PeriphCLKConfig+0x8c0>
 8009fba:	687b      	ldr	r3, [r7, #4]
 8009fbc:	3324      	adds	r3, #36	; 0x24
 8009fbe:	2101      	movs	r1, #1
 8009fc0:	4618      	mov	r0, r3
 8009fc2:	f000 fe5d 	bl	800ac80 <RCCEx_PLL3_Config>
 8009fc6:	4603      	mov	r3, r0
 8009fc8:	75fb      	strb	r3, [r7, #23]
 8009fca:	e003      	b.n	8009fd4 <HAL_RCCEx_PeriphCLKConfig+0x8c0>
 8009fcc:	2301      	movs	r3, #1
 8009fce:	75fb      	strb	r3, [r7, #23]
 8009fd0:	e000      	b.n	8009fd4 <HAL_RCCEx_PeriphCLKConfig+0x8c0>
 8009fd2:	bf00      	nop
 8009fd4:	7dfb      	ldrb	r3, [r7, #23]
 8009fd6:	2b00      	cmp	r3, #0
 8009fd8:	d109      	bne.n	8009fee <HAL_RCCEx_PeriphCLKConfig+0x8da>
 8009fda:	4b77      	ldr	r3, [pc, #476]	; (800a1b8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 8009fdc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009fde:	f023 0207 	bic.w	r2, r3, #7
 8009fe2:	687b      	ldr	r3, [r7, #4]
 8009fe4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009fe6:	4974      	ldr	r1, [pc, #464]	; (800a1b8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 8009fe8:	4313      	orrs	r3, r2
 8009fea:	654b      	str	r3, [r1, #84]	; 0x54
 8009fec:	e001      	b.n	8009ff2 <HAL_RCCEx_PeriphCLKConfig+0x8de>
 8009fee:	7dfb      	ldrb	r3, [r7, #23]
 8009ff0:	75bb      	strb	r3, [r7, #22]
 8009ff2:	687b      	ldr	r3, [r7, #4]
 8009ff4:	681b      	ldr	r3, [r3, #0]
 8009ff6:	f003 0304 	and.w	r3, r3, #4
 8009ffa:	2b00      	cmp	r3, #0
 8009ffc:	d03a      	beq.n	800a074 <HAL_RCCEx_PeriphCLKConfig+0x960>
 8009ffe:	687b      	ldr	r3, [r7, #4]
 800a000:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a004:	2b05      	cmp	r3, #5
 800a006:	d821      	bhi.n	800a04c <HAL_RCCEx_PeriphCLKConfig+0x938>
 800a008:	a201      	add	r2, pc, #4	; (adr r2, 800a010 <HAL_RCCEx_PeriphCLKConfig+0x8fc>)
 800a00a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a00e:	bf00      	nop
 800a010:	0800a053 	.word	0x0800a053
 800a014:	0800a029 	.word	0x0800a029
 800a018:	0800a03b 	.word	0x0800a03b
 800a01c:	0800a053 	.word	0x0800a053
 800a020:	0800a053 	.word	0x0800a053
 800a024:	0800a053 	.word	0x0800a053
 800a028:	687b      	ldr	r3, [r7, #4]
 800a02a:	3304      	adds	r3, #4
 800a02c:	2101      	movs	r1, #1
 800a02e:	4618      	mov	r0, r3
 800a030:	f000 fd74 	bl	800ab1c <RCCEx_PLL2_Config>
 800a034:	4603      	mov	r3, r0
 800a036:	75fb      	strb	r3, [r7, #23]
 800a038:	e00c      	b.n	800a054 <HAL_RCCEx_PeriphCLKConfig+0x940>
 800a03a:	687b      	ldr	r3, [r7, #4]
 800a03c:	3324      	adds	r3, #36	; 0x24
 800a03e:	2101      	movs	r1, #1
 800a040:	4618      	mov	r0, r3
 800a042:	f000 fe1d 	bl	800ac80 <RCCEx_PLL3_Config>
 800a046:	4603      	mov	r3, r0
 800a048:	75fb      	strb	r3, [r7, #23]
 800a04a:	e003      	b.n	800a054 <HAL_RCCEx_PeriphCLKConfig+0x940>
 800a04c:	2301      	movs	r3, #1
 800a04e:	75fb      	strb	r3, [r7, #23]
 800a050:	e000      	b.n	800a054 <HAL_RCCEx_PeriphCLKConfig+0x940>
 800a052:	bf00      	nop
 800a054:	7dfb      	ldrb	r3, [r7, #23]
 800a056:	2b00      	cmp	r3, #0
 800a058:	d10a      	bne.n	800a070 <HAL_RCCEx_PeriphCLKConfig+0x95c>
 800a05a:	4b57      	ldr	r3, [pc, #348]	; (800a1b8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 800a05c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a05e:	f023 0207 	bic.w	r2, r3, #7
 800a062:	687b      	ldr	r3, [r7, #4]
 800a064:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a068:	4953      	ldr	r1, [pc, #332]	; (800a1b8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 800a06a:	4313      	orrs	r3, r2
 800a06c:	658b      	str	r3, [r1, #88]	; 0x58
 800a06e:	e001      	b.n	800a074 <HAL_RCCEx_PeriphCLKConfig+0x960>
 800a070:	7dfb      	ldrb	r3, [r7, #23]
 800a072:	75bb      	strb	r3, [r7, #22]
 800a074:	687b      	ldr	r3, [r7, #4]
 800a076:	681b      	ldr	r3, [r3, #0]
 800a078:	f003 0320 	and.w	r3, r3, #32
 800a07c:	2b00      	cmp	r3, #0
 800a07e:	d04b      	beq.n	800a118 <HAL_RCCEx_PeriphCLKConfig+0xa04>
 800a080:	687b      	ldr	r3, [r7, #4]
 800a082:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800a086:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800a08a:	d02e      	beq.n	800a0ea <HAL_RCCEx_PeriphCLKConfig+0x9d6>
 800a08c:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800a090:	d828      	bhi.n	800a0e4 <HAL_RCCEx_PeriphCLKConfig+0x9d0>
 800a092:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a096:	d02a      	beq.n	800a0ee <HAL_RCCEx_PeriphCLKConfig+0x9da>
 800a098:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a09c:	d822      	bhi.n	800a0e4 <HAL_RCCEx_PeriphCLKConfig+0x9d0>
 800a09e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800a0a2:	d026      	beq.n	800a0f2 <HAL_RCCEx_PeriphCLKConfig+0x9de>
 800a0a4:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800a0a8:	d81c      	bhi.n	800a0e4 <HAL_RCCEx_PeriphCLKConfig+0x9d0>
 800a0aa:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800a0ae:	d010      	beq.n	800a0d2 <HAL_RCCEx_PeriphCLKConfig+0x9be>
 800a0b0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800a0b4:	d816      	bhi.n	800a0e4 <HAL_RCCEx_PeriphCLKConfig+0x9d0>
 800a0b6:	2b00      	cmp	r3, #0
 800a0b8:	d01d      	beq.n	800a0f6 <HAL_RCCEx_PeriphCLKConfig+0x9e2>
 800a0ba:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800a0be:	d111      	bne.n	800a0e4 <HAL_RCCEx_PeriphCLKConfig+0x9d0>
 800a0c0:	687b      	ldr	r3, [r7, #4]
 800a0c2:	3304      	adds	r3, #4
 800a0c4:	2100      	movs	r1, #0
 800a0c6:	4618      	mov	r0, r3
 800a0c8:	f000 fd28 	bl	800ab1c <RCCEx_PLL2_Config>
 800a0cc:	4603      	mov	r3, r0
 800a0ce:	75fb      	strb	r3, [r7, #23]
 800a0d0:	e012      	b.n	800a0f8 <HAL_RCCEx_PeriphCLKConfig+0x9e4>
 800a0d2:	687b      	ldr	r3, [r7, #4]
 800a0d4:	3324      	adds	r3, #36	; 0x24
 800a0d6:	2102      	movs	r1, #2
 800a0d8:	4618      	mov	r0, r3
 800a0da:	f000 fdd1 	bl	800ac80 <RCCEx_PLL3_Config>
 800a0de:	4603      	mov	r3, r0
 800a0e0:	75fb      	strb	r3, [r7, #23]
 800a0e2:	e009      	b.n	800a0f8 <HAL_RCCEx_PeriphCLKConfig+0x9e4>
 800a0e4:	2301      	movs	r3, #1
 800a0e6:	75fb      	strb	r3, [r7, #23]
 800a0e8:	e006      	b.n	800a0f8 <HAL_RCCEx_PeriphCLKConfig+0x9e4>
 800a0ea:	bf00      	nop
 800a0ec:	e004      	b.n	800a0f8 <HAL_RCCEx_PeriphCLKConfig+0x9e4>
 800a0ee:	bf00      	nop
 800a0f0:	e002      	b.n	800a0f8 <HAL_RCCEx_PeriphCLKConfig+0x9e4>
 800a0f2:	bf00      	nop
 800a0f4:	e000      	b.n	800a0f8 <HAL_RCCEx_PeriphCLKConfig+0x9e4>
 800a0f6:	bf00      	nop
 800a0f8:	7dfb      	ldrb	r3, [r7, #23]
 800a0fa:	2b00      	cmp	r3, #0
 800a0fc:	d10a      	bne.n	800a114 <HAL_RCCEx_PeriphCLKConfig+0xa00>
 800a0fe:	4b2e      	ldr	r3, [pc, #184]	; (800a1b8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 800a100:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a102:	f023 42e0 	bic.w	r2, r3, #1879048192	; 0x70000000
 800a106:	687b      	ldr	r3, [r7, #4]
 800a108:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800a10c:	492a      	ldr	r1, [pc, #168]	; (800a1b8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 800a10e:	4313      	orrs	r3, r2
 800a110:	654b      	str	r3, [r1, #84]	; 0x54
 800a112:	e001      	b.n	800a118 <HAL_RCCEx_PeriphCLKConfig+0xa04>
 800a114:	7dfb      	ldrb	r3, [r7, #23]
 800a116:	75bb      	strb	r3, [r7, #22]
 800a118:	687b      	ldr	r3, [r7, #4]
 800a11a:	681b      	ldr	r3, [r3, #0]
 800a11c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a120:	2b00      	cmp	r3, #0
 800a122:	d04d      	beq.n	800a1c0 <HAL_RCCEx_PeriphCLKConfig+0xaac>
 800a124:	687b      	ldr	r3, [r7, #4]
 800a126:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800a12a:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 800a12e:	d02e      	beq.n	800a18e <HAL_RCCEx_PeriphCLKConfig+0xa7a>
 800a130:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 800a134:	d828      	bhi.n	800a188 <HAL_RCCEx_PeriphCLKConfig+0xa74>
 800a136:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800a13a:	d02a      	beq.n	800a192 <HAL_RCCEx_PeriphCLKConfig+0xa7e>
 800a13c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800a140:	d822      	bhi.n	800a188 <HAL_RCCEx_PeriphCLKConfig+0xa74>
 800a142:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800a146:	d026      	beq.n	800a196 <HAL_RCCEx_PeriphCLKConfig+0xa82>
 800a148:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800a14c:	d81c      	bhi.n	800a188 <HAL_RCCEx_PeriphCLKConfig+0xa74>
 800a14e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a152:	d010      	beq.n	800a176 <HAL_RCCEx_PeriphCLKConfig+0xa62>
 800a154:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a158:	d816      	bhi.n	800a188 <HAL_RCCEx_PeriphCLKConfig+0xa74>
 800a15a:	2b00      	cmp	r3, #0
 800a15c:	d01d      	beq.n	800a19a <HAL_RCCEx_PeriphCLKConfig+0xa86>
 800a15e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a162:	d111      	bne.n	800a188 <HAL_RCCEx_PeriphCLKConfig+0xa74>
 800a164:	687b      	ldr	r3, [r7, #4]
 800a166:	3304      	adds	r3, #4
 800a168:	2100      	movs	r1, #0
 800a16a:	4618      	mov	r0, r3
 800a16c:	f000 fcd6 	bl	800ab1c <RCCEx_PLL2_Config>
 800a170:	4603      	mov	r3, r0
 800a172:	75fb      	strb	r3, [r7, #23]
 800a174:	e012      	b.n	800a19c <HAL_RCCEx_PeriphCLKConfig+0xa88>
 800a176:	687b      	ldr	r3, [r7, #4]
 800a178:	3324      	adds	r3, #36	; 0x24
 800a17a:	2102      	movs	r1, #2
 800a17c:	4618      	mov	r0, r3
 800a17e:	f000 fd7f 	bl	800ac80 <RCCEx_PLL3_Config>
 800a182:	4603      	mov	r3, r0
 800a184:	75fb      	strb	r3, [r7, #23]
 800a186:	e009      	b.n	800a19c <HAL_RCCEx_PeriphCLKConfig+0xa88>
 800a188:	2301      	movs	r3, #1
 800a18a:	75fb      	strb	r3, [r7, #23]
 800a18c:	e006      	b.n	800a19c <HAL_RCCEx_PeriphCLKConfig+0xa88>
 800a18e:	bf00      	nop
 800a190:	e004      	b.n	800a19c <HAL_RCCEx_PeriphCLKConfig+0xa88>
 800a192:	bf00      	nop
 800a194:	e002      	b.n	800a19c <HAL_RCCEx_PeriphCLKConfig+0xa88>
 800a196:	bf00      	nop
 800a198:	e000      	b.n	800a19c <HAL_RCCEx_PeriphCLKConfig+0xa88>
 800a19a:	bf00      	nop
 800a19c:	7dfb      	ldrb	r3, [r7, #23]
 800a19e:	2b00      	cmp	r3, #0
 800a1a0:	d10c      	bne.n	800a1bc <HAL_RCCEx_PeriphCLKConfig+0xaa8>
 800a1a2:	4b05      	ldr	r3, [pc, #20]	; (800a1b8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 800a1a4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a1a6:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800a1aa:	687b      	ldr	r3, [r7, #4]
 800a1ac:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800a1b0:	4901      	ldr	r1, [pc, #4]	; (800a1b8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 800a1b2:	4313      	orrs	r3, r2
 800a1b4:	658b      	str	r3, [r1, #88]	; 0x58
 800a1b6:	e003      	b.n	800a1c0 <HAL_RCCEx_PeriphCLKConfig+0xaac>
 800a1b8:	58024400 	.word	0x58024400
 800a1bc:	7dfb      	ldrb	r3, [r7, #23]
 800a1be:	75bb      	strb	r3, [r7, #22]
 800a1c0:	687b      	ldr	r3, [r7, #4]
 800a1c2:	681b      	ldr	r3, [r3, #0]
 800a1c4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800a1c8:	2b00      	cmp	r3, #0
 800a1ca:	d04b      	beq.n	800a264 <HAL_RCCEx_PeriphCLKConfig+0xb50>
 800a1cc:	687b      	ldr	r3, [r7, #4]
 800a1ce:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800a1d2:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 800a1d6:	d02e      	beq.n	800a236 <HAL_RCCEx_PeriphCLKConfig+0xb22>
 800a1d8:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 800a1dc:	d828      	bhi.n	800a230 <HAL_RCCEx_PeriphCLKConfig+0xb1c>
 800a1de:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800a1e2:	d02a      	beq.n	800a23a <HAL_RCCEx_PeriphCLKConfig+0xb26>
 800a1e4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800a1e8:	d822      	bhi.n	800a230 <HAL_RCCEx_PeriphCLKConfig+0xb1c>
 800a1ea:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 800a1ee:	d026      	beq.n	800a23e <HAL_RCCEx_PeriphCLKConfig+0xb2a>
 800a1f0:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 800a1f4:	d81c      	bhi.n	800a230 <HAL_RCCEx_PeriphCLKConfig+0xb1c>
 800a1f6:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800a1fa:	d010      	beq.n	800a21e <HAL_RCCEx_PeriphCLKConfig+0xb0a>
 800a1fc:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800a200:	d816      	bhi.n	800a230 <HAL_RCCEx_PeriphCLKConfig+0xb1c>
 800a202:	2b00      	cmp	r3, #0
 800a204:	d01d      	beq.n	800a242 <HAL_RCCEx_PeriphCLKConfig+0xb2e>
 800a206:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800a20a:	d111      	bne.n	800a230 <HAL_RCCEx_PeriphCLKConfig+0xb1c>
 800a20c:	687b      	ldr	r3, [r7, #4]
 800a20e:	3304      	adds	r3, #4
 800a210:	2100      	movs	r1, #0
 800a212:	4618      	mov	r0, r3
 800a214:	f000 fc82 	bl	800ab1c <RCCEx_PLL2_Config>
 800a218:	4603      	mov	r3, r0
 800a21a:	75fb      	strb	r3, [r7, #23]
 800a21c:	e012      	b.n	800a244 <HAL_RCCEx_PeriphCLKConfig+0xb30>
 800a21e:	687b      	ldr	r3, [r7, #4]
 800a220:	3324      	adds	r3, #36	; 0x24
 800a222:	2102      	movs	r1, #2
 800a224:	4618      	mov	r0, r3
 800a226:	f000 fd2b 	bl	800ac80 <RCCEx_PLL3_Config>
 800a22a:	4603      	mov	r3, r0
 800a22c:	75fb      	strb	r3, [r7, #23]
 800a22e:	e009      	b.n	800a244 <HAL_RCCEx_PeriphCLKConfig+0xb30>
 800a230:	2301      	movs	r3, #1
 800a232:	75fb      	strb	r3, [r7, #23]
 800a234:	e006      	b.n	800a244 <HAL_RCCEx_PeriphCLKConfig+0xb30>
 800a236:	bf00      	nop
 800a238:	e004      	b.n	800a244 <HAL_RCCEx_PeriphCLKConfig+0xb30>
 800a23a:	bf00      	nop
 800a23c:	e002      	b.n	800a244 <HAL_RCCEx_PeriphCLKConfig+0xb30>
 800a23e:	bf00      	nop
 800a240:	e000      	b.n	800a244 <HAL_RCCEx_PeriphCLKConfig+0xb30>
 800a242:	bf00      	nop
 800a244:	7dfb      	ldrb	r3, [r7, #23]
 800a246:	2b00      	cmp	r3, #0
 800a248:	d10a      	bne.n	800a260 <HAL_RCCEx_PeriphCLKConfig+0xb4c>
 800a24a:	4b9d      	ldr	r3, [pc, #628]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a24c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a24e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800a252:	687b      	ldr	r3, [r7, #4]
 800a254:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800a258:	4999      	ldr	r1, [pc, #612]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a25a:	4313      	orrs	r3, r2
 800a25c:	658b      	str	r3, [r1, #88]	; 0x58
 800a25e:	e001      	b.n	800a264 <HAL_RCCEx_PeriphCLKConfig+0xb50>
 800a260:	7dfb      	ldrb	r3, [r7, #23]
 800a262:	75bb      	strb	r3, [r7, #22]
 800a264:	687b      	ldr	r3, [r7, #4]
 800a266:	681b      	ldr	r3, [r3, #0]
 800a268:	f003 0308 	and.w	r3, r3, #8
 800a26c:	2b00      	cmp	r3, #0
 800a26e:	d01a      	beq.n	800a2a6 <HAL_RCCEx_PeriphCLKConfig+0xb92>
 800a270:	687b      	ldr	r3, [r7, #4]
 800a272:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a276:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800a27a:	d10a      	bne.n	800a292 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 800a27c:	687b      	ldr	r3, [r7, #4]
 800a27e:	3324      	adds	r3, #36	; 0x24
 800a280:	2102      	movs	r1, #2
 800a282:	4618      	mov	r0, r3
 800a284:	f000 fcfc 	bl	800ac80 <RCCEx_PLL3_Config>
 800a288:	4603      	mov	r3, r0
 800a28a:	2b00      	cmp	r3, #0
 800a28c:	d001      	beq.n	800a292 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 800a28e:	2301      	movs	r3, #1
 800a290:	75bb      	strb	r3, [r7, #22]
 800a292:	4b8b      	ldr	r3, [pc, #556]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a294:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a296:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 800a29a:	687b      	ldr	r3, [r7, #4]
 800a29c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a2a0:	4987      	ldr	r1, [pc, #540]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a2a2:	4313      	orrs	r3, r2
 800a2a4:	654b      	str	r3, [r1, #84]	; 0x54
 800a2a6:	687b      	ldr	r3, [r7, #4]
 800a2a8:	681b      	ldr	r3, [r3, #0]
 800a2aa:	f003 0310 	and.w	r3, r3, #16
 800a2ae:	2b00      	cmp	r3, #0
 800a2b0:	d01a      	beq.n	800a2e8 <HAL_RCCEx_PeriphCLKConfig+0xbd4>
 800a2b2:	687b      	ldr	r3, [r7, #4]
 800a2b4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800a2b8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a2bc:	d10a      	bne.n	800a2d4 <HAL_RCCEx_PeriphCLKConfig+0xbc0>
 800a2be:	687b      	ldr	r3, [r7, #4]
 800a2c0:	3324      	adds	r3, #36	; 0x24
 800a2c2:	2102      	movs	r1, #2
 800a2c4:	4618      	mov	r0, r3
 800a2c6:	f000 fcdb 	bl	800ac80 <RCCEx_PLL3_Config>
 800a2ca:	4603      	mov	r3, r0
 800a2cc:	2b00      	cmp	r3, #0
 800a2ce:	d001      	beq.n	800a2d4 <HAL_RCCEx_PeriphCLKConfig+0xbc0>
 800a2d0:	2301      	movs	r3, #1
 800a2d2:	75bb      	strb	r3, [r7, #22]
 800a2d4:	4b7a      	ldr	r3, [pc, #488]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a2d6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a2d8:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800a2dc:	687b      	ldr	r3, [r7, #4]
 800a2de:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800a2e2:	4977      	ldr	r1, [pc, #476]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a2e4:	4313      	orrs	r3, r2
 800a2e6:	658b      	str	r3, [r1, #88]	; 0x58
 800a2e8:	687b      	ldr	r3, [r7, #4]
 800a2ea:	681b      	ldr	r3, [r3, #0]
 800a2ec:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800a2f0:	2b00      	cmp	r3, #0
 800a2f2:	d034      	beq.n	800a35e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 800a2f4:	687b      	ldr	r3, [r7, #4]
 800a2f6:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800a2fa:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800a2fe:	d01d      	beq.n	800a33c <HAL_RCCEx_PeriphCLKConfig+0xc28>
 800a300:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800a304:	d817      	bhi.n	800a336 <HAL_RCCEx_PeriphCLKConfig+0xc22>
 800a306:	2b00      	cmp	r3, #0
 800a308:	d003      	beq.n	800a312 <HAL_RCCEx_PeriphCLKConfig+0xbfe>
 800a30a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800a30e:	d009      	beq.n	800a324 <HAL_RCCEx_PeriphCLKConfig+0xc10>
 800a310:	e011      	b.n	800a336 <HAL_RCCEx_PeriphCLKConfig+0xc22>
 800a312:	687b      	ldr	r3, [r7, #4]
 800a314:	3304      	adds	r3, #4
 800a316:	2100      	movs	r1, #0
 800a318:	4618      	mov	r0, r3
 800a31a:	f000 fbff 	bl	800ab1c <RCCEx_PLL2_Config>
 800a31e:	4603      	mov	r3, r0
 800a320:	75fb      	strb	r3, [r7, #23]
 800a322:	e00c      	b.n	800a33e <HAL_RCCEx_PeriphCLKConfig+0xc2a>
 800a324:	687b      	ldr	r3, [r7, #4]
 800a326:	3324      	adds	r3, #36	; 0x24
 800a328:	2102      	movs	r1, #2
 800a32a:	4618      	mov	r0, r3
 800a32c:	f000 fca8 	bl	800ac80 <RCCEx_PLL3_Config>
 800a330:	4603      	mov	r3, r0
 800a332:	75fb      	strb	r3, [r7, #23]
 800a334:	e003      	b.n	800a33e <HAL_RCCEx_PeriphCLKConfig+0xc2a>
 800a336:	2301      	movs	r3, #1
 800a338:	75fb      	strb	r3, [r7, #23]
 800a33a:	e000      	b.n	800a33e <HAL_RCCEx_PeriphCLKConfig+0xc2a>
 800a33c:	bf00      	nop
 800a33e:	7dfb      	ldrb	r3, [r7, #23]
 800a340:	2b00      	cmp	r3, #0
 800a342:	d10a      	bne.n	800a35a <HAL_RCCEx_PeriphCLKConfig+0xc46>
 800a344:	4b5e      	ldr	r3, [pc, #376]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a346:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a348:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 800a34c:	687b      	ldr	r3, [r7, #4]
 800a34e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800a352:	495b      	ldr	r1, [pc, #364]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a354:	4313      	orrs	r3, r2
 800a356:	658b      	str	r3, [r1, #88]	; 0x58
 800a358:	e001      	b.n	800a35e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 800a35a:	7dfb      	ldrb	r3, [r7, #23]
 800a35c:	75bb      	strb	r3, [r7, #22]
 800a35e:	687b      	ldr	r3, [r7, #4]
 800a360:	681b      	ldr	r3, [r3, #0]
 800a362:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800a366:	2b00      	cmp	r3, #0
 800a368:	d033      	beq.n	800a3d2 <HAL_RCCEx_PeriphCLKConfig+0xcbe>
 800a36a:	687b      	ldr	r3, [r7, #4]
 800a36c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a370:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 800a374:	d01c      	beq.n	800a3b0 <HAL_RCCEx_PeriphCLKConfig+0xc9c>
 800a376:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 800a37a:	d816      	bhi.n	800a3aa <HAL_RCCEx_PeriphCLKConfig+0xc96>
 800a37c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800a380:	d003      	beq.n	800a38a <HAL_RCCEx_PeriphCLKConfig+0xc76>
 800a382:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 800a386:	d007      	beq.n	800a398 <HAL_RCCEx_PeriphCLKConfig+0xc84>
 800a388:	e00f      	b.n	800a3aa <HAL_RCCEx_PeriphCLKConfig+0xc96>
 800a38a:	4b4d      	ldr	r3, [pc, #308]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a38c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a38e:	4a4c      	ldr	r2, [pc, #304]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a390:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800a394:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a396:	e00c      	b.n	800a3b2 <HAL_RCCEx_PeriphCLKConfig+0xc9e>
 800a398:	687b      	ldr	r3, [r7, #4]
 800a39a:	3324      	adds	r3, #36	; 0x24
 800a39c:	2101      	movs	r1, #1
 800a39e:	4618      	mov	r0, r3
 800a3a0:	f000 fc6e 	bl	800ac80 <RCCEx_PLL3_Config>
 800a3a4:	4603      	mov	r3, r0
 800a3a6:	75fb      	strb	r3, [r7, #23]
 800a3a8:	e003      	b.n	800a3b2 <HAL_RCCEx_PeriphCLKConfig+0xc9e>
 800a3aa:	2301      	movs	r3, #1
 800a3ac:	75fb      	strb	r3, [r7, #23]
 800a3ae:	e000      	b.n	800a3b2 <HAL_RCCEx_PeriphCLKConfig+0xc9e>
 800a3b0:	bf00      	nop
 800a3b2:	7dfb      	ldrb	r3, [r7, #23]
 800a3b4:	2b00      	cmp	r3, #0
 800a3b6:	d10a      	bne.n	800a3ce <HAL_RCCEx_PeriphCLKConfig+0xcba>
 800a3b8:	4b41      	ldr	r3, [pc, #260]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a3ba:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a3bc:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 800a3c0:	687b      	ldr	r3, [r7, #4]
 800a3c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a3c6:	493e      	ldr	r1, [pc, #248]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a3c8:	4313      	orrs	r3, r2
 800a3ca:	654b      	str	r3, [r1, #84]	; 0x54
 800a3cc:	e001      	b.n	800a3d2 <HAL_RCCEx_PeriphCLKConfig+0xcbe>
 800a3ce:	7dfb      	ldrb	r3, [r7, #23]
 800a3d0:	75bb      	strb	r3, [r7, #22]
 800a3d2:	687b      	ldr	r3, [r7, #4]
 800a3d4:	681b      	ldr	r3, [r3, #0]
 800a3d6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800a3da:	2b00      	cmp	r3, #0
 800a3dc:	d029      	beq.n	800a432 <HAL_RCCEx_PeriphCLKConfig+0xd1e>
 800a3de:	687b      	ldr	r3, [r7, #4]
 800a3e0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a3e2:	2b00      	cmp	r3, #0
 800a3e4:	d003      	beq.n	800a3ee <HAL_RCCEx_PeriphCLKConfig+0xcda>
 800a3e6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800a3ea:	d007      	beq.n	800a3fc <HAL_RCCEx_PeriphCLKConfig+0xce8>
 800a3ec:	e00f      	b.n	800a40e <HAL_RCCEx_PeriphCLKConfig+0xcfa>
 800a3ee:	4b34      	ldr	r3, [pc, #208]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a3f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a3f2:	4a33      	ldr	r2, [pc, #204]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a3f4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800a3f8:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a3fa:	e00b      	b.n	800a414 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 800a3fc:	687b      	ldr	r3, [r7, #4]
 800a3fe:	3304      	adds	r3, #4
 800a400:	2102      	movs	r1, #2
 800a402:	4618      	mov	r0, r3
 800a404:	f000 fb8a 	bl	800ab1c <RCCEx_PLL2_Config>
 800a408:	4603      	mov	r3, r0
 800a40a:	75fb      	strb	r3, [r7, #23]
 800a40c:	e002      	b.n	800a414 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 800a40e:	2301      	movs	r3, #1
 800a410:	75fb      	strb	r3, [r7, #23]
 800a412:	bf00      	nop
 800a414:	7dfb      	ldrb	r3, [r7, #23]
 800a416:	2b00      	cmp	r3, #0
 800a418:	d109      	bne.n	800a42e <HAL_RCCEx_PeriphCLKConfig+0xd1a>
 800a41a:	4b29      	ldr	r3, [pc, #164]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a41c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a41e:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800a422:	687b      	ldr	r3, [r7, #4]
 800a424:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a426:	4926      	ldr	r1, [pc, #152]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a428:	4313      	orrs	r3, r2
 800a42a:	64cb      	str	r3, [r1, #76]	; 0x4c
 800a42c:	e001      	b.n	800a432 <HAL_RCCEx_PeriphCLKConfig+0xd1e>
 800a42e:	7dfb      	ldrb	r3, [r7, #23]
 800a430:	75bb      	strb	r3, [r7, #22]
 800a432:	687b      	ldr	r3, [r7, #4]
 800a434:	681b      	ldr	r3, [r3, #0]
 800a436:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a43a:	2b00      	cmp	r3, #0
 800a43c:	d00a      	beq.n	800a454 <HAL_RCCEx_PeriphCLKConfig+0xd40>
 800a43e:	687b      	ldr	r3, [r7, #4]
 800a440:	3324      	adds	r3, #36	; 0x24
 800a442:	2102      	movs	r1, #2
 800a444:	4618      	mov	r0, r3
 800a446:	f000 fc1b 	bl	800ac80 <RCCEx_PLL3_Config>
 800a44a:	4603      	mov	r3, r0
 800a44c:	2b00      	cmp	r3, #0
 800a44e:	d001      	beq.n	800a454 <HAL_RCCEx_PeriphCLKConfig+0xd40>
 800a450:	2301      	movs	r3, #1
 800a452:	75bb      	strb	r3, [r7, #22]
 800a454:	687b      	ldr	r3, [r7, #4]
 800a456:	681b      	ldr	r3, [r3, #0]
 800a458:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800a45c:	2b00      	cmp	r3, #0
 800a45e:	d033      	beq.n	800a4c8 <HAL_RCCEx_PeriphCLKConfig+0xdb4>
 800a460:	687b      	ldr	r3, [r7, #4]
 800a462:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a464:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800a468:	d017      	beq.n	800a49a <HAL_RCCEx_PeriphCLKConfig+0xd86>
 800a46a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800a46e:	d811      	bhi.n	800a494 <HAL_RCCEx_PeriphCLKConfig+0xd80>
 800a470:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a474:	d013      	beq.n	800a49e <HAL_RCCEx_PeriphCLKConfig+0xd8a>
 800a476:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a47a:	d80b      	bhi.n	800a494 <HAL_RCCEx_PeriphCLKConfig+0xd80>
 800a47c:	2b00      	cmp	r3, #0
 800a47e:	d010      	beq.n	800a4a2 <HAL_RCCEx_PeriphCLKConfig+0xd8e>
 800a480:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a484:	d106      	bne.n	800a494 <HAL_RCCEx_PeriphCLKConfig+0xd80>
 800a486:	4b0e      	ldr	r3, [pc, #56]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a488:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a48a:	4a0d      	ldr	r2, [pc, #52]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a48c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800a490:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a492:	e007      	b.n	800a4a4 <HAL_RCCEx_PeriphCLKConfig+0xd90>
 800a494:	2301      	movs	r3, #1
 800a496:	75fb      	strb	r3, [r7, #23]
 800a498:	e004      	b.n	800a4a4 <HAL_RCCEx_PeriphCLKConfig+0xd90>
 800a49a:	bf00      	nop
 800a49c:	e002      	b.n	800a4a4 <HAL_RCCEx_PeriphCLKConfig+0xd90>
 800a49e:	bf00      	nop
 800a4a0:	e000      	b.n	800a4a4 <HAL_RCCEx_PeriphCLKConfig+0xd90>
 800a4a2:	bf00      	nop
 800a4a4:	7dfb      	ldrb	r3, [r7, #23]
 800a4a6:	2b00      	cmp	r3, #0
 800a4a8:	d10c      	bne.n	800a4c4 <HAL_RCCEx_PeriphCLKConfig+0xdb0>
 800a4aa:	4b05      	ldr	r3, [pc, #20]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a4ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a4ae:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800a4b2:	687b      	ldr	r3, [r7, #4]
 800a4b4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a4b6:	4902      	ldr	r1, [pc, #8]	; (800a4c0 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 800a4b8:	4313      	orrs	r3, r2
 800a4ba:	654b      	str	r3, [r1, #84]	; 0x54
 800a4bc:	e004      	b.n	800a4c8 <HAL_RCCEx_PeriphCLKConfig+0xdb4>
 800a4be:	bf00      	nop
 800a4c0:	58024400 	.word	0x58024400
 800a4c4:	7dfb      	ldrb	r3, [r7, #23]
 800a4c6:	75bb      	strb	r3, [r7, #22]
 800a4c8:	687b      	ldr	r3, [r7, #4]
 800a4ca:	681b      	ldr	r3, [r3, #0]
 800a4cc:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800a4d0:	2b00      	cmp	r3, #0
 800a4d2:	d008      	beq.n	800a4e6 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 800a4d4:	4b31      	ldr	r3, [pc, #196]	; (800a59c <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 800a4d6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a4d8:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 800a4dc:	687b      	ldr	r3, [r7, #4]
 800a4de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800a4e0:	492e      	ldr	r1, [pc, #184]	; (800a59c <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 800a4e2:	4313      	orrs	r3, r2
 800a4e4:	650b      	str	r3, [r1, #80]	; 0x50
 800a4e6:	687b      	ldr	r3, [r7, #4]
 800a4e8:	681b      	ldr	r3, [r3, #0]
 800a4ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a4ee:	2b00      	cmp	r3, #0
 800a4f0:	d009      	beq.n	800a506 <HAL_RCCEx_PeriphCLKConfig+0xdf2>
 800a4f2:	4b2a      	ldr	r3, [pc, #168]	; (800a59c <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 800a4f4:	691b      	ldr	r3, [r3, #16]
 800a4f6:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800a4fa:	687b      	ldr	r3, [r7, #4]
 800a4fc:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800a500:	4926      	ldr	r1, [pc, #152]	; (800a59c <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 800a502:	4313      	orrs	r3, r2
 800a504:	610b      	str	r3, [r1, #16]
 800a506:	687b      	ldr	r3, [r7, #4]
 800a508:	681b      	ldr	r3, [r3, #0]
 800a50a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800a50e:	2b00      	cmp	r3, #0
 800a510:	d008      	beq.n	800a524 <HAL_RCCEx_PeriphCLKConfig+0xe10>
 800a512:	4b22      	ldr	r3, [pc, #136]	; (800a59c <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 800a514:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a516:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 800a51a:	687b      	ldr	r3, [r7, #4]
 800a51c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800a51e:	491f      	ldr	r1, [pc, #124]	; (800a59c <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 800a520:	4313      	orrs	r3, r2
 800a522:	650b      	str	r3, [r1, #80]	; 0x50
 800a524:	687b      	ldr	r3, [r7, #4]
 800a526:	681b      	ldr	r3, [r3, #0]
 800a528:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 800a52c:	2b00      	cmp	r3, #0
 800a52e:	d00d      	beq.n	800a54c <HAL_RCCEx_PeriphCLKConfig+0xe38>
 800a530:	4b1a      	ldr	r3, [pc, #104]	; (800a59c <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 800a532:	691b      	ldr	r3, [r3, #16]
 800a534:	4a19      	ldr	r2, [pc, #100]	; (800a59c <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 800a536:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800a53a:	6113      	str	r3, [r2, #16]
 800a53c:	4b17      	ldr	r3, [pc, #92]	; (800a59c <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 800a53e:	691a      	ldr	r2, [r3, #16]
 800a540:	687b      	ldr	r3, [r7, #4]
 800a542:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800a546:	4915      	ldr	r1, [pc, #84]	; (800a59c <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 800a548:	4313      	orrs	r3, r2
 800a54a:	610b      	str	r3, [r1, #16]
 800a54c:	687b      	ldr	r3, [r7, #4]
 800a54e:	681b      	ldr	r3, [r3, #0]
 800a550:	2b00      	cmp	r3, #0
 800a552:	da08      	bge.n	800a566 <HAL_RCCEx_PeriphCLKConfig+0xe52>
 800a554:	4b11      	ldr	r3, [pc, #68]	; (800a59c <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 800a556:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a558:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 800a55c:	687b      	ldr	r3, [r7, #4]
 800a55e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a560:	490e      	ldr	r1, [pc, #56]	; (800a59c <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 800a562:	4313      	orrs	r3, r2
 800a564:	64cb      	str	r3, [r1, #76]	; 0x4c
 800a566:	687b      	ldr	r3, [r7, #4]
 800a568:	681b      	ldr	r3, [r3, #0]
 800a56a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800a56e:	2b00      	cmp	r3, #0
 800a570:	d009      	beq.n	800a586 <HAL_RCCEx_PeriphCLKConfig+0xe72>
 800a572:	4b0a      	ldr	r3, [pc, #40]	; (800a59c <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 800a574:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a576:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 800a57a:	687b      	ldr	r3, [r7, #4]
 800a57c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a580:	4906      	ldr	r1, [pc, #24]	; (800a59c <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 800a582:	4313      	orrs	r3, r2
 800a584:	654b      	str	r3, [r1, #84]	; 0x54
 800a586:	7dbb      	ldrb	r3, [r7, #22]
 800a588:	2b00      	cmp	r3, #0
 800a58a:	d101      	bne.n	800a590 <HAL_RCCEx_PeriphCLKConfig+0xe7c>
 800a58c:	2300      	movs	r3, #0
 800a58e:	e000      	b.n	800a592 <HAL_RCCEx_PeriphCLKConfig+0xe7e>
 800a590:	2301      	movs	r3, #1
 800a592:	4618      	mov	r0, r3
 800a594:	3718      	adds	r7, #24
 800a596:	46bd      	mov	sp, r7
 800a598:	bd80      	pop	{r7, pc}
 800a59a:	bf00      	nop
 800a59c:	58024400 	.word	0x58024400

0800a5a0 <HAL_RCCEx_GetD3PCLK1Freq>:
 800a5a0:	b580      	push	{r7, lr}
 800a5a2:	af00      	add	r7, sp, #0
 800a5a4:	f7ff f85a 	bl	800965c <HAL_RCC_GetHCLKFreq>
 800a5a8:	4602      	mov	r2, r0
 800a5aa:	4b06      	ldr	r3, [pc, #24]	; (800a5c4 <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 800a5ac:	6a1b      	ldr	r3, [r3, #32]
 800a5ae:	091b      	lsrs	r3, r3, #4
 800a5b0:	f003 0307 	and.w	r3, r3, #7
 800a5b4:	4904      	ldr	r1, [pc, #16]	; (800a5c8 <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 800a5b6:	5ccb      	ldrb	r3, [r1, r3]
 800a5b8:	f003 031f 	and.w	r3, r3, #31
 800a5bc:	fa22 f303 	lsr.w	r3, r2, r3
 800a5c0:	4618      	mov	r0, r3
 800a5c2:	bd80      	pop	{r7, pc}
 800a5c4:	58024400 	.word	0x58024400
 800a5c8:	08012be0 	.word	0x08012be0

0800a5cc <HAL_RCCEx_GetPLL2ClockFreq>:
 800a5cc:	b480      	push	{r7}
 800a5ce:	b089      	sub	sp, #36	; 0x24
 800a5d0:	af00      	add	r7, sp, #0
 800a5d2:	6078      	str	r0, [r7, #4]
 800a5d4:	4ba1      	ldr	r3, [pc, #644]	; (800a85c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a5d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a5d8:	f003 0303 	and.w	r3, r3, #3
 800a5dc:	61bb      	str	r3, [r7, #24]
 800a5de:	4b9f      	ldr	r3, [pc, #636]	; (800a85c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a5e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a5e2:	0b1b      	lsrs	r3, r3, #12
 800a5e4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800a5e8:	617b      	str	r3, [r7, #20]
 800a5ea:	4b9c      	ldr	r3, [pc, #624]	; (800a85c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a5ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5ee:	091b      	lsrs	r3, r3, #4
 800a5f0:	f003 0301 	and.w	r3, r3, #1
 800a5f4:	613b      	str	r3, [r7, #16]
 800a5f6:	4b99      	ldr	r3, [pc, #612]	; (800a85c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a5f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a5fa:	08db      	lsrs	r3, r3, #3
 800a5fc:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800a600:	693a      	ldr	r2, [r7, #16]
 800a602:	fb02 f303 	mul.w	r3, r2, r3
 800a606:	ee07 3a90 	vmov	s15, r3
 800a60a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a60e:	edc7 7a03 	vstr	s15, [r7, #12]
 800a612:	697b      	ldr	r3, [r7, #20]
 800a614:	2b00      	cmp	r3, #0
 800a616:	f000 8111 	beq.w	800a83c <HAL_RCCEx_GetPLL2ClockFreq+0x270>
 800a61a:	69bb      	ldr	r3, [r7, #24]
 800a61c:	2b02      	cmp	r3, #2
 800a61e:	f000 8083 	beq.w	800a728 <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 800a622:	69bb      	ldr	r3, [r7, #24]
 800a624:	2b02      	cmp	r3, #2
 800a626:	f200 80a1 	bhi.w	800a76c <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 800a62a:	69bb      	ldr	r3, [r7, #24]
 800a62c:	2b00      	cmp	r3, #0
 800a62e:	d003      	beq.n	800a638 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 800a630:	69bb      	ldr	r3, [r7, #24]
 800a632:	2b01      	cmp	r3, #1
 800a634:	d056      	beq.n	800a6e4 <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 800a636:	e099      	b.n	800a76c <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 800a638:	4b88      	ldr	r3, [pc, #544]	; (800a85c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a63a:	681b      	ldr	r3, [r3, #0]
 800a63c:	f003 0320 	and.w	r3, r3, #32
 800a640:	2b00      	cmp	r3, #0
 800a642:	d02d      	beq.n	800a6a0 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
 800a644:	4b85      	ldr	r3, [pc, #532]	; (800a85c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a646:	681b      	ldr	r3, [r3, #0]
 800a648:	08db      	lsrs	r3, r3, #3
 800a64a:	f003 0303 	and.w	r3, r3, #3
 800a64e:	4a84      	ldr	r2, [pc, #528]	; (800a860 <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 800a650:	fa22 f303 	lsr.w	r3, r2, r3
 800a654:	60bb      	str	r3, [r7, #8]
 800a656:	68bb      	ldr	r3, [r7, #8]
 800a658:	ee07 3a90 	vmov	s15, r3
 800a65c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a660:	697b      	ldr	r3, [r7, #20]
 800a662:	ee07 3a90 	vmov	s15, r3
 800a666:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a66a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a66e:	4b7b      	ldr	r3, [pc, #492]	; (800a85c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a670:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a672:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a676:	ee07 3a90 	vmov	s15, r3
 800a67a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a67e:	ed97 6a03 	vldr	s12, [r7, #12]
 800a682:	eddf 5a78 	vldr	s11, [pc, #480]	; 800a864 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800a686:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a68a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a68e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a692:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a696:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a69a:	edc7 7a07 	vstr	s15, [r7, #28]
 800a69e:	e087      	b.n	800a7b0 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 800a6a0:	697b      	ldr	r3, [r7, #20]
 800a6a2:	ee07 3a90 	vmov	s15, r3
 800a6a6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a6aa:	eddf 6a6f 	vldr	s13, [pc, #444]	; 800a868 <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 800a6ae:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a6b2:	4b6a      	ldr	r3, [pc, #424]	; (800a85c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a6b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a6b6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a6ba:	ee07 3a90 	vmov	s15, r3
 800a6be:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a6c2:	ed97 6a03 	vldr	s12, [r7, #12]
 800a6c6:	eddf 5a67 	vldr	s11, [pc, #412]	; 800a864 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800a6ca:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a6ce:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a6d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a6d6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a6da:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a6de:	edc7 7a07 	vstr	s15, [r7, #28]
 800a6e2:	e065      	b.n	800a7b0 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 800a6e4:	697b      	ldr	r3, [r7, #20]
 800a6e6:	ee07 3a90 	vmov	s15, r3
 800a6ea:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a6ee:	eddf 6a5f 	vldr	s13, [pc, #380]	; 800a86c <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 800a6f2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a6f6:	4b59      	ldr	r3, [pc, #356]	; (800a85c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a6f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a6fa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a6fe:	ee07 3a90 	vmov	s15, r3
 800a702:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a706:	ed97 6a03 	vldr	s12, [r7, #12]
 800a70a:	eddf 5a56 	vldr	s11, [pc, #344]	; 800a864 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800a70e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a712:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a716:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a71a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a71e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a722:	edc7 7a07 	vstr	s15, [r7, #28]
 800a726:	e043      	b.n	800a7b0 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 800a728:	697b      	ldr	r3, [r7, #20]
 800a72a:	ee07 3a90 	vmov	s15, r3
 800a72e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a732:	eddf 6a4f 	vldr	s13, [pc, #316]	; 800a870 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 800a736:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a73a:	4b48      	ldr	r3, [pc, #288]	; (800a85c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a73c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a73e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a742:	ee07 3a90 	vmov	s15, r3
 800a746:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a74a:	ed97 6a03 	vldr	s12, [r7, #12]
 800a74e:	eddf 5a45 	vldr	s11, [pc, #276]	; 800a864 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800a752:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a756:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a75a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a75e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a762:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a766:	edc7 7a07 	vstr	s15, [r7, #28]
 800a76a:	e021      	b.n	800a7b0 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 800a76c:	697b      	ldr	r3, [r7, #20]
 800a76e:	ee07 3a90 	vmov	s15, r3
 800a772:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a776:	eddf 6a3d 	vldr	s13, [pc, #244]	; 800a86c <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 800a77a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a77e:	4b37      	ldr	r3, [pc, #220]	; (800a85c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a780:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a782:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a786:	ee07 3a90 	vmov	s15, r3
 800a78a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a78e:	ed97 6a03 	vldr	s12, [r7, #12]
 800a792:	eddf 5a34 	vldr	s11, [pc, #208]	; 800a864 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 800a796:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a79a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a79e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a7a2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a7a6:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a7aa:	edc7 7a07 	vstr	s15, [r7, #28]
 800a7ae:	bf00      	nop
 800a7b0:	4b2a      	ldr	r3, [pc, #168]	; (800a85c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a7b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a7b4:	0a5b      	lsrs	r3, r3, #9
 800a7b6:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a7ba:	ee07 3a90 	vmov	s15, r3
 800a7be:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a7c2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a7c6:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a7ca:	edd7 6a07 	vldr	s13, [r7, #28]
 800a7ce:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a7d2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a7d6:	ee17 2a90 	vmov	r2, s15
 800a7da:	687b      	ldr	r3, [r7, #4]
 800a7dc:	601a      	str	r2, [r3, #0]
 800a7de:	4b1f      	ldr	r3, [pc, #124]	; (800a85c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a7e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a7e2:	0c1b      	lsrs	r3, r3, #16
 800a7e4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a7e8:	ee07 3a90 	vmov	s15, r3
 800a7ec:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a7f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a7f4:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a7f8:	edd7 6a07 	vldr	s13, [r7, #28]
 800a7fc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a800:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a804:	ee17 2a90 	vmov	r2, s15
 800a808:	687b      	ldr	r3, [r7, #4]
 800a80a:	605a      	str	r2, [r3, #4]
 800a80c:	4b13      	ldr	r3, [pc, #76]	; (800a85c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a80e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a810:	0e1b      	lsrs	r3, r3, #24
 800a812:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a816:	ee07 3a90 	vmov	s15, r3
 800a81a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a81e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a822:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a826:	edd7 6a07 	vldr	s13, [r7, #28]
 800a82a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a82e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a832:	ee17 2a90 	vmov	r2, s15
 800a836:	687b      	ldr	r3, [r7, #4]
 800a838:	609a      	str	r2, [r3, #8]
 800a83a:	e008      	b.n	800a84e <HAL_RCCEx_GetPLL2ClockFreq+0x282>
 800a83c:	687b      	ldr	r3, [r7, #4]
 800a83e:	2200      	movs	r2, #0
 800a840:	601a      	str	r2, [r3, #0]
 800a842:	687b      	ldr	r3, [r7, #4]
 800a844:	2200      	movs	r2, #0
 800a846:	605a      	str	r2, [r3, #4]
 800a848:	687b      	ldr	r3, [r7, #4]
 800a84a:	2200      	movs	r2, #0
 800a84c:	609a      	str	r2, [r3, #8]
 800a84e:	bf00      	nop
 800a850:	3724      	adds	r7, #36	; 0x24
 800a852:	46bd      	mov	sp, r7
 800a854:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a858:	4770      	bx	lr
 800a85a:	bf00      	nop
 800a85c:	58024400 	.word	0x58024400
 800a860:	03d09000 	.word	0x03d09000
 800a864:	46000000 	.word	0x46000000
 800a868:	4c742400 	.word	0x4c742400
 800a86c:	4a742400 	.word	0x4a742400
 800a870:	4bbebc20 	.word	0x4bbebc20

0800a874 <HAL_RCCEx_GetPLL3ClockFreq>:
 800a874:	b480      	push	{r7}
 800a876:	b089      	sub	sp, #36	; 0x24
 800a878:	af00      	add	r7, sp, #0
 800a87a:	6078      	str	r0, [r7, #4]
 800a87c:	4ba1      	ldr	r3, [pc, #644]	; (800ab04 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a87e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a880:	f003 0303 	and.w	r3, r3, #3
 800a884:	61bb      	str	r3, [r7, #24]
 800a886:	4b9f      	ldr	r3, [pc, #636]	; (800ab04 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a888:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a88a:	0d1b      	lsrs	r3, r3, #20
 800a88c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800a890:	617b      	str	r3, [r7, #20]
 800a892:	4b9c      	ldr	r3, [pc, #624]	; (800ab04 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a894:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a896:	0a1b      	lsrs	r3, r3, #8
 800a898:	f003 0301 	and.w	r3, r3, #1
 800a89c:	613b      	str	r3, [r7, #16]
 800a89e:	4b99      	ldr	r3, [pc, #612]	; (800ab04 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a8a0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a8a2:	08db      	lsrs	r3, r3, #3
 800a8a4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800a8a8:	693a      	ldr	r2, [r7, #16]
 800a8aa:	fb02 f303 	mul.w	r3, r2, r3
 800a8ae:	ee07 3a90 	vmov	s15, r3
 800a8b2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a8b6:	edc7 7a03 	vstr	s15, [r7, #12]
 800a8ba:	697b      	ldr	r3, [r7, #20]
 800a8bc:	2b00      	cmp	r3, #0
 800a8be:	f000 8111 	beq.w	800aae4 <HAL_RCCEx_GetPLL3ClockFreq+0x270>
 800a8c2:	69bb      	ldr	r3, [r7, #24]
 800a8c4:	2b02      	cmp	r3, #2
 800a8c6:	f000 8083 	beq.w	800a9d0 <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 800a8ca:	69bb      	ldr	r3, [r7, #24]
 800a8cc:	2b02      	cmp	r3, #2
 800a8ce:	f200 80a1 	bhi.w	800aa14 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 800a8d2:	69bb      	ldr	r3, [r7, #24]
 800a8d4:	2b00      	cmp	r3, #0
 800a8d6:	d003      	beq.n	800a8e0 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 800a8d8:	69bb      	ldr	r3, [r7, #24]
 800a8da:	2b01      	cmp	r3, #1
 800a8dc:	d056      	beq.n	800a98c <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 800a8de:	e099      	b.n	800aa14 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 800a8e0:	4b88      	ldr	r3, [pc, #544]	; (800ab04 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a8e2:	681b      	ldr	r3, [r3, #0]
 800a8e4:	f003 0320 	and.w	r3, r3, #32
 800a8e8:	2b00      	cmp	r3, #0
 800a8ea:	d02d      	beq.n	800a948 <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
 800a8ec:	4b85      	ldr	r3, [pc, #532]	; (800ab04 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a8ee:	681b      	ldr	r3, [r3, #0]
 800a8f0:	08db      	lsrs	r3, r3, #3
 800a8f2:	f003 0303 	and.w	r3, r3, #3
 800a8f6:	4a84      	ldr	r2, [pc, #528]	; (800ab08 <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 800a8f8:	fa22 f303 	lsr.w	r3, r2, r3
 800a8fc:	60bb      	str	r3, [r7, #8]
 800a8fe:	68bb      	ldr	r3, [r7, #8]
 800a900:	ee07 3a90 	vmov	s15, r3
 800a904:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a908:	697b      	ldr	r3, [r7, #20]
 800a90a:	ee07 3a90 	vmov	s15, r3
 800a90e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a912:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a916:	4b7b      	ldr	r3, [pc, #492]	; (800ab04 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a918:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a91a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a91e:	ee07 3a90 	vmov	s15, r3
 800a922:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a926:	ed97 6a03 	vldr	s12, [r7, #12]
 800a92a:	eddf 5a78 	vldr	s11, [pc, #480]	; 800ab0c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a92e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a932:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a936:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a93a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a93e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a942:	edc7 7a07 	vstr	s15, [r7, #28]
 800a946:	e087      	b.n	800aa58 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800a948:	697b      	ldr	r3, [r7, #20]
 800a94a:	ee07 3a90 	vmov	s15, r3
 800a94e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a952:	eddf 6a6f 	vldr	s13, [pc, #444]	; 800ab10 <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 800a956:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a95a:	4b6a      	ldr	r3, [pc, #424]	; (800ab04 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a95c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a95e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a962:	ee07 3a90 	vmov	s15, r3
 800a966:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a96a:	ed97 6a03 	vldr	s12, [r7, #12]
 800a96e:	eddf 5a67 	vldr	s11, [pc, #412]	; 800ab0c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a972:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a976:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a97a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a97e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a982:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a986:	edc7 7a07 	vstr	s15, [r7, #28]
 800a98a:	e065      	b.n	800aa58 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800a98c:	697b      	ldr	r3, [r7, #20]
 800a98e:	ee07 3a90 	vmov	s15, r3
 800a992:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a996:	eddf 6a5f 	vldr	s13, [pc, #380]	; 800ab14 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800a99a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a99e:	4b59      	ldr	r3, [pc, #356]	; (800ab04 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a9a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a9a2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a9a6:	ee07 3a90 	vmov	s15, r3
 800a9aa:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a9ae:	ed97 6a03 	vldr	s12, [r7, #12]
 800a9b2:	eddf 5a56 	vldr	s11, [pc, #344]	; 800ab0c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a9b6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a9ba:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a9be:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a9c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a9c6:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a9ca:	edc7 7a07 	vstr	s15, [r7, #28]
 800a9ce:	e043      	b.n	800aa58 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800a9d0:	697b      	ldr	r3, [r7, #20]
 800a9d2:	ee07 3a90 	vmov	s15, r3
 800a9d6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a9da:	eddf 6a4f 	vldr	s13, [pc, #316]	; 800ab18 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 800a9de:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a9e2:	4b48      	ldr	r3, [pc, #288]	; (800ab04 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a9e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a9e6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a9ea:	ee07 3a90 	vmov	s15, r3
 800a9ee:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a9f2:	ed97 6a03 	vldr	s12, [r7, #12]
 800a9f6:	eddf 5a45 	vldr	s11, [pc, #276]	; 800ab0c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a9fa:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a9fe:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800aa02:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800aa06:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800aa0a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800aa0e:	edc7 7a07 	vstr	s15, [r7, #28]
 800aa12:	e021      	b.n	800aa58 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800aa14:	697b      	ldr	r3, [r7, #20]
 800aa16:	ee07 3a90 	vmov	s15, r3
 800aa1a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800aa1e:	eddf 6a3d 	vldr	s13, [pc, #244]	; 800ab14 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800aa22:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800aa26:	4b37      	ldr	r3, [pc, #220]	; (800ab04 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800aa28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800aa2a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800aa2e:	ee07 3a90 	vmov	s15, r3
 800aa32:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800aa36:	ed97 6a03 	vldr	s12, [r7, #12]
 800aa3a:	eddf 5a34 	vldr	s11, [pc, #208]	; 800ab0c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800aa3e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800aa42:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800aa46:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800aa4a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800aa4e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800aa52:	edc7 7a07 	vstr	s15, [r7, #28]
 800aa56:	bf00      	nop
 800aa58:	4b2a      	ldr	r3, [pc, #168]	; (800ab04 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800aa5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800aa5c:	0a5b      	lsrs	r3, r3, #9
 800aa5e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800aa62:	ee07 3a90 	vmov	s15, r3
 800aa66:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800aa6a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800aa6e:	ee37 7a87 	vadd.f32	s14, s15, s14
 800aa72:	edd7 6a07 	vldr	s13, [r7, #28]
 800aa76:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800aa7a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800aa7e:	ee17 2a90 	vmov	r2, s15
 800aa82:	687b      	ldr	r3, [r7, #4]
 800aa84:	601a      	str	r2, [r3, #0]
 800aa86:	4b1f      	ldr	r3, [pc, #124]	; (800ab04 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800aa88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800aa8a:	0c1b      	lsrs	r3, r3, #16
 800aa8c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800aa90:	ee07 3a90 	vmov	s15, r3
 800aa94:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800aa98:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800aa9c:	ee37 7a87 	vadd.f32	s14, s15, s14
 800aaa0:	edd7 6a07 	vldr	s13, [r7, #28]
 800aaa4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800aaa8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800aaac:	ee17 2a90 	vmov	r2, s15
 800aab0:	687b      	ldr	r3, [r7, #4]
 800aab2:	605a      	str	r2, [r3, #4]
 800aab4:	4b13      	ldr	r3, [pc, #76]	; (800ab04 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800aab6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800aab8:	0e1b      	lsrs	r3, r3, #24
 800aaba:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800aabe:	ee07 3a90 	vmov	s15, r3
 800aac2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800aac6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800aaca:	ee37 7a87 	vadd.f32	s14, s15, s14
 800aace:	edd7 6a07 	vldr	s13, [r7, #28]
 800aad2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800aad6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800aada:	ee17 2a90 	vmov	r2, s15
 800aade:	687b      	ldr	r3, [r7, #4]
 800aae0:	609a      	str	r2, [r3, #8]
 800aae2:	e008      	b.n	800aaf6 <HAL_RCCEx_GetPLL3ClockFreq+0x282>
 800aae4:	687b      	ldr	r3, [r7, #4]
 800aae6:	2200      	movs	r2, #0
 800aae8:	601a      	str	r2, [r3, #0]
 800aaea:	687b      	ldr	r3, [r7, #4]
 800aaec:	2200      	movs	r2, #0
 800aaee:	605a      	str	r2, [r3, #4]
 800aaf0:	687b      	ldr	r3, [r7, #4]
 800aaf2:	2200      	movs	r2, #0
 800aaf4:	609a      	str	r2, [r3, #8]
 800aaf6:	bf00      	nop
 800aaf8:	3724      	adds	r7, #36	; 0x24
 800aafa:	46bd      	mov	sp, r7
 800aafc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab00:	4770      	bx	lr
 800ab02:	bf00      	nop
 800ab04:	58024400 	.word	0x58024400
 800ab08:	03d09000 	.word	0x03d09000
 800ab0c:	46000000 	.word	0x46000000
 800ab10:	4c742400 	.word	0x4c742400
 800ab14:	4a742400 	.word	0x4a742400
 800ab18:	4bbebc20 	.word	0x4bbebc20

0800ab1c <RCCEx_PLL2_Config>:
 800ab1c:	b580      	push	{r7, lr}
 800ab1e:	b084      	sub	sp, #16
 800ab20:	af00      	add	r7, sp, #0
 800ab22:	6078      	str	r0, [r7, #4]
 800ab24:	6039      	str	r1, [r7, #0]
 800ab26:	2300      	movs	r3, #0
 800ab28:	73fb      	strb	r3, [r7, #15]
 800ab2a:	4b53      	ldr	r3, [pc, #332]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ab2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ab2e:	f003 0303 	and.w	r3, r3, #3
 800ab32:	2b03      	cmp	r3, #3
 800ab34:	d101      	bne.n	800ab3a <RCCEx_PLL2_Config+0x1e>
 800ab36:	2301      	movs	r3, #1
 800ab38:	e099      	b.n	800ac6e <RCCEx_PLL2_Config+0x152>
 800ab3a:	4b4f      	ldr	r3, [pc, #316]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ab3c:	681b      	ldr	r3, [r3, #0]
 800ab3e:	4a4e      	ldr	r2, [pc, #312]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ab40:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800ab44:	6013      	str	r3, [r2, #0]
 800ab46:	f7fc fd13 	bl	8007570 <HAL_GetTick>
 800ab4a:	60b8      	str	r0, [r7, #8]
 800ab4c:	e008      	b.n	800ab60 <RCCEx_PLL2_Config+0x44>
 800ab4e:	f7fc fd0f 	bl	8007570 <HAL_GetTick>
 800ab52:	4602      	mov	r2, r0
 800ab54:	68bb      	ldr	r3, [r7, #8]
 800ab56:	1ad3      	subs	r3, r2, r3
 800ab58:	2b02      	cmp	r3, #2
 800ab5a:	d901      	bls.n	800ab60 <RCCEx_PLL2_Config+0x44>
 800ab5c:	2303      	movs	r3, #3
 800ab5e:	e086      	b.n	800ac6e <RCCEx_PLL2_Config+0x152>
 800ab60:	4b45      	ldr	r3, [pc, #276]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ab62:	681b      	ldr	r3, [r3, #0]
 800ab64:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800ab68:	2b00      	cmp	r3, #0
 800ab6a:	d1f0      	bne.n	800ab4e <RCCEx_PLL2_Config+0x32>
 800ab6c:	4b42      	ldr	r3, [pc, #264]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ab6e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ab70:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 800ab74:	687b      	ldr	r3, [r7, #4]
 800ab76:	681b      	ldr	r3, [r3, #0]
 800ab78:	031b      	lsls	r3, r3, #12
 800ab7a:	493f      	ldr	r1, [pc, #252]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ab7c:	4313      	orrs	r3, r2
 800ab7e:	628b      	str	r3, [r1, #40]	; 0x28
 800ab80:	687b      	ldr	r3, [r7, #4]
 800ab82:	685b      	ldr	r3, [r3, #4]
 800ab84:	3b01      	subs	r3, #1
 800ab86:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800ab8a:	687b      	ldr	r3, [r7, #4]
 800ab8c:	689b      	ldr	r3, [r3, #8]
 800ab8e:	3b01      	subs	r3, #1
 800ab90:	025b      	lsls	r3, r3, #9
 800ab92:	b29b      	uxth	r3, r3
 800ab94:	431a      	orrs	r2, r3
 800ab96:	687b      	ldr	r3, [r7, #4]
 800ab98:	68db      	ldr	r3, [r3, #12]
 800ab9a:	3b01      	subs	r3, #1
 800ab9c:	041b      	lsls	r3, r3, #16
 800ab9e:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800aba2:	431a      	orrs	r2, r3
 800aba4:	687b      	ldr	r3, [r7, #4]
 800aba6:	691b      	ldr	r3, [r3, #16]
 800aba8:	3b01      	subs	r3, #1
 800abaa:	061b      	lsls	r3, r3, #24
 800abac:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800abb0:	4931      	ldr	r1, [pc, #196]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800abb2:	4313      	orrs	r3, r2
 800abb4:	638b      	str	r3, [r1, #56]	; 0x38
 800abb6:	4b30      	ldr	r3, [pc, #192]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800abb8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800abba:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 800abbe:	687b      	ldr	r3, [r7, #4]
 800abc0:	695b      	ldr	r3, [r3, #20]
 800abc2:	492d      	ldr	r1, [pc, #180]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800abc4:	4313      	orrs	r3, r2
 800abc6:	62cb      	str	r3, [r1, #44]	; 0x2c
 800abc8:	4b2b      	ldr	r3, [pc, #172]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800abca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800abcc:	f023 0220 	bic.w	r2, r3, #32
 800abd0:	687b      	ldr	r3, [r7, #4]
 800abd2:	699b      	ldr	r3, [r3, #24]
 800abd4:	4928      	ldr	r1, [pc, #160]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800abd6:	4313      	orrs	r3, r2
 800abd8:	62cb      	str	r3, [r1, #44]	; 0x2c
 800abda:	4b27      	ldr	r3, [pc, #156]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800abdc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800abde:	4a26      	ldr	r2, [pc, #152]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800abe0:	f023 0310 	bic.w	r3, r3, #16
 800abe4:	62d3      	str	r3, [r2, #44]	; 0x2c
 800abe6:	4b24      	ldr	r3, [pc, #144]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800abe8:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800abea:	4b24      	ldr	r3, [pc, #144]	; (800ac7c <RCCEx_PLL2_Config+0x160>)
 800abec:	4013      	ands	r3, r2
 800abee:	687a      	ldr	r2, [r7, #4]
 800abf0:	69d2      	ldr	r2, [r2, #28]
 800abf2:	00d2      	lsls	r2, r2, #3
 800abf4:	4920      	ldr	r1, [pc, #128]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800abf6:	4313      	orrs	r3, r2
 800abf8:	63cb      	str	r3, [r1, #60]	; 0x3c
 800abfa:	4b1f      	ldr	r3, [pc, #124]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800abfc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800abfe:	4a1e      	ldr	r2, [pc, #120]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ac00:	f043 0310 	orr.w	r3, r3, #16
 800ac04:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ac06:	683b      	ldr	r3, [r7, #0]
 800ac08:	2b00      	cmp	r3, #0
 800ac0a:	d106      	bne.n	800ac1a <RCCEx_PLL2_Config+0xfe>
 800ac0c:	4b1a      	ldr	r3, [pc, #104]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ac0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac10:	4a19      	ldr	r2, [pc, #100]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ac12:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800ac16:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ac18:	e00f      	b.n	800ac3a <RCCEx_PLL2_Config+0x11e>
 800ac1a:	683b      	ldr	r3, [r7, #0]
 800ac1c:	2b01      	cmp	r3, #1
 800ac1e:	d106      	bne.n	800ac2e <RCCEx_PLL2_Config+0x112>
 800ac20:	4b15      	ldr	r3, [pc, #84]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ac22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac24:	4a14      	ldr	r2, [pc, #80]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ac26:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800ac2a:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ac2c:	e005      	b.n	800ac3a <RCCEx_PLL2_Config+0x11e>
 800ac2e:	4b12      	ldr	r3, [pc, #72]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ac30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac32:	4a11      	ldr	r2, [pc, #68]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ac34:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800ac38:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ac3a:	4b0f      	ldr	r3, [pc, #60]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ac3c:	681b      	ldr	r3, [r3, #0]
 800ac3e:	4a0e      	ldr	r2, [pc, #56]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ac40:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800ac44:	6013      	str	r3, [r2, #0]
 800ac46:	f7fc fc93 	bl	8007570 <HAL_GetTick>
 800ac4a:	60b8      	str	r0, [r7, #8]
 800ac4c:	e008      	b.n	800ac60 <RCCEx_PLL2_Config+0x144>
 800ac4e:	f7fc fc8f 	bl	8007570 <HAL_GetTick>
 800ac52:	4602      	mov	r2, r0
 800ac54:	68bb      	ldr	r3, [r7, #8]
 800ac56:	1ad3      	subs	r3, r2, r3
 800ac58:	2b02      	cmp	r3, #2
 800ac5a:	d901      	bls.n	800ac60 <RCCEx_PLL2_Config+0x144>
 800ac5c:	2303      	movs	r3, #3
 800ac5e:	e006      	b.n	800ac6e <RCCEx_PLL2_Config+0x152>
 800ac60:	4b05      	ldr	r3, [pc, #20]	; (800ac78 <RCCEx_PLL2_Config+0x15c>)
 800ac62:	681b      	ldr	r3, [r3, #0]
 800ac64:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800ac68:	2b00      	cmp	r3, #0
 800ac6a:	d0f0      	beq.n	800ac4e <RCCEx_PLL2_Config+0x132>
 800ac6c:	7bfb      	ldrb	r3, [r7, #15]
 800ac6e:	4618      	mov	r0, r3
 800ac70:	3710      	adds	r7, #16
 800ac72:	46bd      	mov	sp, r7
 800ac74:	bd80      	pop	{r7, pc}
 800ac76:	bf00      	nop
 800ac78:	58024400 	.word	0x58024400
 800ac7c:	ffff0007 	.word	0xffff0007

0800ac80 <RCCEx_PLL3_Config>:
 800ac80:	b580      	push	{r7, lr}
 800ac82:	b084      	sub	sp, #16
 800ac84:	af00      	add	r7, sp, #0
 800ac86:	6078      	str	r0, [r7, #4]
 800ac88:	6039      	str	r1, [r7, #0]
 800ac8a:	2300      	movs	r3, #0
 800ac8c:	73fb      	strb	r3, [r7, #15]
 800ac8e:	4b53      	ldr	r3, [pc, #332]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ac90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ac92:	f003 0303 	and.w	r3, r3, #3
 800ac96:	2b03      	cmp	r3, #3
 800ac98:	d101      	bne.n	800ac9e <RCCEx_PLL3_Config+0x1e>
 800ac9a:	2301      	movs	r3, #1
 800ac9c:	e099      	b.n	800add2 <RCCEx_PLL3_Config+0x152>
 800ac9e:	4b4f      	ldr	r3, [pc, #316]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800aca0:	681b      	ldr	r3, [r3, #0]
 800aca2:	4a4e      	ldr	r2, [pc, #312]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800aca4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800aca8:	6013      	str	r3, [r2, #0]
 800acaa:	f7fc fc61 	bl	8007570 <HAL_GetTick>
 800acae:	60b8      	str	r0, [r7, #8]
 800acb0:	e008      	b.n	800acc4 <RCCEx_PLL3_Config+0x44>
 800acb2:	f7fc fc5d 	bl	8007570 <HAL_GetTick>
 800acb6:	4602      	mov	r2, r0
 800acb8:	68bb      	ldr	r3, [r7, #8]
 800acba:	1ad3      	subs	r3, r2, r3
 800acbc:	2b02      	cmp	r3, #2
 800acbe:	d901      	bls.n	800acc4 <RCCEx_PLL3_Config+0x44>
 800acc0:	2303      	movs	r3, #3
 800acc2:	e086      	b.n	800add2 <RCCEx_PLL3_Config+0x152>
 800acc4:	4b45      	ldr	r3, [pc, #276]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800acc6:	681b      	ldr	r3, [r3, #0]
 800acc8:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800accc:	2b00      	cmp	r3, #0
 800acce:	d1f0      	bne.n	800acb2 <RCCEx_PLL3_Config+0x32>
 800acd0:	4b42      	ldr	r3, [pc, #264]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800acd2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800acd4:	f023 727c 	bic.w	r2, r3, #66060288	; 0x3f00000
 800acd8:	687b      	ldr	r3, [r7, #4]
 800acda:	681b      	ldr	r3, [r3, #0]
 800acdc:	051b      	lsls	r3, r3, #20
 800acde:	493f      	ldr	r1, [pc, #252]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ace0:	4313      	orrs	r3, r2
 800ace2:	628b      	str	r3, [r1, #40]	; 0x28
 800ace4:	687b      	ldr	r3, [r7, #4]
 800ace6:	685b      	ldr	r3, [r3, #4]
 800ace8:	3b01      	subs	r3, #1
 800acea:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800acee:	687b      	ldr	r3, [r7, #4]
 800acf0:	689b      	ldr	r3, [r3, #8]
 800acf2:	3b01      	subs	r3, #1
 800acf4:	025b      	lsls	r3, r3, #9
 800acf6:	b29b      	uxth	r3, r3
 800acf8:	431a      	orrs	r2, r3
 800acfa:	687b      	ldr	r3, [r7, #4]
 800acfc:	68db      	ldr	r3, [r3, #12]
 800acfe:	3b01      	subs	r3, #1
 800ad00:	041b      	lsls	r3, r3, #16
 800ad02:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800ad06:	431a      	orrs	r2, r3
 800ad08:	687b      	ldr	r3, [r7, #4]
 800ad0a:	691b      	ldr	r3, [r3, #16]
 800ad0c:	3b01      	subs	r3, #1
 800ad0e:	061b      	lsls	r3, r3, #24
 800ad10:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800ad14:	4931      	ldr	r1, [pc, #196]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad16:	4313      	orrs	r3, r2
 800ad18:	640b      	str	r3, [r1, #64]	; 0x40
 800ad1a:	4b30      	ldr	r3, [pc, #192]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ad1e:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800ad22:	687b      	ldr	r3, [r7, #4]
 800ad24:	695b      	ldr	r3, [r3, #20]
 800ad26:	492d      	ldr	r1, [pc, #180]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad28:	4313      	orrs	r3, r2
 800ad2a:	62cb      	str	r3, [r1, #44]	; 0x2c
 800ad2c:	4b2b      	ldr	r3, [pc, #172]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ad30:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 800ad34:	687b      	ldr	r3, [r7, #4]
 800ad36:	699b      	ldr	r3, [r3, #24]
 800ad38:	4928      	ldr	r1, [pc, #160]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad3a:	4313      	orrs	r3, r2
 800ad3c:	62cb      	str	r3, [r1, #44]	; 0x2c
 800ad3e:	4b27      	ldr	r3, [pc, #156]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ad42:	4a26      	ldr	r2, [pc, #152]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad44:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800ad48:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ad4a:	4b24      	ldr	r3, [pc, #144]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad4c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800ad4e:	4b24      	ldr	r3, [pc, #144]	; (800ade0 <RCCEx_PLL3_Config+0x160>)
 800ad50:	4013      	ands	r3, r2
 800ad52:	687a      	ldr	r2, [r7, #4]
 800ad54:	69d2      	ldr	r2, [r2, #28]
 800ad56:	00d2      	lsls	r2, r2, #3
 800ad58:	4920      	ldr	r1, [pc, #128]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad5a:	4313      	orrs	r3, r2
 800ad5c:	644b      	str	r3, [r1, #68]	; 0x44
 800ad5e:	4b1f      	ldr	r3, [pc, #124]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ad62:	4a1e      	ldr	r2, [pc, #120]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad64:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800ad68:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ad6a:	683b      	ldr	r3, [r7, #0]
 800ad6c:	2b00      	cmp	r3, #0
 800ad6e:	d106      	bne.n	800ad7e <RCCEx_PLL3_Config+0xfe>
 800ad70:	4b1a      	ldr	r3, [pc, #104]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ad74:	4a19      	ldr	r2, [pc, #100]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad76:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800ad7a:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ad7c:	e00f      	b.n	800ad9e <RCCEx_PLL3_Config+0x11e>
 800ad7e:	683b      	ldr	r3, [r7, #0]
 800ad80:	2b01      	cmp	r3, #1
 800ad82:	d106      	bne.n	800ad92 <RCCEx_PLL3_Config+0x112>
 800ad84:	4b15      	ldr	r3, [pc, #84]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ad88:	4a14      	ldr	r2, [pc, #80]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad8a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800ad8e:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ad90:	e005      	b.n	800ad9e <RCCEx_PLL3_Config+0x11e>
 800ad92:	4b12      	ldr	r3, [pc, #72]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ad96:	4a11      	ldr	r2, [pc, #68]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ad98:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800ad9c:	62d3      	str	r3, [r2, #44]	; 0x2c
 800ad9e:	4b0f      	ldr	r3, [pc, #60]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ada0:	681b      	ldr	r3, [r3, #0]
 800ada2:	4a0e      	ldr	r2, [pc, #56]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800ada4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800ada8:	6013      	str	r3, [r2, #0]
 800adaa:	f7fc fbe1 	bl	8007570 <HAL_GetTick>
 800adae:	60b8      	str	r0, [r7, #8]
 800adb0:	e008      	b.n	800adc4 <RCCEx_PLL3_Config+0x144>
 800adb2:	f7fc fbdd 	bl	8007570 <HAL_GetTick>
 800adb6:	4602      	mov	r2, r0
 800adb8:	68bb      	ldr	r3, [r7, #8]
 800adba:	1ad3      	subs	r3, r2, r3
 800adbc:	2b02      	cmp	r3, #2
 800adbe:	d901      	bls.n	800adc4 <RCCEx_PLL3_Config+0x144>
 800adc0:	2303      	movs	r3, #3
 800adc2:	e006      	b.n	800add2 <RCCEx_PLL3_Config+0x152>
 800adc4:	4b05      	ldr	r3, [pc, #20]	; (800addc <RCCEx_PLL3_Config+0x15c>)
 800adc6:	681b      	ldr	r3, [r3, #0]
 800adc8:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800adcc:	2b00      	cmp	r3, #0
 800adce:	d0f0      	beq.n	800adb2 <RCCEx_PLL3_Config+0x132>
 800add0:	7bfb      	ldrb	r3, [r7, #15]
 800add2:	4618      	mov	r0, r3
 800add4:	3710      	adds	r7, #16
 800add6:	46bd      	mov	sp, r7
 800add8:	bd80      	pop	{r7, pc}
 800adda:	bf00      	nop
 800addc:	58024400 	.word	0x58024400
 800ade0:	ffff0007 	.word	0xffff0007

0800ade4 <HAL_TIM_Base_Init>:
 800ade4:	b580      	push	{r7, lr}
 800ade6:	b082      	sub	sp, #8
 800ade8:	af00      	add	r7, sp, #0
 800adea:	6078      	str	r0, [r7, #4]
 800adec:	687b      	ldr	r3, [r7, #4]
 800adee:	2b00      	cmp	r3, #0
 800adf0:	d101      	bne.n	800adf6 <HAL_TIM_Base_Init+0x12>
 800adf2:	2301      	movs	r3, #1
 800adf4:	e049      	b.n	800ae8a <HAL_TIM_Base_Init+0xa6>
 800adf6:	687b      	ldr	r3, [r7, #4]
 800adf8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800adfc:	b2db      	uxtb	r3, r3
 800adfe:	2b00      	cmp	r3, #0
 800ae00:	d106      	bne.n	800ae10 <HAL_TIM_Base_Init+0x2c>
 800ae02:	687b      	ldr	r3, [r7, #4]
 800ae04:	2200      	movs	r2, #0
 800ae06:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ae0a:	6878      	ldr	r0, [r7, #4]
 800ae0c:	f7fa f8a4 	bl	8004f58 <HAL_TIM_Base_MspInit>
 800ae10:	687b      	ldr	r3, [r7, #4]
 800ae12:	2202      	movs	r2, #2
 800ae14:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ae18:	687b      	ldr	r3, [r7, #4]
 800ae1a:	681a      	ldr	r2, [r3, #0]
 800ae1c:	687b      	ldr	r3, [r7, #4]
 800ae1e:	3304      	adds	r3, #4
 800ae20:	4619      	mov	r1, r3
 800ae22:	4610      	mov	r0, r2
 800ae24:	f001 f9d0 	bl	800c1c8 <TIM_Base_SetConfig>
 800ae28:	687b      	ldr	r3, [r7, #4]
 800ae2a:	2201      	movs	r2, #1
 800ae2c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800ae30:	687b      	ldr	r3, [r7, #4]
 800ae32:	2201      	movs	r2, #1
 800ae34:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ae38:	687b      	ldr	r3, [r7, #4]
 800ae3a:	2201      	movs	r2, #1
 800ae3c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800ae40:	687b      	ldr	r3, [r7, #4]
 800ae42:	2201      	movs	r2, #1
 800ae44:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800ae48:	687b      	ldr	r3, [r7, #4]
 800ae4a:	2201      	movs	r2, #1
 800ae4c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800ae50:	687b      	ldr	r3, [r7, #4]
 800ae52:	2201      	movs	r2, #1
 800ae54:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800ae58:	687b      	ldr	r3, [r7, #4]
 800ae5a:	2201      	movs	r2, #1
 800ae5c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800ae60:	687b      	ldr	r3, [r7, #4]
 800ae62:	2201      	movs	r2, #1
 800ae64:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800ae68:	687b      	ldr	r3, [r7, #4]
 800ae6a:	2201      	movs	r2, #1
 800ae6c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800ae70:	687b      	ldr	r3, [r7, #4]
 800ae72:	2201      	movs	r2, #1
 800ae74:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800ae78:	687b      	ldr	r3, [r7, #4]
 800ae7a:	2201      	movs	r2, #1
 800ae7c:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 800ae80:	687b      	ldr	r3, [r7, #4]
 800ae82:	2201      	movs	r2, #1
 800ae84:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ae88:	2300      	movs	r3, #0
 800ae8a:	4618      	mov	r0, r3
 800ae8c:	3708      	adds	r7, #8
 800ae8e:	46bd      	mov	sp, r7
 800ae90:	bd80      	pop	{r7, pc}
	...

0800ae94 <HAL_TIM_Base_Start>:
 800ae94:	b480      	push	{r7}
 800ae96:	b085      	sub	sp, #20
 800ae98:	af00      	add	r7, sp, #0
 800ae9a:	6078      	str	r0, [r7, #4]
 800ae9c:	687b      	ldr	r3, [r7, #4]
 800ae9e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800aea2:	b2db      	uxtb	r3, r3
 800aea4:	2b01      	cmp	r3, #1
 800aea6:	d001      	beq.n	800aeac <HAL_TIM_Base_Start+0x18>
 800aea8:	2301      	movs	r3, #1
 800aeaa:	e04c      	b.n	800af46 <HAL_TIM_Base_Start+0xb2>
 800aeac:	687b      	ldr	r3, [r7, #4]
 800aeae:	2202      	movs	r2, #2
 800aeb0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800aeb4:	687b      	ldr	r3, [r7, #4]
 800aeb6:	681b      	ldr	r3, [r3, #0]
 800aeb8:	4a26      	ldr	r2, [pc, #152]	; (800af54 <HAL_TIM_Base_Start+0xc0>)
 800aeba:	4293      	cmp	r3, r2
 800aebc:	d022      	beq.n	800af04 <HAL_TIM_Base_Start+0x70>
 800aebe:	687b      	ldr	r3, [r7, #4]
 800aec0:	681b      	ldr	r3, [r3, #0]
 800aec2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800aec6:	d01d      	beq.n	800af04 <HAL_TIM_Base_Start+0x70>
 800aec8:	687b      	ldr	r3, [r7, #4]
 800aeca:	681b      	ldr	r3, [r3, #0]
 800aecc:	4a22      	ldr	r2, [pc, #136]	; (800af58 <HAL_TIM_Base_Start+0xc4>)
 800aece:	4293      	cmp	r3, r2
 800aed0:	d018      	beq.n	800af04 <HAL_TIM_Base_Start+0x70>
 800aed2:	687b      	ldr	r3, [r7, #4]
 800aed4:	681b      	ldr	r3, [r3, #0]
 800aed6:	4a21      	ldr	r2, [pc, #132]	; (800af5c <HAL_TIM_Base_Start+0xc8>)
 800aed8:	4293      	cmp	r3, r2
 800aeda:	d013      	beq.n	800af04 <HAL_TIM_Base_Start+0x70>
 800aedc:	687b      	ldr	r3, [r7, #4]
 800aede:	681b      	ldr	r3, [r3, #0]
 800aee0:	4a1f      	ldr	r2, [pc, #124]	; (800af60 <HAL_TIM_Base_Start+0xcc>)
 800aee2:	4293      	cmp	r3, r2
 800aee4:	d00e      	beq.n	800af04 <HAL_TIM_Base_Start+0x70>
 800aee6:	687b      	ldr	r3, [r7, #4]
 800aee8:	681b      	ldr	r3, [r3, #0]
 800aeea:	4a1e      	ldr	r2, [pc, #120]	; (800af64 <HAL_TIM_Base_Start+0xd0>)
 800aeec:	4293      	cmp	r3, r2
 800aeee:	d009      	beq.n	800af04 <HAL_TIM_Base_Start+0x70>
 800aef0:	687b      	ldr	r3, [r7, #4]
 800aef2:	681b      	ldr	r3, [r3, #0]
 800aef4:	4a1c      	ldr	r2, [pc, #112]	; (800af68 <HAL_TIM_Base_Start+0xd4>)
 800aef6:	4293      	cmp	r3, r2
 800aef8:	d004      	beq.n	800af04 <HAL_TIM_Base_Start+0x70>
 800aefa:	687b      	ldr	r3, [r7, #4]
 800aefc:	681b      	ldr	r3, [r3, #0]
 800aefe:	4a1b      	ldr	r2, [pc, #108]	; (800af6c <HAL_TIM_Base_Start+0xd8>)
 800af00:	4293      	cmp	r3, r2
 800af02:	d115      	bne.n	800af30 <HAL_TIM_Base_Start+0x9c>
 800af04:	687b      	ldr	r3, [r7, #4]
 800af06:	681b      	ldr	r3, [r3, #0]
 800af08:	689a      	ldr	r2, [r3, #8]
 800af0a:	4b19      	ldr	r3, [pc, #100]	; (800af70 <HAL_TIM_Base_Start+0xdc>)
 800af0c:	4013      	ands	r3, r2
 800af0e:	60fb      	str	r3, [r7, #12]
 800af10:	68fb      	ldr	r3, [r7, #12]
 800af12:	2b06      	cmp	r3, #6
 800af14:	d015      	beq.n	800af42 <HAL_TIM_Base_Start+0xae>
 800af16:	68fb      	ldr	r3, [r7, #12]
 800af18:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800af1c:	d011      	beq.n	800af42 <HAL_TIM_Base_Start+0xae>
 800af1e:	687b      	ldr	r3, [r7, #4]
 800af20:	681b      	ldr	r3, [r3, #0]
 800af22:	681a      	ldr	r2, [r3, #0]
 800af24:	687b      	ldr	r3, [r7, #4]
 800af26:	681b      	ldr	r3, [r3, #0]
 800af28:	f042 0201 	orr.w	r2, r2, #1
 800af2c:	601a      	str	r2, [r3, #0]
 800af2e:	e008      	b.n	800af42 <HAL_TIM_Base_Start+0xae>
 800af30:	687b      	ldr	r3, [r7, #4]
 800af32:	681b      	ldr	r3, [r3, #0]
 800af34:	681a      	ldr	r2, [r3, #0]
 800af36:	687b      	ldr	r3, [r7, #4]
 800af38:	681b      	ldr	r3, [r3, #0]
 800af3a:	f042 0201 	orr.w	r2, r2, #1
 800af3e:	601a      	str	r2, [r3, #0]
 800af40:	e000      	b.n	800af44 <HAL_TIM_Base_Start+0xb0>
 800af42:	bf00      	nop
 800af44:	2300      	movs	r3, #0
 800af46:	4618      	mov	r0, r3
 800af48:	3714      	adds	r7, #20
 800af4a:	46bd      	mov	sp, r7
 800af4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af50:	4770      	bx	lr
 800af52:	bf00      	nop
 800af54:	40010000 	.word	0x40010000
 800af58:	40000400 	.word	0x40000400
 800af5c:	40000800 	.word	0x40000800
 800af60:	40000c00 	.word	0x40000c00
 800af64:	40010400 	.word	0x40010400
 800af68:	40001800 	.word	0x40001800
 800af6c:	40014000 	.word	0x40014000
 800af70:	00010007 	.word	0x00010007

0800af74 <HAL_TIM_Base_Stop>:
 800af74:	b480      	push	{r7}
 800af76:	b083      	sub	sp, #12
 800af78:	af00      	add	r7, sp, #0
 800af7a:	6078      	str	r0, [r7, #4]
 800af7c:	687b      	ldr	r3, [r7, #4]
 800af7e:	681b      	ldr	r3, [r3, #0]
 800af80:	6a1a      	ldr	r2, [r3, #32]
 800af82:	f241 1311 	movw	r3, #4369	; 0x1111
 800af86:	4013      	ands	r3, r2
 800af88:	2b00      	cmp	r3, #0
 800af8a:	d10f      	bne.n	800afac <HAL_TIM_Base_Stop+0x38>
 800af8c:	687b      	ldr	r3, [r7, #4]
 800af8e:	681b      	ldr	r3, [r3, #0]
 800af90:	6a1a      	ldr	r2, [r3, #32]
 800af92:	f240 4344 	movw	r3, #1092	; 0x444
 800af96:	4013      	ands	r3, r2
 800af98:	2b00      	cmp	r3, #0
 800af9a:	d107      	bne.n	800afac <HAL_TIM_Base_Stop+0x38>
 800af9c:	687b      	ldr	r3, [r7, #4]
 800af9e:	681b      	ldr	r3, [r3, #0]
 800afa0:	681a      	ldr	r2, [r3, #0]
 800afa2:	687b      	ldr	r3, [r7, #4]
 800afa4:	681b      	ldr	r3, [r3, #0]
 800afa6:	f022 0201 	bic.w	r2, r2, #1
 800afaa:	601a      	str	r2, [r3, #0]
 800afac:	687b      	ldr	r3, [r7, #4]
 800afae:	2201      	movs	r2, #1
 800afb0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800afb4:	2300      	movs	r3, #0
 800afb6:	4618      	mov	r0, r3
 800afb8:	370c      	adds	r7, #12
 800afba:	46bd      	mov	sp, r7
 800afbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afc0:	4770      	bx	lr
	...

0800afc4 <HAL_TIM_Base_Start_IT>:
 800afc4:	b480      	push	{r7}
 800afc6:	b085      	sub	sp, #20
 800afc8:	af00      	add	r7, sp, #0
 800afca:	6078      	str	r0, [r7, #4]
 800afcc:	687b      	ldr	r3, [r7, #4]
 800afce:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800afd2:	b2db      	uxtb	r3, r3
 800afd4:	2b01      	cmp	r3, #1
 800afd6:	d001      	beq.n	800afdc <HAL_TIM_Base_Start_IT+0x18>
 800afd8:	2301      	movs	r3, #1
 800afda:	e054      	b.n	800b086 <HAL_TIM_Base_Start_IT+0xc2>
 800afdc:	687b      	ldr	r3, [r7, #4]
 800afde:	2202      	movs	r2, #2
 800afe0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800afe4:	687b      	ldr	r3, [r7, #4]
 800afe6:	681b      	ldr	r3, [r3, #0]
 800afe8:	68da      	ldr	r2, [r3, #12]
 800afea:	687b      	ldr	r3, [r7, #4]
 800afec:	681b      	ldr	r3, [r3, #0]
 800afee:	f042 0201 	orr.w	r2, r2, #1
 800aff2:	60da      	str	r2, [r3, #12]
 800aff4:	687b      	ldr	r3, [r7, #4]
 800aff6:	681b      	ldr	r3, [r3, #0]
 800aff8:	4a26      	ldr	r2, [pc, #152]	; (800b094 <HAL_TIM_Base_Start_IT+0xd0>)
 800affa:	4293      	cmp	r3, r2
 800affc:	d022      	beq.n	800b044 <HAL_TIM_Base_Start_IT+0x80>
 800affe:	687b      	ldr	r3, [r7, #4]
 800b000:	681b      	ldr	r3, [r3, #0]
 800b002:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b006:	d01d      	beq.n	800b044 <HAL_TIM_Base_Start_IT+0x80>
 800b008:	687b      	ldr	r3, [r7, #4]
 800b00a:	681b      	ldr	r3, [r3, #0]
 800b00c:	4a22      	ldr	r2, [pc, #136]	; (800b098 <HAL_TIM_Base_Start_IT+0xd4>)
 800b00e:	4293      	cmp	r3, r2
 800b010:	d018      	beq.n	800b044 <HAL_TIM_Base_Start_IT+0x80>
 800b012:	687b      	ldr	r3, [r7, #4]
 800b014:	681b      	ldr	r3, [r3, #0]
 800b016:	4a21      	ldr	r2, [pc, #132]	; (800b09c <HAL_TIM_Base_Start_IT+0xd8>)
 800b018:	4293      	cmp	r3, r2
 800b01a:	d013      	beq.n	800b044 <HAL_TIM_Base_Start_IT+0x80>
 800b01c:	687b      	ldr	r3, [r7, #4]
 800b01e:	681b      	ldr	r3, [r3, #0]
 800b020:	4a1f      	ldr	r2, [pc, #124]	; (800b0a0 <HAL_TIM_Base_Start_IT+0xdc>)
 800b022:	4293      	cmp	r3, r2
 800b024:	d00e      	beq.n	800b044 <HAL_TIM_Base_Start_IT+0x80>
 800b026:	687b      	ldr	r3, [r7, #4]
 800b028:	681b      	ldr	r3, [r3, #0]
 800b02a:	4a1e      	ldr	r2, [pc, #120]	; (800b0a4 <HAL_TIM_Base_Start_IT+0xe0>)
 800b02c:	4293      	cmp	r3, r2
 800b02e:	d009      	beq.n	800b044 <HAL_TIM_Base_Start_IT+0x80>
 800b030:	687b      	ldr	r3, [r7, #4]
 800b032:	681b      	ldr	r3, [r3, #0]
 800b034:	4a1c      	ldr	r2, [pc, #112]	; (800b0a8 <HAL_TIM_Base_Start_IT+0xe4>)
 800b036:	4293      	cmp	r3, r2
 800b038:	d004      	beq.n	800b044 <HAL_TIM_Base_Start_IT+0x80>
 800b03a:	687b      	ldr	r3, [r7, #4]
 800b03c:	681b      	ldr	r3, [r3, #0]
 800b03e:	4a1b      	ldr	r2, [pc, #108]	; (800b0ac <HAL_TIM_Base_Start_IT+0xe8>)
 800b040:	4293      	cmp	r3, r2
 800b042:	d115      	bne.n	800b070 <HAL_TIM_Base_Start_IT+0xac>
 800b044:	687b      	ldr	r3, [r7, #4]
 800b046:	681b      	ldr	r3, [r3, #0]
 800b048:	689a      	ldr	r2, [r3, #8]
 800b04a:	4b19      	ldr	r3, [pc, #100]	; (800b0b0 <HAL_TIM_Base_Start_IT+0xec>)
 800b04c:	4013      	ands	r3, r2
 800b04e:	60fb      	str	r3, [r7, #12]
 800b050:	68fb      	ldr	r3, [r7, #12]
 800b052:	2b06      	cmp	r3, #6
 800b054:	d015      	beq.n	800b082 <HAL_TIM_Base_Start_IT+0xbe>
 800b056:	68fb      	ldr	r3, [r7, #12]
 800b058:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b05c:	d011      	beq.n	800b082 <HAL_TIM_Base_Start_IT+0xbe>
 800b05e:	687b      	ldr	r3, [r7, #4]
 800b060:	681b      	ldr	r3, [r3, #0]
 800b062:	681a      	ldr	r2, [r3, #0]
 800b064:	687b      	ldr	r3, [r7, #4]
 800b066:	681b      	ldr	r3, [r3, #0]
 800b068:	f042 0201 	orr.w	r2, r2, #1
 800b06c:	601a      	str	r2, [r3, #0]
 800b06e:	e008      	b.n	800b082 <HAL_TIM_Base_Start_IT+0xbe>
 800b070:	687b      	ldr	r3, [r7, #4]
 800b072:	681b      	ldr	r3, [r3, #0]
 800b074:	681a      	ldr	r2, [r3, #0]
 800b076:	687b      	ldr	r3, [r7, #4]
 800b078:	681b      	ldr	r3, [r3, #0]
 800b07a:	f042 0201 	orr.w	r2, r2, #1
 800b07e:	601a      	str	r2, [r3, #0]
 800b080:	e000      	b.n	800b084 <HAL_TIM_Base_Start_IT+0xc0>
 800b082:	bf00      	nop
 800b084:	2300      	movs	r3, #0
 800b086:	4618      	mov	r0, r3
 800b088:	3714      	adds	r7, #20
 800b08a:	46bd      	mov	sp, r7
 800b08c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b090:	4770      	bx	lr
 800b092:	bf00      	nop
 800b094:	40010000 	.word	0x40010000
 800b098:	40000400 	.word	0x40000400
 800b09c:	40000800 	.word	0x40000800
 800b0a0:	40000c00 	.word	0x40000c00
 800b0a4:	40010400 	.word	0x40010400
 800b0a8:	40001800 	.word	0x40001800
 800b0ac:	40014000 	.word	0x40014000
 800b0b0:	00010007 	.word	0x00010007

0800b0b4 <HAL_TIM_Base_Stop_IT>:
 800b0b4:	b480      	push	{r7}
 800b0b6:	b083      	sub	sp, #12
 800b0b8:	af00      	add	r7, sp, #0
 800b0ba:	6078      	str	r0, [r7, #4]
 800b0bc:	687b      	ldr	r3, [r7, #4]
 800b0be:	681b      	ldr	r3, [r3, #0]
 800b0c0:	68da      	ldr	r2, [r3, #12]
 800b0c2:	687b      	ldr	r3, [r7, #4]
 800b0c4:	681b      	ldr	r3, [r3, #0]
 800b0c6:	f022 0201 	bic.w	r2, r2, #1
 800b0ca:	60da      	str	r2, [r3, #12]
 800b0cc:	687b      	ldr	r3, [r7, #4]
 800b0ce:	681b      	ldr	r3, [r3, #0]
 800b0d0:	6a1a      	ldr	r2, [r3, #32]
 800b0d2:	f241 1311 	movw	r3, #4369	; 0x1111
 800b0d6:	4013      	ands	r3, r2
 800b0d8:	2b00      	cmp	r3, #0
 800b0da:	d10f      	bne.n	800b0fc <HAL_TIM_Base_Stop_IT+0x48>
 800b0dc:	687b      	ldr	r3, [r7, #4]
 800b0de:	681b      	ldr	r3, [r3, #0]
 800b0e0:	6a1a      	ldr	r2, [r3, #32]
 800b0e2:	f240 4344 	movw	r3, #1092	; 0x444
 800b0e6:	4013      	ands	r3, r2
 800b0e8:	2b00      	cmp	r3, #0
 800b0ea:	d107      	bne.n	800b0fc <HAL_TIM_Base_Stop_IT+0x48>
 800b0ec:	687b      	ldr	r3, [r7, #4]
 800b0ee:	681b      	ldr	r3, [r3, #0]
 800b0f0:	681a      	ldr	r2, [r3, #0]
 800b0f2:	687b      	ldr	r3, [r7, #4]
 800b0f4:	681b      	ldr	r3, [r3, #0]
 800b0f6:	f022 0201 	bic.w	r2, r2, #1
 800b0fa:	601a      	str	r2, [r3, #0]
 800b0fc:	687b      	ldr	r3, [r7, #4]
 800b0fe:	2201      	movs	r2, #1
 800b100:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b104:	2300      	movs	r3, #0
 800b106:	4618      	mov	r0, r3
 800b108:	370c      	adds	r7, #12
 800b10a:	46bd      	mov	sp, r7
 800b10c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b110:	4770      	bx	lr

0800b112 <HAL_TIM_PWM_Init>:
 800b112:	b580      	push	{r7, lr}
 800b114:	b082      	sub	sp, #8
 800b116:	af00      	add	r7, sp, #0
 800b118:	6078      	str	r0, [r7, #4]
 800b11a:	687b      	ldr	r3, [r7, #4]
 800b11c:	2b00      	cmp	r3, #0
 800b11e:	d101      	bne.n	800b124 <HAL_TIM_PWM_Init+0x12>
 800b120:	2301      	movs	r3, #1
 800b122:	e049      	b.n	800b1b8 <HAL_TIM_PWM_Init+0xa6>
 800b124:	687b      	ldr	r3, [r7, #4]
 800b126:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b12a:	b2db      	uxtb	r3, r3
 800b12c:	2b00      	cmp	r3, #0
 800b12e:	d106      	bne.n	800b13e <HAL_TIM_PWM_Init+0x2c>
 800b130:	687b      	ldr	r3, [r7, #4]
 800b132:	2200      	movs	r2, #0
 800b134:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b138:	6878      	ldr	r0, [r7, #4]
 800b13a:	f000 f841 	bl	800b1c0 <HAL_TIM_PWM_MspInit>
 800b13e:	687b      	ldr	r3, [r7, #4]
 800b140:	2202      	movs	r2, #2
 800b142:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b146:	687b      	ldr	r3, [r7, #4]
 800b148:	681a      	ldr	r2, [r3, #0]
 800b14a:	687b      	ldr	r3, [r7, #4]
 800b14c:	3304      	adds	r3, #4
 800b14e:	4619      	mov	r1, r3
 800b150:	4610      	mov	r0, r2
 800b152:	f001 f839 	bl	800c1c8 <TIM_Base_SetConfig>
 800b156:	687b      	ldr	r3, [r7, #4]
 800b158:	2201      	movs	r2, #1
 800b15a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800b15e:	687b      	ldr	r3, [r7, #4]
 800b160:	2201      	movs	r2, #1
 800b162:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b166:	687b      	ldr	r3, [r7, #4]
 800b168:	2201      	movs	r2, #1
 800b16a:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b16e:	687b      	ldr	r3, [r7, #4]
 800b170:	2201      	movs	r2, #1
 800b172:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b176:	687b      	ldr	r3, [r7, #4]
 800b178:	2201      	movs	r2, #1
 800b17a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b17e:	687b      	ldr	r3, [r7, #4]
 800b180:	2201      	movs	r2, #1
 800b182:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800b186:	687b      	ldr	r3, [r7, #4]
 800b188:	2201      	movs	r2, #1
 800b18a:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800b18e:	687b      	ldr	r3, [r7, #4]
 800b190:	2201      	movs	r2, #1
 800b192:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b196:	687b      	ldr	r3, [r7, #4]
 800b198:	2201      	movs	r2, #1
 800b19a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b19e:	687b      	ldr	r3, [r7, #4]
 800b1a0:	2201      	movs	r2, #1
 800b1a2:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800b1a6:	687b      	ldr	r3, [r7, #4]
 800b1a8:	2201      	movs	r2, #1
 800b1aa:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 800b1ae:	687b      	ldr	r3, [r7, #4]
 800b1b0:	2201      	movs	r2, #1
 800b1b2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b1b6:	2300      	movs	r3, #0
 800b1b8:	4618      	mov	r0, r3
 800b1ba:	3708      	adds	r7, #8
 800b1bc:	46bd      	mov	sp, r7
 800b1be:	bd80      	pop	{r7, pc}

0800b1c0 <HAL_TIM_PWM_MspInit>:
 800b1c0:	b480      	push	{r7}
 800b1c2:	b083      	sub	sp, #12
 800b1c4:	af00      	add	r7, sp, #0
 800b1c6:	6078      	str	r0, [r7, #4]
 800b1c8:	bf00      	nop
 800b1ca:	370c      	adds	r7, #12
 800b1cc:	46bd      	mov	sp, r7
 800b1ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1d2:	4770      	bx	lr

0800b1d4 <HAL_TIM_PWM_Start>:
 800b1d4:	b580      	push	{r7, lr}
 800b1d6:	b084      	sub	sp, #16
 800b1d8:	af00      	add	r7, sp, #0
 800b1da:	6078      	str	r0, [r7, #4]
 800b1dc:	6039      	str	r1, [r7, #0]
 800b1de:	683b      	ldr	r3, [r7, #0]
 800b1e0:	2b00      	cmp	r3, #0
 800b1e2:	d109      	bne.n	800b1f8 <HAL_TIM_PWM_Start+0x24>
 800b1e4:	687b      	ldr	r3, [r7, #4]
 800b1e6:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b1ea:	b2db      	uxtb	r3, r3
 800b1ec:	2b01      	cmp	r3, #1
 800b1ee:	bf14      	ite	ne
 800b1f0:	2301      	movne	r3, #1
 800b1f2:	2300      	moveq	r3, #0
 800b1f4:	b2db      	uxtb	r3, r3
 800b1f6:	e03c      	b.n	800b272 <HAL_TIM_PWM_Start+0x9e>
 800b1f8:	683b      	ldr	r3, [r7, #0]
 800b1fa:	2b04      	cmp	r3, #4
 800b1fc:	d109      	bne.n	800b212 <HAL_TIM_PWM_Start+0x3e>
 800b1fe:	687b      	ldr	r3, [r7, #4]
 800b200:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800b204:	b2db      	uxtb	r3, r3
 800b206:	2b01      	cmp	r3, #1
 800b208:	bf14      	ite	ne
 800b20a:	2301      	movne	r3, #1
 800b20c:	2300      	moveq	r3, #0
 800b20e:	b2db      	uxtb	r3, r3
 800b210:	e02f      	b.n	800b272 <HAL_TIM_PWM_Start+0x9e>
 800b212:	683b      	ldr	r3, [r7, #0]
 800b214:	2b08      	cmp	r3, #8
 800b216:	d109      	bne.n	800b22c <HAL_TIM_PWM_Start+0x58>
 800b218:	687b      	ldr	r3, [r7, #4]
 800b21a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800b21e:	b2db      	uxtb	r3, r3
 800b220:	2b01      	cmp	r3, #1
 800b222:	bf14      	ite	ne
 800b224:	2301      	movne	r3, #1
 800b226:	2300      	moveq	r3, #0
 800b228:	b2db      	uxtb	r3, r3
 800b22a:	e022      	b.n	800b272 <HAL_TIM_PWM_Start+0x9e>
 800b22c:	683b      	ldr	r3, [r7, #0]
 800b22e:	2b0c      	cmp	r3, #12
 800b230:	d109      	bne.n	800b246 <HAL_TIM_PWM_Start+0x72>
 800b232:	687b      	ldr	r3, [r7, #4]
 800b234:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800b238:	b2db      	uxtb	r3, r3
 800b23a:	2b01      	cmp	r3, #1
 800b23c:	bf14      	ite	ne
 800b23e:	2301      	movne	r3, #1
 800b240:	2300      	moveq	r3, #0
 800b242:	b2db      	uxtb	r3, r3
 800b244:	e015      	b.n	800b272 <HAL_TIM_PWM_Start+0x9e>
 800b246:	683b      	ldr	r3, [r7, #0]
 800b248:	2b10      	cmp	r3, #16
 800b24a:	d109      	bne.n	800b260 <HAL_TIM_PWM_Start+0x8c>
 800b24c:	687b      	ldr	r3, [r7, #4]
 800b24e:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800b252:	b2db      	uxtb	r3, r3
 800b254:	2b01      	cmp	r3, #1
 800b256:	bf14      	ite	ne
 800b258:	2301      	movne	r3, #1
 800b25a:	2300      	moveq	r3, #0
 800b25c:	b2db      	uxtb	r3, r3
 800b25e:	e008      	b.n	800b272 <HAL_TIM_PWM_Start+0x9e>
 800b260:	687b      	ldr	r3, [r7, #4]
 800b262:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800b266:	b2db      	uxtb	r3, r3
 800b268:	2b01      	cmp	r3, #1
 800b26a:	bf14      	ite	ne
 800b26c:	2301      	movne	r3, #1
 800b26e:	2300      	moveq	r3, #0
 800b270:	b2db      	uxtb	r3, r3
 800b272:	2b00      	cmp	r3, #0
 800b274:	d001      	beq.n	800b27a <HAL_TIM_PWM_Start+0xa6>
 800b276:	2301      	movs	r3, #1
 800b278:	e0a1      	b.n	800b3be <HAL_TIM_PWM_Start+0x1ea>
 800b27a:	683b      	ldr	r3, [r7, #0]
 800b27c:	2b00      	cmp	r3, #0
 800b27e:	d104      	bne.n	800b28a <HAL_TIM_PWM_Start+0xb6>
 800b280:	687b      	ldr	r3, [r7, #4]
 800b282:	2202      	movs	r2, #2
 800b284:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b288:	e023      	b.n	800b2d2 <HAL_TIM_PWM_Start+0xfe>
 800b28a:	683b      	ldr	r3, [r7, #0]
 800b28c:	2b04      	cmp	r3, #4
 800b28e:	d104      	bne.n	800b29a <HAL_TIM_PWM_Start+0xc6>
 800b290:	687b      	ldr	r3, [r7, #4]
 800b292:	2202      	movs	r2, #2
 800b294:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b298:	e01b      	b.n	800b2d2 <HAL_TIM_PWM_Start+0xfe>
 800b29a:	683b      	ldr	r3, [r7, #0]
 800b29c:	2b08      	cmp	r3, #8
 800b29e:	d104      	bne.n	800b2aa <HAL_TIM_PWM_Start+0xd6>
 800b2a0:	687b      	ldr	r3, [r7, #4]
 800b2a2:	2202      	movs	r2, #2
 800b2a4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b2a8:	e013      	b.n	800b2d2 <HAL_TIM_PWM_Start+0xfe>
 800b2aa:	683b      	ldr	r3, [r7, #0]
 800b2ac:	2b0c      	cmp	r3, #12
 800b2ae:	d104      	bne.n	800b2ba <HAL_TIM_PWM_Start+0xe6>
 800b2b0:	687b      	ldr	r3, [r7, #4]
 800b2b2:	2202      	movs	r2, #2
 800b2b4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b2b8:	e00b      	b.n	800b2d2 <HAL_TIM_PWM_Start+0xfe>
 800b2ba:	683b      	ldr	r3, [r7, #0]
 800b2bc:	2b10      	cmp	r3, #16
 800b2be:	d104      	bne.n	800b2ca <HAL_TIM_PWM_Start+0xf6>
 800b2c0:	687b      	ldr	r3, [r7, #4]
 800b2c2:	2202      	movs	r2, #2
 800b2c4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800b2c8:	e003      	b.n	800b2d2 <HAL_TIM_PWM_Start+0xfe>
 800b2ca:	687b      	ldr	r3, [r7, #4]
 800b2cc:	2202      	movs	r2, #2
 800b2ce:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800b2d2:	687b      	ldr	r3, [r7, #4]
 800b2d4:	681b      	ldr	r3, [r3, #0]
 800b2d6:	2201      	movs	r2, #1
 800b2d8:	6839      	ldr	r1, [r7, #0]
 800b2da:	4618      	mov	r0, r3
 800b2dc:	f001 fcac 	bl	800cc38 <TIM_CCxChannelCmd>
 800b2e0:	687b      	ldr	r3, [r7, #4]
 800b2e2:	681b      	ldr	r3, [r3, #0]
 800b2e4:	4a38      	ldr	r2, [pc, #224]	; (800b3c8 <HAL_TIM_PWM_Start+0x1f4>)
 800b2e6:	4293      	cmp	r3, r2
 800b2e8:	d013      	beq.n	800b312 <HAL_TIM_PWM_Start+0x13e>
 800b2ea:	687b      	ldr	r3, [r7, #4]
 800b2ec:	681b      	ldr	r3, [r3, #0]
 800b2ee:	4a37      	ldr	r2, [pc, #220]	; (800b3cc <HAL_TIM_PWM_Start+0x1f8>)
 800b2f0:	4293      	cmp	r3, r2
 800b2f2:	d00e      	beq.n	800b312 <HAL_TIM_PWM_Start+0x13e>
 800b2f4:	687b      	ldr	r3, [r7, #4]
 800b2f6:	681b      	ldr	r3, [r3, #0]
 800b2f8:	4a35      	ldr	r2, [pc, #212]	; (800b3d0 <HAL_TIM_PWM_Start+0x1fc>)
 800b2fa:	4293      	cmp	r3, r2
 800b2fc:	d009      	beq.n	800b312 <HAL_TIM_PWM_Start+0x13e>
 800b2fe:	687b      	ldr	r3, [r7, #4]
 800b300:	681b      	ldr	r3, [r3, #0]
 800b302:	4a34      	ldr	r2, [pc, #208]	; (800b3d4 <HAL_TIM_PWM_Start+0x200>)
 800b304:	4293      	cmp	r3, r2
 800b306:	d004      	beq.n	800b312 <HAL_TIM_PWM_Start+0x13e>
 800b308:	687b      	ldr	r3, [r7, #4]
 800b30a:	681b      	ldr	r3, [r3, #0]
 800b30c:	4a32      	ldr	r2, [pc, #200]	; (800b3d8 <HAL_TIM_PWM_Start+0x204>)
 800b30e:	4293      	cmp	r3, r2
 800b310:	d101      	bne.n	800b316 <HAL_TIM_PWM_Start+0x142>
 800b312:	2301      	movs	r3, #1
 800b314:	e000      	b.n	800b318 <HAL_TIM_PWM_Start+0x144>
 800b316:	2300      	movs	r3, #0
 800b318:	2b00      	cmp	r3, #0
 800b31a:	d007      	beq.n	800b32c <HAL_TIM_PWM_Start+0x158>
 800b31c:	687b      	ldr	r3, [r7, #4]
 800b31e:	681b      	ldr	r3, [r3, #0]
 800b320:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800b322:	687b      	ldr	r3, [r7, #4]
 800b324:	681b      	ldr	r3, [r3, #0]
 800b326:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b32a:	645a      	str	r2, [r3, #68]	; 0x44
 800b32c:	687b      	ldr	r3, [r7, #4]
 800b32e:	681b      	ldr	r3, [r3, #0]
 800b330:	4a25      	ldr	r2, [pc, #148]	; (800b3c8 <HAL_TIM_PWM_Start+0x1f4>)
 800b332:	4293      	cmp	r3, r2
 800b334:	d022      	beq.n	800b37c <HAL_TIM_PWM_Start+0x1a8>
 800b336:	687b      	ldr	r3, [r7, #4]
 800b338:	681b      	ldr	r3, [r3, #0]
 800b33a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b33e:	d01d      	beq.n	800b37c <HAL_TIM_PWM_Start+0x1a8>
 800b340:	687b      	ldr	r3, [r7, #4]
 800b342:	681b      	ldr	r3, [r3, #0]
 800b344:	4a25      	ldr	r2, [pc, #148]	; (800b3dc <HAL_TIM_PWM_Start+0x208>)
 800b346:	4293      	cmp	r3, r2
 800b348:	d018      	beq.n	800b37c <HAL_TIM_PWM_Start+0x1a8>
 800b34a:	687b      	ldr	r3, [r7, #4]
 800b34c:	681b      	ldr	r3, [r3, #0]
 800b34e:	4a24      	ldr	r2, [pc, #144]	; (800b3e0 <HAL_TIM_PWM_Start+0x20c>)
 800b350:	4293      	cmp	r3, r2
 800b352:	d013      	beq.n	800b37c <HAL_TIM_PWM_Start+0x1a8>
 800b354:	687b      	ldr	r3, [r7, #4]
 800b356:	681b      	ldr	r3, [r3, #0]
 800b358:	4a22      	ldr	r2, [pc, #136]	; (800b3e4 <HAL_TIM_PWM_Start+0x210>)
 800b35a:	4293      	cmp	r3, r2
 800b35c:	d00e      	beq.n	800b37c <HAL_TIM_PWM_Start+0x1a8>
 800b35e:	687b      	ldr	r3, [r7, #4]
 800b360:	681b      	ldr	r3, [r3, #0]
 800b362:	4a1a      	ldr	r2, [pc, #104]	; (800b3cc <HAL_TIM_PWM_Start+0x1f8>)
 800b364:	4293      	cmp	r3, r2
 800b366:	d009      	beq.n	800b37c <HAL_TIM_PWM_Start+0x1a8>
 800b368:	687b      	ldr	r3, [r7, #4]
 800b36a:	681b      	ldr	r3, [r3, #0]
 800b36c:	4a1e      	ldr	r2, [pc, #120]	; (800b3e8 <HAL_TIM_PWM_Start+0x214>)
 800b36e:	4293      	cmp	r3, r2
 800b370:	d004      	beq.n	800b37c <HAL_TIM_PWM_Start+0x1a8>
 800b372:	687b      	ldr	r3, [r7, #4]
 800b374:	681b      	ldr	r3, [r3, #0]
 800b376:	4a16      	ldr	r2, [pc, #88]	; (800b3d0 <HAL_TIM_PWM_Start+0x1fc>)
 800b378:	4293      	cmp	r3, r2
 800b37a:	d115      	bne.n	800b3a8 <HAL_TIM_PWM_Start+0x1d4>
 800b37c:	687b      	ldr	r3, [r7, #4]
 800b37e:	681b      	ldr	r3, [r3, #0]
 800b380:	689a      	ldr	r2, [r3, #8]
 800b382:	4b1a      	ldr	r3, [pc, #104]	; (800b3ec <HAL_TIM_PWM_Start+0x218>)
 800b384:	4013      	ands	r3, r2
 800b386:	60fb      	str	r3, [r7, #12]
 800b388:	68fb      	ldr	r3, [r7, #12]
 800b38a:	2b06      	cmp	r3, #6
 800b38c:	d015      	beq.n	800b3ba <HAL_TIM_PWM_Start+0x1e6>
 800b38e:	68fb      	ldr	r3, [r7, #12]
 800b390:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b394:	d011      	beq.n	800b3ba <HAL_TIM_PWM_Start+0x1e6>
 800b396:	687b      	ldr	r3, [r7, #4]
 800b398:	681b      	ldr	r3, [r3, #0]
 800b39a:	681a      	ldr	r2, [r3, #0]
 800b39c:	687b      	ldr	r3, [r7, #4]
 800b39e:	681b      	ldr	r3, [r3, #0]
 800b3a0:	f042 0201 	orr.w	r2, r2, #1
 800b3a4:	601a      	str	r2, [r3, #0]
 800b3a6:	e008      	b.n	800b3ba <HAL_TIM_PWM_Start+0x1e6>
 800b3a8:	687b      	ldr	r3, [r7, #4]
 800b3aa:	681b      	ldr	r3, [r3, #0]
 800b3ac:	681a      	ldr	r2, [r3, #0]
 800b3ae:	687b      	ldr	r3, [r7, #4]
 800b3b0:	681b      	ldr	r3, [r3, #0]
 800b3b2:	f042 0201 	orr.w	r2, r2, #1
 800b3b6:	601a      	str	r2, [r3, #0]
 800b3b8:	e000      	b.n	800b3bc <HAL_TIM_PWM_Start+0x1e8>
 800b3ba:	bf00      	nop
 800b3bc:	2300      	movs	r3, #0
 800b3be:	4618      	mov	r0, r3
 800b3c0:	3710      	adds	r7, #16
 800b3c2:	46bd      	mov	sp, r7
 800b3c4:	bd80      	pop	{r7, pc}
 800b3c6:	bf00      	nop
 800b3c8:	40010000 	.word	0x40010000
 800b3cc:	40010400 	.word	0x40010400
 800b3d0:	40014000 	.word	0x40014000
 800b3d4:	40014400 	.word	0x40014400
 800b3d8:	40014800 	.word	0x40014800
 800b3dc:	40000400 	.word	0x40000400
 800b3e0:	40000800 	.word	0x40000800
 800b3e4:	40000c00 	.word	0x40000c00
 800b3e8:	40001800 	.word	0x40001800
 800b3ec:	00010007 	.word	0x00010007

0800b3f0 <HAL_TIM_PWM_Stop>:
 800b3f0:	b580      	push	{r7, lr}
 800b3f2:	b082      	sub	sp, #8
 800b3f4:	af00      	add	r7, sp, #0
 800b3f6:	6078      	str	r0, [r7, #4]
 800b3f8:	6039      	str	r1, [r7, #0]
 800b3fa:	687b      	ldr	r3, [r7, #4]
 800b3fc:	681b      	ldr	r3, [r3, #0]
 800b3fe:	2200      	movs	r2, #0
 800b400:	6839      	ldr	r1, [r7, #0]
 800b402:	4618      	mov	r0, r3
 800b404:	f001 fc18 	bl	800cc38 <TIM_CCxChannelCmd>
 800b408:	687b      	ldr	r3, [r7, #4]
 800b40a:	681b      	ldr	r3, [r3, #0]
 800b40c:	4a3e      	ldr	r2, [pc, #248]	; (800b508 <HAL_TIM_PWM_Stop+0x118>)
 800b40e:	4293      	cmp	r3, r2
 800b410:	d013      	beq.n	800b43a <HAL_TIM_PWM_Stop+0x4a>
 800b412:	687b      	ldr	r3, [r7, #4]
 800b414:	681b      	ldr	r3, [r3, #0]
 800b416:	4a3d      	ldr	r2, [pc, #244]	; (800b50c <HAL_TIM_PWM_Stop+0x11c>)
 800b418:	4293      	cmp	r3, r2
 800b41a:	d00e      	beq.n	800b43a <HAL_TIM_PWM_Stop+0x4a>
 800b41c:	687b      	ldr	r3, [r7, #4]
 800b41e:	681b      	ldr	r3, [r3, #0]
 800b420:	4a3b      	ldr	r2, [pc, #236]	; (800b510 <HAL_TIM_PWM_Stop+0x120>)
 800b422:	4293      	cmp	r3, r2
 800b424:	d009      	beq.n	800b43a <HAL_TIM_PWM_Stop+0x4a>
 800b426:	687b      	ldr	r3, [r7, #4]
 800b428:	681b      	ldr	r3, [r3, #0]
 800b42a:	4a3a      	ldr	r2, [pc, #232]	; (800b514 <HAL_TIM_PWM_Stop+0x124>)
 800b42c:	4293      	cmp	r3, r2
 800b42e:	d004      	beq.n	800b43a <HAL_TIM_PWM_Stop+0x4a>
 800b430:	687b      	ldr	r3, [r7, #4]
 800b432:	681b      	ldr	r3, [r3, #0]
 800b434:	4a38      	ldr	r2, [pc, #224]	; (800b518 <HAL_TIM_PWM_Stop+0x128>)
 800b436:	4293      	cmp	r3, r2
 800b438:	d101      	bne.n	800b43e <HAL_TIM_PWM_Stop+0x4e>
 800b43a:	2301      	movs	r3, #1
 800b43c:	e000      	b.n	800b440 <HAL_TIM_PWM_Stop+0x50>
 800b43e:	2300      	movs	r3, #0
 800b440:	2b00      	cmp	r3, #0
 800b442:	d017      	beq.n	800b474 <HAL_TIM_PWM_Stop+0x84>
 800b444:	687b      	ldr	r3, [r7, #4]
 800b446:	681b      	ldr	r3, [r3, #0]
 800b448:	6a1a      	ldr	r2, [r3, #32]
 800b44a:	f241 1311 	movw	r3, #4369	; 0x1111
 800b44e:	4013      	ands	r3, r2
 800b450:	2b00      	cmp	r3, #0
 800b452:	d10f      	bne.n	800b474 <HAL_TIM_PWM_Stop+0x84>
 800b454:	687b      	ldr	r3, [r7, #4]
 800b456:	681b      	ldr	r3, [r3, #0]
 800b458:	6a1a      	ldr	r2, [r3, #32]
 800b45a:	f240 4344 	movw	r3, #1092	; 0x444
 800b45e:	4013      	ands	r3, r2
 800b460:	2b00      	cmp	r3, #0
 800b462:	d107      	bne.n	800b474 <HAL_TIM_PWM_Stop+0x84>
 800b464:	687b      	ldr	r3, [r7, #4]
 800b466:	681b      	ldr	r3, [r3, #0]
 800b468:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800b46a:	687b      	ldr	r3, [r7, #4]
 800b46c:	681b      	ldr	r3, [r3, #0]
 800b46e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800b472:	645a      	str	r2, [r3, #68]	; 0x44
 800b474:	687b      	ldr	r3, [r7, #4]
 800b476:	681b      	ldr	r3, [r3, #0]
 800b478:	6a1a      	ldr	r2, [r3, #32]
 800b47a:	f241 1311 	movw	r3, #4369	; 0x1111
 800b47e:	4013      	ands	r3, r2
 800b480:	2b00      	cmp	r3, #0
 800b482:	d10f      	bne.n	800b4a4 <HAL_TIM_PWM_Stop+0xb4>
 800b484:	687b      	ldr	r3, [r7, #4]
 800b486:	681b      	ldr	r3, [r3, #0]
 800b488:	6a1a      	ldr	r2, [r3, #32]
 800b48a:	f240 4344 	movw	r3, #1092	; 0x444
 800b48e:	4013      	ands	r3, r2
 800b490:	2b00      	cmp	r3, #0
 800b492:	d107      	bne.n	800b4a4 <HAL_TIM_PWM_Stop+0xb4>
 800b494:	687b      	ldr	r3, [r7, #4]
 800b496:	681b      	ldr	r3, [r3, #0]
 800b498:	681a      	ldr	r2, [r3, #0]
 800b49a:	687b      	ldr	r3, [r7, #4]
 800b49c:	681b      	ldr	r3, [r3, #0]
 800b49e:	f022 0201 	bic.w	r2, r2, #1
 800b4a2:	601a      	str	r2, [r3, #0]
 800b4a4:	683b      	ldr	r3, [r7, #0]
 800b4a6:	2b00      	cmp	r3, #0
 800b4a8:	d104      	bne.n	800b4b4 <HAL_TIM_PWM_Stop+0xc4>
 800b4aa:	687b      	ldr	r3, [r7, #4]
 800b4ac:	2201      	movs	r2, #1
 800b4ae:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b4b2:	e023      	b.n	800b4fc <HAL_TIM_PWM_Stop+0x10c>
 800b4b4:	683b      	ldr	r3, [r7, #0]
 800b4b6:	2b04      	cmp	r3, #4
 800b4b8:	d104      	bne.n	800b4c4 <HAL_TIM_PWM_Stop+0xd4>
 800b4ba:	687b      	ldr	r3, [r7, #4]
 800b4bc:	2201      	movs	r2, #1
 800b4be:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b4c2:	e01b      	b.n	800b4fc <HAL_TIM_PWM_Stop+0x10c>
 800b4c4:	683b      	ldr	r3, [r7, #0]
 800b4c6:	2b08      	cmp	r3, #8
 800b4c8:	d104      	bne.n	800b4d4 <HAL_TIM_PWM_Stop+0xe4>
 800b4ca:	687b      	ldr	r3, [r7, #4]
 800b4cc:	2201      	movs	r2, #1
 800b4ce:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b4d2:	e013      	b.n	800b4fc <HAL_TIM_PWM_Stop+0x10c>
 800b4d4:	683b      	ldr	r3, [r7, #0]
 800b4d6:	2b0c      	cmp	r3, #12
 800b4d8:	d104      	bne.n	800b4e4 <HAL_TIM_PWM_Stop+0xf4>
 800b4da:	687b      	ldr	r3, [r7, #4]
 800b4dc:	2201      	movs	r2, #1
 800b4de:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b4e2:	e00b      	b.n	800b4fc <HAL_TIM_PWM_Stop+0x10c>
 800b4e4:	683b      	ldr	r3, [r7, #0]
 800b4e6:	2b10      	cmp	r3, #16
 800b4e8:	d104      	bne.n	800b4f4 <HAL_TIM_PWM_Stop+0x104>
 800b4ea:	687b      	ldr	r3, [r7, #4]
 800b4ec:	2201      	movs	r2, #1
 800b4ee:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800b4f2:	e003      	b.n	800b4fc <HAL_TIM_PWM_Stop+0x10c>
 800b4f4:	687b      	ldr	r3, [r7, #4]
 800b4f6:	2201      	movs	r2, #1
 800b4f8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800b4fc:	2300      	movs	r3, #0
 800b4fe:	4618      	mov	r0, r3
 800b500:	3708      	adds	r7, #8
 800b502:	46bd      	mov	sp, r7
 800b504:	bd80      	pop	{r7, pc}
 800b506:	bf00      	nop
 800b508:	40010000 	.word	0x40010000
 800b50c:	40010400 	.word	0x40010400
 800b510:	40014000 	.word	0x40014000
 800b514:	40014400 	.word	0x40014400
 800b518:	40014800 	.word	0x40014800

0800b51c <HAL_TIM_IC_Init>:
 800b51c:	b580      	push	{r7, lr}
 800b51e:	b082      	sub	sp, #8
 800b520:	af00      	add	r7, sp, #0
 800b522:	6078      	str	r0, [r7, #4]
 800b524:	687b      	ldr	r3, [r7, #4]
 800b526:	2b00      	cmp	r3, #0
 800b528:	d101      	bne.n	800b52e <HAL_TIM_IC_Init+0x12>
 800b52a:	2301      	movs	r3, #1
 800b52c:	e049      	b.n	800b5c2 <HAL_TIM_IC_Init+0xa6>
 800b52e:	687b      	ldr	r3, [r7, #4]
 800b530:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b534:	b2db      	uxtb	r3, r3
 800b536:	2b00      	cmp	r3, #0
 800b538:	d106      	bne.n	800b548 <HAL_TIM_IC_Init+0x2c>
 800b53a:	687b      	ldr	r3, [r7, #4]
 800b53c:	2200      	movs	r2, #0
 800b53e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b542:	6878      	ldr	r0, [r7, #4]
 800b544:	f000 f841 	bl	800b5ca <HAL_TIM_IC_MspInit>
 800b548:	687b      	ldr	r3, [r7, #4]
 800b54a:	2202      	movs	r2, #2
 800b54c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b550:	687b      	ldr	r3, [r7, #4]
 800b552:	681a      	ldr	r2, [r3, #0]
 800b554:	687b      	ldr	r3, [r7, #4]
 800b556:	3304      	adds	r3, #4
 800b558:	4619      	mov	r1, r3
 800b55a:	4610      	mov	r0, r2
 800b55c:	f000 fe34 	bl	800c1c8 <TIM_Base_SetConfig>
 800b560:	687b      	ldr	r3, [r7, #4]
 800b562:	2201      	movs	r2, #1
 800b564:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800b568:	687b      	ldr	r3, [r7, #4]
 800b56a:	2201      	movs	r2, #1
 800b56c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b570:	687b      	ldr	r3, [r7, #4]
 800b572:	2201      	movs	r2, #1
 800b574:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b578:	687b      	ldr	r3, [r7, #4]
 800b57a:	2201      	movs	r2, #1
 800b57c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b580:	687b      	ldr	r3, [r7, #4]
 800b582:	2201      	movs	r2, #1
 800b584:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b588:	687b      	ldr	r3, [r7, #4]
 800b58a:	2201      	movs	r2, #1
 800b58c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800b590:	687b      	ldr	r3, [r7, #4]
 800b592:	2201      	movs	r2, #1
 800b594:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800b598:	687b      	ldr	r3, [r7, #4]
 800b59a:	2201      	movs	r2, #1
 800b59c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b5a0:	687b      	ldr	r3, [r7, #4]
 800b5a2:	2201      	movs	r2, #1
 800b5a4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b5a8:	687b      	ldr	r3, [r7, #4]
 800b5aa:	2201      	movs	r2, #1
 800b5ac:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800b5b0:	687b      	ldr	r3, [r7, #4]
 800b5b2:	2201      	movs	r2, #1
 800b5b4:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 800b5b8:	687b      	ldr	r3, [r7, #4]
 800b5ba:	2201      	movs	r2, #1
 800b5bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b5c0:	2300      	movs	r3, #0
 800b5c2:	4618      	mov	r0, r3
 800b5c4:	3708      	adds	r7, #8
 800b5c6:	46bd      	mov	sp, r7
 800b5c8:	bd80      	pop	{r7, pc}

0800b5ca <HAL_TIM_IC_MspInit>:
 800b5ca:	b480      	push	{r7}
 800b5cc:	b083      	sub	sp, #12
 800b5ce:	af00      	add	r7, sp, #0
 800b5d0:	6078      	str	r0, [r7, #4]
 800b5d2:	bf00      	nop
 800b5d4:	370c      	adds	r7, #12
 800b5d6:	46bd      	mov	sp, r7
 800b5d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5dc:	4770      	bx	lr
	...

0800b5e0 <HAL_TIM_IC_Start_IT>:
 800b5e0:	b580      	push	{r7, lr}
 800b5e2:	b084      	sub	sp, #16
 800b5e4:	af00      	add	r7, sp, #0
 800b5e6:	6078      	str	r0, [r7, #4]
 800b5e8:	6039      	str	r1, [r7, #0]
 800b5ea:	2300      	movs	r3, #0
 800b5ec:	73fb      	strb	r3, [r7, #15]
 800b5ee:	683b      	ldr	r3, [r7, #0]
 800b5f0:	2b00      	cmp	r3, #0
 800b5f2:	d104      	bne.n	800b5fe <HAL_TIM_IC_Start_IT+0x1e>
 800b5f4:	687b      	ldr	r3, [r7, #4]
 800b5f6:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b5fa:	b2db      	uxtb	r3, r3
 800b5fc:	e023      	b.n	800b646 <HAL_TIM_IC_Start_IT+0x66>
 800b5fe:	683b      	ldr	r3, [r7, #0]
 800b600:	2b04      	cmp	r3, #4
 800b602:	d104      	bne.n	800b60e <HAL_TIM_IC_Start_IT+0x2e>
 800b604:	687b      	ldr	r3, [r7, #4]
 800b606:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800b60a:	b2db      	uxtb	r3, r3
 800b60c:	e01b      	b.n	800b646 <HAL_TIM_IC_Start_IT+0x66>
 800b60e:	683b      	ldr	r3, [r7, #0]
 800b610:	2b08      	cmp	r3, #8
 800b612:	d104      	bne.n	800b61e <HAL_TIM_IC_Start_IT+0x3e>
 800b614:	687b      	ldr	r3, [r7, #4]
 800b616:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800b61a:	b2db      	uxtb	r3, r3
 800b61c:	e013      	b.n	800b646 <HAL_TIM_IC_Start_IT+0x66>
 800b61e:	683b      	ldr	r3, [r7, #0]
 800b620:	2b0c      	cmp	r3, #12
 800b622:	d104      	bne.n	800b62e <HAL_TIM_IC_Start_IT+0x4e>
 800b624:	687b      	ldr	r3, [r7, #4]
 800b626:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800b62a:	b2db      	uxtb	r3, r3
 800b62c:	e00b      	b.n	800b646 <HAL_TIM_IC_Start_IT+0x66>
 800b62e:	683b      	ldr	r3, [r7, #0]
 800b630:	2b10      	cmp	r3, #16
 800b632:	d104      	bne.n	800b63e <HAL_TIM_IC_Start_IT+0x5e>
 800b634:	687b      	ldr	r3, [r7, #4]
 800b636:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800b63a:	b2db      	uxtb	r3, r3
 800b63c:	e003      	b.n	800b646 <HAL_TIM_IC_Start_IT+0x66>
 800b63e:	687b      	ldr	r3, [r7, #4]
 800b640:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800b644:	b2db      	uxtb	r3, r3
 800b646:	73bb      	strb	r3, [r7, #14]
 800b648:	683b      	ldr	r3, [r7, #0]
 800b64a:	2b00      	cmp	r3, #0
 800b64c:	d104      	bne.n	800b658 <HAL_TIM_IC_Start_IT+0x78>
 800b64e:	687b      	ldr	r3, [r7, #4]
 800b650:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800b654:	b2db      	uxtb	r3, r3
 800b656:	e013      	b.n	800b680 <HAL_TIM_IC_Start_IT+0xa0>
 800b658:	683b      	ldr	r3, [r7, #0]
 800b65a:	2b04      	cmp	r3, #4
 800b65c:	d104      	bne.n	800b668 <HAL_TIM_IC_Start_IT+0x88>
 800b65e:	687b      	ldr	r3, [r7, #4]
 800b660:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800b664:	b2db      	uxtb	r3, r3
 800b666:	e00b      	b.n	800b680 <HAL_TIM_IC_Start_IT+0xa0>
 800b668:	683b      	ldr	r3, [r7, #0]
 800b66a:	2b08      	cmp	r3, #8
 800b66c:	d104      	bne.n	800b678 <HAL_TIM_IC_Start_IT+0x98>
 800b66e:	687b      	ldr	r3, [r7, #4]
 800b670:	f893 3046 	ldrb.w	r3, [r3, #70]	; 0x46
 800b674:	b2db      	uxtb	r3, r3
 800b676:	e003      	b.n	800b680 <HAL_TIM_IC_Start_IT+0xa0>
 800b678:	687b      	ldr	r3, [r7, #4]
 800b67a:	f893 3047 	ldrb.w	r3, [r3, #71]	; 0x47
 800b67e:	b2db      	uxtb	r3, r3
 800b680:	737b      	strb	r3, [r7, #13]
 800b682:	7bbb      	ldrb	r3, [r7, #14]
 800b684:	2b01      	cmp	r3, #1
 800b686:	d102      	bne.n	800b68e <HAL_TIM_IC_Start_IT+0xae>
 800b688:	7b7b      	ldrb	r3, [r7, #13]
 800b68a:	2b01      	cmp	r3, #1
 800b68c:	d001      	beq.n	800b692 <HAL_TIM_IC_Start_IT+0xb2>
 800b68e:	2301      	movs	r3, #1
 800b690:	e0e2      	b.n	800b858 <HAL_TIM_IC_Start_IT+0x278>
 800b692:	683b      	ldr	r3, [r7, #0]
 800b694:	2b00      	cmp	r3, #0
 800b696:	d104      	bne.n	800b6a2 <HAL_TIM_IC_Start_IT+0xc2>
 800b698:	687b      	ldr	r3, [r7, #4]
 800b69a:	2202      	movs	r2, #2
 800b69c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b6a0:	e023      	b.n	800b6ea <HAL_TIM_IC_Start_IT+0x10a>
 800b6a2:	683b      	ldr	r3, [r7, #0]
 800b6a4:	2b04      	cmp	r3, #4
 800b6a6:	d104      	bne.n	800b6b2 <HAL_TIM_IC_Start_IT+0xd2>
 800b6a8:	687b      	ldr	r3, [r7, #4]
 800b6aa:	2202      	movs	r2, #2
 800b6ac:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b6b0:	e01b      	b.n	800b6ea <HAL_TIM_IC_Start_IT+0x10a>
 800b6b2:	683b      	ldr	r3, [r7, #0]
 800b6b4:	2b08      	cmp	r3, #8
 800b6b6:	d104      	bne.n	800b6c2 <HAL_TIM_IC_Start_IT+0xe2>
 800b6b8:	687b      	ldr	r3, [r7, #4]
 800b6ba:	2202      	movs	r2, #2
 800b6bc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b6c0:	e013      	b.n	800b6ea <HAL_TIM_IC_Start_IT+0x10a>
 800b6c2:	683b      	ldr	r3, [r7, #0]
 800b6c4:	2b0c      	cmp	r3, #12
 800b6c6:	d104      	bne.n	800b6d2 <HAL_TIM_IC_Start_IT+0xf2>
 800b6c8:	687b      	ldr	r3, [r7, #4]
 800b6ca:	2202      	movs	r2, #2
 800b6cc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b6d0:	e00b      	b.n	800b6ea <HAL_TIM_IC_Start_IT+0x10a>
 800b6d2:	683b      	ldr	r3, [r7, #0]
 800b6d4:	2b10      	cmp	r3, #16
 800b6d6:	d104      	bne.n	800b6e2 <HAL_TIM_IC_Start_IT+0x102>
 800b6d8:	687b      	ldr	r3, [r7, #4]
 800b6da:	2202      	movs	r2, #2
 800b6dc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800b6e0:	e003      	b.n	800b6ea <HAL_TIM_IC_Start_IT+0x10a>
 800b6e2:	687b      	ldr	r3, [r7, #4]
 800b6e4:	2202      	movs	r2, #2
 800b6e6:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800b6ea:	683b      	ldr	r3, [r7, #0]
 800b6ec:	2b00      	cmp	r3, #0
 800b6ee:	d104      	bne.n	800b6fa <HAL_TIM_IC_Start_IT+0x11a>
 800b6f0:	687b      	ldr	r3, [r7, #4]
 800b6f2:	2202      	movs	r2, #2
 800b6f4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b6f8:	e013      	b.n	800b722 <HAL_TIM_IC_Start_IT+0x142>
 800b6fa:	683b      	ldr	r3, [r7, #0]
 800b6fc:	2b04      	cmp	r3, #4
 800b6fe:	d104      	bne.n	800b70a <HAL_TIM_IC_Start_IT+0x12a>
 800b700:	687b      	ldr	r3, [r7, #4]
 800b702:	2202      	movs	r2, #2
 800b704:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b708:	e00b      	b.n	800b722 <HAL_TIM_IC_Start_IT+0x142>
 800b70a:	683b      	ldr	r3, [r7, #0]
 800b70c:	2b08      	cmp	r3, #8
 800b70e:	d104      	bne.n	800b71a <HAL_TIM_IC_Start_IT+0x13a>
 800b710:	687b      	ldr	r3, [r7, #4]
 800b712:	2202      	movs	r2, #2
 800b714:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800b718:	e003      	b.n	800b722 <HAL_TIM_IC_Start_IT+0x142>
 800b71a:	687b      	ldr	r3, [r7, #4]
 800b71c:	2202      	movs	r2, #2
 800b71e:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 800b722:	683b      	ldr	r3, [r7, #0]
 800b724:	2b0c      	cmp	r3, #12
 800b726:	d841      	bhi.n	800b7ac <HAL_TIM_IC_Start_IT+0x1cc>
 800b728:	a201      	add	r2, pc, #4	; (adr r2, 800b730 <HAL_TIM_IC_Start_IT+0x150>)
 800b72a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b72e:	bf00      	nop
 800b730:	0800b765 	.word	0x0800b765
 800b734:	0800b7ad 	.word	0x0800b7ad
 800b738:	0800b7ad 	.word	0x0800b7ad
 800b73c:	0800b7ad 	.word	0x0800b7ad
 800b740:	0800b777 	.word	0x0800b777
 800b744:	0800b7ad 	.word	0x0800b7ad
 800b748:	0800b7ad 	.word	0x0800b7ad
 800b74c:	0800b7ad 	.word	0x0800b7ad
 800b750:	0800b789 	.word	0x0800b789
 800b754:	0800b7ad 	.word	0x0800b7ad
 800b758:	0800b7ad 	.word	0x0800b7ad
 800b75c:	0800b7ad 	.word	0x0800b7ad
 800b760:	0800b79b 	.word	0x0800b79b
 800b764:	687b      	ldr	r3, [r7, #4]
 800b766:	681b      	ldr	r3, [r3, #0]
 800b768:	68da      	ldr	r2, [r3, #12]
 800b76a:	687b      	ldr	r3, [r7, #4]
 800b76c:	681b      	ldr	r3, [r3, #0]
 800b76e:	f042 0202 	orr.w	r2, r2, #2
 800b772:	60da      	str	r2, [r3, #12]
 800b774:	e01d      	b.n	800b7b2 <HAL_TIM_IC_Start_IT+0x1d2>
 800b776:	687b      	ldr	r3, [r7, #4]
 800b778:	681b      	ldr	r3, [r3, #0]
 800b77a:	68da      	ldr	r2, [r3, #12]
 800b77c:	687b      	ldr	r3, [r7, #4]
 800b77e:	681b      	ldr	r3, [r3, #0]
 800b780:	f042 0204 	orr.w	r2, r2, #4
 800b784:	60da      	str	r2, [r3, #12]
 800b786:	e014      	b.n	800b7b2 <HAL_TIM_IC_Start_IT+0x1d2>
 800b788:	687b      	ldr	r3, [r7, #4]
 800b78a:	681b      	ldr	r3, [r3, #0]
 800b78c:	68da      	ldr	r2, [r3, #12]
 800b78e:	687b      	ldr	r3, [r7, #4]
 800b790:	681b      	ldr	r3, [r3, #0]
 800b792:	f042 0208 	orr.w	r2, r2, #8
 800b796:	60da      	str	r2, [r3, #12]
 800b798:	e00b      	b.n	800b7b2 <HAL_TIM_IC_Start_IT+0x1d2>
 800b79a:	687b      	ldr	r3, [r7, #4]
 800b79c:	681b      	ldr	r3, [r3, #0]
 800b79e:	68da      	ldr	r2, [r3, #12]
 800b7a0:	687b      	ldr	r3, [r7, #4]
 800b7a2:	681b      	ldr	r3, [r3, #0]
 800b7a4:	f042 0210 	orr.w	r2, r2, #16
 800b7a8:	60da      	str	r2, [r3, #12]
 800b7aa:	e002      	b.n	800b7b2 <HAL_TIM_IC_Start_IT+0x1d2>
 800b7ac:	2301      	movs	r3, #1
 800b7ae:	73fb      	strb	r3, [r7, #15]
 800b7b0:	bf00      	nop
 800b7b2:	7bfb      	ldrb	r3, [r7, #15]
 800b7b4:	2b00      	cmp	r3, #0
 800b7b6:	d14e      	bne.n	800b856 <HAL_TIM_IC_Start_IT+0x276>
 800b7b8:	687b      	ldr	r3, [r7, #4]
 800b7ba:	681b      	ldr	r3, [r3, #0]
 800b7bc:	2201      	movs	r2, #1
 800b7be:	6839      	ldr	r1, [r7, #0]
 800b7c0:	4618      	mov	r0, r3
 800b7c2:	f001 fa39 	bl	800cc38 <TIM_CCxChannelCmd>
 800b7c6:	687b      	ldr	r3, [r7, #4]
 800b7c8:	681b      	ldr	r3, [r3, #0]
 800b7ca:	4a25      	ldr	r2, [pc, #148]	; (800b860 <HAL_TIM_IC_Start_IT+0x280>)
 800b7cc:	4293      	cmp	r3, r2
 800b7ce:	d022      	beq.n	800b816 <HAL_TIM_IC_Start_IT+0x236>
 800b7d0:	687b      	ldr	r3, [r7, #4]
 800b7d2:	681b      	ldr	r3, [r3, #0]
 800b7d4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b7d8:	d01d      	beq.n	800b816 <HAL_TIM_IC_Start_IT+0x236>
 800b7da:	687b      	ldr	r3, [r7, #4]
 800b7dc:	681b      	ldr	r3, [r3, #0]
 800b7de:	4a21      	ldr	r2, [pc, #132]	; (800b864 <HAL_TIM_IC_Start_IT+0x284>)
 800b7e0:	4293      	cmp	r3, r2
 800b7e2:	d018      	beq.n	800b816 <HAL_TIM_IC_Start_IT+0x236>
 800b7e4:	687b      	ldr	r3, [r7, #4]
 800b7e6:	681b      	ldr	r3, [r3, #0]
 800b7e8:	4a1f      	ldr	r2, [pc, #124]	; (800b868 <HAL_TIM_IC_Start_IT+0x288>)
 800b7ea:	4293      	cmp	r3, r2
 800b7ec:	d013      	beq.n	800b816 <HAL_TIM_IC_Start_IT+0x236>
 800b7ee:	687b      	ldr	r3, [r7, #4]
 800b7f0:	681b      	ldr	r3, [r3, #0]
 800b7f2:	4a1e      	ldr	r2, [pc, #120]	; (800b86c <HAL_TIM_IC_Start_IT+0x28c>)
 800b7f4:	4293      	cmp	r3, r2
 800b7f6:	d00e      	beq.n	800b816 <HAL_TIM_IC_Start_IT+0x236>
 800b7f8:	687b      	ldr	r3, [r7, #4]
 800b7fa:	681b      	ldr	r3, [r3, #0]
 800b7fc:	4a1c      	ldr	r2, [pc, #112]	; (800b870 <HAL_TIM_IC_Start_IT+0x290>)
 800b7fe:	4293      	cmp	r3, r2
 800b800:	d009      	beq.n	800b816 <HAL_TIM_IC_Start_IT+0x236>
 800b802:	687b      	ldr	r3, [r7, #4]
 800b804:	681b      	ldr	r3, [r3, #0]
 800b806:	4a1b      	ldr	r2, [pc, #108]	; (800b874 <HAL_TIM_IC_Start_IT+0x294>)
 800b808:	4293      	cmp	r3, r2
 800b80a:	d004      	beq.n	800b816 <HAL_TIM_IC_Start_IT+0x236>
 800b80c:	687b      	ldr	r3, [r7, #4]
 800b80e:	681b      	ldr	r3, [r3, #0]
 800b810:	4a19      	ldr	r2, [pc, #100]	; (800b878 <HAL_TIM_IC_Start_IT+0x298>)
 800b812:	4293      	cmp	r3, r2
 800b814:	d115      	bne.n	800b842 <HAL_TIM_IC_Start_IT+0x262>
 800b816:	687b      	ldr	r3, [r7, #4]
 800b818:	681b      	ldr	r3, [r3, #0]
 800b81a:	689a      	ldr	r2, [r3, #8]
 800b81c:	4b17      	ldr	r3, [pc, #92]	; (800b87c <HAL_TIM_IC_Start_IT+0x29c>)
 800b81e:	4013      	ands	r3, r2
 800b820:	60bb      	str	r3, [r7, #8]
 800b822:	68bb      	ldr	r3, [r7, #8]
 800b824:	2b06      	cmp	r3, #6
 800b826:	d015      	beq.n	800b854 <HAL_TIM_IC_Start_IT+0x274>
 800b828:	68bb      	ldr	r3, [r7, #8]
 800b82a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b82e:	d011      	beq.n	800b854 <HAL_TIM_IC_Start_IT+0x274>
 800b830:	687b      	ldr	r3, [r7, #4]
 800b832:	681b      	ldr	r3, [r3, #0]
 800b834:	681a      	ldr	r2, [r3, #0]
 800b836:	687b      	ldr	r3, [r7, #4]
 800b838:	681b      	ldr	r3, [r3, #0]
 800b83a:	f042 0201 	orr.w	r2, r2, #1
 800b83e:	601a      	str	r2, [r3, #0]
 800b840:	e008      	b.n	800b854 <HAL_TIM_IC_Start_IT+0x274>
 800b842:	687b      	ldr	r3, [r7, #4]
 800b844:	681b      	ldr	r3, [r3, #0]
 800b846:	681a      	ldr	r2, [r3, #0]
 800b848:	687b      	ldr	r3, [r7, #4]
 800b84a:	681b      	ldr	r3, [r3, #0]
 800b84c:	f042 0201 	orr.w	r2, r2, #1
 800b850:	601a      	str	r2, [r3, #0]
 800b852:	e000      	b.n	800b856 <HAL_TIM_IC_Start_IT+0x276>
 800b854:	bf00      	nop
 800b856:	7bfb      	ldrb	r3, [r7, #15]
 800b858:	4618      	mov	r0, r3
 800b85a:	3710      	adds	r7, #16
 800b85c:	46bd      	mov	sp, r7
 800b85e:	bd80      	pop	{r7, pc}
 800b860:	40010000 	.word	0x40010000
 800b864:	40000400 	.word	0x40000400
 800b868:	40000800 	.word	0x40000800
 800b86c:	40000c00 	.word	0x40000c00
 800b870:	40010400 	.word	0x40010400
 800b874:	40001800 	.word	0x40001800
 800b878:	40014000 	.word	0x40014000
 800b87c:	00010007 	.word	0x00010007

0800b880 <HAL_TIM_IC_Stop_IT>:
 800b880:	b580      	push	{r7, lr}
 800b882:	b084      	sub	sp, #16
 800b884:	af00      	add	r7, sp, #0
 800b886:	6078      	str	r0, [r7, #4]
 800b888:	6039      	str	r1, [r7, #0]
 800b88a:	2300      	movs	r3, #0
 800b88c:	73fb      	strb	r3, [r7, #15]
 800b88e:	683b      	ldr	r3, [r7, #0]
 800b890:	2b0c      	cmp	r3, #12
 800b892:	d841      	bhi.n	800b918 <HAL_TIM_IC_Stop_IT+0x98>
 800b894:	a201      	add	r2, pc, #4	; (adr r2, 800b89c <HAL_TIM_IC_Stop_IT+0x1c>)
 800b896:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b89a:	bf00      	nop
 800b89c:	0800b8d1 	.word	0x0800b8d1
 800b8a0:	0800b919 	.word	0x0800b919
 800b8a4:	0800b919 	.word	0x0800b919
 800b8a8:	0800b919 	.word	0x0800b919
 800b8ac:	0800b8e3 	.word	0x0800b8e3
 800b8b0:	0800b919 	.word	0x0800b919
 800b8b4:	0800b919 	.word	0x0800b919
 800b8b8:	0800b919 	.word	0x0800b919
 800b8bc:	0800b8f5 	.word	0x0800b8f5
 800b8c0:	0800b919 	.word	0x0800b919
 800b8c4:	0800b919 	.word	0x0800b919
 800b8c8:	0800b919 	.word	0x0800b919
 800b8cc:	0800b907 	.word	0x0800b907
 800b8d0:	687b      	ldr	r3, [r7, #4]
 800b8d2:	681b      	ldr	r3, [r3, #0]
 800b8d4:	68da      	ldr	r2, [r3, #12]
 800b8d6:	687b      	ldr	r3, [r7, #4]
 800b8d8:	681b      	ldr	r3, [r3, #0]
 800b8da:	f022 0202 	bic.w	r2, r2, #2
 800b8de:	60da      	str	r2, [r3, #12]
 800b8e0:	e01d      	b.n	800b91e <HAL_TIM_IC_Stop_IT+0x9e>
 800b8e2:	687b      	ldr	r3, [r7, #4]
 800b8e4:	681b      	ldr	r3, [r3, #0]
 800b8e6:	68da      	ldr	r2, [r3, #12]
 800b8e8:	687b      	ldr	r3, [r7, #4]
 800b8ea:	681b      	ldr	r3, [r3, #0]
 800b8ec:	f022 0204 	bic.w	r2, r2, #4
 800b8f0:	60da      	str	r2, [r3, #12]
 800b8f2:	e014      	b.n	800b91e <HAL_TIM_IC_Stop_IT+0x9e>
 800b8f4:	687b      	ldr	r3, [r7, #4]
 800b8f6:	681b      	ldr	r3, [r3, #0]
 800b8f8:	68da      	ldr	r2, [r3, #12]
 800b8fa:	687b      	ldr	r3, [r7, #4]
 800b8fc:	681b      	ldr	r3, [r3, #0]
 800b8fe:	f022 0208 	bic.w	r2, r2, #8
 800b902:	60da      	str	r2, [r3, #12]
 800b904:	e00b      	b.n	800b91e <HAL_TIM_IC_Stop_IT+0x9e>
 800b906:	687b      	ldr	r3, [r7, #4]
 800b908:	681b      	ldr	r3, [r3, #0]
 800b90a:	68da      	ldr	r2, [r3, #12]
 800b90c:	687b      	ldr	r3, [r7, #4]
 800b90e:	681b      	ldr	r3, [r3, #0]
 800b910:	f022 0210 	bic.w	r2, r2, #16
 800b914:	60da      	str	r2, [r3, #12]
 800b916:	e002      	b.n	800b91e <HAL_TIM_IC_Stop_IT+0x9e>
 800b918:	2301      	movs	r3, #1
 800b91a:	73fb      	strb	r3, [r7, #15]
 800b91c:	bf00      	nop
 800b91e:	7bfb      	ldrb	r3, [r7, #15]
 800b920:	2b00      	cmp	r3, #0
 800b922:	d166      	bne.n	800b9f2 <HAL_TIM_IC_Stop_IT+0x172>
 800b924:	687b      	ldr	r3, [r7, #4]
 800b926:	681b      	ldr	r3, [r3, #0]
 800b928:	2200      	movs	r2, #0
 800b92a:	6839      	ldr	r1, [r7, #0]
 800b92c:	4618      	mov	r0, r3
 800b92e:	f001 f983 	bl	800cc38 <TIM_CCxChannelCmd>
 800b932:	687b      	ldr	r3, [r7, #4]
 800b934:	681b      	ldr	r3, [r3, #0]
 800b936:	6a1a      	ldr	r2, [r3, #32]
 800b938:	f241 1311 	movw	r3, #4369	; 0x1111
 800b93c:	4013      	ands	r3, r2
 800b93e:	2b00      	cmp	r3, #0
 800b940:	d10f      	bne.n	800b962 <HAL_TIM_IC_Stop_IT+0xe2>
 800b942:	687b      	ldr	r3, [r7, #4]
 800b944:	681b      	ldr	r3, [r3, #0]
 800b946:	6a1a      	ldr	r2, [r3, #32]
 800b948:	f240 4344 	movw	r3, #1092	; 0x444
 800b94c:	4013      	ands	r3, r2
 800b94e:	2b00      	cmp	r3, #0
 800b950:	d107      	bne.n	800b962 <HAL_TIM_IC_Stop_IT+0xe2>
 800b952:	687b      	ldr	r3, [r7, #4]
 800b954:	681b      	ldr	r3, [r3, #0]
 800b956:	681a      	ldr	r2, [r3, #0]
 800b958:	687b      	ldr	r3, [r7, #4]
 800b95a:	681b      	ldr	r3, [r3, #0]
 800b95c:	f022 0201 	bic.w	r2, r2, #1
 800b960:	601a      	str	r2, [r3, #0]
 800b962:	683b      	ldr	r3, [r7, #0]
 800b964:	2b00      	cmp	r3, #0
 800b966:	d104      	bne.n	800b972 <HAL_TIM_IC_Stop_IT+0xf2>
 800b968:	687b      	ldr	r3, [r7, #4]
 800b96a:	2201      	movs	r2, #1
 800b96c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b970:	e023      	b.n	800b9ba <HAL_TIM_IC_Stop_IT+0x13a>
 800b972:	683b      	ldr	r3, [r7, #0]
 800b974:	2b04      	cmp	r3, #4
 800b976:	d104      	bne.n	800b982 <HAL_TIM_IC_Stop_IT+0x102>
 800b978:	687b      	ldr	r3, [r7, #4]
 800b97a:	2201      	movs	r2, #1
 800b97c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b980:	e01b      	b.n	800b9ba <HAL_TIM_IC_Stop_IT+0x13a>
 800b982:	683b      	ldr	r3, [r7, #0]
 800b984:	2b08      	cmp	r3, #8
 800b986:	d104      	bne.n	800b992 <HAL_TIM_IC_Stop_IT+0x112>
 800b988:	687b      	ldr	r3, [r7, #4]
 800b98a:	2201      	movs	r2, #1
 800b98c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b990:	e013      	b.n	800b9ba <HAL_TIM_IC_Stop_IT+0x13a>
 800b992:	683b      	ldr	r3, [r7, #0]
 800b994:	2b0c      	cmp	r3, #12
 800b996:	d104      	bne.n	800b9a2 <HAL_TIM_IC_Stop_IT+0x122>
 800b998:	687b      	ldr	r3, [r7, #4]
 800b99a:	2201      	movs	r2, #1
 800b99c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b9a0:	e00b      	b.n	800b9ba <HAL_TIM_IC_Stop_IT+0x13a>
 800b9a2:	683b      	ldr	r3, [r7, #0]
 800b9a4:	2b10      	cmp	r3, #16
 800b9a6:	d104      	bne.n	800b9b2 <HAL_TIM_IC_Stop_IT+0x132>
 800b9a8:	687b      	ldr	r3, [r7, #4]
 800b9aa:	2201      	movs	r2, #1
 800b9ac:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800b9b0:	e003      	b.n	800b9ba <HAL_TIM_IC_Stop_IT+0x13a>
 800b9b2:	687b      	ldr	r3, [r7, #4]
 800b9b4:	2201      	movs	r2, #1
 800b9b6:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800b9ba:	683b      	ldr	r3, [r7, #0]
 800b9bc:	2b00      	cmp	r3, #0
 800b9be:	d104      	bne.n	800b9ca <HAL_TIM_IC_Stop_IT+0x14a>
 800b9c0:	687b      	ldr	r3, [r7, #4]
 800b9c2:	2201      	movs	r2, #1
 800b9c4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b9c8:	e013      	b.n	800b9f2 <HAL_TIM_IC_Stop_IT+0x172>
 800b9ca:	683b      	ldr	r3, [r7, #0]
 800b9cc:	2b04      	cmp	r3, #4
 800b9ce:	d104      	bne.n	800b9da <HAL_TIM_IC_Stop_IT+0x15a>
 800b9d0:	687b      	ldr	r3, [r7, #4]
 800b9d2:	2201      	movs	r2, #1
 800b9d4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b9d8:	e00b      	b.n	800b9f2 <HAL_TIM_IC_Stop_IT+0x172>
 800b9da:	683b      	ldr	r3, [r7, #0]
 800b9dc:	2b08      	cmp	r3, #8
 800b9de:	d104      	bne.n	800b9ea <HAL_TIM_IC_Stop_IT+0x16a>
 800b9e0:	687b      	ldr	r3, [r7, #4]
 800b9e2:	2201      	movs	r2, #1
 800b9e4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800b9e8:	e003      	b.n	800b9f2 <HAL_TIM_IC_Stop_IT+0x172>
 800b9ea:	687b      	ldr	r3, [r7, #4]
 800b9ec:	2201      	movs	r2, #1
 800b9ee:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 800b9f2:	7bfb      	ldrb	r3, [r7, #15]
 800b9f4:	4618      	mov	r0, r3
 800b9f6:	3710      	adds	r7, #16
 800b9f8:	46bd      	mov	sp, r7
 800b9fa:	bd80      	pop	{r7, pc}

0800b9fc <HAL_TIM_IRQHandler>:
 800b9fc:	b580      	push	{r7, lr}
 800b9fe:	b082      	sub	sp, #8
 800ba00:	af00      	add	r7, sp, #0
 800ba02:	6078      	str	r0, [r7, #4]
 800ba04:	687b      	ldr	r3, [r7, #4]
 800ba06:	681b      	ldr	r3, [r3, #0]
 800ba08:	691b      	ldr	r3, [r3, #16]
 800ba0a:	f003 0302 	and.w	r3, r3, #2
 800ba0e:	2b02      	cmp	r3, #2
 800ba10:	d122      	bne.n	800ba58 <HAL_TIM_IRQHandler+0x5c>
 800ba12:	687b      	ldr	r3, [r7, #4]
 800ba14:	681b      	ldr	r3, [r3, #0]
 800ba16:	68db      	ldr	r3, [r3, #12]
 800ba18:	f003 0302 	and.w	r3, r3, #2
 800ba1c:	2b02      	cmp	r3, #2
 800ba1e:	d11b      	bne.n	800ba58 <HAL_TIM_IRQHandler+0x5c>
 800ba20:	687b      	ldr	r3, [r7, #4]
 800ba22:	681b      	ldr	r3, [r3, #0]
 800ba24:	f06f 0202 	mvn.w	r2, #2
 800ba28:	611a      	str	r2, [r3, #16]
 800ba2a:	687b      	ldr	r3, [r7, #4]
 800ba2c:	2201      	movs	r2, #1
 800ba2e:	771a      	strb	r2, [r3, #28]
 800ba30:	687b      	ldr	r3, [r7, #4]
 800ba32:	681b      	ldr	r3, [r3, #0]
 800ba34:	699b      	ldr	r3, [r3, #24]
 800ba36:	f003 0303 	and.w	r3, r3, #3
 800ba3a:	2b00      	cmp	r3, #0
 800ba3c:	d003      	beq.n	800ba46 <HAL_TIM_IRQHandler+0x4a>
 800ba3e:	6878      	ldr	r0, [r7, #4]
 800ba40:	f7f8 f9b2 	bl	8003da8 <HAL_TIM_IC_CaptureCallback>
 800ba44:	e005      	b.n	800ba52 <HAL_TIM_IRQHandler+0x56>
 800ba46:	6878      	ldr	r0, [r7, #4]
 800ba48:	f000 fba0 	bl	800c18c <HAL_TIM_OC_DelayElapsedCallback>
 800ba4c:	6878      	ldr	r0, [r7, #4]
 800ba4e:	f000 fba7 	bl	800c1a0 <HAL_TIM_PWM_PulseFinishedCallback>
 800ba52:	687b      	ldr	r3, [r7, #4]
 800ba54:	2200      	movs	r2, #0
 800ba56:	771a      	strb	r2, [r3, #28]
 800ba58:	687b      	ldr	r3, [r7, #4]
 800ba5a:	681b      	ldr	r3, [r3, #0]
 800ba5c:	691b      	ldr	r3, [r3, #16]
 800ba5e:	f003 0304 	and.w	r3, r3, #4
 800ba62:	2b04      	cmp	r3, #4
 800ba64:	d122      	bne.n	800baac <HAL_TIM_IRQHandler+0xb0>
 800ba66:	687b      	ldr	r3, [r7, #4]
 800ba68:	681b      	ldr	r3, [r3, #0]
 800ba6a:	68db      	ldr	r3, [r3, #12]
 800ba6c:	f003 0304 	and.w	r3, r3, #4
 800ba70:	2b04      	cmp	r3, #4
 800ba72:	d11b      	bne.n	800baac <HAL_TIM_IRQHandler+0xb0>
 800ba74:	687b      	ldr	r3, [r7, #4]
 800ba76:	681b      	ldr	r3, [r3, #0]
 800ba78:	f06f 0204 	mvn.w	r2, #4
 800ba7c:	611a      	str	r2, [r3, #16]
 800ba7e:	687b      	ldr	r3, [r7, #4]
 800ba80:	2202      	movs	r2, #2
 800ba82:	771a      	strb	r2, [r3, #28]
 800ba84:	687b      	ldr	r3, [r7, #4]
 800ba86:	681b      	ldr	r3, [r3, #0]
 800ba88:	699b      	ldr	r3, [r3, #24]
 800ba8a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800ba8e:	2b00      	cmp	r3, #0
 800ba90:	d003      	beq.n	800ba9a <HAL_TIM_IRQHandler+0x9e>
 800ba92:	6878      	ldr	r0, [r7, #4]
 800ba94:	f7f8 f988 	bl	8003da8 <HAL_TIM_IC_CaptureCallback>
 800ba98:	e005      	b.n	800baa6 <HAL_TIM_IRQHandler+0xaa>
 800ba9a:	6878      	ldr	r0, [r7, #4]
 800ba9c:	f000 fb76 	bl	800c18c <HAL_TIM_OC_DelayElapsedCallback>
 800baa0:	6878      	ldr	r0, [r7, #4]
 800baa2:	f000 fb7d 	bl	800c1a0 <HAL_TIM_PWM_PulseFinishedCallback>
 800baa6:	687b      	ldr	r3, [r7, #4]
 800baa8:	2200      	movs	r2, #0
 800baaa:	771a      	strb	r2, [r3, #28]
 800baac:	687b      	ldr	r3, [r7, #4]
 800baae:	681b      	ldr	r3, [r3, #0]
 800bab0:	691b      	ldr	r3, [r3, #16]
 800bab2:	f003 0308 	and.w	r3, r3, #8
 800bab6:	2b08      	cmp	r3, #8
 800bab8:	d122      	bne.n	800bb00 <HAL_TIM_IRQHandler+0x104>
 800baba:	687b      	ldr	r3, [r7, #4]
 800babc:	681b      	ldr	r3, [r3, #0]
 800babe:	68db      	ldr	r3, [r3, #12]
 800bac0:	f003 0308 	and.w	r3, r3, #8
 800bac4:	2b08      	cmp	r3, #8
 800bac6:	d11b      	bne.n	800bb00 <HAL_TIM_IRQHandler+0x104>
 800bac8:	687b      	ldr	r3, [r7, #4]
 800baca:	681b      	ldr	r3, [r3, #0]
 800bacc:	f06f 0208 	mvn.w	r2, #8
 800bad0:	611a      	str	r2, [r3, #16]
 800bad2:	687b      	ldr	r3, [r7, #4]
 800bad4:	2204      	movs	r2, #4
 800bad6:	771a      	strb	r2, [r3, #28]
 800bad8:	687b      	ldr	r3, [r7, #4]
 800bada:	681b      	ldr	r3, [r3, #0]
 800badc:	69db      	ldr	r3, [r3, #28]
 800bade:	f003 0303 	and.w	r3, r3, #3
 800bae2:	2b00      	cmp	r3, #0
 800bae4:	d003      	beq.n	800baee <HAL_TIM_IRQHandler+0xf2>
 800bae6:	6878      	ldr	r0, [r7, #4]
 800bae8:	f7f8 f95e 	bl	8003da8 <HAL_TIM_IC_CaptureCallback>
 800baec:	e005      	b.n	800bafa <HAL_TIM_IRQHandler+0xfe>
 800baee:	6878      	ldr	r0, [r7, #4]
 800baf0:	f000 fb4c 	bl	800c18c <HAL_TIM_OC_DelayElapsedCallback>
 800baf4:	6878      	ldr	r0, [r7, #4]
 800baf6:	f000 fb53 	bl	800c1a0 <HAL_TIM_PWM_PulseFinishedCallback>
 800bafa:	687b      	ldr	r3, [r7, #4]
 800bafc:	2200      	movs	r2, #0
 800bafe:	771a      	strb	r2, [r3, #28]
 800bb00:	687b      	ldr	r3, [r7, #4]
 800bb02:	681b      	ldr	r3, [r3, #0]
 800bb04:	691b      	ldr	r3, [r3, #16]
 800bb06:	f003 0310 	and.w	r3, r3, #16
 800bb0a:	2b10      	cmp	r3, #16
 800bb0c:	d122      	bne.n	800bb54 <HAL_TIM_IRQHandler+0x158>
 800bb0e:	687b      	ldr	r3, [r7, #4]
 800bb10:	681b      	ldr	r3, [r3, #0]
 800bb12:	68db      	ldr	r3, [r3, #12]
 800bb14:	f003 0310 	and.w	r3, r3, #16
 800bb18:	2b10      	cmp	r3, #16
 800bb1a:	d11b      	bne.n	800bb54 <HAL_TIM_IRQHandler+0x158>
 800bb1c:	687b      	ldr	r3, [r7, #4]
 800bb1e:	681b      	ldr	r3, [r3, #0]
 800bb20:	f06f 0210 	mvn.w	r2, #16
 800bb24:	611a      	str	r2, [r3, #16]
 800bb26:	687b      	ldr	r3, [r7, #4]
 800bb28:	2208      	movs	r2, #8
 800bb2a:	771a      	strb	r2, [r3, #28]
 800bb2c:	687b      	ldr	r3, [r7, #4]
 800bb2e:	681b      	ldr	r3, [r3, #0]
 800bb30:	69db      	ldr	r3, [r3, #28]
 800bb32:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800bb36:	2b00      	cmp	r3, #0
 800bb38:	d003      	beq.n	800bb42 <HAL_TIM_IRQHandler+0x146>
 800bb3a:	6878      	ldr	r0, [r7, #4]
 800bb3c:	f7f8 f934 	bl	8003da8 <HAL_TIM_IC_CaptureCallback>
 800bb40:	e005      	b.n	800bb4e <HAL_TIM_IRQHandler+0x152>
 800bb42:	6878      	ldr	r0, [r7, #4]
 800bb44:	f000 fb22 	bl	800c18c <HAL_TIM_OC_DelayElapsedCallback>
 800bb48:	6878      	ldr	r0, [r7, #4]
 800bb4a:	f000 fb29 	bl	800c1a0 <HAL_TIM_PWM_PulseFinishedCallback>
 800bb4e:	687b      	ldr	r3, [r7, #4]
 800bb50:	2200      	movs	r2, #0
 800bb52:	771a      	strb	r2, [r3, #28]
 800bb54:	687b      	ldr	r3, [r7, #4]
 800bb56:	681b      	ldr	r3, [r3, #0]
 800bb58:	691b      	ldr	r3, [r3, #16]
 800bb5a:	f003 0301 	and.w	r3, r3, #1
 800bb5e:	2b01      	cmp	r3, #1
 800bb60:	d10e      	bne.n	800bb80 <HAL_TIM_IRQHandler+0x184>
 800bb62:	687b      	ldr	r3, [r7, #4]
 800bb64:	681b      	ldr	r3, [r3, #0]
 800bb66:	68db      	ldr	r3, [r3, #12]
 800bb68:	f003 0301 	and.w	r3, r3, #1
 800bb6c:	2b01      	cmp	r3, #1
 800bb6e:	d107      	bne.n	800bb80 <HAL_TIM_IRQHandler+0x184>
 800bb70:	687b      	ldr	r3, [r7, #4]
 800bb72:	681b      	ldr	r3, [r3, #0]
 800bb74:	f06f 0201 	mvn.w	r2, #1
 800bb78:	611a      	str	r2, [r3, #16]
 800bb7a:	6878      	ldr	r0, [r7, #4]
 800bb7c:	f7f8 f990 	bl	8003ea0 <HAL_TIM_PeriodElapsedCallback>
 800bb80:	687b      	ldr	r3, [r7, #4]
 800bb82:	681b      	ldr	r3, [r3, #0]
 800bb84:	691b      	ldr	r3, [r3, #16]
 800bb86:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800bb8a:	2b80      	cmp	r3, #128	; 0x80
 800bb8c:	d10e      	bne.n	800bbac <HAL_TIM_IRQHandler+0x1b0>
 800bb8e:	687b      	ldr	r3, [r7, #4]
 800bb90:	681b      	ldr	r3, [r3, #0]
 800bb92:	68db      	ldr	r3, [r3, #12]
 800bb94:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800bb98:	2b80      	cmp	r3, #128	; 0x80
 800bb9a:	d107      	bne.n	800bbac <HAL_TIM_IRQHandler+0x1b0>
 800bb9c:	687b      	ldr	r3, [r7, #4]
 800bb9e:	681b      	ldr	r3, [r3, #0]
 800bba0:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800bba4:	611a      	str	r2, [r3, #16]
 800bba6:	6878      	ldr	r0, [r7, #4]
 800bba8:	f001 f904 	bl	800cdb4 <HAL_TIMEx_BreakCallback>
 800bbac:	687b      	ldr	r3, [r7, #4]
 800bbae:	681b      	ldr	r3, [r3, #0]
 800bbb0:	691b      	ldr	r3, [r3, #16]
 800bbb2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bbb6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bbba:	d10e      	bne.n	800bbda <HAL_TIM_IRQHandler+0x1de>
 800bbbc:	687b      	ldr	r3, [r7, #4]
 800bbbe:	681b      	ldr	r3, [r3, #0]
 800bbc0:	68db      	ldr	r3, [r3, #12]
 800bbc2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800bbc6:	2b80      	cmp	r3, #128	; 0x80
 800bbc8:	d107      	bne.n	800bbda <HAL_TIM_IRQHandler+0x1de>
 800bbca:	687b      	ldr	r3, [r7, #4]
 800bbcc:	681b      	ldr	r3, [r3, #0]
 800bbce:	f46f 7280 	mvn.w	r2, #256	; 0x100
 800bbd2:	611a      	str	r2, [r3, #16]
 800bbd4:	6878      	ldr	r0, [r7, #4]
 800bbd6:	f001 f8f7 	bl	800cdc8 <HAL_TIMEx_Break2Callback>
 800bbda:	687b      	ldr	r3, [r7, #4]
 800bbdc:	681b      	ldr	r3, [r3, #0]
 800bbde:	691b      	ldr	r3, [r3, #16]
 800bbe0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bbe4:	2b40      	cmp	r3, #64	; 0x40
 800bbe6:	d10e      	bne.n	800bc06 <HAL_TIM_IRQHandler+0x20a>
 800bbe8:	687b      	ldr	r3, [r7, #4]
 800bbea:	681b      	ldr	r3, [r3, #0]
 800bbec:	68db      	ldr	r3, [r3, #12]
 800bbee:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bbf2:	2b40      	cmp	r3, #64	; 0x40
 800bbf4:	d107      	bne.n	800bc06 <HAL_TIM_IRQHandler+0x20a>
 800bbf6:	687b      	ldr	r3, [r7, #4]
 800bbf8:	681b      	ldr	r3, [r3, #0]
 800bbfa:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800bbfe:	611a      	str	r2, [r3, #16]
 800bc00:	6878      	ldr	r0, [r7, #4]
 800bc02:	f000 fad7 	bl	800c1b4 <HAL_TIM_TriggerCallback>
 800bc06:	687b      	ldr	r3, [r7, #4]
 800bc08:	681b      	ldr	r3, [r3, #0]
 800bc0a:	691b      	ldr	r3, [r3, #16]
 800bc0c:	f003 0320 	and.w	r3, r3, #32
 800bc10:	2b20      	cmp	r3, #32
 800bc12:	d10e      	bne.n	800bc32 <HAL_TIM_IRQHandler+0x236>
 800bc14:	687b      	ldr	r3, [r7, #4]
 800bc16:	681b      	ldr	r3, [r3, #0]
 800bc18:	68db      	ldr	r3, [r3, #12]
 800bc1a:	f003 0320 	and.w	r3, r3, #32
 800bc1e:	2b20      	cmp	r3, #32
 800bc20:	d107      	bne.n	800bc32 <HAL_TIM_IRQHandler+0x236>
 800bc22:	687b      	ldr	r3, [r7, #4]
 800bc24:	681b      	ldr	r3, [r3, #0]
 800bc26:	f06f 0220 	mvn.w	r2, #32
 800bc2a:	611a      	str	r2, [r3, #16]
 800bc2c:	6878      	ldr	r0, [r7, #4]
 800bc2e:	f001 f8b7 	bl	800cda0 <HAL_TIMEx_CommutCallback>
 800bc32:	bf00      	nop
 800bc34:	3708      	adds	r7, #8
 800bc36:	46bd      	mov	sp, r7
 800bc38:	bd80      	pop	{r7, pc}

0800bc3a <HAL_TIM_IC_ConfigChannel>:
 800bc3a:	b580      	push	{r7, lr}
 800bc3c:	b086      	sub	sp, #24
 800bc3e:	af00      	add	r7, sp, #0
 800bc40:	60f8      	str	r0, [r7, #12]
 800bc42:	60b9      	str	r1, [r7, #8]
 800bc44:	607a      	str	r2, [r7, #4]
 800bc46:	2300      	movs	r3, #0
 800bc48:	75fb      	strb	r3, [r7, #23]
 800bc4a:	68fb      	ldr	r3, [r7, #12]
 800bc4c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bc50:	2b01      	cmp	r3, #1
 800bc52:	d101      	bne.n	800bc58 <HAL_TIM_IC_ConfigChannel+0x1e>
 800bc54:	2302      	movs	r3, #2
 800bc56:	e088      	b.n	800bd6a <HAL_TIM_IC_ConfigChannel+0x130>
 800bc58:	68fb      	ldr	r3, [r7, #12]
 800bc5a:	2201      	movs	r2, #1
 800bc5c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bc60:	687b      	ldr	r3, [r7, #4]
 800bc62:	2b00      	cmp	r3, #0
 800bc64:	d11b      	bne.n	800bc9e <HAL_TIM_IC_ConfigChannel+0x64>
 800bc66:	68fb      	ldr	r3, [r7, #12]
 800bc68:	6818      	ldr	r0, [r3, #0]
 800bc6a:	68bb      	ldr	r3, [r7, #8]
 800bc6c:	6819      	ldr	r1, [r3, #0]
 800bc6e:	68bb      	ldr	r3, [r7, #8]
 800bc70:	685a      	ldr	r2, [r3, #4]
 800bc72:	68bb      	ldr	r3, [r7, #8]
 800bc74:	68db      	ldr	r3, [r3, #12]
 800bc76:	f000 fe17 	bl	800c8a8 <TIM_TI1_SetConfig>
 800bc7a:	68fb      	ldr	r3, [r7, #12]
 800bc7c:	681b      	ldr	r3, [r3, #0]
 800bc7e:	699a      	ldr	r2, [r3, #24]
 800bc80:	68fb      	ldr	r3, [r7, #12]
 800bc82:	681b      	ldr	r3, [r3, #0]
 800bc84:	f022 020c 	bic.w	r2, r2, #12
 800bc88:	619a      	str	r2, [r3, #24]
 800bc8a:	68fb      	ldr	r3, [r7, #12]
 800bc8c:	681b      	ldr	r3, [r3, #0]
 800bc8e:	6999      	ldr	r1, [r3, #24]
 800bc90:	68bb      	ldr	r3, [r7, #8]
 800bc92:	689a      	ldr	r2, [r3, #8]
 800bc94:	68fb      	ldr	r3, [r7, #12]
 800bc96:	681b      	ldr	r3, [r3, #0]
 800bc98:	430a      	orrs	r2, r1
 800bc9a:	619a      	str	r2, [r3, #24]
 800bc9c:	e060      	b.n	800bd60 <HAL_TIM_IC_ConfigChannel+0x126>
 800bc9e:	687b      	ldr	r3, [r7, #4]
 800bca0:	2b04      	cmp	r3, #4
 800bca2:	d11c      	bne.n	800bcde <HAL_TIM_IC_ConfigChannel+0xa4>
 800bca4:	68fb      	ldr	r3, [r7, #12]
 800bca6:	6818      	ldr	r0, [r3, #0]
 800bca8:	68bb      	ldr	r3, [r7, #8]
 800bcaa:	6819      	ldr	r1, [r3, #0]
 800bcac:	68bb      	ldr	r3, [r7, #8]
 800bcae:	685a      	ldr	r2, [r3, #4]
 800bcb0:	68bb      	ldr	r3, [r7, #8]
 800bcb2:	68db      	ldr	r3, [r3, #12]
 800bcb4:	f000 fe9b 	bl	800c9ee <TIM_TI2_SetConfig>
 800bcb8:	68fb      	ldr	r3, [r7, #12]
 800bcba:	681b      	ldr	r3, [r3, #0]
 800bcbc:	699a      	ldr	r2, [r3, #24]
 800bcbe:	68fb      	ldr	r3, [r7, #12]
 800bcc0:	681b      	ldr	r3, [r3, #0]
 800bcc2:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800bcc6:	619a      	str	r2, [r3, #24]
 800bcc8:	68fb      	ldr	r3, [r7, #12]
 800bcca:	681b      	ldr	r3, [r3, #0]
 800bccc:	6999      	ldr	r1, [r3, #24]
 800bcce:	68bb      	ldr	r3, [r7, #8]
 800bcd0:	689b      	ldr	r3, [r3, #8]
 800bcd2:	021a      	lsls	r2, r3, #8
 800bcd4:	68fb      	ldr	r3, [r7, #12]
 800bcd6:	681b      	ldr	r3, [r3, #0]
 800bcd8:	430a      	orrs	r2, r1
 800bcda:	619a      	str	r2, [r3, #24]
 800bcdc:	e040      	b.n	800bd60 <HAL_TIM_IC_ConfigChannel+0x126>
 800bcde:	687b      	ldr	r3, [r7, #4]
 800bce0:	2b08      	cmp	r3, #8
 800bce2:	d11b      	bne.n	800bd1c <HAL_TIM_IC_ConfigChannel+0xe2>
 800bce4:	68fb      	ldr	r3, [r7, #12]
 800bce6:	6818      	ldr	r0, [r3, #0]
 800bce8:	68bb      	ldr	r3, [r7, #8]
 800bcea:	6819      	ldr	r1, [r3, #0]
 800bcec:	68bb      	ldr	r3, [r7, #8]
 800bcee:	685a      	ldr	r2, [r3, #4]
 800bcf0:	68bb      	ldr	r3, [r7, #8]
 800bcf2:	68db      	ldr	r3, [r3, #12]
 800bcf4:	f000 fee8 	bl	800cac8 <TIM_TI3_SetConfig>
 800bcf8:	68fb      	ldr	r3, [r7, #12]
 800bcfa:	681b      	ldr	r3, [r3, #0]
 800bcfc:	69da      	ldr	r2, [r3, #28]
 800bcfe:	68fb      	ldr	r3, [r7, #12]
 800bd00:	681b      	ldr	r3, [r3, #0]
 800bd02:	f022 020c 	bic.w	r2, r2, #12
 800bd06:	61da      	str	r2, [r3, #28]
 800bd08:	68fb      	ldr	r3, [r7, #12]
 800bd0a:	681b      	ldr	r3, [r3, #0]
 800bd0c:	69d9      	ldr	r1, [r3, #28]
 800bd0e:	68bb      	ldr	r3, [r7, #8]
 800bd10:	689a      	ldr	r2, [r3, #8]
 800bd12:	68fb      	ldr	r3, [r7, #12]
 800bd14:	681b      	ldr	r3, [r3, #0]
 800bd16:	430a      	orrs	r2, r1
 800bd18:	61da      	str	r2, [r3, #28]
 800bd1a:	e021      	b.n	800bd60 <HAL_TIM_IC_ConfigChannel+0x126>
 800bd1c:	687b      	ldr	r3, [r7, #4]
 800bd1e:	2b0c      	cmp	r3, #12
 800bd20:	d11c      	bne.n	800bd5c <HAL_TIM_IC_ConfigChannel+0x122>
 800bd22:	68fb      	ldr	r3, [r7, #12]
 800bd24:	6818      	ldr	r0, [r3, #0]
 800bd26:	68bb      	ldr	r3, [r7, #8]
 800bd28:	6819      	ldr	r1, [r3, #0]
 800bd2a:	68bb      	ldr	r3, [r7, #8]
 800bd2c:	685a      	ldr	r2, [r3, #4]
 800bd2e:	68bb      	ldr	r3, [r7, #8]
 800bd30:	68db      	ldr	r3, [r3, #12]
 800bd32:	f000 ff05 	bl	800cb40 <TIM_TI4_SetConfig>
 800bd36:	68fb      	ldr	r3, [r7, #12]
 800bd38:	681b      	ldr	r3, [r3, #0]
 800bd3a:	69da      	ldr	r2, [r3, #28]
 800bd3c:	68fb      	ldr	r3, [r7, #12]
 800bd3e:	681b      	ldr	r3, [r3, #0]
 800bd40:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800bd44:	61da      	str	r2, [r3, #28]
 800bd46:	68fb      	ldr	r3, [r7, #12]
 800bd48:	681b      	ldr	r3, [r3, #0]
 800bd4a:	69d9      	ldr	r1, [r3, #28]
 800bd4c:	68bb      	ldr	r3, [r7, #8]
 800bd4e:	689b      	ldr	r3, [r3, #8]
 800bd50:	021a      	lsls	r2, r3, #8
 800bd52:	68fb      	ldr	r3, [r7, #12]
 800bd54:	681b      	ldr	r3, [r3, #0]
 800bd56:	430a      	orrs	r2, r1
 800bd58:	61da      	str	r2, [r3, #28]
 800bd5a:	e001      	b.n	800bd60 <HAL_TIM_IC_ConfigChannel+0x126>
 800bd5c:	2301      	movs	r3, #1
 800bd5e:	75fb      	strb	r3, [r7, #23]
 800bd60:	68fb      	ldr	r3, [r7, #12]
 800bd62:	2200      	movs	r2, #0
 800bd64:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bd68:	7dfb      	ldrb	r3, [r7, #23]
 800bd6a:	4618      	mov	r0, r3
 800bd6c:	3718      	adds	r7, #24
 800bd6e:	46bd      	mov	sp, r7
 800bd70:	bd80      	pop	{r7, pc}
	...

0800bd74 <HAL_TIM_PWM_ConfigChannel>:
 800bd74:	b580      	push	{r7, lr}
 800bd76:	b086      	sub	sp, #24
 800bd78:	af00      	add	r7, sp, #0
 800bd7a:	60f8      	str	r0, [r7, #12]
 800bd7c:	60b9      	str	r1, [r7, #8]
 800bd7e:	607a      	str	r2, [r7, #4]
 800bd80:	2300      	movs	r3, #0
 800bd82:	75fb      	strb	r3, [r7, #23]
 800bd84:	68fb      	ldr	r3, [r7, #12]
 800bd86:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bd8a:	2b01      	cmp	r3, #1
 800bd8c:	d101      	bne.n	800bd92 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800bd8e:	2302      	movs	r3, #2
 800bd90:	e0ff      	b.n	800bf92 <HAL_TIM_PWM_ConfigChannel+0x21e>
 800bd92:	68fb      	ldr	r3, [r7, #12]
 800bd94:	2201      	movs	r2, #1
 800bd96:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bd9a:	687b      	ldr	r3, [r7, #4]
 800bd9c:	2b14      	cmp	r3, #20
 800bd9e:	f200 80f0 	bhi.w	800bf82 <HAL_TIM_PWM_ConfigChannel+0x20e>
 800bda2:	a201      	add	r2, pc, #4	; (adr r2, 800bda8 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800bda4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800bda8:	0800bdfd 	.word	0x0800bdfd
 800bdac:	0800bf83 	.word	0x0800bf83
 800bdb0:	0800bf83 	.word	0x0800bf83
 800bdb4:	0800bf83 	.word	0x0800bf83
 800bdb8:	0800be3d 	.word	0x0800be3d
 800bdbc:	0800bf83 	.word	0x0800bf83
 800bdc0:	0800bf83 	.word	0x0800bf83
 800bdc4:	0800bf83 	.word	0x0800bf83
 800bdc8:	0800be7f 	.word	0x0800be7f
 800bdcc:	0800bf83 	.word	0x0800bf83
 800bdd0:	0800bf83 	.word	0x0800bf83
 800bdd4:	0800bf83 	.word	0x0800bf83
 800bdd8:	0800bebf 	.word	0x0800bebf
 800bddc:	0800bf83 	.word	0x0800bf83
 800bde0:	0800bf83 	.word	0x0800bf83
 800bde4:	0800bf83 	.word	0x0800bf83
 800bde8:	0800bf01 	.word	0x0800bf01
 800bdec:	0800bf83 	.word	0x0800bf83
 800bdf0:	0800bf83 	.word	0x0800bf83
 800bdf4:	0800bf83 	.word	0x0800bf83
 800bdf8:	0800bf41 	.word	0x0800bf41
 800bdfc:	68fb      	ldr	r3, [r7, #12]
 800bdfe:	681b      	ldr	r3, [r3, #0]
 800be00:	68b9      	ldr	r1, [r7, #8]
 800be02:	4618      	mov	r0, r3
 800be04:	f000 fa7a 	bl	800c2fc <TIM_OC1_SetConfig>
 800be08:	68fb      	ldr	r3, [r7, #12]
 800be0a:	681b      	ldr	r3, [r3, #0]
 800be0c:	699a      	ldr	r2, [r3, #24]
 800be0e:	68fb      	ldr	r3, [r7, #12]
 800be10:	681b      	ldr	r3, [r3, #0]
 800be12:	f042 0208 	orr.w	r2, r2, #8
 800be16:	619a      	str	r2, [r3, #24]
 800be18:	68fb      	ldr	r3, [r7, #12]
 800be1a:	681b      	ldr	r3, [r3, #0]
 800be1c:	699a      	ldr	r2, [r3, #24]
 800be1e:	68fb      	ldr	r3, [r7, #12]
 800be20:	681b      	ldr	r3, [r3, #0]
 800be22:	f022 0204 	bic.w	r2, r2, #4
 800be26:	619a      	str	r2, [r3, #24]
 800be28:	68fb      	ldr	r3, [r7, #12]
 800be2a:	681b      	ldr	r3, [r3, #0]
 800be2c:	6999      	ldr	r1, [r3, #24]
 800be2e:	68bb      	ldr	r3, [r7, #8]
 800be30:	691a      	ldr	r2, [r3, #16]
 800be32:	68fb      	ldr	r3, [r7, #12]
 800be34:	681b      	ldr	r3, [r3, #0]
 800be36:	430a      	orrs	r2, r1
 800be38:	619a      	str	r2, [r3, #24]
 800be3a:	e0a5      	b.n	800bf88 <HAL_TIM_PWM_ConfigChannel+0x214>
 800be3c:	68fb      	ldr	r3, [r7, #12]
 800be3e:	681b      	ldr	r3, [r3, #0]
 800be40:	68b9      	ldr	r1, [r7, #8]
 800be42:	4618      	mov	r0, r3
 800be44:	f000 faea 	bl	800c41c <TIM_OC2_SetConfig>
 800be48:	68fb      	ldr	r3, [r7, #12]
 800be4a:	681b      	ldr	r3, [r3, #0]
 800be4c:	699a      	ldr	r2, [r3, #24]
 800be4e:	68fb      	ldr	r3, [r7, #12]
 800be50:	681b      	ldr	r3, [r3, #0]
 800be52:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800be56:	619a      	str	r2, [r3, #24]
 800be58:	68fb      	ldr	r3, [r7, #12]
 800be5a:	681b      	ldr	r3, [r3, #0]
 800be5c:	699a      	ldr	r2, [r3, #24]
 800be5e:	68fb      	ldr	r3, [r7, #12]
 800be60:	681b      	ldr	r3, [r3, #0]
 800be62:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800be66:	619a      	str	r2, [r3, #24]
 800be68:	68fb      	ldr	r3, [r7, #12]
 800be6a:	681b      	ldr	r3, [r3, #0]
 800be6c:	6999      	ldr	r1, [r3, #24]
 800be6e:	68bb      	ldr	r3, [r7, #8]
 800be70:	691b      	ldr	r3, [r3, #16]
 800be72:	021a      	lsls	r2, r3, #8
 800be74:	68fb      	ldr	r3, [r7, #12]
 800be76:	681b      	ldr	r3, [r3, #0]
 800be78:	430a      	orrs	r2, r1
 800be7a:	619a      	str	r2, [r3, #24]
 800be7c:	e084      	b.n	800bf88 <HAL_TIM_PWM_ConfigChannel+0x214>
 800be7e:	68fb      	ldr	r3, [r7, #12]
 800be80:	681b      	ldr	r3, [r3, #0]
 800be82:	68b9      	ldr	r1, [r7, #8]
 800be84:	4618      	mov	r0, r3
 800be86:	f000 fb53 	bl	800c530 <TIM_OC3_SetConfig>
 800be8a:	68fb      	ldr	r3, [r7, #12]
 800be8c:	681b      	ldr	r3, [r3, #0]
 800be8e:	69da      	ldr	r2, [r3, #28]
 800be90:	68fb      	ldr	r3, [r7, #12]
 800be92:	681b      	ldr	r3, [r3, #0]
 800be94:	f042 0208 	orr.w	r2, r2, #8
 800be98:	61da      	str	r2, [r3, #28]
 800be9a:	68fb      	ldr	r3, [r7, #12]
 800be9c:	681b      	ldr	r3, [r3, #0]
 800be9e:	69da      	ldr	r2, [r3, #28]
 800bea0:	68fb      	ldr	r3, [r7, #12]
 800bea2:	681b      	ldr	r3, [r3, #0]
 800bea4:	f022 0204 	bic.w	r2, r2, #4
 800bea8:	61da      	str	r2, [r3, #28]
 800beaa:	68fb      	ldr	r3, [r7, #12]
 800beac:	681b      	ldr	r3, [r3, #0]
 800beae:	69d9      	ldr	r1, [r3, #28]
 800beb0:	68bb      	ldr	r3, [r7, #8]
 800beb2:	691a      	ldr	r2, [r3, #16]
 800beb4:	68fb      	ldr	r3, [r7, #12]
 800beb6:	681b      	ldr	r3, [r3, #0]
 800beb8:	430a      	orrs	r2, r1
 800beba:	61da      	str	r2, [r3, #28]
 800bebc:	e064      	b.n	800bf88 <HAL_TIM_PWM_ConfigChannel+0x214>
 800bebe:	68fb      	ldr	r3, [r7, #12]
 800bec0:	681b      	ldr	r3, [r3, #0]
 800bec2:	68b9      	ldr	r1, [r7, #8]
 800bec4:	4618      	mov	r0, r3
 800bec6:	f000 fbbb 	bl	800c640 <TIM_OC4_SetConfig>
 800beca:	68fb      	ldr	r3, [r7, #12]
 800becc:	681b      	ldr	r3, [r3, #0]
 800bece:	69da      	ldr	r2, [r3, #28]
 800bed0:	68fb      	ldr	r3, [r7, #12]
 800bed2:	681b      	ldr	r3, [r3, #0]
 800bed4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800bed8:	61da      	str	r2, [r3, #28]
 800beda:	68fb      	ldr	r3, [r7, #12]
 800bedc:	681b      	ldr	r3, [r3, #0]
 800bede:	69da      	ldr	r2, [r3, #28]
 800bee0:	68fb      	ldr	r3, [r7, #12]
 800bee2:	681b      	ldr	r3, [r3, #0]
 800bee4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bee8:	61da      	str	r2, [r3, #28]
 800beea:	68fb      	ldr	r3, [r7, #12]
 800beec:	681b      	ldr	r3, [r3, #0]
 800beee:	69d9      	ldr	r1, [r3, #28]
 800bef0:	68bb      	ldr	r3, [r7, #8]
 800bef2:	691b      	ldr	r3, [r3, #16]
 800bef4:	021a      	lsls	r2, r3, #8
 800bef6:	68fb      	ldr	r3, [r7, #12]
 800bef8:	681b      	ldr	r3, [r3, #0]
 800befa:	430a      	orrs	r2, r1
 800befc:	61da      	str	r2, [r3, #28]
 800befe:	e043      	b.n	800bf88 <HAL_TIM_PWM_ConfigChannel+0x214>
 800bf00:	68fb      	ldr	r3, [r7, #12]
 800bf02:	681b      	ldr	r3, [r3, #0]
 800bf04:	68b9      	ldr	r1, [r7, #8]
 800bf06:	4618      	mov	r0, r3
 800bf08:	f000 fc04 	bl	800c714 <TIM_OC5_SetConfig>
 800bf0c:	68fb      	ldr	r3, [r7, #12]
 800bf0e:	681b      	ldr	r3, [r3, #0]
 800bf10:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800bf12:	68fb      	ldr	r3, [r7, #12]
 800bf14:	681b      	ldr	r3, [r3, #0]
 800bf16:	f042 0208 	orr.w	r2, r2, #8
 800bf1a:	655a      	str	r2, [r3, #84]	; 0x54
 800bf1c:	68fb      	ldr	r3, [r7, #12]
 800bf1e:	681b      	ldr	r3, [r3, #0]
 800bf20:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800bf22:	68fb      	ldr	r3, [r7, #12]
 800bf24:	681b      	ldr	r3, [r3, #0]
 800bf26:	f022 0204 	bic.w	r2, r2, #4
 800bf2a:	655a      	str	r2, [r3, #84]	; 0x54
 800bf2c:	68fb      	ldr	r3, [r7, #12]
 800bf2e:	681b      	ldr	r3, [r3, #0]
 800bf30:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800bf32:	68bb      	ldr	r3, [r7, #8]
 800bf34:	691a      	ldr	r2, [r3, #16]
 800bf36:	68fb      	ldr	r3, [r7, #12]
 800bf38:	681b      	ldr	r3, [r3, #0]
 800bf3a:	430a      	orrs	r2, r1
 800bf3c:	655a      	str	r2, [r3, #84]	; 0x54
 800bf3e:	e023      	b.n	800bf88 <HAL_TIM_PWM_ConfigChannel+0x214>
 800bf40:	68fb      	ldr	r3, [r7, #12]
 800bf42:	681b      	ldr	r3, [r3, #0]
 800bf44:	68b9      	ldr	r1, [r7, #8]
 800bf46:	4618      	mov	r0, r3
 800bf48:	f000 fc48 	bl	800c7dc <TIM_OC6_SetConfig>
 800bf4c:	68fb      	ldr	r3, [r7, #12]
 800bf4e:	681b      	ldr	r3, [r3, #0]
 800bf50:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800bf52:	68fb      	ldr	r3, [r7, #12]
 800bf54:	681b      	ldr	r3, [r3, #0]
 800bf56:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800bf5a:	655a      	str	r2, [r3, #84]	; 0x54
 800bf5c:	68fb      	ldr	r3, [r7, #12]
 800bf5e:	681b      	ldr	r3, [r3, #0]
 800bf60:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800bf62:	68fb      	ldr	r3, [r7, #12]
 800bf64:	681b      	ldr	r3, [r3, #0]
 800bf66:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800bf6a:	655a      	str	r2, [r3, #84]	; 0x54
 800bf6c:	68fb      	ldr	r3, [r7, #12]
 800bf6e:	681b      	ldr	r3, [r3, #0]
 800bf70:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800bf72:	68bb      	ldr	r3, [r7, #8]
 800bf74:	691b      	ldr	r3, [r3, #16]
 800bf76:	021a      	lsls	r2, r3, #8
 800bf78:	68fb      	ldr	r3, [r7, #12]
 800bf7a:	681b      	ldr	r3, [r3, #0]
 800bf7c:	430a      	orrs	r2, r1
 800bf7e:	655a      	str	r2, [r3, #84]	; 0x54
 800bf80:	e002      	b.n	800bf88 <HAL_TIM_PWM_ConfigChannel+0x214>
 800bf82:	2301      	movs	r3, #1
 800bf84:	75fb      	strb	r3, [r7, #23]
 800bf86:	bf00      	nop
 800bf88:	68fb      	ldr	r3, [r7, #12]
 800bf8a:	2200      	movs	r2, #0
 800bf8c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bf90:	7dfb      	ldrb	r3, [r7, #23]
 800bf92:	4618      	mov	r0, r3
 800bf94:	3718      	adds	r7, #24
 800bf96:	46bd      	mov	sp, r7
 800bf98:	bd80      	pop	{r7, pc}
 800bf9a:	bf00      	nop

0800bf9c <HAL_TIM_ConfigClockSource>:
 800bf9c:	b580      	push	{r7, lr}
 800bf9e:	b084      	sub	sp, #16
 800bfa0:	af00      	add	r7, sp, #0
 800bfa2:	6078      	str	r0, [r7, #4]
 800bfa4:	6039      	str	r1, [r7, #0]
 800bfa6:	2300      	movs	r3, #0
 800bfa8:	73fb      	strb	r3, [r7, #15]
 800bfaa:	687b      	ldr	r3, [r7, #4]
 800bfac:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bfb0:	2b01      	cmp	r3, #1
 800bfb2:	d101      	bne.n	800bfb8 <HAL_TIM_ConfigClockSource+0x1c>
 800bfb4:	2302      	movs	r3, #2
 800bfb6:	e0dc      	b.n	800c172 <HAL_TIM_ConfigClockSource+0x1d6>
 800bfb8:	687b      	ldr	r3, [r7, #4]
 800bfba:	2201      	movs	r2, #1
 800bfbc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bfc0:	687b      	ldr	r3, [r7, #4]
 800bfc2:	2202      	movs	r2, #2
 800bfc4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bfc8:	687b      	ldr	r3, [r7, #4]
 800bfca:	681b      	ldr	r3, [r3, #0]
 800bfcc:	689b      	ldr	r3, [r3, #8]
 800bfce:	60bb      	str	r3, [r7, #8]
 800bfd0:	68ba      	ldr	r2, [r7, #8]
 800bfd2:	4b6a      	ldr	r3, [pc, #424]	; (800c17c <HAL_TIM_ConfigClockSource+0x1e0>)
 800bfd4:	4013      	ands	r3, r2
 800bfd6:	60bb      	str	r3, [r7, #8]
 800bfd8:	68bb      	ldr	r3, [r7, #8]
 800bfda:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800bfde:	60bb      	str	r3, [r7, #8]
 800bfe0:	687b      	ldr	r3, [r7, #4]
 800bfe2:	681b      	ldr	r3, [r3, #0]
 800bfe4:	68ba      	ldr	r2, [r7, #8]
 800bfe6:	609a      	str	r2, [r3, #8]
 800bfe8:	683b      	ldr	r3, [r7, #0]
 800bfea:	681b      	ldr	r3, [r3, #0]
 800bfec:	4a64      	ldr	r2, [pc, #400]	; (800c180 <HAL_TIM_ConfigClockSource+0x1e4>)
 800bfee:	4293      	cmp	r3, r2
 800bff0:	f000 80a9 	beq.w	800c146 <HAL_TIM_ConfigClockSource+0x1aa>
 800bff4:	4a62      	ldr	r2, [pc, #392]	; (800c180 <HAL_TIM_ConfigClockSource+0x1e4>)
 800bff6:	4293      	cmp	r3, r2
 800bff8:	f200 80ae 	bhi.w	800c158 <HAL_TIM_ConfigClockSource+0x1bc>
 800bffc:	4a61      	ldr	r2, [pc, #388]	; (800c184 <HAL_TIM_ConfigClockSource+0x1e8>)
 800bffe:	4293      	cmp	r3, r2
 800c000:	f000 80a1 	beq.w	800c146 <HAL_TIM_ConfigClockSource+0x1aa>
 800c004:	4a5f      	ldr	r2, [pc, #380]	; (800c184 <HAL_TIM_ConfigClockSource+0x1e8>)
 800c006:	4293      	cmp	r3, r2
 800c008:	f200 80a6 	bhi.w	800c158 <HAL_TIM_ConfigClockSource+0x1bc>
 800c00c:	4a5e      	ldr	r2, [pc, #376]	; (800c188 <HAL_TIM_ConfigClockSource+0x1ec>)
 800c00e:	4293      	cmp	r3, r2
 800c010:	f000 8099 	beq.w	800c146 <HAL_TIM_ConfigClockSource+0x1aa>
 800c014:	4a5c      	ldr	r2, [pc, #368]	; (800c188 <HAL_TIM_ConfigClockSource+0x1ec>)
 800c016:	4293      	cmp	r3, r2
 800c018:	f200 809e 	bhi.w	800c158 <HAL_TIM_ConfigClockSource+0x1bc>
 800c01c:	f1b3 1f10 	cmp.w	r3, #1048592	; 0x100010
 800c020:	f000 8091 	beq.w	800c146 <HAL_TIM_ConfigClockSource+0x1aa>
 800c024:	f1b3 1f10 	cmp.w	r3, #1048592	; 0x100010
 800c028:	f200 8096 	bhi.w	800c158 <HAL_TIM_ConfigClockSource+0x1bc>
 800c02c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800c030:	f000 8089 	beq.w	800c146 <HAL_TIM_ConfigClockSource+0x1aa>
 800c034:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800c038:	f200 808e 	bhi.w	800c158 <HAL_TIM_ConfigClockSource+0x1bc>
 800c03c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c040:	d03e      	beq.n	800c0c0 <HAL_TIM_ConfigClockSource+0x124>
 800c042:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c046:	f200 8087 	bhi.w	800c158 <HAL_TIM_ConfigClockSource+0x1bc>
 800c04a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c04e:	f000 8086 	beq.w	800c15e <HAL_TIM_ConfigClockSource+0x1c2>
 800c052:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c056:	d87f      	bhi.n	800c158 <HAL_TIM_ConfigClockSource+0x1bc>
 800c058:	2b70      	cmp	r3, #112	; 0x70
 800c05a:	d01a      	beq.n	800c092 <HAL_TIM_ConfigClockSource+0xf6>
 800c05c:	2b70      	cmp	r3, #112	; 0x70
 800c05e:	d87b      	bhi.n	800c158 <HAL_TIM_ConfigClockSource+0x1bc>
 800c060:	2b60      	cmp	r3, #96	; 0x60
 800c062:	d050      	beq.n	800c106 <HAL_TIM_ConfigClockSource+0x16a>
 800c064:	2b60      	cmp	r3, #96	; 0x60
 800c066:	d877      	bhi.n	800c158 <HAL_TIM_ConfigClockSource+0x1bc>
 800c068:	2b50      	cmp	r3, #80	; 0x50
 800c06a:	d03c      	beq.n	800c0e6 <HAL_TIM_ConfigClockSource+0x14a>
 800c06c:	2b50      	cmp	r3, #80	; 0x50
 800c06e:	d873      	bhi.n	800c158 <HAL_TIM_ConfigClockSource+0x1bc>
 800c070:	2b40      	cmp	r3, #64	; 0x40
 800c072:	d058      	beq.n	800c126 <HAL_TIM_ConfigClockSource+0x18a>
 800c074:	2b40      	cmp	r3, #64	; 0x40
 800c076:	d86f      	bhi.n	800c158 <HAL_TIM_ConfigClockSource+0x1bc>
 800c078:	2b30      	cmp	r3, #48	; 0x30
 800c07a:	d064      	beq.n	800c146 <HAL_TIM_ConfigClockSource+0x1aa>
 800c07c:	2b30      	cmp	r3, #48	; 0x30
 800c07e:	d86b      	bhi.n	800c158 <HAL_TIM_ConfigClockSource+0x1bc>
 800c080:	2b20      	cmp	r3, #32
 800c082:	d060      	beq.n	800c146 <HAL_TIM_ConfigClockSource+0x1aa>
 800c084:	2b20      	cmp	r3, #32
 800c086:	d867      	bhi.n	800c158 <HAL_TIM_ConfigClockSource+0x1bc>
 800c088:	2b00      	cmp	r3, #0
 800c08a:	d05c      	beq.n	800c146 <HAL_TIM_ConfigClockSource+0x1aa>
 800c08c:	2b10      	cmp	r3, #16
 800c08e:	d05a      	beq.n	800c146 <HAL_TIM_ConfigClockSource+0x1aa>
 800c090:	e062      	b.n	800c158 <HAL_TIM_ConfigClockSource+0x1bc>
 800c092:	687b      	ldr	r3, [r7, #4]
 800c094:	6818      	ldr	r0, [r3, #0]
 800c096:	683b      	ldr	r3, [r7, #0]
 800c098:	6899      	ldr	r1, [r3, #8]
 800c09a:	683b      	ldr	r3, [r7, #0]
 800c09c:	685a      	ldr	r2, [r3, #4]
 800c09e:	683b      	ldr	r3, [r7, #0]
 800c0a0:	68db      	ldr	r3, [r3, #12]
 800c0a2:	f000 fda9 	bl	800cbf8 <TIM_ETR_SetConfig>
 800c0a6:	687b      	ldr	r3, [r7, #4]
 800c0a8:	681b      	ldr	r3, [r3, #0]
 800c0aa:	689b      	ldr	r3, [r3, #8]
 800c0ac:	60bb      	str	r3, [r7, #8]
 800c0ae:	68bb      	ldr	r3, [r7, #8]
 800c0b0:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800c0b4:	60bb      	str	r3, [r7, #8]
 800c0b6:	687b      	ldr	r3, [r7, #4]
 800c0b8:	681b      	ldr	r3, [r3, #0]
 800c0ba:	68ba      	ldr	r2, [r7, #8]
 800c0bc:	609a      	str	r2, [r3, #8]
 800c0be:	e04f      	b.n	800c160 <HAL_TIM_ConfigClockSource+0x1c4>
 800c0c0:	687b      	ldr	r3, [r7, #4]
 800c0c2:	6818      	ldr	r0, [r3, #0]
 800c0c4:	683b      	ldr	r3, [r7, #0]
 800c0c6:	6899      	ldr	r1, [r3, #8]
 800c0c8:	683b      	ldr	r3, [r7, #0]
 800c0ca:	685a      	ldr	r2, [r3, #4]
 800c0cc:	683b      	ldr	r3, [r7, #0]
 800c0ce:	68db      	ldr	r3, [r3, #12]
 800c0d0:	f000 fd92 	bl	800cbf8 <TIM_ETR_SetConfig>
 800c0d4:	687b      	ldr	r3, [r7, #4]
 800c0d6:	681b      	ldr	r3, [r3, #0]
 800c0d8:	689a      	ldr	r2, [r3, #8]
 800c0da:	687b      	ldr	r3, [r7, #4]
 800c0dc:	681b      	ldr	r3, [r3, #0]
 800c0de:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800c0e2:	609a      	str	r2, [r3, #8]
 800c0e4:	e03c      	b.n	800c160 <HAL_TIM_ConfigClockSource+0x1c4>
 800c0e6:	687b      	ldr	r3, [r7, #4]
 800c0e8:	6818      	ldr	r0, [r3, #0]
 800c0ea:	683b      	ldr	r3, [r7, #0]
 800c0ec:	6859      	ldr	r1, [r3, #4]
 800c0ee:	683b      	ldr	r3, [r7, #0]
 800c0f0:	68db      	ldr	r3, [r3, #12]
 800c0f2:	461a      	mov	r2, r3
 800c0f4:	f000 fc4c 	bl	800c990 <TIM_TI1_ConfigInputStage>
 800c0f8:	687b      	ldr	r3, [r7, #4]
 800c0fa:	681b      	ldr	r3, [r3, #0]
 800c0fc:	2150      	movs	r1, #80	; 0x50
 800c0fe:	4618      	mov	r0, r3
 800c100:	f000 fd5c 	bl	800cbbc <TIM_ITRx_SetConfig>
 800c104:	e02c      	b.n	800c160 <HAL_TIM_ConfigClockSource+0x1c4>
 800c106:	687b      	ldr	r3, [r7, #4]
 800c108:	6818      	ldr	r0, [r3, #0]
 800c10a:	683b      	ldr	r3, [r7, #0]
 800c10c:	6859      	ldr	r1, [r3, #4]
 800c10e:	683b      	ldr	r3, [r7, #0]
 800c110:	68db      	ldr	r3, [r3, #12]
 800c112:	461a      	mov	r2, r3
 800c114:	f000 fca8 	bl	800ca68 <TIM_TI2_ConfigInputStage>
 800c118:	687b      	ldr	r3, [r7, #4]
 800c11a:	681b      	ldr	r3, [r3, #0]
 800c11c:	2160      	movs	r1, #96	; 0x60
 800c11e:	4618      	mov	r0, r3
 800c120:	f000 fd4c 	bl	800cbbc <TIM_ITRx_SetConfig>
 800c124:	e01c      	b.n	800c160 <HAL_TIM_ConfigClockSource+0x1c4>
 800c126:	687b      	ldr	r3, [r7, #4]
 800c128:	6818      	ldr	r0, [r3, #0]
 800c12a:	683b      	ldr	r3, [r7, #0]
 800c12c:	6859      	ldr	r1, [r3, #4]
 800c12e:	683b      	ldr	r3, [r7, #0]
 800c130:	68db      	ldr	r3, [r3, #12]
 800c132:	461a      	mov	r2, r3
 800c134:	f000 fc2c 	bl	800c990 <TIM_TI1_ConfigInputStage>
 800c138:	687b      	ldr	r3, [r7, #4]
 800c13a:	681b      	ldr	r3, [r3, #0]
 800c13c:	2140      	movs	r1, #64	; 0x40
 800c13e:	4618      	mov	r0, r3
 800c140:	f000 fd3c 	bl	800cbbc <TIM_ITRx_SetConfig>
 800c144:	e00c      	b.n	800c160 <HAL_TIM_ConfigClockSource+0x1c4>
 800c146:	687b      	ldr	r3, [r7, #4]
 800c148:	681a      	ldr	r2, [r3, #0]
 800c14a:	683b      	ldr	r3, [r7, #0]
 800c14c:	681b      	ldr	r3, [r3, #0]
 800c14e:	4619      	mov	r1, r3
 800c150:	4610      	mov	r0, r2
 800c152:	f000 fd33 	bl	800cbbc <TIM_ITRx_SetConfig>
 800c156:	e003      	b.n	800c160 <HAL_TIM_ConfigClockSource+0x1c4>
 800c158:	2301      	movs	r3, #1
 800c15a:	73fb      	strb	r3, [r7, #15]
 800c15c:	e000      	b.n	800c160 <HAL_TIM_ConfigClockSource+0x1c4>
 800c15e:	bf00      	nop
 800c160:	687b      	ldr	r3, [r7, #4]
 800c162:	2201      	movs	r2, #1
 800c164:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c168:	687b      	ldr	r3, [r7, #4]
 800c16a:	2200      	movs	r2, #0
 800c16c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c170:	7bfb      	ldrb	r3, [r7, #15]
 800c172:	4618      	mov	r0, r3
 800c174:	3710      	adds	r7, #16
 800c176:	46bd      	mov	sp, r7
 800c178:	bd80      	pop	{r7, pc}
 800c17a:	bf00      	nop
 800c17c:	ffceff88 	.word	0xffceff88
 800c180:	00100040 	.word	0x00100040
 800c184:	00100030 	.word	0x00100030
 800c188:	00100020 	.word	0x00100020

0800c18c <HAL_TIM_OC_DelayElapsedCallback>:
 800c18c:	b480      	push	{r7}
 800c18e:	b083      	sub	sp, #12
 800c190:	af00      	add	r7, sp, #0
 800c192:	6078      	str	r0, [r7, #4]
 800c194:	bf00      	nop
 800c196:	370c      	adds	r7, #12
 800c198:	46bd      	mov	sp, r7
 800c19a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c19e:	4770      	bx	lr

0800c1a0 <HAL_TIM_PWM_PulseFinishedCallback>:
 800c1a0:	b480      	push	{r7}
 800c1a2:	b083      	sub	sp, #12
 800c1a4:	af00      	add	r7, sp, #0
 800c1a6:	6078      	str	r0, [r7, #4]
 800c1a8:	bf00      	nop
 800c1aa:	370c      	adds	r7, #12
 800c1ac:	46bd      	mov	sp, r7
 800c1ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1b2:	4770      	bx	lr

0800c1b4 <HAL_TIM_TriggerCallback>:
 800c1b4:	b480      	push	{r7}
 800c1b6:	b083      	sub	sp, #12
 800c1b8:	af00      	add	r7, sp, #0
 800c1ba:	6078      	str	r0, [r7, #4]
 800c1bc:	bf00      	nop
 800c1be:	370c      	adds	r7, #12
 800c1c0:	46bd      	mov	sp, r7
 800c1c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1c6:	4770      	bx	lr

0800c1c8 <TIM_Base_SetConfig>:
 800c1c8:	b480      	push	{r7}
 800c1ca:	b085      	sub	sp, #20
 800c1cc:	af00      	add	r7, sp, #0
 800c1ce:	6078      	str	r0, [r7, #4]
 800c1d0:	6039      	str	r1, [r7, #0]
 800c1d2:	687b      	ldr	r3, [r7, #4]
 800c1d4:	681b      	ldr	r3, [r3, #0]
 800c1d6:	60fb      	str	r3, [r7, #12]
 800c1d8:	687b      	ldr	r3, [r7, #4]
 800c1da:	4a40      	ldr	r2, [pc, #256]	; (800c2dc <TIM_Base_SetConfig+0x114>)
 800c1dc:	4293      	cmp	r3, r2
 800c1de:	d013      	beq.n	800c208 <TIM_Base_SetConfig+0x40>
 800c1e0:	687b      	ldr	r3, [r7, #4]
 800c1e2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c1e6:	d00f      	beq.n	800c208 <TIM_Base_SetConfig+0x40>
 800c1e8:	687b      	ldr	r3, [r7, #4]
 800c1ea:	4a3d      	ldr	r2, [pc, #244]	; (800c2e0 <TIM_Base_SetConfig+0x118>)
 800c1ec:	4293      	cmp	r3, r2
 800c1ee:	d00b      	beq.n	800c208 <TIM_Base_SetConfig+0x40>
 800c1f0:	687b      	ldr	r3, [r7, #4]
 800c1f2:	4a3c      	ldr	r2, [pc, #240]	; (800c2e4 <TIM_Base_SetConfig+0x11c>)
 800c1f4:	4293      	cmp	r3, r2
 800c1f6:	d007      	beq.n	800c208 <TIM_Base_SetConfig+0x40>
 800c1f8:	687b      	ldr	r3, [r7, #4]
 800c1fa:	4a3b      	ldr	r2, [pc, #236]	; (800c2e8 <TIM_Base_SetConfig+0x120>)
 800c1fc:	4293      	cmp	r3, r2
 800c1fe:	d003      	beq.n	800c208 <TIM_Base_SetConfig+0x40>
 800c200:	687b      	ldr	r3, [r7, #4]
 800c202:	4a3a      	ldr	r2, [pc, #232]	; (800c2ec <TIM_Base_SetConfig+0x124>)
 800c204:	4293      	cmp	r3, r2
 800c206:	d108      	bne.n	800c21a <TIM_Base_SetConfig+0x52>
 800c208:	68fb      	ldr	r3, [r7, #12]
 800c20a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800c20e:	60fb      	str	r3, [r7, #12]
 800c210:	683b      	ldr	r3, [r7, #0]
 800c212:	685b      	ldr	r3, [r3, #4]
 800c214:	68fa      	ldr	r2, [r7, #12]
 800c216:	4313      	orrs	r3, r2
 800c218:	60fb      	str	r3, [r7, #12]
 800c21a:	687b      	ldr	r3, [r7, #4]
 800c21c:	4a2f      	ldr	r2, [pc, #188]	; (800c2dc <TIM_Base_SetConfig+0x114>)
 800c21e:	4293      	cmp	r3, r2
 800c220:	d01f      	beq.n	800c262 <TIM_Base_SetConfig+0x9a>
 800c222:	687b      	ldr	r3, [r7, #4]
 800c224:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c228:	d01b      	beq.n	800c262 <TIM_Base_SetConfig+0x9a>
 800c22a:	687b      	ldr	r3, [r7, #4]
 800c22c:	4a2c      	ldr	r2, [pc, #176]	; (800c2e0 <TIM_Base_SetConfig+0x118>)
 800c22e:	4293      	cmp	r3, r2
 800c230:	d017      	beq.n	800c262 <TIM_Base_SetConfig+0x9a>
 800c232:	687b      	ldr	r3, [r7, #4]
 800c234:	4a2b      	ldr	r2, [pc, #172]	; (800c2e4 <TIM_Base_SetConfig+0x11c>)
 800c236:	4293      	cmp	r3, r2
 800c238:	d013      	beq.n	800c262 <TIM_Base_SetConfig+0x9a>
 800c23a:	687b      	ldr	r3, [r7, #4]
 800c23c:	4a2a      	ldr	r2, [pc, #168]	; (800c2e8 <TIM_Base_SetConfig+0x120>)
 800c23e:	4293      	cmp	r3, r2
 800c240:	d00f      	beq.n	800c262 <TIM_Base_SetConfig+0x9a>
 800c242:	687b      	ldr	r3, [r7, #4]
 800c244:	4a29      	ldr	r2, [pc, #164]	; (800c2ec <TIM_Base_SetConfig+0x124>)
 800c246:	4293      	cmp	r3, r2
 800c248:	d00b      	beq.n	800c262 <TIM_Base_SetConfig+0x9a>
 800c24a:	687b      	ldr	r3, [r7, #4]
 800c24c:	4a28      	ldr	r2, [pc, #160]	; (800c2f0 <TIM_Base_SetConfig+0x128>)
 800c24e:	4293      	cmp	r3, r2
 800c250:	d007      	beq.n	800c262 <TIM_Base_SetConfig+0x9a>
 800c252:	687b      	ldr	r3, [r7, #4]
 800c254:	4a27      	ldr	r2, [pc, #156]	; (800c2f4 <TIM_Base_SetConfig+0x12c>)
 800c256:	4293      	cmp	r3, r2
 800c258:	d003      	beq.n	800c262 <TIM_Base_SetConfig+0x9a>
 800c25a:	687b      	ldr	r3, [r7, #4]
 800c25c:	4a26      	ldr	r2, [pc, #152]	; (800c2f8 <TIM_Base_SetConfig+0x130>)
 800c25e:	4293      	cmp	r3, r2
 800c260:	d108      	bne.n	800c274 <TIM_Base_SetConfig+0xac>
 800c262:	68fb      	ldr	r3, [r7, #12]
 800c264:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800c268:	60fb      	str	r3, [r7, #12]
 800c26a:	683b      	ldr	r3, [r7, #0]
 800c26c:	68db      	ldr	r3, [r3, #12]
 800c26e:	68fa      	ldr	r2, [r7, #12]
 800c270:	4313      	orrs	r3, r2
 800c272:	60fb      	str	r3, [r7, #12]
 800c274:	68fb      	ldr	r3, [r7, #12]
 800c276:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800c27a:	683b      	ldr	r3, [r7, #0]
 800c27c:	695b      	ldr	r3, [r3, #20]
 800c27e:	4313      	orrs	r3, r2
 800c280:	60fb      	str	r3, [r7, #12]
 800c282:	687b      	ldr	r3, [r7, #4]
 800c284:	68fa      	ldr	r2, [r7, #12]
 800c286:	601a      	str	r2, [r3, #0]
 800c288:	683b      	ldr	r3, [r7, #0]
 800c28a:	689a      	ldr	r2, [r3, #8]
 800c28c:	687b      	ldr	r3, [r7, #4]
 800c28e:	62da      	str	r2, [r3, #44]	; 0x2c
 800c290:	683b      	ldr	r3, [r7, #0]
 800c292:	681a      	ldr	r2, [r3, #0]
 800c294:	687b      	ldr	r3, [r7, #4]
 800c296:	629a      	str	r2, [r3, #40]	; 0x28
 800c298:	687b      	ldr	r3, [r7, #4]
 800c29a:	4a10      	ldr	r2, [pc, #64]	; (800c2dc <TIM_Base_SetConfig+0x114>)
 800c29c:	4293      	cmp	r3, r2
 800c29e:	d00f      	beq.n	800c2c0 <TIM_Base_SetConfig+0xf8>
 800c2a0:	687b      	ldr	r3, [r7, #4]
 800c2a2:	4a12      	ldr	r2, [pc, #72]	; (800c2ec <TIM_Base_SetConfig+0x124>)
 800c2a4:	4293      	cmp	r3, r2
 800c2a6:	d00b      	beq.n	800c2c0 <TIM_Base_SetConfig+0xf8>
 800c2a8:	687b      	ldr	r3, [r7, #4]
 800c2aa:	4a11      	ldr	r2, [pc, #68]	; (800c2f0 <TIM_Base_SetConfig+0x128>)
 800c2ac:	4293      	cmp	r3, r2
 800c2ae:	d007      	beq.n	800c2c0 <TIM_Base_SetConfig+0xf8>
 800c2b0:	687b      	ldr	r3, [r7, #4]
 800c2b2:	4a10      	ldr	r2, [pc, #64]	; (800c2f4 <TIM_Base_SetConfig+0x12c>)
 800c2b4:	4293      	cmp	r3, r2
 800c2b6:	d003      	beq.n	800c2c0 <TIM_Base_SetConfig+0xf8>
 800c2b8:	687b      	ldr	r3, [r7, #4]
 800c2ba:	4a0f      	ldr	r2, [pc, #60]	; (800c2f8 <TIM_Base_SetConfig+0x130>)
 800c2bc:	4293      	cmp	r3, r2
 800c2be:	d103      	bne.n	800c2c8 <TIM_Base_SetConfig+0x100>
 800c2c0:	683b      	ldr	r3, [r7, #0]
 800c2c2:	691a      	ldr	r2, [r3, #16]
 800c2c4:	687b      	ldr	r3, [r7, #4]
 800c2c6:	631a      	str	r2, [r3, #48]	; 0x30
 800c2c8:	687b      	ldr	r3, [r7, #4]
 800c2ca:	2201      	movs	r2, #1
 800c2cc:	615a      	str	r2, [r3, #20]
 800c2ce:	bf00      	nop
 800c2d0:	3714      	adds	r7, #20
 800c2d2:	46bd      	mov	sp, r7
 800c2d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2d8:	4770      	bx	lr
 800c2da:	bf00      	nop
 800c2dc:	40010000 	.word	0x40010000
 800c2e0:	40000400 	.word	0x40000400
 800c2e4:	40000800 	.word	0x40000800
 800c2e8:	40000c00 	.word	0x40000c00
 800c2ec:	40010400 	.word	0x40010400
 800c2f0:	40014000 	.word	0x40014000
 800c2f4:	40014400 	.word	0x40014400
 800c2f8:	40014800 	.word	0x40014800

0800c2fc <TIM_OC1_SetConfig>:
 800c2fc:	b480      	push	{r7}
 800c2fe:	b087      	sub	sp, #28
 800c300:	af00      	add	r7, sp, #0
 800c302:	6078      	str	r0, [r7, #4]
 800c304:	6039      	str	r1, [r7, #0]
 800c306:	687b      	ldr	r3, [r7, #4]
 800c308:	6a1b      	ldr	r3, [r3, #32]
 800c30a:	f023 0201 	bic.w	r2, r3, #1
 800c30e:	687b      	ldr	r3, [r7, #4]
 800c310:	621a      	str	r2, [r3, #32]
 800c312:	687b      	ldr	r3, [r7, #4]
 800c314:	6a1b      	ldr	r3, [r3, #32]
 800c316:	617b      	str	r3, [r7, #20]
 800c318:	687b      	ldr	r3, [r7, #4]
 800c31a:	685b      	ldr	r3, [r3, #4]
 800c31c:	613b      	str	r3, [r7, #16]
 800c31e:	687b      	ldr	r3, [r7, #4]
 800c320:	699b      	ldr	r3, [r3, #24]
 800c322:	60fb      	str	r3, [r7, #12]
 800c324:	68fa      	ldr	r2, [r7, #12]
 800c326:	4b37      	ldr	r3, [pc, #220]	; (800c404 <TIM_OC1_SetConfig+0x108>)
 800c328:	4013      	ands	r3, r2
 800c32a:	60fb      	str	r3, [r7, #12]
 800c32c:	68fb      	ldr	r3, [r7, #12]
 800c32e:	f023 0303 	bic.w	r3, r3, #3
 800c332:	60fb      	str	r3, [r7, #12]
 800c334:	683b      	ldr	r3, [r7, #0]
 800c336:	681b      	ldr	r3, [r3, #0]
 800c338:	68fa      	ldr	r2, [r7, #12]
 800c33a:	4313      	orrs	r3, r2
 800c33c:	60fb      	str	r3, [r7, #12]
 800c33e:	697b      	ldr	r3, [r7, #20]
 800c340:	f023 0302 	bic.w	r3, r3, #2
 800c344:	617b      	str	r3, [r7, #20]
 800c346:	683b      	ldr	r3, [r7, #0]
 800c348:	689b      	ldr	r3, [r3, #8]
 800c34a:	697a      	ldr	r2, [r7, #20]
 800c34c:	4313      	orrs	r3, r2
 800c34e:	617b      	str	r3, [r7, #20]
 800c350:	687b      	ldr	r3, [r7, #4]
 800c352:	4a2d      	ldr	r2, [pc, #180]	; (800c408 <TIM_OC1_SetConfig+0x10c>)
 800c354:	4293      	cmp	r3, r2
 800c356:	d00f      	beq.n	800c378 <TIM_OC1_SetConfig+0x7c>
 800c358:	687b      	ldr	r3, [r7, #4]
 800c35a:	4a2c      	ldr	r2, [pc, #176]	; (800c40c <TIM_OC1_SetConfig+0x110>)
 800c35c:	4293      	cmp	r3, r2
 800c35e:	d00b      	beq.n	800c378 <TIM_OC1_SetConfig+0x7c>
 800c360:	687b      	ldr	r3, [r7, #4]
 800c362:	4a2b      	ldr	r2, [pc, #172]	; (800c410 <TIM_OC1_SetConfig+0x114>)
 800c364:	4293      	cmp	r3, r2
 800c366:	d007      	beq.n	800c378 <TIM_OC1_SetConfig+0x7c>
 800c368:	687b      	ldr	r3, [r7, #4]
 800c36a:	4a2a      	ldr	r2, [pc, #168]	; (800c414 <TIM_OC1_SetConfig+0x118>)
 800c36c:	4293      	cmp	r3, r2
 800c36e:	d003      	beq.n	800c378 <TIM_OC1_SetConfig+0x7c>
 800c370:	687b      	ldr	r3, [r7, #4]
 800c372:	4a29      	ldr	r2, [pc, #164]	; (800c418 <TIM_OC1_SetConfig+0x11c>)
 800c374:	4293      	cmp	r3, r2
 800c376:	d10c      	bne.n	800c392 <TIM_OC1_SetConfig+0x96>
 800c378:	697b      	ldr	r3, [r7, #20]
 800c37a:	f023 0308 	bic.w	r3, r3, #8
 800c37e:	617b      	str	r3, [r7, #20]
 800c380:	683b      	ldr	r3, [r7, #0]
 800c382:	68db      	ldr	r3, [r3, #12]
 800c384:	697a      	ldr	r2, [r7, #20]
 800c386:	4313      	orrs	r3, r2
 800c388:	617b      	str	r3, [r7, #20]
 800c38a:	697b      	ldr	r3, [r7, #20]
 800c38c:	f023 0304 	bic.w	r3, r3, #4
 800c390:	617b      	str	r3, [r7, #20]
 800c392:	687b      	ldr	r3, [r7, #4]
 800c394:	4a1c      	ldr	r2, [pc, #112]	; (800c408 <TIM_OC1_SetConfig+0x10c>)
 800c396:	4293      	cmp	r3, r2
 800c398:	d00f      	beq.n	800c3ba <TIM_OC1_SetConfig+0xbe>
 800c39a:	687b      	ldr	r3, [r7, #4]
 800c39c:	4a1b      	ldr	r2, [pc, #108]	; (800c40c <TIM_OC1_SetConfig+0x110>)
 800c39e:	4293      	cmp	r3, r2
 800c3a0:	d00b      	beq.n	800c3ba <TIM_OC1_SetConfig+0xbe>
 800c3a2:	687b      	ldr	r3, [r7, #4]
 800c3a4:	4a1a      	ldr	r2, [pc, #104]	; (800c410 <TIM_OC1_SetConfig+0x114>)
 800c3a6:	4293      	cmp	r3, r2
 800c3a8:	d007      	beq.n	800c3ba <TIM_OC1_SetConfig+0xbe>
 800c3aa:	687b      	ldr	r3, [r7, #4]
 800c3ac:	4a19      	ldr	r2, [pc, #100]	; (800c414 <TIM_OC1_SetConfig+0x118>)
 800c3ae:	4293      	cmp	r3, r2
 800c3b0:	d003      	beq.n	800c3ba <TIM_OC1_SetConfig+0xbe>
 800c3b2:	687b      	ldr	r3, [r7, #4]
 800c3b4:	4a18      	ldr	r2, [pc, #96]	; (800c418 <TIM_OC1_SetConfig+0x11c>)
 800c3b6:	4293      	cmp	r3, r2
 800c3b8:	d111      	bne.n	800c3de <TIM_OC1_SetConfig+0xe2>
 800c3ba:	693b      	ldr	r3, [r7, #16]
 800c3bc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800c3c0:	613b      	str	r3, [r7, #16]
 800c3c2:	693b      	ldr	r3, [r7, #16]
 800c3c4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800c3c8:	613b      	str	r3, [r7, #16]
 800c3ca:	683b      	ldr	r3, [r7, #0]
 800c3cc:	695b      	ldr	r3, [r3, #20]
 800c3ce:	693a      	ldr	r2, [r7, #16]
 800c3d0:	4313      	orrs	r3, r2
 800c3d2:	613b      	str	r3, [r7, #16]
 800c3d4:	683b      	ldr	r3, [r7, #0]
 800c3d6:	699b      	ldr	r3, [r3, #24]
 800c3d8:	693a      	ldr	r2, [r7, #16]
 800c3da:	4313      	orrs	r3, r2
 800c3dc:	613b      	str	r3, [r7, #16]
 800c3de:	687b      	ldr	r3, [r7, #4]
 800c3e0:	693a      	ldr	r2, [r7, #16]
 800c3e2:	605a      	str	r2, [r3, #4]
 800c3e4:	687b      	ldr	r3, [r7, #4]
 800c3e6:	68fa      	ldr	r2, [r7, #12]
 800c3e8:	619a      	str	r2, [r3, #24]
 800c3ea:	683b      	ldr	r3, [r7, #0]
 800c3ec:	685a      	ldr	r2, [r3, #4]
 800c3ee:	687b      	ldr	r3, [r7, #4]
 800c3f0:	635a      	str	r2, [r3, #52]	; 0x34
 800c3f2:	687b      	ldr	r3, [r7, #4]
 800c3f4:	697a      	ldr	r2, [r7, #20]
 800c3f6:	621a      	str	r2, [r3, #32]
 800c3f8:	bf00      	nop
 800c3fa:	371c      	adds	r7, #28
 800c3fc:	46bd      	mov	sp, r7
 800c3fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c402:	4770      	bx	lr
 800c404:	fffeff8f 	.word	0xfffeff8f
 800c408:	40010000 	.word	0x40010000
 800c40c:	40010400 	.word	0x40010400
 800c410:	40014000 	.word	0x40014000
 800c414:	40014400 	.word	0x40014400
 800c418:	40014800 	.word	0x40014800

0800c41c <TIM_OC2_SetConfig>:
 800c41c:	b480      	push	{r7}
 800c41e:	b087      	sub	sp, #28
 800c420:	af00      	add	r7, sp, #0
 800c422:	6078      	str	r0, [r7, #4]
 800c424:	6039      	str	r1, [r7, #0]
 800c426:	687b      	ldr	r3, [r7, #4]
 800c428:	6a1b      	ldr	r3, [r3, #32]
 800c42a:	f023 0210 	bic.w	r2, r3, #16
 800c42e:	687b      	ldr	r3, [r7, #4]
 800c430:	621a      	str	r2, [r3, #32]
 800c432:	687b      	ldr	r3, [r7, #4]
 800c434:	6a1b      	ldr	r3, [r3, #32]
 800c436:	617b      	str	r3, [r7, #20]
 800c438:	687b      	ldr	r3, [r7, #4]
 800c43a:	685b      	ldr	r3, [r3, #4]
 800c43c:	613b      	str	r3, [r7, #16]
 800c43e:	687b      	ldr	r3, [r7, #4]
 800c440:	699b      	ldr	r3, [r3, #24]
 800c442:	60fb      	str	r3, [r7, #12]
 800c444:	68fa      	ldr	r2, [r7, #12]
 800c446:	4b34      	ldr	r3, [pc, #208]	; (800c518 <TIM_OC2_SetConfig+0xfc>)
 800c448:	4013      	ands	r3, r2
 800c44a:	60fb      	str	r3, [r7, #12]
 800c44c:	68fb      	ldr	r3, [r7, #12]
 800c44e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800c452:	60fb      	str	r3, [r7, #12]
 800c454:	683b      	ldr	r3, [r7, #0]
 800c456:	681b      	ldr	r3, [r3, #0]
 800c458:	021b      	lsls	r3, r3, #8
 800c45a:	68fa      	ldr	r2, [r7, #12]
 800c45c:	4313      	orrs	r3, r2
 800c45e:	60fb      	str	r3, [r7, #12]
 800c460:	697b      	ldr	r3, [r7, #20]
 800c462:	f023 0320 	bic.w	r3, r3, #32
 800c466:	617b      	str	r3, [r7, #20]
 800c468:	683b      	ldr	r3, [r7, #0]
 800c46a:	689b      	ldr	r3, [r3, #8]
 800c46c:	011b      	lsls	r3, r3, #4
 800c46e:	697a      	ldr	r2, [r7, #20]
 800c470:	4313      	orrs	r3, r2
 800c472:	617b      	str	r3, [r7, #20]
 800c474:	687b      	ldr	r3, [r7, #4]
 800c476:	4a29      	ldr	r2, [pc, #164]	; (800c51c <TIM_OC2_SetConfig+0x100>)
 800c478:	4293      	cmp	r3, r2
 800c47a:	d003      	beq.n	800c484 <TIM_OC2_SetConfig+0x68>
 800c47c:	687b      	ldr	r3, [r7, #4]
 800c47e:	4a28      	ldr	r2, [pc, #160]	; (800c520 <TIM_OC2_SetConfig+0x104>)
 800c480:	4293      	cmp	r3, r2
 800c482:	d10d      	bne.n	800c4a0 <TIM_OC2_SetConfig+0x84>
 800c484:	697b      	ldr	r3, [r7, #20]
 800c486:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c48a:	617b      	str	r3, [r7, #20]
 800c48c:	683b      	ldr	r3, [r7, #0]
 800c48e:	68db      	ldr	r3, [r3, #12]
 800c490:	011b      	lsls	r3, r3, #4
 800c492:	697a      	ldr	r2, [r7, #20]
 800c494:	4313      	orrs	r3, r2
 800c496:	617b      	str	r3, [r7, #20]
 800c498:	697b      	ldr	r3, [r7, #20]
 800c49a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c49e:	617b      	str	r3, [r7, #20]
 800c4a0:	687b      	ldr	r3, [r7, #4]
 800c4a2:	4a1e      	ldr	r2, [pc, #120]	; (800c51c <TIM_OC2_SetConfig+0x100>)
 800c4a4:	4293      	cmp	r3, r2
 800c4a6:	d00f      	beq.n	800c4c8 <TIM_OC2_SetConfig+0xac>
 800c4a8:	687b      	ldr	r3, [r7, #4]
 800c4aa:	4a1d      	ldr	r2, [pc, #116]	; (800c520 <TIM_OC2_SetConfig+0x104>)
 800c4ac:	4293      	cmp	r3, r2
 800c4ae:	d00b      	beq.n	800c4c8 <TIM_OC2_SetConfig+0xac>
 800c4b0:	687b      	ldr	r3, [r7, #4]
 800c4b2:	4a1c      	ldr	r2, [pc, #112]	; (800c524 <TIM_OC2_SetConfig+0x108>)
 800c4b4:	4293      	cmp	r3, r2
 800c4b6:	d007      	beq.n	800c4c8 <TIM_OC2_SetConfig+0xac>
 800c4b8:	687b      	ldr	r3, [r7, #4]
 800c4ba:	4a1b      	ldr	r2, [pc, #108]	; (800c528 <TIM_OC2_SetConfig+0x10c>)
 800c4bc:	4293      	cmp	r3, r2
 800c4be:	d003      	beq.n	800c4c8 <TIM_OC2_SetConfig+0xac>
 800c4c0:	687b      	ldr	r3, [r7, #4]
 800c4c2:	4a1a      	ldr	r2, [pc, #104]	; (800c52c <TIM_OC2_SetConfig+0x110>)
 800c4c4:	4293      	cmp	r3, r2
 800c4c6:	d113      	bne.n	800c4f0 <TIM_OC2_SetConfig+0xd4>
 800c4c8:	693b      	ldr	r3, [r7, #16]
 800c4ca:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800c4ce:	613b      	str	r3, [r7, #16]
 800c4d0:	693b      	ldr	r3, [r7, #16]
 800c4d2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800c4d6:	613b      	str	r3, [r7, #16]
 800c4d8:	683b      	ldr	r3, [r7, #0]
 800c4da:	695b      	ldr	r3, [r3, #20]
 800c4dc:	009b      	lsls	r3, r3, #2
 800c4de:	693a      	ldr	r2, [r7, #16]
 800c4e0:	4313      	orrs	r3, r2
 800c4e2:	613b      	str	r3, [r7, #16]
 800c4e4:	683b      	ldr	r3, [r7, #0]
 800c4e6:	699b      	ldr	r3, [r3, #24]
 800c4e8:	009b      	lsls	r3, r3, #2
 800c4ea:	693a      	ldr	r2, [r7, #16]
 800c4ec:	4313      	orrs	r3, r2
 800c4ee:	613b      	str	r3, [r7, #16]
 800c4f0:	687b      	ldr	r3, [r7, #4]
 800c4f2:	693a      	ldr	r2, [r7, #16]
 800c4f4:	605a      	str	r2, [r3, #4]
 800c4f6:	687b      	ldr	r3, [r7, #4]
 800c4f8:	68fa      	ldr	r2, [r7, #12]
 800c4fa:	619a      	str	r2, [r3, #24]
 800c4fc:	683b      	ldr	r3, [r7, #0]
 800c4fe:	685a      	ldr	r2, [r3, #4]
 800c500:	687b      	ldr	r3, [r7, #4]
 800c502:	639a      	str	r2, [r3, #56]	; 0x38
 800c504:	687b      	ldr	r3, [r7, #4]
 800c506:	697a      	ldr	r2, [r7, #20]
 800c508:	621a      	str	r2, [r3, #32]
 800c50a:	bf00      	nop
 800c50c:	371c      	adds	r7, #28
 800c50e:	46bd      	mov	sp, r7
 800c510:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c514:	4770      	bx	lr
 800c516:	bf00      	nop
 800c518:	feff8fff 	.word	0xfeff8fff
 800c51c:	40010000 	.word	0x40010000
 800c520:	40010400 	.word	0x40010400
 800c524:	40014000 	.word	0x40014000
 800c528:	40014400 	.word	0x40014400
 800c52c:	40014800 	.word	0x40014800

0800c530 <TIM_OC3_SetConfig>:
 800c530:	b480      	push	{r7}
 800c532:	b087      	sub	sp, #28
 800c534:	af00      	add	r7, sp, #0
 800c536:	6078      	str	r0, [r7, #4]
 800c538:	6039      	str	r1, [r7, #0]
 800c53a:	687b      	ldr	r3, [r7, #4]
 800c53c:	6a1b      	ldr	r3, [r3, #32]
 800c53e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800c542:	687b      	ldr	r3, [r7, #4]
 800c544:	621a      	str	r2, [r3, #32]
 800c546:	687b      	ldr	r3, [r7, #4]
 800c548:	6a1b      	ldr	r3, [r3, #32]
 800c54a:	617b      	str	r3, [r7, #20]
 800c54c:	687b      	ldr	r3, [r7, #4]
 800c54e:	685b      	ldr	r3, [r3, #4]
 800c550:	613b      	str	r3, [r7, #16]
 800c552:	687b      	ldr	r3, [r7, #4]
 800c554:	69db      	ldr	r3, [r3, #28]
 800c556:	60fb      	str	r3, [r7, #12]
 800c558:	68fa      	ldr	r2, [r7, #12]
 800c55a:	4b33      	ldr	r3, [pc, #204]	; (800c628 <TIM_OC3_SetConfig+0xf8>)
 800c55c:	4013      	ands	r3, r2
 800c55e:	60fb      	str	r3, [r7, #12]
 800c560:	68fb      	ldr	r3, [r7, #12]
 800c562:	f023 0303 	bic.w	r3, r3, #3
 800c566:	60fb      	str	r3, [r7, #12]
 800c568:	683b      	ldr	r3, [r7, #0]
 800c56a:	681b      	ldr	r3, [r3, #0]
 800c56c:	68fa      	ldr	r2, [r7, #12]
 800c56e:	4313      	orrs	r3, r2
 800c570:	60fb      	str	r3, [r7, #12]
 800c572:	697b      	ldr	r3, [r7, #20]
 800c574:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800c578:	617b      	str	r3, [r7, #20]
 800c57a:	683b      	ldr	r3, [r7, #0]
 800c57c:	689b      	ldr	r3, [r3, #8]
 800c57e:	021b      	lsls	r3, r3, #8
 800c580:	697a      	ldr	r2, [r7, #20]
 800c582:	4313      	orrs	r3, r2
 800c584:	617b      	str	r3, [r7, #20]
 800c586:	687b      	ldr	r3, [r7, #4]
 800c588:	4a28      	ldr	r2, [pc, #160]	; (800c62c <TIM_OC3_SetConfig+0xfc>)
 800c58a:	4293      	cmp	r3, r2
 800c58c:	d003      	beq.n	800c596 <TIM_OC3_SetConfig+0x66>
 800c58e:	687b      	ldr	r3, [r7, #4]
 800c590:	4a27      	ldr	r2, [pc, #156]	; (800c630 <TIM_OC3_SetConfig+0x100>)
 800c592:	4293      	cmp	r3, r2
 800c594:	d10d      	bne.n	800c5b2 <TIM_OC3_SetConfig+0x82>
 800c596:	697b      	ldr	r3, [r7, #20]
 800c598:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800c59c:	617b      	str	r3, [r7, #20]
 800c59e:	683b      	ldr	r3, [r7, #0]
 800c5a0:	68db      	ldr	r3, [r3, #12]
 800c5a2:	021b      	lsls	r3, r3, #8
 800c5a4:	697a      	ldr	r2, [r7, #20]
 800c5a6:	4313      	orrs	r3, r2
 800c5a8:	617b      	str	r3, [r7, #20]
 800c5aa:	697b      	ldr	r3, [r7, #20]
 800c5ac:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800c5b0:	617b      	str	r3, [r7, #20]
 800c5b2:	687b      	ldr	r3, [r7, #4]
 800c5b4:	4a1d      	ldr	r2, [pc, #116]	; (800c62c <TIM_OC3_SetConfig+0xfc>)
 800c5b6:	4293      	cmp	r3, r2
 800c5b8:	d00f      	beq.n	800c5da <TIM_OC3_SetConfig+0xaa>
 800c5ba:	687b      	ldr	r3, [r7, #4]
 800c5bc:	4a1c      	ldr	r2, [pc, #112]	; (800c630 <TIM_OC3_SetConfig+0x100>)
 800c5be:	4293      	cmp	r3, r2
 800c5c0:	d00b      	beq.n	800c5da <TIM_OC3_SetConfig+0xaa>
 800c5c2:	687b      	ldr	r3, [r7, #4]
 800c5c4:	4a1b      	ldr	r2, [pc, #108]	; (800c634 <TIM_OC3_SetConfig+0x104>)
 800c5c6:	4293      	cmp	r3, r2
 800c5c8:	d007      	beq.n	800c5da <TIM_OC3_SetConfig+0xaa>
 800c5ca:	687b      	ldr	r3, [r7, #4]
 800c5cc:	4a1a      	ldr	r2, [pc, #104]	; (800c638 <TIM_OC3_SetConfig+0x108>)
 800c5ce:	4293      	cmp	r3, r2
 800c5d0:	d003      	beq.n	800c5da <TIM_OC3_SetConfig+0xaa>
 800c5d2:	687b      	ldr	r3, [r7, #4]
 800c5d4:	4a19      	ldr	r2, [pc, #100]	; (800c63c <TIM_OC3_SetConfig+0x10c>)
 800c5d6:	4293      	cmp	r3, r2
 800c5d8:	d113      	bne.n	800c602 <TIM_OC3_SetConfig+0xd2>
 800c5da:	693b      	ldr	r3, [r7, #16]
 800c5dc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800c5e0:	613b      	str	r3, [r7, #16]
 800c5e2:	693b      	ldr	r3, [r7, #16]
 800c5e4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800c5e8:	613b      	str	r3, [r7, #16]
 800c5ea:	683b      	ldr	r3, [r7, #0]
 800c5ec:	695b      	ldr	r3, [r3, #20]
 800c5ee:	011b      	lsls	r3, r3, #4
 800c5f0:	693a      	ldr	r2, [r7, #16]
 800c5f2:	4313      	orrs	r3, r2
 800c5f4:	613b      	str	r3, [r7, #16]
 800c5f6:	683b      	ldr	r3, [r7, #0]
 800c5f8:	699b      	ldr	r3, [r3, #24]
 800c5fa:	011b      	lsls	r3, r3, #4
 800c5fc:	693a      	ldr	r2, [r7, #16]
 800c5fe:	4313      	orrs	r3, r2
 800c600:	613b      	str	r3, [r7, #16]
 800c602:	687b      	ldr	r3, [r7, #4]
 800c604:	693a      	ldr	r2, [r7, #16]
 800c606:	605a      	str	r2, [r3, #4]
 800c608:	687b      	ldr	r3, [r7, #4]
 800c60a:	68fa      	ldr	r2, [r7, #12]
 800c60c:	61da      	str	r2, [r3, #28]
 800c60e:	683b      	ldr	r3, [r7, #0]
 800c610:	685a      	ldr	r2, [r3, #4]
 800c612:	687b      	ldr	r3, [r7, #4]
 800c614:	63da      	str	r2, [r3, #60]	; 0x3c
 800c616:	687b      	ldr	r3, [r7, #4]
 800c618:	697a      	ldr	r2, [r7, #20]
 800c61a:	621a      	str	r2, [r3, #32]
 800c61c:	bf00      	nop
 800c61e:	371c      	adds	r7, #28
 800c620:	46bd      	mov	sp, r7
 800c622:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c626:	4770      	bx	lr
 800c628:	fffeff8f 	.word	0xfffeff8f
 800c62c:	40010000 	.word	0x40010000
 800c630:	40010400 	.word	0x40010400
 800c634:	40014000 	.word	0x40014000
 800c638:	40014400 	.word	0x40014400
 800c63c:	40014800 	.word	0x40014800

0800c640 <TIM_OC4_SetConfig>:
 800c640:	b480      	push	{r7}
 800c642:	b087      	sub	sp, #28
 800c644:	af00      	add	r7, sp, #0
 800c646:	6078      	str	r0, [r7, #4]
 800c648:	6039      	str	r1, [r7, #0]
 800c64a:	687b      	ldr	r3, [r7, #4]
 800c64c:	6a1b      	ldr	r3, [r3, #32]
 800c64e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800c652:	687b      	ldr	r3, [r7, #4]
 800c654:	621a      	str	r2, [r3, #32]
 800c656:	687b      	ldr	r3, [r7, #4]
 800c658:	6a1b      	ldr	r3, [r3, #32]
 800c65a:	613b      	str	r3, [r7, #16]
 800c65c:	687b      	ldr	r3, [r7, #4]
 800c65e:	685b      	ldr	r3, [r3, #4]
 800c660:	617b      	str	r3, [r7, #20]
 800c662:	687b      	ldr	r3, [r7, #4]
 800c664:	69db      	ldr	r3, [r3, #28]
 800c666:	60fb      	str	r3, [r7, #12]
 800c668:	68fa      	ldr	r2, [r7, #12]
 800c66a:	4b24      	ldr	r3, [pc, #144]	; (800c6fc <TIM_OC4_SetConfig+0xbc>)
 800c66c:	4013      	ands	r3, r2
 800c66e:	60fb      	str	r3, [r7, #12]
 800c670:	68fb      	ldr	r3, [r7, #12]
 800c672:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800c676:	60fb      	str	r3, [r7, #12]
 800c678:	683b      	ldr	r3, [r7, #0]
 800c67a:	681b      	ldr	r3, [r3, #0]
 800c67c:	021b      	lsls	r3, r3, #8
 800c67e:	68fa      	ldr	r2, [r7, #12]
 800c680:	4313      	orrs	r3, r2
 800c682:	60fb      	str	r3, [r7, #12]
 800c684:	693b      	ldr	r3, [r7, #16]
 800c686:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800c68a:	613b      	str	r3, [r7, #16]
 800c68c:	683b      	ldr	r3, [r7, #0]
 800c68e:	689b      	ldr	r3, [r3, #8]
 800c690:	031b      	lsls	r3, r3, #12
 800c692:	693a      	ldr	r2, [r7, #16]
 800c694:	4313      	orrs	r3, r2
 800c696:	613b      	str	r3, [r7, #16]
 800c698:	687b      	ldr	r3, [r7, #4]
 800c69a:	4a19      	ldr	r2, [pc, #100]	; (800c700 <TIM_OC4_SetConfig+0xc0>)
 800c69c:	4293      	cmp	r3, r2
 800c69e:	d00f      	beq.n	800c6c0 <TIM_OC4_SetConfig+0x80>
 800c6a0:	687b      	ldr	r3, [r7, #4]
 800c6a2:	4a18      	ldr	r2, [pc, #96]	; (800c704 <TIM_OC4_SetConfig+0xc4>)
 800c6a4:	4293      	cmp	r3, r2
 800c6a6:	d00b      	beq.n	800c6c0 <TIM_OC4_SetConfig+0x80>
 800c6a8:	687b      	ldr	r3, [r7, #4]
 800c6aa:	4a17      	ldr	r2, [pc, #92]	; (800c708 <TIM_OC4_SetConfig+0xc8>)
 800c6ac:	4293      	cmp	r3, r2
 800c6ae:	d007      	beq.n	800c6c0 <TIM_OC4_SetConfig+0x80>
 800c6b0:	687b      	ldr	r3, [r7, #4]
 800c6b2:	4a16      	ldr	r2, [pc, #88]	; (800c70c <TIM_OC4_SetConfig+0xcc>)
 800c6b4:	4293      	cmp	r3, r2
 800c6b6:	d003      	beq.n	800c6c0 <TIM_OC4_SetConfig+0x80>
 800c6b8:	687b      	ldr	r3, [r7, #4]
 800c6ba:	4a15      	ldr	r2, [pc, #84]	; (800c710 <TIM_OC4_SetConfig+0xd0>)
 800c6bc:	4293      	cmp	r3, r2
 800c6be:	d109      	bne.n	800c6d4 <TIM_OC4_SetConfig+0x94>
 800c6c0:	697b      	ldr	r3, [r7, #20]
 800c6c2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800c6c6:	617b      	str	r3, [r7, #20]
 800c6c8:	683b      	ldr	r3, [r7, #0]
 800c6ca:	695b      	ldr	r3, [r3, #20]
 800c6cc:	019b      	lsls	r3, r3, #6
 800c6ce:	697a      	ldr	r2, [r7, #20]
 800c6d0:	4313      	orrs	r3, r2
 800c6d2:	617b      	str	r3, [r7, #20]
 800c6d4:	687b      	ldr	r3, [r7, #4]
 800c6d6:	697a      	ldr	r2, [r7, #20]
 800c6d8:	605a      	str	r2, [r3, #4]
 800c6da:	687b      	ldr	r3, [r7, #4]
 800c6dc:	68fa      	ldr	r2, [r7, #12]
 800c6de:	61da      	str	r2, [r3, #28]
 800c6e0:	683b      	ldr	r3, [r7, #0]
 800c6e2:	685a      	ldr	r2, [r3, #4]
 800c6e4:	687b      	ldr	r3, [r7, #4]
 800c6e6:	641a      	str	r2, [r3, #64]	; 0x40
 800c6e8:	687b      	ldr	r3, [r7, #4]
 800c6ea:	693a      	ldr	r2, [r7, #16]
 800c6ec:	621a      	str	r2, [r3, #32]
 800c6ee:	bf00      	nop
 800c6f0:	371c      	adds	r7, #28
 800c6f2:	46bd      	mov	sp, r7
 800c6f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6f8:	4770      	bx	lr
 800c6fa:	bf00      	nop
 800c6fc:	feff8fff 	.word	0xfeff8fff
 800c700:	40010000 	.word	0x40010000
 800c704:	40010400 	.word	0x40010400
 800c708:	40014000 	.word	0x40014000
 800c70c:	40014400 	.word	0x40014400
 800c710:	40014800 	.word	0x40014800

0800c714 <TIM_OC5_SetConfig>:
 800c714:	b480      	push	{r7}
 800c716:	b087      	sub	sp, #28
 800c718:	af00      	add	r7, sp, #0
 800c71a:	6078      	str	r0, [r7, #4]
 800c71c:	6039      	str	r1, [r7, #0]
 800c71e:	687b      	ldr	r3, [r7, #4]
 800c720:	6a1b      	ldr	r3, [r3, #32]
 800c722:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800c726:	687b      	ldr	r3, [r7, #4]
 800c728:	621a      	str	r2, [r3, #32]
 800c72a:	687b      	ldr	r3, [r7, #4]
 800c72c:	6a1b      	ldr	r3, [r3, #32]
 800c72e:	613b      	str	r3, [r7, #16]
 800c730:	687b      	ldr	r3, [r7, #4]
 800c732:	685b      	ldr	r3, [r3, #4]
 800c734:	617b      	str	r3, [r7, #20]
 800c736:	687b      	ldr	r3, [r7, #4]
 800c738:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c73a:	60fb      	str	r3, [r7, #12]
 800c73c:	68fa      	ldr	r2, [r7, #12]
 800c73e:	4b21      	ldr	r3, [pc, #132]	; (800c7c4 <TIM_OC5_SetConfig+0xb0>)
 800c740:	4013      	ands	r3, r2
 800c742:	60fb      	str	r3, [r7, #12]
 800c744:	683b      	ldr	r3, [r7, #0]
 800c746:	681b      	ldr	r3, [r3, #0]
 800c748:	68fa      	ldr	r2, [r7, #12]
 800c74a:	4313      	orrs	r3, r2
 800c74c:	60fb      	str	r3, [r7, #12]
 800c74e:	693b      	ldr	r3, [r7, #16]
 800c750:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800c754:	613b      	str	r3, [r7, #16]
 800c756:	683b      	ldr	r3, [r7, #0]
 800c758:	689b      	ldr	r3, [r3, #8]
 800c75a:	041b      	lsls	r3, r3, #16
 800c75c:	693a      	ldr	r2, [r7, #16]
 800c75e:	4313      	orrs	r3, r2
 800c760:	613b      	str	r3, [r7, #16]
 800c762:	687b      	ldr	r3, [r7, #4]
 800c764:	4a18      	ldr	r2, [pc, #96]	; (800c7c8 <TIM_OC5_SetConfig+0xb4>)
 800c766:	4293      	cmp	r3, r2
 800c768:	d00f      	beq.n	800c78a <TIM_OC5_SetConfig+0x76>
 800c76a:	687b      	ldr	r3, [r7, #4]
 800c76c:	4a17      	ldr	r2, [pc, #92]	; (800c7cc <TIM_OC5_SetConfig+0xb8>)
 800c76e:	4293      	cmp	r3, r2
 800c770:	d00b      	beq.n	800c78a <TIM_OC5_SetConfig+0x76>
 800c772:	687b      	ldr	r3, [r7, #4]
 800c774:	4a16      	ldr	r2, [pc, #88]	; (800c7d0 <TIM_OC5_SetConfig+0xbc>)
 800c776:	4293      	cmp	r3, r2
 800c778:	d007      	beq.n	800c78a <TIM_OC5_SetConfig+0x76>
 800c77a:	687b      	ldr	r3, [r7, #4]
 800c77c:	4a15      	ldr	r2, [pc, #84]	; (800c7d4 <TIM_OC5_SetConfig+0xc0>)
 800c77e:	4293      	cmp	r3, r2
 800c780:	d003      	beq.n	800c78a <TIM_OC5_SetConfig+0x76>
 800c782:	687b      	ldr	r3, [r7, #4]
 800c784:	4a14      	ldr	r2, [pc, #80]	; (800c7d8 <TIM_OC5_SetConfig+0xc4>)
 800c786:	4293      	cmp	r3, r2
 800c788:	d109      	bne.n	800c79e <TIM_OC5_SetConfig+0x8a>
 800c78a:	697b      	ldr	r3, [r7, #20]
 800c78c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800c790:	617b      	str	r3, [r7, #20]
 800c792:	683b      	ldr	r3, [r7, #0]
 800c794:	695b      	ldr	r3, [r3, #20]
 800c796:	021b      	lsls	r3, r3, #8
 800c798:	697a      	ldr	r2, [r7, #20]
 800c79a:	4313      	orrs	r3, r2
 800c79c:	617b      	str	r3, [r7, #20]
 800c79e:	687b      	ldr	r3, [r7, #4]
 800c7a0:	697a      	ldr	r2, [r7, #20]
 800c7a2:	605a      	str	r2, [r3, #4]
 800c7a4:	687b      	ldr	r3, [r7, #4]
 800c7a6:	68fa      	ldr	r2, [r7, #12]
 800c7a8:	655a      	str	r2, [r3, #84]	; 0x54
 800c7aa:	683b      	ldr	r3, [r7, #0]
 800c7ac:	685a      	ldr	r2, [r3, #4]
 800c7ae:	687b      	ldr	r3, [r7, #4]
 800c7b0:	659a      	str	r2, [r3, #88]	; 0x58
 800c7b2:	687b      	ldr	r3, [r7, #4]
 800c7b4:	693a      	ldr	r2, [r7, #16]
 800c7b6:	621a      	str	r2, [r3, #32]
 800c7b8:	bf00      	nop
 800c7ba:	371c      	adds	r7, #28
 800c7bc:	46bd      	mov	sp, r7
 800c7be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7c2:	4770      	bx	lr
 800c7c4:	fffeff8f 	.word	0xfffeff8f
 800c7c8:	40010000 	.word	0x40010000
 800c7cc:	40010400 	.word	0x40010400
 800c7d0:	40014000 	.word	0x40014000
 800c7d4:	40014400 	.word	0x40014400
 800c7d8:	40014800 	.word	0x40014800

0800c7dc <TIM_OC6_SetConfig>:
 800c7dc:	b480      	push	{r7}
 800c7de:	b087      	sub	sp, #28
 800c7e0:	af00      	add	r7, sp, #0
 800c7e2:	6078      	str	r0, [r7, #4]
 800c7e4:	6039      	str	r1, [r7, #0]
 800c7e6:	687b      	ldr	r3, [r7, #4]
 800c7e8:	6a1b      	ldr	r3, [r3, #32]
 800c7ea:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 800c7ee:	687b      	ldr	r3, [r7, #4]
 800c7f0:	621a      	str	r2, [r3, #32]
 800c7f2:	687b      	ldr	r3, [r7, #4]
 800c7f4:	6a1b      	ldr	r3, [r3, #32]
 800c7f6:	613b      	str	r3, [r7, #16]
 800c7f8:	687b      	ldr	r3, [r7, #4]
 800c7fa:	685b      	ldr	r3, [r3, #4]
 800c7fc:	617b      	str	r3, [r7, #20]
 800c7fe:	687b      	ldr	r3, [r7, #4]
 800c800:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c802:	60fb      	str	r3, [r7, #12]
 800c804:	68fa      	ldr	r2, [r7, #12]
 800c806:	4b22      	ldr	r3, [pc, #136]	; (800c890 <TIM_OC6_SetConfig+0xb4>)
 800c808:	4013      	ands	r3, r2
 800c80a:	60fb      	str	r3, [r7, #12]
 800c80c:	683b      	ldr	r3, [r7, #0]
 800c80e:	681b      	ldr	r3, [r3, #0]
 800c810:	021b      	lsls	r3, r3, #8
 800c812:	68fa      	ldr	r2, [r7, #12]
 800c814:	4313      	orrs	r3, r2
 800c816:	60fb      	str	r3, [r7, #12]
 800c818:	693b      	ldr	r3, [r7, #16]
 800c81a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800c81e:	613b      	str	r3, [r7, #16]
 800c820:	683b      	ldr	r3, [r7, #0]
 800c822:	689b      	ldr	r3, [r3, #8]
 800c824:	051b      	lsls	r3, r3, #20
 800c826:	693a      	ldr	r2, [r7, #16]
 800c828:	4313      	orrs	r3, r2
 800c82a:	613b      	str	r3, [r7, #16]
 800c82c:	687b      	ldr	r3, [r7, #4]
 800c82e:	4a19      	ldr	r2, [pc, #100]	; (800c894 <TIM_OC6_SetConfig+0xb8>)
 800c830:	4293      	cmp	r3, r2
 800c832:	d00f      	beq.n	800c854 <TIM_OC6_SetConfig+0x78>
 800c834:	687b      	ldr	r3, [r7, #4]
 800c836:	4a18      	ldr	r2, [pc, #96]	; (800c898 <TIM_OC6_SetConfig+0xbc>)
 800c838:	4293      	cmp	r3, r2
 800c83a:	d00b      	beq.n	800c854 <TIM_OC6_SetConfig+0x78>
 800c83c:	687b      	ldr	r3, [r7, #4]
 800c83e:	4a17      	ldr	r2, [pc, #92]	; (800c89c <TIM_OC6_SetConfig+0xc0>)
 800c840:	4293      	cmp	r3, r2
 800c842:	d007      	beq.n	800c854 <TIM_OC6_SetConfig+0x78>
 800c844:	687b      	ldr	r3, [r7, #4]
 800c846:	4a16      	ldr	r2, [pc, #88]	; (800c8a0 <TIM_OC6_SetConfig+0xc4>)
 800c848:	4293      	cmp	r3, r2
 800c84a:	d003      	beq.n	800c854 <TIM_OC6_SetConfig+0x78>
 800c84c:	687b      	ldr	r3, [r7, #4]
 800c84e:	4a15      	ldr	r2, [pc, #84]	; (800c8a4 <TIM_OC6_SetConfig+0xc8>)
 800c850:	4293      	cmp	r3, r2
 800c852:	d109      	bne.n	800c868 <TIM_OC6_SetConfig+0x8c>
 800c854:	697b      	ldr	r3, [r7, #20]
 800c856:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800c85a:	617b      	str	r3, [r7, #20]
 800c85c:	683b      	ldr	r3, [r7, #0]
 800c85e:	695b      	ldr	r3, [r3, #20]
 800c860:	029b      	lsls	r3, r3, #10
 800c862:	697a      	ldr	r2, [r7, #20]
 800c864:	4313      	orrs	r3, r2
 800c866:	617b      	str	r3, [r7, #20]
 800c868:	687b      	ldr	r3, [r7, #4]
 800c86a:	697a      	ldr	r2, [r7, #20]
 800c86c:	605a      	str	r2, [r3, #4]
 800c86e:	687b      	ldr	r3, [r7, #4]
 800c870:	68fa      	ldr	r2, [r7, #12]
 800c872:	655a      	str	r2, [r3, #84]	; 0x54
 800c874:	683b      	ldr	r3, [r7, #0]
 800c876:	685a      	ldr	r2, [r3, #4]
 800c878:	687b      	ldr	r3, [r7, #4]
 800c87a:	65da      	str	r2, [r3, #92]	; 0x5c
 800c87c:	687b      	ldr	r3, [r7, #4]
 800c87e:	693a      	ldr	r2, [r7, #16]
 800c880:	621a      	str	r2, [r3, #32]
 800c882:	bf00      	nop
 800c884:	371c      	adds	r7, #28
 800c886:	46bd      	mov	sp, r7
 800c888:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c88c:	4770      	bx	lr
 800c88e:	bf00      	nop
 800c890:	feff8fff 	.word	0xfeff8fff
 800c894:	40010000 	.word	0x40010000
 800c898:	40010400 	.word	0x40010400
 800c89c:	40014000 	.word	0x40014000
 800c8a0:	40014400 	.word	0x40014400
 800c8a4:	40014800 	.word	0x40014800

0800c8a8 <TIM_TI1_SetConfig>:
 800c8a8:	b480      	push	{r7}
 800c8aa:	b087      	sub	sp, #28
 800c8ac:	af00      	add	r7, sp, #0
 800c8ae:	60f8      	str	r0, [r7, #12]
 800c8b0:	60b9      	str	r1, [r7, #8]
 800c8b2:	607a      	str	r2, [r7, #4]
 800c8b4:	603b      	str	r3, [r7, #0]
 800c8b6:	68fb      	ldr	r3, [r7, #12]
 800c8b8:	6a1b      	ldr	r3, [r3, #32]
 800c8ba:	f023 0201 	bic.w	r2, r3, #1
 800c8be:	68fb      	ldr	r3, [r7, #12]
 800c8c0:	621a      	str	r2, [r3, #32]
 800c8c2:	68fb      	ldr	r3, [r7, #12]
 800c8c4:	699b      	ldr	r3, [r3, #24]
 800c8c6:	617b      	str	r3, [r7, #20]
 800c8c8:	68fb      	ldr	r3, [r7, #12]
 800c8ca:	6a1b      	ldr	r3, [r3, #32]
 800c8cc:	613b      	str	r3, [r7, #16]
 800c8ce:	68fb      	ldr	r3, [r7, #12]
 800c8d0:	4a28      	ldr	r2, [pc, #160]	; (800c974 <TIM_TI1_SetConfig+0xcc>)
 800c8d2:	4293      	cmp	r3, r2
 800c8d4:	d01b      	beq.n	800c90e <TIM_TI1_SetConfig+0x66>
 800c8d6:	68fb      	ldr	r3, [r7, #12]
 800c8d8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c8dc:	d017      	beq.n	800c90e <TIM_TI1_SetConfig+0x66>
 800c8de:	68fb      	ldr	r3, [r7, #12]
 800c8e0:	4a25      	ldr	r2, [pc, #148]	; (800c978 <TIM_TI1_SetConfig+0xd0>)
 800c8e2:	4293      	cmp	r3, r2
 800c8e4:	d013      	beq.n	800c90e <TIM_TI1_SetConfig+0x66>
 800c8e6:	68fb      	ldr	r3, [r7, #12]
 800c8e8:	4a24      	ldr	r2, [pc, #144]	; (800c97c <TIM_TI1_SetConfig+0xd4>)
 800c8ea:	4293      	cmp	r3, r2
 800c8ec:	d00f      	beq.n	800c90e <TIM_TI1_SetConfig+0x66>
 800c8ee:	68fb      	ldr	r3, [r7, #12]
 800c8f0:	4a23      	ldr	r2, [pc, #140]	; (800c980 <TIM_TI1_SetConfig+0xd8>)
 800c8f2:	4293      	cmp	r3, r2
 800c8f4:	d00b      	beq.n	800c90e <TIM_TI1_SetConfig+0x66>
 800c8f6:	68fb      	ldr	r3, [r7, #12]
 800c8f8:	4a22      	ldr	r2, [pc, #136]	; (800c984 <TIM_TI1_SetConfig+0xdc>)
 800c8fa:	4293      	cmp	r3, r2
 800c8fc:	d007      	beq.n	800c90e <TIM_TI1_SetConfig+0x66>
 800c8fe:	68fb      	ldr	r3, [r7, #12]
 800c900:	4a21      	ldr	r2, [pc, #132]	; (800c988 <TIM_TI1_SetConfig+0xe0>)
 800c902:	4293      	cmp	r3, r2
 800c904:	d003      	beq.n	800c90e <TIM_TI1_SetConfig+0x66>
 800c906:	68fb      	ldr	r3, [r7, #12]
 800c908:	4a20      	ldr	r2, [pc, #128]	; (800c98c <TIM_TI1_SetConfig+0xe4>)
 800c90a:	4293      	cmp	r3, r2
 800c90c:	d101      	bne.n	800c912 <TIM_TI1_SetConfig+0x6a>
 800c90e:	2301      	movs	r3, #1
 800c910:	e000      	b.n	800c914 <TIM_TI1_SetConfig+0x6c>
 800c912:	2300      	movs	r3, #0
 800c914:	2b00      	cmp	r3, #0
 800c916:	d008      	beq.n	800c92a <TIM_TI1_SetConfig+0x82>
 800c918:	697b      	ldr	r3, [r7, #20]
 800c91a:	f023 0303 	bic.w	r3, r3, #3
 800c91e:	617b      	str	r3, [r7, #20]
 800c920:	697a      	ldr	r2, [r7, #20]
 800c922:	687b      	ldr	r3, [r7, #4]
 800c924:	4313      	orrs	r3, r2
 800c926:	617b      	str	r3, [r7, #20]
 800c928:	e003      	b.n	800c932 <TIM_TI1_SetConfig+0x8a>
 800c92a:	697b      	ldr	r3, [r7, #20]
 800c92c:	f043 0301 	orr.w	r3, r3, #1
 800c930:	617b      	str	r3, [r7, #20]
 800c932:	697b      	ldr	r3, [r7, #20]
 800c934:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800c938:	617b      	str	r3, [r7, #20]
 800c93a:	683b      	ldr	r3, [r7, #0]
 800c93c:	011b      	lsls	r3, r3, #4
 800c93e:	b2db      	uxtb	r3, r3
 800c940:	697a      	ldr	r2, [r7, #20]
 800c942:	4313      	orrs	r3, r2
 800c944:	617b      	str	r3, [r7, #20]
 800c946:	693b      	ldr	r3, [r7, #16]
 800c948:	f023 030a 	bic.w	r3, r3, #10
 800c94c:	613b      	str	r3, [r7, #16]
 800c94e:	68bb      	ldr	r3, [r7, #8]
 800c950:	f003 030a 	and.w	r3, r3, #10
 800c954:	693a      	ldr	r2, [r7, #16]
 800c956:	4313      	orrs	r3, r2
 800c958:	613b      	str	r3, [r7, #16]
 800c95a:	68fb      	ldr	r3, [r7, #12]
 800c95c:	697a      	ldr	r2, [r7, #20]
 800c95e:	619a      	str	r2, [r3, #24]
 800c960:	68fb      	ldr	r3, [r7, #12]
 800c962:	693a      	ldr	r2, [r7, #16]
 800c964:	621a      	str	r2, [r3, #32]
 800c966:	bf00      	nop
 800c968:	371c      	adds	r7, #28
 800c96a:	46bd      	mov	sp, r7
 800c96c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c970:	4770      	bx	lr
 800c972:	bf00      	nop
 800c974:	40010000 	.word	0x40010000
 800c978:	40000400 	.word	0x40000400
 800c97c:	40000800 	.word	0x40000800
 800c980:	40000c00 	.word	0x40000c00
 800c984:	40010400 	.word	0x40010400
 800c988:	40001800 	.word	0x40001800
 800c98c:	40014000 	.word	0x40014000

0800c990 <TIM_TI1_ConfigInputStage>:
 800c990:	b480      	push	{r7}
 800c992:	b087      	sub	sp, #28
 800c994:	af00      	add	r7, sp, #0
 800c996:	60f8      	str	r0, [r7, #12]
 800c998:	60b9      	str	r1, [r7, #8]
 800c99a:	607a      	str	r2, [r7, #4]
 800c99c:	68fb      	ldr	r3, [r7, #12]
 800c99e:	6a1b      	ldr	r3, [r3, #32]
 800c9a0:	617b      	str	r3, [r7, #20]
 800c9a2:	68fb      	ldr	r3, [r7, #12]
 800c9a4:	6a1b      	ldr	r3, [r3, #32]
 800c9a6:	f023 0201 	bic.w	r2, r3, #1
 800c9aa:	68fb      	ldr	r3, [r7, #12]
 800c9ac:	621a      	str	r2, [r3, #32]
 800c9ae:	68fb      	ldr	r3, [r7, #12]
 800c9b0:	699b      	ldr	r3, [r3, #24]
 800c9b2:	613b      	str	r3, [r7, #16]
 800c9b4:	693b      	ldr	r3, [r7, #16]
 800c9b6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800c9ba:	613b      	str	r3, [r7, #16]
 800c9bc:	687b      	ldr	r3, [r7, #4]
 800c9be:	011b      	lsls	r3, r3, #4
 800c9c0:	693a      	ldr	r2, [r7, #16]
 800c9c2:	4313      	orrs	r3, r2
 800c9c4:	613b      	str	r3, [r7, #16]
 800c9c6:	697b      	ldr	r3, [r7, #20]
 800c9c8:	f023 030a 	bic.w	r3, r3, #10
 800c9cc:	617b      	str	r3, [r7, #20]
 800c9ce:	697a      	ldr	r2, [r7, #20]
 800c9d0:	68bb      	ldr	r3, [r7, #8]
 800c9d2:	4313      	orrs	r3, r2
 800c9d4:	617b      	str	r3, [r7, #20]
 800c9d6:	68fb      	ldr	r3, [r7, #12]
 800c9d8:	693a      	ldr	r2, [r7, #16]
 800c9da:	619a      	str	r2, [r3, #24]
 800c9dc:	68fb      	ldr	r3, [r7, #12]
 800c9de:	697a      	ldr	r2, [r7, #20]
 800c9e0:	621a      	str	r2, [r3, #32]
 800c9e2:	bf00      	nop
 800c9e4:	371c      	adds	r7, #28
 800c9e6:	46bd      	mov	sp, r7
 800c9e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9ec:	4770      	bx	lr

0800c9ee <TIM_TI2_SetConfig>:
 800c9ee:	b480      	push	{r7}
 800c9f0:	b087      	sub	sp, #28
 800c9f2:	af00      	add	r7, sp, #0
 800c9f4:	60f8      	str	r0, [r7, #12]
 800c9f6:	60b9      	str	r1, [r7, #8]
 800c9f8:	607a      	str	r2, [r7, #4]
 800c9fa:	603b      	str	r3, [r7, #0]
 800c9fc:	68fb      	ldr	r3, [r7, #12]
 800c9fe:	6a1b      	ldr	r3, [r3, #32]
 800ca00:	f023 0210 	bic.w	r2, r3, #16
 800ca04:	68fb      	ldr	r3, [r7, #12]
 800ca06:	621a      	str	r2, [r3, #32]
 800ca08:	68fb      	ldr	r3, [r7, #12]
 800ca0a:	699b      	ldr	r3, [r3, #24]
 800ca0c:	617b      	str	r3, [r7, #20]
 800ca0e:	68fb      	ldr	r3, [r7, #12]
 800ca10:	6a1b      	ldr	r3, [r3, #32]
 800ca12:	613b      	str	r3, [r7, #16]
 800ca14:	697b      	ldr	r3, [r7, #20]
 800ca16:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800ca1a:	617b      	str	r3, [r7, #20]
 800ca1c:	687b      	ldr	r3, [r7, #4]
 800ca1e:	021b      	lsls	r3, r3, #8
 800ca20:	697a      	ldr	r2, [r7, #20]
 800ca22:	4313      	orrs	r3, r2
 800ca24:	617b      	str	r3, [r7, #20]
 800ca26:	697b      	ldr	r3, [r7, #20]
 800ca28:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800ca2c:	617b      	str	r3, [r7, #20]
 800ca2e:	683b      	ldr	r3, [r7, #0]
 800ca30:	031b      	lsls	r3, r3, #12
 800ca32:	b29b      	uxth	r3, r3
 800ca34:	697a      	ldr	r2, [r7, #20]
 800ca36:	4313      	orrs	r3, r2
 800ca38:	617b      	str	r3, [r7, #20]
 800ca3a:	693b      	ldr	r3, [r7, #16]
 800ca3c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800ca40:	613b      	str	r3, [r7, #16]
 800ca42:	68bb      	ldr	r3, [r7, #8]
 800ca44:	011b      	lsls	r3, r3, #4
 800ca46:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 800ca4a:	693a      	ldr	r2, [r7, #16]
 800ca4c:	4313      	orrs	r3, r2
 800ca4e:	613b      	str	r3, [r7, #16]
 800ca50:	68fb      	ldr	r3, [r7, #12]
 800ca52:	697a      	ldr	r2, [r7, #20]
 800ca54:	619a      	str	r2, [r3, #24]
 800ca56:	68fb      	ldr	r3, [r7, #12]
 800ca58:	693a      	ldr	r2, [r7, #16]
 800ca5a:	621a      	str	r2, [r3, #32]
 800ca5c:	bf00      	nop
 800ca5e:	371c      	adds	r7, #28
 800ca60:	46bd      	mov	sp, r7
 800ca62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca66:	4770      	bx	lr

0800ca68 <TIM_TI2_ConfigInputStage>:
 800ca68:	b480      	push	{r7}
 800ca6a:	b087      	sub	sp, #28
 800ca6c:	af00      	add	r7, sp, #0
 800ca6e:	60f8      	str	r0, [r7, #12]
 800ca70:	60b9      	str	r1, [r7, #8]
 800ca72:	607a      	str	r2, [r7, #4]
 800ca74:	68fb      	ldr	r3, [r7, #12]
 800ca76:	6a1b      	ldr	r3, [r3, #32]
 800ca78:	f023 0210 	bic.w	r2, r3, #16
 800ca7c:	68fb      	ldr	r3, [r7, #12]
 800ca7e:	621a      	str	r2, [r3, #32]
 800ca80:	68fb      	ldr	r3, [r7, #12]
 800ca82:	699b      	ldr	r3, [r3, #24]
 800ca84:	617b      	str	r3, [r7, #20]
 800ca86:	68fb      	ldr	r3, [r7, #12]
 800ca88:	6a1b      	ldr	r3, [r3, #32]
 800ca8a:	613b      	str	r3, [r7, #16]
 800ca8c:	697b      	ldr	r3, [r7, #20]
 800ca8e:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800ca92:	617b      	str	r3, [r7, #20]
 800ca94:	687b      	ldr	r3, [r7, #4]
 800ca96:	031b      	lsls	r3, r3, #12
 800ca98:	697a      	ldr	r2, [r7, #20]
 800ca9a:	4313      	orrs	r3, r2
 800ca9c:	617b      	str	r3, [r7, #20]
 800ca9e:	693b      	ldr	r3, [r7, #16]
 800caa0:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800caa4:	613b      	str	r3, [r7, #16]
 800caa6:	68bb      	ldr	r3, [r7, #8]
 800caa8:	011b      	lsls	r3, r3, #4
 800caaa:	693a      	ldr	r2, [r7, #16]
 800caac:	4313      	orrs	r3, r2
 800caae:	613b      	str	r3, [r7, #16]
 800cab0:	68fb      	ldr	r3, [r7, #12]
 800cab2:	697a      	ldr	r2, [r7, #20]
 800cab4:	619a      	str	r2, [r3, #24]
 800cab6:	68fb      	ldr	r3, [r7, #12]
 800cab8:	693a      	ldr	r2, [r7, #16]
 800caba:	621a      	str	r2, [r3, #32]
 800cabc:	bf00      	nop
 800cabe:	371c      	adds	r7, #28
 800cac0:	46bd      	mov	sp, r7
 800cac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cac6:	4770      	bx	lr

0800cac8 <TIM_TI3_SetConfig>:
 800cac8:	b480      	push	{r7}
 800caca:	b087      	sub	sp, #28
 800cacc:	af00      	add	r7, sp, #0
 800cace:	60f8      	str	r0, [r7, #12]
 800cad0:	60b9      	str	r1, [r7, #8]
 800cad2:	607a      	str	r2, [r7, #4]
 800cad4:	603b      	str	r3, [r7, #0]
 800cad6:	68fb      	ldr	r3, [r7, #12]
 800cad8:	6a1b      	ldr	r3, [r3, #32]
 800cada:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800cade:	68fb      	ldr	r3, [r7, #12]
 800cae0:	621a      	str	r2, [r3, #32]
 800cae2:	68fb      	ldr	r3, [r7, #12]
 800cae4:	69db      	ldr	r3, [r3, #28]
 800cae6:	617b      	str	r3, [r7, #20]
 800cae8:	68fb      	ldr	r3, [r7, #12]
 800caea:	6a1b      	ldr	r3, [r3, #32]
 800caec:	613b      	str	r3, [r7, #16]
 800caee:	697b      	ldr	r3, [r7, #20]
 800caf0:	f023 0303 	bic.w	r3, r3, #3
 800caf4:	617b      	str	r3, [r7, #20]
 800caf6:	697a      	ldr	r2, [r7, #20]
 800caf8:	687b      	ldr	r3, [r7, #4]
 800cafa:	4313      	orrs	r3, r2
 800cafc:	617b      	str	r3, [r7, #20]
 800cafe:	697b      	ldr	r3, [r7, #20]
 800cb00:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800cb04:	617b      	str	r3, [r7, #20]
 800cb06:	683b      	ldr	r3, [r7, #0]
 800cb08:	011b      	lsls	r3, r3, #4
 800cb0a:	b2db      	uxtb	r3, r3
 800cb0c:	697a      	ldr	r2, [r7, #20]
 800cb0e:	4313      	orrs	r3, r2
 800cb10:	617b      	str	r3, [r7, #20]
 800cb12:	693b      	ldr	r3, [r7, #16]
 800cb14:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 800cb18:	613b      	str	r3, [r7, #16]
 800cb1a:	68bb      	ldr	r3, [r7, #8]
 800cb1c:	021b      	lsls	r3, r3, #8
 800cb1e:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 800cb22:	693a      	ldr	r2, [r7, #16]
 800cb24:	4313      	orrs	r3, r2
 800cb26:	613b      	str	r3, [r7, #16]
 800cb28:	68fb      	ldr	r3, [r7, #12]
 800cb2a:	697a      	ldr	r2, [r7, #20]
 800cb2c:	61da      	str	r2, [r3, #28]
 800cb2e:	68fb      	ldr	r3, [r7, #12]
 800cb30:	693a      	ldr	r2, [r7, #16]
 800cb32:	621a      	str	r2, [r3, #32]
 800cb34:	bf00      	nop
 800cb36:	371c      	adds	r7, #28
 800cb38:	46bd      	mov	sp, r7
 800cb3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb3e:	4770      	bx	lr

0800cb40 <TIM_TI4_SetConfig>:
 800cb40:	b480      	push	{r7}
 800cb42:	b087      	sub	sp, #28
 800cb44:	af00      	add	r7, sp, #0
 800cb46:	60f8      	str	r0, [r7, #12]
 800cb48:	60b9      	str	r1, [r7, #8]
 800cb4a:	607a      	str	r2, [r7, #4]
 800cb4c:	603b      	str	r3, [r7, #0]
 800cb4e:	68fb      	ldr	r3, [r7, #12]
 800cb50:	6a1b      	ldr	r3, [r3, #32]
 800cb52:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800cb56:	68fb      	ldr	r3, [r7, #12]
 800cb58:	621a      	str	r2, [r3, #32]
 800cb5a:	68fb      	ldr	r3, [r7, #12]
 800cb5c:	69db      	ldr	r3, [r3, #28]
 800cb5e:	617b      	str	r3, [r7, #20]
 800cb60:	68fb      	ldr	r3, [r7, #12]
 800cb62:	6a1b      	ldr	r3, [r3, #32]
 800cb64:	613b      	str	r3, [r7, #16]
 800cb66:	697b      	ldr	r3, [r7, #20]
 800cb68:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800cb6c:	617b      	str	r3, [r7, #20]
 800cb6e:	687b      	ldr	r3, [r7, #4]
 800cb70:	021b      	lsls	r3, r3, #8
 800cb72:	697a      	ldr	r2, [r7, #20]
 800cb74:	4313      	orrs	r3, r2
 800cb76:	617b      	str	r3, [r7, #20]
 800cb78:	697b      	ldr	r3, [r7, #20]
 800cb7a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800cb7e:	617b      	str	r3, [r7, #20]
 800cb80:	683b      	ldr	r3, [r7, #0]
 800cb82:	031b      	lsls	r3, r3, #12
 800cb84:	b29b      	uxth	r3, r3
 800cb86:	697a      	ldr	r2, [r7, #20]
 800cb88:	4313      	orrs	r3, r2
 800cb8a:	617b      	str	r3, [r7, #20]
 800cb8c:	693b      	ldr	r3, [r7, #16]
 800cb8e:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 800cb92:	613b      	str	r3, [r7, #16]
 800cb94:	68bb      	ldr	r3, [r7, #8]
 800cb96:	031b      	lsls	r3, r3, #12
 800cb98:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 800cb9c:	693a      	ldr	r2, [r7, #16]
 800cb9e:	4313      	orrs	r3, r2
 800cba0:	613b      	str	r3, [r7, #16]
 800cba2:	68fb      	ldr	r3, [r7, #12]
 800cba4:	697a      	ldr	r2, [r7, #20]
 800cba6:	61da      	str	r2, [r3, #28]
 800cba8:	68fb      	ldr	r3, [r7, #12]
 800cbaa:	693a      	ldr	r2, [r7, #16]
 800cbac:	621a      	str	r2, [r3, #32]
 800cbae:	bf00      	nop
 800cbb0:	371c      	adds	r7, #28
 800cbb2:	46bd      	mov	sp, r7
 800cbb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbb8:	4770      	bx	lr
	...

0800cbbc <TIM_ITRx_SetConfig>:
 800cbbc:	b480      	push	{r7}
 800cbbe:	b085      	sub	sp, #20
 800cbc0:	af00      	add	r7, sp, #0
 800cbc2:	6078      	str	r0, [r7, #4]
 800cbc4:	6039      	str	r1, [r7, #0]
 800cbc6:	687b      	ldr	r3, [r7, #4]
 800cbc8:	689b      	ldr	r3, [r3, #8]
 800cbca:	60fb      	str	r3, [r7, #12]
 800cbcc:	68fa      	ldr	r2, [r7, #12]
 800cbce:	4b09      	ldr	r3, [pc, #36]	; (800cbf4 <TIM_ITRx_SetConfig+0x38>)
 800cbd0:	4013      	ands	r3, r2
 800cbd2:	60fb      	str	r3, [r7, #12]
 800cbd4:	683a      	ldr	r2, [r7, #0]
 800cbd6:	68fb      	ldr	r3, [r7, #12]
 800cbd8:	4313      	orrs	r3, r2
 800cbda:	f043 0307 	orr.w	r3, r3, #7
 800cbde:	60fb      	str	r3, [r7, #12]
 800cbe0:	687b      	ldr	r3, [r7, #4]
 800cbe2:	68fa      	ldr	r2, [r7, #12]
 800cbe4:	609a      	str	r2, [r3, #8]
 800cbe6:	bf00      	nop
 800cbe8:	3714      	adds	r7, #20
 800cbea:	46bd      	mov	sp, r7
 800cbec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbf0:	4770      	bx	lr
 800cbf2:	bf00      	nop
 800cbf4:	ffcfff8f 	.word	0xffcfff8f

0800cbf8 <TIM_ETR_SetConfig>:
 800cbf8:	b480      	push	{r7}
 800cbfa:	b087      	sub	sp, #28
 800cbfc:	af00      	add	r7, sp, #0
 800cbfe:	60f8      	str	r0, [r7, #12]
 800cc00:	60b9      	str	r1, [r7, #8]
 800cc02:	607a      	str	r2, [r7, #4]
 800cc04:	603b      	str	r3, [r7, #0]
 800cc06:	68fb      	ldr	r3, [r7, #12]
 800cc08:	689b      	ldr	r3, [r3, #8]
 800cc0a:	617b      	str	r3, [r7, #20]
 800cc0c:	697b      	ldr	r3, [r7, #20]
 800cc0e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800cc12:	617b      	str	r3, [r7, #20]
 800cc14:	683b      	ldr	r3, [r7, #0]
 800cc16:	021a      	lsls	r2, r3, #8
 800cc18:	687b      	ldr	r3, [r7, #4]
 800cc1a:	431a      	orrs	r2, r3
 800cc1c:	68bb      	ldr	r3, [r7, #8]
 800cc1e:	4313      	orrs	r3, r2
 800cc20:	697a      	ldr	r2, [r7, #20]
 800cc22:	4313      	orrs	r3, r2
 800cc24:	617b      	str	r3, [r7, #20]
 800cc26:	68fb      	ldr	r3, [r7, #12]
 800cc28:	697a      	ldr	r2, [r7, #20]
 800cc2a:	609a      	str	r2, [r3, #8]
 800cc2c:	bf00      	nop
 800cc2e:	371c      	adds	r7, #28
 800cc30:	46bd      	mov	sp, r7
 800cc32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc36:	4770      	bx	lr

0800cc38 <TIM_CCxChannelCmd>:
 800cc38:	b480      	push	{r7}
 800cc3a:	b087      	sub	sp, #28
 800cc3c:	af00      	add	r7, sp, #0
 800cc3e:	60f8      	str	r0, [r7, #12]
 800cc40:	60b9      	str	r1, [r7, #8]
 800cc42:	607a      	str	r2, [r7, #4]
 800cc44:	68bb      	ldr	r3, [r7, #8]
 800cc46:	f003 031f 	and.w	r3, r3, #31
 800cc4a:	2201      	movs	r2, #1
 800cc4c:	fa02 f303 	lsl.w	r3, r2, r3
 800cc50:	617b      	str	r3, [r7, #20]
 800cc52:	68fb      	ldr	r3, [r7, #12]
 800cc54:	6a1a      	ldr	r2, [r3, #32]
 800cc56:	697b      	ldr	r3, [r7, #20]
 800cc58:	43db      	mvns	r3, r3
 800cc5a:	401a      	ands	r2, r3
 800cc5c:	68fb      	ldr	r3, [r7, #12]
 800cc5e:	621a      	str	r2, [r3, #32]
 800cc60:	68fb      	ldr	r3, [r7, #12]
 800cc62:	6a1a      	ldr	r2, [r3, #32]
 800cc64:	68bb      	ldr	r3, [r7, #8]
 800cc66:	f003 031f 	and.w	r3, r3, #31
 800cc6a:	6879      	ldr	r1, [r7, #4]
 800cc6c:	fa01 f303 	lsl.w	r3, r1, r3
 800cc70:	431a      	orrs	r2, r3
 800cc72:	68fb      	ldr	r3, [r7, #12]
 800cc74:	621a      	str	r2, [r3, #32]
 800cc76:	bf00      	nop
 800cc78:	371c      	adds	r7, #28
 800cc7a:	46bd      	mov	sp, r7
 800cc7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc80:	4770      	bx	lr
	...

0800cc84 <HAL_TIMEx_MasterConfigSynchronization>:
 800cc84:	b480      	push	{r7}
 800cc86:	b085      	sub	sp, #20
 800cc88:	af00      	add	r7, sp, #0
 800cc8a:	6078      	str	r0, [r7, #4]
 800cc8c:	6039      	str	r1, [r7, #0]
 800cc8e:	687b      	ldr	r3, [r7, #4]
 800cc90:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800cc94:	2b01      	cmp	r3, #1
 800cc96:	d101      	bne.n	800cc9c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800cc98:	2302      	movs	r3, #2
 800cc9a:	e06d      	b.n	800cd78 <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 800cc9c:	687b      	ldr	r3, [r7, #4]
 800cc9e:	2201      	movs	r2, #1
 800cca0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800cca4:	687b      	ldr	r3, [r7, #4]
 800cca6:	2202      	movs	r2, #2
 800cca8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ccac:	687b      	ldr	r3, [r7, #4]
 800ccae:	681b      	ldr	r3, [r3, #0]
 800ccb0:	685b      	ldr	r3, [r3, #4]
 800ccb2:	60fb      	str	r3, [r7, #12]
 800ccb4:	687b      	ldr	r3, [r7, #4]
 800ccb6:	681b      	ldr	r3, [r3, #0]
 800ccb8:	689b      	ldr	r3, [r3, #8]
 800ccba:	60bb      	str	r3, [r7, #8]
 800ccbc:	687b      	ldr	r3, [r7, #4]
 800ccbe:	681b      	ldr	r3, [r3, #0]
 800ccc0:	4a30      	ldr	r2, [pc, #192]	; (800cd84 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800ccc2:	4293      	cmp	r3, r2
 800ccc4:	d004      	beq.n	800ccd0 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800ccc6:	687b      	ldr	r3, [r7, #4]
 800ccc8:	681b      	ldr	r3, [r3, #0]
 800ccca:	4a2f      	ldr	r2, [pc, #188]	; (800cd88 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800cccc:	4293      	cmp	r3, r2
 800ccce:	d108      	bne.n	800cce2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800ccd0:	68fb      	ldr	r3, [r7, #12]
 800ccd2:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800ccd6:	60fb      	str	r3, [r7, #12]
 800ccd8:	683b      	ldr	r3, [r7, #0]
 800ccda:	685b      	ldr	r3, [r3, #4]
 800ccdc:	68fa      	ldr	r2, [r7, #12]
 800ccde:	4313      	orrs	r3, r2
 800cce0:	60fb      	str	r3, [r7, #12]
 800cce2:	68fb      	ldr	r3, [r7, #12]
 800cce4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800cce8:	60fb      	str	r3, [r7, #12]
 800ccea:	683b      	ldr	r3, [r7, #0]
 800ccec:	681b      	ldr	r3, [r3, #0]
 800ccee:	68fa      	ldr	r2, [r7, #12]
 800ccf0:	4313      	orrs	r3, r2
 800ccf2:	60fb      	str	r3, [r7, #12]
 800ccf4:	687b      	ldr	r3, [r7, #4]
 800ccf6:	681b      	ldr	r3, [r3, #0]
 800ccf8:	68fa      	ldr	r2, [r7, #12]
 800ccfa:	605a      	str	r2, [r3, #4]
 800ccfc:	687b      	ldr	r3, [r7, #4]
 800ccfe:	681b      	ldr	r3, [r3, #0]
 800cd00:	4a20      	ldr	r2, [pc, #128]	; (800cd84 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800cd02:	4293      	cmp	r3, r2
 800cd04:	d022      	beq.n	800cd4c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800cd06:	687b      	ldr	r3, [r7, #4]
 800cd08:	681b      	ldr	r3, [r3, #0]
 800cd0a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800cd0e:	d01d      	beq.n	800cd4c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800cd10:	687b      	ldr	r3, [r7, #4]
 800cd12:	681b      	ldr	r3, [r3, #0]
 800cd14:	4a1d      	ldr	r2, [pc, #116]	; (800cd8c <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 800cd16:	4293      	cmp	r3, r2
 800cd18:	d018      	beq.n	800cd4c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800cd1a:	687b      	ldr	r3, [r7, #4]
 800cd1c:	681b      	ldr	r3, [r3, #0]
 800cd1e:	4a1c      	ldr	r2, [pc, #112]	; (800cd90 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 800cd20:	4293      	cmp	r3, r2
 800cd22:	d013      	beq.n	800cd4c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800cd24:	687b      	ldr	r3, [r7, #4]
 800cd26:	681b      	ldr	r3, [r3, #0]
 800cd28:	4a1a      	ldr	r2, [pc, #104]	; (800cd94 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 800cd2a:	4293      	cmp	r3, r2
 800cd2c:	d00e      	beq.n	800cd4c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800cd2e:	687b      	ldr	r3, [r7, #4]
 800cd30:	681b      	ldr	r3, [r3, #0]
 800cd32:	4a15      	ldr	r2, [pc, #84]	; (800cd88 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800cd34:	4293      	cmp	r3, r2
 800cd36:	d009      	beq.n	800cd4c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800cd38:	687b      	ldr	r3, [r7, #4]
 800cd3a:	681b      	ldr	r3, [r3, #0]
 800cd3c:	4a16      	ldr	r2, [pc, #88]	; (800cd98 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 800cd3e:	4293      	cmp	r3, r2
 800cd40:	d004      	beq.n	800cd4c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800cd42:	687b      	ldr	r3, [r7, #4]
 800cd44:	681b      	ldr	r3, [r3, #0]
 800cd46:	4a15      	ldr	r2, [pc, #84]	; (800cd9c <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 800cd48:	4293      	cmp	r3, r2
 800cd4a:	d10c      	bne.n	800cd66 <HAL_TIMEx_MasterConfigSynchronization+0xe2>
 800cd4c:	68bb      	ldr	r3, [r7, #8]
 800cd4e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cd52:	60bb      	str	r3, [r7, #8]
 800cd54:	683b      	ldr	r3, [r7, #0]
 800cd56:	689b      	ldr	r3, [r3, #8]
 800cd58:	68ba      	ldr	r2, [r7, #8]
 800cd5a:	4313      	orrs	r3, r2
 800cd5c:	60bb      	str	r3, [r7, #8]
 800cd5e:	687b      	ldr	r3, [r7, #4]
 800cd60:	681b      	ldr	r3, [r3, #0]
 800cd62:	68ba      	ldr	r2, [r7, #8]
 800cd64:	609a      	str	r2, [r3, #8]
 800cd66:	687b      	ldr	r3, [r7, #4]
 800cd68:	2201      	movs	r2, #1
 800cd6a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800cd6e:	687b      	ldr	r3, [r7, #4]
 800cd70:	2200      	movs	r2, #0
 800cd72:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800cd76:	2300      	movs	r3, #0
 800cd78:	4618      	mov	r0, r3
 800cd7a:	3714      	adds	r7, #20
 800cd7c:	46bd      	mov	sp, r7
 800cd7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd82:	4770      	bx	lr
 800cd84:	40010000 	.word	0x40010000
 800cd88:	40010400 	.word	0x40010400
 800cd8c:	40000400 	.word	0x40000400
 800cd90:	40000800 	.word	0x40000800
 800cd94:	40000c00 	.word	0x40000c00
 800cd98:	40001800 	.word	0x40001800
 800cd9c:	40014000 	.word	0x40014000

0800cda0 <HAL_TIMEx_CommutCallback>:
 800cda0:	b480      	push	{r7}
 800cda2:	b083      	sub	sp, #12
 800cda4:	af00      	add	r7, sp, #0
 800cda6:	6078      	str	r0, [r7, #4]
 800cda8:	bf00      	nop
 800cdaa:	370c      	adds	r7, #12
 800cdac:	46bd      	mov	sp, r7
 800cdae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cdb2:	4770      	bx	lr

0800cdb4 <HAL_TIMEx_BreakCallback>:
 800cdb4:	b480      	push	{r7}
 800cdb6:	b083      	sub	sp, #12
 800cdb8:	af00      	add	r7, sp, #0
 800cdba:	6078      	str	r0, [r7, #4]
 800cdbc:	bf00      	nop
 800cdbe:	370c      	adds	r7, #12
 800cdc0:	46bd      	mov	sp, r7
 800cdc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cdc6:	4770      	bx	lr

0800cdc8 <HAL_TIMEx_Break2Callback>:
 800cdc8:	b480      	push	{r7}
 800cdca:	b083      	sub	sp, #12
 800cdcc:	af00      	add	r7, sp, #0
 800cdce:	6078      	str	r0, [r7, #4]
 800cdd0:	bf00      	nop
 800cdd2:	370c      	adds	r7, #12
 800cdd4:	46bd      	mov	sp, r7
 800cdd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cdda:	4770      	bx	lr

0800cddc <HAL_UART_Init>:
 800cddc:	b580      	push	{r7, lr}
 800cdde:	b082      	sub	sp, #8
 800cde0:	af00      	add	r7, sp, #0
 800cde2:	6078      	str	r0, [r7, #4]
 800cde4:	687b      	ldr	r3, [r7, #4]
 800cde6:	2b00      	cmp	r3, #0
 800cde8:	d101      	bne.n	800cdee <HAL_UART_Init+0x12>
 800cdea:	2301      	movs	r3, #1
 800cdec:	e042      	b.n	800ce74 <HAL_UART_Init+0x98>
 800cdee:	687b      	ldr	r3, [r7, #4]
 800cdf0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800cdf4:	2b00      	cmp	r3, #0
 800cdf6:	d106      	bne.n	800ce06 <HAL_UART_Init+0x2a>
 800cdf8:	687b      	ldr	r3, [r7, #4]
 800cdfa:	2200      	movs	r2, #0
 800cdfc:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800ce00:	6878      	ldr	r0, [r7, #4]
 800ce02:	f7fa f9d9 	bl	80071b8 <HAL_UART_MspInit>
 800ce06:	687b      	ldr	r3, [r7, #4]
 800ce08:	2224      	movs	r2, #36	; 0x24
 800ce0a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800ce0e:	687b      	ldr	r3, [r7, #4]
 800ce10:	681b      	ldr	r3, [r3, #0]
 800ce12:	681a      	ldr	r2, [r3, #0]
 800ce14:	687b      	ldr	r3, [r7, #4]
 800ce16:	681b      	ldr	r3, [r3, #0]
 800ce18:	f022 0201 	bic.w	r2, r2, #1
 800ce1c:	601a      	str	r2, [r3, #0]
 800ce1e:	6878      	ldr	r0, [r7, #4]
 800ce20:	f000 fccc 	bl	800d7bc <UART_SetConfig>
 800ce24:	4603      	mov	r3, r0
 800ce26:	2b01      	cmp	r3, #1
 800ce28:	d101      	bne.n	800ce2e <HAL_UART_Init+0x52>
 800ce2a:	2301      	movs	r3, #1
 800ce2c:	e022      	b.n	800ce74 <HAL_UART_Init+0x98>
 800ce2e:	687b      	ldr	r3, [r7, #4]
 800ce30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ce32:	2b00      	cmp	r3, #0
 800ce34:	d002      	beq.n	800ce3c <HAL_UART_Init+0x60>
 800ce36:	6878      	ldr	r0, [r7, #4]
 800ce38:	f001 fa28 	bl	800e28c <UART_AdvFeatureConfig>
 800ce3c:	687b      	ldr	r3, [r7, #4]
 800ce3e:	681b      	ldr	r3, [r3, #0]
 800ce40:	685a      	ldr	r2, [r3, #4]
 800ce42:	687b      	ldr	r3, [r7, #4]
 800ce44:	681b      	ldr	r3, [r3, #0]
 800ce46:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800ce4a:	605a      	str	r2, [r3, #4]
 800ce4c:	687b      	ldr	r3, [r7, #4]
 800ce4e:	681b      	ldr	r3, [r3, #0]
 800ce50:	689a      	ldr	r2, [r3, #8]
 800ce52:	687b      	ldr	r3, [r7, #4]
 800ce54:	681b      	ldr	r3, [r3, #0]
 800ce56:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800ce5a:	609a      	str	r2, [r3, #8]
 800ce5c:	687b      	ldr	r3, [r7, #4]
 800ce5e:	681b      	ldr	r3, [r3, #0]
 800ce60:	681a      	ldr	r2, [r3, #0]
 800ce62:	687b      	ldr	r3, [r7, #4]
 800ce64:	681b      	ldr	r3, [r3, #0]
 800ce66:	f042 0201 	orr.w	r2, r2, #1
 800ce6a:	601a      	str	r2, [r3, #0]
 800ce6c:	6878      	ldr	r0, [r7, #4]
 800ce6e:	f001 faaf 	bl	800e3d0 <UART_CheckIdleState>
 800ce72:	4603      	mov	r3, r0
 800ce74:	4618      	mov	r0, r3
 800ce76:	3708      	adds	r7, #8
 800ce78:	46bd      	mov	sp, r7
 800ce7a:	bd80      	pop	{r7, pc}

0800ce7c <HAL_UART_Transmit>:
 800ce7c:	b580      	push	{r7, lr}
 800ce7e:	b08a      	sub	sp, #40	; 0x28
 800ce80:	af02      	add	r7, sp, #8
 800ce82:	60f8      	str	r0, [r7, #12]
 800ce84:	60b9      	str	r1, [r7, #8]
 800ce86:	603b      	str	r3, [r7, #0]
 800ce88:	4613      	mov	r3, r2
 800ce8a:	80fb      	strh	r3, [r7, #6]
 800ce8c:	68fb      	ldr	r3, [r7, #12]
 800ce8e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800ce92:	2b20      	cmp	r3, #32
 800ce94:	f040 8083 	bne.w	800cf9e <HAL_UART_Transmit+0x122>
 800ce98:	68bb      	ldr	r3, [r7, #8]
 800ce9a:	2b00      	cmp	r3, #0
 800ce9c:	d002      	beq.n	800cea4 <HAL_UART_Transmit+0x28>
 800ce9e:	88fb      	ldrh	r3, [r7, #6]
 800cea0:	2b00      	cmp	r3, #0
 800cea2:	d101      	bne.n	800cea8 <HAL_UART_Transmit+0x2c>
 800cea4:	2301      	movs	r3, #1
 800cea6:	e07b      	b.n	800cfa0 <HAL_UART_Transmit+0x124>
 800cea8:	68fb      	ldr	r3, [r7, #12]
 800ceaa:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800ceae:	2b01      	cmp	r3, #1
 800ceb0:	d101      	bne.n	800ceb6 <HAL_UART_Transmit+0x3a>
 800ceb2:	2302      	movs	r3, #2
 800ceb4:	e074      	b.n	800cfa0 <HAL_UART_Transmit+0x124>
 800ceb6:	68fb      	ldr	r3, [r7, #12]
 800ceb8:	2201      	movs	r2, #1
 800ceba:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800cebe:	68fb      	ldr	r3, [r7, #12]
 800cec0:	2200      	movs	r2, #0
 800cec2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800cec6:	68fb      	ldr	r3, [r7, #12]
 800cec8:	2221      	movs	r2, #33	; 0x21
 800ceca:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800cece:	f7fa fb4f 	bl	8007570 <HAL_GetTick>
 800ced2:	6178      	str	r0, [r7, #20]
 800ced4:	68fb      	ldr	r3, [r7, #12]
 800ced6:	88fa      	ldrh	r2, [r7, #6]
 800ced8:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
 800cedc:	68fb      	ldr	r3, [r7, #12]
 800cede:	88fa      	ldrh	r2, [r7, #6]
 800cee0:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800cee4:	68fb      	ldr	r3, [r7, #12]
 800cee6:	689b      	ldr	r3, [r3, #8]
 800cee8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800ceec:	d108      	bne.n	800cf00 <HAL_UART_Transmit+0x84>
 800ceee:	68fb      	ldr	r3, [r7, #12]
 800cef0:	691b      	ldr	r3, [r3, #16]
 800cef2:	2b00      	cmp	r3, #0
 800cef4:	d104      	bne.n	800cf00 <HAL_UART_Transmit+0x84>
 800cef6:	2300      	movs	r3, #0
 800cef8:	61fb      	str	r3, [r7, #28]
 800cefa:	68bb      	ldr	r3, [r7, #8]
 800cefc:	61bb      	str	r3, [r7, #24]
 800cefe:	e003      	b.n	800cf08 <HAL_UART_Transmit+0x8c>
 800cf00:	68bb      	ldr	r3, [r7, #8]
 800cf02:	61fb      	str	r3, [r7, #28]
 800cf04:	2300      	movs	r3, #0
 800cf06:	61bb      	str	r3, [r7, #24]
 800cf08:	68fb      	ldr	r3, [r7, #12]
 800cf0a:	2200      	movs	r2, #0
 800cf0c:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800cf10:	e02c      	b.n	800cf6c <HAL_UART_Transmit+0xf0>
 800cf12:	683b      	ldr	r3, [r7, #0]
 800cf14:	9300      	str	r3, [sp, #0]
 800cf16:	697b      	ldr	r3, [r7, #20]
 800cf18:	2200      	movs	r2, #0
 800cf1a:	2180      	movs	r1, #128	; 0x80
 800cf1c:	68f8      	ldr	r0, [r7, #12]
 800cf1e:	f001 faa2 	bl	800e466 <UART_WaitOnFlagUntilTimeout>
 800cf22:	4603      	mov	r3, r0
 800cf24:	2b00      	cmp	r3, #0
 800cf26:	d001      	beq.n	800cf2c <HAL_UART_Transmit+0xb0>
 800cf28:	2303      	movs	r3, #3
 800cf2a:	e039      	b.n	800cfa0 <HAL_UART_Transmit+0x124>
 800cf2c:	69fb      	ldr	r3, [r7, #28]
 800cf2e:	2b00      	cmp	r3, #0
 800cf30:	d10b      	bne.n	800cf4a <HAL_UART_Transmit+0xce>
 800cf32:	69bb      	ldr	r3, [r7, #24]
 800cf34:	881b      	ldrh	r3, [r3, #0]
 800cf36:	461a      	mov	r2, r3
 800cf38:	68fb      	ldr	r3, [r7, #12]
 800cf3a:	681b      	ldr	r3, [r3, #0]
 800cf3c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800cf40:	629a      	str	r2, [r3, #40]	; 0x28
 800cf42:	69bb      	ldr	r3, [r7, #24]
 800cf44:	3302      	adds	r3, #2
 800cf46:	61bb      	str	r3, [r7, #24]
 800cf48:	e007      	b.n	800cf5a <HAL_UART_Transmit+0xde>
 800cf4a:	69fb      	ldr	r3, [r7, #28]
 800cf4c:	781a      	ldrb	r2, [r3, #0]
 800cf4e:	68fb      	ldr	r3, [r7, #12]
 800cf50:	681b      	ldr	r3, [r3, #0]
 800cf52:	629a      	str	r2, [r3, #40]	; 0x28
 800cf54:	69fb      	ldr	r3, [r7, #28]
 800cf56:	3301      	adds	r3, #1
 800cf58:	61fb      	str	r3, [r7, #28]
 800cf5a:	68fb      	ldr	r3, [r7, #12]
 800cf5c:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800cf60:	b29b      	uxth	r3, r3
 800cf62:	3b01      	subs	r3, #1
 800cf64:	b29a      	uxth	r2, r3
 800cf66:	68fb      	ldr	r3, [r7, #12]
 800cf68:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800cf6c:	68fb      	ldr	r3, [r7, #12]
 800cf6e:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800cf72:	b29b      	uxth	r3, r3
 800cf74:	2b00      	cmp	r3, #0
 800cf76:	d1cc      	bne.n	800cf12 <HAL_UART_Transmit+0x96>
 800cf78:	683b      	ldr	r3, [r7, #0]
 800cf7a:	9300      	str	r3, [sp, #0]
 800cf7c:	697b      	ldr	r3, [r7, #20]
 800cf7e:	2200      	movs	r2, #0
 800cf80:	2140      	movs	r1, #64	; 0x40
 800cf82:	68f8      	ldr	r0, [r7, #12]
 800cf84:	f001 fa6f 	bl	800e466 <UART_WaitOnFlagUntilTimeout>
 800cf88:	4603      	mov	r3, r0
 800cf8a:	2b00      	cmp	r3, #0
 800cf8c:	d001      	beq.n	800cf92 <HAL_UART_Transmit+0x116>
 800cf8e:	2303      	movs	r3, #3
 800cf90:	e006      	b.n	800cfa0 <HAL_UART_Transmit+0x124>
 800cf92:	68fb      	ldr	r3, [r7, #12]
 800cf94:	2220      	movs	r2, #32
 800cf96:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800cf9a:	2300      	movs	r3, #0
 800cf9c:	e000      	b.n	800cfa0 <HAL_UART_Transmit+0x124>
 800cf9e:	2302      	movs	r3, #2
 800cfa0:	4618      	mov	r0, r3
 800cfa2:	3720      	adds	r7, #32
 800cfa4:	46bd      	mov	sp, r7
 800cfa6:	bd80      	pop	{r7, pc}

0800cfa8 <HAL_UART_Receive_IT>:
 800cfa8:	b580      	push	{r7, lr}
 800cfaa:	b08a      	sub	sp, #40	; 0x28
 800cfac:	af00      	add	r7, sp, #0
 800cfae:	60f8      	str	r0, [r7, #12]
 800cfb0:	60b9      	str	r1, [r7, #8]
 800cfb2:	4613      	mov	r3, r2
 800cfb4:	80fb      	strh	r3, [r7, #6]
 800cfb6:	68fb      	ldr	r3, [r7, #12]
 800cfb8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800cfbc:	2b20      	cmp	r3, #32
 800cfbe:	d142      	bne.n	800d046 <HAL_UART_Receive_IT+0x9e>
 800cfc0:	68bb      	ldr	r3, [r7, #8]
 800cfc2:	2b00      	cmp	r3, #0
 800cfc4:	d002      	beq.n	800cfcc <HAL_UART_Receive_IT+0x24>
 800cfc6:	88fb      	ldrh	r3, [r7, #6]
 800cfc8:	2b00      	cmp	r3, #0
 800cfca:	d101      	bne.n	800cfd0 <HAL_UART_Receive_IT+0x28>
 800cfcc:	2301      	movs	r3, #1
 800cfce:	e03b      	b.n	800d048 <HAL_UART_Receive_IT+0xa0>
 800cfd0:	68fb      	ldr	r3, [r7, #12]
 800cfd2:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800cfd6:	2b01      	cmp	r3, #1
 800cfd8:	d101      	bne.n	800cfde <HAL_UART_Receive_IT+0x36>
 800cfda:	2302      	movs	r3, #2
 800cfdc:	e034      	b.n	800d048 <HAL_UART_Receive_IT+0xa0>
 800cfde:	68fb      	ldr	r3, [r7, #12]
 800cfe0:	2201      	movs	r2, #1
 800cfe2:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800cfe6:	68fb      	ldr	r3, [r7, #12]
 800cfe8:	2200      	movs	r2, #0
 800cfea:	66da      	str	r2, [r3, #108]	; 0x6c
 800cfec:	68fb      	ldr	r3, [r7, #12]
 800cfee:	681b      	ldr	r3, [r3, #0]
 800cff0:	4a17      	ldr	r2, [pc, #92]	; (800d050 <HAL_UART_Receive_IT+0xa8>)
 800cff2:	4293      	cmp	r3, r2
 800cff4:	d01f      	beq.n	800d036 <HAL_UART_Receive_IT+0x8e>
 800cff6:	68fb      	ldr	r3, [r7, #12]
 800cff8:	681b      	ldr	r3, [r3, #0]
 800cffa:	685b      	ldr	r3, [r3, #4]
 800cffc:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800d000:	2b00      	cmp	r3, #0
 800d002:	d018      	beq.n	800d036 <HAL_UART_Receive_IT+0x8e>
 800d004:	68fb      	ldr	r3, [r7, #12]
 800d006:	681b      	ldr	r3, [r3, #0]
 800d008:	617b      	str	r3, [r7, #20]
 800d00a:	697b      	ldr	r3, [r7, #20]
 800d00c:	e853 3f00 	ldrex	r3, [r3]
 800d010:	613b      	str	r3, [r7, #16]
 800d012:	693b      	ldr	r3, [r7, #16]
 800d014:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800d018:	627b      	str	r3, [r7, #36]	; 0x24
 800d01a:	68fb      	ldr	r3, [r7, #12]
 800d01c:	681b      	ldr	r3, [r3, #0]
 800d01e:	461a      	mov	r2, r3
 800d020:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d022:	623b      	str	r3, [r7, #32]
 800d024:	61fa      	str	r2, [r7, #28]
 800d026:	69f9      	ldr	r1, [r7, #28]
 800d028:	6a3a      	ldr	r2, [r7, #32]
 800d02a:	e841 2300 	strex	r3, r2, [r1]
 800d02e:	61bb      	str	r3, [r7, #24]
 800d030:	69bb      	ldr	r3, [r7, #24]
 800d032:	2b00      	cmp	r3, #0
 800d034:	d1e6      	bne.n	800d004 <HAL_UART_Receive_IT+0x5c>
 800d036:	88fb      	ldrh	r3, [r7, #6]
 800d038:	461a      	mov	r2, r3
 800d03a:	68b9      	ldr	r1, [r7, #8]
 800d03c:	68f8      	ldr	r0, [r7, #12]
 800d03e:	f001 fadb 	bl	800e5f8 <UART_Start_Receive_IT>
 800d042:	4603      	mov	r3, r0
 800d044:	e000      	b.n	800d048 <HAL_UART_Receive_IT+0xa0>
 800d046:	2302      	movs	r3, #2
 800d048:	4618      	mov	r0, r3
 800d04a:	3728      	adds	r7, #40	; 0x28
 800d04c:	46bd      	mov	sp, r7
 800d04e:	bd80      	pop	{r7, pc}
 800d050:	58000c00 	.word	0x58000c00

0800d054 <HAL_UART_IRQHandler>:
 800d054:	b580      	push	{r7, lr}
 800d056:	b0ba      	sub	sp, #232	; 0xe8
 800d058:	af00      	add	r7, sp, #0
 800d05a:	6078      	str	r0, [r7, #4]
 800d05c:	687b      	ldr	r3, [r7, #4]
 800d05e:	681b      	ldr	r3, [r3, #0]
 800d060:	69db      	ldr	r3, [r3, #28]
 800d062:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800d066:	687b      	ldr	r3, [r7, #4]
 800d068:	681b      	ldr	r3, [r3, #0]
 800d06a:	681b      	ldr	r3, [r3, #0]
 800d06c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800d070:	687b      	ldr	r3, [r7, #4]
 800d072:	681b      	ldr	r3, [r3, #0]
 800d074:	689b      	ldr	r3, [r3, #8]
 800d076:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800d07a:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 800d07e:	f640 030f 	movw	r3, #2063	; 0x80f
 800d082:	4013      	ands	r3, r2
 800d084:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800d088:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800d08c:	2b00      	cmp	r3, #0
 800d08e:	d11b      	bne.n	800d0c8 <HAL_UART_IRQHandler+0x74>
 800d090:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800d094:	f003 0320 	and.w	r3, r3, #32
 800d098:	2b00      	cmp	r3, #0
 800d09a:	d015      	beq.n	800d0c8 <HAL_UART_IRQHandler+0x74>
 800d09c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800d0a0:	f003 0320 	and.w	r3, r3, #32
 800d0a4:	2b00      	cmp	r3, #0
 800d0a6:	d105      	bne.n	800d0b4 <HAL_UART_IRQHandler+0x60>
 800d0a8:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800d0ac:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800d0b0:	2b00      	cmp	r3, #0
 800d0b2:	d009      	beq.n	800d0c8 <HAL_UART_IRQHandler+0x74>
 800d0b4:	687b      	ldr	r3, [r7, #4]
 800d0b6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800d0b8:	2b00      	cmp	r3, #0
 800d0ba:	f000 835a 	beq.w	800d772 <HAL_UART_IRQHandler+0x71e>
 800d0be:	687b      	ldr	r3, [r7, #4]
 800d0c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800d0c2:	6878      	ldr	r0, [r7, #4]
 800d0c4:	4798      	blx	r3
 800d0c6:	e354      	b.n	800d772 <HAL_UART_IRQHandler+0x71e>
 800d0c8:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800d0cc:	2b00      	cmp	r3, #0
 800d0ce:	f000 811f 	beq.w	800d310 <HAL_UART_IRQHandler+0x2bc>
 800d0d2:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800d0d6:	4b8b      	ldr	r3, [pc, #556]	; (800d304 <HAL_UART_IRQHandler+0x2b0>)
 800d0d8:	4013      	ands	r3, r2
 800d0da:	2b00      	cmp	r3, #0
 800d0dc:	d106      	bne.n	800d0ec <HAL_UART_IRQHandler+0x98>
 800d0de:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 800d0e2:	4b89      	ldr	r3, [pc, #548]	; (800d308 <HAL_UART_IRQHandler+0x2b4>)
 800d0e4:	4013      	ands	r3, r2
 800d0e6:	2b00      	cmp	r3, #0
 800d0e8:	f000 8112 	beq.w	800d310 <HAL_UART_IRQHandler+0x2bc>
 800d0ec:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800d0f0:	f003 0301 	and.w	r3, r3, #1
 800d0f4:	2b00      	cmp	r3, #0
 800d0f6:	d011      	beq.n	800d11c <HAL_UART_IRQHandler+0xc8>
 800d0f8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800d0fc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d100:	2b00      	cmp	r3, #0
 800d102:	d00b      	beq.n	800d11c <HAL_UART_IRQHandler+0xc8>
 800d104:	687b      	ldr	r3, [r7, #4]
 800d106:	681b      	ldr	r3, [r3, #0]
 800d108:	2201      	movs	r2, #1
 800d10a:	621a      	str	r2, [r3, #32]
 800d10c:	687b      	ldr	r3, [r7, #4]
 800d10e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d112:	f043 0201 	orr.w	r2, r3, #1
 800d116:	687b      	ldr	r3, [r7, #4]
 800d118:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800d11c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800d120:	f003 0302 	and.w	r3, r3, #2
 800d124:	2b00      	cmp	r3, #0
 800d126:	d011      	beq.n	800d14c <HAL_UART_IRQHandler+0xf8>
 800d128:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800d12c:	f003 0301 	and.w	r3, r3, #1
 800d130:	2b00      	cmp	r3, #0
 800d132:	d00b      	beq.n	800d14c <HAL_UART_IRQHandler+0xf8>
 800d134:	687b      	ldr	r3, [r7, #4]
 800d136:	681b      	ldr	r3, [r3, #0]
 800d138:	2202      	movs	r2, #2
 800d13a:	621a      	str	r2, [r3, #32]
 800d13c:	687b      	ldr	r3, [r7, #4]
 800d13e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d142:	f043 0204 	orr.w	r2, r3, #4
 800d146:	687b      	ldr	r3, [r7, #4]
 800d148:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800d14c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800d150:	f003 0304 	and.w	r3, r3, #4
 800d154:	2b00      	cmp	r3, #0
 800d156:	d011      	beq.n	800d17c <HAL_UART_IRQHandler+0x128>
 800d158:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800d15c:	f003 0301 	and.w	r3, r3, #1
 800d160:	2b00      	cmp	r3, #0
 800d162:	d00b      	beq.n	800d17c <HAL_UART_IRQHandler+0x128>
 800d164:	687b      	ldr	r3, [r7, #4]
 800d166:	681b      	ldr	r3, [r3, #0]
 800d168:	2204      	movs	r2, #4
 800d16a:	621a      	str	r2, [r3, #32]
 800d16c:	687b      	ldr	r3, [r7, #4]
 800d16e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d172:	f043 0202 	orr.w	r2, r3, #2
 800d176:	687b      	ldr	r3, [r7, #4]
 800d178:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800d17c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800d180:	f003 0308 	and.w	r3, r3, #8
 800d184:	2b00      	cmp	r3, #0
 800d186:	d017      	beq.n	800d1b8 <HAL_UART_IRQHandler+0x164>
 800d188:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800d18c:	f003 0320 	and.w	r3, r3, #32
 800d190:	2b00      	cmp	r3, #0
 800d192:	d105      	bne.n	800d1a0 <HAL_UART_IRQHandler+0x14c>
 800d194:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800d198:	4b5a      	ldr	r3, [pc, #360]	; (800d304 <HAL_UART_IRQHandler+0x2b0>)
 800d19a:	4013      	ands	r3, r2
 800d19c:	2b00      	cmp	r3, #0
 800d19e:	d00b      	beq.n	800d1b8 <HAL_UART_IRQHandler+0x164>
 800d1a0:	687b      	ldr	r3, [r7, #4]
 800d1a2:	681b      	ldr	r3, [r3, #0]
 800d1a4:	2208      	movs	r2, #8
 800d1a6:	621a      	str	r2, [r3, #32]
 800d1a8:	687b      	ldr	r3, [r7, #4]
 800d1aa:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d1ae:	f043 0208 	orr.w	r2, r3, #8
 800d1b2:	687b      	ldr	r3, [r7, #4]
 800d1b4:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800d1b8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800d1bc:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800d1c0:	2b00      	cmp	r3, #0
 800d1c2:	d012      	beq.n	800d1ea <HAL_UART_IRQHandler+0x196>
 800d1c4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800d1c8:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800d1cc:	2b00      	cmp	r3, #0
 800d1ce:	d00c      	beq.n	800d1ea <HAL_UART_IRQHandler+0x196>
 800d1d0:	687b      	ldr	r3, [r7, #4]
 800d1d2:	681b      	ldr	r3, [r3, #0]
 800d1d4:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800d1d8:	621a      	str	r2, [r3, #32]
 800d1da:	687b      	ldr	r3, [r7, #4]
 800d1dc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d1e0:	f043 0220 	orr.w	r2, r3, #32
 800d1e4:	687b      	ldr	r3, [r7, #4]
 800d1e6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800d1ea:	687b      	ldr	r3, [r7, #4]
 800d1ec:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d1f0:	2b00      	cmp	r3, #0
 800d1f2:	f000 82c0 	beq.w	800d776 <HAL_UART_IRQHandler+0x722>
 800d1f6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800d1fa:	f003 0320 	and.w	r3, r3, #32
 800d1fe:	2b00      	cmp	r3, #0
 800d200:	d013      	beq.n	800d22a <HAL_UART_IRQHandler+0x1d6>
 800d202:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800d206:	f003 0320 	and.w	r3, r3, #32
 800d20a:	2b00      	cmp	r3, #0
 800d20c:	d105      	bne.n	800d21a <HAL_UART_IRQHandler+0x1c6>
 800d20e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800d212:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800d216:	2b00      	cmp	r3, #0
 800d218:	d007      	beq.n	800d22a <HAL_UART_IRQHandler+0x1d6>
 800d21a:	687b      	ldr	r3, [r7, #4]
 800d21c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800d21e:	2b00      	cmp	r3, #0
 800d220:	d003      	beq.n	800d22a <HAL_UART_IRQHandler+0x1d6>
 800d222:	687b      	ldr	r3, [r7, #4]
 800d224:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800d226:	6878      	ldr	r0, [r7, #4]
 800d228:	4798      	blx	r3
 800d22a:	687b      	ldr	r3, [r7, #4]
 800d22c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d230:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800d234:	687b      	ldr	r3, [r7, #4]
 800d236:	681b      	ldr	r3, [r3, #0]
 800d238:	689b      	ldr	r3, [r3, #8]
 800d23a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800d23e:	2b40      	cmp	r3, #64	; 0x40
 800d240:	d005      	beq.n	800d24e <HAL_UART_IRQHandler+0x1fa>
 800d242:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800d246:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800d24a:	2b00      	cmp	r3, #0
 800d24c:	d04f      	beq.n	800d2ee <HAL_UART_IRQHandler+0x29a>
 800d24e:	6878      	ldr	r0, [r7, #4]
 800d250:	f001 fafc 	bl	800e84c <UART_EndRxTransfer>
 800d254:	687b      	ldr	r3, [r7, #4]
 800d256:	681b      	ldr	r3, [r3, #0]
 800d258:	689b      	ldr	r3, [r3, #8]
 800d25a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800d25e:	2b40      	cmp	r3, #64	; 0x40
 800d260:	d141      	bne.n	800d2e6 <HAL_UART_IRQHandler+0x292>
 800d262:	687b      	ldr	r3, [r7, #4]
 800d264:	681b      	ldr	r3, [r3, #0]
 800d266:	3308      	adds	r3, #8
 800d268:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800d26c:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800d270:	e853 3f00 	ldrex	r3, [r3]
 800d274:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800d278:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800d27c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800d280:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800d284:	687b      	ldr	r3, [r7, #4]
 800d286:	681b      	ldr	r3, [r3, #0]
 800d288:	3308      	adds	r3, #8
 800d28a:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800d28e:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800d292:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800d296:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800d29a:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800d29e:	e841 2300 	strex	r3, r2, [r1]
 800d2a2:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800d2a6:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800d2aa:	2b00      	cmp	r3, #0
 800d2ac:	d1d9      	bne.n	800d262 <HAL_UART_IRQHandler+0x20e>
 800d2ae:	687b      	ldr	r3, [r7, #4]
 800d2b0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d2b2:	2b00      	cmp	r3, #0
 800d2b4:	d013      	beq.n	800d2de <HAL_UART_IRQHandler+0x28a>
 800d2b6:	687b      	ldr	r3, [r7, #4]
 800d2b8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d2ba:	4a14      	ldr	r2, [pc, #80]	; (800d30c <HAL_UART_IRQHandler+0x2b8>)
 800d2bc:	651a      	str	r2, [r3, #80]	; 0x50
 800d2be:	687b      	ldr	r3, [r7, #4]
 800d2c0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d2c2:	4618      	mov	r0, r3
 800d2c4:	f7fa fdf0 	bl	8007ea8 <HAL_DMA_Abort_IT>
 800d2c8:	4603      	mov	r3, r0
 800d2ca:	2b00      	cmp	r3, #0
 800d2cc:	d017      	beq.n	800d2fe <HAL_UART_IRQHandler+0x2aa>
 800d2ce:	687b      	ldr	r3, [r7, #4]
 800d2d0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d2d2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d2d4:	687a      	ldr	r2, [r7, #4]
 800d2d6:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800d2d8:	4610      	mov	r0, r2
 800d2da:	4798      	blx	r3
 800d2dc:	e00f      	b.n	800d2fe <HAL_UART_IRQHandler+0x2aa>
 800d2de:	6878      	ldr	r0, [r7, #4]
 800d2e0:	f000 fa56 	bl	800d790 <HAL_UART_ErrorCallback>
 800d2e4:	e00b      	b.n	800d2fe <HAL_UART_IRQHandler+0x2aa>
 800d2e6:	6878      	ldr	r0, [r7, #4]
 800d2e8:	f000 fa52 	bl	800d790 <HAL_UART_ErrorCallback>
 800d2ec:	e007      	b.n	800d2fe <HAL_UART_IRQHandler+0x2aa>
 800d2ee:	6878      	ldr	r0, [r7, #4]
 800d2f0:	f000 fa4e 	bl	800d790 <HAL_UART_ErrorCallback>
 800d2f4:	687b      	ldr	r3, [r7, #4]
 800d2f6:	2200      	movs	r2, #0
 800d2f8:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800d2fc:	e23b      	b.n	800d776 <HAL_UART_IRQHandler+0x722>
 800d2fe:	bf00      	nop
 800d300:	e239      	b.n	800d776 <HAL_UART_IRQHandler+0x722>
 800d302:	bf00      	nop
 800d304:	10000001 	.word	0x10000001
 800d308:	04000120 	.word	0x04000120
 800d30c:	0800e919 	.word	0x0800e919
 800d310:	687b      	ldr	r3, [r7, #4]
 800d312:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d314:	2b01      	cmp	r3, #1
 800d316:	f040 81ce 	bne.w	800d6b6 <HAL_UART_IRQHandler+0x662>
 800d31a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800d31e:	f003 0310 	and.w	r3, r3, #16
 800d322:	2b00      	cmp	r3, #0
 800d324:	f000 81c7 	beq.w	800d6b6 <HAL_UART_IRQHandler+0x662>
 800d328:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800d32c:	f003 0310 	and.w	r3, r3, #16
 800d330:	2b00      	cmp	r3, #0
 800d332:	f000 81c0 	beq.w	800d6b6 <HAL_UART_IRQHandler+0x662>
 800d336:	687b      	ldr	r3, [r7, #4]
 800d338:	681b      	ldr	r3, [r3, #0]
 800d33a:	2210      	movs	r2, #16
 800d33c:	621a      	str	r2, [r3, #32]
 800d33e:	687b      	ldr	r3, [r7, #4]
 800d340:	681b      	ldr	r3, [r3, #0]
 800d342:	689b      	ldr	r3, [r3, #8]
 800d344:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800d348:	2b40      	cmp	r3, #64	; 0x40
 800d34a:	f040 813b 	bne.w	800d5c4 <HAL_UART_IRQHandler+0x570>
 800d34e:	687b      	ldr	r3, [r7, #4]
 800d350:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d352:	681b      	ldr	r3, [r3, #0]
 800d354:	4a8b      	ldr	r2, [pc, #556]	; (800d584 <HAL_UART_IRQHandler+0x530>)
 800d356:	4293      	cmp	r3, r2
 800d358:	d059      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d35a:	687b      	ldr	r3, [r7, #4]
 800d35c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d35e:	681b      	ldr	r3, [r3, #0]
 800d360:	4a89      	ldr	r2, [pc, #548]	; (800d588 <HAL_UART_IRQHandler+0x534>)
 800d362:	4293      	cmp	r3, r2
 800d364:	d053      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d366:	687b      	ldr	r3, [r7, #4]
 800d368:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d36a:	681b      	ldr	r3, [r3, #0]
 800d36c:	4a87      	ldr	r2, [pc, #540]	; (800d58c <HAL_UART_IRQHandler+0x538>)
 800d36e:	4293      	cmp	r3, r2
 800d370:	d04d      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d372:	687b      	ldr	r3, [r7, #4]
 800d374:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d376:	681b      	ldr	r3, [r3, #0]
 800d378:	4a85      	ldr	r2, [pc, #532]	; (800d590 <HAL_UART_IRQHandler+0x53c>)
 800d37a:	4293      	cmp	r3, r2
 800d37c:	d047      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d37e:	687b      	ldr	r3, [r7, #4]
 800d380:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d382:	681b      	ldr	r3, [r3, #0]
 800d384:	4a83      	ldr	r2, [pc, #524]	; (800d594 <HAL_UART_IRQHandler+0x540>)
 800d386:	4293      	cmp	r3, r2
 800d388:	d041      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d38a:	687b      	ldr	r3, [r7, #4]
 800d38c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d38e:	681b      	ldr	r3, [r3, #0]
 800d390:	4a81      	ldr	r2, [pc, #516]	; (800d598 <HAL_UART_IRQHandler+0x544>)
 800d392:	4293      	cmp	r3, r2
 800d394:	d03b      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d396:	687b      	ldr	r3, [r7, #4]
 800d398:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d39a:	681b      	ldr	r3, [r3, #0]
 800d39c:	4a7f      	ldr	r2, [pc, #508]	; (800d59c <HAL_UART_IRQHandler+0x548>)
 800d39e:	4293      	cmp	r3, r2
 800d3a0:	d035      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d3a2:	687b      	ldr	r3, [r7, #4]
 800d3a4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d3a6:	681b      	ldr	r3, [r3, #0]
 800d3a8:	4a7d      	ldr	r2, [pc, #500]	; (800d5a0 <HAL_UART_IRQHandler+0x54c>)
 800d3aa:	4293      	cmp	r3, r2
 800d3ac:	d02f      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d3ae:	687b      	ldr	r3, [r7, #4]
 800d3b0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d3b2:	681b      	ldr	r3, [r3, #0]
 800d3b4:	4a7b      	ldr	r2, [pc, #492]	; (800d5a4 <HAL_UART_IRQHandler+0x550>)
 800d3b6:	4293      	cmp	r3, r2
 800d3b8:	d029      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d3ba:	687b      	ldr	r3, [r7, #4]
 800d3bc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d3be:	681b      	ldr	r3, [r3, #0]
 800d3c0:	4a79      	ldr	r2, [pc, #484]	; (800d5a8 <HAL_UART_IRQHandler+0x554>)
 800d3c2:	4293      	cmp	r3, r2
 800d3c4:	d023      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d3c6:	687b      	ldr	r3, [r7, #4]
 800d3c8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d3ca:	681b      	ldr	r3, [r3, #0]
 800d3cc:	4a77      	ldr	r2, [pc, #476]	; (800d5ac <HAL_UART_IRQHandler+0x558>)
 800d3ce:	4293      	cmp	r3, r2
 800d3d0:	d01d      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d3d2:	687b      	ldr	r3, [r7, #4]
 800d3d4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d3d6:	681b      	ldr	r3, [r3, #0]
 800d3d8:	4a75      	ldr	r2, [pc, #468]	; (800d5b0 <HAL_UART_IRQHandler+0x55c>)
 800d3da:	4293      	cmp	r3, r2
 800d3dc:	d017      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d3de:	687b      	ldr	r3, [r7, #4]
 800d3e0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d3e2:	681b      	ldr	r3, [r3, #0]
 800d3e4:	4a73      	ldr	r2, [pc, #460]	; (800d5b4 <HAL_UART_IRQHandler+0x560>)
 800d3e6:	4293      	cmp	r3, r2
 800d3e8:	d011      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d3ea:	687b      	ldr	r3, [r7, #4]
 800d3ec:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d3ee:	681b      	ldr	r3, [r3, #0]
 800d3f0:	4a71      	ldr	r2, [pc, #452]	; (800d5b8 <HAL_UART_IRQHandler+0x564>)
 800d3f2:	4293      	cmp	r3, r2
 800d3f4:	d00b      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d3f6:	687b      	ldr	r3, [r7, #4]
 800d3f8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d3fa:	681b      	ldr	r3, [r3, #0]
 800d3fc:	4a6f      	ldr	r2, [pc, #444]	; (800d5bc <HAL_UART_IRQHandler+0x568>)
 800d3fe:	4293      	cmp	r3, r2
 800d400:	d005      	beq.n	800d40e <HAL_UART_IRQHandler+0x3ba>
 800d402:	687b      	ldr	r3, [r7, #4]
 800d404:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d406:	681b      	ldr	r3, [r3, #0]
 800d408:	4a6d      	ldr	r2, [pc, #436]	; (800d5c0 <HAL_UART_IRQHandler+0x56c>)
 800d40a:	4293      	cmp	r3, r2
 800d40c:	d105      	bne.n	800d41a <HAL_UART_IRQHandler+0x3c6>
 800d40e:	687b      	ldr	r3, [r7, #4]
 800d410:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d412:	681b      	ldr	r3, [r3, #0]
 800d414:	685b      	ldr	r3, [r3, #4]
 800d416:	b29b      	uxth	r3, r3
 800d418:	e004      	b.n	800d424 <HAL_UART_IRQHandler+0x3d0>
 800d41a:	687b      	ldr	r3, [r7, #4]
 800d41c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d41e:	681b      	ldr	r3, [r3, #0]
 800d420:	685b      	ldr	r3, [r3, #4]
 800d422:	b29b      	uxth	r3, r3
 800d424:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800d428:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800d42c:	2b00      	cmp	r3, #0
 800d42e:	f000 81a4 	beq.w	800d77a <HAL_UART_IRQHandler+0x726>
 800d432:	687b      	ldr	r3, [r7, #4]
 800d434:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800d438:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800d43c:	429a      	cmp	r2, r3
 800d43e:	f080 819c 	bcs.w	800d77a <HAL_UART_IRQHandler+0x726>
 800d442:	687b      	ldr	r3, [r7, #4]
 800d444:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800d448:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800d44c:	687b      	ldr	r3, [r7, #4]
 800d44e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d450:	69db      	ldr	r3, [r3, #28]
 800d452:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800d456:	f000 8086 	beq.w	800d566 <HAL_UART_IRQHandler+0x512>
 800d45a:	687b      	ldr	r3, [r7, #4]
 800d45c:	681b      	ldr	r3, [r3, #0]
 800d45e:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800d462:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800d466:	e853 3f00 	ldrex	r3, [r3]
 800d46a:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800d46e:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800d472:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800d476:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800d47a:	687b      	ldr	r3, [r7, #4]
 800d47c:	681b      	ldr	r3, [r3, #0]
 800d47e:	461a      	mov	r2, r3
 800d480:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800d484:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800d488:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 800d48c:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800d490:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800d494:	e841 2300 	strex	r3, r2, [r1]
 800d498:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800d49c:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800d4a0:	2b00      	cmp	r3, #0
 800d4a2:	d1da      	bne.n	800d45a <HAL_UART_IRQHandler+0x406>
 800d4a4:	687b      	ldr	r3, [r7, #4]
 800d4a6:	681b      	ldr	r3, [r3, #0]
 800d4a8:	3308      	adds	r3, #8
 800d4aa:	677b      	str	r3, [r7, #116]	; 0x74
 800d4ac:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800d4ae:	e853 3f00 	ldrex	r3, [r3]
 800d4b2:	673b      	str	r3, [r7, #112]	; 0x70
 800d4b4:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800d4b6:	f023 0301 	bic.w	r3, r3, #1
 800d4ba:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800d4be:	687b      	ldr	r3, [r7, #4]
 800d4c0:	681b      	ldr	r3, [r3, #0]
 800d4c2:	3308      	adds	r3, #8
 800d4c4:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800d4c8:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800d4cc:	67fb      	str	r3, [r7, #124]	; 0x7c
 800d4ce:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800d4d0:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800d4d4:	e841 2300 	strex	r3, r2, [r1]
 800d4d8:	67bb      	str	r3, [r7, #120]	; 0x78
 800d4da:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800d4dc:	2b00      	cmp	r3, #0
 800d4de:	d1e1      	bne.n	800d4a4 <HAL_UART_IRQHandler+0x450>
 800d4e0:	687b      	ldr	r3, [r7, #4]
 800d4e2:	681b      	ldr	r3, [r3, #0]
 800d4e4:	3308      	adds	r3, #8
 800d4e6:	663b      	str	r3, [r7, #96]	; 0x60
 800d4e8:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800d4ea:	e853 3f00 	ldrex	r3, [r3]
 800d4ee:	65fb      	str	r3, [r7, #92]	; 0x5c
 800d4f0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800d4f2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800d4f6:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800d4fa:	687b      	ldr	r3, [r7, #4]
 800d4fc:	681b      	ldr	r3, [r3, #0]
 800d4fe:	3308      	adds	r3, #8
 800d500:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800d504:	66fa      	str	r2, [r7, #108]	; 0x6c
 800d506:	66bb      	str	r3, [r7, #104]	; 0x68
 800d508:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800d50a:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800d50c:	e841 2300 	strex	r3, r2, [r1]
 800d510:	667b      	str	r3, [r7, #100]	; 0x64
 800d512:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800d514:	2b00      	cmp	r3, #0
 800d516:	d1e3      	bne.n	800d4e0 <HAL_UART_IRQHandler+0x48c>
 800d518:	687b      	ldr	r3, [r7, #4]
 800d51a:	2220      	movs	r2, #32
 800d51c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800d520:	687b      	ldr	r3, [r7, #4]
 800d522:	2200      	movs	r2, #0
 800d524:	66da      	str	r2, [r3, #108]	; 0x6c
 800d526:	687b      	ldr	r3, [r7, #4]
 800d528:	681b      	ldr	r3, [r3, #0]
 800d52a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800d52c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800d52e:	e853 3f00 	ldrex	r3, [r3]
 800d532:	64bb      	str	r3, [r7, #72]	; 0x48
 800d534:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800d536:	f023 0310 	bic.w	r3, r3, #16
 800d53a:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800d53e:	687b      	ldr	r3, [r7, #4]
 800d540:	681b      	ldr	r3, [r3, #0]
 800d542:	461a      	mov	r2, r3
 800d544:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800d548:	65bb      	str	r3, [r7, #88]	; 0x58
 800d54a:	657a      	str	r2, [r7, #84]	; 0x54
 800d54c:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800d54e:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800d550:	e841 2300 	strex	r3, r2, [r1]
 800d554:	653b      	str	r3, [r7, #80]	; 0x50
 800d556:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800d558:	2b00      	cmp	r3, #0
 800d55a:	d1e4      	bne.n	800d526 <HAL_UART_IRQHandler+0x4d2>
 800d55c:	687b      	ldr	r3, [r7, #4]
 800d55e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d560:	4618      	mov	r0, r3
 800d562:	f7fa f983 	bl	800786c <HAL_DMA_Abort>
 800d566:	687b      	ldr	r3, [r7, #4]
 800d568:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 800d56c:	687b      	ldr	r3, [r7, #4]
 800d56e:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800d572:	b29b      	uxth	r3, r3
 800d574:	1ad3      	subs	r3, r2, r3
 800d576:	b29b      	uxth	r3, r3
 800d578:	4619      	mov	r1, r3
 800d57a:	6878      	ldr	r0, [r7, #4]
 800d57c:	f000 f912 	bl	800d7a4 <HAL_UARTEx_RxEventCallback>
 800d580:	e0fb      	b.n	800d77a <HAL_UART_IRQHandler+0x726>
 800d582:	bf00      	nop
 800d584:	40020010 	.word	0x40020010
 800d588:	40020028 	.word	0x40020028
 800d58c:	40020040 	.word	0x40020040
 800d590:	40020058 	.word	0x40020058
 800d594:	40020070 	.word	0x40020070
 800d598:	40020088 	.word	0x40020088
 800d59c:	400200a0 	.word	0x400200a0
 800d5a0:	400200b8 	.word	0x400200b8
 800d5a4:	40020410 	.word	0x40020410
 800d5a8:	40020428 	.word	0x40020428
 800d5ac:	40020440 	.word	0x40020440
 800d5b0:	40020458 	.word	0x40020458
 800d5b4:	40020470 	.word	0x40020470
 800d5b8:	40020488 	.word	0x40020488
 800d5bc:	400204a0 	.word	0x400204a0
 800d5c0:	400204b8 	.word	0x400204b8
 800d5c4:	687b      	ldr	r3, [r7, #4]
 800d5c6:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 800d5ca:	687b      	ldr	r3, [r7, #4]
 800d5cc:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800d5d0:	b29b      	uxth	r3, r3
 800d5d2:	1ad3      	subs	r3, r2, r3
 800d5d4:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800d5d8:	687b      	ldr	r3, [r7, #4]
 800d5da:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800d5de:	b29b      	uxth	r3, r3
 800d5e0:	2b00      	cmp	r3, #0
 800d5e2:	f000 80cc 	beq.w	800d77e <HAL_UART_IRQHandler+0x72a>
 800d5e6:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800d5ea:	2b00      	cmp	r3, #0
 800d5ec:	f000 80c7 	beq.w	800d77e <HAL_UART_IRQHandler+0x72a>
 800d5f0:	687b      	ldr	r3, [r7, #4]
 800d5f2:	681b      	ldr	r3, [r3, #0]
 800d5f4:	63bb      	str	r3, [r7, #56]	; 0x38
 800d5f6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d5f8:	e853 3f00 	ldrex	r3, [r3]
 800d5fc:	637b      	str	r3, [r7, #52]	; 0x34
 800d5fe:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d600:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800d604:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800d608:	687b      	ldr	r3, [r7, #4]
 800d60a:	681b      	ldr	r3, [r3, #0]
 800d60c:	461a      	mov	r2, r3
 800d60e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 800d612:	647b      	str	r3, [r7, #68]	; 0x44
 800d614:	643a      	str	r2, [r7, #64]	; 0x40
 800d616:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800d618:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800d61a:	e841 2300 	strex	r3, r2, [r1]
 800d61e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d620:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d622:	2b00      	cmp	r3, #0
 800d624:	d1e4      	bne.n	800d5f0 <HAL_UART_IRQHandler+0x59c>
 800d626:	687b      	ldr	r3, [r7, #4]
 800d628:	681b      	ldr	r3, [r3, #0]
 800d62a:	3308      	adds	r3, #8
 800d62c:	627b      	str	r3, [r7, #36]	; 0x24
 800d62e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d630:	e853 3f00 	ldrex	r3, [r3]
 800d634:	623b      	str	r3, [r7, #32]
 800d636:	6a3a      	ldr	r2, [r7, #32]
 800d638:	4b54      	ldr	r3, [pc, #336]	; (800d78c <HAL_UART_IRQHandler+0x738>)
 800d63a:	4013      	ands	r3, r2
 800d63c:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800d640:	687b      	ldr	r3, [r7, #4]
 800d642:	681b      	ldr	r3, [r3, #0]
 800d644:	3308      	adds	r3, #8
 800d646:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800d64a:	633a      	str	r2, [r7, #48]	; 0x30
 800d64c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d64e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800d650:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800d652:	e841 2300 	strex	r3, r2, [r1]
 800d656:	62bb      	str	r3, [r7, #40]	; 0x28
 800d658:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d65a:	2b00      	cmp	r3, #0
 800d65c:	d1e3      	bne.n	800d626 <HAL_UART_IRQHandler+0x5d2>
 800d65e:	687b      	ldr	r3, [r7, #4]
 800d660:	2220      	movs	r2, #32
 800d662:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800d666:	687b      	ldr	r3, [r7, #4]
 800d668:	2200      	movs	r2, #0
 800d66a:	66da      	str	r2, [r3, #108]	; 0x6c
 800d66c:	687b      	ldr	r3, [r7, #4]
 800d66e:	2200      	movs	r2, #0
 800d670:	671a      	str	r2, [r3, #112]	; 0x70
 800d672:	687b      	ldr	r3, [r7, #4]
 800d674:	681b      	ldr	r3, [r3, #0]
 800d676:	613b      	str	r3, [r7, #16]
 800d678:	693b      	ldr	r3, [r7, #16]
 800d67a:	e853 3f00 	ldrex	r3, [r3]
 800d67e:	60fb      	str	r3, [r7, #12]
 800d680:	68fb      	ldr	r3, [r7, #12]
 800d682:	f023 0310 	bic.w	r3, r3, #16
 800d686:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800d68a:	687b      	ldr	r3, [r7, #4]
 800d68c:	681b      	ldr	r3, [r3, #0]
 800d68e:	461a      	mov	r2, r3
 800d690:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 800d694:	61fb      	str	r3, [r7, #28]
 800d696:	61ba      	str	r2, [r7, #24]
 800d698:	69b9      	ldr	r1, [r7, #24]
 800d69a:	69fa      	ldr	r2, [r7, #28]
 800d69c:	e841 2300 	strex	r3, r2, [r1]
 800d6a0:	617b      	str	r3, [r7, #20]
 800d6a2:	697b      	ldr	r3, [r7, #20]
 800d6a4:	2b00      	cmp	r3, #0
 800d6a6:	d1e4      	bne.n	800d672 <HAL_UART_IRQHandler+0x61e>
 800d6a8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800d6ac:	4619      	mov	r1, r3
 800d6ae:	6878      	ldr	r0, [r7, #4]
 800d6b0:	f000 f878 	bl	800d7a4 <HAL_UARTEx_RxEventCallback>
 800d6b4:	e063      	b.n	800d77e <HAL_UART_IRQHandler+0x72a>
 800d6b6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800d6ba:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800d6be:	2b00      	cmp	r3, #0
 800d6c0:	d00e      	beq.n	800d6e0 <HAL_UART_IRQHandler+0x68c>
 800d6c2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800d6c6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800d6ca:	2b00      	cmp	r3, #0
 800d6cc:	d008      	beq.n	800d6e0 <HAL_UART_IRQHandler+0x68c>
 800d6ce:	687b      	ldr	r3, [r7, #4]
 800d6d0:	681b      	ldr	r3, [r3, #0]
 800d6d2:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 800d6d6:	621a      	str	r2, [r3, #32]
 800d6d8:	6878      	ldr	r0, [r7, #4]
 800d6da:	f001 fdbb 	bl	800f254 <HAL_UARTEx_WakeupCallback>
 800d6de:	e051      	b.n	800d784 <HAL_UART_IRQHandler+0x730>
 800d6e0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800d6e4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800d6e8:	2b00      	cmp	r3, #0
 800d6ea:	d014      	beq.n	800d716 <HAL_UART_IRQHandler+0x6c2>
 800d6ec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800d6f0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800d6f4:	2b00      	cmp	r3, #0
 800d6f6:	d105      	bne.n	800d704 <HAL_UART_IRQHandler+0x6b0>
 800d6f8:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800d6fc:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800d700:	2b00      	cmp	r3, #0
 800d702:	d008      	beq.n	800d716 <HAL_UART_IRQHandler+0x6c2>
 800d704:	687b      	ldr	r3, [r7, #4]
 800d706:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800d708:	2b00      	cmp	r3, #0
 800d70a:	d03a      	beq.n	800d782 <HAL_UART_IRQHandler+0x72e>
 800d70c:	687b      	ldr	r3, [r7, #4]
 800d70e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800d710:	6878      	ldr	r0, [r7, #4]
 800d712:	4798      	blx	r3
 800d714:	e035      	b.n	800d782 <HAL_UART_IRQHandler+0x72e>
 800d716:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800d71a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800d71e:	2b00      	cmp	r3, #0
 800d720:	d009      	beq.n	800d736 <HAL_UART_IRQHandler+0x6e2>
 800d722:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800d726:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800d72a:	2b00      	cmp	r3, #0
 800d72c:	d003      	beq.n	800d736 <HAL_UART_IRQHandler+0x6e2>
 800d72e:	6878      	ldr	r0, [r7, #4]
 800d730:	f001 f908 	bl	800e944 <UART_EndTransmit_IT>
 800d734:	e026      	b.n	800d784 <HAL_UART_IRQHandler+0x730>
 800d736:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800d73a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800d73e:	2b00      	cmp	r3, #0
 800d740:	d009      	beq.n	800d756 <HAL_UART_IRQHandler+0x702>
 800d742:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800d746:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 800d74a:	2b00      	cmp	r3, #0
 800d74c:	d003      	beq.n	800d756 <HAL_UART_IRQHandler+0x702>
 800d74e:	6878      	ldr	r0, [r7, #4]
 800d750:	f001 fd94 	bl	800f27c <HAL_UARTEx_TxFifoEmptyCallback>
 800d754:	e016      	b.n	800d784 <HAL_UART_IRQHandler+0x730>
 800d756:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800d75a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800d75e:	2b00      	cmp	r3, #0
 800d760:	d010      	beq.n	800d784 <HAL_UART_IRQHandler+0x730>
 800d762:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800d766:	2b00      	cmp	r3, #0
 800d768:	da0c      	bge.n	800d784 <HAL_UART_IRQHandler+0x730>
 800d76a:	6878      	ldr	r0, [r7, #4]
 800d76c:	f001 fd7c 	bl	800f268 <HAL_UARTEx_RxFifoFullCallback>
 800d770:	e008      	b.n	800d784 <HAL_UART_IRQHandler+0x730>
 800d772:	bf00      	nop
 800d774:	e006      	b.n	800d784 <HAL_UART_IRQHandler+0x730>
 800d776:	bf00      	nop
 800d778:	e004      	b.n	800d784 <HAL_UART_IRQHandler+0x730>
 800d77a:	bf00      	nop
 800d77c:	e002      	b.n	800d784 <HAL_UART_IRQHandler+0x730>
 800d77e:	bf00      	nop
 800d780:	e000      	b.n	800d784 <HAL_UART_IRQHandler+0x730>
 800d782:	bf00      	nop
 800d784:	37e8      	adds	r7, #232	; 0xe8
 800d786:	46bd      	mov	sp, r7
 800d788:	bd80      	pop	{r7, pc}
 800d78a:	bf00      	nop
 800d78c:	effffffe 	.word	0xeffffffe

0800d790 <HAL_UART_ErrorCallback>:
 800d790:	b480      	push	{r7}
 800d792:	b083      	sub	sp, #12
 800d794:	af00      	add	r7, sp, #0
 800d796:	6078      	str	r0, [r7, #4]
 800d798:	bf00      	nop
 800d79a:	370c      	adds	r7, #12
 800d79c:	46bd      	mov	sp, r7
 800d79e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7a2:	4770      	bx	lr

0800d7a4 <HAL_UARTEx_RxEventCallback>:
 800d7a4:	b480      	push	{r7}
 800d7a6:	b083      	sub	sp, #12
 800d7a8:	af00      	add	r7, sp, #0
 800d7aa:	6078      	str	r0, [r7, #4]
 800d7ac:	460b      	mov	r3, r1
 800d7ae:	807b      	strh	r3, [r7, #2]
 800d7b0:	bf00      	nop
 800d7b2:	370c      	adds	r7, #12
 800d7b4:	46bd      	mov	sp, r7
 800d7b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7ba:	4770      	bx	lr

0800d7bc <UART_SetConfig>:
 800d7bc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800d7c0:	b092      	sub	sp, #72	; 0x48
 800d7c2:	af00      	add	r7, sp, #0
 800d7c4:	6178      	str	r0, [r7, #20]
 800d7c6:	2300      	movs	r3, #0
 800d7c8:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800d7cc:	697b      	ldr	r3, [r7, #20]
 800d7ce:	689a      	ldr	r2, [r3, #8]
 800d7d0:	697b      	ldr	r3, [r7, #20]
 800d7d2:	691b      	ldr	r3, [r3, #16]
 800d7d4:	431a      	orrs	r2, r3
 800d7d6:	697b      	ldr	r3, [r7, #20]
 800d7d8:	695b      	ldr	r3, [r3, #20]
 800d7da:	431a      	orrs	r2, r3
 800d7dc:	697b      	ldr	r3, [r7, #20]
 800d7de:	69db      	ldr	r3, [r3, #28]
 800d7e0:	4313      	orrs	r3, r2
 800d7e2:	647b      	str	r3, [r7, #68]	; 0x44
 800d7e4:	697b      	ldr	r3, [r7, #20]
 800d7e6:	681b      	ldr	r3, [r3, #0]
 800d7e8:	681a      	ldr	r2, [r3, #0]
 800d7ea:	4bbe      	ldr	r3, [pc, #760]	; (800dae4 <UART_SetConfig+0x328>)
 800d7ec:	4013      	ands	r3, r2
 800d7ee:	697a      	ldr	r2, [r7, #20]
 800d7f0:	6812      	ldr	r2, [r2, #0]
 800d7f2:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800d7f4:	430b      	orrs	r3, r1
 800d7f6:	6013      	str	r3, [r2, #0]
 800d7f8:	697b      	ldr	r3, [r7, #20]
 800d7fa:	681b      	ldr	r3, [r3, #0]
 800d7fc:	685b      	ldr	r3, [r3, #4]
 800d7fe:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800d802:	697b      	ldr	r3, [r7, #20]
 800d804:	68da      	ldr	r2, [r3, #12]
 800d806:	697b      	ldr	r3, [r7, #20]
 800d808:	681b      	ldr	r3, [r3, #0]
 800d80a:	430a      	orrs	r2, r1
 800d80c:	605a      	str	r2, [r3, #4]
 800d80e:	697b      	ldr	r3, [r7, #20]
 800d810:	699b      	ldr	r3, [r3, #24]
 800d812:	647b      	str	r3, [r7, #68]	; 0x44
 800d814:	697b      	ldr	r3, [r7, #20]
 800d816:	681b      	ldr	r3, [r3, #0]
 800d818:	4ab3      	ldr	r2, [pc, #716]	; (800dae8 <UART_SetConfig+0x32c>)
 800d81a:	4293      	cmp	r3, r2
 800d81c:	d004      	beq.n	800d828 <UART_SetConfig+0x6c>
 800d81e:	697b      	ldr	r3, [r7, #20]
 800d820:	6a1b      	ldr	r3, [r3, #32]
 800d822:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800d824:	4313      	orrs	r3, r2
 800d826:	647b      	str	r3, [r7, #68]	; 0x44
 800d828:	697b      	ldr	r3, [r7, #20]
 800d82a:	681b      	ldr	r3, [r3, #0]
 800d82c:	689a      	ldr	r2, [r3, #8]
 800d82e:	4baf      	ldr	r3, [pc, #700]	; (800daec <UART_SetConfig+0x330>)
 800d830:	4013      	ands	r3, r2
 800d832:	697a      	ldr	r2, [r7, #20]
 800d834:	6812      	ldr	r2, [r2, #0]
 800d836:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800d838:	430b      	orrs	r3, r1
 800d83a:	6093      	str	r3, [r2, #8]
 800d83c:	697b      	ldr	r3, [r7, #20]
 800d83e:	681b      	ldr	r3, [r3, #0]
 800d840:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d842:	f023 010f 	bic.w	r1, r3, #15
 800d846:	697b      	ldr	r3, [r7, #20]
 800d848:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800d84a:	697b      	ldr	r3, [r7, #20]
 800d84c:	681b      	ldr	r3, [r3, #0]
 800d84e:	430a      	orrs	r2, r1
 800d850:	62da      	str	r2, [r3, #44]	; 0x2c
 800d852:	697b      	ldr	r3, [r7, #20]
 800d854:	681b      	ldr	r3, [r3, #0]
 800d856:	4aa6      	ldr	r2, [pc, #664]	; (800daf0 <UART_SetConfig+0x334>)
 800d858:	4293      	cmp	r3, r2
 800d85a:	d177      	bne.n	800d94c <UART_SetConfig+0x190>
 800d85c:	4ba5      	ldr	r3, [pc, #660]	; (800daf4 <UART_SetConfig+0x338>)
 800d85e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800d860:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800d864:	2b28      	cmp	r3, #40	; 0x28
 800d866:	d86d      	bhi.n	800d944 <UART_SetConfig+0x188>
 800d868:	a201      	add	r2, pc, #4	; (adr r2, 800d870 <UART_SetConfig+0xb4>)
 800d86a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d86e:	bf00      	nop
 800d870:	0800d915 	.word	0x0800d915
 800d874:	0800d945 	.word	0x0800d945
 800d878:	0800d945 	.word	0x0800d945
 800d87c:	0800d945 	.word	0x0800d945
 800d880:	0800d945 	.word	0x0800d945
 800d884:	0800d945 	.word	0x0800d945
 800d888:	0800d945 	.word	0x0800d945
 800d88c:	0800d945 	.word	0x0800d945
 800d890:	0800d91d 	.word	0x0800d91d
 800d894:	0800d945 	.word	0x0800d945
 800d898:	0800d945 	.word	0x0800d945
 800d89c:	0800d945 	.word	0x0800d945
 800d8a0:	0800d945 	.word	0x0800d945
 800d8a4:	0800d945 	.word	0x0800d945
 800d8a8:	0800d945 	.word	0x0800d945
 800d8ac:	0800d945 	.word	0x0800d945
 800d8b0:	0800d925 	.word	0x0800d925
 800d8b4:	0800d945 	.word	0x0800d945
 800d8b8:	0800d945 	.word	0x0800d945
 800d8bc:	0800d945 	.word	0x0800d945
 800d8c0:	0800d945 	.word	0x0800d945
 800d8c4:	0800d945 	.word	0x0800d945
 800d8c8:	0800d945 	.word	0x0800d945
 800d8cc:	0800d945 	.word	0x0800d945
 800d8d0:	0800d92d 	.word	0x0800d92d
 800d8d4:	0800d945 	.word	0x0800d945
 800d8d8:	0800d945 	.word	0x0800d945
 800d8dc:	0800d945 	.word	0x0800d945
 800d8e0:	0800d945 	.word	0x0800d945
 800d8e4:	0800d945 	.word	0x0800d945
 800d8e8:	0800d945 	.word	0x0800d945
 800d8ec:	0800d945 	.word	0x0800d945
 800d8f0:	0800d935 	.word	0x0800d935
 800d8f4:	0800d945 	.word	0x0800d945
 800d8f8:	0800d945 	.word	0x0800d945
 800d8fc:	0800d945 	.word	0x0800d945
 800d900:	0800d945 	.word	0x0800d945
 800d904:	0800d945 	.word	0x0800d945
 800d908:	0800d945 	.word	0x0800d945
 800d90c:	0800d945 	.word	0x0800d945
 800d910:	0800d93d 	.word	0x0800d93d
 800d914:	2301      	movs	r3, #1
 800d916:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d91a:	e222      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d91c:	2304      	movs	r3, #4
 800d91e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d922:	e21e      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d924:	2308      	movs	r3, #8
 800d926:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d92a:	e21a      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d92c:	2310      	movs	r3, #16
 800d92e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d932:	e216      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d934:	2320      	movs	r3, #32
 800d936:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d93a:	e212      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d93c:	2340      	movs	r3, #64	; 0x40
 800d93e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d942:	e20e      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d944:	2380      	movs	r3, #128	; 0x80
 800d946:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d94a:	e20a      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d94c:	697b      	ldr	r3, [r7, #20]
 800d94e:	681b      	ldr	r3, [r3, #0]
 800d950:	4a69      	ldr	r2, [pc, #420]	; (800daf8 <UART_SetConfig+0x33c>)
 800d952:	4293      	cmp	r3, r2
 800d954:	d130      	bne.n	800d9b8 <UART_SetConfig+0x1fc>
 800d956:	4b67      	ldr	r3, [pc, #412]	; (800daf4 <UART_SetConfig+0x338>)
 800d958:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800d95a:	f003 0307 	and.w	r3, r3, #7
 800d95e:	2b05      	cmp	r3, #5
 800d960:	d826      	bhi.n	800d9b0 <UART_SetConfig+0x1f4>
 800d962:	a201      	add	r2, pc, #4	; (adr r2, 800d968 <UART_SetConfig+0x1ac>)
 800d964:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d968:	0800d981 	.word	0x0800d981
 800d96c:	0800d989 	.word	0x0800d989
 800d970:	0800d991 	.word	0x0800d991
 800d974:	0800d999 	.word	0x0800d999
 800d978:	0800d9a1 	.word	0x0800d9a1
 800d97c:	0800d9a9 	.word	0x0800d9a9
 800d980:	2300      	movs	r3, #0
 800d982:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d986:	e1ec      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d988:	2304      	movs	r3, #4
 800d98a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d98e:	e1e8      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d990:	2308      	movs	r3, #8
 800d992:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d996:	e1e4      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d998:	2310      	movs	r3, #16
 800d99a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d99e:	e1e0      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d9a0:	2320      	movs	r3, #32
 800d9a2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d9a6:	e1dc      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d9a8:	2340      	movs	r3, #64	; 0x40
 800d9aa:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d9ae:	e1d8      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d9b0:	2380      	movs	r3, #128	; 0x80
 800d9b2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d9b6:	e1d4      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d9b8:	697b      	ldr	r3, [r7, #20]
 800d9ba:	681b      	ldr	r3, [r3, #0]
 800d9bc:	4a4f      	ldr	r2, [pc, #316]	; (800dafc <UART_SetConfig+0x340>)
 800d9be:	4293      	cmp	r3, r2
 800d9c0:	d130      	bne.n	800da24 <UART_SetConfig+0x268>
 800d9c2:	4b4c      	ldr	r3, [pc, #304]	; (800daf4 <UART_SetConfig+0x338>)
 800d9c4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800d9c6:	f003 0307 	and.w	r3, r3, #7
 800d9ca:	2b05      	cmp	r3, #5
 800d9cc:	d826      	bhi.n	800da1c <UART_SetConfig+0x260>
 800d9ce:	a201      	add	r2, pc, #4	; (adr r2, 800d9d4 <UART_SetConfig+0x218>)
 800d9d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d9d4:	0800d9ed 	.word	0x0800d9ed
 800d9d8:	0800d9f5 	.word	0x0800d9f5
 800d9dc:	0800d9fd 	.word	0x0800d9fd
 800d9e0:	0800da05 	.word	0x0800da05
 800d9e4:	0800da0d 	.word	0x0800da0d
 800d9e8:	0800da15 	.word	0x0800da15
 800d9ec:	2300      	movs	r3, #0
 800d9ee:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d9f2:	e1b6      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d9f4:	2304      	movs	r3, #4
 800d9f6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d9fa:	e1b2      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800d9fc:	2308      	movs	r3, #8
 800d9fe:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800da02:	e1ae      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800da04:	2310      	movs	r3, #16
 800da06:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800da0a:	e1aa      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800da0c:	2320      	movs	r3, #32
 800da0e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800da12:	e1a6      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800da14:	2340      	movs	r3, #64	; 0x40
 800da16:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800da1a:	e1a2      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800da1c:	2380      	movs	r3, #128	; 0x80
 800da1e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800da22:	e19e      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800da24:	697b      	ldr	r3, [r7, #20]
 800da26:	681b      	ldr	r3, [r3, #0]
 800da28:	4a35      	ldr	r2, [pc, #212]	; (800db00 <UART_SetConfig+0x344>)
 800da2a:	4293      	cmp	r3, r2
 800da2c:	d130      	bne.n	800da90 <UART_SetConfig+0x2d4>
 800da2e:	4b31      	ldr	r3, [pc, #196]	; (800daf4 <UART_SetConfig+0x338>)
 800da30:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800da32:	f003 0307 	and.w	r3, r3, #7
 800da36:	2b05      	cmp	r3, #5
 800da38:	d826      	bhi.n	800da88 <UART_SetConfig+0x2cc>
 800da3a:	a201      	add	r2, pc, #4	; (adr r2, 800da40 <UART_SetConfig+0x284>)
 800da3c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800da40:	0800da59 	.word	0x0800da59
 800da44:	0800da61 	.word	0x0800da61
 800da48:	0800da69 	.word	0x0800da69
 800da4c:	0800da71 	.word	0x0800da71
 800da50:	0800da79 	.word	0x0800da79
 800da54:	0800da81 	.word	0x0800da81
 800da58:	2300      	movs	r3, #0
 800da5a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800da5e:	e180      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800da60:	2304      	movs	r3, #4
 800da62:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800da66:	e17c      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800da68:	2308      	movs	r3, #8
 800da6a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800da6e:	e178      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800da70:	2310      	movs	r3, #16
 800da72:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800da76:	e174      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800da78:	2320      	movs	r3, #32
 800da7a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800da7e:	e170      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800da80:	2340      	movs	r3, #64	; 0x40
 800da82:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800da86:	e16c      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800da88:	2380      	movs	r3, #128	; 0x80
 800da8a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800da8e:	e168      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800da90:	697b      	ldr	r3, [r7, #20]
 800da92:	681b      	ldr	r3, [r3, #0]
 800da94:	4a1b      	ldr	r2, [pc, #108]	; (800db04 <UART_SetConfig+0x348>)
 800da96:	4293      	cmp	r3, r2
 800da98:	d142      	bne.n	800db20 <UART_SetConfig+0x364>
 800da9a:	4b16      	ldr	r3, [pc, #88]	; (800daf4 <UART_SetConfig+0x338>)
 800da9c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800da9e:	f003 0307 	and.w	r3, r3, #7
 800daa2:	2b05      	cmp	r3, #5
 800daa4:	d838      	bhi.n	800db18 <UART_SetConfig+0x35c>
 800daa6:	a201      	add	r2, pc, #4	; (adr r2, 800daac <UART_SetConfig+0x2f0>)
 800daa8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800daac:	0800dac5 	.word	0x0800dac5
 800dab0:	0800dacd 	.word	0x0800dacd
 800dab4:	0800dad5 	.word	0x0800dad5
 800dab8:	0800dadd 	.word	0x0800dadd
 800dabc:	0800db09 	.word	0x0800db09
 800dac0:	0800db11 	.word	0x0800db11
 800dac4:	2300      	movs	r3, #0
 800dac6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800daca:	e14a      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dacc:	2304      	movs	r3, #4
 800dace:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dad2:	e146      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dad4:	2308      	movs	r3, #8
 800dad6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dada:	e142      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dadc:	2310      	movs	r3, #16
 800dade:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dae2:	e13e      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dae4:	cfff69f3 	.word	0xcfff69f3
 800dae8:	58000c00 	.word	0x58000c00
 800daec:	11fff4ff 	.word	0x11fff4ff
 800daf0:	40011000 	.word	0x40011000
 800daf4:	58024400 	.word	0x58024400
 800daf8:	40004400 	.word	0x40004400
 800dafc:	40004800 	.word	0x40004800
 800db00:	40004c00 	.word	0x40004c00
 800db04:	40005000 	.word	0x40005000
 800db08:	2320      	movs	r3, #32
 800db0a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800db0e:	e128      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800db10:	2340      	movs	r3, #64	; 0x40
 800db12:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800db16:	e124      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800db18:	2380      	movs	r3, #128	; 0x80
 800db1a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800db1e:	e120      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800db20:	697b      	ldr	r3, [r7, #20]
 800db22:	681b      	ldr	r3, [r3, #0]
 800db24:	4acb      	ldr	r2, [pc, #812]	; (800de54 <UART_SetConfig+0x698>)
 800db26:	4293      	cmp	r3, r2
 800db28:	d176      	bne.n	800dc18 <UART_SetConfig+0x45c>
 800db2a:	4bcb      	ldr	r3, [pc, #812]	; (800de58 <UART_SetConfig+0x69c>)
 800db2c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800db2e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800db32:	2b28      	cmp	r3, #40	; 0x28
 800db34:	d86c      	bhi.n	800dc10 <UART_SetConfig+0x454>
 800db36:	a201      	add	r2, pc, #4	; (adr r2, 800db3c <UART_SetConfig+0x380>)
 800db38:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800db3c:	0800dbe1 	.word	0x0800dbe1
 800db40:	0800dc11 	.word	0x0800dc11
 800db44:	0800dc11 	.word	0x0800dc11
 800db48:	0800dc11 	.word	0x0800dc11
 800db4c:	0800dc11 	.word	0x0800dc11
 800db50:	0800dc11 	.word	0x0800dc11
 800db54:	0800dc11 	.word	0x0800dc11
 800db58:	0800dc11 	.word	0x0800dc11
 800db5c:	0800dbe9 	.word	0x0800dbe9
 800db60:	0800dc11 	.word	0x0800dc11
 800db64:	0800dc11 	.word	0x0800dc11
 800db68:	0800dc11 	.word	0x0800dc11
 800db6c:	0800dc11 	.word	0x0800dc11
 800db70:	0800dc11 	.word	0x0800dc11
 800db74:	0800dc11 	.word	0x0800dc11
 800db78:	0800dc11 	.word	0x0800dc11
 800db7c:	0800dbf1 	.word	0x0800dbf1
 800db80:	0800dc11 	.word	0x0800dc11
 800db84:	0800dc11 	.word	0x0800dc11
 800db88:	0800dc11 	.word	0x0800dc11
 800db8c:	0800dc11 	.word	0x0800dc11
 800db90:	0800dc11 	.word	0x0800dc11
 800db94:	0800dc11 	.word	0x0800dc11
 800db98:	0800dc11 	.word	0x0800dc11
 800db9c:	0800dbf9 	.word	0x0800dbf9
 800dba0:	0800dc11 	.word	0x0800dc11
 800dba4:	0800dc11 	.word	0x0800dc11
 800dba8:	0800dc11 	.word	0x0800dc11
 800dbac:	0800dc11 	.word	0x0800dc11
 800dbb0:	0800dc11 	.word	0x0800dc11
 800dbb4:	0800dc11 	.word	0x0800dc11
 800dbb8:	0800dc11 	.word	0x0800dc11
 800dbbc:	0800dc01 	.word	0x0800dc01
 800dbc0:	0800dc11 	.word	0x0800dc11
 800dbc4:	0800dc11 	.word	0x0800dc11
 800dbc8:	0800dc11 	.word	0x0800dc11
 800dbcc:	0800dc11 	.word	0x0800dc11
 800dbd0:	0800dc11 	.word	0x0800dc11
 800dbd4:	0800dc11 	.word	0x0800dc11
 800dbd8:	0800dc11 	.word	0x0800dc11
 800dbdc:	0800dc09 	.word	0x0800dc09
 800dbe0:	2301      	movs	r3, #1
 800dbe2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dbe6:	e0bc      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dbe8:	2304      	movs	r3, #4
 800dbea:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dbee:	e0b8      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dbf0:	2308      	movs	r3, #8
 800dbf2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dbf6:	e0b4      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dbf8:	2310      	movs	r3, #16
 800dbfa:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dbfe:	e0b0      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dc00:	2320      	movs	r3, #32
 800dc02:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dc06:	e0ac      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dc08:	2340      	movs	r3, #64	; 0x40
 800dc0a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dc0e:	e0a8      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dc10:	2380      	movs	r3, #128	; 0x80
 800dc12:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dc16:	e0a4      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dc18:	697b      	ldr	r3, [r7, #20]
 800dc1a:	681b      	ldr	r3, [r3, #0]
 800dc1c:	4a8f      	ldr	r2, [pc, #572]	; (800de5c <UART_SetConfig+0x6a0>)
 800dc1e:	4293      	cmp	r3, r2
 800dc20:	d130      	bne.n	800dc84 <UART_SetConfig+0x4c8>
 800dc22:	4b8d      	ldr	r3, [pc, #564]	; (800de58 <UART_SetConfig+0x69c>)
 800dc24:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800dc26:	f003 0307 	and.w	r3, r3, #7
 800dc2a:	2b05      	cmp	r3, #5
 800dc2c:	d826      	bhi.n	800dc7c <UART_SetConfig+0x4c0>
 800dc2e:	a201      	add	r2, pc, #4	; (adr r2, 800dc34 <UART_SetConfig+0x478>)
 800dc30:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800dc34:	0800dc4d 	.word	0x0800dc4d
 800dc38:	0800dc55 	.word	0x0800dc55
 800dc3c:	0800dc5d 	.word	0x0800dc5d
 800dc40:	0800dc65 	.word	0x0800dc65
 800dc44:	0800dc6d 	.word	0x0800dc6d
 800dc48:	0800dc75 	.word	0x0800dc75
 800dc4c:	2300      	movs	r3, #0
 800dc4e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dc52:	e086      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dc54:	2304      	movs	r3, #4
 800dc56:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dc5a:	e082      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dc5c:	2308      	movs	r3, #8
 800dc5e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dc62:	e07e      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dc64:	2310      	movs	r3, #16
 800dc66:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dc6a:	e07a      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dc6c:	2320      	movs	r3, #32
 800dc6e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dc72:	e076      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dc74:	2340      	movs	r3, #64	; 0x40
 800dc76:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dc7a:	e072      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dc7c:	2380      	movs	r3, #128	; 0x80
 800dc7e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dc82:	e06e      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dc84:	697b      	ldr	r3, [r7, #20]
 800dc86:	681b      	ldr	r3, [r3, #0]
 800dc88:	4a75      	ldr	r2, [pc, #468]	; (800de60 <UART_SetConfig+0x6a4>)
 800dc8a:	4293      	cmp	r3, r2
 800dc8c:	d130      	bne.n	800dcf0 <UART_SetConfig+0x534>
 800dc8e:	4b72      	ldr	r3, [pc, #456]	; (800de58 <UART_SetConfig+0x69c>)
 800dc90:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800dc92:	f003 0307 	and.w	r3, r3, #7
 800dc96:	2b05      	cmp	r3, #5
 800dc98:	d826      	bhi.n	800dce8 <UART_SetConfig+0x52c>
 800dc9a:	a201      	add	r2, pc, #4	; (adr r2, 800dca0 <UART_SetConfig+0x4e4>)
 800dc9c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800dca0:	0800dcb9 	.word	0x0800dcb9
 800dca4:	0800dcc1 	.word	0x0800dcc1
 800dca8:	0800dcc9 	.word	0x0800dcc9
 800dcac:	0800dcd1 	.word	0x0800dcd1
 800dcb0:	0800dcd9 	.word	0x0800dcd9
 800dcb4:	0800dce1 	.word	0x0800dce1
 800dcb8:	2300      	movs	r3, #0
 800dcba:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dcbe:	e050      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dcc0:	2304      	movs	r3, #4
 800dcc2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dcc6:	e04c      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dcc8:	2308      	movs	r3, #8
 800dcca:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dcce:	e048      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dcd0:	2310      	movs	r3, #16
 800dcd2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dcd6:	e044      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dcd8:	2320      	movs	r3, #32
 800dcda:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dcde:	e040      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dce0:	2340      	movs	r3, #64	; 0x40
 800dce2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dce6:	e03c      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dce8:	2380      	movs	r3, #128	; 0x80
 800dcea:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dcee:	e038      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dcf0:	697b      	ldr	r3, [r7, #20]
 800dcf2:	681b      	ldr	r3, [r3, #0]
 800dcf4:	4a5b      	ldr	r2, [pc, #364]	; (800de64 <UART_SetConfig+0x6a8>)
 800dcf6:	4293      	cmp	r3, r2
 800dcf8:	d130      	bne.n	800dd5c <UART_SetConfig+0x5a0>
 800dcfa:	4b57      	ldr	r3, [pc, #348]	; (800de58 <UART_SetConfig+0x69c>)
 800dcfc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800dcfe:	f003 0307 	and.w	r3, r3, #7
 800dd02:	2b05      	cmp	r3, #5
 800dd04:	d826      	bhi.n	800dd54 <UART_SetConfig+0x598>
 800dd06:	a201      	add	r2, pc, #4	; (adr r2, 800dd0c <UART_SetConfig+0x550>)
 800dd08:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800dd0c:	0800dd25 	.word	0x0800dd25
 800dd10:	0800dd2d 	.word	0x0800dd2d
 800dd14:	0800dd35 	.word	0x0800dd35
 800dd18:	0800dd3d 	.word	0x0800dd3d
 800dd1c:	0800dd45 	.word	0x0800dd45
 800dd20:	0800dd4d 	.word	0x0800dd4d
 800dd24:	2302      	movs	r3, #2
 800dd26:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dd2a:	e01a      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dd2c:	2304      	movs	r3, #4
 800dd2e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dd32:	e016      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dd34:	2308      	movs	r3, #8
 800dd36:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dd3a:	e012      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dd3c:	2310      	movs	r3, #16
 800dd3e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dd42:	e00e      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dd44:	2320      	movs	r3, #32
 800dd46:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dd4a:	e00a      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dd4c:	2340      	movs	r3, #64	; 0x40
 800dd4e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dd52:	e006      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dd54:	2380      	movs	r3, #128	; 0x80
 800dd56:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dd5a:	e002      	b.n	800dd62 <UART_SetConfig+0x5a6>
 800dd5c:	2380      	movs	r3, #128	; 0x80
 800dd5e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800dd62:	697b      	ldr	r3, [r7, #20]
 800dd64:	681b      	ldr	r3, [r3, #0]
 800dd66:	4a3f      	ldr	r2, [pc, #252]	; (800de64 <UART_SetConfig+0x6a8>)
 800dd68:	4293      	cmp	r3, r2
 800dd6a:	f040 80f8 	bne.w	800df5e <UART_SetConfig+0x7a2>
 800dd6e:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 800dd72:	2b20      	cmp	r3, #32
 800dd74:	dc46      	bgt.n	800de04 <UART_SetConfig+0x648>
 800dd76:	2b02      	cmp	r3, #2
 800dd78:	f2c0 8082 	blt.w	800de80 <UART_SetConfig+0x6c4>
 800dd7c:	3b02      	subs	r3, #2
 800dd7e:	2b1e      	cmp	r3, #30
 800dd80:	d87e      	bhi.n	800de80 <UART_SetConfig+0x6c4>
 800dd82:	a201      	add	r2, pc, #4	; (adr r2, 800dd88 <UART_SetConfig+0x5cc>)
 800dd84:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800dd88:	0800de0b 	.word	0x0800de0b
 800dd8c:	0800de81 	.word	0x0800de81
 800dd90:	0800de13 	.word	0x0800de13
 800dd94:	0800de81 	.word	0x0800de81
 800dd98:	0800de81 	.word	0x0800de81
 800dd9c:	0800de81 	.word	0x0800de81
 800dda0:	0800de23 	.word	0x0800de23
 800dda4:	0800de81 	.word	0x0800de81
 800dda8:	0800de81 	.word	0x0800de81
 800ddac:	0800de81 	.word	0x0800de81
 800ddb0:	0800de81 	.word	0x0800de81
 800ddb4:	0800de81 	.word	0x0800de81
 800ddb8:	0800de81 	.word	0x0800de81
 800ddbc:	0800de81 	.word	0x0800de81
 800ddc0:	0800de33 	.word	0x0800de33
 800ddc4:	0800de81 	.word	0x0800de81
 800ddc8:	0800de81 	.word	0x0800de81
 800ddcc:	0800de81 	.word	0x0800de81
 800ddd0:	0800de81 	.word	0x0800de81
 800ddd4:	0800de81 	.word	0x0800de81
 800ddd8:	0800de81 	.word	0x0800de81
 800dddc:	0800de81 	.word	0x0800de81
 800dde0:	0800de81 	.word	0x0800de81
 800dde4:	0800de81 	.word	0x0800de81
 800dde8:	0800de81 	.word	0x0800de81
 800ddec:	0800de81 	.word	0x0800de81
 800ddf0:	0800de81 	.word	0x0800de81
 800ddf4:	0800de81 	.word	0x0800de81
 800ddf8:	0800de81 	.word	0x0800de81
 800ddfc:	0800de81 	.word	0x0800de81
 800de00:	0800de73 	.word	0x0800de73
 800de04:	2b40      	cmp	r3, #64	; 0x40
 800de06:	d037      	beq.n	800de78 <UART_SetConfig+0x6bc>
 800de08:	e03a      	b.n	800de80 <UART_SetConfig+0x6c4>
 800de0a:	f7fc fbc9 	bl	800a5a0 <HAL_RCCEx_GetD3PCLK1Freq>
 800de0e:	63f8      	str	r0, [r7, #60]	; 0x3c
 800de10:	e03c      	b.n	800de8c <UART_SetConfig+0x6d0>
 800de12:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800de16:	4618      	mov	r0, r3
 800de18:	f7fc fbd8 	bl	800a5cc <HAL_RCCEx_GetPLL2ClockFreq>
 800de1c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800de1e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800de20:	e034      	b.n	800de8c <UART_SetConfig+0x6d0>
 800de22:	f107 0318 	add.w	r3, r7, #24
 800de26:	4618      	mov	r0, r3
 800de28:	f7fc fd24 	bl	800a874 <HAL_RCCEx_GetPLL3ClockFreq>
 800de2c:	69fb      	ldr	r3, [r7, #28]
 800de2e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800de30:	e02c      	b.n	800de8c <UART_SetConfig+0x6d0>
 800de32:	4b09      	ldr	r3, [pc, #36]	; (800de58 <UART_SetConfig+0x69c>)
 800de34:	681b      	ldr	r3, [r3, #0]
 800de36:	f003 0320 	and.w	r3, r3, #32
 800de3a:	2b00      	cmp	r3, #0
 800de3c:	d016      	beq.n	800de6c <UART_SetConfig+0x6b0>
 800de3e:	4b06      	ldr	r3, [pc, #24]	; (800de58 <UART_SetConfig+0x69c>)
 800de40:	681b      	ldr	r3, [r3, #0]
 800de42:	08db      	lsrs	r3, r3, #3
 800de44:	f003 0303 	and.w	r3, r3, #3
 800de48:	4a07      	ldr	r2, [pc, #28]	; (800de68 <UART_SetConfig+0x6ac>)
 800de4a:	fa22 f303 	lsr.w	r3, r2, r3
 800de4e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800de50:	e01c      	b.n	800de8c <UART_SetConfig+0x6d0>
 800de52:	bf00      	nop
 800de54:	40011400 	.word	0x40011400
 800de58:	58024400 	.word	0x58024400
 800de5c:	40007800 	.word	0x40007800
 800de60:	40007c00 	.word	0x40007c00
 800de64:	58000c00 	.word	0x58000c00
 800de68:	03d09000 	.word	0x03d09000
 800de6c:	4b9d      	ldr	r3, [pc, #628]	; (800e0e4 <UART_SetConfig+0x928>)
 800de6e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800de70:	e00c      	b.n	800de8c <UART_SetConfig+0x6d0>
 800de72:	4b9d      	ldr	r3, [pc, #628]	; (800e0e8 <UART_SetConfig+0x92c>)
 800de74:	63fb      	str	r3, [r7, #60]	; 0x3c
 800de76:	e009      	b.n	800de8c <UART_SetConfig+0x6d0>
 800de78:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800de7c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800de7e:	e005      	b.n	800de8c <UART_SetConfig+0x6d0>
 800de80:	2300      	movs	r3, #0
 800de82:	63fb      	str	r3, [r7, #60]	; 0x3c
 800de84:	2301      	movs	r3, #1
 800de86:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800de8a:	bf00      	nop
 800de8c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800de8e:	2b00      	cmp	r3, #0
 800de90:	f000 81de 	beq.w	800e250 <UART_SetConfig+0xa94>
 800de94:	697b      	ldr	r3, [r7, #20]
 800de96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800de98:	4a94      	ldr	r2, [pc, #592]	; (800e0ec <UART_SetConfig+0x930>)
 800de9a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800de9e:	461a      	mov	r2, r3
 800dea0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800dea2:	fbb3 f3f2 	udiv	r3, r3, r2
 800dea6:	633b      	str	r3, [r7, #48]	; 0x30
 800dea8:	697b      	ldr	r3, [r7, #20]
 800deaa:	685a      	ldr	r2, [r3, #4]
 800deac:	4613      	mov	r3, r2
 800deae:	005b      	lsls	r3, r3, #1
 800deb0:	4413      	add	r3, r2
 800deb2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800deb4:	429a      	cmp	r2, r3
 800deb6:	d305      	bcc.n	800dec4 <UART_SetConfig+0x708>
 800deb8:	697b      	ldr	r3, [r7, #20]
 800deba:	685b      	ldr	r3, [r3, #4]
 800debc:	031b      	lsls	r3, r3, #12
 800debe:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800dec0:	429a      	cmp	r2, r3
 800dec2:	d903      	bls.n	800decc <UART_SetConfig+0x710>
 800dec4:	2301      	movs	r3, #1
 800dec6:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800deca:	e1c1      	b.n	800e250 <UART_SetConfig+0xa94>
 800decc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800dece:	2200      	movs	r2, #0
 800ded0:	60bb      	str	r3, [r7, #8]
 800ded2:	60fa      	str	r2, [r7, #12]
 800ded4:	697b      	ldr	r3, [r7, #20]
 800ded6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ded8:	4a84      	ldr	r2, [pc, #528]	; (800e0ec <UART_SetConfig+0x930>)
 800deda:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800dede:	b29b      	uxth	r3, r3
 800dee0:	2200      	movs	r2, #0
 800dee2:	603b      	str	r3, [r7, #0]
 800dee4:	607a      	str	r2, [r7, #4]
 800dee6:	e9d7 2300 	ldrd	r2, r3, [r7]
 800deea:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800deee:	f7f2 fc0b 	bl	8000708 <__aeabi_uldivmod>
 800def2:	4602      	mov	r2, r0
 800def4:	460b      	mov	r3, r1
 800def6:	4610      	mov	r0, r2
 800def8:	4619      	mov	r1, r3
 800defa:	f04f 0200 	mov.w	r2, #0
 800defe:	f04f 0300 	mov.w	r3, #0
 800df02:	020b      	lsls	r3, r1, #8
 800df04:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 800df08:	0202      	lsls	r2, r0, #8
 800df0a:	6979      	ldr	r1, [r7, #20]
 800df0c:	6849      	ldr	r1, [r1, #4]
 800df0e:	0849      	lsrs	r1, r1, #1
 800df10:	2000      	movs	r0, #0
 800df12:	460c      	mov	r4, r1
 800df14:	4605      	mov	r5, r0
 800df16:	eb12 0804 	adds.w	r8, r2, r4
 800df1a:	eb43 0905 	adc.w	r9, r3, r5
 800df1e:	697b      	ldr	r3, [r7, #20]
 800df20:	685b      	ldr	r3, [r3, #4]
 800df22:	2200      	movs	r2, #0
 800df24:	469a      	mov	sl, r3
 800df26:	4693      	mov	fp, r2
 800df28:	4652      	mov	r2, sl
 800df2a:	465b      	mov	r3, fp
 800df2c:	4640      	mov	r0, r8
 800df2e:	4649      	mov	r1, r9
 800df30:	f7f2 fbea 	bl	8000708 <__aeabi_uldivmod>
 800df34:	4602      	mov	r2, r0
 800df36:	460b      	mov	r3, r1
 800df38:	4613      	mov	r3, r2
 800df3a:	63bb      	str	r3, [r7, #56]	; 0x38
 800df3c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800df3e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800df42:	d308      	bcc.n	800df56 <UART_SetConfig+0x79a>
 800df44:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800df46:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800df4a:	d204      	bcs.n	800df56 <UART_SetConfig+0x79a>
 800df4c:	697b      	ldr	r3, [r7, #20]
 800df4e:	681b      	ldr	r3, [r3, #0]
 800df50:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800df52:	60da      	str	r2, [r3, #12]
 800df54:	e17c      	b.n	800e250 <UART_SetConfig+0xa94>
 800df56:	2301      	movs	r3, #1
 800df58:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800df5c:	e178      	b.n	800e250 <UART_SetConfig+0xa94>
 800df5e:	697b      	ldr	r3, [r7, #20]
 800df60:	69db      	ldr	r3, [r3, #28]
 800df62:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800df66:	f040 80c5 	bne.w	800e0f4 <UART_SetConfig+0x938>
 800df6a:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 800df6e:	2b20      	cmp	r3, #32
 800df70:	dc48      	bgt.n	800e004 <UART_SetConfig+0x848>
 800df72:	2b00      	cmp	r3, #0
 800df74:	db7b      	blt.n	800e06e <UART_SetConfig+0x8b2>
 800df76:	2b20      	cmp	r3, #32
 800df78:	d879      	bhi.n	800e06e <UART_SetConfig+0x8b2>
 800df7a:	a201      	add	r2, pc, #4	; (adr r2, 800df80 <UART_SetConfig+0x7c4>)
 800df7c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800df80:	0800e00b 	.word	0x0800e00b
 800df84:	0800e013 	.word	0x0800e013
 800df88:	0800e06f 	.word	0x0800e06f
 800df8c:	0800e06f 	.word	0x0800e06f
 800df90:	0800e01b 	.word	0x0800e01b
 800df94:	0800e06f 	.word	0x0800e06f
 800df98:	0800e06f 	.word	0x0800e06f
 800df9c:	0800e06f 	.word	0x0800e06f
 800dfa0:	0800e02b 	.word	0x0800e02b
 800dfa4:	0800e06f 	.word	0x0800e06f
 800dfa8:	0800e06f 	.word	0x0800e06f
 800dfac:	0800e06f 	.word	0x0800e06f
 800dfb0:	0800e06f 	.word	0x0800e06f
 800dfb4:	0800e06f 	.word	0x0800e06f
 800dfb8:	0800e06f 	.word	0x0800e06f
 800dfbc:	0800e06f 	.word	0x0800e06f
 800dfc0:	0800e03b 	.word	0x0800e03b
 800dfc4:	0800e06f 	.word	0x0800e06f
 800dfc8:	0800e06f 	.word	0x0800e06f
 800dfcc:	0800e06f 	.word	0x0800e06f
 800dfd0:	0800e06f 	.word	0x0800e06f
 800dfd4:	0800e06f 	.word	0x0800e06f
 800dfd8:	0800e06f 	.word	0x0800e06f
 800dfdc:	0800e06f 	.word	0x0800e06f
 800dfe0:	0800e06f 	.word	0x0800e06f
 800dfe4:	0800e06f 	.word	0x0800e06f
 800dfe8:	0800e06f 	.word	0x0800e06f
 800dfec:	0800e06f 	.word	0x0800e06f
 800dff0:	0800e06f 	.word	0x0800e06f
 800dff4:	0800e06f 	.word	0x0800e06f
 800dff8:	0800e06f 	.word	0x0800e06f
 800dffc:	0800e06f 	.word	0x0800e06f
 800e000:	0800e061 	.word	0x0800e061
 800e004:	2b40      	cmp	r3, #64	; 0x40
 800e006:	d02e      	beq.n	800e066 <UART_SetConfig+0x8aa>
 800e008:	e031      	b.n	800e06e <UART_SetConfig+0x8b2>
 800e00a:	f7fb fb57 	bl	80096bc <HAL_RCC_GetPCLK1Freq>
 800e00e:	63f8      	str	r0, [r7, #60]	; 0x3c
 800e010:	e033      	b.n	800e07a <UART_SetConfig+0x8be>
 800e012:	f7fb fb69 	bl	80096e8 <HAL_RCC_GetPCLK2Freq>
 800e016:	63f8      	str	r0, [r7, #60]	; 0x3c
 800e018:	e02f      	b.n	800e07a <UART_SetConfig+0x8be>
 800e01a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800e01e:	4618      	mov	r0, r3
 800e020:	f7fc fad4 	bl	800a5cc <HAL_RCCEx_GetPLL2ClockFreq>
 800e024:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e026:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e028:	e027      	b.n	800e07a <UART_SetConfig+0x8be>
 800e02a:	f107 0318 	add.w	r3, r7, #24
 800e02e:	4618      	mov	r0, r3
 800e030:	f7fc fc20 	bl	800a874 <HAL_RCCEx_GetPLL3ClockFreq>
 800e034:	69fb      	ldr	r3, [r7, #28]
 800e036:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e038:	e01f      	b.n	800e07a <UART_SetConfig+0x8be>
 800e03a:	4b2d      	ldr	r3, [pc, #180]	; (800e0f0 <UART_SetConfig+0x934>)
 800e03c:	681b      	ldr	r3, [r3, #0]
 800e03e:	f003 0320 	and.w	r3, r3, #32
 800e042:	2b00      	cmp	r3, #0
 800e044:	d009      	beq.n	800e05a <UART_SetConfig+0x89e>
 800e046:	4b2a      	ldr	r3, [pc, #168]	; (800e0f0 <UART_SetConfig+0x934>)
 800e048:	681b      	ldr	r3, [r3, #0]
 800e04a:	08db      	lsrs	r3, r3, #3
 800e04c:	f003 0303 	and.w	r3, r3, #3
 800e050:	4a24      	ldr	r2, [pc, #144]	; (800e0e4 <UART_SetConfig+0x928>)
 800e052:	fa22 f303 	lsr.w	r3, r2, r3
 800e056:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e058:	e00f      	b.n	800e07a <UART_SetConfig+0x8be>
 800e05a:	4b22      	ldr	r3, [pc, #136]	; (800e0e4 <UART_SetConfig+0x928>)
 800e05c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e05e:	e00c      	b.n	800e07a <UART_SetConfig+0x8be>
 800e060:	4b21      	ldr	r3, [pc, #132]	; (800e0e8 <UART_SetConfig+0x92c>)
 800e062:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e064:	e009      	b.n	800e07a <UART_SetConfig+0x8be>
 800e066:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e06a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e06c:	e005      	b.n	800e07a <UART_SetConfig+0x8be>
 800e06e:	2300      	movs	r3, #0
 800e070:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e072:	2301      	movs	r3, #1
 800e074:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800e078:	bf00      	nop
 800e07a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800e07c:	2b00      	cmp	r3, #0
 800e07e:	f000 80e7 	beq.w	800e250 <UART_SetConfig+0xa94>
 800e082:	697b      	ldr	r3, [r7, #20]
 800e084:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e086:	4a19      	ldr	r2, [pc, #100]	; (800e0ec <UART_SetConfig+0x930>)
 800e088:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800e08c:	461a      	mov	r2, r3
 800e08e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800e090:	fbb3 f3f2 	udiv	r3, r3, r2
 800e094:	005a      	lsls	r2, r3, #1
 800e096:	697b      	ldr	r3, [r7, #20]
 800e098:	685b      	ldr	r3, [r3, #4]
 800e09a:	085b      	lsrs	r3, r3, #1
 800e09c:	441a      	add	r2, r3
 800e09e:	697b      	ldr	r3, [r7, #20]
 800e0a0:	685b      	ldr	r3, [r3, #4]
 800e0a2:	fbb2 f3f3 	udiv	r3, r2, r3
 800e0a6:	63bb      	str	r3, [r7, #56]	; 0x38
 800e0a8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e0aa:	2b0f      	cmp	r3, #15
 800e0ac:	d916      	bls.n	800e0dc <UART_SetConfig+0x920>
 800e0ae:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e0b0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800e0b4:	d212      	bcs.n	800e0dc <UART_SetConfig+0x920>
 800e0b6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e0b8:	b29b      	uxth	r3, r3
 800e0ba:	f023 030f 	bic.w	r3, r3, #15
 800e0be:	86fb      	strh	r3, [r7, #54]	; 0x36
 800e0c0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e0c2:	085b      	lsrs	r3, r3, #1
 800e0c4:	b29b      	uxth	r3, r3
 800e0c6:	f003 0307 	and.w	r3, r3, #7
 800e0ca:	b29a      	uxth	r2, r3
 800e0cc:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 800e0ce:	4313      	orrs	r3, r2
 800e0d0:	86fb      	strh	r3, [r7, #54]	; 0x36
 800e0d2:	697b      	ldr	r3, [r7, #20]
 800e0d4:	681b      	ldr	r3, [r3, #0]
 800e0d6:	8efa      	ldrh	r2, [r7, #54]	; 0x36
 800e0d8:	60da      	str	r2, [r3, #12]
 800e0da:	e0b9      	b.n	800e250 <UART_SetConfig+0xa94>
 800e0dc:	2301      	movs	r3, #1
 800e0de:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800e0e2:	e0b5      	b.n	800e250 <UART_SetConfig+0xa94>
 800e0e4:	03d09000 	.word	0x03d09000
 800e0e8:	003d0900 	.word	0x003d0900
 800e0ec:	08012bf0 	.word	0x08012bf0
 800e0f0:	58024400 	.word	0x58024400
 800e0f4:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 800e0f8:	2b20      	cmp	r3, #32
 800e0fa:	dc49      	bgt.n	800e190 <UART_SetConfig+0x9d4>
 800e0fc:	2b00      	cmp	r3, #0
 800e0fe:	db7c      	blt.n	800e1fa <UART_SetConfig+0xa3e>
 800e100:	2b20      	cmp	r3, #32
 800e102:	d87a      	bhi.n	800e1fa <UART_SetConfig+0xa3e>
 800e104:	a201      	add	r2, pc, #4	; (adr r2, 800e10c <UART_SetConfig+0x950>)
 800e106:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e10a:	bf00      	nop
 800e10c:	0800e197 	.word	0x0800e197
 800e110:	0800e19f 	.word	0x0800e19f
 800e114:	0800e1fb 	.word	0x0800e1fb
 800e118:	0800e1fb 	.word	0x0800e1fb
 800e11c:	0800e1a7 	.word	0x0800e1a7
 800e120:	0800e1fb 	.word	0x0800e1fb
 800e124:	0800e1fb 	.word	0x0800e1fb
 800e128:	0800e1fb 	.word	0x0800e1fb
 800e12c:	0800e1b7 	.word	0x0800e1b7
 800e130:	0800e1fb 	.word	0x0800e1fb
 800e134:	0800e1fb 	.word	0x0800e1fb
 800e138:	0800e1fb 	.word	0x0800e1fb
 800e13c:	0800e1fb 	.word	0x0800e1fb
 800e140:	0800e1fb 	.word	0x0800e1fb
 800e144:	0800e1fb 	.word	0x0800e1fb
 800e148:	0800e1fb 	.word	0x0800e1fb
 800e14c:	0800e1c7 	.word	0x0800e1c7
 800e150:	0800e1fb 	.word	0x0800e1fb
 800e154:	0800e1fb 	.word	0x0800e1fb
 800e158:	0800e1fb 	.word	0x0800e1fb
 800e15c:	0800e1fb 	.word	0x0800e1fb
 800e160:	0800e1fb 	.word	0x0800e1fb
 800e164:	0800e1fb 	.word	0x0800e1fb
 800e168:	0800e1fb 	.word	0x0800e1fb
 800e16c:	0800e1fb 	.word	0x0800e1fb
 800e170:	0800e1fb 	.word	0x0800e1fb
 800e174:	0800e1fb 	.word	0x0800e1fb
 800e178:	0800e1fb 	.word	0x0800e1fb
 800e17c:	0800e1fb 	.word	0x0800e1fb
 800e180:	0800e1fb 	.word	0x0800e1fb
 800e184:	0800e1fb 	.word	0x0800e1fb
 800e188:	0800e1fb 	.word	0x0800e1fb
 800e18c:	0800e1ed 	.word	0x0800e1ed
 800e190:	2b40      	cmp	r3, #64	; 0x40
 800e192:	d02e      	beq.n	800e1f2 <UART_SetConfig+0xa36>
 800e194:	e031      	b.n	800e1fa <UART_SetConfig+0xa3e>
 800e196:	f7fb fa91 	bl	80096bc <HAL_RCC_GetPCLK1Freq>
 800e19a:	63f8      	str	r0, [r7, #60]	; 0x3c
 800e19c:	e033      	b.n	800e206 <UART_SetConfig+0xa4a>
 800e19e:	f7fb faa3 	bl	80096e8 <HAL_RCC_GetPCLK2Freq>
 800e1a2:	63f8      	str	r0, [r7, #60]	; 0x3c
 800e1a4:	e02f      	b.n	800e206 <UART_SetConfig+0xa4a>
 800e1a6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800e1aa:	4618      	mov	r0, r3
 800e1ac:	f7fc fa0e 	bl	800a5cc <HAL_RCCEx_GetPLL2ClockFreq>
 800e1b0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e1b2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e1b4:	e027      	b.n	800e206 <UART_SetConfig+0xa4a>
 800e1b6:	f107 0318 	add.w	r3, r7, #24
 800e1ba:	4618      	mov	r0, r3
 800e1bc:	f7fc fb5a 	bl	800a874 <HAL_RCCEx_GetPLL3ClockFreq>
 800e1c0:	69fb      	ldr	r3, [r7, #28]
 800e1c2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e1c4:	e01f      	b.n	800e206 <UART_SetConfig+0xa4a>
 800e1c6:	4b2d      	ldr	r3, [pc, #180]	; (800e27c <UART_SetConfig+0xac0>)
 800e1c8:	681b      	ldr	r3, [r3, #0]
 800e1ca:	f003 0320 	and.w	r3, r3, #32
 800e1ce:	2b00      	cmp	r3, #0
 800e1d0:	d009      	beq.n	800e1e6 <UART_SetConfig+0xa2a>
 800e1d2:	4b2a      	ldr	r3, [pc, #168]	; (800e27c <UART_SetConfig+0xac0>)
 800e1d4:	681b      	ldr	r3, [r3, #0]
 800e1d6:	08db      	lsrs	r3, r3, #3
 800e1d8:	f003 0303 	and.w	r3, r3, #3
 800e1dc:	4a28      	ldr	r2, [pc, #160]	; (800e280 <UART_SetConfig+0xac4>)
 800e1de:	fa22 f303 	lsr.w	r3, r2, r3
 800e1e2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e1e4:	e00f      	b.n	800e206 <UART_SetConfig+0xa4a>
 800e1e6:	4b26      	ldr	r3, [pc, #152]	; (800e280 <UART_SetConfig+0xac4>)
 800e1e8:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e1ea:	e00c      	b.n	800e206 <UART_SetConfig+0xa4a>
 800e1ec:	4b25      	ldr	r3, [pc, #148]	; (800e284 <UART_SetConfig+0xac8>)
 800e1ee:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e1f0:	e009      	b.n	800e206 <UART_SetConfig+0xa4a>
 800e1f2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e1f6:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e1f8:	e005      	b.n	800e206 <UART_SetConfig+0xa4a>
 800e1fa:	2300      	movs	r3, #0
 800e1fc:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e1fe:	2301      	movs	r3, #1
 800e200:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800e204:	bf00      	nop
 800e206:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800e208:	2b00      	cmp	r3, #0
 800e20a:	d021      	beq.n	800e250 <UART_SetConfig+0xa94>
 800e20c:	697b      	ldr	r3, [r7, #20]
 800e20e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e210:	4a1d      	ldr	r2, [pc, #116]	; (800e288 <UART_SetConfig+0xacc>)
 800e212:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800e216:	461a      	mov	r2, r3
 800e218:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800e21a:	fbb3 f2f2 	udiv	r2, r3, r2
 800e21e:	697b      	ldr	r3, [r7, #20]
 800e220:	685b      	ldr	r3, [r3, #4]
 800e222:	085b      	lsrs	r3, r3, #1
 800e224:	441a      	add	r2, r3
 800e226:	697b      	ldr	r3, [r7, #20]
 800e228:	685b      	ldr	r3, [r3, #4]
 800e22a:	fbb2 f3f3 	udiv	r3, r2, r3
 800e22e:	63bb      	str	r3, [r7, #56]	; 0x38
 800e230:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e232:	2b0f      	cmp	r3, #15
 800e234:	d909      	bls.n	800e24a <UART_SetConfig+0xa8e>
 800e236:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e238:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800e23c:	d205      	bcs.n	800e24a <UART_SetConfig+0xa8e>
 800e23e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e240:	b29a      	uxth	r2, r3
 800e242:	697b      	ldr	r3, [r7, #20]
 800e244:	681b      	ldr	r3, [r3, #0]
 800e246:	60da      	str	r2, [r3, #12]
 800e248:	e002      	b.n	800e250 <UART_SetConfig+0xa94>
 800e24a:	2301      	movs	r3, #1
 800e24c:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800e250:	697b      	ldr	r3, [r7, #20]
 800e252:	2201      	movs	r2, #1
 800e254:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800e258:	697b      	ldr	r3, [r7, #20]
 800e25a:	2201      	movs	r2, #1
 800e25c:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800e260:	697b      	ldr	r3, [r7, #20]
 800e262:	2200      	movs	r2, #0
 800e264:	671a      	str	r2, [r3, #112]	; 0x70
 800e266:	697b      	ldr	r3, [r7, #20]
 800e268:	2200      	movs	r2, #0
 800e26a:	675a      	str	r2, [r3, #116]	; 0x74
 800e26c:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 800e270:	4618      	mov	r0, r3
 800e272:	3748      	adds	r7, #72	; 0x48
 800e274:	46bd      	mov	sp, r7
 800e276:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800e27a:	bf00      	nop
 800e27c:	58024400 	.word	0x58024400
 800e280:	03d09000 	.word	0x03d09000
 800e284:	003d0900 	.word	0x003d0900
 800e288:	08012bf0 	.word	0x08012bf0

0800e28c <UART_AdvFeatureConfig>:
 800e28c:	b480      	push	{r7}
 800e28e:	b083      	sub	sp, #12
 800e290:	af00      	add	r7, sp, #0
 800e292:	6078      	str	r0, [r7, #4]
 800e294:	687b      	ldr	r3, [r7, #4]
 800e296:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e298:	f003 0301 	and.w	r3, r3, #1
 800e29c:	2b00      	cmp	r3, #0
 800e29e:	d00a      	beq.n	800e2b6 <UART_AdvFeatureConfig+0x2a>
 800e2a0:	687b      	ldr	r3, [r7, #4]
 800e2a2:	681b      	ldr	r3, [r3, #0]
 800e2a4:	685b      	ldr	r3, [r3, #4]
 800e2a6:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 800e2aa:	687b      	ldr	r3, [r7, #4]
 800e2ac:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e2ae:	687b      	ldr	r3, [r7, #4]
 800e2b0:	681b      	ldr	r3, [r3, #0]
 800e2b2:	430a      	orrs	r2, r1
 800e2b4:	605a      	str	r2, [r3, #4]
 800e2b6:	687b      	ldr	r3, [r7, #4]
 800e2b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e2ba:	f003 0302 	and.w	r3, r3, #2
 800e2be:	2b00      	cmp	r3, #0
 800e2c0:	d00a      	beq.n	800e2d8 <UART_AdvFeatureConfig+0x4c>
 800e2c2:	687b      	ldr	r3, [r7, #4]
 800e2c4:	681b      	ldr	r3, [r3, #0]
 800e2c6:	685b      	ldr	r3, [r3, #4]
 800e2c8:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 800e2cc:	687b      	ldr	r3, [r7, #4]
 800e2ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e2d0:	687b      	ldr	r3, [r7, #4]
 800e2d2:	681b      	ldr	r3, [r3, #0]
 800e2d4:	430a      	orrs	r2, r1
 800e2d6:	605a      	str	r2, [r3, #4]
 800e2d8:	687b      	ldr	r3, [r7, #4]
 800e2da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e2dc:	f003 0304 	and.w	r3, r3, #4
 800e2e0:	2b00      	cmp	r3, #0
 800e2e2:	d00a      	beq.n	800e2fa <UART_AdvFeatureConfig+0x6e>
 800e2e4:	687b      	ldr	r3, [r7, #4]
 800e2e6:	681b      	ldr	r3, [r3, #0]
 800e2e8:	685b      	ldr	r3, [r3, #4]
 800e2ea:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 800e2ee:	687b      	ldr	r3, [r7, #4]
 800e2f0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e2f2:	687b      	ldr	r3, [r7, #4]
 800e2f4:	681b      	ldr	r3, [r3, #0]
 800e2f6:	430a      	orrs	r2, r1
 800e2f8:	605a      	str	r2, [r3, #4]
 800e2fa:	687b      	ldr	r3, [r7, #4]
 800e2fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e2fe:	f003 0308 	and.w	r3, r3, #8
 800e302:	2b00      	cmp	r3, #0
 800e304:	d00a      	beq.n	800e31c <UART_AdvFeatureConfig+0x90>
 800e306:	687b      	ldr	r3, [r7, #4]
 800e308:	681b      	ldr	r3, [r3, #0]
 800e30a:	685b      	ldr	r3, [r3, #4]
 800e30c:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 800e310:	687b      	ldr	r3, [r7, #4]
 800e312:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e314:	687b      	ldr	r3, [r7, #4]
 800e316:	681b      	ldr	r3, [r3, #0]
 800e318:	430a      	orrs	r2, r1
 800e31a:	605a      	str	r2, [r3, #4]
 800e31c:	687b      	ldr	r3, [r7, #4]
 800e31e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e320:	f003 0310 	and.w	r3, r3, #16
 800e324:	2b00      	cmp	r3, #0
 800e326:	d00a      	beq.n	800e33e <UART_AdvFeatureConfig+0xb2>
 800e328:	687b      	ldr	r3, [r7, #4]
 800e32a:	681b      	ldr	r3, [r3, #0]
 800e32c:	689b      	ldr	r3, [r3, #8]
 800e32e:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 800e332:	687b      	ldr	r3, [r7, #4]
 800e334:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800e336:	687b      	ldr	r3, [r7, #4]
 800e338:	681b      	ldr	r3, [r3, #0]
 800e33a:	430a      	orrs	r2, r1
 800e33c:	609a      	str	r2, [r3, #8]
 800e33e:	687b      	ldr	r3, [r7, #4]
 800e340:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e342:	f003 0320 	and.w	r3, r3, #32
 800e346:	2b00      	cmp	r3, #0
 800e348:	d00a      	beq.n	800e360 <UART_AdvFeatureConfig+0xd4>
 800e34a:	687b      	ldr	r3, [r7, #4]
 800e34c:	681b      	ldr	r3, [r3, #0]
 800e34e:	689b      	ldr	r3, [r3, #8]
 800e350:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 800e354:	687b      	ldr	r3, [r7, #4]
 800e356:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800e358:	687b      	ldr	r3, [r7, #4]
 800e35a:	681b      	ldr	r3, [r3, #0]
 800e35c:	430a      	orrs	r2, r1
 800e35e:	609a      	str	r2, [r3, #8]
 800e360:	687b      	ldr	r3, [r7, #4]
 800e362:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e364:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800e368:	2b00      	cmp	r3, #0
 800e36a:	d01a      	beq.n	800e3a2 <UART_AdvFeatureConfig+0x116>
 800e36c:	687b      	ldr	r3, [r7, #4]
 800e36e:	681b      	ldr	r3, [r3, #0]
 800e370:	685b      	ldr	r3, [r3, #4]
 800e372:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800e376:	687b      	ldr	r3, [r7, #4]
 800e378:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800e37a:	687b      	ldr	r3, [r7, #4]
 800e37c:	681b      	ldr	r3, [r3, #0]
 800e37e:	430a      	orrs	r2, r1
 800e380:	605a      	str	r2, [r3, #4]
 800e382:	687b      	ldr	r3, [r7, #4]
 800e384:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e386:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800e38a:	d10a      	bne.n	800e3a2 <UART_AdvFeatureConfig+0x116>
 800e38c:	687b      	ldr	r3, [r7, #4]
 800e38e:	681b      	ldr	r3, [r3, #0]
 800e390:	685b      	ldr	r3, [r3, #4]
 800e392:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800e396:	687b      	ldr	r3, [r7, #4]
 800e398:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800e39a:	687b      	ldr	r3, [r7, #4]
 800e39c:	681b      	ldr	r3, [r3, #0]
 800e39e:	430a      	orrs	r2, r1
 800e3a0:	605a      	str	r2, [r3, #4]
 800e3a2:	687b      	ldr	r3, [r7, #4]
 800e3a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e3a6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800e3aa:	2b00      	cmp	r3, #0
 800e3ac:	d00a      	beq.n	800e3c4 <UART_AdvFeatureConfig+0x138>
 800e3ae:	687b      	ldr	r3, [r7, #4]
 800e3b0:	681b      	ldr	r3, [r3, #0]
 800e3b2:	685b      	ldr	r3, [r3, #4]
 800e3b4:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 800e3b8:	687b      	ldr	r3, [r7, #4]
 800e3ba:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800e3bc:	687b      	ldr	r3, [r7, #4]
 800e3be:	681b      	ldr	r3, [r3, #0]
 800e3c0:	430a      	orrs	r2, r1
 800e3c2:	605a      	str	r2, [r3, #4]
 800e3c4:	bf00      	nop
 800e3c6:	370c      	adds	r7, #12
 800e3c8:	46bd      	mov	sp, r7
 800e3ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3ce:	4770      	bx	lr

0800e3d0 <UART_CheckIdleState>:
 800e3d0:	b580      	push	{r7, lr}
 800e3d2:	b086      	sub	sp, #24
 800e3d4:	af02      	add	r7, sp, #8
 800e3d6:	6078      	str	r0, [r7, #4]
 800e3d8:	687b      	ldr	r3, [r7, #4]
 800e3da:	2200      	movs	r2, #0
 800e3dc:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e3e0:	f7f9 f8c6 	bl	8007570 <HAL_GetTick>
 800e3e4:	60f8      	str	r0, [r7, #12]
 800e3e6:	687b      	ldr	r3, [r7, #4]
 800e3e8:	681b      	ldr	r3, [r3, #0]
 800e3ea:	681b      	ldr	r3, [r3, #0]
 800e3ec:	f003 0308 	and.w	r3, r3, #8
 800e3f0:	2b08      	cmp	r3, #8
 800e3f2:	d10e      	bne.n	800e412 <UART_CheckIdleState+0x42>
 800e3f4:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800e3f8:	9300      	str	r3, [sp, #0]
 800e3fa:	68fb      	ldr	r3, [r7, #12]
 800e3fc:	2200      	movs	r2, #0
 800e3fe:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800e402:	6878      	ldr	r0, [r7, #4]
 800e404:	f000 f82f 	bl	800e466 <UART_WaitOnFlagUntilTimeout>
 800e408:	4603      	mov	r3, r0
 800e40a:	2b00      	cmp	r3, #0
 800e40c:	d001      	beq.n	800e412 <UART_CheckIdleState+0x42>
 800e40e:	2303      	movs	r3, #3
 800e410:	e025      	b.n	800e45e <UART_CheckIdleState+0x8e>
 800e412:	687b      	ldr	r3, [r7, #4]
 800e414:	681b      	ldr	r3, [r3, #0]
 800e416:	681b      	ldr	r3, [r3, #0]
 800e418:	f003 0304 	and.w	r3, r3, #4
 800e41c:	2b04      	cmp	r3, #4
 800e41e:	d10e      	bne.n	800e43e <UART_CheckIdleState+0x6e>
 800e420:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800e424:	9300      	str	r3, [sp, #0]
 800e426:	68fb      	ldr	r3, [r7, #12]
 800e428:	2200      	movs	r2, #0
 800e42a:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800e42e:	6878      	ldr	r0, [r7, #4]
 800e430:	f000 f819 	bl	800e466 <UART_WaitOnFlagUntilTimeout>
 800e434:	4603      	mov	r3, r0
 800e436:	2b00      	cmp	r3, #0
 800e438:	d001      	beq.n	800e43e <UART_CheckIdleState+0x6e>
 800e43a:	2303      	movs	r3, #3
 800e43c:	e00f      	b.n	800e45e <UART_CheckIdleState+0x8e>
 800e43e:	687b      	ldr	r3, [r7, #4]
 800e440:	2220      	movs	r2, #32
 800e442:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800e446:	687b      	ldr	r3, [r7, #4]
 800e448:	2220      	movs	r2, #32
 800e44a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800e44e:	687b      	ldr	r3, [r7, #4]
 800e450:	2200      	movs	r2, #0
 800e452:	66da      	str	r2, [r3, #108]	; 0x6c
 800e454:	687b      	ldr	r3, [r7, #4]
 800e456:	2200      	movs	r2, #0
 800e458:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800e45c:	2300      	movs	r3, #0
 800e45e:	4618      	mov	r0, r3
 800e460:	3710      	adds	r7, #16
 800e462:	46bd      	mov	sp, r7
 800e464:	bd80      	pop	{r7, pc}

0800e466 <UART_WaitOnFlagUntilTimeout>:
 800e466:	b580      	push	{r7, lr}
 800e468:	b09c      	sub	sp, #112	; 0x70
 800e46a:	af00      	add	r7, sp, #0
 800e46c:	60f8      	str	r0, [r7, #12]
 800e46e:	60b9      	str	r1, [r7, #8]
 800e470:	603b      	str	r3, [r7, #0]
 800e472:	4613      	mov	r3, r2
 800e474:	71fb      	strb	r3, [r7, #7]
 800e476:	e0a9      	b.n	800e5cc <UART_WaitOnFlagUntilTimeout+0x166>
 800e478:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800e47a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e47e:	f000 80a5 	beq.w	800e5cc <UART_WaitOnFlagUntilTimeout+0x166>
 800e482:	f7f9 f875 	bl	8007570 <HAL_GetTick>
 800e486:	4602      	mov	r2, r0
 800e488:	683b      	ldr	r3, [r7, #0]
 800e48a:	1ad3      	subs	r3, r2, r3
 800e48c:	6fba      	ldr	r2, [r7, #120]	; 0x78
 800e48e:	429a      	cmp	r2, r3
 800e490:	d302      	bcc.n	800e498 <UART_WaitOnFlagUntilTimeout+0x32>
 800e492:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800e494:	2b00      	cmp	r3, #0
 800e496:	d140      	bne.n	800e51a <UART_WaitOnFlagUntilTimeout+0xb4>
 800e498:	68fb      	ldr	r3, [r7, #12]
 800e49a:	681b      	ldr	r3, [r3, #0]
 800e49c:	653b      	str	r3, [r7, #80]	; 0x50
 800e49e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800e4a0:	e853 3f00 	ldrex	r3, [r3]
 800e4a4:	64fb      	str	r3, [r7, #76]	; 0x4c
 800e4a6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800e4a8:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800e4ac:	667b      	str	r3, [r7, #100]	; 0x64
 800e4ae:	68fb      	ldr	r3, [r7, #12]
 800e4b0:	681b      	ldr	r3, [r3, #0]
 800e4b2:	461a      	mov	r2, r3
 800e4b4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800e4b6:	65fb      	str	r3, [r7, #92]	; 0x5c
 800e4b8:	65ba      	str	r2, [r7, #88]	; 0x58
 800e4ba:	6db9      	ldr	r1, [r7, #88]	; 0x58
 800e4bc:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800e4be:	e841 2300 	strex	r3, r2, [r1]
 800e4c2:	657b      	str	r3, [r7, #84]	; 0x54
 800e4c4:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800e4c6:	2b00      	cmp	r3, #0
 800e4c8:	d1e6      	bne.n	800e498 <UART_WaitOnFlagUntilTimeout+0x32>
 800e4ca:	68fb      	ldr	r3, [r7, #12]
 800e4cc:	681b      	ldr	r3, [r3, #0]
 800e4ce:	3308      	adds	r3, #8
 800e4d0:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e4d2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800e4d4:	e853 3f00 	ldrex	r3, [r3]
 800e4d8:	63bb      	str	r3, [r7, #56]	; 0x38
 800e4da:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e4dc:	f023 0301 	bic.w	r3, r3, #1
 800e4e0:	663b      	str	r3, [r7, #96]	; 0x60
 800e4e2:	68fb      	ldr	r3, [r7, #12]
 800e4e4:	681b      	ldr	r3, [r3, #0]
 800e4e6:	3308      	adds	r3, #8
 800e4e8:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800e4ea:	64ba      	str	r2, [r7, #72]	; 0x48
 800e4ec:	647b      	str	r3, [r7, #68]	; 0x44
 800e4ee:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800e4f0:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800e4f2:	e841 2300 	strex	r3, r2, [r1]
 800e4f6:	643b      	str	r3, [r7, #64]	; 0x40
 800e4f8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e4fa:	2b00      	cmp	r3, #0
 800e4fc:	d1e5      	bne.n	800e4ca <UART_WaitOnFlagUntilTimeout+0x64>
 800e4fe:	68fb      	ldr	r3, [r7, #12]
 800e500:	2220      	movs	r2, #32
 800e502:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800e506:	68fb      	ldr	r3, [r7, #12]
 800e508:	2220      	movs	r2, #32
 800e50a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800e50e:	68fb      	ldr	r3, [r7, #12]
 800e510:	2200      	movs	r2, #0
 800e512:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800e516:	2303      	movs	r3, #3
 800e518:	e069      	b.n	800e5ee <UART_WaitOnFlagUntilTimeout+0x188>
 800e51a:	68fb      	ldr	r3, [r7, #12]
 800e51c:	681b      	ldr	r3, [r3, #0]
 800e51e:	681b      	ldr	r3, [r3, #0]
 800e520:	f003 0304 	and.w	r3, r3, #4
 800e524:	2b00      	cmp	r3, #0
 800e526:	d051      	beq.n	800e5cc <UART_WaitOnFlagUntilTimeout+0x166>
 800e528:	68fb      	ldr	r3, [r7, #12]
 800e52a:	681b      	ldr	r3, [r3, #0]
 800e52c:	69db      	ldr	r3, [r3, #28]
 800e52e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800e532:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800e536:	d149      	bne.n	800e5cc <UART_WaitOnFlagUntilTimeout+0x166>
 800e538:	68fb      	ldr	r3, [r7, #12]
 800e53a:	681b      	ldr	r3, [r3, #0]
 800e53c:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800e540:	621a      	str	r2, [r3, #32]
 800e542:	68fb      	ldr	r3, [r7, #12]
 800e544:	681b      	ldr	r3, [r3, #0]
 800e546:	62bb      	str	r3, [r7, #40]	; 0x28
 800e548:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e54a:	e853 3f00 	ldrex	r3, [r3]
 800e54e:	627b      	str	r3, [r7, #36]	; 0x24
 800e550:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e552:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800e556:	66fb      	str	r3, [r7, #108]	; 0x6c
 800e558:	68fb      	ldr	r3, [r7, #12]
 800e55a:	681b      	ldr	r3, [r3, #0]
 800e55c:	461a      	mov	r2, r3
 800e55e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800e560:	637b      	str	r3, [r7, #52]	; 0x34
 800e562:	633a      	str	r2, [r7, #48]	; 0x30
 800e564:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800e566:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800e568:	e841 2300 	strex	r3, r2, [r1]
 800e56c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800e56e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e570:	2b00      	cmp	r3, #0
 800e572:	d1e6      	bne.n	800e542 <UART_WaitOnFlagUntilTimeout+0xdc>
 800e574:	68fb      	ldr	r3, [r7, #12]
 800e576:	681b      	ldr	r3, [r3, #0]
 800e578:	3308      	adds	r3, #8
 800e57a:	617b      	str	r3, [r7, #20]
 800e57c:	697b      	ldr	r3, [r7, #20]
 800e57e:	e853 3f00 	ldrex	r3, [r3]
 800e582:	613b      	str	r3, [r7, #16]
 800e584:	693b      	ldr	r3, [r7, #16]
 800e586:	f023 0301 	bic.w	r3, r3, #1
 800e58a:	66bb      	str	r3, [r7, #104]	; 0x68
 800e58c:	68fb      	ldr	r3, [r7, #12]
 800e58e:	681b      	ldr	r3, [r3, #0]
 800e590:	3308      	adds	r3, #8
 800e592:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800e594:	623a      	str	r2, [r7, #32]
 800e596:	61fb      	str	r3, [r7, #28]
 800e598:	69f9      	ldr	r1, [r7, #28]
 800e59a:	6a3a      	ldr	r2, [r7, #32]
 800e59c:	e841 2300 	strex	r3, r2, [r1]
 800e5a0:	61bb      	str	r3, [r7, #24]
 800e5a2:	69bb      	ldr	r3, [r7, #24]
 800e5a4:	2b00      	cmp	r3, #0
 800e5a6:	d1e5      	bne.n	800e574 <UART_WaitOnFlagUntilTimeout+0x10e>
 800e5a8:	68fb      	ldr	r3, [r7, #12]
 800e5aa:	2220      	movs	r2, #32
 800e5ac:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800e5b0:	68fb      	ldr	r3, [r7, #12]
 800e5b2:	2220      	movs	r2, #32
 800e5b4:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800e5b8:	68fb      	ldr	r3, [r7, #12]
 800e5ba:	2220      	movs	r2, #32
 800e5bc:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e5c0:	68fb      	ldr	r3, [r7, #12]
 800e5c2:	2200      	movs	r2, #0
 800e5c4:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800e5c8:	2303      	movs	r3, #3
 800e5ca:	e010      	b.n	800e5ee <UART_WaitOnFlagUntilTimeout+0x188>
 800e5cc:	68fb      	ldr	r3, [r7, #12]
 800e5ce:	681b      	ldr	r3, [r3, #0]
 800e5d0:	69da      	ldr	r2, [r3, #28]
 800e5d2:	68bb      	ldr	r3, [r7, #8]
 800e5d4:	4013      	ands	r3, r2
 800e5d6:	68ba      	ldr	r2, [r7, #8]
 800e5d8:	429a      	cmp	r2, r3
 800e5da:	bf0c      	ite	eq
 800e5dc:	2301      	moveq	r3, #1
 800e5de:	2300      	movne	r3, #0
 800e5e0:	b2db      	uxtb	r3, r3
 800e5e2:	461a      	mov	r2, r3
 800e5e4:	79fb      	ldrb	r3, [r7, #7]
 800e5e6:	429a      	cmp	r2, r3
 800e5e8:	f43f af46 	beq.w	800e478 <UART_WaitOnFlagUntilTimeout+0x12>
 800e5ec:	2300      	movs	r3, #0
 800e5ee:	4618      	mov	r0, r3
 800e5f0:	3770      	adds	r7, #112	; 0x70
 800e5f2:	46bd      	mov	sp, r7
 800e5f4:	bd80      	pop	{r7, pc}
	...

0800e5f8 <UART_Start_Receive_IT>:
 800e5f8:	b480      	push	{r7}
 800e5fa:	b0a3      	sub	sp, #140	; 0x8c
 800e5fc:	af00      	add	r7, sp, #0
 800e5fe:	60f8      	str	r0, [r7, #12]
 800e600:	60b9      	str	r1, [r7, #8]
 800e602:	4613      	mov	r3, r2
 800e604:	80fb      	strh	r3, [r7, #6]
 800e606:	68fb      	ldr	r3, [r7, #12]
 800e608:	68ba      	ldr	r2, [r7, #8]
 800e60a:	659a      	str	r2, [r3, #88]	; 0x58
 800e60c:	68fb      	ldr	r3, [r7, #12]
 800e60e:	88fa      	ldrh	r2, [r7, #6]
 800e610:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800e614:	68fb      	ldr	r3, [r7, #12]
 800e616:	88fa      	ldrh	r2, [r7, #6]
 800e618:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800e61c:	68fb      	ldr	r3, [r7, #12]
 800e61e:	2200      	movs	r2, #0
 800e620:	671a      	str	r2, [r3, #112]	; 0x70
 800e622:	68fb      	ldr	r3, [r7, #12]
 800e624:	689b      	ldr	r3, [r3, #8]
 800e626:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800e62a:	d10e      	bne.n	800e64a <UART_Start_Receive_IT+0x52>
 800e62c:	68fb      	ldr	r3, [r7, #12]
 800e62e:	691b      	ldr	r3, [r3, #16]
 800e630:	2b00      	cmp	r3, #0
 800e632:	d105      	bne.n	800e640 <UART_Start_Receive_IT+0x48>
 800e634:	68fb      	ldr	r3, [r7, #12]
 800e636:	f240 12ff 	movw	r2, #511	; 0x1ff
 800e63a:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800e63e:	e02d      	b.n	800e69c <UART_Start_Receive_IT+0xa4>
 800e640:	68fb      	ldr	r3, [r7, #12]
 800e642:	22ff      	movs	r2, #255	; 0xff
 800e644:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800e648:	e028      	b.n	800e69c <UART_Start_Receive_IT+0xa4>
 800e64a:	68fb      	ldr	r3, [r7, #12]
 800e64c:	689b      	ldr	r3, [r3, #8]
 800e64e:	2b00      	cmp	r3, #0
 800e650:	d10d      	bne.n	800e66e <UART_Start_Receive_IT+0x76>
 800e652:	68fb      	ldr	r3, [r7, #12]
 800e654:	691b      	ldr	r3, [r3, #16]
 800e656:	2b00      	cmp	r3, #0
 800e658:	d104      	bne.n	800e664 <UART_Start_Receive_IT+0x6c>
 800e65a:	68fb      	ldr	r3, [r7, #12]
 800e65c:	22ff      	movs	r2, #255	; 0xff
 800e65e:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800e662:	e01b      	b.n	800e69c <UART_Start_Receive_IT+0xa4>
 800e664:	68fb      	ldr	r3, [r7, #12]
 800e666:	227f      	movs	r2, #127	; 0x7f
 800e668:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800e66c:	e016      	b.n	800e69c <UART_Start_Receive_IT+0xa4>
 800e66e:	68fb      	ldr	r3, [r7, #12]
 800e670:	689b      	ldr	r3, [r3, #8]
 800e672:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800e676:	d10d      	bne.n	800e694 <UART_Start_Receive_IT+0x9c>
 800e678:	68fb      	ldr	r3, [r7, #12]
 800e67a:	691b      	ldr	r3, [r3, #16]
 800e67c:	2b00      	cmp	r3, #0
 800e67e:	d104      	bne.n	800e68a <UART_Start_Receive_IT+0x92>
 800e680:	68fb      	ldr	r3, [r7, #12]
 800e682:	227f      	movs	r2, #127	; 0x7f
 800e684:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800e688:	e008      	b.n	800e69c <UART_Start_Receive_IT+0xa4>
 800e68a:	68fb      	ldr	r3, [r7, #12]
 800e68c:	223f      	movs	r2, #63	; 0x3f
 800e68e:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800e692:	e003      	b.n	800e69c <UART_Start_Receive_IT+0xa4>
 800e694:	68fb      	ldr	r3, [r7, #12]
 800e696:	2200      	movs	r2, #0
 800e698:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800e69c:	68fb      	ldr	r3, [r7, #12]
 800e69e:	2200      	movs	r2, #0
 800e6a0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e6a4:	68fb      	ldr	r3, [r7, #12]
 800e6a6:	2222      	movs	r2, #34	; 0x22
 800e6a8:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800e6ac:	68fb      	ldr	r3, [r7, #12]
 800e6ae:	681b      	ldr	r3, [r3, #0]
 800e6b0:	3308      	adds	r3, #8
 800e6b2:	667b      	str	r3, [r7, #100]	; 0x64
 800e6b4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800e6b6:	e853 3f00 	ldrex	r3, [r3]
 800e6ba:	663b      	str	r3, [r7, #96]	; 0x60
 800e6bc:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800e6be:	f043 0301 	orr.w	r3, r3, #1
 800e6c2:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800e6c6:	68fb      	ldr	r3, [r7, #12]
 800e6c8:	681b      	ldr	r3, [r3, #0]
 800e6ca:	3308      	adds	r3, #8
 800e6cc:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 800e6d0:	673a      	str	r2, [r7, #112]	; 0x70
 800e6d2:	66fb      	str	r3, [r7, #108]	; 0x6c
 800e6d4:	6ef9      	ldr	r1, [r7, #108]	; 0x6c
 800e6d6:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 800e6d8:	e841 2300 	strex	r3, r2, [r1]
 800e6dc:	66bb      	str	r3, [r7, #104]	; 0x68
 800e6de:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800e6e0:	2b00      	cmp	r3, #0
 800e6e2:	d1e3      	bne.n	800e6ac <UART_Start_Receive_IT+0xb4>
 800e6e4:	68fb      	ldr	r3, [r7, #12]
 800e6e6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800e6e8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800e6ec:	d153      	bne.n	800e796 <UART_Start_Receive_IT+0x19e>
 800e6ee:	68fb      	ldr	r3, [r7, #12]
 800e6f0:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800e6f4:	88fa      	ldrh	r2, [r7, #6]
 800e6f6:	429a      	cmp	r2, r3
 800e6f8:	d34d      	bcc.n	800e796 <UART_Start_Receive_IT+0x19e>
 800e6fa:	68fb      	ldr	r3, [r7, #12]
 800e6fc:	689b      	ldr	r3, [r3, #8]
 800e6fe:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800e702:	d107      	bne.n	800e714 <UART_Start_Receive_IT+0x11c>
 800e704:	68fb      	ldr	r3, [r7, #12]
 800e706:	691b      	ldr	r3, [r3, #16]
 800e708:	2b00      	cmp	r3, #0
 800e70a:	d103      	bne.n	800e714 <UART_Start_Receive_IT+0x11c>
 800e70c:	68fb      	ldr	r3, [r7, #12]
 800e70e:	4a4b      	ldr	r2, [pc, #300]	; (800e83c <UART_Start_Receive_IT+0x244>)
 800e710:	671a      	str	r2, [r3, #112]	; 0x70
 800e712:	e002      	b.n	800e71a <UART_Start_Receive_IT+0x122>
 800e714:	68fb      	ldr	r3, [r7, #12]
 800e716:	4a4a      	ldr	r2, [pc, #296]	; (800e840 <UART_Start_Receive_IT+0x248>)
 800e718:	671a      	str	r2, [r3, #112]	; 0x70
 800e71a:	68fb      	ldr	r3, [r7, #12]
 800e71c:	2200      	movs	r2, #0
 800e71e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800e722:	68fb      	ldr	r3, [r7, #12]
 800e724:	691b      	ldr	r3, [r3, #16]
 800e726:	2b00      	cmp	r3, #0
 800e728:	d01a      	beq.n	800e760 <UART_Start_Receive_IT+0x168>
 800e72a:	68fb      	ldr	r3, [r7, #12]
 800e72c:	681b      	ldr	r3, [r3, #0]
 800e72e:	653b      	str	r3, [r7, #80]	; 0x50
 800e730:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800e732:	e853 3f00 	ldrex	r3, [r3]
 800e736:	64fb      	str	r3, [r7, #76]	; 0x4c
 800e738:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800e73a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800e73e:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800e742:	68fb      	ldr	r3, [r7, #12]
 800e744:	681b      	ldr	r3, [r3, #0]
 800e746:	461a      	mov	r2, r3
 800e748:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800e74c:	65fb      	str	r3, [r7, #92]	; 0x5c
 800e74e:	65ba      	str	r2, [r7, #88]	; 0x58
 800e750:	6db9      	ldr	r1, [r7, #88]	; 0x58
 800e752:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800e754:	e841 2300 	strex	r3, r2, [r1]
 800e758:	657b      	str	r3, [r7, #84]	; 0x54
 800e75a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800e75c:	2b00      	cmp	r3, #0
 800e75e:	d1e4      	bne.n	800e72a <UART_Start_Receive_IT+0x132>
 800e760:	68fb      	ldr	r3, [r7, #12]
 800e762:	681b      	ldr	r3, [r3, #0]
 800e764:	3308      	adds	r3, #8
 800e766:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e768:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800e76a:	e853 3f00 	ldrex	r3, [r3]
 800e76e:	63bb      	str	r3, [r7, #56]	; 0x38
 800e770:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e772:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800e776:	67fb      	str	r3, [r7, #124]	; 0x7c
 800e778:	68fb      	ldr	r3, [r7, #12]
 800e77a:	681b      	ldr	r3, [r3, #0]
 800e77c:	3308      	adds	r3, #8
 800e77e:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 800e780:	64ba      	str	r2, [r7, #72]	; 0x48
 800e782:	647b      	str	r3, [r7, #68]	; 0x44
 800e784:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800e786:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800e788:	e841 2300 	strex	r3, r2, [r1]
 800e78c:	643b      	str	r3, [r7, #64]	; 0x40
 800e78e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800e790:	2b00      	cmp	r3, #0
 800e792:	d1e5      	bne.n	800e760 <UART_Start_Receive_IT+0x168>
 800e794:	e04a      	b.n	800e82c <UART_Start_Receive_IT+0x234>
 800e796:	68fb      	ldr	r3, [r7, #12]
 800e798:	689b      	ldr	r3, [r3, #8]
 800e79a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800e79e:	d107      	bne.n	800e7b0 <UART_Start_Receive_IT+0x1b8>
 800e7a0:	68fb      	ldr	r3, [r7, #12]
 800e7a2:	691b      	ldr	r3, [r3, #16]
 800e7a4:	2b00      	cmp	r3, #0
 800e7a6:	d103      	bne.n	800e7b0 <UART_Start_Receive_IT+0x1b8>
 800e7a8:	68fb      	ldr	r3, [r7, #12]
 800e7aa:	4a26      	ldr	r2, [pc, #152]	; (800e844 <UART_Start_Receive_IT+0x24c>)
 800e7ac:	671a      	str	r2, [r3, #112]	; 0x70
 800e7ae:	e002      	b.n	800e7b6 <UART_Start_Receive_IT+0x1be>
 800e7b0:	68fb      	ldr	r3, [r7, #12]
 800e7b2:	4a25      	ldr	r2, [pc, #148]	; (800e848 <UART_Start_Receive_IT+0x250>)
 800e7b4:	671a      	str	r2, [r3, #112]	; 0x70
 800e7b6:	68fb      	ldr	r3, [r7, #12]
 800e7b8:	2200      	movs	r2, #0
 800e7ba:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800e7be:	68fb      	ldr	r3, [r7, #12]
 800e7c0:	691b      	ldr	r3, [r3, #16]
 800e7c2:	2b00      	cmp	r3, #0
 800e7c4:	d019      	beq.n	800e7fa <UART_Start_Receive_IT+0x202>
 800e7c6:	68fb      	ldr	r3, [r7, #12]
 800e7c8:	681b      	ldr	r3, [r3, #0]
 800e7ca:	62bb      	str	r3, [r7, #40]	; 0x28
 800e7cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e7ce:	e853 3f00 	ldrex	r3, [r3]
 800e7d2:	627b      	str	r3, [r7, #36]	; 0x24
 800e7d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e7d6:	f443 7390 	orr.w	r3, r3, #288	; 0x120
 800e7da:	677b      	str	r3, [r7, #116]	; 0x74
 800e7dc:	68fb      	ldr	r3, [r7, #12]
 800e7de:	681b      	ldr	r3, [r3, #0]
 800e7e0:	461a      	mov	r2, r3
 800e7e2:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800e7e4:	637b      	str	r3, [r7, #52]	; 0x34
 800e7e6:	633a      	str	r2, [r7, #48]	; 0x30
 800e7e8:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800e7ea:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800e7ec:	e841 2300 	strex	r3, r2, [r1]
 800e7f0:	62fb      	str	r3, [r7, #44]	; 0x2c
 800e7f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e7f4:	2b00      	cmp	r3, #0
 800e7f6:	d1e6      	bne.n	800e7c6 <UART_Start_Receive_IT+0x1ce>
 800e7f8:	e018      	b.n	800e82c <UART_Start_Receive_IT+0x234>
 800e7fa:	68fb      	ldr	r3, [r7, #12]
 800e7fc:	681b      	ldr	r3, [r3, #0]
 800e7fe:	617b      	str	r3, [r7, #20]
 800e800:	697b      	ldr	r3, [r7, #20]
 800e802:	e853 3f00 	ldrex	r3, [r3]
 800e806:	613b      	str	r3, [r7, #16]
 800e808:	693b      	ldr	r3, [r7, #16]
 800e80a:	f043 0320 	orr.w	r3, r3, #32
 800e80e:	67bb      	str	r3, [r7, #120]	; 0x78
 800e810:	68fb      	ldr	r3, [r7, #12]
 800e812:	681b      	ldr	r3, [r3, #0]
 800e814:	461a      	mov	r2, r3
 800e816:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800e818:	623b      	str	r3, [r7, #32]
 800e81a:	61fa      	str	r2, [r7, #28]
 800e81c:	69f9      	ldr	r1, [r7, #28]
 800e81e:	6a3a      	ldr	r2, [r7, #32]
 800e820:	e841 2300 	strex	r3, r2, [r1]
 800e824:	61bb      	str	r3, [r7, #24]
 800e826:	69bb      	ldr	r3, [r7, #24]
 800e828:	2b00      	cmp	r3, #0
 800e82a:	d1e6      	bne.n	800e7fa <UART_Start_Receive_IT+0x202>
 800e82c:	2300      	movs	r3, #0
 800e82e:	4618      	mov	r0, r3
 800e830:	378c      	adds	r7, #140	; 0x8c
 800e832:	46bd      	mov	sp, r7
 800e834:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e838:	4770      	bx	lr
 800e83a:	bf00      	nop
 800e83c:	0800ef55 	.word	0x0800ef55
 800e840:	0800ec5d 	.word	0x0800ec5d
 800e844:	0800eafb 	.word	0x0800eafb
 800e848:	0800e99b 	.word	0x0800e99b

0800e84c <UART_EndRxTransfer>:
 800e84c:	b480      	push	{r7}
 800e84e:	b095      	sub	sp, #84	; 0x54
 800e850:	af00      	add	r7, sp, #0
 800e852:	6078      	str	r0, [r7, #4]
 800e854:	687b      	ldr	r3, [r7, #4]
 800e856:	681b      	ldr	r3, [r3, #0]
 800e858:	637b      	str	r3, [r7, #52]	; 0x34
 800e85a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800e85c:	e853 3f00 	ldrex	r3, [r3]
 800e860:	633b      	str	r3, [r7, #48]	; 0x30
 800e862:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e864:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800e868:	64fb      	str	r3, [r7, #76]	; 0x4c
 800e86a:	687b      	ldr	r3, [r7, #4]
 800e86c:	681b      	ldr	r3, [r3, #0]
 800e86e:	461a      	mov	r2, r3
 800e870:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800e872:	643b      	str	r3, [r7, #64]	; 0x40
 800e874:	63fa      	str	r2, [r7, #60]	; 0x3c
 800e876:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800e878:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800e87a:	e841 2300 	strex	r3, r2, [r1]
 800e87e:	63bb      	str	r3, [r7, #56]	; 0x38
 800e880:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e882:	2b00      	cmp	r3, #0
 800e884:	d1e6      	bne.n	800e854 <UART_EndRxTransfer+0x8>
 800e886:	687b      	ldr	r3, [r7, #4]
 800e888:	681b      	ldr	r3, [r3, #0]
 800e88a:	3308      	adds	r3, #8
 800e88c:	623b      	str	r3, [r7, #32]
 800e88e:	6a3b      	ldr	r3, [r7, #32]
 800e890:	e853 3f00 	ldrex	r3, [r3]
 800e894:	61fb      	str	r3, [r7, #28]
 800e896:	69fa      	ldr	r2, [r7, #28]
 800e898:	4b1e      	ldr	r3, [pc, #120]	; (800e914 <UART_EndRxTransfer+0xc8>)
 800e89a:	4013      	ands	r3, r2
 800e89c:	64bb      	str	r3, [r7, #72]	; 0x48
 800e89e:	687b      	ldr	r3, [r7, #4]
 800e8a0:	681b      	ldr	r3, [r3, #0]
 800e8a2:	3308      	adds	r3, #8
 800e8a4:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800e8a6:	62fa      	str	r2, [r7, #44]	; 0x2c
 800e8a8:	62bb      	str	r3, [r7, #40]	; 0x28
 800e8aa:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800e8ac:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800e8ae:	e841 2300 	strex	r3, r2, [r1]
 800e8b2:	627b      	str	r3, [r7, #36]	; 0x24
 800e8b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e8b6:	2b00      	cmp	r3, #0
 800e8b8:	d1e5      	bne.n	800e886 <UART_EndRxTransfer+0x3a>
 800e8ba:	687b      	ldr	r3, [r7, #4]
 800e8bc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e8be:	2b01      	cmp	r3, #1
 800e8c0:	d118      	bne.n	800e8f4 <UART_EndRxTransfer+0xa8>
 800e8c2:	687b      	ldr	r3, [r7, #4]
 800e8c4:	681b      	ldr	r3, [r3, #0]
 800e8c6:	60fb      	str	r3, [r7, #12]
 800e8c8:	68fb      	ldr	r3, [r7, #12]
 800e8ca:	e853 3f00 	ldrex	r3, [r3]
 800e8ce:	60bb      	str	r3, [r7, #8]
 800e8d0:	68bb      	ldr	r3, [r7, #8]
 800e8d2:	f023 0310 	bic.w	r3, r3, #16
 800e8d6:	647b      	str	r3, [r7, #68]	; 0x44
 800e8d8:	687b      	ldr	r3, [r7, #4]
 800e8da:	681b      	ldr	r3, [r3, #0]
 800e8dc:	461a      	mov	r2, r3
 800e8de:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800e8e0:	61bb      	str	r3, [r7, #24]
 800e8e2:	617a      	str	r2, [r7, #20]
 800e8e4:	6979      	ldr	r1, [r7, #20]
 800e8e6:	69ba      	ldr	r2, [r7, #24]
 800e8e8:	e841 2300 	strex	r3, r2, [r1]
 800e8ec:	613b      	str	r3, [r7, #16]
 800e8ee:	693b      	ldr	r3, [r7, #16]
 800e8f0:	2b00      	cmp	r3, #0
 800e8f2:	d1e6      	bne.n	800e8c2 <UART_EndRxTransfer+0x76>
 800e8f4:	687b      	ldr	r3, [r7, #4]
 800e8f6:	2220      	movs	r2, #32
 800e8f8:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800e8fc:	687b      	ldr	r3, [r7, #4]
 800e8fe:	2200      	movs	r2, #0
 800e900:	66da      	str	r2, [r3, #108]	; 0x6c
 800e902:	687b      	ldr	r3, [r7, #4]
 800e904:	2200      	movs	r2, #0
 800e906:	671a      	str	r2, [r3, #112]	; 0x70
 800e908:	bf00      	nop
 800e90a:	3754      	adds	r7, #84	; 0x54
 800e90c:	46bd      	mov	sp, r7
 800e90e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e912:	4770      	bx	lr
 800e914:	effffffe 	.word	0xeffffffe

0800e918 <UART_DMAAbortOnError>:
 800e918:	b580      	push	{r7, lr}
 800e91a:	b084      	sub	sp, #16
 800e91c:	af00      	add	r7, sp, #0
 800e91e:	6078      	str	r0, [r7, #4]
 800e920:	687b      	ldr	r3, [r7, #4]
 800e922:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e924:	60fb      	str	r3, [r7, #12]
 800e926:	68fb      	ldr	r3, [r7, #12]
 800e928:	2200      	movs	r2, #0
 800e92a:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800e92e:	68fb      	ldr	r3, [r7, #12]
 800e930:	2200      	movs	r2, #0
 800e932:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800e936:	68f8      	ldr	r0, [r7, #12]
 800e938:	f7fe ff2a 	bl	800d790 <HAL_UART_ErrorCallback>
 800e93c:	bf00      	nop
 800e93e:	3710      	adds	r7, #16
 800e940:	46bd      	mov	sp, r7
 800e942:	bd80      	pop	{r7, pc}

0800e944 <UART_EndTransmit_IT>:
 800e944:	b580      	push	{r7, lr}
 800e946:	b088      	sub	sp, #32
 800e948:	af00      	add	r7, sp, #0
 800e94a:	6078      	str	r0, [r7, #4]
 800e94c:	687b      	ldr	r3, [r7, #4]
 800e94e:	681b      	ldr	r3, [r3, #0]
 800e950:	60fb      	str	r3, [r7, #12]
 800e952:	68fb      	ldr	r3, [r7, #12]
 800e954:	e853 3f00 	ldrex	r3, [r3]
 800e958:	60bb      	str	r3, [r7, #8]
 800e95a:	68bb      	ldr	r3, [r7, #8]
 800e95c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e960:	61fb      	str	r3, [r7, #28]
 800e962:	687b      	ldr	r3, [r7, #4]
 800e964:	681b      	ldr	r3, [r3, #0]
 800e966:	461a      	mov	r2, r3
 800e968:	69fb      	ldr	r3, [r7, #28]
 800e96a:	61bb      	str	r3, [r7, #24]
 800e96c:	617a      	str	r2, [r7, #20]
 800e96e:	6979      	ldr	r1, [r7, #20]
 800e970:	69ba      	ldr	r2, [r7, #24]
 800e972:	e841 2300 	strex	r3, r2, [r1]
 800e976:	613b      	str	r3, [r7, #16]
 800e978:	693b      	ldr	r3, [r7, #16]
 800e97a:	2b00      	cmp	r3, #0
 800e97c:	d1e6      	bne.n	800e94c <UART_EndTransmit_IT+0x8>
 800e97e:	687b      	ldr	r3, [r7, #4]
 800e980:	2220      	movs	r2, #32
 800e982:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800e986:	687b      	ldr	r3, [r7, #4]
 800e988:	2200      	movs	r2, #0
 800e98a:	675a      	str	r2, [r3, #116]	; 0x74
 800e98c:	6878      	ldr	r0, [r7, #4]
 800e98e:	f7f5 f9ff 	bl	8003d90 <HAL_UART_TxCpltCallback>
 800e992:	bf00      	nop
 800e994:	3720      	adds	r7, #32
 800e996:	46bd      	mov	sp, r7
 800e998:	bd80      	pop	{r7, pc}

0800e99a <UART_RxISR_8BIT>:
 800e99a:	b580      	push	{r7, lr}
 800e99c:	b096      	sub	sp, #88	; 0x58
 800e99e:	af00      	add	r7, sp, #0
 800e9a0:	6078      	str	r0, [r7, #4]
 800e9a2:	687b      	ldr	r3, [r7, #4]
 800e9a4:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800e9a8:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 800e9ac:	687b      	ldr	r3, [r7, #4]
 800e9ae:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800e9b2:	2b22      	cmp	r3, #34	; 0x22
 800e9b4:	f040 8095 	bne.w	800eae2 <UART_RxISR_8BIT+0x148>
 800e9b8:	687b      	ldr	r3, [r7, #4]
 800e9ba:	681b      	ldr	r3, [r3, #0]
 800e9bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e9be:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
 800e9c2:	f8b7 3054 	ldrh.w	r3, [r7, #84]	; 0x54
 800e9c6:	b2d9      	uxtb	r1, r3
 800e9c8:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 800e9cc:	b2da      	uxtb	r2, r3
 800e9ce:	687b      	ldr	r3, [r7, #4]
 800e9d0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800e9d2:	400a      	ands	r2, r1
 800e9d4:	b2d2      	uxtb	r2, r2
 800e9d6:	701a      	strb	r2, [r3, #0]
 800e9d8:	687b      	ldr	r3, [r7, #4]
 800e9da:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800e9dc:	1c5a      	adds	r2, r3, #1
 800e9de:	687b      	ldr	r3, [r7, #4]
 800e9e0:	659a      	str	r2, [r3, #88]	; 0x58
 800e9e2:	687b      	ldr	r3, [r7, #4]
 800e9e4:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e9e8:	b29b      	uxth	r3, r3
 800e9ea:	3b01      	subs	r3, #1
 800e9ec:	b29a      	uxth	r2, r3
 800e9ee:	687b      	ldr	r3, [r7, #4]
 800e9f0:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800e9f4:	687b      	ldr	r3, [r7, #4]
 800e9f6:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e9fa:	b29b      	uxth	r3, r3
 800e9fc:	2b00      	cmp	r3, #0
 800e9fe:	d178      	bne.n	800eaf2 <UART_RxISR_8BIT+0x158>
 800ea00:	687b      	ldr	r3, [r7, #4]
 800ea02:	681b      	ldr	r3, [r3, #0]
 800ea04:	63bb      	str	r3, [r7, #56]	; 0x38
 800ea06:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ea08:	e853 3f00 	ldrex	r3, [r3]
 800ea0c:	637b      	str	r3, [r7, #52]	; 0x34
 800ea0e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ea10:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800ea14:	653b      	str	r3, [r7, #80]	; 0x50
 800ea16:	687b      	ldr	r3, [r7, #4]
 800ea18:	681b      	ldr	r3, [r3, #0]
 800ea1a:	461a      	mov	r2, r3
 800ea1c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800ea1e:	647b      	str	r3, [r7, #68]	; 0x44
 800ea20:	643a      	str	r2, [r7, #64]	; 0x40
 800ea22:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800ea24:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800ea26:	e841 2300 	strex	r3, r2, [r1]
 800ea2a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ea2c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ea2e:	2b00      	cmp	r3, #0
 800ea30:	d1e6      	bne.n	800ea00 <UART_RxISR_8BIT+0x66>
 800ea32:	687b      	ldr	r3, [r7, #4]
 800ea34:	681b      	ldr	r3, [r3, #0]
 800ea36:	3308      	adds	r3, #8
 800ea38:	627b      	str	r3, [r7, #36]	; 0x24
 800ea3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ea3c:	e853 3f00 	ldrex	r3, [r3]
 800ea40:	623b      	str	r3, [r7, #32]
 800ea42:	6a3b      	ldr	r3, [r7, #32]
 800ea44:	f023 0301 	bic.w	r3, r3, #1
 800ea48:	64fb      	str	r3, [r7, #76]	; 0x4c
 800ea4a:	687b      	ldr	r3, [r7, #4]
 800ea4c:	681b      	ldr	r3, [r3, #0]
 800ea4e:	3308      	adds	r3, #8
 800ea50:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800ea52:	633a      	str	r2, [r7, #48]	; 0x30
 800ea54:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ea56:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800ea58:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800ea5a:	e841 2300 	strex	r3, r2, [r1]
 800ea5e:	62bb      	str	r3, [r7, #40]	; 0x28
 800ea60:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ea62:	2b00      	cmp	r3, #0
 800ea64:	d1e5      	bne.n	800ea32 <UART_RxISR_8BIT+0x98>
 800ea66:	687b      	ldr	r3, [r7, #4]
 800ea68:	2220      	movs	r2, #32
 800ea6a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800ea6e:	687b      	ldr	r3, [r7, #4]
 800ea70:	2200      	movs	r2, #0
 800ea72:	671a      	str	r2, [r3, #112]	; 0x70
 800ea74:	687b      	ldr	r3, [r7, #4]
 800ea76:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800ea78:	2b01      	cmp	r3, #1
 800ea7a:	d12e      	bne.n	800eada <UART_RxISR_8BIT+0x140>
 800ea7c:	687b      	ldr	r3, [r7, #4]
 800ea7e:	2200      	movs	r2, #0
 800ea80:	66da      	str	r2, [r3, #108]	; 0x6c
 800ea82:	687b      	ldr	r3, [r7, #4]
 800ea84:	681b      	ldr	r3, [r3, #0]
 800ea86:	613b      	str	r3, [r7, #16]
 800ea88:	693b      	ldr	r3, [r7, #16]
 800ea8a:	e853 3f00 	ldrex	r3, [r3]
 800ea8e:	60fb      	str	r3, [r7, #12]
 800ea90:	68fb      	ldr	r3, [r7, #12]
 800ea92:	f023 0310 	bic.w	r3, r3, #16
 800ea96:	64bb      	str	r3, [r7, #72]	; 0x48
 800ea98:	687b      	ldr	r3, [r7, #4]
 800ea9a:	681b      	ldr	r3, [r3, #0]
 800ea9c:	461a      	mov	r2, r3
 800ea9e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800eaa0:	61fb      	str	r3, [r7, #28]
 800eaa2:	61ba      	str	r2, [r7, #24]
 800eaa4:	69b9      	ldr	r1, [r7, #24]
 800eaa6:	69fa      	ldr	r2, [r7, #28]
 800eaa8:	e841 2300 	strex	r3, r2, [r1]
 800eaac:	617b      	str	r3, [r7, #20]
 800eaae:	697b      	ldr	r3, [r7, #20]
 800eab0:	2b00      	cmp	r3, #0
 800eab2:	d1e6      	bne.n	800ea82 <UART_RxISR_8BIT+0xe8>
 800eab4:	687b      	ldr	r3, [r7, #4]
 800eab6:	681b      	ldr	r3, [r3, #0]
 800eab8:	69db      	ldr	r3, [r3, #28]
 800eaba:	f003 0310 	and.w	r3, r3, #16
 800eabe:	2b10      	cmp	r3, #16
 800eac0:	d103      	bne.n	800eaca <UART_RxISR_8BIT+0x130>
 800eac2:	687b      	ldr	r3, [r7, #4]
 800eac4:	681b      	ldr	r3, [r3, #0]
 800eac6:	2210      	movs	r2, #16
 800eac8:	621a      	str	r2, [r3, #32]
 800eaca:	687b      	ldr	r3, [r7, #4]
 800eacc:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800ead0:	4619      	mov	r1, r3
 800ead2:	6878      	ldr	r0, [r7, #4]
 800ead4:	f7fe fe66 	bl	800d7a4 <HAL_UARTEx_RxEventCallback>
 800ead8:	e00b      	b.n	800eaf2 <UART_RxISR_8BIT+0x158>
 800eada:	6878      	ldr	r0, [r7, #4]
 800eadc:	f7f5 f8e4 	bl	8003ca8 <HAL_UART_RxCpltCallback>
 800eae0:	e007      	b.n	800eaf2 <UART_RxISR_8BIT+0x158>
 800eae2:	687b      	ldr	r3, [r7, #4]
 800eae4:	681b      	ldr	r3, [r3, #0]
 800eae6:	699a      	ldr	r2, [r3, #24]
 800eae8:	687b      	ldr	r3, [r7, #4]
 800eaea:	681b      	ldr	r3, [r3, #0]
 800eaec:	f042 0208 	orr.w	r2, r2, #8
 800eaf0:	619a      	str	r2, [r3, #24]
 800eaf2:	bf00      	nop
 800eaf4:	3758      	adds	r7, #88	; 0x58
 800eaf6:	46bd      	mov	sp, r7
 800eaf8:	bd80      	pop	{r7, pc}

0800eafa <UART_RxISR_16BIT>:
 800eafa:	b580      	push	{r7, lr}
 800eafc:	b096      	sub	sp, #88	; 0x58
 800eafe:	af00      	add	r7, sp, #0
 800eb00:	6078      	str	r0, [r7, #4]
 800eb02:	687b      	ldr	r3, [r7, #4]
 800eb04:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800eb08:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 800eb0c:	687b      	ldr	r3, [r7, #4]
 800eb0e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800eb12:	2b22      	cmp	r3, #34	; 0x22
 800eb14:	f040 8095 	bne.w	800ec42 <UART_RxISR_16BIT+0x148>
 800eb18:	687b      	ldr	r3, [r7, #4]
 800eb1a:	681b      	ldr	r3, [r3, #0]
 800eb1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800eb1e:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
 800eb22:	687b      	ldr	r3, [r7, #4]
 800eb24:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800eb26:	653b      	str	r3, [r7, #80]	; 0x50
 800eb28:	f8b7 2054 	ldrh.w	r2, [r7, #84]	; 0x54
 800eb2c:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 800eb30:	4013      	ands	r3, r2
 800eb32:	b29a      	uxth	r2, r3
 800eb34:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800eb36:	801a      	strh	r2, [r3, #0]
 800eb38:	687b      	ldr	r3, [r7, #4]
 800eb3a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800eb3c:	1c9a      	adds	r2, r3, #2
 800eb3e:	687b      	ldr	r3, [r7, #4]
 800eb40:	659a      	str	r2, [r3, #88]	; 0x58
 800eb42:	687b      	ldr	r3, [r7, #4]
 800eb44:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800eb48:	b29b      	uxth	r3, r3
 800eb4a:	3b01      	subs	r3, #1
 800eb4c:	b29a      	uxth	r2, r3
 800eb4e:	687b      	ldr	r3, [r7, #4]
 800eb50:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800eb54:	687b      	ldr	r3, [r7, #4]
 800eb56:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800eb5a:	b29b      	uxth	r3, r3
 800eb5c:	2b00      	cmp	r3, #0
 800eb5e:	d178      	bne.n	800ec52 <UART_RxISR_16BIT+0x158>
 800eb60:	687b      	ldr	r3, [r7, #4]
 800eb62:	681b      	ldr	r3, [r3, #0]
 800eb64:	637b      	str	r3, [r7, #52]	; 0x34
 800eb66:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800eb68:	e853 3f00 	ldrex	r3, [r3]
 800eb6c:	633b      	str	r3, [r7, #48]	; 0x30
 800eb6e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800eb70:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800eb74:	64fb      	str	r3, [r7, #76]	; 0x4c
 800eb76:	687b      	ldr	r3, [r7, #4]
 800eb78:	681b      	ldr	r3, [r3, #0]
 800eb7a:	461a      	mov	r2, r3
 800eb7c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800eb7e:	643b      	str	r3, [r7, #64]	; 0x40
 800eb80:	63fa      	str	r2, [r7, #60]	; 0x3c
 800eb82:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800eb84:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800eb86:	e841 2300 	strex	r3, r2, [r1]
 800eb8a:	63bb      	str	r3, [r7, #56]	; 0x38
 800eb8c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800eb8e:	2b00      	cmp	r3, #0
 800eb90:	d1e6      	bne.n	800eb60 <UART_RxISR_16BIT+0x66>
 800eb92:	687b      	ldr	r3, [r7, #4]
 800eb94:	681b      	ldr	r3, [r3, #0]
 800eb96:	3308      	adds	r3, #8
 800eb98:	623b      	str	r3, [r7, #32]
 800eb9a:	6a3b      	ldr	r3, [r7, #32]
 800eb9c:	e853 3f00 	ldrex	r3, [r3]
 800eba0:	61fb      	str	r3, [r7, #28]
 800eba2:	69fb      	ldr	r3, [r7, #28]
 800eba4:	f023 0301 	bic.w	r3, r3, #1
 800eba8:	64bb      	str	r3, [r7, #72]	; 0x48
 800ebaa:	687b      	ldr	r3, [r7, #4]
 800ebac:	681b      	ldr	r3, [r3, #0]
 800ebae:	3308      	adds	r3, #8
 800ebb0:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800ebb2:	62fa      	str	r2, [r7, #44]	; 0x2c
 800ebb4:	62bb      	str	r3, [r7, #40]	; 0x28
 800ebb6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800ebb8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800ebba:	e841 2300 	strex	r3, r2, [r1]
 800ebbe:	627b      	str	r3, [r7, #36]	; 0x24
 800ebc0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ebc2:	2b00      	cmp	r3, #0
 800ebc4:	d1e5      	bne.n	800eb92 <UART_RxISR_16BIT+0x98>
 800ebc6:	687b      	ldr	r3, [r7, #4]
 800ebc8:	2220      	movs	r2, #32
 800ebca:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800ebce:	687b      	ldr	r3, [r7, #4]
 800ebd0:	2200      	movs	r2, #0
 800ebd2:	671a      	str	r2, [r3, #112]	; 0x70
 800ebd4:	687b      	ldr	r3, [r7, #4]
 800ebd6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800ebd8:	2b01      	cmp	r3, #1
 800ebda:	d12e      	bne.n	800ec3a <UART_RxISR_16BIT+0x140>
 800ebdc:	687b      	ldr	r3, [r7, #4]
 800ebde:	2200      	movs	r2, #0
 800ebe0:	66da      	str	r2, [r3, #108]	; 0x6c
 800ebe2:	687b      	ldr	r3, [r7, #4]
 800ebe4:	681b      	ldr	r3, [r3, #0]
 800ebe6:	60fb      	str	r3, [r7, #12]
 800ebe8:	68fb      	ldr	r3, [r7, #12]
 800ebea:	e853 3f00 	ldrex	r3, [r3]
 800ebee:	60bb      	str	r3, [r7, #8]
 800ebf0:	68bb      	ldr	r3, [r7, #8]
 800ebf2:	f023 0310 	bic.w	r3, r3, #16
 800ebf6:	647b      	str	r3, [r7, #68]	; 0x44
 800ebf8:	687b      	ldr	r3, [r7, #4]
 800ebfa:	681b      	ldr	r3, [r3, #0]
 800ebfc:	461a      	mov	r2, r3
 800ebfe:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800ec00:	61bb      	str	r3, [r7, #24]
 800ec02:	617a      	str	r2, [r7, #20]
 800ec04:	6979      	ldr	r1, [r7, #20]
 800ec06:	69ba      	ldr	r2, [r7, #24]
 800ec08:	e841 2300 	strex	r3, r2, [r1]
 800ec0c:	613b      	str	r3, [r7, #16]
 800ec0e:	693b      	ldr	r3, [r7, #16]
 800ec10:	2b00      	cmp	r3, #0
 800ec12:	d1e6      	bne.n	800ebe2 <UART_RxISR_16BIT+0xe8>
 800ec14:	687b      	ldr	r3, [r7, #4]
 800ec16:	681b      	ldr	r3, [r3, #0]
 800ec18:	69db      	ldr	r3, [r3, #28]
 800ec1a:	f003 0310 	and.w	r3, r3, #16
 800ec1e:	2b10      	cmp	r3, #16
 800ec20:	d103      	bne.n	800ec2a <UART_RxISR_16BIT+0x130>
 800ec22:	687b      	ldr	r3, [r7, #4]
 800ec24:	681b      	ldr	r3, [r3, #0]
 800ec26:	2210      	movs	r2, #16
 800ec28:	621a      	str	r2, [r3, #32]
 800ec2a:	687b      	ldr	r3, [r7, #4]
 800ec2c:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800ec30:	4619      	mov	r1, r3
 800ec32:	6878      	ldr	r0, [r7, #4]
 800ec34:	f7fe fdb6 	bl	800d7a4 <HAL_UARTEx_RxEventCallback>
 800ec38:	e00b      	b.n	800ec52 <UART_RxISR_16BIT+0x158>
 800ec3a:	6878      	ldr	r0, [r7, #4]
 800ec3c:	f7f5 f834 	bl	8003ca8 <HAL_UART_RxCpltCallback>
 800ec40:	e007      	b.n	800ec52 <UART_RxISR_16BIT+0x158>
 800ec42:	687b      	ldr	r3, [r7, #4]
 800ec44:	681b      	ldr	r3, [r3, #0]
 800ec46:	699a      	ldr	r2, [r3, #24]
 800ec48:	687b      	ldr	r3, [r7, #4]
 800ec4a:	681b      	ldr	r3, [r3, #0]
 800ec4c:	f042 0208 	orr.w	r2, r2, #8
 800ec50:	619a      	str	r2, [r3, #24]
 800ec52:	bf00      	nop
 800ec54:	3758      	adds	r7, #88	; 0x58
 800ec56:	46bd      	mov	sp, r7
 800ec58:	bd80      	pop	{r7, pc}
	...

0800ec5c <UART_RxISR_8BIT_FIFOEN>:
 800ec5c:	b580      	push	{r7, lr}
 800ec5e:	b0a6      	sub	sp, #152	; 0x98
 800ec60:	af00      	add	r7, sp, #0
 800ec62:	6078      	str	r0, [r7, #4]
 800ec64:	687b      	ldr	r3, [r7, #4]
 800ec66:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800ec6a:	f8a7 3092 	strh.w	r3, [r7, #146]	; 0x92
 800ec6e:	687b      	ldr	r3, [r7, #4]
 800ec70:	681b      	ldr	r3, [r3, #0]
 800ec72:	69db      	ldr	r3, [r3, #28]
 800ec74:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800ec78:	687b      	ldr	r3, [r7, #4]
 800ec7a:	681b      	ldr	r3, [r3, #0]
 800ec7c:	681b      	ldr	r3, [r3, #0]
 800ec7e:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800ec82:	687b      	ldr	r3, [r7, #4]
 800ec84:	681b      	ldr	r3, [r3, #0]
 800ec86:	689b      	ldr	r3, [r3, #8]
 800ec88:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800ec8c:	687b      	ldr	r3, [r7, #4]
 800ec8e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800ec92:	2b22      	cmp	r3, #34	; 0x22
 800ec94:	f040 814d 	bne.w	800ef32 <UART_RxISR_8BIT_FIFOEN+0x2d6>
 800ec98:	687b      	ldr	r3, [r7, #4]
 800ec9a:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800ec9e:	f8a7 3086 	strh.w	r3, [r7, #134]	; 0x86
 800eca2:	e0f4      	b.n	800ee8e <UART_RxISR_8BIT_FIFOEN+0x232>
 800eca4:	687b      	ldr	r3, [r7, #4]
 800eca6:	681b      	ldr	r3, [r3, #0]
 800eca8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ecaa:	f8a7 3084 	strh.w	r3, [r7, #132]	; 0x84
 800ecae:	f8b7 3084 	ldrh.w	r3, [r7, #132]	; 0x84
 800ecb2:	b2d9      	uxtb	r1, r3
 800ecb4:	f8b7 3092 	ldrh.w	r3, [r7, #146]	; 0x92
 800ecb8:	b2da      	uxtb	r2, r3
 800ecba:	687b      	ldr	r3, [r7, #4]
 800ecbc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800ecbe:	400a      	ands	r2, r1
 800ecc0:	b2d2      	uxtb	r2, r2
 800ecc2:	701a      	strb	r2, [r3, #0]
 800ecc4:	687b      	ldr	r3, [r7, #4]
 800ecc6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800ecc8:	1c5a      	adds	r2, r3, #1
 800ecca:	687b      	ldr	r3, [r7, #4]
 800eccc:	659a      	str	r2, [r3, #88]	; 0x58
 800ecce:	687b      	ldr	r3, [r7, #4]
 800ecd0:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800ecd4:	b29b      	uxth	r3, r3
 800ecd6:	3b01      	subs	r3, #1
 800ecd8:	b29a      	uxth	r2, r3
 800ecda:	687b      	ldr	r3, [r7, #4]
 800ecdc:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800ece0:	687b      	ldr	r3, [r7, #4]
 800ece2:	681b      	ldr	r3, [r3, #0]
 800ece4:	69db      	ldr	r3, [r3, #28]
 800ece6:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800ecea:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800ecee:	f003 0307 	and.w	r3, r3, #7
 800ecf2:	2b00      	cmp	r3, #0
 800ecf4:	d053      	beq.n	800ed9e <UART_RxISR_8BIT_FIFOEN+0x142>
 800ecf6:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800ecfa:	f003 0301 	and.w	r3, r3, #1
 800ecfe:	2b00      	cmp	r3, #0
 800ed00:	d011      	beq.n	800ed26 <UART_RxISR_8BIT_FIFOEN+0xca>
 800ed02:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800ed06:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ed0a:	2b00      	cmp	r3, #0
 800ed0c:	d00b      	beq.n	800ed26 <UART_RxISR_8BIT_FIFOEN+0xca>
 800ed0e:	687b      	ldr	r3, [r7, #4]
 800ed10:	681b      	ldr	r3, [r3, #0]
 800ed12:	2201      	movs	r2, #1
 800ed14:	621a      	str	r2, [r3, #32]
 800ed16:	687b      	ldr	r3, [r7, #4]
 800ed18:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800ed1c:	f043 0201 	orr.w	r2, r3, #1
 800ed20:	687b      	ldr	r3, [r7, #4]
 800ed22:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800ed26:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800ed2a:	f003 0302 	and.w	r3, r3, #2
 800ed2e:	2b00      	cmp	r3, #0
 800ed30:	d011      	beq.n	800ed56 <UART_RxISR_8BIT_FIFOEN+0xfa>
 800ed32:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800ed36:	f003 0301 	and.w	r3, r3, #1
 800ed3a:	2b00      	cmp	r3, #0
 800ed3c:	d00b      	beq.n	800ed56 <UART_RxISR_8BIT_FIFOEN+0xfa>
 800ed3e:	687b      	ldr	r3, [r7, #4]
 800ed40:	681b      	ldr	r3, [r3, #0]
 800ed42:	2202      	movs	r2, #2
 800ed44:	621a      	str	r2, [r3, #32]
 800ed46:	687b      	ldr	r3, [r7, #4]
 800ed48:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800ed4c:	f043 0204 	orr.w	r2, r3, #4
 800ed50:	687b      	ldr	r3, [r7, #4]
 800ed52:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800ed56:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800ed5a:	f003 0304 	and.w	r3, r3, #4
 800ed5e:	2b00      	cmp	r3, #0
 800ed60:	d011      	beq.n	800ed86 <UART_RxISR_8BIT_FIFOEN+0x12a>
 800ed62:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800ed66:	f003 0301 	and.w	r3, r3, #1
 800ed6a:	2b00      	cmp	r3, #0
 800ed6c:	d00b      	beq.n	800ed86 <UART_RxISR_8BIT_FIFOEN+0x12a>
 800ed6e:	687b      	ldr	r3, [r7, #4]
 800ed70:	681b      	ldr	r3, [r3, #0]
 800ed72:	2204      	movs	r2, #4
 800ed74:	621a      	str	r2, [r3, #32]
 800ed76:	687b      	ldr	r3, [r7, #4]
 800ed78:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800ed7c:	f043 0202 	orr.w	r2, r3, #2
 800ed80:	687b      	ldr	r3, [r7, #4]
 800ed82:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800ed86:	687b      	ldr	r3, [r7, #4]
 800ed88:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800ed8c:	2b00      	cmp	r3, #0
 800ed8e:	d006      	beq.n	800ed9e <UART_RxISR_8BIT_FIFOEN+0x142>
 800ed90:	6878      	ldr	r0, [r7, #4]
 800ed92:	f7fe fcfd 	bl	800d790 <HAL_UART_ErrorCallback>
 800ed96:	687b      	ldr	r3, [r7, #4]
 800ed98:	2200      	movs	r2, #0
 800ed9a:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800ed9e:	687b      	ldr	r3, [r7, #4]
 800eda0:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800eda4:	b29b      	uxth	r3, r3
 800eda6:	2b00      	cmp	r3, #0
 800eda8:	d171      	bne.n	800ee8e <UART_RxISR_8BIT_FIFOEN+0x232>
 800edaa:	687b      	ldr	r3, [r7, #4]
 800edac:	681b      	ldr	r3, [r3, #0]
 800edae:	65fb      	str	r3, [r7, #92]	; 0x5c
 800edb0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800edb2:	e853 3f00 	ldrex	r3, [r3]
 800edb6:	65bb      	str	r3, [r7, #88]	; 0x58
 800edb8:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800edba:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800edbe:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800edc2:	687b      	ldr	r3, [r7, #4]
 800edc4:	681b      	ldr	r3, [r3, #0]
 800edc6:	461a      	mov	r2, r3
 800edc8:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800edcc:	66bb      	str	r3, [r7, #104]	; 0x68
 800edce:	667a      	str	r2, [r7, #100]	; 0x64
 800edd0:	6e79      	ldr	r1, [r7, #100]	; 0x64
 800edd2:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800edd4:	e841 2300 	strex	r3, r2, [r1]
 800edd8:	663b      	str	r3, [r7, #96]	; 0x60
 800edda:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800eddc:	2b00      	cmp	r3, #0
 800edde:	d1e4      	bne.n	800edaa <UART_RxISR_8BIT_FIFOEN+0x14e>
 800ede0:	687b      	ldr	r3, [r7, #4]
 800ede2:	681b      	ldr	r3, [r3, #0]
 800ede4:	3308      	adds	r3, #8
 800ede6:	64bb      	str	r3, [r7, #72]	; 0x48
 800ede8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800edea:	e853 3f00 	ldrex	r3, [r3]
 800edee:	647b      	str	r3, [r7, #68]	; 0x44
 800edf0:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800edf2:	4b56      	ldr	r3, [pc, #344]	; (800ef4c <UART_RxISR_8BIT_FIFOEN+0x2f0>)
 800edf4:	4013      	ands	r3, r2
 800edf6:	67fb      	str	r3, [r7, #124]	; 0x7c
 800edf8:	687b      	ldr	r3, [r7, #4]
 800edfa:	681b      	ldr	r3, [r3, #0]
 800edfc:	3308      	adds	r3, #8
 800edfe:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 800ee00:	657a      	str	r2, [r7, #84]	; 0x54
 800ee02:	653b      	str	r3, [r7, #80]	; 0x50
 800ee04:	6d39      	ldr	r1, [r7, #80]	; 0x50
 800ee06:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800ee08:	e841 2300 	strex	r3, r2, [r1]
 800ee0c:	64fb      	str	r3, [r7, #76]	; 0x4c
 800ee0e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800ee10:	2b00      	cmp	r3, #0
 800ee12:	d1e5      	bne.n	800ede0 <UART_RxISR_8BIT_FIFOEN+0x184>
 800ee14:	687b      	ldr	r3, [r7, #4]
 800ee16:	2220      	movs	r2, #32
 800ee18:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800ee1c:	687b      	ldr	r3, [r7, #4]
 800ee1e:	2200      	movs	r2, #0
 800ee20:	671a      	str	r2, [r3, #112]	; 0x70
 800ee22:	687b      	ldr	r3, [r7, #4]
 800ee24:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800ee26:	2b01      	cmp	r3, #1
 800ee28:	d12e      	bne.n	800ee88 <UART_RxISR_8BIT_FIFOEN+0x22c>
 800ee2a:	687b      	ldr	r3, [r7, #4]
 800ee2c:	2200      	movs	r2, #0
 800ee2e:	66da      	str	r2, [r3, #108]	; 0x6c
 800ee30:	687b      	ldr	r3, [r7, #4]
 800ee32:	681b      	ldr	r3, [r3, #0]
 800ee34:	637b      	str	r3, [r7, #52]	; 0x34
 800ee36:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ee38:	e853 3f00 	ldrex	r3, [r3]
 800ee3c:	633b      	str	r3, [r7, #48]	; 0x30
 800ee3e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ee40:	f023 0310 	bic.w	r3, r3, #16
 800ee44:	67bb      	str	r3, [r7, #120]	; 0x78
 800ee46:	687b      	ldr	r3, [r7, #4]
 800ee48:	681b      	ldr	r3, [r3, #0]
 800ee4a:	461a      	mov	r2, r3
 800ee4c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800ee4e:	643b      	str	r3, [r7, #64]	; 0x40
 800ee50:	63fa      	str	r2, [r7, #60]	; 0x3c
 800ee52:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800ee54:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800ee56:	e841 2300 	strex	r3, r2, [r1]
 800ee5a:	63bb      	str	r3, [r7, #56]	; 0x38
 800ee5c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ee5e:	2b00      	cmp	r3, #0
 800ee60:	d1e6      	bne.n	800ee30 <UART_RxISR_8BIT_FIFOEN+0x1d4>
 800ee62:	687b      	ldr	r3, [r7, #4]
 800ee64:	681b      	ldr	r3, [r3, #0]
 800ee66:	69db      	ldr	r3, [r3, #28]
 800ee68:	f003 0310 	and.w	r3, r3, #16
 800ee6c:	2b10      	cmp	r3, #16
 800ee6e:	d103      	bne.n	800ee78 <UART_RxISR_8BIT_FIFOEN+0x21c>
 800ee70:	687b      	ldr	r3, [r7, #4]
 800ee72:	681b      	ldr	r3, [r3, #0]
 800ee74:	2210      	movs	r2, #16
 800ee76:	621a      	str	r2, [r3, #32]
 800ee78:	687b      	ldr	r3, [r7, #4]
 800ee7a:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800ee7e:	4619      	mov	r1, r3
 800ee80:	6878      	ldr	r0, [r7, #4]
 800ee82:	f7fe fc8f 	bl	800d7a4 <HAL_UARTEx_RxEventCallback>
 800ee86:	e002      	b.n	800ee8e <UART_RxISR_8BIT_FIFOEN+0x232>
 800ee88:	6878      	ldr	r0, [r7, #4]
 800ee8a:	f7f4 ff0d 	bl	8003ca8 <HAL_UART_RxCpltCallback>
 800ee8e:	f8b7 3086 	ldrh.w	r3, [r7, #134]	; 0x86
 800ee92:	2b00      	cmp	r3, #0
 800ee94:	d006      	beq.n	800eea4 <UART_RxISR_8BIT_FIFOEN+0x248>
 800ee96:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800ee9a:	f003 0320 	and.w	r3, r3, #32
 800ee9e:	2b00      	cmp	r3, #0
 800eea0:	f47f af00 	bne.w	800eca4 <UART_RxISR_8BIT_FIFOEN+0x48>
 800eea4:	687b      	ldr	r3, [r7, #4]
 800eea6:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800eeaa:	f8a7 3076 	strh.w	r3, [r7, #118]	; 0x76
 800eeae:	f8b7 3076 	ldrh.w	r3, [r7, #118]	; 0x76
 800eeb2:	2b00      	cmp	r3, #0
 800eeb4:	d045      	beq.n	800ef42 <UART_RxISR_8BIT_FIFOEN+0x2e6>
 800eeb6:	687b      	ldr	r3, [r7, #4]
 800eeb8:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800eebc:	f8b7 2076 	ldrh.w	r2, [r7, #118]	; 0x76
 800eec0:	429a      	cmp	r2, r3
 800eec2:	d23e      	bcs.n	800ef42 <UART_RxISR_8BIT_FIFOEN+0x2e6>
 800eec4:	687b      	ldr	r3, [r7, #4]
 800eec6:	681b      	ldr	r3, [r3, #0]
 800eec8:	3308      	adds	r3, #8
 800eeca:	623b      	str	r3, [r7, #32]
 800eecc:	6a3b      	ldr	r3, [r7, #32]
 800eece:	e853 3f00 	ldrex	r3, [r3]
 800eed2:	61fb      	str	r3, [r7, #28]
 800eed4:	69fb      	ldr	r3, [r7, #28]
 800eed6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800eeda:	673b      	str	r3, [r7, #112]	; 0x70
 800eedc:	687b      	ldr	r3, [r7, #4]
 800eede:	681b      	ldr	r3, [r3, #0]
 800eee0:	3308      	adds	r3, #8
 800eee2:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 800eee4:	62fa      	str	r2, [r7, #44]	; 0x2c
 800eee6:	62bb      	str	r3, [r7, #40]	; 0x28
 800eee8:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800eeea:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800eeec:	e841 2300 	strex	r3, r2, [r1]
 800eef0:	627b      	str	r3, [r7, #36]	; 0x24
 800eef2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800eef4:	2b00      	cmp	r3, #0
 800eef6:	d1e5      	bne.n	800eec4 <UART_RxISR_8BIT_FIFOEN+0x268>
 800eef8:	687b      	ldr	r3, [r7, #4]
 800eefa:	4a15      	ldr	r2, [pc, #84]	; (800ef50 <UART_RxISR_8BIT_FIFOEN+0x2f4>)
 800eefc:	671a      	str	r2, [r3, #112]	; 0x70
 800eefe:	687b      	ldr	r3, [r7, #4]
 800ef00:	681b      	ldr	r3, [r3, #0]
 800ef02:	60fb      	str	r3, [r7, #12]
 800ef04:	68fb      	ldr	r3, [r7, #12]
 800ef06:	e853 3f00 	ldrex	r3, [r3]
 800ef0a:	60bb      	str	r3, [r7, #8]
 800ef0c:	68bb      	ldr	r3, [r7, #8]
 800ef0e:	f043 0320 	orr.w	r3, r3, #32
 800ef12:	66fb      	str	r3, [r7, #108]	; 0x6c
 800ef14:	687b      	ldr	r3, [r7, #4]
 800ef16:	681b      	ldr	r3, [r3, #0]
 800ef18:	461a      	mov	r2, r3
 800ef1a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ef1c:	61bb      	str	r3, [r7, #24]
 800ef1e:	617a      	str	r2, [r7, #20]
 800ef20:	6979      	ldr	r1, [r7, #20]
 800ef22:	69ba      	ldr	r2, [r7, #24]
 800ef24:	e841 2300 	strex	r3, r2, [r1]
 800ef28:	613b      	str	r3, [r7, #16]
 800ef2a:	693b      	ldr	r3, [r7, #16]
 800ef2c:	2b00      	cmp	r3, #0
 800ef2e:	d1e6      	bne.n	800eefe <UART_RxISR_8BIT_FIFOEN+0x2a2>
 800ef30:	e007      	b.n	800ef42 <UART_RxISR_8BIT_FIFOEN+0x2e6>
 800ef32:	687b      	ldr	r3, [r7, #4]
 800ef34:	681b      	ldr	r3, [r3, #0]
 800ef36:	699a      	ldr	r2, [r3, #24]
 800ef38:	687b      	ldr	r3, [r7, #4]
 800ef3a:	681b      	ldr	r3, [r3, #0]
 800ef3c:	f042 0208 	orr.w	r2, r2, #8
 800ef40:	619a      	str	r2, [r3, #24]
 800ef42:	bf00      	nop
 800ef44:	3798      	adds	r7, #152	; 0x98
 800ef46:	46bd      	mov	sp, r7
 800ef48:	bd80      	pop	{r7, pc}
 800ef4a:	bf00      	nop
 800ef4c:	effffffe 	.word	0xeffffffe
 800ef50:	0800e99b 	.word	0x0800e99b

0800ef54 <UART_RxISR_16BIT_FIFOEN>:
 800ef54:	b580      	push	{r7, lr}
 800ef56:	b0a8      	sub	sp, #160	; 0xa0
 800ef58:	af00      	add	r7, sp, #0
 800ef5a:	6078      	str	r0, [r7, #4]
 800ef5c:	687b      	ldr	r3, [r7, #4]
 800ef5e:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800ef62:	f8a7 309a 	strh.w	r3, [r7, #154]	; 0x9a
 800ef66:	687b      	ldr	r3, [r7, #4]
 800ef68:	681b      	ldr	r3, [r3, #0]
 800ef6a:	69db      	ldr	r3, [r3, #28]
 800ef6c:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800ef70:	687b      	ldr	r3, [r7, #4]
 800ef72:	681b      	ldr	r3, [r3, #0]
 800ef74:	681b      	ldr	r3, [r3, #0]
 800ef76:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800ef7a:	687b      	ldr	r3, [r7, #4]
 800ef7c:	681b      	ldr	r3, [r3, #0]
 800ef7e:	689b      	ldr	r3, [r3, #8]
 800ef80:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800ef84:	687b      	ldr	r3, [r7, #4]
 800ef86:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800ef8a:	2b22      	cmp	r3, #34	; 0x22
 800ef8c:	f040 8151 	bne.w	800f232 <UART_RxISR_16BIT_FIFOEN+0x2de>
 800ef90:	687b      	ldr	r3, [r7, #4]
 800ef92:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800ef96:	f8a7 308e 	strh.w	r3, [r7, #142]	; 0x8e
 800ef9a:	e0f8      	b.n	800f18e <UART_RxISR_16BIT_FIFOEN+0x23a>
 800ef9c:	687b      	ldr	r3, [r7, #4]
 800ef9e:	681b      	ldr	r3, [r3, #0]
 800efa0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800efa2:	f8a7 308c 	strh.w	r3, [r7, #140]	; 0x8c
 800efa6:	687b      	ldr	r3, [r7, #4]
 800efa8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800efaa:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800efae:	f8b7 208c 	ldrh.w	r2, [r7, #140]	; 0x8c
 800efb2:	f8b7 309a 	ldrh.w	r3, [r7, #154]	; 0x9a
 800efb6:	4013      	ands	r3, r2
 800efb8:	b29a      	uxth	r2, r3
 800efba:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800efbe:	801a      	strh	r2, [r3, #0]
 800efc0:	687b      	ldr	r3, [r7, #4]
 800efc2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800efc4:	1c9a      	adds	r2, r3, #2
 800efc6:	687b      	ldr	r3, [r7, #4]
 800efc8:	659a      	str	r2, [r3, #88]	; 0x58
 800efca:	687b      	ldr	r3, [r7, #4]
 800efcc:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800efd0:	b29b      	uxth	r3, r3
 800efd2:	3b01      	subs	r3, #1
 800efd4:	b29a      	uxth	r2, r3
 800efd6:	687b      	ldr	r3, [r7, #4]
 800efd8:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800efdc:	687b      	ldr	r3, [r7, #4]
 800efde:	681b      	ldr	r3, [r3, #0]
 800efe0:	69db      	ldr	r3, [r3, #28]
 800efe2:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800efe6:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800efea:	f003 0307 	and.w	r3, r3, #7
 800efee:	2b00      	cmp	r3, #0
 800eff0:	d053      	beq.n	800f09a <UART_RxISR_16BIT_FIFOEN+0x146>
 800eff2:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800eff6:	f003 0301 	and.w	r3, r3, #1
 800effa:	2b00      	cmp	r3, #0
 800effc:	d011      	beq.n	800f022 <UART_RxISR_16BIT_FIFOEN+0xce>
 800effe:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800f002:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f006:	2b00      	cmp	r3, #0
 800f008:	d00b      	beq.n	800f022 <UART_RxISR_16BIT_FIFOEN+0xce>
 800f00a:	687b      	ldr	r3, [r7, #4]
 800f00c:	681b      	ldr	r3, [r3, #0]
 800f00e:	2201      	movs	r2, #1
 800f010:	621a      	str	r2, [r3, #32]
 800f012:	687b      	ldr	r3, [r7, #4]
 800f014:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800f018:	f043 0201 	orr.w	r2, r3, #1
 800f01c:	687b      	ldr	r3, [r7, #4]
 800f01e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800f022:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800f026:	f003 0302 	and.w	r3, r3, #2
 800f02a:	2b00      	cmp	r3, #0
 800f02c:	d011      	beq.n	800f052 <UART_RxISR_16BIT_FIFOEN+0xfe>
 800f02e:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800f032:	f003 0301 	and.w	r3, r3, #1
 800f036:	2b00      	cmp	r3, #0
 800f038:	d00b      	beq.n	800f052 <UART_RxISR_16BIT_FIFOEN+0xfe>
 800f03a:	687b      	ldr	r3, [r7, #4]
 800f03c:	681b      	ldr	r3, [r3, #0]
 800f03e:	2202      	movs	r2, #2
 800f040:	621a      	str	r2, [r3, #32]
 800f042:	687b      	ldr	r3, [r7, #4]
 800f044:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800f048:	f043 0204 	orr.w	r2, r3, #4
 800f04c:	687b      	ldr	r3, [r7, #4]
 800f04e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800f052:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800f056:	f003 0304 	and.w	r3, r3, #4
 800f05a:	2b00      	cmp	r3, #0
 800f05c:	d011      	beq.n	800f082 <UART_RxISR_16BIT_FIFOEN+0x12e>
 800f05e:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800f062:	f003 0301 	and.w	r3, r3, #1
 800f066:	2b00      	cmp	r3, #0
 800f068:	d00b      	beq.n	800f082 <UART_RxISR_16BIT_FIFOEN+0x12e>
 800f06a:	687b      	ldr	r3, [r7, #4]
 800f06c:	681b      	ldr	r3, [r3, #0]
 800f06e:	2204      	movs	r2, #4
 800f070:	621a      	str	r2, [r3, #32]
 800f072:	687b      	ldr	r3, [r7, #4]
 800f074:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800f078:	f043 0202 	orr.w	r2, r3, #2
 800f07c:	687b      	ldr	r3, [r7, #4]
 800f07e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800f082:	687b      	ldr	r3, [r7, #4]
 800f084:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800f088:	2b00      	cmp	r3, #0
 800f08a:	d006      	beq.n	800f09a <UART_RxISR_16BIT_FIFOEN+0x146>
 800f08c:	6878      	ldr	r0, [r7, #4]
 800f08e:	f7fe fb7f 	bl	800d790 <HAL_UART_ErrorCallback>
 800f092:	687b      	ldr	r3, [r7, #4]
 800f094:	2200      	movs	r2, #0
 800f096:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800f09a:	687b      	ldr	r3, [r7, #4]
 800f09c:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800f0a0:	b29b      	uxth	r3, r3
 800f0a2:	2b00      	cmp	r3, #0
 800f0a4:	d173      	bne.n	800f18e <UART_RxISR_16BIT_FIFOEN+0x23a>
 800f0a6:	687b      	ldr	r3, [r7, #4]
 800f0a8:	681b      	ldr	r3, [r3, #0]
 800f0aa:	663b      	str	r3, [r7, #96]	; 0x60
 800f0ac:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800f0ae:	e853 3f00 	ldrex	r3, [r3]
 800f0b2:	65fb      	str	r3, [r7, #92]	; 0x5c
 800f0b4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800f0b6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800f0ba:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800f0be:	687b      	ldr	r3, [r7, #4]
 800f0c0:	681b      	ldr	r3, [r3, #0]
 800f0c2:	461a      	mov	r2, r3
 800f0c4:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800f0c8:	66fb      	str	r3, [r7, #108]	; 0x6c
 800f0ca:	66ba      	str	r2, [r7, #104]	; 0x68
 800f0cc:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800f0ce:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800f0d0:	e841 2300 	strex	r3, r2, [r1]
 800f0d4:	667b      	str	r3, [r7, #100]	; 0x64
 800f0d6:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800f0d8:	2b00      	cmp	r3, #0
 800f0da:	d1e4      	bne.n	800f0a6 <UART_RxISR_16BIT_FIFOEN+0x152>
 800f0dc:	687b      	ldr	r3, [r7, #4]
 800f0de:	681b      	ldr	r3, [r3, #0]
 800f0e0:	3308      	adds	r3, #8
 800f0e2:	64fb      	str	r3, [r7, #76]	; 0x4c
 800f0e4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800f0e6:	e853 3f00 	ldrex	r3, [r3]
 800f0ea:	64bb      	str	r3, [r7, #72]	; 0x48
 800f0ec:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800f0ee:	4b57      	ldr	r3, [pc, #348]	; (800f24c <UART_RxISR_16BIT_FIFOEN+0x2f8>)
 800f0f0:	4013      	ands	r3, r2
 800f0f2:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800f0f6:	687b      	ldr	r3, [r7, #4]
 800f0f8:	681b      	ldr	r3, [r3, #0]
 800f0fa:	3308      	adds	r3, #8
 800f0fc:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800f100:	65ba      	str	r2, [r7, #88]	; 0x58
 800f102:	657b      	str	r3, [r7, #84]	; 0x54
 800f104:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800f106:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800f108:	e841 2300 	strex	r3, r2, [r1]
 800f10c:	653b      	str	r3, [r7, #80]	; 0x50
 800f10e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800f110:	2b00      	cmp	r3, #0
 800f112:	d1e3      	bne.n	800f0dc <UART_RxISR_16BIT_FIFOEN+0x188>
 800f114:	687b      	ldr	r3, [r7, #4]
 800f116:	2220      	movs	r2, #32
 800f118:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800f11c:	687b      	ldr	r3, [r7, #4]
 800f11e:	2200      	movs	r2, #0
 800f120:	671a      	str	r2, [r3, #112]	; 0x70
 800f122:	687b      	ldr	r3, [r7, #4]
 800f124:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f126:	2b01      	cmp	r3, #1
 800f128:	d12e      	bne.n	800f188 <UART_RxISR_16BIT_FIFOEN+0x234>
 800f12a:	687b      	ldr	r3, [r7, #4]
 800f12c:	2200      	movs	r2, #0
 800f12e:	66da      	str	r2, [r3, #108]	; 0x6c
 800f130:	687b      	ldr	r3, [r7, #4]
 800f132:	681b      	ldr	r3, [r3, #0]
 800f134:	63bb      	str	r3, [r7, #56]	; 0x38
 800f136:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800f138:	e853 3f00 	ldrex	r3, [r3]
 800f13c:	637b      	str	r3, [r7, #52]	; 0x34
 800f13e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800f140:	f023 0310 	bic.w	r3, r3, #16
 800f144:	67fb      	str	r3, [r7, #124]	; 0x7c
 800f146:	687b      	ldr	r3, [r7, #4]
 800f148:	681b      	ldr	r3, [r3, #0]
 800f14a:	461a      	mov	r2, r3
 800f14c:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800f14e:	647b      	str	r3, [r7, #68]	; 0x44
 800f150:	643a      	str	r2, [r7, #64]	; 0x40
 800f152:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800f154:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800f156:	e841 2300 	strex	r3, r2, [r1]
 800f15a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800f15c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800f15e:	2b00      	cmp	r3, #0
 800f160:	d1e6      	bne.n	800f130 <UART_RxISR_16BIT_FIFOEN+0x1dc>
 800f162:	687b      	ldr	r3, [r7, #4]
 800f164:	681b      	ldr	r3, [r3, #0]
 800f166:	69db      	ldr	r3, [r3, #28]
 800f168:	f003 0310 	and.w	r3, r3, #16
 800f16c:	2b10      	cmp	r3, #16
 800f16e:	d103      	bne.n	800f178 <UART_RxISR_16BIT_FIFOEN+0x224>
 800f170:	687b      	ldr	r3, [r7, #4]
 800f172:	681b      	ldr	r3, [r3, #0]
 800f174:	2210      	movs	r2, #16
 800f176:	621a      	str	r2, [r3, #32]
 800f178:	687b      	ldr	r3, [r7, #4]
 800f17a:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800f17e:	4619      	mov	r1, r3
 800f180:	6878      	ldr	r0, [r7, #4]
 800f182:	f7fe fb0f 	bl	800d7a4 <HAL_UARTEx_RxEventCallback>
 800f186:	e002      	b.n	800f18e <UART_RxISR_16BIT_FIFOEN+0x23a>
 800f188:	6878      	ldr	r0, [r7, #4]
 800f18a:	f7f4 fd8d 	bl	8003ca8 <HAL_UART_RxCpltCallback>
 800f18e:	f8b7 308e 	ldrh.w	r3, [r7, #142]	; 0x8e
 800f192:	2b00      	cmp	r3, #0
 800f194:	d006      	beq.n	800f1a4 <UART_RxISR_16BIT_FIFOEN+0x250>
 800f196:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800f19a:	f003 0320 	and.w	r3, r3, #32
 800f19e:	2b00      	cmp	r3, #0
 800f1a0:	f47f aefc 	bne.w	800ef9c <UART_RxISR_16BIT_FIFOEN+0x48>
 800f1a4:	687b      	ldr	r3, [r7, #4]
 800f1a6:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800f1aa:	f8a7 307a 	strh.w	r3, [r7, #122]	; 0x7a
 800f1ae:	f8b7 307a 	ldrh.w	r3, [r7, #122]	; 0x7a
 800f1b2:	2b00      	cmp	r3, #0
 800f1b4:	d045      	beq.n	800f242 <UART_RxISR_16BIT_FIFOEN+0x2ee>
 800f1b6:	687b      	ldr	r3, [r7, #4]
 800f1b8:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800f1bc:	f8b7 207a 	ldrh.w	r2, [r7, #122]	; 0x7a
 800f1c0:	429a      	cmp	r2, r3
 800f1c2:	d23e      	bcs.n	800f242 <UART_RxISR_16BIT_FIFOEN+0x2ee>
 800f1c4:	687b      	ldr	r3, [r7, #4]
 800f1c6:	681b      	ldr	r3, [r3, #0]
 800f1c8:	3308      	adds	r3, #8
 800f1ca:	627b      	str	r3, [r7, #36]	; 0x24
 800f1cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f1ce:	e853 3f00 	ldrex	r3, [r3]
 800f1d2:	623b      	str	r3, [r7, #32]
 800f1d4:	6a3b      	ldr	r3, [r7, #32]
 800f1d6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800f1da:	677b      	str	r3, [r7, #116]	; 0x74
 800f1dc:	687b      	ldr	r3, [r7, #4]
 800f1de:	681b      	ldr	r3, [r3, #0]
 800f1e0:	3308      	adds	r3, #8
 800f1e2:	6f7a      	ldr	r2, [r7, #116]	; 0x74
 800f1e4:	633a      	str	r2, [r7, #48]	; 0x30
 800f1e6:	62fb      	str	r3, [r7, #44]	; 0x2c
 800f1e8:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800f1ea:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800f1ec:	e841 2300 	strex	r3, r2, [r1]
 800f1f0:	62bb      	str	r3, [r7, #40]	; 0x28
 800f1f2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800f1f4:	2b00      	cmp	r3, #0
 800f1f6:	d1e5      	bne.n	800f1c4 <UART_RxISR_16BIT_FIFOEN+0x270>
 800f1f8:	687b      	ldr	r3, [r7, #4]
 800f1fa:	4a15      	ldr	r2, [pc, #84]	; (800f250 <UART_RxISR_16BIT_FIFOEN+0x2fc>)
 800f1fc:	671a      	str	r2, [r3, #112]	; 0x70
 800f1fe:	687b      	ldr	r3, [r7, #4]
 800f200:	681b      	ldr	r3, [r3, #0]
 800f202:	613b      	str	r3, [r7, #16]
 800f204:	693b      	ldr	r3, [r7, #16]
 800f206:	e853 3f00 	ldrex	r3, [r3]
 800f20a:	60fb      	str	r3, [r7, #12]
 800f20c:	68fb      	ldr	r3, [r7, #12]
 800f20e:	f043 0320 	orr.w	r3, r3, #32
 800f212:	673b      	str	r3, [r7, #112]	; 0x70
 800f214:	687b      	ldr	r3, [r7, #4]
 800f216:	681b      	ldr	r3, [r3, #0]
 800f218:	461a      	mov	r2, r3
 800f21a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800f21c:	61fb      	str	r3, [r7, #28]
 800f21e:	61ba      	str	r2, [r7, #24]
 800f220:	69b9      	ldr	r1, [r7, #24]
 800f222:	69fa      	ldr	r2, [r7, #28]
 800f224:	e841 2300 	strex	r3, r2, [r1]
 800f228:	617b      	str	r3, [r7, #20]
 800f22a:	697b      	ldr	r3, [r7, #20]
 800f22c:	2b00      	cmp	r3, #0
 800f22e:	d1e6      	bne.n	800f1fe <UART_RxISR_16BIT_FIFOEN+0x2aa>
 800f230:	e007      	b.n	800f242 <UART_RxISR_16BIT_FIFOEN+0x2ee>
 800f232:	687b      	ldr	r3, [r7, #4]
 800f234:	681b      	ldr	r3, [r3, #0]
 800f236:	699a      	ldr	r2, [r3, #24]
 800f238:	687b      	ldr	r3, [r7, #4]
 800f23a:	681b      	ldr	r3, [r3, #0]
 800f23c:	f042 0208 	orr.w	r2, r2, #8
 800f240:	619a      	str	r2, [r3, #24]
 800f242:	bf00      	nop
 800f244:	37a0      	adds	r7, #160	; 0xa0
 800f246:	46bd      	mov	sp, r7
 800f248:	bd80      	pop	{r7, pc}
 800f24a:	bf00      	nop
 800f24c:	effffffe 	.word	0xeffffffe
 800f250:	0800eafb 	.word	0x0800eafb

0800f254 <HAL_UARTEx_WakeupCallback>:
 800f254:	b480      	push	{r7}
 800f256:	b083      	sub	sp, #12
 800f258:	af00      	add	r7, sp, #0
 800f25a:	6078      	str	r0, [r7, #4]
 800f25c:	bf00      	nop
 800f25e:	370c      	adds	r7, #12
 800f260:	46bd      	mov	sp, r7
 800f262:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f266:	4770      	bx	lr

0800f268 <HAL_UARTEx_RxFifoFullCallback>:
 800f268:	b480      	push	{r7}
 800f26a:	b083      	sub	sp, #12
 800f26c:	af00      	add	r7, sp, #0
 800f26e:	6078      	str	r0, [r7, #4]
 800f270:	bf00      	nop
 800f272:	370c      	adds	r7, #12
 800f274:	46bd      	mov	sp, r7
 800f276:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f27a:	4770      	bx	lr

0800f27c <HAL_UARTEx_TxFifoEmptyCallback>:
 800f27c:	b480      	push	{r7}
 800f27e:	b083      	sub	sp, #12
 800f280:	af00      	add	r7, sp, #0
 800f282:	6078      	str	r0, [r7, #4]
 800f284:	bf00      	nop
 800f286:	370c      	adds	r7, #12
 800f288:	46bd      	mov	sp, r7
 800f28a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f28e:	4770      	bx	lr

0800f290 <HAL_UARTEx_DisableFifoMode>:
 800f290:	b480      	push	{r7}
 800f292:	b085      	sub	sp, #20
 800f294:	af00      	add	r7, sp, #0
 800f296:	6078      	str	r0, [r7, #4]
 800f298:	687b      	ldr	r3, [r7, #4]
 800f29a:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800f29e:	2b01      	cmp	r3, #1
 800f2a0:	d101      	bne.n	800f2a6 <HAL_UARTEx_DisableFifoMode+0x16>
 800f2a2:	2302      	movs	r3, #2
 800f2a4:	e027      	b.n	800f2f6 <HAL_UARTEx_DisableFifoMode+0x66>
 800f2a6:	687b      	ldr	r3, [r7, #4]
 800f2a8:	2201      	movs	r2, #1
 800f2aa:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f2ae:	687b      	ldr	r3, [r7, #4]
 800f2b0:	2224      	movs	r2, #36	; 0x24
 800f2b2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f2b6:	687b      	ldr	r3, [r7, #4]
 800f2b8:	681b      	ldr	r3, [r3, #0]
 800f2ba:	681b      	ldr	r3, [r3, #0]
 800f2bc:	60fb      	str	r3, [r7, #12]
 800f2be:	687b      	ldr	r3, [r7, #4]
 800f2c0:	681b      	ldr	r3, [r3, #0]
 800f2c2:	681a      	ldr	r2, [r3, #0]
 800f2c4:	687b      	ldr	r3, [r7, #4]
 800f2c6:	681b      	ldr	r3, [r3, #0]
 800f2c8:	f022 0201 	bic.w	r2, r2, #1
 800f2cc:	601a      	str	r2, [r3, #0]
 800f2ce:	68fb      	ldr	r3, [r7, #12]
 800f2d0:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 800f2d4:	60fb      	str	r3, [r7, #12]
 800f2d6:	687b      	ldr	r3, [r7, #4]
 800f2d8:	2200      	movs	r2, #0
 800f2da:	665a      	str	r2, [r3, #100]	; 0x64
 800f2dc:	687b      	ldr	r3, [r7, #4]
 800f2de:	681b      	ldr	r3, [r3, #0]
 800f2e0:	68fa      	ldr	r2, [r7, #12]
 800f2e2:	601a      	str	r2, [r3, #0]
 800f2e4:	687b      	ldr	r3, [r7, #4]
 800f2e6:	2220      	movs	r2, #32
 800f2e8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f2ec:	687b      	ldr	r3, [r7, #4]
 800f2ee:	2200      	movs	r2, #0
 800f2f0:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f2f4:	2300      	movs	r3, #0
 800f2f6:	4618      	mov	r0, r3
 800f2f8:	3714      	adds	r7, #20
 800f2fa:	46bd      	mov	sp, r7
 800f2fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f300:	4770      	bx	lr

0800f302 <HAL_UARTEx_SetTxFifoThreshold>:
 800f302:	b580      	push	{r7, lr}
 800f304:	b084      	sub	sp, #16
 800f306:	af00      	add	r7, sp, #0
 800f308:	6078      	str	r0, [r7, #4]
 800f30a:	6039      	str	r1, [r7, #0]
 800f30c:	687b      	ldr	r3, [r7, #4]
 800f30e:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800f312:	2b01      	cmp	r3, #1
 800f314:	d101      	bne.n	800f31a <HAL_UARTEx_SetTxFifoThreshold+0x18>
 800f316:	2302      	movs	r3, #2
 800f318:	e02d      	b.n	800f376 <HAL_UARTEx_SetTxFifoThreshold+0x74>
 800f31a:	687b      	ldr	r3, [r7, #4]
 800f31c:	2201      	movs	r2, #1
 800f31e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f322:	687b      	ldr	r3, [r7, #4]
 800f324:	2224      	movs	r2, #36	; 0x24
 800f326:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f32a:	687b      	ldr	r3, [r7, #4]
 800f32c:	681b      	ldr	r3, [r3, #0]
 800f32e:	681b      	ldr	r3, [r3, #0]
 800f330:	60fb      	str	r3, [r7, #12]
 800f332:	687b      	ldr	r3, [r7, #4]
 800f334:	681b      	ldr	r3, [r3, #0]
 800f336:	681a      	ldr	r2, [r3, #0]
 800f338:	687b      	ldr	r3, [r7, #4]
 800f33a:	681b      	ldr	r3, [r3, #0]
 800f33c:	f022 0201 	bic.w	r2, r2, #1
 800f340:	601a      	str	r2, [r3, #0]
 800f342:	687b      	ldr	r3, [r7, #4]
 800f344:	681b      	ldr	r3, [r3, #0]
 800f346:	689b      	ldr	r3, [r3, #8]
 800f348:	f023 4160 	bic.w	r1, r3, #3758096384	; 0xe0000000
 800f34c:	687b      	ldr	r3, [r7, #4]
 800f34e:	681b      	ldr	r3, [r3, #0]
 800f350:	683a      	ldr	r2, [r7, #0]
 800f352:	430a      	orrs	r2, r1
 800f354:	609a      	str	r2, [r3, #8]
 800f356:	6878      	ldr	r0, [r7, #4]
 800f358:	f000 f850 	bl	800f3fc <UARTEx_SetNbDataToProcess>
 800f35c:	687b      	ldr	r3, [r7, #4]
 800f35e:	681b      	ldr	r3, [r3, #0]
 800f360:	68fa      	ldr	r2, [r7, #12]
 800f362:	601a      	str	r2, [r3, #0]
 800f364:	687b      	ldr	r3, [r7, #4]
 800f366:	2220      	movs	r2, #32
 800f368:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f36c:	687b      	ldr	r3, [r7, #4]
 800f36e:	2200      	movs	r2, #0
 800f370:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f374:	2300      	movs	r3, #0
 800f376:	4618      	mov	r0, r3
 800f378:	3710      	adds	r7, #16
 800f37a:	46bd      	mov	sp, r7
 800f37c:	bd80      	pop	{r7, pc}

0800f37e <HAL_UARTEx_SetRxFifoThreshold>:
 800f37e:	b580      	push	{r7, lr}
 800f380:	b084      	sub	sp, #16
 800f382:	af00      	add	r7, sp, #0
 800f384:	6078      	str	r0, [r7, #4]
 800f386:	6039      	str	r1, [r7, #0]
 800f388:	687b      	ldr	r3, [r7, #4]
 800f38a:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800f38e:	2b01      	cmp	r3, #1
 800f390:	d101      	bne.n	800f396 <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800f392:	2302      	movs	r3, #2
 800f394:	e02d      	b.n	800f3f2 <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800f396:	687b      	ldr	r3, [r7, #4]
 800f398:	2201      	movs	r2, #1
 800f39a:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f39e:	687b      	ldr	r3, [r7, #4]
 800f3a0:	2224      	movs	r2, #36	; 0x24
 800f3a2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f3a6:	687b      	ldr	r3, [r7, #4]
 800f3a8:	681b      	ldr	r3, [r3, #0]
 800f3aa:	681b      	ldr	r3, [r3, #0]
 800f3ac:	60fb      	str	r3, [r7, #12]
 800f3ae:	687b      	ldr	r3, [r7, #4]
 800f3b0:	681b      	ldr	r3, [r3, #0]
 800f3b2:	681a      	ldr	r2, [r3, #0]
 800f3b4:	687b      	ldr	r3, [r7, #4]
 800f3b6:	681b      	ldr	r3, [r3, #0]
 800f3b8:	f022 0201 	bic.w	r2, r2, #1
 800f3bc:	601a      	str	r2, [r3, #0]
 800f3be:	687b      	ldr	r3, [r7, #4]
 800f3c0:	681b      	ldr	r3, [r3, #0]
 800f3c2:	689b      	ldr	r3, [r3, #8]
 800f3c4:	f023 6160 	bic.w	r1, r3, #234881024	; 0xe000000
 800f3c8:	687b      	ldr	r3, [r7, #4]
 800f3ca:	681b      	ldr	r3, [r3, #0]
 800f3cc:	683a      	ldr	r2, [r7, #0]
 800f3ce:	430a      	orrs	r2, r1
 800f3d0:	609a      	str	r2, [r3, #8]
 800f3d2:	6878      	ldr	r0, [r7, #4]
 800f3d4:	f000 f812 	bl	800f3fc <UARTEx_SetNbDataToProcess>
 800f3d8:	687b      	ldr	r3, [r7, #4]
 800f3da:	681b      	ldr	r3, [r3, #0]
 800f3dc:	68fa      	ldr	r2, [r7, #12]
 800f3de:	601a      	str	r2, [r3, #0]
 800f3e0:	687b      	ldr	r3, [r7, #4]
 800f3e2:	2220      	movs	r2, #32
 800f3e4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800f3e8:	687b      	ldr	r3, [r7, #4]
 800f3ea:	2200      	movs	r2, #0
 800f3ec:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800f3f0:	2300      	movs	r3, #0
 800f3f2:	4618      	mov	r0, r3
 800f3f4:	3710      	adds	r7, #16
 800f3f6:	46bd      	mov	sp, r7
 800f3f8:	bd80      	pop	{r7, pc}
	...

0800f3fc <UARTEx_SetNbDataToProcess>:
 800f3fc:	b480      	push	{r7}
 800f3fe:	b085      	sub	sp, #20
 800f400:	af00      	add	r7, sp, #0
 800f402:	6078      	str	r0, [r7, #4]
 800f404:	687b      	ldr	r3, [r7, #4]
 800f406:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f408:	2b00      	cmp	r3, #0
 800f40a:	d108      	bne.n	800f41e <UARTEx_SetNbDataToProcess+0x22>
 800f40c:	687b      	ldr	r3, [r7, #4]
 800f40e:	2201      	movs	r2, #1
 800f410:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800f414:	687b      	ldr	r3, [r7, #4]
 800f416:	2201      	movs	r2, #1
 800f418:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800f41c:	e031      	b.n	800f482 <UARTEx_SetNbDataToProcess+0x86>
 800f41e:	2310      	movs	r3, #16
 800f420:	73fb      	strb	r3, [r7, #15]
 800f422:	2310      	movs	r3, #16
 800f424:	73bb      	strb	r3, [r7, #14]
 800f426:	687b      	ldr	r3, [r7, #4]
 800f428:	681b      	ldr	r3, [r3, #0]
 800f42a:	689b      	ldr	r3, [r3, #8]
 800f42c:	0e5b      	lsrs	r3, r3, #25
 800f42e:	b2db      	uxtb	r3, r3
 800f430:	f003 0307 	and.w	r3, r3, #7
 800f434:	737b      	strb	r3, [r7, #13]
 800f436:	687b      	ldr	r3, [r7, #4]
 800f438:	681b      	ldr	r3, [r3, #0]
 800f43a:	689b      	ldr	r3, [r3, #8]
 800f43c:	0f5b      	lsrs	r3, r3, #29
 800f43e:	b2db      	uxtb	r3, r3
 800f440:	f003 0307 	and.w	r3, r3, #7
 800f444:	733b      	strb	r3, [r7, #12]
 800f446:	7bbb      	ldrb	r3, [r7, #14]
 800f448:	7b3a      	ldrb	r2, [r7, #12]
 800f44a:	4911      	ldr	r1, [pc, #68]	; (800f490 <UARTEx_SetNbDataToProcess+0x94>)
 800f44c:	5c8a      	ldrb	r2, [r1, r2]
 800f44e:	fb02 f303 	mul.w	r3, r2, r3
 800f452:	7b3a      	ldrb	r2, [r7, #12]
 800f454:	490f      	ldr	r1, [pc, #60]	; (800f494 <UARTEx_SetNbDataToProcess+0x98>)
 800f456:	5c8a      	ldrb	r2, [r1, r2]
 800f458:	fb93 f3f2 	sdiv	r3, r3, r2
 800f45c:	b29a      	uxth	r2, r3
 800f45e:	687b      	ldr	r3, [r7, #4]
 800f460:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800f464:	7bfb      	ldrb	r3, [r7, #15]
 800f466:	7b7a      	ldrb	r2, [r7, #13]
 800f468:	4909      	ldr	r1, [pc, #36]	; (800f490 <UARTEx_SetNbDataToProcess+0x94>)
 800f46a:	5c8a      	ldrb	r2, [r1, r2]
 800f46c:	fb02 f303 	mul.w	r3, r2, r3
 800f470:	7b7a      	ldrb	r2, [r7, #13]
 800f472:	4908      	ldr	r1, [pc, #32]	; (800f494 <UARTEx_SetNbDataToProcess+0x98>)
 800f474:	5c8a      	ldrb	r2, [r1, r2]
 800f476:	fb93 f3f2 	sdiv	r3, r3, r2
 800f47a:	b29a      	uxth	r2, r3
 800f47c:	687b      	ldr	r3, [r7, #4]
 800f47e:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800f482:	bf00      	nop
 800f484:	3714      	adds	r7, #20
 800f486:	46bd      	mov	sp, r7
 800f488:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f48c:	4770      	bx	lr
 800f48e:	bf00      	nop
 800f490:	08012c08 	.word	0x08012c08
 800f494:	08012c10 	.word	0x08012c10

0800f498 <__errno>:
 800f498:	4b01      	ldr	r3, [pc, #4]	; (800f4a0 <__errno+0x8>)
 800f49a:	6818      	ldr	r0, [r3, #0]
 800f49c:	4770      	bx	lr
 800f49e:	bf00      	nop
 800f4a0:	240000c0 	.word	0x240000c0

0800f4a4 <__libc_init_array>:
 800f4a4:	b570      	push	{r4, r5, r6, lr}
 800f4a6:	4d0d      	ldr	r5, [pc, #52]	; (800f4dc <__libc_init_array+0x38>)
 800f4a8:	4c0d      	ldr	r4, [pc, #52]	; (800f4e0 <__libc_init_array+0x3c>)
 800f4aa:	1b64      	subs	r4, r4, r5
 800f4ac:	10a4      	asrs	r4, r4, #2
 800f4ae:	2600      	movs	r6, #0
 800f4b0:	42a6      	cmp	r6, r4
 800f4b2:	d109      	bne.n	800f4c8 <__libc_init_array+0x24>
 800f4b4:	4d0b      	ldr	r5, [pc, #44]	; (800f4e4 <__libc_init_array+0x40>)
 800f4b6:	4c0c      	ldr	r4, [pc, #48]	; (800f4e8 <__libc_init_array+0x44>)
 800f4b8:	f003 fae8 	bl	8012a8c <_init>
 800f4bc:	1b64      	subs	r4, r4, r5
 800f4be:	10a4      	asrs	r4, r4, #2
 800f4c0:	2600      	movs	r6, #0
 800f4c2:	42a6      	cmp	r6, r4
 800f4c4:	d105      	bne.n	800f4d2 <__libc_init_array+0x2e>
 800f4c6:	bd70      	pop	{r4, r5, r6, pc}
 800f4c8:	f855 3b04 	ldr.w	r3, [r5], #4
 800f4cc:	4798      	blx	r3
 800f4ce:	3601      	adds	r6, #1
 800f4d0:	e7ee      	b.n	800f4b0 <__libc_init_array+0xc>
 800f4d2:	f855 3b04 	ldr.w	r3, [r5], #4
 800f4d6:	4798      	blx	r3
 800f4d8:	3601      	adds	r6, #1
 800f4da:	e7f2      	b.n	800f4c2 <__libc_init_array+0x1e>
 800f4dc:	08014908 	.word	0x08014908
 800f4e0:	08014908 	.word	0x08014908
 800f4e4:	08014908 	.word	0x08014908
 800f4e8:	0801490c 	.word	0x0801490c

0800f4ec <memcpy>:
 800f4ec:	440a      	add	r2, r1
 800f4ee:	4291      	cmp	r1, r2
 800f4f0:	f100 33ff 	add.w	r3, r0, #4294967295
 800f4f4:	d100      	bne.n	800f4f8 <memcpy+0xc>
 800f4f6:	4770      	bx	lr
 800f4f8:	b510      	push	{r4, lr}
 800f4fa:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f4fe:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f502:	4291      	cmp	r1, r2
 800f504:	d1f9      	bne.n	800f4fa <memcpy+0xe>
 800f506:	bd10      	pop	{r4, pc}

0800f508 <memset>:
 800f508:	4402      	add	r2, r0
 800f50a:	4603      	mov	r3, r0
 800f50c:	4293      	cmp	r3, r2
 800f50e:	d100      	bne.n	800f512 <memset+0xa>
 800f510:	4770      	bx	lr
 800f512:	f803 1b01 	strb.w	r1, [r3], #1
 800f516:	e7f9      	b.n	800f50c <memset+0x4>

0800f518 <sulp>:
 800f518:	b570      	push	{r4, r5, r6, lr}
 800f51a:	4604      	mov	r4, r0
 800f51c:	460d      	mov	r5, r1
 800f51e:	4616      	mov	r6, r2
 800f520:	ec45 4b10 	vmov	d0, r4, r5
 800f524:	f001 fcca 	bl	8010ebc <__ulp>
 800f528:	b17e      	cbz	r6, 800f54a <sulp+0x32>
 800f52a:	f3c5 530a 	ubfx	r3, r5, #20, #11
 800f52e:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800f532:	2b00      	cmp	r3, #0
 800f534:	dd09      	ble.n	800f54a <sulp+0x32>
 800f536:	051b      	lsls	r3, r3, #20
 800f538:	f103 517f 	add.w	r1, r3, #1069547520	; 0x3fc00000
 800f53c:	2000      	movs	r0, #0
 800f53e:	f501 1140 	add.w	r1, r1, #3145728	; 0x300000
 800f542:	ec41 0b17 	vmov	d7, r0, r1
 800f546:	ee20 0b07 	vmul.f64	d0, d0, d7
 800f54a:	bd70      	pop	{r4, r5, r6, pc}
 800f54c:	0000      	movs	r0, r0
	...

0800f550 <_strtod_l>:
 800f550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f554:	ed2d 8b0e 	vpush	{d8-d14}
 800f558:	b097      	sub	sp, #92	; 0x5c
 800f55a:	461f      	mov	r7, r3
 800f55c:	2300      	movs	r3, #0
 800f55e:	9312      	str	r3, [sp, #72]	; 0x48
 800f560:	4ba1      	ldr	r3, [pc, #644]	; (800f7e8 <_strtod_l+0x298>)
 800f562:	920d      	str	r2, [sp, #52]	; 0x34
 800f564:	681b      	ldr	r3, [r3, #0]
 800f566:	9307      	str	r3, [sp, #28]
 800f568:	4604      	mov	r4, r0
 800f56a:	4618      	mov	r0, r3
 800f56c:	468b      	mov	fp, r1
 800f56e:	f7f0 feb7 	bl	80002e0 <strlen>
 800f572:	f04f 0800 	mov.w	r8, #0
 800f576:	4605      	mov	r5, r0
 800f578:	f04f 0900 	mov.w	r9, #0
 800f57c:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
 800f580:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f582:	7813      	ldrb	r3, [r2, #0]
 800f584:	2b2b      	cmp	r3, #43	; 0x2b
 800f586:	d04d      	beq.n	800f624 <_strtod_l+0xd4>
 800f588:	d83a      	bhi.n	800f600 <_strtod_l+0xb0>
 800f58a:	2b0d      	cmp	r3, #13
 800f58c:	d833      	bhi.n	800f5f6 <_strtod_l+0xa6>
 800f58e:	2b08      	cmp	r3, #8
 800f590:	d833      	bhi.n	800f5fa <_strtod_l+0xaa>
 800f592:	2b00      	cmp	r3, #0
 800f594:	d03d      	beq.n	800f612 <_strtod_l+0xc2>
 800f596:	2300      	movs	r3, #0
 800f598:	9308      	str	r3, [sp, #32]
 800f59a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800f59c:	7833      	ldrb	r3, [r6, #0]
 800f59e:	2b30      	cmp	r3, #48	; 0x30
 800f5a0:	f040 80b0 	bne.w	800f704 <_strtod_l+0x1b4>
 800f5a4:	7873      	ldrb	r3, [r6, #1]
 800f5a6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800f5aa:	2b58      	cmp	r3, #88	; 0x58
 800f5ac:	d167      	bne.n	800f67e <_strtod_l+0x12e>
 800f5ae:	9b08      	ldr	r3, [sp, #32]
 800f5b0:	9301      	str	r3, [sp, #4]
 800f5b2:	ab12      	add	r3, sp, #72	; 0x48
 800f5b4:	9702      	str	r7, [sp, #8]
 800f5b6:	9300      	str	r3, [sp, #0]
 800f5b8:	4a8c      	ldr	r2, [pc, #560]	; (800f7ec <_strtod_l+0x29c>)
 800f5ba:	ab13      	add	r3, sp, #76	; 0x4c
 800f5bc:	a911      	add	r1, sp, #68	; 0x44
 800f5be:	4620      	mov	r0, r4
 800f5c0:	f000 fdf0 	bl	80101a4 <__gethex>
 800f5c4:	f010 0507 	ands.w	r5, r0, #7
 800f5c8:	4607      	mov	r7, r0
 800f5ca:	d005      	beq.n	800f5d8 <_strtod_l+0x88>
 800f5cc:	2d06      	cmp	r5, #6
 800f5ce:	d12b      	bne.n	800f628 <_strtod_l+0xd8>
 800f5d0:	3601      	adds	r6, #1
 800f5d2:	2300      	movs	r3, #0
 800f5d4:	9611      	str	r6, [sp, #68]	; 0x44
 800f5d6:	9308      	str	r3, [sp, #32]
 800f5d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f5da:	2b00      	cmp	r3, #0
 800f5dc:	f040 854e 	bne.w	801007c <_strtod_l+0xb2c>
 800f5e0:	9b08      	ldr	r3, [sp, #32]
 800f5e2:	b1e3      	cbz	r3, 800f61e <_strtod_l+0xce>
 800f5e4:	ec49 8b17 	vmov	d7, r8, r9
 800f5e8:	eeb1 0b47 	vneg.f64	d0, d7
 800f5ec:	b017      	add	sp, #92	; 0x5c
 800f5ee:	ecbd 8b0e 	vpop	{d8-d14}
 800f5f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f5f6:	2b20      	cmp	r3, #32
 800f5f8:	d1cd      	bne.n	800f596 <_strtod_l+0x46>
 800f5fa:	3201      	adds	r2, #1
 800f5fc:	9211      	str	r2, [sp, #68]	; 0x44
 800f5fe:	e7bf      	b.n	800f580 <_strtod_l+0x30>
 800f600:	2b2d      	cmp	r3, #45	; 0x2d
 800f602:	d1c8      	bne.n	800f596 <_strtod_l+0x46>
 800f604:	2301      	movs	r3, #1
 800f606:	9308      	str	r3, [sp, #32]
 800f608:	1c53      	adds	r3, r2, #1
 800f60a:	9311      	str	r3, [sp, #68]	; 0x44
 800f60c:	7853      	ldrb	r3, [r2, #1]
 800f60e:	2b00      	cmp	r3, #0
 800f610:	d1c3      	bne.n	800f59a <_strtod_l+0x4a>
 800f612:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f614:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
 800f618:	2b00      	cmp	r3, #0
 800f61a:	f040 852d 	bne.w	8010078 <_strtod_l+0xb28>
 800f61e:	ec49 8b10 	vmov	d0, r8, r9
 800f622:	e7e3      	b.n	800f5ec <_strtod_l+0x9c>
 800f624:	2300      	movs	r3, #0
 800f626:	e7ee      	b.n	800f606 <_strtod_l+0xb6>
 800f628:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f62a:	b13a      	cbz	r2, 800f63c <_strtod_l+0xec>
 800f62c:	2135      	movs	r1, #53	; 0x35
 800f62e:	a814      	add	r0, sp, #80	; 0x50
 800f630:	f001 fd4c 	bl	80110cc <__copybits>
 800f634:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f636:	4620      	mov	r0, r4
 800f638:	f001 f90e 	bl	8010858 <_Bfree>
 800f63c:	3d01      	subs	r5, #1
 800f63e:	2d04      	cmp	r5, #4
 800f640:	d806      	bhi.n	800f650 <_strtod_l+0x100>
 800f642:	e8df f005 	tbb	[pc, r5]
 800f646:	030a      	.short	0x030a
 800f648:	1714      	.short	0x1714
 800f64a:	0a          	.byte	0x0a
 800f64b:	00          	.byte	0x00
 800f64c:	e9dd 8914 	ldrd	r8, r9, [sp, #80]	; 0x50
 800f650:	073f      	lsls	r7, r7, #28
 800f652:	d5c1      	bpl.n	800f5d8 <_strtod_l+0x88>
 800f654:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 800f658:	e7be      	b.n	800f5d8 <_strtod_l+0x88>
 800f65a:	e9dd 8314 	ldrd	r8, r3, [sp, #80]	; 0x50
 800f65e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f660:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800f664:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800f668:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 800f66c:	e7f0      	b.n	800f650 <_strtod_l+0x100>
 800f66e:	f8df 9180 	ldr.w	r9, [pc, #384]	; 800f7f0 <_strtod_l+0x2a0>
 800f672:	e7ed      	b.n	800f650 <_strtod_l+0x100>
 800f674:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 800f678:	f04f 38ff 	mov.w	r8, #4294967295
 800f67c:	e7e8      	b.n	800f650 <_strtod_l+0x100>
 800f67e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f680:	1c5a      	adds	r2, r3, #1
 800f682:	9211      	str	r2, [sp, #68]	; 0x44
 800f684:	785b      	ldrb	r3, [r3, #1]
 800f686:	2b30      	cmp	r3, #48	; 0x30
 800f688:	d0f9      	beq.n	800f67e <_strtod_l+0x12e>
 800f68a:	2b00      	cmp	r3, #0
 800f68c:	d0a4      	beq.n	800f5d8 <_strtod_l+0x88>
 800f68e:	2301      	movs	r3, #1
 800f690:	f04f 0a00 	mov.w	sl, #0
 800f694:	9304      	str	r3, [sp, #16]
 800f696:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f698:	930a      	str	r3, [sp, #40]	; 0x28
 800f69a:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800f69e:	f8cd a018 	str.w	sl, [sp, #24]
 800f6a2:	220a      	movs	r2, #10
 800f6a4:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f6a6:	7807      	ldrb	r7, [r0, #0]
 800f6a8:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
 800f6ac:	b2d9      	uxtb	r1, r3
 800f6ae:	2909      	cmp	r1, #9
 800f6b0:	d92a      	bls.n	800f708 <_strtod_l+0x1b8>
 800f6b2:	9907      	ldr	r1, [sp, #28]
 800f6b4:	462a      	mov	r2, r5
 800f6b6:	f001 fe0f 	bl	80112d8 <strncmp>
 800f6ba:	2800      	cmp	r0, #0
 800f6bc:	d033      	beq.n	800f726 <_strtod_l+0x1d6>
 800f6be:	2000      	movs	r0, #0
 800f6c0:	9b06      	ldr	r3, [sp, #24]
 800f6c2:	463a      	mov	r2, r7
 800f6c4:	4601      	mov	r1, r0
 800f6c6:	4607      	mov	r7, r0
 800f6c8:	2a65      	cmp	r2, #101	; 0x65
 800f6ca:	d001      	beq.n	800f6d0 <_strtod_l+0x180>
 800f6cc:	2a45      	cmp	r2, #69	; 0x45
 800f6ce:	d117      	bne.n	800f700 <_strtod_l+0x1b0>
 800f6d0:	b91b      	cbnz	r3, 800f6da <_strtod_l+0x18a>
 800f6d2:	9b04      	ldr	r3, [sp, #16]
 800f6d4:	4303      	orrs	r3, r0
 800f6d6:	d09c      	beq.n	800f612 <_strtod_l+0xc2>
 800f6d8:	2300      	movs	r3, #0
 800f6da:	f8dd b044 	ldr.w	fp, [sp, #68]	; 0x44
 800f6de:	f10b 0201 	add.w	r2, fp, #1
 800f6e2:	9211      	str	r2, [sp, #68]	; 0x44
 800f6e4:	f89b 2001 	ldrb.w	r2, [fp, #1]
 800f6e8:	2a2b      	cmp	r2, #43	; 0x2b
 800f6ea:	d071      	beq.n	800f7d0 <_strtod_l+0x280>
 800f6ec:	2a2d      	cmp	r2, #45	; 0x2d
 800f6ee:	d077      	beq.n	800f7e0 <_strtod_l+0x290>
 800f6f0:	f04f 0e00 	mov.w	lr, #0
 800f6f4:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 800f6f8:	2d09      	cmp	r5, #9
 800f6fa:	d97f      	bls.n	800f7fc <_strtod_l+0x2ac>
 800f6fc:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
 800f700:	2500      	movs	r5, #0
 800f702:	e09b      	b.n	800f83c <_strtod_l+0x2ec>
 800f704:	2300      	movs	r3, #0
 800f706:	e7c3      	b.n	800f690 <_strtod_l+0x140>
 800f708:	9906      	ldr	r1, [sp, #24]
 800f70a:	2908      	cmp	r1, #8
 800f70c:	bfdd      	ittte	le
 800f70e:	9909      	ldrle	r1, [sp, #36]	; 0x24
 800f710:	fb02 3301 	mlale	r3, r2, r1, r3
 800f714:	9309      	strle	r3, [sp, #36]	; 0x24
 800f716:	fb02 3a0a 	mlagt	sl, r2, sl, r3
 800f71a:	9b06      	ldr	r3, [sp, #24]
 800f71c:	3001      	adds	r0, #1
 800f71e:	3301      	adds	r3, #1
 800f720:	9306      	str	r3, [sp, #24]
 800f722:	9011      	str	r0, [sp, #68]	; 0x44
 800f724:	e7be      	b.n	800f6a4 <_strtod_l+0x154>
 800f726:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f728:	195a      	adds	r2, r3, r5
 800f72a:	9211      	str	r2, [sp, #68]	; 0x44
 800f72c:	5d5a      	ldrb	r2, [r3, r5]
 800f72e:	9b06      	ldr	r3, [sp, #24]
 800f730:	b3a3      	cbz	r3, 800f79c <_strtod_l+0x24c>
 800f732:	4607      	mov	r7, r0
 800f734:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800f738:	2909      	cmp	r1, #9
 800f73a:	d912      	bls.n	800f762 <_strtod_l+0x212>
 800f73c:	2101      	movs	r1, #1
 800f73e:	e7c3      	b.n	800f6c8 <_strtod_l+0x178>
 800f740:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f742:	1c5a      	adds	r2, r3, #1
 800f744:	9211      	str	r2, [sp, #68]	; 0x44
 800f746:	785a      	ldrb	r2, [r3, #1]
 800f748:	3001      	adds	r0, #1
 800f74a:	2a30      	cmp	r2, #48	; 0x30
 800f74c:	d0f8      	beq.n	800f740 <_strtod_l+0x1f0>
 800f74e:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800f752:	2b08      	cmp	r3, #8
 800f754:	f200 8497 	bhi.w	8010086 <_strtod_l+0xb36>
 800f758:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f75a:	930a      	str	r3, [sp, #40]	; 0x28
 800f75c:	4607      	mov	r7, r0
 800f75e:	2000      	movs	r0, #0
 800f760:	4603      	mov	r3, r0
 800f762:	3a30      	subs	r2, #48	; 0x30
 800f764:	f100 0101 	add.w	r1, r0, #1
 800f768:	d012      	beq.n	800f790 <_strtod_l+0x240>
 800f76a:	440f      	add	r7, r1
 800f76c:	eb00 0c03 	add.w	ip, r0, r3
 800f770:	4619      	mov	r1, r3
 800f772:	250a      	movs	r5, #10
 800f774:	4561      	cmp	r1, ip
 800f776:	d113      	bne.n	800f7a0 <_strtod_l+0x250>
 800f778:	1819      	adds	r1, r3, r0
 800f77a:	2908      	cmp	r1, #8
 800f77c:	f103 0301 	add.w	r3, r3, #1
 800f780:	4403      	add	r3, r0
 800f782:	dc1c      	bgt.n	800f7be <_strtod_l+0x26e>
 800f784:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f786:	210a      	movs	r1, #10
 800f788:	fb01 2200 	mla	r2, r1, r0, r2
 800f78c:	9209      	str	r2, [sp, #36]	; 0x24
 800f78e:	2100      	movs	r1, #0
 800f790:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f792:	1c50      	adds	r0, r2, #1
 800f794:	9011      	str	r0, [sp, #68]	; 0x44
 800f796:	7852      	ldrb	r2, [r2, #1]
 800f798:	4608      	mov	r0, r1
 800f79a:	e7cb      	b.n	800f734 <_strtod_l+0x1e4>
 800f79c:	9806      	ldr	r0, [sp, #24]
 800f79e:	e7d4      	b.n	800f74a <_strtod_l+0x1fa>
 800f7a0:	2908      	cmp	r1, #8
 800f7a2:	dc04      	bgt.n	800f7ae <_strtod_l+0x25e>
 800f7a4:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800f7a6:	436e      	muls	r6, r5
 800f7a8:	9609      	str	r6, [sp, #36]	; 0x24
 800f7aa:	3101      	adds	r1, #1
 800f7ac:	e7e2      	b.n	800f774 <_strtod_l+0x224>
 800f7ae:	f101 0e01 	add.w	lr, r1, #1
 800f7b2:	f1be 0f10 	cmp.w	lr, #16
 800f7b6:	bfd8      	it	le
 800f7b8:	fb05 fa0a 	mulle.w	sl, r5, sl
 800f7bc:	e7f5      	b.n	800f7aa <_strtod_l+0x25a>
 800f7be:	2b10      	cmp	r3, #16
 800f7c0:	bfdc      	itt	le
 800f7c2:	210a      	movle	r1, #10
 800f7c4:	fb01 2a0a 	mlale	sl, r1, sl, r2
 800f7c8:	e7e1      	b.n	800f78e <_strtod_l+0x23e>
 800f7ca:	2700      	movs	r7, #0
 800f7cc:	2101      	movs	r1, #1
 800f7ce:	e780      	b.n	800f6d2 <_strtod_l+0x182>
 800f7d0:	f04f 0e00 	mov.w	lr, #0
 800f7d4:	f10b 0202 	add.w	r2, fp, #2
 800f7d8:	9211      	str	r2, [sp, #68]	; 0x44
 800f7da:	f89b 2002 	ldrb.w	r2, [fp, #2]
 800f7de:	e789      	b.n	800f6f4 <_strtod_l+0x1a4>
 800f7e0:	f04f 0e01 	mov.w	lr, #1
 800f7e4:	e7f6      	b.n	800f7d4 <_strtod_l+0x284>
 800f7e6:	bf00      	nop
 800f7e8:	08012cf0 	.word	0x08012cf0
 800f7ec:	08012c28 	.word	0x08012c28
 800f7f0:	7ff00000 	.word	0x7ff00000
 800f7f4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f7f6:	1c55      	adds	r5, r2, #1
 800f7f8:	9511      	str	r5, [sp, #68]	; 0x44
 800f7fa:	7852      	ldrb	r2, [r2, #1]
 800f7fc:	2a30      	cmp	r2, #48	; 0x30
 800f7fe:	d0f9      	beq.n	800f7f4 <_strtod_l+0x2a4>
 800f800:	f1a2 0531 	sub.w	r5, r2, #49	; 0x31
 800f804:	2d08      	cmp	r5, #8
 800f806:	f63f af7b 	bhi.w	800f700 <_strtod_l+0x1b0>
 800f80a:	f1a2 0c30 	sub.w	ip, r2, #48	; 0x30
 800f80e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f810:	9207      	str	r2, [sp, #28]
 800f812:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f814:	1c55      	adds	r5, r2, #1
 800f816:	9511      	str	r5, [sp, #68]	; 0x44
 800f818:	7852      	ldrb	r2, [r2, #1]
 800f81a:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 800f81e:	2e09      	cmp	r6, #9
 800f820:	d937      	bls.n	800f892 <_strtod_l+0x342>
 800f822:	9e07      	ldr	r6, [sp, #28]
 800f824:	1bad      	subs	r5, r5, r6
 800f826:	2d08      	cmp	r5, #8
 800f828:	f644 651f 	movw	r5, #19999	; 0x4e1f
 800f82c:	dc02      	bgt.n	800f834 <_strtod_l+0x2e4>
 800f82e:	4565      	cmp	r5, ip
 800f830:	bfa8      	it	ge
 800f832:	4665      	movge	r5, ip
 800f834:	f1be 0f00 	cmp.w	lr, #0
 800f838:	d000      	beq.n	800f83c <_strtod_l+0x2ec>
 800f83a:	426d      	negs	r5, r5
 800f83c:	2b00      	cmp	r3, #0
 800f83e:	d14d      	bne.n	800f8dc <_strtod_l+0x38c>
 800f840:	9b04      	ldr	r3, [sp, #16]
 800f842:	4303      	orrs	r3, r0
 800f844:	f47f aec8 	bne.w	800f5d8 <_strtod_l+0x88>
 800f848:	2900      	cmp	r1, #0
 800f84a:	f47f aee2 	bne.w	800f612 <_strtod_l+0xc2>
 800f84e:	2a69      	cmp	r2, #105	; 0x69
 800f850:	d027      	beq.n	800f8a2 <_strtod_l+0x352>
 800f852:	dc24      	bgt.n	800f89e <_strtod_l+0x34e>
 800f854:	2a49      	cmp	r2, #73	; 0x49
 800f856:	d024      	beq.n	800f8a2 <_strtod_l+0x352>
 800f858:	2a4e      	cmp	r2, #78	; 0x4e
 800f85a:	f47f aeda 	bne.w	800f612 <_strtod_l+0xc2>
 800f85e:	4996      	ldr	r1, [pc, #600]	; (800fab8 <_strtod_l+0x568>)
 800f860:	a811      	add	r0, sp, #68	; 0x44
 800f862:	f000 fef7 	bl	8010654 <__match>
 800f866:	2800      	cmp	r0, #0
 800f868:	f43f aed3 	beq.w	800f612 <_strtod_l+0xc2>
 800f86c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f86e:	781b      	ldrb	r3, [r3, #0]
 800f870:	2b28      	cmp	r3, #40	; 0x28
 800f872:	d12d      	bne.n	800f8d0 <_strtod_l+0x380>
 800f874:	4991      	ldr	r1, [pc, #580]	; (800fabc <_strtod_l+0x56c>)
 800f876:	aa14      	add	r2, sp, #80	; 0x50
 800f878:	a811      	add	r0, sp, #68	; 0x44
 800f87a:	f000 feff 	bl	801067c <__hexnan>
 800f87e:	2805      	cmp	r0, #5
 800f880:	d126      	bne.n	800f8d0 <_strtod_l+0x380>
 800f882:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800f884:	f8dd 8050 	ldr.w	r8, [sp, #80]	; 0x50
 800f888:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 800f88c:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 800f890:	e6a2      	b.n	800f5d8 <_strtod_l+0x88>
 800f892:	250a      	movs	r5, #10
 800f894:	fb05 250c 	mla	r5, r5, ip, r2
 800f898:	f1a5 0c30 	sub.w	ip, r5, #48	; 0x30
 800f89c:	e7b9      	b.n	800f812 <_strtod_l+0x2c2>
 800f89e:	2a6e      	cmp	r2, #110	; 0x6e
 800f8a0:	e7db      	b.n	800f85a <_strtod_l+0x30a>
 800f8a2:	4987      	ldr	r1, [pc, #540]	; (800fac0 <_strtod_l+0x570>)
 800f8a4:	a811      	add	r0, sp, #68	; 0x44
 800f8a6:	f000 fed5 	bl	8010654 <__match>
 800f8aa:	2800      	cmp	r0, #0
 800f8ac:	f43f aeb1 	beq.w	800f612 <_strtod_l+0xc2>
 800f8b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f8b2:	4984      	ldr	r1, [pc, #528]	; (800fac4 <_strtod_l+0x574>)
 800f8b4:	3b01      	subs	r3, #1
 800f8b6:	a811      	add	r0, sp, #68	; 0x44
 800f8b8:	9311      	str	r3, [sp, #68]	; 0x44
 800f8ba:	f000 fecb 	bl	8010654 <__match>
 800f8be:	b910      	cbnz	r0, 800f8c6 <_strtod_l+0x376>
 800f8c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f8c2:	3301      	adds	r3, #1
 800f8c4:	9311      	str	r3, [sp, #68]	; 0x44
 800f8c6:	f8df 9210 	ldr.w	r9, [pc, #528]	; 800fad8 <_strtod_l+0x588>
 800f8ca:	f04f 0800 	mov.w	r8, #0
 800f8ce:	e683      	b.n	800f5d8 <_strtod_l+0x88>
 800f8d0:	487d      	ldr	r0, [pc, #500]	; (800fac8 <_strtod_l+0x578>)
 800f8d2:	f001 fce9 	bl	80112a8 <nan>
 800f8d6:	ec59 8b10 	vmov	r8, r9, d0
 800f8da:	e67d      	b.n	800f5d8 <_strtod_l+0x88>
 800f8dc:	1bea      	subs	r2, r5, r7
 800f8de:	eddd 7a09 	vldr	s15, [sp, #36]	; 0x24
 800f8e2:	9207      	str	r2, [sp, #28]
 800f8e4:	9a06      	ldr	r2, [sp, #24]
 800f8e6:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 800f8ea:	2a00      	cmp	r2, #0
 800f8ec:	bf08      	it	eq
 800f8ee:	461a      	moveq	r2, r3
 800f8f0:	2b10      	cmp	r3, #16
 800f8f2:	9206      	str	r2, [sp, #24]
 800f8f4:	461a      	mov	r2, r3
 800f8f6:	bfa8      	it	ge
 800f8f8:	2210      	movge	r2, #16
 800f8fa:	2b09      	cmp	r3, #9
 800f8fc:	ec59 8b17 	vmov	r8, r9, d7
 800f900:	dd0c      	ble.n	800f91c <_strtod_l+0x3cc>
 800f902:	4972      	ldr	r1, [pc, #456]	; (800facc <_strtod_l+0x57c>)
 800f904:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
 800f908:	ed11 5b12 	vldr	d5, [r1, #-72]	; 0xffffffb8
 800f90c:	ee06 aa90 	vmov	s13, sl
 800f910:	eeb8 6b66 	vcvt.f64.u32	d6, s13
 800f914:	eea7 6b05 	vfma.f64	d6, d7, d5
 800f918:	ec59 8b16 	vmov	r8, r9, d6
 800f91c:	2b0f      	cmp	r3, #15
 800f91e:	dc36      	bgt.n	800f98e <_strtod_l+0x43e>
 800f920:	9907      	ldr	r1, [sp, #28]
 800f922:	2900      	cmp	r1, #0
 800f924:	f43f ae58 	beq.w	800f5d8 <_strtod_l+0x88>
 800f928:	dd23      	ble.n	800f972 <_strtod_l+0x422>
 800f92a:	2916      	cmp	r1, #22
 800f92c:	dc0b      	bgt.n	800f946 <_strtod_l+0x3f6>
 800f92e:	4b67      	ldr	r3, [pc, #412]	; (800facc <_strtod_l+0x57c>)
 800f930:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800f934:	ed93 7b00 	vldr	d7, [r3]
 800f938:	ec49 8b16 	vmov	d6, r8, r9
 800f93c:	ee27 7b06 	vmul.f64	d7, d7, d6
 800f940:	ec59 8b17 	vmov	r8, r9, d7
 800f944:	e648      	b.n	800f5d8 <_strtod_l+0x88>
 800f946:	9807      	ldr	r0, [sp, #28]
 800f948:	f1c3 0125 	rsb	r1, r3, #37	; 0x25
 800f94c:	4281      	cmp	r1, r0
 800f94e:	db1e      	blt.n	800f98e <_strtod_l+0x43e>
 800f950:	4a5e      	ldr	r2, [pc, #376]	; (800facc <_strtod_l+0x57c>)
 800f952:	f1c3 030f 	rsb	r3, r3, #15
 800f956:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800f95a:	ed91 7b00 	vldr	d7, [r1]
 800f95e:	ec49 8b16 	vmov	d6, r8, r9
 800f962:	1ac3      	subs	r3, r0, r3
 800f964:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800f968:	ee27 7b06 	vmul.f64	d7, d7, d6
 800f96c:	ed92 6b00 	vldr	d6, [r2]
 800f970:	e7e4      	b.n	800f93c <_strtod_l+0x3ec>
 800f972:	9907      	ldr	r1, [sp, #28]
 800f974:	3116      	adds	r1, #22
 800f976:	db0a      	blt.n	800f98e <_strtod_l+0x43e>
 800f978:	4b54      	ldr	r3, [pc, #336]	; (800facc <_strtod_l+0x57c>)
 800f97a:	1b7d      	subs	r5, r7, r5
 800f97c:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 800f980:	ed95 7b00 	vldr	d7, [r5]
 800f984:	ec49 8b16 	vmov	d6, r8, r9
 800f988:	ee86 7b07 	vdiv.f64	d7, d6, d7
 800f98c:	e7d8      	b.n	800f940 <_strtod_l+0x3f0>
 800f98e:	9907      	ldr	r1, [sp, #28]
 800f990:	1a9a      	subs	r2, r3, r2
 800f992:	440a      	add	r2, r1
 800f994:	2a00      	cmp	r2, #0
 800f996:	dd6f      	ble.n	800fa78 <_strtod_l+0x528>
 800f998:	f012 000f 	ands.w	r0, r2, #15
 800f99c:	d00a      	beq.n	800f9b4 <_strtod_l+0x464>
 800f99e:	494b      	ldr	r1, [pc, #300]	; (800facc <_strtod_l+0x57c>)
 800f9a0:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 800f9a4:	ed91 7b00 	vldr	d7, [r1]
 800f9a8:	ec49 8b16 	vmov	d6, r8, r9
 800f9ac:	ee27 7b06 	vmul.f64	d7, d7, d6
 800f9b0:	ec59 8b17 	vmov	r8, r9, d7
 800f9b4:	f032 020f 	bics.w	r2, r2, #15
 800f9b8:	d04f      	beq.n	800fa5a <_strtod_l+0x50a>
 800f9ba:	f5b2 7f9a 	cmp.w	r2, #308	; 0x134
 800f9be:	dd22      	ble.n	800fa06 <_strtod_l+0x4b6>
 800f9c0:	2500      	movs	r5, #0
 800f9c2:	462e      	mov	r6, r5
 800f9c4:	9506      	str	r5, [sp, #24]
 800f9c6:	462f      	mov	r7, r5
 800f9c8:	2322      	movs	r3, #34	; 0x22
 800f9ca:	f8df 910c 	ldr.w	r9, [pc, #268]	; 800fad8 <_strtod_l+0x588>
 800f9ce:	6023      	str	r3, [r4, #0]
 800f9d0:	f04f 0800 	mov.w	r8, #0
 800f9d4:	9b06      	ldr	r3, [sp, #24]
 800f9d6:	2b00      	cmp	r3, #0
 800f9d8:	f43f adfe 	beq.w	800f5d8 <_strtod_l+0x88>
 800f9dc:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f9de:	4620      	mov	r0, r4
 800f9e0:	f000 ff3a 	bl	8010858 <_Bfree>
 800f9e4:	4639      	mov	r1, r7
 800f9e6:	4620      	mov	r0, r4
 800f9e8:	f000 ff36 	bl	8010858 <_Bfree>
 800f9ec:	4631      	mov	r1, r6
 800f9ee:	4620      	mov	r0, r4
 800f9f0:	f000 ff32 	bl	8010858 <_Bfree>
 800f9f4:	9906      	ldr	r1, [sp, #24]
 800f9f6:	4620      	mov	r0, r4
 800f9f8:	f000 ff2e 	bl	8010858 <_Bfree>
 800f9fc:	4629      	mov	r1, r5
 800f9fe:	4620      	mov	r0, r4
 800fa00:	f000 ff2a 	bl	8010858 <_Bfree>
 800fa04:	e5e8      	b.n	800f5d8 <_strtod_l+0x88>
 800fa06:	2000      	movs	r0, #0
 800fa08:	ec49 8b17 	vmov	d7, r8, r9
 800fa0c:	f8df c0c0 	ldr.w	ip, [pc, #192]	; 800fad0 <_strtod_l+0x580>
 800fa10:	1112      	asrs	r2, r2, #4
 800fa12:	4601      	mov	r1, r0
 800fa14:	2a01      	cmp	r2, #1
 800fa16:	dc23      	bgt.n	800fa60 <_strtod_l+0x510>
 800fa18:	b108      	cbz	r0, 800fa1e <_strtod_l+0x4ce>
 800fa1a:	ec59 8b17 	vmov	r8, r9, d7
 800fa1e:	4a2c      	ldr	r2, [pc, #176]	; (800fad0 <_strtod_l+0x580>)
 800fa20:	482c      	ldr	r0, [pc, #176]	; (800fad4 <_strtod_l+0x584>)
 800fa22:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 800fa26:	ed92 7b00 	vldr	d7, [r2]
 800fa2a:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 800fa2e:	ec49 8b16 	vmov	d6, r8, r9
 800fa32:	4a29      	ldr	r2, [pc, #164]	; (800fad8 <_strtod_l+0x588>)
 800fa34:	ee27 7b06 	vmul.f64	d7, d7, d6
 800fa38:	ee17 1a90 	vmov	r1, s15
 800fa3c:	400a      	ands	r2, r1
 800fa3e:	4282      	cmp	r2, r0
 800fa40:	ec59 8b17 	vmov	r8, r9, d7
 800fa44:	d8bc      	bhi.n	800f9c0 <_strtod_l+0x470>
 800fa46:	f5a0 1080 	sub.w	r0, r0, #1048576	; 0x100000
 800fa4a:	4282      	cmp	r2, r0
 800fa4c:	bf86      	itte	hi
 800fa4e:	f8df 908c 	ldrhi.w	r9, [pc, #140]	; 800fadc <_strtod_l+0x58c>
 800fa52:	f04f 38ff 	movhi.w	r8, #4294967295
 800fa56:	f101 7954 	addls.w	r9, r1, #55574528	; 0x3500000
 800fa5a:	2200      	movs	r2, #0
 800fa5c:	9204      	str	r2, [sp, #16]
 800fa5e:	e078      	b.n	800fb52 <_strtod_l+0x602>
 800fa60:	07d6      	lsls	r6, r2, #31
 800fa62:	d504      	bpl.n	800fa6e <_strtod_l+0x51e>
 800fa64:	ed9c 6b00 	vldr	d6, [ip]
 800fa68:	2001      	movs	r0, #1
 800fa6a:	ee27 7b06 	vmul.f64	d7, d7, d6
 800fa6e:	3101      	adds	r1, #1
 800fa70:	1052      	asrs	r2, r2, #1
 800fa72:	f10c 0c08 	add.w	ip, ip, #8
 800fa76:	e7cd      	b.n	800fa14 <_strtod_l+0x4c4>
 800fa78:	d0ef      	beq.n	800fa5a <_strtod_l+0x50a>
 800fa7a:	4252      	negs	r2, r2
 800fa7c:	f012 000f 	ands.w	r0, r2, #15
 800fa80:	d00a      	beq.n	800fa98 <_strtod_l+0x548>
 800fa82:	4912      	ldr	r1, [pc, #72]	; (800facc <_strtod_l+0x57c>)
 800fa84:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 800fa88:	ed91 7b00 	vldr	d7, [r1]
 800fa8c:	ec49 8b16 	vmov	d6, r8, r9
 800fa90:	ee86 7b07 	vdiv.f64	d7, d6, d7
 800fa94:	ec59 8b17 	vmov	r8, r9, d7
 800fa98:	1112      	asrs	r2, r2, #4
 800fa9a:	d0de      	beq.n	800fa5a <_strtod_l+0x50a>
 800fa9c:	2a1f      	cmp	r2, #31
 800fa9e:	dd1f      	ble.n	800fae0 <_strtod_l+0x590>
 800faa0:	2500      	movs	r5, #0
 800faa2:	462e      	mov	r6, r5
 800faa4:	9506      	str	r5, [sp, #24]
 800faa6:	462f      	mov	r7, r5
 800faa8:	2322      	movs	r3, #34	; 0x22
 800faaa:	f04f 0800 	mov.w	r8, #0
 800faae:	f04f 0900 	mov.w	r9, #0
 800fab2:	6023      	str	r3, [r4, #0]
 800fab4:	e78e      	b.n	800f9d4 <_strtod_l+0x484>
 800fab6:	bf00      	nop
 800fab8:	08012c25 	.word	0x08012c25
 800fabc:	08012c3c 	.word	0x08012c3c
 800fac0:	08012c1c 	.word	0x08012c1c
 800fac4:	08012c1f 	.word	0x08012c1f
 800fac8:	08012eaf 	.word	0x08012eaf
 800facc:	08012da0 	.word	0x08012da0
 800fad0:	08012d78 	.word	0x08012d78
 800fad4:	7ca00000 	.word	0x7ca00000
 800fad8:	7ff00000 	.word	0x7ff00000
 800fadc:	7fefffff 	.word	0x7fefffff
 800fae0:	f012 0110 	ands.w	r1, r2, #16
 800fae4:	bf18      	it	ne
 800fae6:	216a      	movne	r1, #106	; 0x6a
 800fae8:	9104      	str	r1, [sp, #16]
 800faea:	ec49 8b17 	vmov	d7, r8, r9
 800faee:	49be      	ldr	r1, [pc, #760]	; (800fde8 <_strtod_l+0x898>)
 800faf0:	2000      	movs	r0, #0
 800faf2:	07d6      	lsls	r6, r2, #31
 800faf4:	d504      	bpl.n	800fb00 <_strtod_l+0x5b0>
 800faf6:	ed91 6b00 	vldr	d6, [r1]
 800fafa:	2001      	movs	r0, #1
 800fafc:	ee27 7b06 	vmul.f64	d7, d7, d6
 800fb00:	1052      	asrs	r2, r2, #1
 800fb02:	f101 0108 	add.w	r1, r1, #8
 800fb06:	d1f4      	bne.n	800faf2 <_strtod_l+0x5a2>
 800fb08:	b108      	cbz	r0, 800fb0e <_strtod_l+0x5be>
 800fb0a:	ec59 8b17 	vmov	r8, r9, d7
 800fb0e:	9a04      	ldr	r2, [sp, #16]
 800fb10:	b1c2      	cbz	r2, 800fb44 <_strtod_l+0x5f4>
 800fb12:	f3c9 510a 	ubfx	r1, r9, #20, #11
 800fb16:	f1c1 026b 	rsb	r2, r1, #107	; 0x6b
 800fb1a:	2a00      	cmp	r2, #0
 800fb1c:	4648      	mov	r0, r9
 800fb1e:	dd11      	ble.n	800fb44 <_strtod_l+0x5f4>
 800fb20:	2a1f      	cmp	r2, #31
 800fb22:	f340 812e 	ble.w	800fd82 <_strtod_l+0x832>
 800fb26:	2a34      	cmp	r2, #52	; 0x34
 800fb28:	bfde      	ittt	le
 800fb2a:	f1c1 014b 	rsble	r1, r1, #75	; 0x4b
 800fb2e:	f04f 32ff 	movle.w	r2, #4294967295
 800fb32:	fa02 f101 	lslle.w	r1, r2, r1
 800fb36:	f04f 0800 	mov.w	r8, #0
 800fb3a:	bfcc      	ite	gt
 800fb3c:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 800fb40:	ea01 0900 	andle.w	r9, r1, r0
 800fb44:	ec49 8b17 	vmov	d7, r8, r9
 800fb48:	eeb5 7b40 	vcmp.f64	d7, #0.0
 800fb4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fb50:	d0a6      	beq.n	800faa0 <_strtod_l+0x550>
 800fb52:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fb54:	9200      	str	r2, [sp, #0]
 800fb56:	990a      	ldr	r1, [sp, #40]	; 0x28
 800fb58:	9a06      	ldr	r2, [sp, #24]
 800fb5a:	4620      	mov	r0, r4
 800fb5c:	f000 fee4 	bl	8010928 <__s2b>
 800fb60:	9006      	str	r0, [sp, #24]
 800fb62:	2800      	cmp	r0, #0
 800fb64:	f43f af2c 	beq.w	800f9c0 <_strtod_l+0x470>
 800fb68:	9b07      	ldr	r3, [sp, #28]
 800fb6a:	1b7d      	subs	r5, r7, r5
 800fb6c:	2b00      	cmp	r3, #0
 800fb6e:	bfb4      	ite	lt
 800fb70:	462b      	movlt	r3, r5
 800fb72:	2300      	movge	r3, #0
 800fb74:	9309      	str	r3, [sp, #36]	; 0x24
 800fb76:	9b07      	ldr	r3, [sp, #28]
 800fb78:	ed9f 9b93 	vldr	d9, [pc, #588]	; 800fdc8 <_strtod_l+0x878>
 800fb7c:	ed9f ab94 	vldr	d10, [pc, #592]	; 800fdd0 <_strtod_l+0x880>
 800fb80:	ed9f bb95 	vldr	d11, [pc, #596]	; 800fdd8 <_strtod_l+0x888>
 800fb84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fb88:	2500      	movs	r5, #0
 800fb8a:	930c      	str	r3, [sp, #48]	; 0x30
 800fb8c:	462e      	mov	r6, r5
 800fb8e:	9b06      	ldr	r3, [sp, #24]
 800fb90:	4620      	mov	r0, r4
 800fb92:	6859      	ldr	r1, [r3, #4]
 800fb94:	f000 fe20 	bl	80107d8 <_Balloc>
 800fb98:	4607      	mov	r7, r0
 800fb9a:	2800      	cmp	r0, #0
 800fb9c:	f43f af14 	beq.w	800f9c8 <_strtod_l+0x478>
 800fba0:	9b06      	ldr	r3, [sp, #24]
 800fba2:	691a      	ldr	r2, [r3, #16]
 800fba4:	3202      	adds	r2, #2
 800fba6:	f103 010c 	add.w	r1, r3, #12
 800fbaa:	0092      	lsls	r2, r2, #2
 800fbac:	300c      	adds	r0, #12
 800fbae:	f7ff fc9d 	bl	800f4ec <memcpy>
 800fbb2:	ec49 8b10 	vmov	d0, r8, r9
 800fbb6:	aa14      	add	r2, sp, #80	; 0x50
 800fbb8:	a913      	add	r1, sp, #76	; 0x4c
 800fbba:	4620      	mov	r0, r4
 800fbbc:	f001 f9fa 	bl	8010fb4 <__d2b>
 800fbc0:	ec49 8b18 	vmov	d8, r8, r9
 800fbc4:	9012      	str	r0, [sp, #72]	; 0x48
 800fbc6:	2800      	cmp	r0, #0
 800fbc8:	f43f aefe 	beq.w	800f9c8 <_strtod_l+0x478>
 800fbcc:	2101      	movs	r1, #1
 800fbce:	4620      	mov	r0, r4
 800fbd0:	f000 ff44 	bl	8010a5c <__i2b>
 800fbd4:	4606      	mov	r6, r0
 800fbd6:	2800      	cmp	r0, #0
 800fbd8:	f43f aef6 	beq.w	800f9c8 <_strtod_l+0x478>
 800fbdc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800fbde:	9914      	ldr	r1, [sp, #80]	; 0x50
 800fbe0:	2b00      	cmp	r3, #0
 800fbe2:	bfab      	itete	ge
 800fbe4:	9a09      	ldrge	r2, [sp, #36]	; 0x24
 800fbe6:	9a0c      	ldrlt	r2, [sp, #48]	; 0x30
 800fbe8:	f8dd a030 	ldrge.w	sl, [sp, #48]	; 0x30
 800fbec:	f8dd b024 	ldrlt.w	fp, [sp, #36]	; 0x24
 800fbf0:	bfac      	ite	ge
 800fbf2:	eb03 0b02 	addge.w	fp, r3, r2
 800fbf6:	eba2 0a03 	sublt.w	sl, r2, r3
 800fbfa:	9a04      	ldr	r2, [sp, #16]
 800fbfc:	1a9b      	subs	r3, r3, r2
 800fbfe:	440b      	add	r3, r1
 800fc00:	4a7a      	ldr	r2, [pc, #488]	; (800fdec <_strtod_l+0x89c>)
 800fc02:	3b01      	subs	r3, #1
 800fc04:	4293      	cmp	r3, r2
 800fc06:	f1c1 0136 	rsb	r1, r1, #54	; 0x36
 800fc0a:	f280 80cd 	bge.w	800fda8 <_strtod_l+0x858>
 800fc0e:	1ad2      	subs	r2, r2, r3
 800fc10:	2a1f      	cmp	r2, #31
 800fc12:	eba1 0102 	sub.w	r1, r1, r2
 800fc16:	f04f 0001 	mov.w	r0, #1
 800fc1a:	f300 80b9 	bgt.w	800fd90 <_strtod_l+0x840>
 800fc1e:	fa00 f302 	lsl.w	r3, r0, r2
 800fc22:	930b      	str	r3, [sp, #44]	; 0x2c
 800fc24:	2300      	movs	r3, #0
 800fc26:	930a      	str	r3, [sp, #40]	; 0x28
 800fc28:	eb0b 0301 	add.w	r3, fp, r1
 800fc2c:	9a04      	ldr	r2, [sp, #16]
 800fc2e:	459b      	cmp	fp, r3
 800fc30:	448a      	add	sl, r1
 800fc32:	4492      	add	sl, r2
 800fc34:	465a      	mov	r2, fp
 800fc36:	bfa8      	it	ge
 800fc38:	461a      	movge	r2, r3
 800fc3a:	4552      	cmp	r2, sl
 800fc3c:	bfa8      	it	ge
 800fc3e:	4652      	movge	r2, sl
 800fc40:	2a00      	cmp	r2, #0
 800fc42:	bfc2      	ittt	gt
 800fc44:	1a9b      	subgt	r3, r3, r2
 800fc46:	ebaa 0a02 	subgt.w	sl, sl, r2
 800fc4a:	ebab 0b02 	subgt.w	fp, fp, r2
 800fc4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fc50:	2a00      	cmp	r2, #0
 800fc52:	dd18      	ble.n	800fc86 <_strtod_l+0x736>
 800fc54:	4631      	mov	r1, r6
 800fc56:	4620      	mov	r0, r4
 800fc58:	930f      	str	r3, [sp, #60]	; 0x3c
 800fc5a:	f000 ffbf 	bl	8010bdc <__pow5mult>
 800fc5e:	4606      	mov	r6, r0
 800fc60:	2800      	cmp	r0, #0
 800fc62:	f43f aeb1 	beq.w	800f9c8 <_strtod_l+0x478>
 800fc66:	4601      	mov	r1, r0
 800fc68:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fc6a:	4620      	mov	r0, r4
 800fc6c:	f000 ff0c 	bl	8010a88 <__multiply>
 800fc70:	900e      	str	r0, [sp, #56]	; 0x38
 800fc72:	2800      	cmp	r0, #0
 800fc74:	f43f aea8 	beq.w	800f9c8 <_strtod_l+0x478>
 800fc78:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fc7a:	4620      	mov	r0, r4
 800fc7c:	f000 fdec 	bl	8010858 <_Bfree>
 800fc80:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800fc82:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fc84:	9212      	str	r2, [sp, #72]	; 0x48
 800fc86:	2b00      	cmp	r3, #0
 800fc88:	f300 8093 	bgt.w	800fdb2 <_strtod_l+0x862>
 800fc8c:	9b07      	ldr	r3, [sp, #28]
 800fc8e:	2b00      	cmp	r3, #0
 800fc90:	dd08      	ble.n	800fca4 <_strtod_l+0x754>
 800fc92:	4639      	mov	r1, r7
 800fc94:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800fc96:	4620      	mov	r0, r4
 800fc98:	f000 ffa0 	bl	8010bdc <__pow5mult>
 800fc9c:	4607      	mov	r7, r0
 800fc9e:	2800      	cmp	r0, #0
 800fca0:	f43f ae92 	beq.w	800f9c8 <_strtod_l+0x478>
 800fca4:	f1ba 0f00 	cmp.w	sl, #0
 800fca8:	dd08      	ble.n	800fcbc <_strtod_l+0x76c>
 800fcaa:	4639      	mov	r1, r7
 800fcac:	4652      	mov	r2, sl
 800fcae:	4620      	mov	r0, r4
 800fcb0:	f000 ffee 	bl	8010c90 <__lshift>
 800fcb4:	4607      	mov	r7, r0
 800fcb6:	2800      	cmp	r0, #0
 800fcb8:	f43f ae86 	beq.w	800f9c8 <_strtod_l+0x478>
 800fcbc:	f1bb 0f00 	cmp.w	fp, #0
 800fcc0:	dd08      	ble.n	800fcd4 <_strtod_l+0x784>
 800fcc2:	4631      	mov	r1, r6
 800fcc4:	465a      	mov	r2, fp
 800fcc6:	4620      	mov	r0, r4
 800fcc8:	f000 ffe2 	bl	8010c90 <__lshift>
 800fccc:	4606      	mov	r6, r0
 800fcce:	2800      	cmp	r0, #0
 800fcd0:	f43f ae7a 	beq.w	800f9c8 <_strtod_l+0x478>
 800fcd4:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fcd6:	463a      	mov	r2, r7
 800fcd8:	4620      	mov	r0, r4
 800fcda:	f001 f865 	bl	8010da8 <__mdiff>
 800fcde:	4605      	mov	r5, r0
 800fce0:	2800      	cmp	r0, #0
 800fce2:	f43f ae71 	beq.w	800f9c8 <_strtod_l+0x478>
 800fce6:	2300      	movs	r3, #0
 800fce8:	f8d0 a00c 	ldr.w	sl, [r0, #12]
 800fcec:	60c3      	str	r3, [r0, #12]
 800fcee:	4631      	mov	r1, r6
 800fcf0:	f001 f83e 	bl	8010d70 <__mcmp>
 800fcf4:	2800      	cmp	r0, #0
 800fcf6:	da7d      	bge.n	800fdf4 <_strtod_l+0x8a4>
 800fcf8:	ea5a 0308 	orrs.w	r3, sl, r8
 800fcfc:	f040 80a3 	bne.w	800fe46 <_strtod_l+0x8f6>
 800fd00:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800fd04:	2b00      	cmp	r3, #0
 800fd06:	f040 809e 	bne.w	800fe46 <_strtod_l+0x8f6>
 800fd0a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800fd0e:	0d1b      	lsrs	r3, r3, #20
 800fd10:	051b      	lsls	r3, r3, #20
 800fd12:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800fd16:	f240 8096 	bls.w	800fe46 <_strtod_l+0x8f6>
 800fd1a:	696b      	ldr	r3, [r5, #20]
 800fd1c:	b91b      	cbnz	r3, 800fd26 <_strtod_l+0x7d6>
 800fd1e:	692b      	ldr	r3, [r5, #16]
 800fd20:	2b01      	cmp	r3, #1
 800fd22:	f340 8090 	ble.w	800fe46 <_strtod_l+0x8f6>
 800fd26:	4629      	mov	r1, r5
 800fd28:	2201      	movs	r2, #1
 800fd2a:	4620      	mov	r0, r4
 800fd2c:	f000 ffb0 	bl	8010c90 <__lshift>
 800fd30:	4631      	mov	r1, r6
 800fd32:	4605      	mov	r5, r0
 800fd34:	f001 f81c 	bl	8010d70 <__mcmp>
 800fd38:	2800      	cmp	r0, #0
 800fd3a:	f340 8084 	ble.w	800fe46 <_strtod_l+0x8f6>
 800fd3e:	9904      	ldr	r1, [sp, #16]
 800fd40:	4a2b      	ldr	r2, [pc, #172]	; (800fdf0 <_strtod_l+0x8a0>)
 800fd42:	464b      	mov	r3, r9
 800fd44:	2900      	cmp	r1, #0
 800fd46:	f000 809d 	beq.w	800fe84 <_strtod_l+0x934>
 800fd4a:	ea02 0109 	and.w	r1, r2, r9
 800fd4e:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800fd52:	f300 8097 	bgt.w	800fe84 <_strtod_l+0x934>
 800fd56:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800fd5a:	f77f aea5 	ble.w	800faa8 <_strtod_l+0x558>
 800fd5e:	ed9f 7b20 	vldr	d7, [pc, #128]	; 800fde0 <_strtod_l+0x890>
 800fd62:	ec49 8b16 	vmov	d6, r8, r9
 800fd66:	ee26 7b07 	vmul.f64	d7, d6, d7
 800fd6a:	ed8d 7b04 	vstr	d7, [sp, #16]
 800fd6e:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 800fd72:	4313      	orrs	r3, r2
 800fd74:	bf08      	it	eq
 800fd76:	2322      	moveq	r3, #34	; 0x22
 800fd78:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800fd7c:	bf08      	it	eq
 800fd7e:	6023      	streq	r3, [r4, #0]
 800fd80:	e62c      	b.n	800f9dc <_strtod_l+0x48c>
 800fd82:	f04f 31ff 	mov.w	r1, #4294967295
 800fd86:	fa01 f202 	lsl.w	r2, r1, r2
 800fd8a:	ea02 0808 	and.w	r8, r2, r8
 800fd8e:	e6d9      	b.n	800fb44 <_strtod_l+0x5f4>
 800fd90:	f1c3 437f 	rsb	r3, r3, #4278190080	; 0xff000000
 800fd94:	f503 037f 	add.w	r3, r3, #16711680	; 0xff0000
 800fd98:	f503 437b 	add.w	r3, r3, #64256	; 0xfb00
 800fd9c:	33e2      	adds	r3, #226	; 0xe2
 800fd9e:	fa00 f303 	lsl.w	r3, r0, r3
 800fda2:	e9cd 300a 	strd	r3, r0, [sp, #40]	; 0x28
 800fda6:	e73f      	b.n	800fc28 <_strtod_l+0x6d8>
 800fda8:	2200      	movs	r2, #0
 800fdaa:	2301      	movs	r3, #1
 800fdac:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800fdb0:	e73a      	b.n	800fc28 <_strtod_l+0x6d8>
 800fdb2:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fdb4:	461a      	mov	r2, r3
 800fdb6:	4620      	mov	r0, r4
 800fdb8:	f000 ff6a 	bl	8010c90 <__lshift>
 800fdbc:	9012      	str	r0, [sp, #72]	; 0x48
 800fdbe:	2800      	cmp	r0, #0
 800fdc0:	f47f af64 	bne.w	800fc8c <_strtod_l+0x73c>
 800fdc4:	e600      	b.n	800f9c8 <_strtod_l+0x478>
 800fdc6:	bf00      	nop
 800fdc8:	94a03595 	.word	0x94a03595
 800fdcc:	3fcfffff 	.word	0x3fcfffff
 800fdd0:	94a03595 	.word	0x94a03595
 800fdd4:	3fdfffff 	.word	0x3fdfffff
 800fdd8:	35afe535 	.word	0x35afe535
 800fddc:	3fe00000 	.word	0x3fe00000
 800fde0:	00000000 	.word	0x00000000
 800fde4:	39500000 	.word	0x39500000
 800fde8:	08012c50 	.word	0x08012c50
 800fdec:	fffffc02 	.word	0xfffffc02
 800fdf0:	7ff00000 	.word	0x7ff00000
 800fdf4:	46cb      	mov	fp, r9
 800fdf6:	d15f      	bne.n	800feb8 <_strtod_l+0x968>
 800fdf8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800fdfc:	f1ba 0f00 	cmp.w	sl, #0
 800fe00:	d02a      	beq.n	800fe58 <_strtod_l+0x908>
 800fe02:	4aa7      	ldr	r2, [pc, #668]	; (80100a0 <_strtod_l+0xb50>)
 800fe04:	4293      	cmp	r3, r2
 800fe06:	d12b      	bne.n	800fe60 <_strtod_l+0x910>
 800fe08:	9b04      	ldr	r3, [sp, #16]
 800fe0a:	4642      	mov	r2, r8
 800fe0c:	b1fb      	cbz	r3, 800fe4e <_strtod_l+0x8fe>
 800fe0e:	4ba5      	ldr	r3, [pc, #660]	; (80100a4 <_strtod_l+0xb54>)
 800fe10:	ea09 0303 	and.w	r3, r9, r3
 800fe14:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800fe18:	f04f 31ff 	mov.w	r1, #4294967295
 800fe1c:	d81a      	bhi.n	800fe54 <_strtod_l+0x904>
 800fe1e:	0d1b      	lsrs	r3, r3, #20
 800fe20:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800fe24:	fa01 f303 	lsl.w	r3, r1, r3
 800fe28:	429a      	cmp	r2, r3
 800fe2a:	d119      	bne.n	800fe60 <_strtod_l+0x910>
 800fe2c:	4b9e      	ldr	r3, [pc, #632]	; (80100a8 <_strtod_l+0xb58>)
 800fe2e:	459b      	cmp	fp, r3
 800fe30:	d102      	bne.n	800fe38 <_strtod_l+0x8e8>
 800fe32:	3201      	adds	r2, #1
 800fe34:	f43f adc8 	beq.w	800f9c8 <_strtod_l+0x478>
 800fe38:	4b9a      	ldr	r3, [pc, #616]	; (80100a4 <_strtod_l+0xb54>)
 800fe3a:	ea0b 0303 	and.w	r3, fp, r3
 800fe3e:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 800fe42:	f04f 0800 	mov.w	r8, #0
 800fe46:	9b04      	ldr	r3, [sp, #16]
 800fe48:	2b00      	cmp	r3, #0
 800fe4a:	d188      	bne.n	800fd5e <_strtod_l+0x80e>
 800fe4c:	e5c6      	b.n	800f9dc <_strtod_l+0x48c>
 800fe4e:	f04f 33ff 	mov.w	r3, #4294967295
 800fe52:	e7e9      	b.n	800fe28 <_strtod_l+0x8d8>
 800fe54:	460b      	mov	r3, r1
 800fe56:	e7e7      	b.n	800fe28 <_strtod_l+0x8d8>
 800fe58:	ea53 0308 	orrs.w	r3, r3, r8
 800fe5c:	f43f af6f 	beq.w	800fd3e <_strtod_l+0x7ee>
 800fe60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fe62:	b1cb      	cbz	r3, 800fe98 <_strtod_l+0x948>
 800fe64:	ea13 0f0b 	tst.w	r3, fp
 800fe68:	d0ed      	beq.n	800fe46 <_strtod_l+0x8f6>
 800fe6a:	9a04      	ldr	r2, [sp, #16]
 800fe6c:	4640      	mov	r0, r8
 800fe6e:	4649      	mov	r1, r9
 800fe70:	f1ba 0f00 	cmp.w	sl, #0
 800fe74:	d014      	beq.n	800fea0 <_strtod_l+0x950>
 800fe76:	f7ff fb4f 	bl	800f518 <sulp>
 800fe7a:	ee38 7b00 	vadd.f64	d7, d8, d0
 800fe7e:	ec59 8b17 	vmov	r8, r9, d7
 800fe82:	e7e0      	b.n	800fe46 <_strtod_l+0x8f6>
 800fe84:	4013      	ands	r3, r2
 800fe86:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800fe8a:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 800fe8e:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 800fe92:	f04f 38ff 	mov.w	r8, #4294967295
 800fe96:	e7d6      	b.n	800fe46 <_strtod_l+0x8f6>
 800fe98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fe9a:	ea13 0f08 	tst.w	r3, r8
 800fe9e:	e7e3      	b.n	800fe68 <_strtod_l+0x918>
 800fea0:	f7ff fb3a 	bl	800f518 <sulp>
 800fea4:	ee38 0b40 	vsub.f64	d0, d8, d0
 800fea8:	eeb5 0b40 	vcmp.f64	d0, #0.0
 800feac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800feb0:	ec59 8b10 	vmov	r8, r9, d0
 800feb4:	d1c7      	bne.n	800fe46 <_strtod_l+0x8f6>
 800feb6:	e5f7      	b.n	800faa8 <_strtod_l+0x558>
 800feb8:	4631      	mov	r1, r6
 800feba:	4628      	mov	r0, r5
 800febc:	f001 f8d6 	bl	801106c <__ratio>
 800fec0:	eeb0 7b00 	vmov.f64	d7, #0	; 0x40000000  2.0
 800fec4:	eeb4 0bc7 	vcmpe.f64	d0, d7
 800fec8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fecc:	d865      	bhi.n	800ff9a <_strtod_l+0xa4a>
 800fece:	f1ba 0f00 	cmp.w	sl, #0
 800fed2:	d042      	beq.n	800ff5a <_strtod_l+0xa0a>
 800fed4:	4b75      	ldr	r3, [pc, #468]	; (80100ac <_strtod_l+0xb5c>)
 800fed6:	2200      	movs	r2, #0
 800fed8:	eeb7 db00 	vmov.f64	d13, #112	; 0x3f800000  1.0
 800fedc:	4871      	ldr	r0, [pc, #452]	; (80100a4 <_strtod_l+0xb54>)
 800fede:	f8df c1d8 	ldr.w	ip, [pc, #472]	; 80100b8 <_strtod_l+0xb68>
 800fee2:	ea0b 0100 	and.w	r1, fp, r0
 800fee6:	4561      	cmp	r1, ip
 800fee8:	f040 808e 	bne.w	8010008 <_strtod_l+0xab8>
 800feec:	f1ab 7954 	sub.w	r9, fp, #55574528	; 0x3500000
 800fef0:	ec49 8b10 	vmov	d0, r8, r9
 800fef4:	ec43 2b1c 	vmov	d12, r2, r3
 800fef8:	910a      	str	r1, [sp, #40]	; 0x28
 800fefa:	f000 ffdf 	bl	8010ebc <__ulp>
 800fefe:	ec49 8b1e 	vmov	d14, r8, r9
 800ff02:	4868      	ldr	r0, [pc, #416]	; (80100a4 <_strtod_l+0xb54>)
 800ff04:	eeac eb00 	vfma.f64	d14, d12, d0
 800ff08:	ee1e 3a90 	vmov	r3, s29
 800ff0c:	4a68      	ldr	r2, [pc, #416]	; (80100b0 <_strtod_l+0xb60>)
 800ff0e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800ff10:	4018      	ands	r0, r3
 800ff12:	4290      	cmp	r0, r2
 800ff14:	ec59 8b1e 	vmov	r8, r9, d14
 800ff18:	d94e      	bls.n	800ffb8 <_strtod_l+0xa68>
 800ff1a:	ee18 3a90 	vmov	r3, s17
 800ff1e:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 800ff22:	4293      	cmp	r3, r2
 800ff24:	d104      	bne.n	800ff30 <_strtod_l+0x9e0>
 800ff26:	ee18 3a10 	vmov	r3, s16
 800ff2a:	3301      	adds	r3, #1
 800ff2c:	f43f ad4c 	beq.w	800f9c8 <_strtod_l+0x478>
 800ff30:	f8df 9174 	ldr.w	r9, [pc, #372]	; 80100a8 <_strtod_l+0xb58>
 800ff34:	f04f 38ff 	mov.w	r8, #4294967295
 800ff38:	9912      	ldr	r1, [sp, #72]	; 0x48
 800ff3a:	4620      	mov	r0, r4
 800ff3c:	f000 fc8c 	bl	8010858 <_Bfree>
 800ff40:	4639      	mov	r1, r7
 800ff42:	4620      	mov	r0, r4
 800ff44:	f000 fc88 	bl	8010858 <_Bfree>
 800ff48:	4631      	mov	r1, r6
 800ff4a:	4620      	mov	r0, r4
 800ff4c:	f000 fc84 	bl	8010858 <_Bfree>
 800ff50:	4629      	mov	r1, r5
 800ff52:	4620      	mov	r0, r4
 800ff54:	f000 fc80 	bl	8010858 <_Bfree>
 800ff58:	e619      	b.n	800fb8e <_strtod_l+0x63e>
 800ff5a:	f1b8 0f00 	cmp.w	r8, #0
 800ff5e:	d112      	bne.n	800ff86 <_strtod_l+0xa36>
 800ff60:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800ff64:	b9b3      	cbnz	r3, 800ff94 <_strtod_l+0xa44>
 800ff66:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
 800ff6a:	eeb4 0bc7 	vcmpe.f64	d0, d7
 800ff6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ff72:	eeb6 db00 	vmov.f64	d13, #96	; 0x3f000000  0.5
 800ff76:	bf58      	it	pl
 800ff78:	ee20 db0d 	vmulpl.f64	d13, d0, d13
 800ff7c:	eeb1 7b4d 	vneg.f64	d7, d13
 800ff80:	ec53 2b17 	vmov	r2, r3, d7
 800ff84:	e7aa      	b.n	800fedc <_strtod_l+0x98c>
 800ff86:	f1b8 0f01 	cmp.w	r8, #1
 800ff8a:	d103      	bne.n	800ff94 <_strtod_l+0xa44>
 800ff8c:	f1b9 0f00 	cmp.w	r9, #0
 800ff90:	f43f ad8a 	beq.w	800faa8 <_strtod_l+0x558>
 800ff94:	4b47      	ldr	r3, [pc, #284]	; (80100b4 <_strtod_l+0xb64>)
 800ff96:	2200      	movs	r2, #0
 800ff98:	e79e      	b.n	800fed8 <_strtod_l+0x988>
 800ff9a:	eeb6 db00 	vmov.f64	d13, #96	; 0x3f000000  0.5
 800ff9e:	ee20 db0d 	vmul.f64	d13, d0, d13
 800ffa2:	f1ba 0f00 	cmp.w	sl, #0
 800ffa6:	d104      	bne.n	800ffb2 <_strtod_l+0xa62>
 800ffa8:	eeb1 7b4d 	vneg.f64	d7, d13
 800ffac:	ec53 2b17 	vmov	r2, r3, d7
 800ffb0:	e794      	b.n	800fedc <_strtod_l+0x98c>
 800ffb2:	eeb0 7b4d 	vmov.f64	d7, d13
 800ffb6:	e7f9      	b.n	800ffac <_strtod_l+0xa5c>
 800ffb8:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 800ffbc:	9b04      	ldr	r3, [sp, #16]
 800ffbe:	2b00      	cmp	r3, #0
 800ffc0:	d1ba      	bne.n	800ff38 <_strtod_l+0x9e8>
 800ffc2:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800ffc6:	0d1b      	lsrs	r3, r3, #20
 800ffc8:	051b      	lsls	r3, r3, #20
 800ffca:	4299      	cmp	r1, r3
 800ffcc:	d1b4      	bne.n	800ff38 <_strtod_l+0x9e8>
 800ffce:	ec51 0b1d 	vmov	r0, r1, d13
 800ffd2:	f7f0 fbb1 	bl	8000738 <__aeabi_d2lz>
 800ffd6:	f7f0 fb69 	bl	80006ac <__aeabi_l2d>
 800ffda:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800ffde:	ec41 0b17 	vmov	d7, r0, r1
 800ffe2:	ea43 0308 	orr.w	r3, r3, r8
 800ffe6:	ea53 030a 	orrs.w	r3, r3, sl
 800ffea:	ee3d db47 	vsub.f64	d13, d13, d7
 800ffee:	d03c      	beq.n	801006a <_strtod_l+0xb1a>
 800fff0:	eeb4 dbca 	vcmpe.f64	d13, d10
 800fff4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fff8:	f53f acf0 	bmi.w	800f9dc <_strtod_l+0x48c>
 800fffc:	eeb4 dbcb 	vcmpe.f64	d13, d11
 8010000:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010004:	dd98      	ble.n	800ff38 <_strtod_l+0x9e8>
 8010006:	e4e9      	b.n	800f9dc <_strtod_l+0x48c>
 8010008:	9804      	ldr	r0, [sp, #16]
 801000a:	b1f0      	cbz	r0, 801004a <_strtod_l+0xafa>
 801000c:	f1b1 6fd4 	cmp.w	r1, #111149056	; 0x6a00000
 8010010:	d81b      	bhi.n	801004a <_strtod_l+0xafa>
 8010012:	ed9f 7b21 	vldr	d7, [pc, #132]	; 8010098 <_strtod_l+0xb48>
 8010016:	eeb4 dbc7 	vcmpe.f64	d13, d7
 801001a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801001e:	d811      	bhi.n	8010044 <_strtod_l+0xaf4>
 8010020:	eebc dbcd 	vcvt.u32.f64	s26, d13
 8010024:	ee1d 3a10 	vmov	r3, s26
 8010028:	2b01      	cmp	r3, #1
 801002a:	bf38      	it	cc
 801002c:	2301      	movcc	r3, #1
 801002e:	ee0d 3a10 	vmov	s26, r3
 8010032:	eeb8 db4d 	vcvt.f64.u32	d13, s26
 8010036:	f1ba 0f00 	cmp.w	sl, #0
 801003a:	d113      	bne.n	8010064 <_strtod_l+0xb14>
 801003c:	eeb1 7b4d 	vneg.f64	d7, d13
 8010040:	ec53 2b17 	vmov	r2, r3, d7
 8010044:	f103 60d6 	add.w	r0, r3, #112197632	; 0x6b00000
 8010048:	1a43      	subs	r3, r0, r1
 801004a:	eeb0 0b48 	vmov.f64	d0, d8
 801004e:	ec43 2b1c 	vmov	d12, r2, r3
 8010052:	910a      	str	r1, [sp, #40]	; 0x28
 8010054:	f000 ff32 	bl	8010ebc <__ulp>
 8010058:	990a      	ldr	r1, [sp, #40]	; 0x28
 801005a:	eeac 8b00 	vfma.f64	d8, d12, d0
 801005e:	ec59 8b18 	vmov	r8, r9, d8
 8010062:	e7ab      	b.n	800ffbc <_strtod_l+0xa6c>
 8010064:	eeb0 7b4d 	vmov.f64	d7, d13
 8010068:	e7ea      	b.n	8010040 <_strtod_l+0xaf0>
 801006a:	eeb4 dbc9 	vcmpe.f64	d13, d9
 801006e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010072:	f57f af61 	bpl.w	800ff38 <_strtod_l+0x9e8>
 8010076:	e4b1      	b.n	800f9dc <_strtod_l+0x48c>
 8010078:	2300      	movs	r3, #0
 801007a:	9308      	str	r3, [sp, #32]
 801007c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801007e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010080:	6013      	str	r3, [r2, #0]
 8010082:	f7ff baad 	b.w	800f5e0 <_strtod_l+0x90>
 8010086:	2a65      	cmp	r2, #101	; 0x65
 8010088:	f43f ab9f 	beq.w	800f7ca <_strtod_l+0x27a>
 801008c:	2a45      	cmp	r2, #69	; 0x45
 801008e:	f43f ab9c 	beq.w	800f7ca <_strtod_l+0x27a>
 8010092:	2101      	movs	r1, #1
 8010094:	f7ff bbd4 	b.w	800f840 <_strtod_l+0x2f0>
 8010098:	ffc00000 	.word	0xffc00000
 801009c:	41dfffff 	.word	0x41dfffff
 80100a0:	000fffff 	.word	0x000fffff
 80100a4:	7ff00000 	.word	0x7ff00000
 80100a8:	7fefffff 	.word	0x7fefffff
 80100ac:	3ff00000 	.word	0x3ff00000
 80100b0:	7c9fffff 	.word	0x7c9fffff
 80100b4:	bff00000 	.word	0xbff00000
 80100b8:	7fe00000 	.word	0x7fe00000

080100bc <strtod>:
 80100bc:	460a      	mov	r2, r1
 80100be:	4601      	mov	r1, r0
 80100c0:	4802      	ldr	r0, [pc, #8]	; (80100cc <strtod+0x10>)
 80100c2:	4b03      	ldr	r3, [pc, #12]	; (80100d0 <strtod+0x14>)
 80100c4:	6800      	ldr	r0, [r0, #0]
 80100c6:	f7ff ba43 	b.w	800f550 <_strtod_l>
 80100ca:	bf00      	nop
 80100cc:	240000c0 	.word	0x240000c0
 80100d0:	24000128 	.word	0x24000128

080100d4 <rshift>:
 80100d4:	6903      	ldr	r3, [r0, #16]
 80100d6:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80100da:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80100de:	ea4f 1261 	mov.w	r2, r1, asr #5
 80100e2:	f100 0414 	add.w	r4, r0, #20
 80100e6:	dd45      	ble.n	8010174 <rshift+0xa0>
 80100e8:	f011 011f 	ands.w	r1, r1, #31
 80100ec:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80100f0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80100f4:	d10c      	bne.n	8010110 <rshift+0x3c>
 80100f6:	f100 0710 	add.w	r7, r0, #16
 80100fa:	4629      	mov	r1, r5
 80100fc:	42b1      	cmp	r1, r6
 80100fe:	d334      	bcc.n	801016a <rshift+0x96>
 8010100:	1a9b      	subs	r3, r3, r2
 8010102:	009b      	lsls	r3, r3, #2
 8010104:	1eea      	subs	r2, r5, #3
 8010106:	4296      	cmp	r6, r2
 8010108:	bf38      	it	cc
 801010a:	2300      	movcc	r3, #0
 801010c:	4423      	add	r3, r4
 801010e:	e015      	b.n	801013c <rshift+0x68>
 8010110:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 8010114:	f1c1 0820 	rsb	r8, r1, #32
 8010118:	40cf      	lsrs	r7, r1
 801011a:	f105 0e04 	add.w	lr, r5, #4
 801011e:	46a1      	mov	r9, r4
 8010120:	4576      	cmp	r6, lr
 8010122:	46f4      	mov	ip, lr
 8010124:	d815      	bhi.n	8010152 <rshift+0x7e>
 8010126:	1a9a      	subs	r2, r3, r2
 8010128:	0092      	lsls	r2, r2, #2
 801012a:	3a04      	subs	r2, #4
 801012c:	3501      	adds	r5, #1
 801012e:	42ae      	cmp	r6, r5
 8010130:	bf38      	it	cc
 8010132:	2200      	movcc	r2, #0
 8010134:	18a3      	adds	r3, r4, r2
 8010136:	50a7      	str	r7, [r4, r2]
 8010138:	b107      	cbz	r7, 801013c <rshift+0x68>
 801013a:	3304      	adds	r3, #4
 801013c:	1b1a      	subs	r2, r3, r4
 801013e:	42a3      	cmp	r3, r4
 8010140:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8010144:	bf08      	it	eq
 8010146:	2300      	moveq	r3, #0
 8010148:	6102      	str	r2, [r0, #16]
 801014a:	bf08      	it	eq
 801014c:	6143      	streq	r3, [r0, #20]
 801014e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010152:	f8dc c000 	ldr.w	ip, [ip]
 8010156:	fa0c fc08 	lsl.w	ip, ip, r8
 801015a:	ea4c 0707 	orr.w	r7, ip, r7
 801015e:	f849 7b04 	str.w	r7, [r9], #4
 8010162:	f85e 7b04 	ldr.w	r7, [lr], #4
 8010166:	40cf      	lsrs	r7, r1
 8010168:	e7da      	b.n	8010120 <rshift+0x4c>
 801016a:	f851 cb04 	ldr.w	ip, [r1], #4
 801016e:	f847 cf04 	str.w	ip, [r7, #4]!
 8010172:	e7c3      	b.n	80100fc <rshift+0x28>
 8010174:	4623      	mov	r3, r4
 8010176:	e7e1      	b.n	801013c <rshift+0x68>

08010178 <__hexdig_fun>:
 8010178:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 801017c:	2b09      	cmp	r3, #9
 801017e:	d802      	bhi.n	8010186 <__hexdig_fun+0xe>
 8010180:	3820      	subs	r0, #32
 8010182:	b2c0      	uxtb	r0, r0
 8010184:	4770      	bx	lr
 8010186:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 801018a:	2b05      	cmp	r3, #5
 801018c:	d801      	bhi.n	8010192 <__hexdig_fun+0x1a>
 801018e:	3847      	subs	r0, #71	; 0x47
 8010190:	e7f7      	b.n	8010182 <__hexdig_fun+0xa>
 8010192:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8010196:	2b05      	cmp	r3, #5
 8010198:	d801      	bhi.n	801019e <__hexdig_fun+0x26>
 801019a:	3827      	subs	r0, #39	; 0x27
 801019c:	e7f1      	b.n	8010182 <__hexdig_fun+0xa>
 801019e:	2000      	movs	r0, #0
 80101a0:	4770      	bx	lr
	...

080101a4 <__gethex>:
 80101a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101a8:	ed2d 8b02 	vpush	{d8}
 80101ac:	b089      	sub	sp, #36	; 0x24
 80101ae:	ee08 0a10 	vmov	s16, r0
 80101b2:	9304      	str	r3, [sp, #16]
 80101b4:	4bb4      	ldr	r3, [pc, #720]	; (8010488 <__gethex+0x2e4>)
 80101b6:	681b      	ldr	r3, [r3, #0]
 80101b8:	9301      	str	r3, [sp, #4]
 80101ba:	4618      	mov	r0, r3
 80101bc:	468b      	mov	fp, r1
 80101be:	4690      	mov	r8, r2
 80101c0:	f7f0 f88e 	bl	80002e0 <strlen>
 80101c4:	9b01      	ldr	r3, [sp, #4]
 80101c6:	f8db 2000 	ldr.w	r2, [fp]
 80101ca:	4403      	add	r3, r0
 80101cc:	4682      	mov	sl, r0
 80101ce:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 80101d2:	9305      	str	r3, [sp, #20]
 80101d4:	1c93      	adds	r3, r2, #2
 80101d6:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 80101da:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 80101de:	32fe      	adds	r2, #254	; 0xfe
 80101e0:	18d1      	adds	r1, r2, r3
 80101e2:	461f      	mov	r7, r3
 80101e4:	f813 0b01 	ldrb.w	r0, [r3], #1
 80101e8:	9100      	str	r1, [sp, #0]
 80101ea:	2830      	cmp	r0, #48	; 0x30
 80101ec:	d0f8      	beq.n	80101e0 <__gethex+0x3c>
 80101ee:	f7ff ffc3 	bl	8010178 <__hexdig_fun>
 80101f2:	4604      	mov	r4, r0
 80101f4:	2800      	cmp	r0, #0
 80101f6:	d13a      	bne.n	801026e <__gethex+0xca>
 80101f8:	9901      	ldr	r1, [sp, #4]
 80101fa:	4652      	mov	r2, sl
 80101fc:	4638      	mov	r0, r7
 80101fe:	f001 f86b 	bl	80112d8 <strncmp>
 8010202:	4605      	mov	r5, r0
 8010204:	2800      	cmp	r0, #0
 8010206:	d168      	bne.n	80102da <__gethex+0x136>
 8010208:	f817 000a 	ldrb.w	r0, [r7, sl]
 801020c:	eb07 060a 	add.w	r6, r7, sl
 8010210:	f7ff ffb2 	bl	8010178 <__hexdig_fun>
 8010214:	2800      	cmp	r0, #0
 8010216:	d062      	beq.n	80102de <__gethex+0x13a>
 8010218:	4633      	mov	r3, r6
 801021a:	7818      	ldrb	r0, [r3, #0]
 801021c:	2830      	cmp	r0, #48	; 0x30
 801021e:	461f      	mov	r7, r3
 8010220:	f103 0301 	add.w	r3, r3, #1
 8010224:	d0f9      	beq.n	801021a <__gethex+0x76>
 8010226:	f7ff ffa7 	bl	8010178 <__hexdig_fun>
 801022a:	2301      	movs	r3, #1
 801022c:	fab0 f480 	clz	r4, r0
 8010230:	0964      	lsrs	r4, r4, #5
 8010232:	4635      	mov	r5, r6
 8010234:	9300      	str	r3, [sp, #0]
 8010236:	463a      	mov	r2, r7
 8010238:	4616      	mov	r6, r2
 801023a:	3201      	adds	r2, #1
 801023c:	7830      	ldrb	r0, [r6, #0]
 801023e:	f7ff ff9b 	bl	8010178 <__hexdig_fun>
 8010242:	2800      	cmp	r0, #0
 8010244:	d1f8      	bne.n	8010238 <__gethex+0x94>
 8010246:	9901      	ldr	r1, [sp, #4]
 8010248:	4652      	mov	r2, sl
 801024a:	4630      	mov	r0, r6
 801024c:	f001 f844 	bl	80112d8 <strncmp>
 8010250:	b980      	cbnz	r0, 8010274 <__gethex+0xd0>
 8010252:	b94d      	cbnz	r5, 8010268 <__gethex+0xc4>
 8010254:	eb06 050a 	add.w	r5, r6, sl
 8010258:	462a      	mov	r2, r5
 801025a:	4616      	mov	r6, r2
 801025c:	3201      	adds	r2, #1
 801025e:	7830      	ldrb	r0, [r6, #0]
 8010260:	f7ff ff8a 	bl	8010178 <__hexdig_fun>
 8010264:	2800      	cmp	r0, #0
 8010266:	d1f8      	bne.n	801025a <__gethex+0xb6>
 8010268:	1bad      	subs	r5, r5, r6
 801026a:	00ad      	lsls	r5, r5, #2
 801026c:	e004      	b.n	8010278 <__gethex+0xd4>
 801026e:	2400      	movs	r4, #0
 8010270:	4625      	mov	r5, r4
 8010272:	e7e0      	b.n	8010236 <__gethex+0x92>
 8010274:	2d00      	cmp	r5, #0
 8010276:	d1f7      	bne.n	8010268 <__gethex+0xc4>
 8010278:	7833      	ldrb	r3, [r6, #0]
 801027a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 801027e:	2b50      	cmp	r3, #80	; 0x50
 8010280:	d13b      	bne.n	80102fa <__gethex+0x156>
 8010282:	7873      	ldrb	r3, [r6, #1]
 8010284:	2b2b      	cmp	r3, #43	; 0x2b
 8010286:	d02c      	beq.n	80102e2 <__gethex+0x13e>
 8010288:	2b2d      	cmp	r3, #45	; 0x2d
 801028a:	d02e      	beq.n	80102ea <__gethex+0x146>
 801028c:	1c71      	adds	r1, r6, #1
 801028e:	f04f 0900 	mov.w	r9, #0
 8010292:	7808      	ldrb	r0, [r1, #0]
 8010294:	f7ff ff70 	bl	8010178 <__hexdig_fun>
 8010298:	1e43      	subs	r3, r0, #1
 801029a:	b2db      	uxtb	r3, r3
 801029c:	2b18      	cmp	r3, #24
 801029e:	d82c      	bhi.n	80102fa <__gethex+0x156>
 80102a0:	f1a0 0210 	sub.w	r2, r0, #16
 80102a4:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80102a8:	f7ff ff66 	bl	8010178 <__hexdig_fun>
 80102ac:	1e43      	subs	r3, r0, #1
 80102ae:	b2db      	uxtb	r3, r3
 80102b0:	2b18      	cmp	r3, #24
 80102b2:	d91d      	bls.n	80102f0 <__gethex+0x14c>
 80102b4:	f1b9 0f00 	cmp.w	r9, #0
 80102b8:	d000      	beq.n	80102bc <__gethex+0x118>
 80102ba:	4252      	negs	r2, r2
 80102bc:	4415      	add	r5, r2
 80102be:	f8cb 1000 	str.w	r1, [fp]
 80102c2:	b1e4      	cbz	r4, 80102fe <__gethex+0x15a>
 80102c4:	9b00      	ldr	r3, [sp, #0]
 80102c6:	2b00      	cmp	r3, #0
 80102c8:	bf14      	ite	ne
 80102ca:	2700      	movne	r7, #0
 80102cc:	2706      	moveq	r7, #6
 80102ce:	4638      	mov	r0, r7
 80102d0:	b009      	add	sp, #36	; 0x24
 80102d2:	ecbd 8b02 	vpop	{d8}
 80102d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80102da:	463e      	mov	r6, r7
 80102dc:	4625      	mov	r5, r4
 80102de:	2401      	movs	r4, #1
 80102e0:	e7ca      	b.n	8010278 <__gethex+0xd4>
 80102e2:	f04f 0900 	mov.w	r9, #0
 80102e6:	1cb1      	adds	r1, r6, #2
 80102e8:	e7d3      	b.n	8010292 <__gethex+0xee>
 80102ea:	f04f 0901 	mov.w	r9, #1
 80102ee:	e7fa      	b.n	80102e6 <__gethex+0x142>
 80102f0:	230a      	movs	r3, #10
 80102f2:	fb03 0202 	mla	r2, r3, r2, r0
 80102f6:	3a10      	subs	r2, #16
 80102f8:	e7d4      	b.n	80102a4 <__gethex+0x100>
 80102fa:	4631      	mov	r1, r6
 80102fc:	e7df      	b.n	80102be <__gethex+0x11a>
 80102fe:	1bf3      	subs	r3, r6, r7
 8010300:	3b01      	subs	r3, #1
 8010302:	4621      	mov	r1, r4
 8010304:	2b07      	cmp	r3, #7
 8010306:	dc0b      	bgt.n	8010320 <__gethex+0x17c>
 8010308:	ee18 0a10 	vmov	r0, s16
 801030c:	f000 fa64 	bl	80107d8 <_Balloc>
 8010310:	4604      	mov	r4, r0
 8010312:	b940      	cbnz	r0, 8010326 <__gethex+0x182>
 8010314:	4b5d      	ldr	r3, [pc, #372]	; (801048c <__gethex+0x2e8>)
 8010316:	4602      	mov	r2, r0
 8010318:	21de      	movs	r1, #222	; 0xde
 801031a:	485d      	ldr	r0, [pc, #372]	; (8010490 <__gethex+0x2ec>)
 801031c:	f000 fffe 	bl	801131c <__assert_func>
 8010320:	3101      	adds	r1, #1
 8010322:	105b      	asrs	r3, r3, #1
 8010324:	e7ee      	b.n	8010304 <__gethex+0x160>
 8010326:	f100 0914 	add.w	r9, r0, #20
 801032a:	f04f 0b00 	mov.w	fp, #0
 801032e:	f1ca 0301 	rsb	r3, sl, #1
 8010332:	f8cd 9008 	str.w	r9, [sp, #8]
 8010336:	f8cd b000 	str.w	fp, [sp]
 801033a:	9306      	str	r3, [sp, #24]
 801033c:	42b7      	cmp	r7, r6
 801033e:	d340      	bcc.n	80103c2 <__gethex+0x21e>
 8010340:	9802      	ldr	r0, [sp, #8]
 8010342:	9b00      	ldr	r3, [sp, #0]
 8010344:	f840 3b04 	str.w	r3, [r0], #4
 8010348:	eba0 0009 	sub.w	r0, r0, r9
 801034c:	1080      	asrs	r0, r0, #2
 801034e:	0146      	lsls	r6, r0, #5
 8010350:	6120      	str	r0, [r4, #16]
 8010352:	4618      	mov	r0, r3
 8010354:	f000 fb32 	bl	80109bc <__hi0bits>
 8010358:	1a30      	subs	r0, r6, r0
 801035a:	f8d8 6000 	ldr.w	r6, [r8]
 801035e:	42b0      	cmp	r0, r6
 8010360:	dd63      	ble.n	801042a <__gethex+0x286>
 8010362:	1b87      	subs	r7, r0, r6
 8010364:	4639      	mov	r1, r7
 8010366:	4620      	mov	r0, r4
 8010368:	f000 fed3 	bl	8011112 <__any_on>
 801036c:	4682      	mov	sl, r0
 801036e:	b1a8      	cbz	r0, 801039c <__gethex+0x1f8>
 8010370:	1e7b      	subs	r3, r7, #1
 8010372:	1159      	asrs	r1, r3, #5
 8010374:	f003 021f 	and.w	r2, r3, #31
 8010378:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 801037c:	f04f 0a01 	mov.w	sl, #1
 8010380:	fa0a f202 	lsl.w	r2, sl, r2
 8010384:	420a      	tst	r2, r1
 8010386:	d009      	beq.n	801039c <__gethex+0x1f8>
 8010388:	4553      	cmp	r3, sl
 801038a:	dd05      	ble.n	8010398 <__gethex+0x1f4>
 801038c:	1eb9      	subs	r1, r7, #2
 801038e:	4620      	mov	r0, r4
 8010390:	f000 febf 	bl	8011112 <__any_on>
 8010394:	2800      	cmp	r0, #0
 8010396:	d145      	bne.n	8010424 <__gethex+0x280>
 8010398:	f04f 0a02 	mov.w	sl, #2
 801039c:	4639      	mov	r1, r7
 801039e:	4620      	mov	r0, r4
 80103a0:	f7ff fe98 	bl	80100d4 <rshift>
 80103a4:	443d      	add	r5, r7
 80103a6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80103aa:	42ab      	cmp	r3, r5
 80103ac:	da4c      	bge.n	8010448 <__gethex+0x2a4>
 80103ae:	ee18 0a10 	vmov	r0, s16
 80103b2:	4621      	mov	r1, r4
 80103b4:	f000 fa50 	bl	8010858 <_Bfree>
 80103b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80103ba:	2300      	movs	r3, #0
 80103bc:	6013      	str	r3, [r2, #0]
 80103be:	27a3      	movs	r7, #163	; 0xa3
 80103c0:	e785      	b.n	80102ce <__gethex+0x12a>
 80103c2:	1e73      	subs	r3, r6, #1
 80103c4:	9a05      	ldr	r2, [sp, #20]
 80103c6:	9303      	str	r3, [sp, #12]
 80103c8:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 80103cc:	4293      	cmp	r3, r2
 80103ce:	d019      	beq.n	8010404 <__gethex+0x260>
 80103d0:	f1bb 0f20 	cmp.w	fp, #32
 80103d4:	d107      	bne.n	80103e6 <__gethex+0x242>
 80103d6:	9b02      	ldr	r3, [sp, #8]
 80103d8:	9a00      	ldr	r2, [sp, #0]
 80103da:	f843 2b04 	str.w	r2, [r3], #4
 80103de:	9302      	str	r3, [sp, #8]
 80103e0:	2300      	movs	r3, #0
 80103e2:	9300      	str	r3, [sp, #0]
 80103e4:	469b      	mov	fp, r3
 80103e6:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 80103ea:	f7ff fec5 	bl	8010178 <__hexdig_fun>
 80103ee:	9b00      	ldr	r3, [sp, #0]
 80103f0:	f000 000f 	and.w	r0, r0, #15
 80103f4:	fa00 f00b 	lsl.w	r0, r0, fp
 80103f8:	4303      	orrs	r3, r0
 80103fa:	9300      	str	r3, [sp, #0]
 80103fc:	f10b 0b04 	add.w	fp, fp, #4
 8010400:	9b03      	ldr	r3, [sp, #12]
 8010402:	e00d      	b.n	8010420 <__gethex+0x27c>
 8010404:	9b03      	ldr	r3, [sp, #12]
 8010406:	9a06      	ldr	r2, [sp, #24]
 8010408:	4413      	add	r3, r2
 801040a:	42bb      	cmp	r3, r7
 801040c:	d3e0      	bcc.n	80103d0 <__gethex+0x22c>
 801040e:	4618      	mov	r0, r3
 8010410:	9901      	ldr	r1, [sp, #4]
 8010412:	9307      	str	r3, [sp, #28]
 8010414:	4652      	mov	r2, sl
 8010416:	f000 ff5f 	bl	80112d8 <strncmp>
 801041a:	9b07      	ldr	r3, [sp, #28]
 801041c:	2800      	cmp	r0, #0
 801041e:	d1d7      	bne.n	80103d0 <__gethex+0x22c>
 8010420:	461e      	mov	r6, r3
 8010422:	e78b      	b.n	801033c <__gethex+0x198>
 8010424:	f04f 0a03 	mov.w	sl, #3
 8010428:	e7b8      	b.n	801039c <__gethex+0x1f8>
 801042a:	da0a      	bge.n	8010442 <__gethex+0x29e>
 801042c:	1a37      	subs	r7, r6, r0
 801042e:	4621      	mov	r1, r4
 8010430:	ee18 0a10 	vmov	r0, s16
 8010434:	463a      	mov	r2, r7
 8010436:	f000 fc2b 	bl	8010c90 <__lshift>
 801043a:	1bed      	subs	r5, r5, r7
 801043c:	4604      	mov	r4, r0
 801043e:	f100 0914 	add.w	r9, r0, #20
 8010442:	f04f 0a00 	mov.w	sl, #0
 8010446:	e7ae      	b.n	80103a6 <__gethex+0x202>
 8010448:	f8d8 0004 	ldr.w	r0, [r8, #4]
 801044c:	42a8      	cmp	r0, r5
 801044e:	dd72      	ble.n	8010536 <__gethex+0x392>
 8010450:	1b45      	subs	r5, r0, r5
 8010452:	42ae      	cmp	r6, r5
 8010454:	dc36      	bgt.n	80104c4 <__gethex+0x320>
 8010456:	f8d8 300c 	ldr.w	r3, [r8, #12]
 801045a:	2b02      	cmp	r3, #2
 801045c:	d02a      	beq.n	80104b4 <__gethex+0x310>
 801045e:	2b03      	cmp	r3, #3
 8010460:	d02c      	beq.n	80104bc <__gethex+0x318>
 8010462:	2b01      	cmp	r3, #1
 8010464:	d11c      	bne.n	80104a0 <__gethex+0x2fc>
 8010466:	42ae      	cmp	r6, r5
 8010468:	d11a      	bne.n	80104a0 <__gethex+0x2fc>
 801046a:	2e01      	cmp	r6, #1
 801046c:	d112      	bne.n	8010494 <__gethex+0x2f0>
 801046e:	9a04      	ldr	r2, [sp, #16]
 8010470:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8010474:	6013      	str	r3, [r2, #0]
 8010476:	2301      	movs	r3, #1
 8010478:	6123      	str	r3, [r4, #16]
 801047a:	f8c9 3000 	str.w	r3, [r9]
 801047e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8010480:	2762      	movs	r7, #98	; 0x62
 8010482:	601c      	str	r4, [r3, #0]
 8010484:	e723      	b.n	80102ce <__gethex+0x12a>
 8010486:	bf00      	nop
 8010488:	08012cf0 	.word	0x08012cf0
 801048c:	08012c78 	.word	0x08012c78
 8010490:	08012c89 	.word	0x08012c89
 8010494:	1e71      	subs	r1, r6, #1
 8010496:	4620      	mov	r0, r4
 8010498:	f000 fe3b 	bl	8011112 <__any_on>
 801049c:	2800      	cmp	r0, #0
 801049e:	d1e6      	bne.n	801046e <__gethex+0x2ca>
 80104a0:	ee18 0a10 	vmov	r0, s16
 80104a4:	4621      	mov	r1, r4
 80104a6:	f000 f9d7 	bl	8010858 <_Bfree>
 80104aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80104ac:	2300      	movs	r3, #0
 80104ae:	6013      	str	r3, [r2, #0]
 80104b0:	2750      	movs	r7, #80	; 0x50
 80104b2:	e70c      	b.n	80102ce <__gethex+0x12a>
 80104b4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80104b6:	2b00      	cmp	r3, #0
 80104b8:	d1f2      	bne.n	80104a0 <__gethex+0x2fc>
 80104ba:	e7d8      	b.n	801046e <__gethex+0x2ca>
 80104bc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80104be:	2b00      	cmp	r3, #0
 80104c0:	d1d5      	bne.n	801046e <__gethex+0x2ca>
 80104c2:	e7ed      	b.n	80104a0 <__gethex+0x2fc>
 80104c4:	1e6f      	subs	r7, r5, #1
 80104c6:	f1ba 0f00 	cmp.w	sl, #0
 80104ca:	d131      	bne.n	8010530 <__gethex+0x38c>
 80104cc:	b127      	cbz	r7, 80104d8 <__gethex+0x334>
 80104ce:	4639      	mov	r1, r7
 80104d0:	4620      	mov	r0, r4
 80104d2:	f000 fe1e 	bl	8011112 <__any_on>
 80104d6:	4682      	mov	sl, r0
 80104d8:	117b      	asrs	r3, r7, #5
 80104da:	2101      	movs	r1, #1
 80104dc:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 80104e0:	f007 071f 	and.w	r7, r7, #31
 80104e4:	fa01 f707 	lsl.w	r7, r1, r7
 80104e8:	421f      	tst	r7, r3
 80104ea:	4629      	mov	r1, r5
 80104ec:	4620      	mov	r0, r4
 80104ee:	bf18      	it	ne
 80104f0:	f04a 0a02 	orrne.w	sl, sl, #2
 80104f4:	1b76      	subs	r6, r6, r5
 80104f6:	f7ff fded 	bl	80100d4 <rshift>
 80104fa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80104fe:	2702      	movs	r7, #2
 8010500:	f1ba 0f00 	cmp.w	sl, #0
 8010504:	d048      	beq.n	8010598 <__gethex+0x3f4>
 8010506:	f8d8 300c 	ldr.w	r3, [r8, #12]
 801050a:	2b02      	cmp	r3, #2
 801050c:	d015      	beq.n	801053a <__gethex+0x396>
 801050e:	2b03      	cmp	r3, #3
 8010510:	d017      	beq.n	8010542 <__gethex+0x39e>
 8010512:	2b01      	cmp	r3, #1
 8010514:	d109      	bne.n	801052a <__gethex+0x386>
 8010516:	f01a 0f02 	tst.w	sl, #2
 801051a:	d006      	beq.n	801052a <__gethex+0x386>
 801051c:	f8d9 0000 	ldr.w	r0, [r9]
 8010520:	ea4a 0a00 	orr.w	sl, sl, r0
 8010524:	f01a 0f01 	tst.w	sl, #1
 8010528:	d10e      	bne.n	8010548 <__gethex+0x3a4>
 801052a:	f047 0710 	orr.w	r7, r7, #16
 801052e:	e033      	b.n	8010598 <__gethex+0x3f4>
 8010530:	f04f 0a01 	mov.w	sl, #1
 8010534:	e7d0      	b.n	80104d8 <__gethex+0x334>
 8010536:	2701      	movs	r7, #1
 8010538:	e7e2      	b.n	8010500 <__gethex+0x35c>
 801053a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801053c:	f1c3 0301 	rsb	r3, r3, #1
 8010540:	9315      	str	r3, [sp, #84]	; 0x54
 8010542:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010544:	2b00      	cmp	r3, #0
 8010546:	d0f0      	beq.n	801052a <__gethex+0x386>
 8010548:	f8d4 b010 	ldr.w	fp, [r4, #16]
 801054c:	f104 0314 	add.w	r3, r4, #20
 8010550:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8010554:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8010558:	f04f 0c00 	mov.w	ip, #0
 801055c:	4618      	mov	r0, r3
 801055e:	f853 2b04 	ldr.w	r2, [r3], #4
 8010562:	f1b2 3fff 	cmp.w	r2, #4294967295
 8010566:	d01c      	beq.n	80105a2 <__gethex+0x3fe>
 8010568:	3201      	adds	r2, #1
 801056a:	6002      	str	r2, [r0, #0]
 801056c:	2f02      	cmp	r7, #2
 801056e:	f104 0314 	add.w	r3, r4, #20
 8010572:	d13f      	bne.n	80105f4 <__gethex+0x450>
 8010574:	f8d8 2000 	ldr.w	r2, [r8]
 8010578:	3a01      	subs	r2, #1
 801057a:	42b2      	cmp	r2, r6
 801057c:	d10a      	bne.n	8010594 <__gethex+0x3f0>
 801057e:	1171      	asrs	r1, r6, #5
 8010580:	2201      	movs	r2, #1
 8010582:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8010586:	f006 061f 	and.w	r6, r6, #31
 801058a:	fa02 f606 	lsl.w	r6, r2, r6
 801058e:	421e      	tst	r6, r3
 8010590:	bf18      	it	ne
 8010592:	4617      	movne	r7, r2
 8010594:	f047 0720 	orr.w	r7, r7, #32
 8010598:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801059a:	601c      	str	r4, [r3, #0]
 801059c:	9b04      	ldr	r3, [sp, #16]
 801059e:	601d      	str	r5, [r3, #0]
 80105a0:	e695      	b.n	80102ce <__gethex+0x12a>
 80105a2:	4299      	cmp	r1, r3
 80105a4:	f843 cc04 	str.w	ip, [r3, #-4]
 80105a8:	d8d8      	bhi.n	801055c <__gethex+0x3b8>
 80105aa:	68a3      	ldr	r3, [r4, #8]
 80105ac:	459b      	cmp	fp, r3
 80105ae:	db19      	blt.n	80105e4 <__gethex+0x440>
 80105b0:	6861      	ldr	r1, [r4, #4]
 80105b2:	ee18 0a10 	vmov	r0, s16
 80105b6:	3101      	adds	r1, #1
 80105b8:	f000 f90e 	bl	80107d8 <_Balloc>
 80105bc:	4681      	mov	r9, r0
 80105be:	b918      	cbnz	r0, 80105c8 <__gethex+0x424>
 80105c0:	4b1a      	ldr	r3, [pc, #104]	; (801062c <__gethex+0x488>)
 80105c2:	4602      	mov	r2, r0
 80105c4:	2184      	movs	r1, #132	; 0x84
 80105c6:	e6a8      	b.n	801031a <__gethex+0x176>
 80105c8:	6922      	ldr	r2, [r4, #16]
 80105ca:	3202      	adds	r2, #2
 80105cc:	f104 010c 	add.w	r1, r4, #12
 80105d0:	0092      	lsls	r2, r2, #2
 80105d2:	300c      	adds	r0, #12
 80105d4:	f7fe ff8a 	bl	800f4ec <memcpy>
 80105d8:	4621      	mov	r1, r4
 80105da:	ee18 0a10 	vmov	r0, s16
 80105de:	f000 f93b 	bl	8010858 <_Bfree>
 80105e2:	464c      	mov	r4, r9
 80105e4:	6923      	ldr	r3, [r4, #16]
 80105e6:	1c5a      	adds	r2, r3, #1
 80105e8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80105ec:	6122      	str	r2, [r4, #16]
 80105ee:	2201      	movs	r2, #1
 80105f0:	615a      	str	r2, [r3, #20]
 80105f2:	e7bb      	b.n	801056c <__gethex+0x3c8>
 80105f4:	6922      	ldr	r2, [r4, #16]
 80105f6:	455a      	cmp	r2, fp
 80105f8:	dd0b      	ble.n	8010612 <__gethex+0x46e>
 80105fa:	2101      	movs	r1, #1
 80105fc:	4620      	mov	r0, r4
 80105fe:	f7ff fd69 	bl	80100d4 <rshift>
 8010602:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8010606:	3501      	adds	r5, #1
 8010608:	42ab      	cmp	r3, r5
 801060a:	f6ff aed0 	blt.w	80103ae <__gethex+0x20a>
 801060e:	2701      	movs	r7, #1
 8010610:	e7c0      	b.n	8010594 <__gethex+0x3f0>
 8010612:	f016 061f 	ands.w	r6, r6, #31
 8010616:	d0fa      	beq.n	801060e <__gethex+0x46a>
 8010618:	4453      	add	r3, sl
 801061a:	f1c6 0620 	rsb	r6, r6, #32
 801061e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8010622:	f000 f9cb 	bl	80109bc <__hi0bits>
 8010626:	42b0      	cmp	r0, r6
 8010628:	dbe7      	blt.n	80105fa <__gethex+0x456>
 801062a:	e7f0      	b.n	801060e <__gethex+0x46a>
 801062c:	08012c78 	.word	0x08012c78

08010630 <L_shift>:
 8010630:	f1c2 0208 	rsb	r2, r2, #8
 8010634:	0092      	lsls	r2, r2, #2
 8010636:	b570      	push	{r4, r5, r6, lr}
 8010638:	f1c2 0620 	rsb	r6, r2, #32
 801063c:	6843      	ldr	r3, [r0, #4]
 801063e:	6804      	ldr	r4, [r0, #0]
 8010640:	fa03 f506 	lsl.w	r5, r3, r6
 8010644:	432c      	orrs	r4, r5
 8010646:	40d3      	lsrs	r3, r2
 8010648:	6004      	str	r4, [r0, #0]
 801064a:	f840 3f04 	str.w	r3, [r0, #4]!
 801064e:	4288      	cmp	r0, r1
 8010650:	d3f4      	bcc.n	801063c <L_shift+0xc>
 8010652:	bd70      	pop	{r4, r5, r6, pc}

08010654 <__match>:
 8010654:	b530      	push	{r4, r5, lr}
 8010656:	6803      	ldr	r3, [r0, #0]
 8010658:	3301      	adds	r3, #1
 801065a:	f811 4b01 	ldrb.w	r4, [r1], #1
 801065e:	b914      	cbnz	r4, 8010666 <__match+0x12>
 8010660:	6003      	str	r3, [r0, #0]
 8010662:	2001      	movs	r0, #1
 8010664:	bd30      	pop	{r4, r5, pc}
 8010666:	f813 2b01 	ldrb.w	r2, [r3], #1
 801066a:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 801066e:	2d19      	cmp	r5, #25
 8010670:	bf98      	it	ls
 8010672:	3220      	addls	r2, #32
 8010674:	42a2      	cmp	r2, r4
 8010676:	d0f0      	beq.n	801065a <__match+0x6>
 8010678:	2000      	movs	r0, #0
 801067a:	e7f3      	b.n	8010664 <__match+0x10>

0801067c <__hexnan>:
 801067c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010680:	680b      	ldr	r3, [r1, #0]
 8010682:	115e      	asrs	r6, r3, #5
 8010684:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8010688:	f013 031f 	ands.w	r3, r3, #31
 801068c:	b087      	sub	sp, #28
 801068e:	bf18      	it	ne
 8010690:	3604      	addne	r6, #4
 8010692:	2500      	movs	r5, #0
 8010694:	1f37      	subs	r7, r6, #4
 8010696:	4690      	mov	r8, r2
 8010698:	6802      	ldr	r2, [r0, #0]
 801069a:	9301      	str	r3, [sp, #4]
 801069c:	4682      	mov	sl, r0
 801069e:	f846 5c04 	str.w	r5, [r6, #-4]
 80106a2:	46b9      	mov	r9, r7
 80106a4:	463c      	mov	r4, r7
 80106a6:	9502      	str	r5, [sp, #8]
 80106a8:	46ab      	mov	fp, r5
 80106aa:	7851      	ldrb	r1, [r2, #1]
 80106ac:	1c53      	adds	r3, r2, #1
 80106ae:	9303      	str	r3, [sp, #12]
 80106b0:	b341      	cbz	r1, 8010704 <__hexnan+0x88>
 80106b2:	4608      	mov	r0, r1
 80106b4:	9205      	str	r2, [sp, #20]
 80106b6:	9104      	str	r1, [sp, #16]
 80106b8:	f7ff fd5e 	bl	8010178 <__hexdig_fun>
 80106bc:	2800      	cmp	r0, #0
 80106be:	d14f      	bne.n	8010760 <__hexnan+0xe4>
 80106c0:	9904      	ldr	r1, [sp, #16]
 80106c2:	9a05      	ldr	r2, [sp, #20]
 80106c4:	2920      	cmp	r1, #32
 80106c6:	d818      	bhi.n	80106fa <__hexnan+0x7e>
 80106c8:	9b02      	ldr	r3, [sp, #8]
 80106ca:	459b      	cmp	fp, r3
 80106cc:	dd13      	ble.n	80106f6 <__hexnan+0x7a>
 80106ce:	454c      	cmp	r4, r9
 80106d0:	d206      	bcs.n	80106e0 <__hexnan+0x64>
 80106d2:	2d07      	cmp	r5, #7
 80106d4:	dc04      	bgt.n	80106e0 <__hexnan+0x64>
 80106d6:	462a      	mov	r2, r5
 80106d8:	4649      	mov	r1, r9
 80106da:	4620      	mov	r0, r4
 80106dc:	f7ff ffa8 	bl	8010630 <L_shift>
 80106e0:	4544      	cmp	r4, r8
 80106e2:	d950      	bls.n	8010786 <__hexnan+0x10a>
 80106e4:	2300      	movs	r3, #0
 80106e6:	f1a4 0904 	sub.w	r9, r4, #4
 80106ea:	f844 3c04 	str.w	r3, [r4, #-4]
 80106ee:	f8cd b008 	str.w	fp, [sp, #8]
 80106f2:	464c      	mov	r4, r9
 80106f4:	461d      	mov	r5, r3
 80106f6:	9a03      	ldr	r2, [sp, #12]
 80106f8:	e7d7      	b.n	80106aa <__hexnan+0x2e>
 80106fa:	2929      	cmp	r1, #41	; 0x29
 80106fc:	d156      	bne.n	80107ac <__hexnan+0x130>
 80106fe:	3202      	adds	r2, #2
 8010700:	f8ca 2000 	str.w	r2, [sl]
 8010704:	f1bb 0f00 	cmp.w	fp, #0
 8010708:	d050      	beq.n	80107ac <__hexnan+0x130>
 801070a:	454c      	cmp	r4, r9
 801070c:	d206      	bcs.n	801071c <__hexnan+0xa0>
 801070e:	2d07      	cmp	r5, #7
 8010710:	dc04      	bgt.n	801071c <__hexnan+0xa0>
 8010712:	462a      	mov	r2, r5
 8010714:	4649      	mov	r1, r9
 8010716:	4620      	mov	r0, r4
 8010718:	f7ff ff8a 	bl	8010630 <L_shift>
 801071c:	4544      	cmp	r4, r8
 801071e:	d934      	bls.n	801078a <__hexnan+0x10e>
 8010720:	f1a8 0204 	sub.w	r2, r8, #4
 8010724:	4623      	mov	r3, r4
 8010726:	f853 1b04 	ldr.w	r1, [r3], #4
 801072a:	f842 1f04 	str.w	r1, [r2, #4]!
 801072e:	429f      	cmp	r7, r3
 8010730:	d2f9      	bcs.n	8010726 <__hexnan+0xaa>
 8010732:	1b3b      	subs	r3, r7, r4
 8010734:	f023 0303 	bic.w	r3, r3, #3
 8010738:	3304      	adds	r3, #4
 801073a:	3401      	adds	r4, #1
 801073c:	3e03      	subs	r6, #3
 801073e:	42b4      	cmp	r4, r6
 8010740:	bf88      	it	hi
 8010742:	2304      	movhi	r3, #4
 8010744:	4443      	add	r3, r8
 8010746:	2200      	movs	r2, #0
 8010748:	f843 2b04 	str.w	r2, [r3], #4
 801074c:	429f      	cmp	r7, r3
 801074e:	d2fb      	bcs.n	8010748 <__hexnan+0xcc>
 8010750:	683b      	ldr	r3, [r7, #0]
 8010752:	b91b      	cbnz	r3, 801075c <__hexnan+0xe0>
 8010754:	4547      	cmp	r7, r8
 8010756:	d127      	bne.n	80107a8 <__hexnan+0x12c>
 8010758:	2301      	movs	r3, #1
 801075a:	603b      	str	r3, [r7, #0]
 801075c:	2005      	movs	r0, #5
 801075e:	e026      	b.n	80107ae <__hexnan+0x132>
 8010760:	3501      	adds	r5, #1
 8010762:	2d08      	cmp	r5, #8
 8010764:	f10b 0b01 	add.w	fp, fp, #1
 8010768:	dd06      	ble.n	8010778 <__hexnan+0xfc>
 801076a:	4544      	cmp	r4, r8
 801076c:	d9c3      	bls.n	80106f6 <__hexnan+0x7a>
 801076e:	2300      	movs	r3, #0
 8010770:	f844 3c04 	str.w	r3, [r4, #-4]
 8010774:	2501      	movs	r5, #1
 8010776:	3c04      	subs	r4, #4
 8010778:	6822      	ldr	r2, [r4, #0]
 801077a:	f000 000f 	and.w	r0, r0, #15
 801077e:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 8010782:	6022      	str	r2, [r4, #0]
 8010784:	e7b7      	b.n	80106f6 <__hexnan+0x7a>
 8010786:	2508      	movs	r5, #8
 8010788:	e7b5      	b.n	80106f6 <__hexnan+0x7a>
 801078a:	9b01      	ldr	r3, [sp, #4]
 801078c:	2b00      	cmp	r3, #0
 801078e:	d0df      	beq.n	8010750 <__hexnan+0xd4>
 8010790:	f04f 32ff 	mov.w	r2, #4294967295
 8010794:	f1c3 0320 	rsb	r3, r3, #32
 8010798:	fa22 f303 	lsr.w	r3, r2, r3
 801079c:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80107a0:	401a      	ands	r2, r3
 80107a2:	f846 2c04 	str.w	r2, [r6, #-4]
 80107a6:	e7d3      	b.n	8010750 <__hexnan+0xd4>
 80107a8:	3f04      	subs	r7, #4
 80107aa:	e7d1      	b.n	8010750 <__hexnan+0xd4>
 80107ac:	2004      	movs	r0, #4
 80107ae:	b007      	add	sp, #28
 80107b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080107b4 <__ascii_mbtowc>:
 80107b4:	b082      	sub	sp, #8
 80107b6:	b901      	cbnz	r1, 80107ba <__ascii_mbtowc+0x6>
 80107b8:	a901      	add	r1, sp, #4
 80107ba:	b142      	cbz	r2, 80107ce <__ascii_mbtowc+0x1a>
 80107bc:	b14b      	cbz	r3, 80107d2 <__ascii_mbtowc+0x1e>
 80107be:	7813      	ldrb	r3, [r2, #0]
 80107c0:	600b      	str	r3, [r1, #0]
 80107c2:	7812      	ldrb	r2, [r2, #0]
 80107c4:	1e10      	subs	r0, r2, #0
 80107c6:	bf18      	it	ne
 80107c8:	2001      	movne	r0, #1
 80107ca:	b002      	add	sp, #8
 80107cc:	4770      	bx	lr
 80107ce:	4610      	mov	r0, r2
 80107d0:	e7fb      	b.n	80107ca <__ascii_mbtowc+0x16>
 80107d2:	f06f 0001 	mvn.w	r0, #1
 80107d6:	e7f8      	b.n	80107ca <__ascii_mbtowc+0x16>

080107d8 <_Balloc>:
 80107d8:	b570      	push	{r4, r5, r6, lr}
 80107da:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80107dc:	4604      	mov	r4, r0
 80107de:	460d      	mov	r5, r1
 80107e0:	b976      	cbnz	r6, 8010800 <_Balloc+0x28>
 80107e2:	2010      	movs	r0, #16
 80107e4:	f000 fdca 	bl	801137c <malloc>
 80107e8:	4602      	mov	r2, r0
 80107ea:	6260      	str	r0, [r4, #36]	; 0x24
 80107ec:	b920      	cbnz	r0, 80107f8 <_Balloc+0x20>
 80107ee:	4b18      	ldr	r3, [pc, #96]	; (8010850 <_Balloc+0x78>)
 80107f0:	4818      	ldr	r0, [pc, #96]	; (8010854 <_Balloc+0x7c>)
 80107f2:	2166      	movs	r1, #102	; 0x66
 80107f4:	f000 fd92 	bl	801131c <__assert_func>
 80107f8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80107fc:	6006      	str	r6, [r0, #0]
 80107fe:	60c6      	str	r6, [r0, #12]
 8010800:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8010802:	68f3      	ldr	r3, [r6, #12]
 8010804:	b183      	cbz	r3, 8010828 <_Balloc+0x50>
 8010806:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010808:	68db      	ldr	r3, [r3, #12]
 801080a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 801080e:	b9b8      	cbnz	r0, 8010840 <_Balloc+0x68>
 8010810:	2101      	movs	r1, #1
 8010812:	fa01 f605 	lsl.w	r6, r1, r5
 8010816:	1d72      	adds	r2, r6, #5
 8010818:	0092      	lsls	r2, r2, #2
 801081a:	4620      	mov	r0, r4
 801081c:	f000 fc9a 	bl	8011154 <_calloc_r>
 8010820:	b160      	cbz	r0, 801083c <_Balloc+0x64>
 8010822:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8010826:	e00e      	b.n	8010846 <_Balloc+0x6e>
 8010828:	2221      	movs	r2, #33	; 0x21
 801082a:	2104      	movs	r1, #4
 801082c:	4620      	mov	r0, r4
 801082e:	f000 fc91 	bl	8011154 <_calloc_r>
 8010832:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010834:	60f0      	str	r0, [r6, #12]
 8010836:	68db      	ldr	r3, [r3, #12]
 8010838:	2b00      	cmp	r3, #0
 801083a:	d1e4      	bne.n	8010806 <_Balloc+0x2e>
 801083c:	2000      	movs	r0, #0
 801083e:	bd70      	pop	{r4, r5, r6, pc}
 8010840:	6802      	ldr	r2, [r0, #0]
 8010842:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8010846:	2300      	movs	r3, #0
 8010848:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801084c:	e7f7      	b.n	801083e <_Balloc+0x66>
 801084e:	bf00      	nop
 8010850:	08012d04 	.word	0x08012d04
 8010854:	08012d1b 	.word	0x08012d1b

08010858 <_Bfree>:
 8010858:	b570      	push	{r4, r5, r6, lr}
 801085a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 801085c:	4605      	mov	r5, r0
 801085e:	460c      	mov	r4, r1
 8010860:	b976      	cbnz	r6, 8010880 <_Bfree+0x28>
 8010862:	2010      	movs	r0, #16
 8010864:	f000 fd8a 	bl	801137c <malloc>
 8010868:	4602      	mov	r2, r0
 801086a:	6268      	str	r0, [r5, #36]	; 0x24
 801086c:	b920      	cbnz	r0, 8010878 <_Bfree+0x20>
 801086e:	4b09      	ldr	r3, [pc, #36]	; (8010894 <_Bfree+0x3c>)
 8010870:	4809      	ldr	r0, [pc, #36]	; (8010898 <_Bfree+0x40>)
 8010872:	218a      	movs	r1, #138	; 0x8a
 8010874:	f000 fd52 	bl	801131c <__assert_func>
 8010878:	e9c0 6601 	strd	r6, r6, [r0, #4]
 801087c:	6006      	str	r6, [r0, #0]
 801087e:	60c6      	str	r6, [r0, #12]
 8010880:	b13c      	cbz	r4, 8010892 <_Bfree+0x3a>
 8010882:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8010884:	6862      	ldr	r2, [r4, #4]
 8010886:	68db      	ldr	r3, [r3, #12]
 8010888:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801088c:	6021      	str	r1, [r4, #0]
 801088e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8010892:	bd70      	pop	{r4, r5, r6, pc}
 8010894:	08012d04 	.word	0x08012d04
 8010898:	08012d1b 	.word	0x08012d1b

0801089c <__multadd>:
 801089c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80108a0:	690d      	ldr	r5, [r1, #16]
 80108a2:	4607      	mov	r7, r0
 80108a4:	460c      	mov	r4, r1
 80108a6:	461e      	mov	r6, r3
 80108a8:	f101 0c14 	add.w	ip, r1, #20
 80108ac:	2000      	movs	r0, #0
 80108ae:	f8dc 3000 	ldr.w	r3, [ip]
 80108b2:	b299      	uxth	r1, r3
 80108b4:	fb02 6101 	mla	r1, r2, r1, r6
 80108b8:	0c1e      	lsrs	r6, r3, #16
 80108ba:	0c0b      	lsrs	r3, r1, #16
 80108bc:	fb02 3306 	mla	r3, r2, r6, r3
 80108c0:	b289      	uxth	r1, r1
 80108c2:	3001      	adds	r0, #1
 80108c4:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80108c8:	4285      	cmp	r5, r0
 80108ca:	f84c 1b04 	str.w	r1, [ip], #4
 80108ce:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80108d2:	dcec      	bgt.n	80108ae <__multadd+0x12>
 80108d4:	b30e      	cbz	r6, 801091a <__multadd+0x7e>
 80108d6:	68a3      	ldr	r3, [r4, #8]
 80108d8:	42ab      	cmp	r3, r5
 80108da:	dc19      	bgt.n	8010910 <__multadd+0x74>
 80108dc:	6861      	ldr	r1, [r4, #4]
 80108de:	4638      	mov	r0, r7
 80108e0:	3101      	adds	r1, #1
 80108e2:	f7ff ff79 	bl	80107d8 <_Balloc>
 80108e6:	4680      	mov	r8, r0
 80108e8:	b928      	cbnz	r0, 80108f6 <__multadd+0x5a>
 80108ea:	4602      	mov	r2, r0
 80108ec:	4b0c      	ldr	r3, [pc, #48]	; (8010920 <__multadd+0x84>)
 80108ee:	480d      	ldr	r0, [pc, #52]	; (8010924 <__multadd+0x88>)
 80108f0:	21b5      	movs	r1, #181	; 0xb5
 80108f2:	f000 fd13 	bl	801131c <__assert_func>
 80108f6:	6922      	ldr	r2, [r4, #16]
 80108f8:	3202      	adds	r2, #2
 80108fa:	f104 010c 	add.w	r1, r4, #12
 80108fe:	0092      	lsls	r2, r2, #2
 8010900:	300c      	adds	r0, #12
 8010902:	f7fe fdf3 	bl	800f4ec <memcpy>
 8010906:	4621      	mov	r1, r4
 8010908:	4638      	mov	r0, r7
 801090a:	f7ff ffa5 	bl	8010858 <_Bfree>
 801090e:	4644      	mov	r4, r8
 8010910:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8010914:	3501      	adds	r5, #1
 8010916:	615e      	str	r6, [r3, #20]
 8010918:	6125      	str	r5, [r4, #16]
 801091a:	4620      	mov	r0, r4
 801091c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010920:	08012c78 	.word	0x08012c78
 8010924:	08012d1b 	.word	0x08012d1b

08010928 <__s2b>:
 8010928:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801092c:	460c      	mov	r4, r1
 801092e:	4615      	mov	r5, r2
 8010930:	461f      	mov	r7, r3
 8010932:	2209      	movs	r2, #9
 8010934:	3308      	adds	r3, #8
 8010936:	4606      	mov	r6, r0
 8010938:	fb93 f3f2 	sdiv	r3, r3, r2
 801093c:	2100      	movs	r1, #0
 801093e:	2201      	movs	r2, #1
 8010940:	429a      	cmp	r2, r3
 8010942:	db09      	blt.n	8010958 <__s2b+0x30>
 8010944:	4630      	mov	r0, r6
 8010946:	f7ff ff47 	bl	80107d8 <_Balloc>
 801094a:	b940      	cbnz	r0, 801095e <__s2b+0x36>
 801094c:	4602      	mov	r2, r0
 801094e:	4b19      	ldr	r3, [pc, #100]	; (80109b4 <__s2b+0x8c>)
 8010950:	4819      	ldr	r0, [pc, #100]	; (80109b8 <__s2b+0x90>)
 8010952:	21ce      	movs	r1, #206	; 0xce
 8010954:	f000 fce2 	bl	801131c <__assert_func>
 8010958:	0052      	lsls	r2, r2, #1
 801095a:	3101      	adds	r1, #1
 801095c:	e7f0      	b.n	8010940 <__s2b+0x18>
 801095e:	9b08      	ldr	r3, [sp, #32]
 8010960:	6143      	str	r3, [r0, #20]
 8010962:	2d09      	cmp	r5, #9
 8010964:	f04f 0301 	mov.w	r3, #1
 8010968:	6103      	str	r3, [r0, #16]
 801096a:	dd16      	ble.n	801099a <__s2b+0x72>
 801096c:	f104 0909 	add.w	r9, r4, #9
 8010970:	46c8      	mov	r8, r9
 8010972:	442c      	add	r4, r5
 8010974:	f818 3b01 	ldrb.w	r3, [r8], #1
 8010978:	4601      	mov	r1, r0
 801097a:	3b30      	subs	r3, #48	; 0x30
 801097c:	220a      	movs	r2, #10
 801097e:	4630      	mov	r0, r6
 8010980:	f7ff ff8c 	bl	801089c <__multadd>
 8010984:	45a0      	cmp	r8, r4
 8010986:	d1f5      	bne.n	8010974 <__s2b+0x4c>
 8010988:	f1a5 0408 	sub.w	r4, r5, #8
 801098c:	444c      	add	r4, r9
 801098e:	1b2d      	subs	r5, r5, r4
 8010990:	1963      	adds	r3, r4, r5
 8010992:	42bb      	cmp	r3, r7
 8010994:	db04      	blt.n	80109a0 <__s2b+0x78>
 8010996:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801099a:	340a      	adds	r4, #10
 801099c:	2509      	movs	r5, #9
 801099e:	e7f6      	b.n	801098e <__s2b+0x66>
 80109a0:	f814 3b01 	ldrb.w	r3, [r4], #1
 80109a4:	4601      	mov	r1, r0
 80109a6:	3b30      	subs	r3, #48	; 0x30
 80109a8:	220a      	movs	r2, #10
 80109aa:	4630      	mov	r0, r6
 80109ac:	f7ff ff76 	bl	801089c <__multadd>
 80109b0:	e7ee      	b.n	8010990 <__s2b+0x68>
 80109b2:	bf00      	nop
 80109b4:	08012c78 	.word	0x08012c78
 80109b8:	08012d1b 	.word	0x08012d1b

080109bc <__hi0bits>:
 80109bc:	0c03      	lsrs	r3, r0, #16
 80109be:	041b      	lsls	r3, r3, #16
 80109c0:	b9d3      	cbnz	r3, 80109f8 <__hi0bits+0x3c>
 80109c2:	0400      	lsls	r0, r0, #16
 80109c4:	2310      	movs	r3, #16
 80109c6:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 80109ca:	bf04      	itt	eq
 80109cc:	0200      	lsleq	r0, r0, #8
 80109ce:	3308      	addeq	r3, #8
 80109d0:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 80109d4:	bf04      	itt	eq
 80109d6:	0100      	lsleq	r0, r0, #4
 80109d8:	3304      	addeq	r3, #4
 80109da:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 80109de:	bf04      	itt	eq
 80109e0:	0080      	lsleq	r0, r0, #2
 80109e2:	3302      	addeq	r3, #2
 80109e4:	2800      	cmp	r0, #0
 80109e6:	db05      	blt.n	80109f4 <__hi0bits+0x38>
 80109e8:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 80109ec:	f103 0301 	add.w	r3, r3, #1
 80109f0:	bf08      	it	eq
 80109f2:	2320      	moveq	r3, #32
 80109f4:	4618      	mov	r0, r3
 80109f6:	4770      	bx	lr
 80109f8:	2300      	movs	r3, #0
 80109fa:	e7e4      	b.n	80109c6 <__hi0bits+0xa>

080109fc <__lo0bits>:
 80109fc:	6803      	ldr	r3, [r0, #0]
 80109fe:	f013 0207 	ands.w	r2, r3, #7
 8010a02:	4601      	mov	r1, r0
 8010a04:	d00b      	beq.n	8010a1e <__lo0bits+0x22>
 8010a06:	07da      	lsls	r2, r3, #31
 8010a08:	d423      	bmi.n	8010a52 <__lo0bits+0x56>
 8010a0a:	0798      	lsls	r0, r3, #30
 8010a0c:	bf49      	itett	mi
 8010a0e:	085b      	lsrmi	r3, r3, #1
 8010a10:	089b      	lsrpl	r3, r3, #2
 8010a12:	2001      	movmi	r0, #1
 8010a14:	600b      	strmi	r3, [r1, #0]
 8010a16:	bf5c      	itt	pl
 8010a18:	600b      	strpl	r3, [r1, #0]
 8010a1a:	2002      	movpl	r0, #2
 8010a1c:	4770      	bx	lr
 8010a1e:	b298      	uxth	r0, r3
 8010a20:	b9a8      	cbnz	r0, 8010a4e <__lo0bits+0x52>
 8010a22:	0c1b      	lsrs	r3, r3, #16
 8010a24:	2010      	movs	r0, #16
 8010a26:	b2da      	uxtb	r2, r3
 8010a28:	b90a      	cbnz	r2, 8010a2e <__lo0bits+0x32>
 8010a2a:	3008      	adds	r0, #8
 8010a2c:	0a1b      	lsrs	r3, r3, #8
 8010a2e:	071a      	lsls	r2, r3, #28
 8010a30:	bf04      	itt	eq
 8010a32:	091b      	lsreq	r3, r3, #4
 8010a34:	3004      	addeq	r0, #4
 8010a36:	079a      	lsls	r2, r3, #30
 8010a38:	bf04      	itt	eq
 8010a3a:	089b      	lsreq	r3, r3, #2
 8010a3c:	3002      	addeq	r0, #2
 8010a3e:	07da      	lsls	r2, r3, #31
 8010a40:	d403      	bmi.n	8010a4a <__lo0bits+0x4e>
 8010a42:	085b      	lsrs	r3, r3, #1
 8010a44:	f100 0001 	add.w	r0, r0, #1
 8010a48:	d005      	beq.n	8010a56 <__lo0bits+0x5a>
 8010a4a:	600b      	str	r3, [r1, #0]
 8010a4c:	4770      	bx	lr
 8010a4e:	4610      	mov	r0, r2
 8010a50:	e7e9      	b.n	8010a26 <__lo0bits+0x2a>
 8010a52:	2000      	movs	r0, #0
 8010a54:	4770      	bx	lr
 8010a56:	2020      	movs	r0, #32
 8010a58:	4770      	bx	lr
	...

08010a5c <__i2b>:
 8010a5c:	b510      	push	{r4, lr}
 8010a5e:	460c      	mov	r4, r1
 8010a60:	2101      	movs	r1, #1
 8010a62:	f7ff feb9 	bl	80107d8 <_Balloc>
 8010a66:	4602      	mov	r2, r0
 8010a68:	b928      	cbnz	r0, 8010a76 <__i2b+0x1a>
 8010a6a:	4b05      	ldr	r3, [pc, #20]	; (8010a80 <__i2b+0x24>)
 8010a6c:	4805      	ldr	r0, [pc, #20]	; (8010a84 <__i2b+0x28>)
 8010a6e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8010a72:	f000 fc53 	bl	801131c <__assert_func>
 8010a76:	2301      	movs	r3, #1
 8010a78:	6144      	str	r4, [r0, #20]
 8010a7a:	6103      	str	r3, [r0, #16]
 8010a7c:	bd10      	pop	{r4, pc}
 8010a7e:	bf00      	nop
 8010a80:	08012c78 	.word	0x08012c78
 8010a84:	08012d1b 	.word	0x08012d1b

08010a88 <__multiply>:
 8010a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a8c:	4691      	mov	r9, r2
 8010a8e:	690a      	ldr	r2, [r1, #16]
 8010a90:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8010a94:	429a      	cmp	r2, r3
 8010a96:	bfb8      	it	lt
 8010a98:	460b      	movlt	r3, r1
 8010a9a:	460c      	mov	r4, r1
 8010a9c:	bfbc      	itt	lt
 8010a9e:	464c      	movlt	r4, r9
 8010aa0:	4699      	movlt	r9, r3
 8010aa2:	6927      	ldr	r7, [r4, #16]
 8010aa4:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8010aa8:	68a3      	ldr	r3, [r4, #8]
 8010aaa:	6861      	ldr	r1, [r4, #4]
 8010aac:	eb07 060a 	add.w	r6, r7, sl
 8010ab0:	42b3      	cmp	r3, r6
 8010ab2:	b085      	sub	sp, #20
 8010ab4:	bfb8      	it	lt
 8010ab6:	3101      	addlt	r1, #1
 8010ab8:	f7ff fe8e 	bl	80107d8 <_Balloc>
 8010abc:	b930      	cbnz	r0, 8010acc <__multiply+0x44>
 8010abe:	4602      	mov	r2, r0
 8010ac0:	4b44      	ldr	r3, [pc, #272]	; (8010bd4 <__multiply+0x14c>)
 8010ac2:	4845      	ldr	r0, [pc, #276]	; (8010bd8 <__multiply+0x150>)
 8010ac4:	f240 115d 	movw	r1, #349	; 0x15d
 8010ac8:	f000 fc28 	bl	801131c <__assert_func>
 8010acc:	f100 0514 	add.w	r5, r0, #20
 8010ad0:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8010ad4:	462b      	mov	r3, r5
 8010ad6:	2200      	movs	r2, #0
 8010ad8:	4543      	cmp	r3, r8
 8010ada:	d321      	bcc.n	8010b20 <__multiply+0x98>
 8010adc:	f104 0314 	add.w	r3, r4, #20
 8010ae0:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8010ae4:	f109 0314 	add.w	r3, r9, #20
 8010ae8:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8010aec:	9202      	str	r2, [sp, #8]
 8010aee:	1b3a      	subs	r2, r7, r4
 8010af0:	3a15      	subs	r2, #21
 8010af2:	f022 0203 	bic.w	r2, r2, #3
 8010af6:	3204      	adds	r2, #4
 8010af8:	f104 0115 	add.w	r1, r4, #21
 8010afc:	428f      	cmp	r7, r1
 8010afe:	bf38      	it	cc
 8010b00:	2204      	movcc	r2, #4
 8010b02:	9201      	str	r2, [sp, #4]
 8010b04:	9a02      	ldr	r2, [sp, #8]
 8010b06:	9303      	str	r3, [sp, #12]
 8010b08:	429a      	cmp	r2, r3
 8010b0a:	d80c      	bhi.n	8010b26 <__multiply+0x9e>
 8010b0c:	2e00      	cmp	r6, #0
 8010b0e:	dd03      	ble.n	8010b18 <__multiply+0x90>
 8010b10:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8010b14:	2b00      	cmp	r3, #0
 8010b16:	d05a      	beq.n	8010bce <__multiply+0x146>
 8010b18:	6106      	str	r6, [r0, #16]
 8010b1a:	b005      	add	sp, #20
 8010b1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b20:	f843 2b04 	str.w	r2, [r3], #4
 8010b24:	e7d8      	b.n	8010ad8 <__multiply+0x50>
 8010b26:	f8b3 a000 	ldrh.w	sl, [r3]
 8010b2a:	f1ba 0f00 	cmp.w	sl, #0
 8010b2e:	d024      	beq.n	8010b7a <__multiply+0xf2>
 8010b30:	f104 0e14 	add.w	lr, r4, #20
 8010b34:	46a9      	mov	r9, r5
 8010b36:	f04f 0c00 	mov.w	ip, #0
 8010b3a:	f85e 2b04 	ldr.w	r2, [lr], #4
 8010b3e:	f8d9 1000 	ldr.w	r1, [r9]
 8010b42:	fa1f fb82 	uxth.w	fp, r2
 8010b46:	b289      	uxth	r1, r1
 8010b48:	fb0a 110b 	mla	r1, sl, fp, r1
 8010b4c:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8010b50:	f8d9 2000 	ldr.w	r2, [r9]
 8010b54:	4461      	add	r1, ip
 8010b56:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8010b5a:	fb0a c20b 	mla	r2, sl, fp, ip
 8010b5e:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8010b62:	b289      	uxth	r1, r1
 8010b64:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8010b68:	4577      	cmp	r7, lr
 8010b6a:	f849 1b04 	str.w	r1, [r9], #4
 8010b6e:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8010b72:	d8e2      	bhi.n	8010b3a <__multiply+0xb2>
 8010b74:	9a01      	ldr	r2, [sp, #4]
 8010b76:	f845 c002 	str.w	ip, [r5, r2]
 8010b7a:	9a03      	ldr	r2, [sp, #12]
 8010b7c:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8010b80:	3304      	adds	r3, #4
 8010b82:	f1b9 0f00 	cmp.w	r9, #0
 8010b86:	d020      	beq.n	8010bca <__multiply+0x142>
 8010b88:	6829      	ldr	r1, [r5, #0]
 8010b8a:	f104 0c14 	add.w	ip, r4, #20
 8010b8e:	46ae      	mov	lr, r5
 8010b90:	f04f 0a00 	mov.w	sl, #0
 8010b94:	f8bc b000 	ldrh.w	fp, [ip]
 8010b98:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8010b9c:	fb09 220b 	mla	r2, r9, fp, r2
 8010ba0:	4492      	add	sl, r2
 8010ba2:	b289      	uxth	r1, r1
 8010ba4:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8010ba8:	f84e 1b04 	str.w	r1, [lr], #4
 8010bac:	f85c 2b04 	ldr.w	r2, [ip], #4
 8010bb0:	f8be 1000 	ldrh.w	r1, [lr]
 8010bb4:	0c12      	lsrs	r2, r2, #16
 8010bb6:	fb09 1102 	mla	r1, r9, r2, r1
 8010bba:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8010bbe:	4567      	cmp	r7, ip
 8010bc0:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8010bc4:	d8e6      	bhi.n	8010b94 <__multiply+0x10c>
 8010bc6:	9a01      	ldr	r2, [sp, #4]
 8010bc8:	50a9      	str	r1, [r5, r2]
 8010bca:	3504      	adds	r5, #4
 8010bcc:	e79a      	b.n	8010b04 <__multiply+0x7c>
 8010bce:	3e01      	subs	r6, #1
 8010bd0:	e79c      	b.n	8010b0c <__multiply+0x84>
 8010bd2:	bf00      	nop
 8010bd4:	08012c78 	.word	0x08012c78
 8010bd8:	08012d1b 	.word	0x08012d1b

08010bdc <__pow5mult>:
 8010bdc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010be0:	4615      	mov	r5, r2
 8010be2:	f012 0203 	ands.w	r2, r2, #3
 8010be6:	4606      	mov	r6, r0
 8010be8:	460f      	mov	r7, r1
 8010bea:	d007      	beq.n	8010bfc <__pow5mult+0x20>
 8010bec:	4c25      	ldr	r4, [pc, #148]	; (8010c84 <__pow5mult+0xa8>)
 8010bee:	3a01      	subs	r2, #1
 8010bf0:	2300      	movs	r3, #0
 8010bf2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8010bf6:	f7ff fe51 	bl	801089c <__multadd>
 8010bfa:	4607      	mov	r7, r0
 8010bfc:	10ad      	asrs	r5, r5, #2
 8010bfe:	d03d      	beq.n	8010c7c <__pow5mult+0xa0>
 8010c00:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8010c02:	b97c      	cbnz	r4, 8010c24 <__pow5mult+0x48>
 8010c04:	2010      	movs	r0, #16
 8010c06:	f000 fbb9 	bl	801137c <malloc>
 8010c0a:	4602      	mov	r2, r0
 8010c0c:	6270      	str	r0, [r6, #36]	; 0x24
 8010c0e:	b928      	cbnz	r0, 8010c1c <__pow5mult+0x40>
 8010c10:	4b1d      	ldr	r3, [pc, #116]	; (8010c88 <__pow5mult+0xac>)
 8010c12:	481e      	ldr	r0, [pc, #120]	; (8010c8c <__pow5mult+0xb0>)
 8010c14:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8010c18:	f000 fb80 	bl	801131c <__assert_func>
 8010c1c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8010c20:	6004      	str	r4, [r0, #0]
 8010c22:	60c4      	str	r4, [r0, #12]
 8010c24:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8010c28:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8010c2c:	b94c      	cbnz	r4, 8010c42 <__pow5mult+0x66>
 8010c2e:	f240 2171 	movw	r1, #625	; 0x271
 8010c32:	4630      	mov	r0, r6
 8010c34:	f7ff ff12 	bl	8010a5c <__i2b>
 8010c38:	2300      	movs	r3, #0
 8010c3a:	f8c8 0008 	str.w	r0, [r8, #8]
 8010c3e:	4604      	mov	r4, r0
 8010c40:	6003      	str	r3, [r0, #0]
 8010c42:	f04f 0900 	mov.w	r9, #0
 8010c46:	07eb      	lsls	r3, r5, #31
 8010c48:	d50a      	bpl.n	8010c60 <__pow5mult+0x84>
 8010c4a:	4639      	mov	r1, r7
 8010c4c:	4622      	mov	r2, r4
 8010c4e:	4630      	mov	r0, r6
 8010c50:	f7ff ff1a 	bl	8010a88 <__multiply>
 8010c54:	4639      	mov	r1, r7
 8010c56:	4680      	mov	r8, r0
 8010c58:	4630      	mov	r0, r6
 8010c5a:	f7ff fdfd 	bl	8010858 <_Bfree>
 8010c5e:	4647      	mov	r7, r8
 8010c60:	106d      	asrs	r5, r5, #1
 8010c62:	d00b      	beq.n	8010c7c <__pow5mult+0xa0>
 8010c64:	6820      	ldr	r0, [r4, #0]
 8010c66:	b938      	cbnz	r0, 8010c78 <__pow5mult+0x9c>
 8010c68:	4622      	mov	r2, r4
 8010c6a:	4621      	mov	r1, r4
 8010c6c:	4630      	mov	r0, r6
 8010c6e:	f7ff ff0b 	bl	8010a88 <__multiply>
 8010c72:	6020      	str	r0, [r4, #0]
 8010c74:	f8c0 9000 	str.w	r9, [r0]
 8010c78:	4604      	mov	r4, r0
 8010c7a:	e7e4      	b.n	8010c46 <__pow5mult+0x6a>
 8010c7c:	4638      	mov	r0, r7
 8010c7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010c82:	bf00      	nop
 8010c84:	08012e68 	.word	0x08012e68
 8010c88:	08012d04 	.word	0x08012d04
 8010c8c:	08012d1b 	.word	0x08012d1b

08010c90 <__lshift>:
 8010c90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010c94:	460c      	mov	r4, r1
 8010c96:	6849      	ldr	r1, [r1, #4]
 8010c98:	6923      	ldr	r3, [r4, #16]
 8010c9a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8010c9e:	68a3      	ldr	r3, [r4, #8]
 8010ca0:	4607      	mov	r7, r0
 8010ca2:	4691      	mov	r9, r2
 8010ca4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8010ca8:	f108 0601 	add.w	r6, r8, #1
 8010cac:	42b3      	cmp	r3, r6
 8010cae:	db0b      	blt.n	8010cc8 <__lshift+0x38>
 8010cb0:	4638      	mov	r0, r7
 8010cb2:	f7ff fd91 	bl	80107d8 <_Balloc>
 8010cb6:	4605      	mov	r5, r0
 8010cb8:	b948      	cbnz	r0, 8010cce <__lshift+0x3e>
 8010cba:	4602      	mov	r2, r0
 8010cbc:	4b2a      	ldr	r3, [pc, #168]	; (8010d68 <__lshift+0xd8>)
 8010cbe:	482b      	ldr	r0, [pc, #172]	; (8010d6c <__lshift+0xdc>)
 8010cc0:	f240 11d9 	movw	r1, #473	; 0x1d9
 8010cc4:	f000 fb2a 	bl	801131c <__assert_func>
 8010cc8:	3101      	adds	r1, #1
 8010cca:	005b      	lsls	r3, r3, #1
 8010ccc:	e7ee      	b.n	8010cac <__lshift+0x1c>
 8010cce:	2300      	movs	r3, #0
 8010cd0:	f100 0114 	add.w	r1, r0, #20
 8010cd4:	f100 0210 	add.w	r2, r0, #16
 8010cd8:	4618      	mov	r0, r3
 8010cda:	4553      	cmp	r3, sl
 8010cdc:	db37      	blt.n	8010d4e <__lshift+0xbe>
 8010cde:	6920      	ldr	r0, [r4, #16]
 8010ce0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8010ce4:	f104 0314 	add.w	r3, r4, #20
 8010ce8:	f019 091f 	ands.w	r9, r9, #31
 8010cec:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8010cf0:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8010cf4:	d02f      	beq.n	8010d56 <__lshift+0xc6>
 8010cf6:	f1c9 0e20 	rsb	lr, r9, #32
 8010cfa:	468a      	mov	sl, r1
 8010cfc:	f04f 0c00 	mov.w	ip, #0
 8010d00:	681a      	ldr	r2, [r3, #0]
 8010d02:	fa02 f209 	lsl.w	r2, r2, r9
 8010d06:	ea42 020c 	orr.w	r2, r2, ip
 8010d0a:	f84a 2b04 	str.w	r2, [sl], #4
 8010d0e:	f853 2b04 	ldr.w	r2, [r3], #4
 8010d12:	4298      	cmp	r0, r3
 8010d14:	fa22 fc0e 	lsr.w	ip, r2, lr
 8010d18:	d8f2      	bhi.n	8010d00 <__lshift+0x70>
 8010d1a:	1b03      	subs	r3, r0, r4
 8010d1c:	3b15      	subs	r3, #21
 8010d1e:	f023 0303 	bic.w	r3, r3, #3
 8010d22:	3304      	adds	r3, #4
 8010d24:	f104 0215 	add.w	r2, r4, #21
 8010d28:	4290      	cmp	r0, r2
 8010d2a:	bf38      	it	cc
 8010d2c:	2304      	movcc	r3, #4
 8010d2e:	f841 c003 	str.w	ip, [r1, r3]
 8010d32:	f1bc 0f00 	cmp.w	ip, #0
 8010d36:	d001      	beq.n	8010d3c <__lshift+0xac>
 8010d38:	f108 0602 	add.w	r6, r8, #2
 8010d3c:	3e01      	subs	r6, #1
 8010d3e:	4638      	mov	r0, r7
 8010d40:	612e      	str	r6, [r5, #16]
 8010d42:	4621      	mov	r1, r4
 8010d44:	f7ff fd88 	bl	8010858 <_Bfree>
 8010d48:	4628      	mov	r0, r5
 8010d4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010d4e:	f842 0f04 	str.w	r0, [r2, #4]!
 8010d52:	3301      	adds	r3, #1
 8010d54:	e7c1      	b.n	8010cda <__lshift+0x4a>
 8010d56:	3904      	subs	r1, #4
 8010d58:	f853 2b04 	ldr.w	r2, [r3], #4
 8010d5c:	f841 2f04 	str.w	r2, [r1, #4]!
 8010d60:	4298      	cmp	r0, r3
 8010d62:	d8f9      	bhi.n	8010d58 <__lshift+0xc8>
 8010d64:	e7ea      	b.n	8010d3c <__lshift+0xac>
 8010d66:	bf00      	nop
 8010d68:	08012c78 	.word	0x08012c78
 8010d6c:	08012d1b 	.word	0x08012d1b

08010d70 <__mcmp>:
 8010d70:	b530      	push	{r4, r5, lr}
 8010d72:	6902      	ldr	r2, [r0, #16]
 8010d74:	690c      	ldr	r4, [r1, #16]
 8010d76:	1b12      	subs	r2, r2, r4
 8010d78:	d10e      	bne.n	8010d98 <__mcmp+0x28>
 8010d7a:	f100 0314 	add.w	r3, r0, #20
 8010d7e:	3114      	adds	r1, #20
 8010d80:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8010d84:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8010d88:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8010d8c:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8010d90:	42a5      	cmp	r5, r4
 8010d92:	d003      	beq.n	8010d9c <__mcmp+0x2c>
 8010d94:	d305      	bcc.n	8010da2 <__mcmp+0x32>
 8010d96:	2201      	movs	r2, #1
 8010d98:	4610      	mov	r0, r2
 8010d9a:	bd30      	pop	{r4, r5, pc}
 8010d9c:	4283      	cmp	r3, r0
 8010d9e:	d3f3      	bcc.n	8010d88 <__mcmp+0x18>
 8010da0:	e7fa      	b.n	8010d98 <__mcmp+0x28>
 8010da2:	f04f 32ff 	mov.w	r2, #4294967295
 8010da6:	e7f7      	b.n	8010d98 <__mcmp+0x28>

08010da8 <__mdiff>:
 8010da8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010dac:	460c      	mov	r4, r1
 8010dae:	4606      	mov	r6, r0
 8010db0:	4611      	mov	r1, r2
 8010db2:	4620      	mov	r0, r4
 8010db4:	4690      	mov	r8, r2
 8010db6:	f7ff ffdb 	bl	8010d70 <__mcmp>
 8010dba:	1e05      	subs	r5, r0, #0
 8010dbc:	d110      	bne.n	8010de0 <__mdiff+0x38>
 8010dbe:	4629      	mov	r1, r5
 8010dc0:	4630      	mov	r0, r6
 8010dc2:	f7ff fd09 	bl	80107d8 <_Balloc>
 8010dc6:	b930      	cbnz	r0, 8010dd6 <__mdiff+0x2e>
 8010dc8:	4b3a      	ldr	r3, [pc, #232]	; (8010eb4 <__mdiff+0x10c>)
 8010dca:	4602      	mov	r2, r0
 8010dcc:	f240 2132 	movw	r1, #562	; 0x232
 8010dd0:	4839      	ldr	r0, [pc, #228]	; (8010eb8 <__mdiff+0x110>)
 8010dd2:	f000 faa3 	bl	801131c <__assert_func>
 8010dd6:	2301      	movs	r3, #1
 8010dd8:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8010ddc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010de0:	bfa4      	itt	ge
 8010de2:	4643      	movge	r3, r8
 8010de4:	46a0      	movge	r8, r4
 8010de6:	4630      	mov	r0, r6
 8010de8:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8010dec:	bfa6      	itte	ge
 8010dee:	461c      	movge	r4, r3
 8010df0:	2500      	movge	r5, #0
 8010df2:	2501      	movlt	r5, #1
 8010df4:	f7ff fcf0 	bl	80107d8 <_Balloc>
 8010df8:	b920      	cbnz	r0, 8010e04 <__mdiff+0x5c>
 8010dfa:	4b2e      	ldr	r3, [pc, #184]	; (8010eb4 <__mdiff+0x10c>)
 8010dfc:	4602      	mov	r2, r0
 8010dfe:	f44f 7110 	mov.w	r1, #576	; 0x240
 8010e02:	e7e5      	b.n	8010dd0 <__mdiff+0x28>
 8010e04:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8010e08:	6926      	ldr	r6, [r4, #16]
 8010e0a:	60c5      	str	r5, [r0, #12]
 8010e0c:	f104 0914 	add.w	r9, r4, #20
 8010e10:	f108 0514 	add.w	r5, r8, #20
 8010e14:	f100 0e14 	add.w	lr, r0, #20
 8010e18:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8010e1c:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8010e20:	f108 0210 	add.w	r2, r8, #16
 8010e24:	46f2      	mov	sl, lr
 8010e26:	2100      	movs	r1, #0
 8010e28:	f859 3b04 	ldr.w	r3, [r9], #4
 8010e2c:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8010e30:	fa1f f883 	uxth.w	r8, r3
 8010e34:	fa11 f18b 	uxtah	r1, r1, fp
 8010e38:	0c1b      	lsrs	r3, r3, #16
 8010e3a:	eba1 0808 	sub.w	r8, r1, r8
 8010e3e:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8010e42:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8010e46:	fa1f f888 	uxth.w	r8, r8
 8010e4a:	1419      	asrs	r1, r3, #16
 8010e4c:	454e      	cmp	r6, r9
 8010e4e:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8010e52:	f84a 3b04 	str.w	r3, [sl], #4
 8010e56:	d8e7      	bhi.n	8010e28 <__mdiff+0x80>
 8010e58:	1b33      	subs	r3, r6, r4
 8010e5a:	3b15      	subs	r3, #21
 8010e5c:	f023 0303 	bic.w	r3, r3, #3
 8010e60:	3304      	adds	r3, #4
 8010e62:	3415      	adds	r4, #21
 8010e64:	42a6      	cmp	r6, r4
 8010e66:	bf38      	it	cc
 8010e68:	2304      	movcc	r3, #4
 8010e6a:	441d      	add	r5, r3
 8010e6c:	4473      	add	r3, lr
 8010e6e:	469e      	mov	lr, r3
 8010e70:	462e      	mov	r6, r5
 8010e72:	4566      	cmp	r6, ip
 8010e74:	d30e      	bcc.n	8010e94 <__mdiff+0xec>
 8010e76:	f10c 0203 	add.w	r2, ip, #3
 8010e7a:	1b52      	subs	r2, r2, r5
 8010e7c:	f022 0203 	bic.w	r2, r2, #3
 8010e80:	3d03      	subs	r5, #3
 8010e82:	45ac      	cmp	ip, r5
 8010e84:	bf38      	it	cc
 8010e86:	2200      	movcc	r2, #0
 8010e88:	441a      	add	r2, r3
 8010e8a:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8010e8e:	b17b      	cbz	r3, 8010eb0 <__mdiff+0x108>
 8010e90:	6107      	str	r7, [r0, #16]
 8010e92:	e7a3      	b.n	8010ddc <__mdiff+0x34>
 8010e94:	f856 8b04 	ldr.w	r8, [r6], #4
 8010e98:	fa11 f288 	uxtah	r2, r1, r8
 8010e9c:	1414      	asrs	r4, r2, #16
 8010e9e:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8010ea2:	b292      	uxth	r2, r2
 8010ea4:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8010ea8:	f84e 2b04 	str.w	r2, [lr], #4
 8010eac:	1421      	asrs	r1, r4, #16
 8010eae:	e7e0      	b.n	8010e72 <__mdiff+0xca>
 8010eb0:	3f01      	subs	r7, #1
 8010eb2:	e7ea      	b.n	8010e8a <__mdiff+0xe2>
 8010eb4:	08012c78 	.word	0x08012c78
 8010eb8:	08012d1b 	.word	0x08012d1b

08010ebc <__ulp>:
 8010ebc:	b082      	sub	sp, #8
 8010ebe:	ed8d 0b00 	vstr	d0, [sp]
 8010ec2:	9b01      	ldr	r3, [sp, #4]
 8010ec4:	4912      	ldr	r1, [pc, #72]	; (8010f10 <__ulp+0x54>)
 8010ec6:	4019      	ands	r1, r3
 8010ec8:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 8010ecc:	2900      	cmp	r1, #0
 8010ece:	dd05      	ble.n	8010edc <__ulp+0x20>
 8010ed0:	2200      	movs	r2, #0
 8010ed2:	460b      	mov	r3, r1
 8010ed4:	ec43 2b10 	vmov	d0, r2, r3
 8010ed8:	b002      	add	sp, #8
 8010eda:	4770      	bx	lr
 8010edc:	4249      	negs	r1, r1
 8010ede:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 8010ee2:	ea4f 5021 	mov.w	r0, r1, asr #20
 8010ee6:	f04f 0200 	mov.w	r2, #0
 8010eea:	f04f 0300 	mov.w	r3, #0
 8010eee:	da04      	bge.n	8010efa <__ulp+0x3e>
 8010ef0:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8010ef4:	fa41 f300 	asr.w	r3, r1, r0
 8010ef8:	e7ec      	b.n	8010ed4 <__ulp+0x18>
 8010efa:	f1a0 0114 	sub.w	r1, r0, #20
 8010efe:	291e      	cmp	r1, #30
 8010f00:	bfda      	itte	le
 8010f02:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 8010f06:	fa20 f101 	lsrle.w	r1, r0, r1
 8010f0a:	2101      	movgt	r1, #1
 8010f0c:	460a      	mov	r2, r1
 8010f0e:	e7e1      	b.n	8010ed4 <__ulp+0x18>
 8010f10:	7ff00000 	.word	0x7ff00000

08010f14 <__b2d>:
 8010f14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010f16:	6905      	ldr	r5, [r0, #16]
 8010f18:	f100 0714 	add.w	r7, r0, #20
 8010f1c:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8010f20:	1f2e      	subs	r6, r5, #4
 8010f22:	f855 4c04 	ldr.w	r4, [r5, #-4]
 8010f26:	4620      	mov	r0, r4
 8010f28:	f7ff fd48 	bl	80109bc <__hi0bits>
 8010f2c:	f1c0 0320 	rsb	r3, r0, #32
 8010f30:	280a      	cmp	r0, #10
 8010f32:	f8df c07c 	ldr.w	ip, [pc, #124]	; 8010fb0 <__b2d+0x9c>
 8010f36:	600b      	str	r3, [r1, #0]
 8010f38:	dc14      	bgt.n	8010f64 <__b2d+0x50>
 8010f3a:	f1c0 0e0b 	rsb	lr, r0, #11
 8010f3e:	fa24 f10e 	lsr.w	r1, r4, lr
 8010f42:	42b7      	cmp	r7, r6
 8010f44:	ea41 030c 	orr.w	r3, r1, ip
 8010f48:	bf34      	ite	cc
 8010f4a:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8010f4e:	2100      	movcs	r1, #0
 8010f50:	3015      	adds	r0, #21
 8010f52:	fa04 f000 	lsl.w	r0, r4, r0
 8010f56:	fa21 f10e 	lsr.w	r1, r1, lr
 8010f5a:	ea40 0201 	orr.w	r2, r0, r1
 8010f5e:	ec43 2b10 	vmov	d0, r2, r3
 8010f62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010f64:	42b7      	cmp	r7, r6
 8010f66:	bf3a      	itte	cc
 8010f68:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8010f6c:	f1a5 0608 	subcc.w	r6, r5, #8
 8010f70:	2100      	movcs	r1, #0
 8010f72:	380b      	subs	r0, #11
 8010f74:	d017      	beq.n	8010fa6 <__b2d+0x92>
 8010f76:	f1c0 0c20 	rsb	ip, r0, #32
 8010f7a:	fa04 f500 	lsl.w	r5, r4, r0
 8010f7e:	42be      	cmp	r6, r7
 8010f80:	fa21 f40c 	lsr.w	r4, r1, ip
 8010f84:	ea45 0504 	orr.w	r5, r5, r4
 8010f88:	bf8c      	ite	hi
 8010f8a:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8010f8e:	2400      	movls	r4, #0
 8010f90:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 8010f94:	fa01 f000 	lsl.w	r0, r1, r0
 8010f98:	fa24 f40c 	lsr.w	r4, r4, ip
 8010f9c:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8010fa0:	ea40 0204 	orr.w	r2, r0, r4
 8010fa4:	e7db      	b.n	8010f5e <__b2d+0x4a>
 8010fa6:	ea44 030c 	orr.w	r3, r4, ip
 8010faa:	460a      	mov	r2, r1
 8010fac:	e7d7      	b.n	8010f5e <__b2d+0x4a>
 8010fae:	bf00      	nop
 8010fb0:	3ff00000 	.word	0x3ff00000

08010fb4 <__d2b>:
 8010fb4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010fb8:	4689      	mov	r9, r1
 8010fba:	2101      	movs	r1, #1
 8010fbc:	ec57 6b10 	vmov	r6, r7, d0
 8010fc0:	4690      	mov	r8, r2
 8010fc2:	f7ff fc09 	bl	80107d8 <_Balloc>
 8010fc6:	4604      	mov	r4, r0
 8010fc8:	b930      	cbnz	r0, 8010fd8 <__d2b+0x24>
 8010fca:	4602      	mov	r2, r0
 8010fcc:	4b25      	ldr	r3, [pc, #148]	; (8011064 <__d2b+0xb0>)
 8010fce:	4826      	ldr	r0, [pc, #152]	; (8011068 <__d2b+0xb4>)
 8010fd0:	f240 310a 	movw	r1, #778	; 0x30a
 8010fd4:	f000 f9a2 	bl	801131c <__assert_func>
 8010fd8:	f3c7 550a 	ubfx	r5, r7, #20, #11
 8010fdc:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8010fe0:	bb35      	cbnz	r5, 8011030 <__d2b+0x7c>
 8010fe2:	2e00      	cmp	r6, #0
 8010fe4:	9301      	str	r3, [sp, #4]
 8010fe6:	d028      	beq.n	801103a <__d2b+0x86>
 8010fe8:	4668      	mov	r0, sp
 8010fea:	9600      	str	r6, [sp, #0]
 8010fec:	f7ff fd06 	bl	80109fc <__lo0bits>
 8010ff0:	9900      	ldr	r1, [sp, #0]
 8010ff2:	b300      	cbz	r0, 8011036 <__d2b+0x82>
 8010ff4:	9a01      	ldr	r2, [sp, #4]
 8010ff6:	f1c0 0320 	rsb	r3, r0, #32
 8010ffa:	fa02 f303 	lsl.w	r3, r2, r3
 8010ffe:	430b      	orrs	r3, r1
 8011000:	40c2      	lsrs	r2, r0
 8011002:	6163      	str	r3, [r4, #20]
 8011004:	9201      	str	r2, [sp, #4]
 8011006:	9b01      	ldr	r3, [sp, #4]
 8011008:	61a3      	str	r3, [r4, #24]
 801100a:	2b00      	cmp	r3, #0
 801100c:	bf14      	ite	ne
 801100e:	2202      	movne	r2, #2
 8011010:	2201      	moveq	r2, #1
 8011012:	6122      	str	r2, [r4, #16]
 8011014:	b1d5      	cbz	r5, 801104c <__d2b+0x98>
 8011016:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 801101a:	4405      	add	r5, r0
 801101c:	f8c9 5000 	str.w	r5, [r9]
 8011020:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8011024:	f8c8 0000 	str.w	r0, [r8]
 8011028:	4620      	mov	r0, r4
 801102a:	b003      	add	sp, #12
 801102c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011030:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8011034:	e7d5      	b.n	8010fe2 <__d2b+0x2e>
 8011036:	6161      	str	r1, [r4, #20]
 8011038:	e7e5      	b.n	8011006 <__d2b+0x52>
 801103a:	a801      	add	r0, sp, #4
 801103c:	f7ff fcde 	bl	80109fc <__lo0bits>
 8011040:	9b01      	ldr	r3, [sp, #4]
 8011042:	6163      	str	r3, [r4, #20]
 8011044:	2201      	movs	r2, #1
 8011046:	6122      	str	r2, [r4, #16]
 8011048:	3020      	adds	r0, #32
 801104a:	e7e3      	b.n	8011014 <__d2b+0x60>
 801104c:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8011050:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8011054:	f8c9 0000 	str.w	r0, [r9]
 8011058:	6918      	ldr	r0, [r3, #16]
 801105a:	f7ff fcaf 	bl	80109bc <__hi0bits>
 801105e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8011062:	e7df      	b.n	8011024 <__d2b+0x70>
 8011064:	08012c78 	.word	0x08012c78
 8011068:	08012d1b 	.word	0x08012d1b

0801106c <__ratio>:
 801106c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011070:	4688      	mov	r8, r1
 8011072:	4669      	mov	r1, sp
 8011074:	4681      	mov	r9, r0
 8011076:	f7ff ff4d 	bl	8010f14 <__b2d>
 801107a:	a901      	add	r1, sp, #4
 801107c:	4640      	mov	r0, r8
 801107e:	ec55 4b10 	vmov	r4, r5, d0
 8011082:	ee10 aa10 	vmov	sl, s0
 8011086:	f7ff ff45 	bl	8010f14 <__b2d>
 801108a:	f8d9 3010 	ldr.w	r3, [r9, #16]
 801108e:	f8d8 1010 	ldr.w	r1, [r8, #16]
 8011092:	1a59      	subs	r1, r3, r1
 8011094:	e9dd 2300 	ldrd	r2, r3, [sp]
 8011098:	1ad3      	subs	r3, r2, r3
 801109a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 801109e:	ec57 6b10 	vmov	r6, r7, d0
 80110a2:	2b00      	cmp	r3, #0
 80110a4:	bfd6      	itet	le
 80110a6:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80110aa:	462a      	movgt	r2, r5
 80110ac:	463a      	movle	r2, r7
 80110ae:	46ab      	mov	fp, r5
 80110b0:	bfd6      	itet	le
 80110b2:	eb02 5303 	addle.w	r3, r2, r3, lsl #20
 80110b6:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 80110ba:	ee00 3a90 	vmovle	s1, r3
 80110be:	ec4b ab17 	vmov	d7, sl, fp
 80110c2:	ee87 0b00 	vdiv.f64	d0, d7, d0
 80110c6:	b003      	add	sp, #12
 80110c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080110cc <__copybits>:
 80110cc:	3901      	subs	r1, #1
 80110ce:	b570      	push	{r4, r5, r6, lr}
 80110d0:	1149      	asrs	r1, r1, #5
 80110d2:	6914      	ldr	r4, [r2, #16]
 80110d4:	3101      	adds	r1, #1
 80110d6:	f102 0314 	add.w	r3, r2, #20
 80110da:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80110de:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80110e2:	1f05      	subs	r5, r0, #4
 80110e4:	42a3      	cmp	r3, r4
 80110e6:	d30c      	bcc.n	8011102 <__copybits+0x36>
 80110e8:	1aa3      	subs	r3, r4, r2
 80110ea:	3b11      	subs	r3, #17
 80110ec:	f023 0303 	bic.w	r3, r3, #3
 80110f0:	3211      	adds	r2, #17
 80110f2:	42a2      	cmp	r2, r4
 80110f4:	bf88      	it	hi
 80110f6:	2300      	movhi	r3, #0
 80110f8:	4418      	add	r0, r3
 80110fa:	2300      	movs	r3, #0
 80110fc:	4288      	cmp	r0, r1
 80110fe:	d305      	bcc.n	801110c <__copybits+0x40>
 8011100:	bd70      	pop	{r4, r5, r6, pc}
 8011102:	f853 6b04 	ldr.w	r6, [r3], #4
 8011106:	f845 6f04 	str.w	r6, [r5, #4]!
 801110a:	e7eb      	b.n	80110e4 <__copybits+0x18>
 801110c:	f840 3b04 	str.w	r3, [r0], #4
 8011110:	e7f4      	b.n	80110fc <__copybits+0x30>

08011112 <__any_on>:
 8011112:	f100 0214 	add.w	r2, r0, #20
 8011116:	6900      	ldr	r0, [r0, #16]
 8011118:	114b      	asrs	r3, r1, #5
 801111a:	4298      	cmp	r0, r3
 801111c:	b510      	push	{r4, lr}
 801111e:	db11      	blt.n	8011144 <__any_on+0x32>
 8011120:	dd0a      	ble.n	8011138 <__any_on+0x26>
 8011122:	f011 011f 	ands.w	r1, r1, #31
 8011126:	d007      	beq.n	8011138 <__any_on+0x26>
 8011128:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 801112c:	fa24 f001 	lsr.w	r0, r4, r1
 8011130:	fa00 f101 	lsl.w	r1, r0, r1
 8011134:	428c      	cmp	r4, r1
 8011136:	d10b      	bne.n	8011150 <__any_on+0x3e>
 8011138:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801113c:	4293      	cmp	r3, r2
 801113e:	d803      	bhi.n	8011148 <__any_on+0x36>
 8011140:	2000      	movs	r0, #0
 8011142:	bd10      	pop	{r4, pc}
 8011144:	4603      	mov	r3, r0
 8011146:	e7f7      	b.n	8011138 <__any_on+0x26>
 8011148:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 801114c:	2900      	cmp	r1, #0
 801114e:	d0f5      	beq.n	801113c <__any_on+0x2a>
 8011150:	2001      	movs	r0, #1
 8011152:	e7f6      	b.n	8011142 <__any_on+0x30>

08011154 <_calloc_r>:
 8011154:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011156:	fba1 2402 	umull	r2, r4, r1, r2
 801115a:	b94c      	cbnz	r4, 8011170 <_calloc_r+0x1c>
 801115c:	4611      	mov	r1, r2
 801115e:	9201      	str	r2, [sp, #4]
 8011160:	f000 f82e 	bl	80111c0 <_malloc_r>
 8011164:	9a01      	ldr	r2, [sp, #4]
 8011166:	4605      	mov	r5, r0
 8011168:	b930      	cbnz	r0, 8011178 <_calloc_r+0x24>
 801116a:	4628      	mov	r0, r5
 801116c:	b003      	add	sp, #12
 801116e:	bd30      	pop	{r4, r5, pc}
 8011170:	220c      	movs	r2, #12
 8011172:	6002      	str	r2, [r0, #0]
 8011174:	2500      	movs	r5, #0
 8011176:	e7f8      	b.n	801116a <_calloc_r+0x16>
 8011178:	4621      	mov	r1, r4
 801117a:	f7fe f9c5 	bl	800f508 <memset>
 801117e:	e7f4      	b.n	801116a <_calloc_r+0x16>

08011180 <sbrk_aligned>:
 8011180:	b570      	push	{r4, r5, r6, lr}
 8011182:	4e0e      	ldr	r6, [pc, #56]	; (80111bc <sbrk_aligned+0x3c>)
 8011184:	460c      	mov	r4, r1
 8011186:	6831      	ldr	r1, [r6, #0]
 8011188:	4605      	mov	r5, r0
 801118a:	b911      	cbnz	r1, 8011192 <sbrk_aligned+0x12>
 801118c:	f000 f894 	bl	80112b8 <_sbrk_r>
 8011190:	6030      	str	r0, [r6, #0]
 8011192:	4621      	mov	r1, r4
 8011194:	4628      	mov	r0, r5
 8011196:	f000 f88f 	bl	80112b8 <_sbrk_r>
 801119a:	1c43      	adds	r3, r0, #1
 801119c:	d00a      	beq.n	80111b4 <sbrk_aligned+0x34>
 801119e:	1cc4      	adds	r4, r0, #3
 80111a0:	f024 0403 	bic.w	r4, r4, #3
 80111a4:	42a0      	cmp	r0, r4
 80111a6:	d007      	beq.n	80111b8 <sbrk_aligned+0x38>
 80111a8:	1a21      	subs	r1, r4, r0
 80111aa:	4628      	mov	r0, r5
 80111ac:	f000 f884 	bl	80112b8 <_sbrk_r>
 80111b0:	3001      	adds	r0, #1
 80111b2:	d101      	bne.n	80111b8 <sbrk_aligned+0x38>
 80111b4:	f04f 34ff 	mov.w	r4, #4294967295
 80111b8:	4620      	mov	r0, r4
 80111ba:	bd70      	pop	{r4, r5, r6, pc}
 80111bc:	24000c64 	.word	0x24000c64

080111c0 <_malloc_r>:
 80111c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80111c4:	1ccd      	adds	r5, r1, #3
 80111c6:	f025 0503 	bic.w	r5, r5, #3
 80111ca:	3508      	adds	r5, #8
 80111cc:	2d0c      	cmp	r5, #12
 80111ce:	bf38      	it	cc
 80111d0:	250c      	movcc	r5, #12
 80111d2:	2d00      	cmp	r5, #0
 80111d4:	4607      	mov	r7, r0
 80111d6:	db01      	blt.n	80111dc <_malloc_r+0x1c>
 80111d8:	42a9      	cmp	r1, r5
 80111da:	d905      	bls.n	80111e8 <_malloc_r+0x28>
 80111dc:	230c      	movs	r3, #12
 80111de:	603b      	str	r3, [r7, #0]
 80111e0:	2600      	movs	r6, #0
 80111e2:	4630      	mov	r0, r6
 80111e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80111e8:	4e2e      	ldr	r6, [pc, #184]	; (80112a4 <_malloc_r+0xe4>)
 80111ea:	f000 f8cf 	bl	801138c <__malloc_lock>
 80111ee:	6833      	ldr	r3, [r6, #0]
 80111f0:	461c      	mov	r4, r3
 80111f2:	bb34      	cbnz	r4, 8011242 <_malloc_r+0x82>
 80111f4:	4629      	mov	r1, r5
 80111f6:	4638      	mov	r0, r7
 80111f8:	f7ff ffc2 	bl	8011180 <sbrk_aligned>
 80111fc:	1c43      	adds	r3, r0, #1
 80111fe:	4604      	mov	r4, r0
 8011200:	d14d      	bne.n	801129e <_malloc_r+0xde>
 8011202:	6834      	ldr	r4, [r6, #0]
 8011204:	4626      	mov	r6, r4
 8011206:	2e00      	cmp	r6, #0
 8011208:	d140      	bne.n	801128c <_malloc_r+0xcc>
 801120a:	6823      	ldr	r3, [r4, #0]
 801120c:	4631      	mov	r1, r6
 801120e:	4638      	mov	r0, r7
 8011210:	eb04 0803 	add.w	r8, r4, r3
 8011214:	f000 f850 	bl	80112b8 <_sbrk_r>
 8011218:	4580      	cmp	r8, r0
 801121a:	d13a      	bne.n	8011292 <_malloc_r+0xd2>
 801121c:	6821      	ldr	r1, [r4, #0]
 801121e:	3503      	adds	r5, #3
 8011220:	1a6d      	subs	r5, r5, r1
 8011222:	f025 0503 	bic.w	r5, r5, #3
 8011226:	3508      	adds	r5, #8
 8011228:	2d0c      	cmp	r5, #12
 801122a:	bf38      	it	cc
 801122c:	250c      	movcc	r5, #12
 801122e:	4629      	mov	r1, r5
 8011230:	4638      	mov	r0, r7
 8011232:	f7ff ffa5 	bl	8011180 <sbrk_aligned>
 8011236:	3001      	adds	r0, #1
 8011238:	d02b      	beq.n	8011292 <_malloc_r+0xd2>
 801123a:	6823      	ldr	r3, [r4, #0]
 801123c:	442b      	add	r3, r5
 801123e:	6023      	str	r3, [r4, #0]
 8011240:	e00e      	b.n	8011260 <_malloc_r+0xa0>
 8011242:	6822      	ldr	r2, [r4, #0]
 8011244:	1b52      	subs	r2, r2, r5
 8011246:	d41e      	bmi.n	8011286 <_malloc_r+0xc6>
 8011248:	2a0b      	cmp	r2, #11
 801124a:	d916      	bls.n	801127a <_malloc_r+0xba>
 801124c:	1961      	adds	r1, r4, r5
 801124e:	42a3      	cmp	r3, r4
 8011250:	6025      	str	r5, [r4, #0]
 8011252:	bf18      	it	ne
 8011254:	6059      	strne	r1, [r3, #4]
 8011256:	6863      	ldr	r3, [r4, #4]
 8011258:	bf08      	it	eq
 801125a:	6031      	streq	r1, [r6, #0]
 801125c:	5162      	str	r2, [r4, r5]
 801125e:	604b      	str	r3, [r1, #4]
 8011260:	4638      	mov	r0, r7
 8011262:	f104 060b 	add.w	r6, r4, #11
 8011266:	f000 f897 	bl	8011398 <__malloc_unlock>
 801126a:	f026 0607 	bic.w	r6, r6, #7
 801126e:	1d23      	adds	r3, r4, #4
 8011270:	1af2      	subs	r2, r6, r3
 8011272:	d0b6      	beq.n	80111e2 <_malloc_r+0x22>
 8011274:	1b9b      	subs	r3, r3, r6
 8011276:	50a3      	str	r3, [r4, r2]
 8011278:	e7b3      	b.n	80111e2 <_malloc_r+0x22>
 801127a:	6862      	ldr	r2, [r4, #4]
 801127c:	42a3      	cmp	r3, r4
 801127e:	bf0c      	ite	eq
 8011280:	6032      	streq	r2, [r6, #0]
 8011282:	605a      	strne	r2, [r3, #4]
 8011284:	e7ec      	b.n	8011260 <_malloc_r+0xa0>
 8011286:	4623      	mov	r3, r4
 8011288:	6864      	ldr	r4, [r4, #4]
 801128a:	e7b2      	b.n	80111f2 <_malloc_r+0x32>
 801128c:	4634      	mov	r4, r6
 801128e:	6876      	ldr	r6, [r6, #4]
 8011290:	e7b9      	b.n	8011206 <_malloc_r+0x46>
 8011292:	230c      	movs	r3, #12
 8011294:	603b      	str	r3, [r7, #0]
 8011296:	4638      	mov	r0, r7
 8011298:	f000 f87e 	bl	8011398 <__malloc_unlock>
 801129c:	e7a1      	b.n	80111e2 <_malloc_r+0x22>
 801129e:	6025      	str	r5, [r4, #0]
 80112a0:	e7de      	b.n	8011260 <_malloc_r+0xa0>
 80112a2:	bf00      	nop
 80112a4:	24000c60 	.word	0x24000c60

080112a8 <nan>:
 80112a8:	ed9f 0b01 	vldr	d0, [pc, #4]	; 80112b0 <nan+0x8>
 80112ac:	4770      	bx	lr
 80112ae:	bf00      	nop
 80112b0:	00000000 	.word	0x00000000
 80112b4:	7ff80000 	.word	0x7ff80000

080112b8 <_sbrk_r>:
 80112b8:	b538      	push	{r3, r4, r5, lr}
 80112ba:	4d06      	ldr	r5, [pc, #24]	; (80112d4 <_sbrk_r+0x1c>)
 80112bc:	2300      	movs	r3, #0
 80112be:	4604      	mov	r4, r0
 80112c0:	4608      	mov	r0, r1
 80112c2:	602b      	str	r3, [r5, #0]
 80112c4:	f7f3 fac0 	bl	8004848 <_sbrk>
 80112c8:	1c43      	adds	r3, r0, #1
 80112ca:	d102      	bne.n	80112d2 <_sbrk_r+0x1a>
 80112cc:	682b      	ldr	r3, [r5, #0]
 80112ce:	b103      	cbz	r3, 80112d2 <_sbrk_r+0x1a>
 80112d0:	6023      	str	r3, [r4, #0]
 80112d2:	bd38      	pop	{r3, r4, r5, pc}
 80112d4:	24000c68 	.word	0x24000c68

080112d8 <strncmp>:
 80112d8:	b510      	push	{r4, lr}
 80112da:	b17a      	cbz	r2, 80112fc <strncmp+0x24>
 80112dc:	4603      	mov	r3, r0
 80112de:	3901      	subs	r1, #1
 80112e0:	1884      	adds	r4, r0, r2
 80112e2:	f813 0b01 	ldrb.w	r0, [r3], #1
 80112e6:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80112ea:	4290      	cmp	r0, r2
 80112ec:	d101      	bne.n	80112f2 <strncmp+0x1a>
 80112ee:	42a3      	cmp	r3, r4
 80112f0:	d101      	bne.n	80112f6 <strncmp+0x1e>
 80112f2:	1a80      	subs	r0, r0, r2
 80112f4:	bd10      	pop	{r4, pc}
 80112f6:	2800      	cmp	r0, #0
 80112f8:	d1f3      	bne.n	80112e2 <strncmp+0xa>
 80112fa:	e7fa      	b.n	80112f2 <strncmp+0x1a>
 80112fc:	4610      	mov	r0, r2
 80112fe:	e7f9      	b.n	80112f4 <strncmp+0x1c>

08011300 <__ascii_wctomb>:
 8011300:	b149      	cbz	r1, 8011316 <__ascii_wctomb+0x16>
 8011302:	2aff      	cmp	r2, #255	; 0xff
 8011304:	bf85      	ittet	hi
 8011306:	238a      	movhi	r3, #138	; 0x8a
 8011308:	6003      	strhi	r3, [r0, #0]
 801130a:	700a      	strbls	r2, [r1, #0]
 801130c:	f04f 30ff 	movhi.w	r0, #4294967295
 8011310:	bf98      	it	ls
 8011312:	2001      	movls	r0, #1
 8011314:	4770      	bx	lr
 8011316:	4608      	mov	r0, r1
 8011318:	4770      	bx	lr
	...

0801131c <__assert_func>:
 801131c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801131e:	4614      	mov	r4, r2
 8011320:	461a      	mov	r2, r3
 8011322:	4b09      	ldr	r3, [pc, #36]	; (8011348 <__assert_func+0x2c>)
 8011324:	681b      	ldr	r3, [r3, #0]
 8011326:	4605      	mov	r5, r0
 8011328:	68d8      	ldr	r0, [r3, #12]
 801132a:	b14c      	cbz	r4, 8011340 <__assert_func+0x24>
 801132c:	4b07      	ldr	r3, [pc, #28]	; (801134c <__assert_func+0x30>)
 801132e:	9100      	str	r1, [sp, #0]
 8011330:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011334:	4906      	ldr	r1, [pc, #24]	; (8011350 <__assert_func+0x34>)
 8011336:	462b      	mov	r3, r5
 8011338:	f000 f80e 	bl	8011358 <fiprintf>
 801133c:	f000 fc2c 	bl	8011b98 <abort>
 8011340:	4b04      	ldr	r3, [pc, #16]	; (8011354 <__assert_func+0x38>)
 8011342:	461c      	mov	r4, r3
 8011344:	e7f3      	b.n	801132e <__assert_func+0x12>
 8011346:	bf00      	nop
 8011348:	240000c0 	.word	0x240000c0
 801134c:	08012e74 	.word	0x08012e74
 8011350:	08012e81 	.word	0x08012e81
 8011354:	08012eaf 	.word	0x08012eaf

08011358 <fiprintf>:
 8011358:	b40e      	push	{r1, r2, r3}
 801135a:	b503      	push	{r0, r1, lr}
 801135c:	4601      	mov	r1, r0
 801135e:	ab03      	add	r3, sp, #12
 8011360:	4805      	ldr	r0, [pc, #20]	; (8011378 <fiprintf+0x20>)
 8011362:	f853 2b04 	ldr.w	r2, [r3], #4
 8011366:	6800      	ldr	r0, [r0, #0]
 8011368:	9301      	str	r3, [sp, #4]
 801136a:	f000 f891 	bl	8011490 <_vfiprintf_r>
 801136e:	b002      	add	sp, #8
 8011370:	f85d eb04 	ldr.w	lr, [sp], #4
 8011374:	b003      	add	sp, #12
 8011376:	4770      	bx	lr
 8011378:	240000c0 	.word	0x240000c0

0801137c <malloc>:
 801137c:	4b02      	ldr	r3, [pc, #8]	; (8011388 <malloc+0xc>)
 801137e:	4601      	mov	r1, r0
 8011380:	6818      	ldr	r0, [r3, #0]
 8011382:	f7ff bf1d 	b.w	80111c0 <_malloc_r>
 8011386:	bf00      	nop
 8011388:	240000c0 	.word	0x240000c0

0801138c <__malloc_lock>:
 801138c:	4801      	ldr	r0, [pc, #4]	; (8011394 <__malloc_lock+0x8>)
 801138e:	f000 bdc3 	b.w	8011f18 <__retarget_lock_acquire_recursive>
 8011392:	bf00      	nop
 8011394:	24000c6c 	.word	0x24000c6c

08011398 <__malloc_unlock>:
 8011398:	4801      	ldr	r0, [pc, #4]	; (80113a0 <__malloc_unlock+0x8>)
 801139a:	f000 bdbe 	b.w	8011f1a <__retarget_lock_release_recursive>
 801139e:	bf00      	nop
 80113a0:	24000c6c 	.word	0x24000c6c

080113a4 <_free_r>:
 80113a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80113a6:	2900      	cmp	r1, #0
 80113a8:	d044      	beq.n	8011434 <_free_r+0x90>
 80113aa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80113ae:	9001      	str	r0, [sp, #4]
 80113b0:	2b00      	cmp	r3, #0
 80113b2:	f1a1 0404 	sub.w	r4, r1, #4
 80113b6:	bfb8      	it	lt
 80113b8:	18e4      	addlt	r4, r4, r3
 80113ba:	f7ff ffe7 	bl	801138c <__malloc_lock>
 80113be:	4a1e      	ldr	r2, [pc, #120]	; (8011438 <_free_r+0x94>)
 80113c0:	9801      	ldr	r0, [sp, #4]
 80113c2:	6813      	ldr	r3, [r2, #0]
 80113c4:	b933      	cbnz	r3, 80113d4 <_free_r+0x30>
 80113c6:	6063      	str	r3, [r4, #4]
 80113c8:	6014      	str	r4, [r2, #0]
 80113ca:	b003      	add	sp, #12
 80113cc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80113d0:	f7ff bfe2 	b.w	8011398 <__malloc_unlock>
 80113d4:	42a3      	cmp	r3, r4
 80113d6:	d908      	bls.n	80113ea <_free_r+0x46>
 80113d8:	6825      	ldr	r5, [r4, #0]
 80113da:	1961      	adds	r1, r4, r5
 80113dc:	428b      	cmp	r3, r1
 80113de:	bf01      	itttt	eq
 80113e0:	6819      	ldreq	r1, [r3, #0]
 80113e2:	685b      	ldreq	r3, [r3, #4]
 80113e4:	1949      	addeq	r1, r1, r5
 80113e6:	6021      	streq	r1, [r4, #0]
 80113e8:	e7ed      	b.n	80113c6 <_free_r+0x22>
 80113ea:	461a      	mov	r2, r3
 80113ec:	685b      	ldr	r3, [r3, #4]
 80113ee:	b10b      	cbz	r3, 80113f4 <_free_r+0x50>
 80113f0:	42a3      	cmp	r3, r4
 80113f2:	d9fa      	bls.n	80113ea <_free_r+0x46>
 80113f4:	6811      	ldr	r1, [r2, #0]
 80113f6:	1855      	adds	r5, r2, r1
 80113f8:	42a5      	cmp	r5, r4
 80113fa:	d10b      	bne.n	8011414 <_free_r+0x70>
 80113fc:	6824      	ldr	r4, [r4, #0]
 80113fe:	4421      	add	r1, r4
 8011400:	1854      	adds	r4, r2, r1
 8011402:	42a3      	cmp	r3, r4
 8011404:	6011      	str	r1, [r2, #0]
 8011406:	d1e0      	bne.n	80113ca <_free_r+0x26>
 8011408:	681c      	ldr	r4, [r3, #0]
 801140a:	685b      	ldr	r3, [r3, #4]
 801140c:	6053      	str	r3, [r2, #4]
 801140e:	4421      	add	r1, r4
 8011410:	6011      	str	r1, [r2, #0]
 8011412:	e7da      	b.n	80113ca <_free_r+0x26>
 8011414:	d902      	bls.n	801141c <_free_r+0x78>
 8011416:	230c      	movs	r3, #12
 8011418:	6003      	str	r3, [r0, #0]
 801141a:	e7d6      	b.n	80113ca <_free_r+0x26>
 801141c:	6825      	ldr	r5, [r4, #0]
 801141e:	1961      	adds	r1, r4, r5
 8011420:	428b      	cmp	r3, r1
 8011422:	bf04      	itt	eq
 8011424:	6819      	ldreq	r1, [r3, #0]
 8011426:	685b      	ldreq	r3, [r3, #4]
 8011428:	6063      	str	r3, [r4, #4]
 801142a:	bf04      	itt	eq
 801142c:	1949      	addeq	r1, r1, r5
 801142e:	6021      	streq	r1, [r4, #0]
 8011430:	6054      	str	r4, [r2, #4]
 8011432:	e7ca      	b.n	80113ca <_free_r+0x26>
 8011434:	b003      	add	sp, #12
 8011436:	bd30      	pop	{r4, r5, pc}
 8011438:	24000c60 	.word	0x24000c60

0801143c <__sfputc_r>:
 801143c:	6893      	ldr	r3, [r2, #8]
 801143e:	3b01      	subs	r3, #1
 8011440:	2b00      	cmp	r3, #0
 8011442:	b410      	push	{r4}
 8011444:	6093      	str	r3, [r2, #8]
 8011446:	da08      	bge.n	801145a <__sfputc_r+0x1e>
 8011448:	6994      	ldr	r4, [r2, #24]
 801144a:	42a3      	cmp	r3, r4
 801144c:	db01      	blt.n	8011452 <__sfputc_r+0x16>
 801144e:	290a      	cmp	r1, #10
 8011450:	d103      	bne.n	801145a <__sfputc_r+0x1e>
 8011452:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011456:	f000 badf 	b.w	8011a18 <__swbuf_r>
 801145a:	6813      	ldr	r3, [r2, #0]
 801145c:	1c58      	adds	r0, r3, #1
 801145e:	6010      	str	r0, [r2, #0]
 8011460:	7019      	strb	r1, [r3, #0]
 8011462:	4608      	mov	r0, r1
 8011464:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011468:	4770      	bx	lr

0801146a <__sfputs_r>:
 801146a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801146c:	4606      	mov	r6, r0
 801146e:	460f      	mov	r7, r1
 8011470:	4614      	mov	r4, r2
 8011472:	18d5      	adds	r5, r2, r3
 8011474:	42ac      	cmp	r4, r5
 8011476:	d101      	bne.n	801147c <__sfputs_r+0x12>
 8011478:	2000      	movs	r0, #0
 801147a:	e007      	b.n	801148c <__sfputs_r+0x22>
 801147c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8011480:	463a      	mov	r2, r7
 8011482:	4630      	mov	r0, r6
 8011484:	f7ff ffda 	bl	801143c <__sfputc_r>
 8011488:	1c43      	adds	r3, r0, #1
 801148a:	d1f3      	bne.n	8011474 <__sfputs_r+0xa>
 801148c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08011490 <_vfiprintf_r>:
 8011490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011494:	460d      	mov	r5, r1
 8011496:	b09d      	sub	sp, #116	; 0x74
 8011498:	4614      	mov	r4, r2
 801149a:	4698      	mov	r8, r3
 801149c:	4606      	mov	r6, r0
 801149e:	b118      	cbz	r0, 80114a8 <_vfiprintf_r+0x18>
 80114a0:	6983      	ldr	r3, [r0, #24]
 80114a2:	b90b      	cbnz	r3, 80114a8 <_vfiprintf_r+0x18>
 80114a4:	f000 fc9a 	bl	8011ddc <__sinit>
 80114a8:	4b89      	ldr	r3, [pc, #548]	; (80116d0 <_vfiprintf_r+0x240>)
 80114aa:	429d      	cmp	r5, r3
 80114ac:	d11b      	bne.n	80114e6 <_vfiprintf_r+0x56>
 80114ae:	6875      	ldr	r5, [r6, #4]
 80114b0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80114b2:	07d9      	lsls	r1, r3, #31
 80114b4:	d405      	bmi.n	80114c2 <_vfiprintf_r+0x32>
 80114b6:	89ab      	ldrh	r3, [r5, #12]
 80114b8:	059a      	lsls	r2, r3, #22
 80114ba:	d402      	bmi.n	80114c2 <_vfiprintf_r+0x32>
 80114bc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80114be:	f000 fd2b 	bl	8011f18 <__retarget_lock_acquire_recursive>
 80114c2:	89ab      	ldrh	r3, [r5, #12]
 80114c4:	071b      	lsls	r3, r3, #28
 80114c6:	d501      	bpl.n	80114cc <_vfiprintf_r+0x3c>
 80114c8:	692b      	ldr	r3, [r5, #16]
 80114ca:	b9eb      	cbnz	r3, 8011508 <_vfiprintf_r+0x78>
 80114cc:	4629      	mov	r1, r5
 80114ce:	4630      	mov	r0, r6
 80114d0:	f000 faf4 	bl	8011abc <__swsetup_r>
 80114d4:	b1c0      	cbz	r0, 8011508 <_vfiprintf_r+0x78>
 80114d6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80114d8:	07dc      	lsls	r4, r3, #31
 80114da:	d50e      	bpl.n	80114fa <_vfiprintf_r+0x6a>
 80114dc:	f04f 30ff 	mov.w	r0, #4294967295
 80114e0:	b01d      	add	sp, #116	; 0x74
 80114e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114e6:	4b7b      	ldr	r3, [pc, #492]	; (80116d4 <_vfiprintf_r+0x244>)
 80114e8:	429d      	cmp	r5, r3
 80114ea:	d101      	bne.n	80114f0 <_vfiprintf_r+0x60>
 80114ec:	68b5      	ldr	r5, [r6, #8]
 80114ee:	e7df      	b.n	80114b0 <_vfiprintf_r+0x20>
 80114f0:	4b79      	ldr	r3, [pc, #484]	; (80116d8 <_vfiprintf_r+0x248>)
 80114f2:	429d      	cmp	r5, r3
 80114f4:	bf08      	it	eq
 80114f6:	68f5      	ldreq	r5, [r6, #12]
 80114f8:	e7da      	b.n	80114b0 <_vfiprintf_r+0x20>
 80114fa:	89ab      	ldrh	r3, [r5, #12]
 80114fc:	0598      	lsls	r0, r3, #22
 80114fe:	d4ed      	bmi.n	80114dc <_vfiprintf_r+0x4c>
 8011500:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8011502:	f000 fd0a 	bl	8011f1a <__retarget_lock_release_recursive>
 8011506:	e7e9      	b.n	80114dc <_vfiprintf_r+0x4c>
 8011508:	2300      	movs	r3, #0
 801150a:	9309      	str	r3, [sp, #36]	; 0x24
 801150c:	2320      	movs	r3, #32
 801150e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8011512:	f8cd 800c 	str.w	r8, [sp, #12]
 8011516:	2330      	movs	r3, #48	; 0x30
 8011518:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80116dc <_vfiprintf_r+0x24c>
 801151c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8011520:	f04f 0901 	mov.w	r9, #1
 8011524:	4623      	mov	r3, r4
 8011526:	469a      	mov	sl, r3
 8011528:	f813 2b01 	ldrb.w	r2, [r3], #1
 801152c:	b10a      	cbz	r2, 8011532 <_vfiprintf_r+0xa2>
 801152e:	2a25      	cmp	r2, #37	; 0x25
 8011530:	d1f9      	bne.n	8011526 <_vfiprintf_r+0x96>
 8011532:	ebba 0b04 	subs.w	fp, sl, r4
 8011536:	d00b      	beq.n	8011550 <_vfiprintf_r+0xc0>
 8011538:	465b      	mov	r3, fp
 801153a:	4622      	mov	r2, r4
 801153c:	4629      	mov	r1, r5
 801153e:	4630      	mov	r0, r6
 8011540:	f7ff ff93 	bl	801146a <__sfputs_r>
 8011544:	3001      	adds	r0, #1
 8011546:	f000 80aa 	beq.w	801169e <_vfiprintf_r+0x20e>
 801154a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801154c:	445a      	add	r2, fp
 801154e:	9209      	str	r2, [sp, #36]	; 0x24
 8011550:	f89a 3000 	ldrb.w	r3, [sl]
 8011554:	2b00      	cmp	r3, #0
 8011556:	f000 80a2 	beq.w	801169e <_vfiprintf_r+0x20e>
 801155a:	2300      	movs	r3, #0
 801155c:	f04f 32ff 	mov.w	r2, #4294967295
 8011560:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8011564:	f10a 0a01 	add.w	sl, sl, #1
 8011568:	9304      	str	r3, [sp, #16]
 801156a:	9307      	str	r3, [sp, #28]
 801156c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8011570:	931a      	str	r3, [sp, #104]	; 0x68
 8011572:	4654      	mov	r4, sl
 8011574:	2205      	movs	r2, #5
 8011576:	f814 1b01 	ldrb.w	r1, [r4], #1
 801157a:	4858      	ldr	r0, [pc, #352]	; (80116dc <_vfiprintf_r+0x24c>)
 801157c:	f7ee feb8 	bl	80002f0 <memchr>
 8011580:	9a04      	ldr	r2, [sp, #16]
 8011582:	b9d8      	cbnz	r0, 80115bc <_vfiprintf_r+0x12c>
 8011584:	06d1      	lsls	r1, r2, #27
 8011586:	bf44      	itt	mi
 8011588:	2320      	movmi	r3, #32
 801158a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801158e:	0713      	lsls	r3, r2, #28
 8011590:	bf44      	itt	mi
 8011592:	232b      	movmi	r3, #43	; 0x2b
 8011594:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8011598:	f89a 3000 	ldrb.w	r3, [sl]
 801159c:	2b2a      	cmp	r3, #42	; 0x2a
 801159e:	d015      	beq.n	80115cc <_vfiprintf_r+0x13c>
 80115a0:	9a07      	ldr	r2, [sp, #28]
 80115a2:	4654      	mov	r4, sl
 80115a4:	2000      	movs	r0, #0
 80115a6:	f04f 0c0a 	mov.w	ip, #10
 80115aa:	4621      	mov	r1, r4
 80115ac:	f811 3b01 	ldrb.w	r3, [r1], #1
 80115b0:	3b30      	subs	r3, #48	; 0x30
 80115b2:	2b09      	cmp	r3, #9
 80115b4:	d94e      	bls.n	8011654 <_vfiprintf_r+0x1c4>
 80115b6:	b1b0      	cbz	r0, 80115e6 <_vfiprintf_r+0x156>
 80115b8:	9207      	str	r2, [sp, #28]
 80115ba:	e014      	b.n	80115e6 <_vfiprintf_r+0x156>
 80115bc:	eba0 0308 	sub.w	r3, r0, r8
 80115c0:	fa09 f303 	lsl.w	r3, r9, r3
 80115c4:	4313      	orrs	r3, r2
 80115c6:	9304      	str	r3, [sp, #16]
 80115c8:	46a2      	mov	sl, r4
 80115ca:	e7d2      	b.n	8011572 <_vfiprintf_r+0xe2>
 80115cc:	9b03      	ldr	r3, [sp, #12]
 80115ce:	1d19      	adds	r1, r3, #4
 80115d0:	681b      	ldr	r3, [r3, #0]
 80115d2:	9103      	str	r1, [sp, #12]
 80115d4:	2b00      	cmp	r3, #0
 80115d6:	bfbb      	ittet	lt
 80115d8:	425b      	neglt	r3, r3
 80115da:	f042 0202 	orrlt.w	r2, r2, #2
 80115de:	9307      	strge	r3, [sp, #28]
 80115e0:	9307      	strlt	r3, [sp, #28]
 80115e2:	bfb8      	it	lt
 80115e4:	9204      	strlt	r2, [sp, #16]
 80115e6:	7823      	ldrb	r3, [r4, #0]
 80115e8:	2b2e      	cmp	r3, #46	; 0x2e
 80115ea:	d10c      	bne.n	8011606 <_vfiprintf_r+0x176>
 80115ec:	7863      	ldrb	r3, [r4, #1]
 80115ee:	2b2a      	cmp	r3, #42	; 0x2a
 80115f0:	d135      	bne.n	801165e <_vfiprintf_r+0x1ce>
 80115f2:	9b03      	ldr	r3, [sp, #12]
 80115f4:	1d1a      	adds	r2, r3, #4
 80115f6:	681b      	ldr	r3, [r3, #0]
 80115f8:	9203      	str	r2, [sp, #12]
 80115fa:	2b00      	cmp	r3, #0
 80115fc:	bfb8      	it	lt
 80115fe:	f04f 33ff 	movlt.w	r3, #4294967295
 8011602:	3402      	adds	r4, #2
 8011604:	9305      	str	r3, [sp, #20]
 8011606:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80116ec <_vfiprintf_r+0x25c>
 801160a:	7821      	ldrb	r1, [r4, #0]
 801160c:	2203      	movs	r2, #3
 801160e:	4650      	mov	r0, sl
 8011610:	f7ee fe6e 	bl	80002f0 <memchr>
 8011614:	b140      	cbz	r0, 8011628 <_vfiprintf_r+0x198>
 8011616:	2340      	movs	r3, #64	; 0x40
 8011618:	eba0 000a 	sub.w	r0, r0, sl
 801161c:	fa03 f000 	lsl.w	r0, r3, r0
 8011620:	9b04      	ldr	r3, [sp, #16]
 8011622:	4303      	orrs	r3, r0
 8011624:	3401      	adds	r4, #1
 8011626:	9304      	str	r3, [sp, #16]
 8011628:	f814 1b01 	ldrb.w	r1, [r4], #1
 801162c:	482c      	ldr	r0, [pc, #176]	; (80116e0 <_vfiprintf_r+0x250>)
 801162e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8011632:	2206      	movs	r2, #6
 8011634:	f7ee fe5c 	bl	80002f0 <memchr>
 8011638:	2800      	cmp	r0, #0
 801163a:	d03f      	beq.n	80116bc <_vfiprintf_r+0x22c>
 801163c:	4b29      	ldr	r3, [pc, #164]	; (80116e4 <_vfiprintf_r+0x254>)
 801163e:	bb1b      	cbnz	r3, 8011688 <_vfiprintf_r+0x1f8>
 8011640:	9b03      	ldr	r3, [sp, #12]
 8011642:	3307      	adds	r3, #7
 8011644:	f023 0307 	bic.w	r3, r3, #7
 8011648:	3308      	adds	r3, #8
 801164a:	9303      	str	r3, [sp, #12]
 801164c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801164e:	443b      	add	r3, r7
 8011650:	9309      	str	r3, [sp, #36]	; 0x24
 8011652:	e767      	b.n	8011524 <_vfiprintf_r+0x94>
 8011654:	fb0c 3202 	mla	r2, ip, r2, r3
 8011658:	460c      	mov	r4, r1
 801165a:	2001      	movs	r0, #1
 801165c:	e7a5      	b.n	80115aa <_vfiprintf_r+0x11a>
 801165e:	2300      	movs	r3, #0
 8011660:	3401      	adds	r4, #1
 8011662:	9305      	str	r3, [sp, #20]
 8011664:	4619      	mov	r1, r3
 8011666:	f04f 0c0a 	mov.w	ip, #10
 801166a:	4620      	mov	r0, r4
 801166c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8011670:	3a30      	subs	r2, #48	; 0x30
 8011672:	2a09      	cmp	r2, #9
 8011674:	d903      	bls.n	801167e <_vfiprintf_r+0x1ee>
 8011676:	2b00      	cmp	r3, #0
 8011678:	d0c5      	beq.n	8011606 <_vfiprintf_r+0x176>
 801167a:	9105      	str	r1, [sp, #20]
 801167c:	e7c3      	b.n	8011606 <_vfiprintf_r+0x176>
 801167e:	fb0c 2101 	mla	r1, ip, r1, r2
 8011682:	4604      	mov	r4, r0
 8011684:	2301      	movs	r3, #1
 8011686:	e7f0      	b.n	801166a <_vfiprintf_r+0x1da>
 8011688:	ab03      	add	r3, sp, #12
 801168a:	9300      	str	r3, [sp, #0]
 801168c:	462a      	mov	r2, r5
 801168e:	4b16      	ldr	r3, [pc, #88]	; (80116e8 <_vfiprintf_r+0x258>)
 8011690:	a904      	add	r1, sp, #16
 8011692:	4630      	mov	r0, r6
 8011694:	f3af 8000 	nop.w
 8011698:	4607      	mov	r7, r0
 801169a:	1c78      	adds	r0, r7, #1
 801169c:	d1d6      	bne.n	801164c <_vfiprintf_r+0x1bc>
 801169e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80116a0:	07d9      	lsls	r1, r3, #31
 80116a2:	d405      	bmi.n	80116b0 <_vfiprintf_r+0x220>
 80116a4:	89ab      	ldrh	r3, [r5, #12]
 80116a6:	059a      	lsls	r2, r3, #22
 80116a8:	d402      	bmi.n	80116b0 <_vfiprintf_r+0x220>
 80116aa:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80116ac:	f000 fc35 	bl	8011f1a <__retarget_lock_release_recursive>
 80116b0:	89ab      	ldrh	r3, [r5, #12]
 80116b2:	065b      	lsls	r3, r3, #25
 80116b4:	f53f af12 	bmi.w	80114dc <_vfiprintf_r+0x4c>
 80116b8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80116ba:	e711      	b.n	80114e0 <_vfiprintf_r+0x50>
 80116bc:	ab03      	add	r3, sp, #12
 80116be:	9300      	str	r3, [sp, #0]
 80116c0:	462a      	mov	r2, r5
 80116c2:	4b09      	ldr	r3, [pc, #36]	; (80116e8 <_vfiprintf_r+0x258>)
 80116c4:	a904      	add	r1, sp, #16
 80116c6:	4630      	mov	r0, r6
 80116c8:	f000 f880 	bl	80117cc <_printf_i>
 80116cc:	e7e4      	b.n	8011698 <_vfiprintf_r+0x208>
 80116ce:	bf00      	nop
 80116d0:	08013004 	.word	0x08013004
 80116d4:	08013024 	.word	0x08013024
 80116d8:	08012fe4 	.word	0x08012fe4
 80116dc:	08012fb1 	.word	0x08012fb1
 80116e0:	08012fbb 	.word	0x08012fbb
 80116e4:	00000000 	.word	0x00000000
 80116e8:	0801146b 	.word	0x0801146b
 80116ec:	08012fb7 	.word	0x08012fb7

080116f0 <_printf_common>:
 80116f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80116f4:	4616      	mov	r6, r2
 80116f6:	4699      	mov	r9, r3
 80116f8:	688a      	ldr	r2, [r1, #8]
 80116fa:	690b      	ldr	r3, [r1, #16]
 80116fc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8011700:	4293      	cmp	r3, r2
 8011702:	bfb8      	it	lt
 8011704:	4613      	movlt	r3, r2
 8011706:	6033      	str	r3, [r6, #0]
 8011708:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801170c:	4607      	mov	r7, r0
 801170e:	460c      	mov	r4, r1
 8011710:	b10a      	cbz	r2, 8011716 <_printf_common+0x26>
 8011712:	3301      	adds	r3, #1
 8011714:	6033      	str	r3, [r6, #0]
 8011716:	6823      	ldr	r3, [r4, #0]
 8011718:	0699      	lsls	r1, r3, #26
 801171a:	bf42      	ittt	mi
 801171c:	6833      	ldrmi	r3, [r6, #0]
 801171e:	3302      	addmi	r3, #2
 8011720:	6033      	strmi	r3, [r6, #0]
 8011722:	6825      	ldr	r5, [r4, #0]
 8011724:	f015 0506 	ands.w	r5, r5, #6
 8011728:	d106      	bne.n	8011738 <_printf_common+0x48>
 801172a:	f104 0a19 	add.w	sl, r4, #25
 801172e:	68e3      	ldr	r3, [r4, #12]
 8011730:	6832      	ldr	r2, [r6, #0]
 8011732:	1a9b      	subs	r3, r3, r2
 8011734:	42ab      	cmp	r3, r5
 8011736:	dc26      	bgt.n	8011786 <_printf_common+0x96>
 8011738:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801173c:	1e13      	subs	r3, r2, #0
 801173e:	6822      	ldr	r2, [r4, #0]
 8011740:	bf18      	it	ne
 8011742:	2301      	movne	r3, #1
 8011744:	0692      	lsls	r2, r2, #26
 8011746:	d42b      	bmi.n	80117a0 <_printf_common+0xb0>
 8011748:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801174c:	4649      	mov	r1, r9
 801174e:	4638      	mov	r0, r7
 8011750:	47c0      	blx	r8
 8011752:	3001      	adds	r0, #1
 8011754:	d01e      	beq.n	8011794 <_printf_common+0xa4>
 8011756:	6823      	ldr	r3, [r4, #0]
 8011758:	68e5      	ldr	r5, [r4, #12]
 801175a:	6832      	ldr	r2, [r6, #0]
 801175c:	f003 0306 	and.w	r3, r3, #6
 8011760:	2b04      	cmp	r3, #4
 8011762:	bf08      	it	eq
 8011764:	1aad      	subeq	r5, r5, r2
 8011766:	68a3      	ldr	r3, [r4, #8]
 8011768:	6922      	ldr	r2, [r4, #16]
 801176a:	bf0c      	ite	eq
 801176c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8011770:	2500      	movne	r5, #0
 8011772:	4293      	cmp	r3, r2
 8011774:	bfc4      	itt	gt
 8011776:	1a9b      	subgt	r3, r3, r2
 8011778:	18ed      	addgt	r5, r5, r3
 801177a:	2600      	movs	r6, #0
 801177c:	341a      	adds	r4, #26
 801177e:	42b5      	cmp	r5, r6
 8011780:	d11a      	bne.n	80117b8 <_printf_common+0xc8>
 8011782:	2000      	movs	r0, #0
 8011784:	e008      	b.n	8011798 <_printf_common+0xa8>
 8011786:	2301      	movs	r3, #1
 8011788:	4652      	mov	r2, sl
 801178a:	4649      	mov	r1, r9
 801178c:	4638      	mov	r0, r7
 801178e:	47c0      	blx	r8
 8011790:	3001      	adds	r0, #1
 8011792:	d103      	bne.n	801179c <_printf_common+0xac>
 8011794:	f04f 30ff 	mov.w	r0, #4294967295
 8011798:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801179c:	3501      	adds	r5, #1
 801179e:	e7c6      	b.n	801172e <_printf_common+0x3e>
 80117a0:	18e1      	adds	r1, r4, r3
 80117a2:	1c5a      	adds	r2, r3, #1
 80117a4:	2030      	movs	r0, #48	; 0x30
 80117a6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80117aa:	4422      	add	r2, r4
 80117ac:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80117b0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80117b4:	3302      	adds	r3, #2
 80117b6:	e7c7      	b.n	8011748 <_printf_common+0x58>
 80117b8:	2301      	movs	r3, #1
 80117ba:	4622      	mov	r2, r4
 80117bc:	4649      	mov	r1, r9
 80117be:	4638      	mov	r0, r7
 80117c0:	47c0      	blx	r8
 80117c2:	3001      	adds	r0, #1
 80117c4:	d0e6      	beq.n	8011794 <_printf_common+0xa4>
 80117c6:	3601      	adds	r6, #1
 80117c8:	e7d9      	b.n	801177e <_printf_common+0x8e>
	...

080117cc <_printf_i>:
 80117cc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80117d0:	7e0f      	ldrb	r7, [r1, #24]
 80117d2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80117d4:	2f78      	cmp	r7, #120	; 0x78
 80117d6:	4691      	mov	r9, r2
 80117d8:	4680      	mov	r8, r0
 80117da:	460c      	mov	r4, r1
 80117dc:	469a      	mov	sl, r3
 80117de:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80117e2:	d807      	bhi.n	80117f4 <_printf_i+0x28>
 80117e4:	2f62      	cmp	r7, #98	; 0x62
 80117e6:	d80a      	bhi.n	80117fe <_printf_i+0x32>
 80117e8:	2f00      	cmp	r7, #0
 80117ea:	f000 80d8 	beq.w	801199e <_printf_i+0x1d2>
 80117ee:	2f58      	cmp	r7, #88	; 0x58
 80117f0:	f000 80a3 	beq.w	801193a <_printf_i+0x16e>
 80117f4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80117f8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80117fc:	e03a      	b.n	8011874 <_printf_i+0xa8>
 80117fe:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8011802:	2b15      	cmp	r3, #21
 8011804:	d8f6      	bhi.n	80117f4 <_printf_i+0x28>
 8011806:	a101      	add	r1, pc, #4	; (adr r1, 801180c <_printf_i+0x40>)
 8011808:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801180c:	08011865 	.word	0x08011865
 8011810:	08011879 	.word	0x08011879
 8011814:	080117f5 	.word	0x080117f5
 8011818:	080117f5 	.word	0x080117f5
 801181c:	080117f5 	.word	0x080117f5
 8011820:	080117f5 	.word	0x080117f5
 8011824:	08011879 	.word	0x08011879
 8011828:	080117f5 	.word	0x080117f5
 801182c:	080117f5 	.word	0x080117f5
 8011830:	080117f5 	.word	0x080117f5
 8011834:	080117f5 	.word	0x080117f5
 8011838:	08011985 	.word	0x08011985
 801183c:	080118a9 	.word	0x080118a9
 8011840:	08011967 	.word	0x08011967
 8011844:	080117f5 	.word	0x080117f5
 8011848:	080117f5 	.word	0x080117f5
 801184c:	080119a7 	.word	0x080119a7
 8011850:	080117f5 	.word	0x080117f5
 8011854:	080118a9 	.word	0x080118a9
 8011858:	080117f5 	.word	0x080117f5
 801185c:	080117f5 	.word	0x080117f5
 8011860:	0801196f 	.word	0x0801196f
 8011864:	682b      	ldr	r3, [r5, #0]
 8011866:	1d1a      	adds	r2, r3, #4
 8011868:	681b      	ldr	r3, [r3, #0]
 801186a:	602a      	str	r2, [r5, #0]
 801186c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8011870:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8011874:	2301      	movs	r3, #1
 8011876:	e0a3      	b.n	80119c0 <_printf_i+0x1f4>
 8011878:	6820      	ldr	r0, [r4, #0]
 801187a:	6829      	ldr	r1, [r5, #0]
 801187c:	0606      	lsls	r6, r0, #24
 801187e:	f101 0304 	add.w	r3, r1, #4
 8011882:	d50a      	bpl.n	801189a <_printf_i+0xce>
 8011884:	680e      	ldr	r6, [r1, #0]
 8011886:	602b      	str	r3, [r5, #0]
 8011888:	2e00      	cmp	r6, #0
 801188a:	da03      	bge.n	8011894 <_printf_i+0xc8>
 801188c:	232d      	movs	r3, #45	; 0x2d
 801188e:	4276      	negs	r6, r6
 8011890:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8011894:	485e      	ldr	r0, [pc, #376]	; (8011a10 <_printf_i+0x244>)
 8011896:	230a      	movs	r3, #10
 8011898:	e019      	b.n	80118ce <_printf_i+0x102>
 801189a:	680e      	ldr	r6, [r1, #0]
 801189c:	602b      	str	r3, [r5, #0]
 801189e:	f010 0f40 	tst.w	r0, #64	; 0x40
 80118a2:	bf18      	it	ne
 80118a4:	b236      	sxthne	r6, r6
 80118a6:	e7ef      	b.n	8011888 <_printf_i+0xbc>
 80118a8:	682b      	ldr	r3, [r5, #0]
 80118aa:	6820      	ldr	r0, [r4, #0]
 80118ac:	1d19      	adds	r1, r3, #4
 80118ae:	6029      	str	r1, [r5, #0]
 80118b0:	0601      	lsls	r1, r0, #24
 80118b2:	d501      	bpl.n	80118b8 <_printf_i+0xec>
 80118b4:	681e      	ldr	r6, [r3, #0]
 80118b6:	e002      	b.n	80118be <_printf_i+0xf2>
 80118b8:	0646      	lsls	r6, r0, #25
 80118ba:	d5fb      	bpl.n	80118b4 <_printf_i+0xe8>
 80118bc:	881e      	ldrh	r6, [r3, #0]
 80118be:	4854      	ldr	r0, [pc, #336]	; (8011a10 <_printf_i+0x244>)
 80118c0:	2f6f      	cmp	r7, #111	; 0x6f
 80118c2:	bf0c      	ite	eq
 80118c4:	2308      	moveq	r3, #8
 80118c6:	230a      	movne	r3, #10
 80118c8:	2100      	movs	r1, #0
 80118ca:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80118ce:	6865      	ldr	r5, [r4, #4]
 80118d0:	60a5      	str	r5, [r4, #8]
 80118d2:	2d00      	cmp	r5, #0
 80118d4:	bfa2      	ittt	ge
 80118d6:	6821      	ldrge	r1, [r4, #0]
 80118d8:	f021 0104 	bicge.w	r1, r1, #4
 80118dc:	6021      	strge	r1, [r4, #0]
 80118de:	b90e      	cbnz	r6, 80118e4 <_printf_i+0x118>
 80118e0:	2d00      	cmp	r5, #0
 80118e2:	d04d      	beq.n	8011980 <_printf_i+0x1b4>
 80118e4:	4615      	mov	r5, r2
 80118e6:	fbb6 f1f3 	udiv	r1, r6, r3
 80118ea:	fb03 6711 	mls	r7, r3, r1, r6
 80118ee:	5dc7      	ldrb	r7, [r0, r7]
 80118f0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80118f4:	4637      	mov	r7, r6
 80118f6:	42bb      	cmp	r3, r7
 80118f8:	460e      	mov	r6, r1
 80118fa:	d9f4      	bls.n	80118e6 <_printf_i+0x11a>
 80118fc:	2b08      	cmp	r3, #8
 80118fe:	d10b      	bne.n	8011918 <_printf_i+0x14c>
 8011900:	6823      	ldr	r3, [r4, #0]
 8011902:	07de      	lsls	r6, r3, #31
 8011904:	d508      	bpl.n	8011918 <_printf_i+0x14c>
 8011906:	6923      	ldr	r3, [r4, #16]
 8011908:	6861      	ldr	r1, [r4, #4]
 801190a:	4299      	cmp	r1, r3
 801190c:	bfde      	ittt	le
 801190e:	2330      	movle	r3, #48	; 0x30
 8011910:	f805 3c01 	strble.w	r3, [r5, #-1]
 8011914:	f105 35ff 	addle.w	r5, r5, #4294967295
 8011918:	1b52      	subs	r2, r2, r5
 801191a:	6122      	str	r2, [r4, #16]
 801191c:	f8cd a000 	str.w	sl, [sp]
 8011920:	464b      	mov	r3, r9
 8011922:	aa03      	add	r2, sp, #12
 8011924:	4621      	mov	r1, r4
 8011926:	4640      	mov	r0, r8
 8011928:	f7ff fee2 	bl	80116f0 <_printf_common>
 801192c:	3001      	adds	r0, #1
 801192e:	d14c      	bne.n	80119ca <_printf_i+0x1fe>
 8011930:	f04f 30ff 	mov.w	r0, #4294967295
 8011934:	b004      	add	sp, #16
 8011936:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801193a:	4835      	ldr	r0, [pc, #212]	; (8011a10 <_printf_i+0x244>)
 801193c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8011940:	6829      	ldr	r1, [r5, #0]
 8011942:	6823      	ldr	r3, [r4, #0]
 8011944:	f851 6b04 	ldr.w	r6, [r1], #4
 8011948:	6029      	str	r1, [r5, #0]
 801194a:	061d      	lsls	r5, r3, #24
 801194c:	d514      	bpl.n	8011978 <_printf_i+0x1ac>
 801194e:	07df      	lsls	r7, r3, #31
 8011950:	bf44      	itt	mi
 8011952:	f043 0320 	orrmi.w	r3, r3, #32
 8011956:	6023      	strmi	r3, [r4, #0]
 8011958:	b91e      	cbnz	r6, 8011962 <_printf_i+0x196>
 801195a:	6823      	ldr	r3, [r4, #0]
 801195c:	f023 0320 	bic.w	r3, r3, #32
 8011960:	6023      	str	r3, [r4, #0]
 8011962:	2310      	movs	r3, #16
 8011964:	e7b0      	b.n	80118c8 <_printf_i+0xfc>
 8011966:	6823      	ldr	r3, [r4, #0]
 8011968:	f043 0320 	orr.w	r3, r3, #32
 801196c:	6023      	str	r3, [r4, #0]
 801196e:	2378      	movs	r3, #120	; 0x78
 8011970:	4828      	ldr	r0, [pc, #160]	; (8011a14 <_printf_i+0x248>)
 8011972:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8011976:	e7e3      	b.n	8011940 <_printf_i+0x174>
 8011978:	0659      	lsls	r1, r3, #25
 801197a:	bf48      	it	mi
 801197c:	b2b6      	uxthmi	r6, r6
 801197e:	e7e6      	b.n	801194e <_printf_i+0x182>
 8011980:	4615      	mov	r5, r2
 8011982:	e7bb      	b.n	80118fc <_printf_i+0x130>
 8011984:	682b      	ldr	r3, [r5, #0]
 8011986:	6826      	ldr	r6, [r4, #0]
 8011988:	6961      	ldr	r1, [r4, #20]
 801198a:	1d18      	adds	r0, r3, #4
 801198c:	6028      	str	r0, [r5, #0]
 801198e:	0635      	lsls	r5, r6, #24
 8011990:	681b      	ldr	r3, [r3, #0]
 8011992:	d501      	bpl.n	8011998 <_printf_i+0x1cc>
 8011994:	6019      	str	r1, [r3, #0]
 8011996:	e002      	b.n	801199e <_printf_i+0x1d2>
 8011998:	0670      	lsls	r0, r6, #25
 801199a:	d5fb      	bpl.n	8011994 <_printf_i+0x1c8>
 801199c:	8019      	strh	r1, [r3, #0]
 801199e:	2300      	movs	r3, #0
 80119a0:	6123      	str	r3, [r4, #16]
 80119a2:	4615      	mov	r5, r2
 80119a4:	e7ba      	b.n	801191c <_printf_i+0x150>
 80119a6:	682b      	ldr	r3, [r5, #0]
 80119a8:	1d1a      	adds	r2, r3, #4
 80119aa:	602a      	str	r2, [r5, #0]
 80119ac:	681d      	ldr	r5, [r3, #0]
 80119ae:	6862      	ldr	r2, [r4, #4]
 80119b0:	2100      	movs	r1, #0
 80119b2:	4628      	mov	r0, r5
 80119b4:	f7ee fc9c 	bl	80002f0 <memchr>
 80119b8:	b108      	cbz	r0, 80119be <_printf_i+0x1f2>
 80119ba:	1b40      	subs	r0, r0, r5
 80119bc:	6060      	str	r0, [r4, #4]
 80119be:	6863      	ldr	r3, [r4, #4]
 80119c0:	6123      	str	r3, [r4, #16]
 80119c2:	2300      	movs	r3, #0
 80119c4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80119c8:	e7a8      	b.n	801191c <_printf_i+0x150>
 80119ca:	6923      	ldr	r3, [r4, #16]
 80119cc:	462a      	mov	r2, r5
 80119ce:	4649      	mov	r1, r9
 80119d0:	4640      	mov	r0, r8
 80119d2:	47d0      	blx	sl
 80119d4:	3001      	adds	r0, #1
 80119d6:	d0ab      	beq.n	8011930 <_printf_i+0x164>
 80119d8:	6823      	ldr	r3, [r4, #0]
 80119da:	079b      	lsls	r3, r3, #30
 80119dc:	d413      	bmi.n	8011a06 <_printf_i+0x23a>
 80119de:	68e0      	ldr	r0, [r4, #12]
 80119e0:	9b03      	ldr	r3, [sp, #12]
 80119e2:	4298      	cmp	r0, r3
 80119e4:	bfb8      	it	lt
 80119e6:	4618      	movlt	r0, r3
 80119e8:	e7a4      	b.n	8011934 <_printf_i+0x168>
 80119ea:	2301      	movs	r3, #1
 80119ec:	4632      	mov	r2, r6
 80119ee:	4649      	mov	r1, r9
 80119f0:	4640      	mov	r0, r8
 80119f2:	47d0      	blx	sl
 80119f4:	3001      	adds	r0, #1
 80119f6:	d09b      	beq.n	8011930 <_printf_i+0x164>
 80119f8:	3501      	adds	r5, #1
 80119fa:	68e3      	ldr	r3, [r4, #12]
 80119fc:	9903      	ldr	r1, [sp, #12]
 80119fe:	1a5b      	subs	r3, r3, r1
 8011a00:	42ab      	cmp	r3, r5
 8011a02:	dcf2      	bgt.n	80119ea <_printf_i+0x21e>
 8011a04:	e7eb      	b.n	80119de <_printf_i+0x212>
 8011a06:	2500      	movs	r5, #0
 8011a08:	f104 0619 	add.w	r6, r4, #25
 8011a0c:	e7f5      	b.n	80119fa <_printf_i+0x22e>
 8011a0e:	bf00      	nop
 8011a10:	08012fc2 	.word	0x08012fc2
 8011a14:	08012fd3 	.word	0x08012fd3

08011a18 <__swbuf_r>:
 8011a18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011a1a:	460e      	mov	r6, r1
 8011a1c:	4614      	mov	r4, r2
 8011a1e:	4605      	mov	r5, r0
 8011a20:	b118      	cbz	r0, 8011a2a <__swbuf_r+0x12>
 8011a22:	6983      	ldr	r3, [r0, #24]
 8011a24:	b90b      	cbnz	r3, 8011a2a <__swbuf_r+0x12>
 8011a26:	f000 f9d9 	bl	8011ddc <__sinit>
 8011a2a:	4b21      	ldr	r3, [pc, #132]	; (8011ab0 <__swbuf_r+0x98>)
 8011a2c:	429c      	cmp	r4, r3
 8011a2e:	d12b      	bne.n	8011a88 <__swbuf_r+0x70>
 8011a30:	686c      	ldr	r4, [r5, #4]
 8011a32:	69a3      	ldr	r3, [r4, #24]
 8011a34:	60a3      	str	r3, [r4, #8]
 8011a36:	89a3      	ldrh	r3, [r4, #12]
 8011a38:	071a      	lsls	r2, r3, #28
 8011a3a:	d52f      	bpl.n	8011a9c <__swbuf_r+0x84>
 8011a3c:	6923      	ldr	r3, [r4, #16]
 8011a3e:	b36b      	cbz	r3, 8011a9c <__swbuf_r+0x84>
 8011a40:	6923      	ldr	r3, [r4, #16]
 8011a42:	6820      	ldr	r0, [r4, #0]
 8011a44:	1ac0      	subs	r0, r0, r3
 8011a46:	6963      	ldr	r3, [r4, #20]
 8011a48:	b2f6      	uxtb	r6, r6
 8011a4a:	4283      	cmp	r3, r0
 8011a4c:	4637      	mov	r7, r6
 8011a4e:	dc04      	bgt.n	8011a5a <__swbuf_r+0x42>
 8011a50:	4621      	mov	r1, r4
 8011a52:	4628      	mov	r0, r5
 8011a54:	f000 f92e 	bl	8011cb4 <_fflush_r>
 8011a58:	bb30      	cbnz	r0, 8011aa8 <__swbuf_r+0x90>
 8011a5a:	68a3      	ldr	r3, [r4, #8]
 8011a5c:	3b01      	subs	r3, #1
 8011a5e:	60a3      	str	r3, [r4, #8]
 8011a60:	6823      	ldr	r3, [r4, #0]
 8011a62:	1c5a      	adds	r2, r3, #1
 8011a64:	6022      	str	r2, [r4, #0]
 8011a66:	701e      	strb	r6, [r3, #0]
 8011a68:	6963      	ldr	r3, [r4, #20]
 8011a6a:	3001      	adds	r0, #1
 8011a6c:	4283      	cmp	r3, r0
 8011a6e:	d004      	beq.n	8011a7a <__swbuf_r+0x62>
 8011a70:	89a3      	ldrh	r3, [r4, #12]
 8011a72:	07db      	lsls	r3, r3, #31
 8011a74:	d506      	bpl.n	8011a84 <__swbuf_r+0x6c>
 8011a76:	2e0a      	cmp	r6, #10
 8011a78:	d104      	bne.n	8011a84 <__swbuf_r+0x6c>
 8011a7a:	4621      	mov	r1, r4
 8011a7c:	4628      	mov	r0, r5
 8011a7e:	f000 f919 	bl	8011cb4 <_fflush_r>
 8011a82:	b988      	cbnz	r0, 8011aa8 <__swbuf_r+0x90>
 8011a84:	4638      	mov	r0, r7
 8011a86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011a88:	4b0a      	ldr	r3, [pc, #40]	; (8011ab4 <__swbuf_r+0x9c>)
 8011a8a:	429c      	cmp	r4, r3
 8011a8c:	d101      	bne.n	8011a92 <__swbuf_r+0x7a>
 8011a8e:	68ac      	ldr	r4, [r5, #8]
 8011a90:	e7cf      	b.n	8011a32 <__swbuf_r+0x1a>
 8011a92:	4b09      	ldr	r3, [pc, #36]	; (8011ab8 <__swbuf_r+0xa0>)
 8011a94:	429c      	cmp	r4, r3
 8011a96:	bf08      	it	eq
 8011a98:	68ec      	ldreq	r4, [r5, #12]
 8011a9a:	e7ca      	b.n	8011a32 <__swbuf_r+0x1a>
 8011a9c:	4621      	mov	r1, r4
 8011a9e:	4628      	mov	r0, r5
 8011aa0:	f000 f80c 	bl	8011abc <__swsetup_r>
 8011aa4:	2800      	cmp	r0, #0
 8011aa6:	d0cb      	beq.n	8011a40 <__swbuf_r+0x28>
 8011aa8:	f04f 37ff 	mov.w	r7, #4294967295
 8011aac:	e7ea      	b.n	8011a84 <__swbuf_r+0x6c>
 8011aae:	bf00      	nop
 8011ab0:	08013004 	.word	0x08013004
 8011ab4:	08013024 	.word	0x08013024
 8011ab8:	08012fe4 	.word	0x08012fe4

08011abc <__swsetup_r>:
 8011abc:	4b32      	ldr	r3, [pc, #200]	; (8011b88 <__swsetup_r+0xcc>)
 8011abe:	b570      	push	{r4, r5, r6, lr}
 8011ac0:	681d      	ldr	r5, [r3, #0]
 8011ac2:	4606      	mov	r6, r0
 8011ac4:	460c      	mov	r4, r1
 8011ac6:	b125      	cbz	r5, 8011ad2 <__swsetup_r+0x16>
 8011ac8:	69ab      	ldr	r3, [r5, #24]
 8011aca:	b913      	cbnz	r3, 8011ad2 <__swsetup_r+0x16>
 8011acc:	4628      	mov	r0, r5
 8011ace:	f000 f985 	bl	8011ddc <__sinit>
 8011ad2:	4b2e      	ldr	r3, [pc, #184]	; (8011b8c <__swsetup_r+0xd0>)
 8011ad4:	429c      	cmp	r4, r3
 8011ad6:	d10f      	bne.n	8011af8 <__swsetup_r+0x3c>
 8011ad8:	686c      	ldr	r4, [r5, #4]
 8011ada:	89a3      	ldrh	r3, [r4, #12]
 8011adc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8011ae0:	0719      	lsls	r1, r3, #28
 8011ae2:	d42c      	bmi.n	8011b3e <__swsetup_r+0x82>
 8011ae4:	06dd      	lsls	r5, r3, #27
 8011ae6:	d411      	bmi.n	8011b0c <__swsetup_r+0x50>
 8011ae8:	2309      	movs	r3, #9
 8011aea:	6033      	str	r3, [r6, #0]
 8011aec:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8011af0:	81a3      	strh	r3, [r4, #12]
 8011af2:	f04f 30ff 	mov.w	r0, #4294967295
 8011af6:	e03e      	b.n	8011b76 <__swsetup_r+0xba>
 8011af8:	4b25      	ldr	r3, [pc, #148]	; (8011b90 <__swsetup_r+0xd4>)
 8011afa:	429c      	cmp	r4, r3
 8011afc:	d101      	bne.n	8011b02 <__swsetup_r+0x46>
 8011afe:	68ac      	ldr	r4, [r5, #8]
 8011b00:	e7eb      	b.n	8011ada <__swsetup_r+0x1e>
 8011b02:	4b24      	ldr	r3, [pc, #144]	; (8011b94 <__swsetup_r+0xd8>)
 8011b04:	429c      	cmp	r4, r3
 8011b06:	bf08      	it	eq
 8011b08:	68ec      	ldreq	r4, [r5, #12]
 8011b0a:	e7e6      	b.n	8011ada <__swsetup_r+0x1e>
 8011b0c:	0758      	lsls	r0, r3, #29
 8011b0e:	d512      	bpl.n	8011b36 <__swsetup_r+0x7a>
 8011b10:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011b12:	b141      	cbz	r1, 8011b26 <__swsetup_r+0x6a>
 8011b14:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8011b18:	4299      	cmp	r1, r3
 8011b1a:	d002      	beq.n	8011b22 <__swsetup_r+0x66>
 8011b1c:	4630      	mov	r0, r6
 8011b1e:	f7ff fc41 	bl	80113a4 <_free_r>
 8011b22:	2300      	movs	r3, #0
 8011b24:	6363      	str	r3, [r4, #52]	; 0x34
 8011b26:	89a3      	ldrh	r3, [r4, #12]
 8011b28:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8011b2c:	81a3      	strh	r3, [r4, #12]
 8011b2e:	2300      	movs	r3, #0
 8011b30:	6063      	str	r3, [r4, #4]
 8011b32:	6923      	ldr	r3, [r4, #16]
 8011b34:	6023      	str	r3, [r4, #0]
 8011b36:	89a3      	ldrh	r3, [r4, #12]
 8011b38:	f043 0308 	orr.w	r3, r3, #8
 8011b3c:	81a3      	strh	r3, [r4, #12]
 8011b3e:	6923      	ldr	r3, [r4, #16]
 8011b40:	b94b      	cbnz	r3, 8011b56 <__swsetup_r+0x9a>
 8011b42:	89a3      	ldrh	r3, [r4, #12]
 8011b44:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8011b48:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011b4c:	d003      	beq.n	8011b56 <__swsetup_r+0x9a>
 8011b4e:	4621      	mov	r1, r4
 8011b50:	4630      	mov	r0, r6
 8011b52:	f000 fa09 	bl	8011f68 <__smakebuf_r>
 8011b56:	89a0      	ldrh	r0, [r4, #12]
 8011b58:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8011b5c:	f010 0301 	ands.w	r3, r0, #1
 8011b60:	d00a      	beq.n	8011b78 <__swsetup_r+0xbc>
 8011b62:	2300      	movs	r3, #0
 8011b64:	60a3      	str	r3, [r4, #8]
 8011b66:	6963      	ldr	r3, [r4, #20]
 8011b68:	425b      	negs	r3, r3
 8011b6a:	61a3      	str	r3, [r4, #24]
 8011b6c:	6923      	ldr	r3, [r4, #16]
 8011b6e:	b943      	cbnz	r3, 8011b82 <__swsetup_r+0xc6>
 8011b70:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8011b74:	d1ba      	bne.n	8011aec <__swsetup_r+0x30>
 8011b76:	bd70      	pop	{r4, r5, r6, pc}
 8011b78:	0781      	lsls	r1, r0, #30
 8011b7a:	bf58      	it	pl
 8011b7c:	6963      	ldrpl	r3, [r4, #20]
 8011b7e:	60a3      	str	r3, [r4, #8]
 8011b80:	e7f4      	b.n	8011b6c <__swsetup_r+0xb0>
 8011b82:	2000      	movs	r0, #0
 8011b84:	e7f7      	b.n	8011b76 <__swsetup_r+0xba>
 8011b86:	bf00      	nop
 8011b88:	240000c0 	.word	0x240000c0
 8011b8c:	08013004 	.word	0x08013004
 8011b90:	08013024 	.word	0x08013024
 8011b94:	08012fe4 	.word	0x08012fe4

08011b98 <abort>:
 8011b98:	b508      	push	{r3, lr}
 8011b9a:	2006      	movs	r0, #6
 8011b9c:	f000 fa4c 	bl	8012038 <raise>
 8011ba0:	2001      	movs	r0, #1
 8011ba2:	f7f2 fdd9 	bl	8004758 <_exit>
	...

08011ba8 <__sflush_r>:
 8011ba8:	898a      	ldrh	r2, [r1, #12]
 8011baa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011bae:	4605      	mov	r5, r0
 8011bb0:	0710      	lsls	r0, r2, #28
 8011bb2:	460c      	mov	r4, r1
 8011bb4:	d458      	bmi.n	8011c68 <__sflush_r+0xc0>
 8011bb6:	684b      	ldr	r3, [r1, #4]
 8011bb8:	2b00      	cmp	r3, #0
 8011bba:	dc05      	bgt.n	8011bc8 <__sflush_r+0x20>
 8011bbc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8011bbe:	2b00      	cmp	r3, #0
 8011bc0:	dc02      	bgt.n	8011bc8 <__sflush_r+0x20>
 8011bc2:	2000      	movs	r0, #0
 8011bc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011bc8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8011bca:	2e00      	cmp	r6, #0
 8011bcc:	d0f9      	beq.n	8011bc2 <__sflush_r+0x1a>
 8011bce:	2300      	movs	r3, #0
 8011bd0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8011bd4:	682f      	ldr	r7, [r5, #0]
 8011bd6:	602b      	str	r3, [r5, #0]
 8011bd8:	d032      	beq.n	8011c40 <__sflush_r+0x98>
 8011bda:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8011bdc:	89a3      	ldrh	r3, [r4, #12]
 8011bde:	075a      	lsls	r2, r3, #29
 8011be0:	d505      	bpl.n	8011bee <__sflush_r+0x46>
 8011be2:	6863      	ldr	r3, [r4, #4]
 8011be4:	1ac0      	subs	r0, r0, r3
 8011be6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8011be8:	b10b      	cbz	r3, 8011bee <__sflush_r+0x46>
 8011bea:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8011bec:	1ac0      	subs	r0, r0, r3
 8011bee:	2300      	movs	r3, #0
 8011bf0:	4602      	mov	r2, r0
 8011bf2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8011bf4:	6a21      	ldr	r1, [r4, #32]
 8011bf6:	4628      	mov	r0, r5
 8011bf8:	47b0      	blx	r6
 8011bfa:	1c43      	adds	r3, r0, #1
 8011bfc:	89a3      	ldrh	r3, [r4, #12]
 8011bfe:	d106      	bne.n	8011c0e <__sflush_r+0x66>
 8011c00:	6829      	ldr	r1, [r5, #0]
 8011c02:	291d      	cmp	r1, #29
 8011c04:	d82c      	bhi.n	8011c60 <__sflush_r+0xb8>
 8011c06:	4a2a      	ldr	r2, [pc, #168]	; (8011cb0 <__sflush_r+0x108>)
 8011c08:	40ca      	lsrs	r2, r1
 8011c0a:	07d6      	lsls	r6, r2, #31
 8011c0c:	d528      	bpl.n	8011c60 <__sflush_r+0xb8>
 8011c0e:	2200      	movs	r2, #0
 8011c10:	6062      	str	r2, [r4, #4]
 8011c12:	04d9      	lsls	r1, r3, #19
 8011c14:	6922      	ldr	r2, [r4, #16]
 8011c16:	6022      	str	r2, [r4, #0]
 8011c18:	d504      	bpl.n	8011c24 <__sflush_r+0x7c>
 8011c1a:	1c42      	adds	r2, r0, #1
 8011c1c:	d101      	bne.n	8011c22 <__sflush_r+0x7a>
 8011c1e:	682b      	ldr	r3, [r5, #0]
 8011c20:	b903      	cbnz	r3, 8011c24 <__sflush_r+0x7c>
 8011c22:	6560      	str	r0, [r4, #84]	; 0x54
 8011c24:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011c26:	602f      	str	r7, [r5, #0]
 8011c28:	2900      	cmp	r1, #0
 8011c2a:	d0ca      	beq.n	8011bc2 <__sflush_r+0x1a>
 8011c2c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8011c30:	4299      	cmp	r1, r3
 8011c32:	d002      	beq.n	8011c3a <__sflush_r+0x92>
 8011c34:	4628      	mov	r0, r5
 8011c36:	f7ff fbb5 	bl	80113a4 <_free_r>
 8011c3a:	2000      	movs	r0, #0
 8011c3c:	6360      	str	r0, [r4, #52]	; 0x34
 8011c3e:	e7c1      	b.n	8011bc4 <__sflush_r+0x1c>
 8011c40:	6a21      	ldr	r1, [r4, #32]
 8011c42:	2301      	movs	r3, #1
 8011c44:	4628      	mov	r0, r5
 8011c46:	47b0      	blx	r6
 8011c48:	1c41      	adds	r1, r0, #1
 8011c4a:	d1c7      	bne.n	8011bdc <__sflush_r+0x34>
 8011c4c:	682b      	ldr	r3, [r5, #0]
 8011c4e:	2b00      	cmp	r3, #0
 8011c50:	d0c4      	beq.n	8011bdc <__sflush_r+0x34>
 8011c52:	2b1d      	cmp	r3, #29
 8011c54:	d001      	beq.n	8011c5a <__sflush_r+0xb2>
 8011c56:	2b16      	cmp	r3, #22
 8011c58:	d101      	bne.n	8011c5e <__sflush_r+0xb6>
 8011c5a:	602f      	str	r7, [r5, #0]
 8011c5c:	e7b1      	b.n	8011bc2 <__sflush_r+0x1a>
 8011c5e:	89a3      	ldrh	r3, [r4, #12]
 8011c60:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8011c64:	81a3      	strh	r3, [r4, #12]
 8011c66:	e7ad      	b.n	8011bc4 <__sflush_r+0x1c>
 8011c68:	690f      	ldr	r7, [r1, #16]
 8011c6a:	2f00      	cmp	r7, #0
 8011c6c:	d0a9      	beq.n	8011bc2 <__sflush_r+0x1a>
 8011c6e:	0793      	lsls	r3, r2, #30
 8011c70:	680e      	ldr	r6, [r1, #0]
 8011c72:	bf08      	it	eq
 8011c74:	694b      	ldreq	r3, [r1, #20]
 8011c76:	600f      	str	r7, [r1, #0]
 8011c78:	bf18      	it	ne
 8011c7a:	2300      	movne	r3, #0
 8011c7c:	eba6 0807 	sub.w	r8, r6, r7
 8011c80:	608b      	str	r3, [r1, #8]
 8011c82:	f1b8 0f00 	cmp.w	r8, #0
 8011c86:	dd9c      	ble.n	8011bc2 <__sflush_r+0x1a>
 8011c88:	6a21      	ldr	r1, [r4, #32]
 8011c8a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8011c8c:	4643      	mov	r3, r8
 8011c8e:	463a      	mov	r2, r7
 8011c90:	4628      	mov	r0, r5
 8011c92:	47b0      	blx	r6
 8011c94:	2800      	cmp	r0, #0
 8011c96:	dc06      	bgt.n	8011ca6 <__sflush_r+0xfe>
 8011c98:	89a3      	ldrh	r3, [r4, #12]
 8011c9a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8011c9e:	81a3      	strh	r3, [r4, #12]
 8011ca0:	f04f 30ff 	mov.w	r0, #4294967295
 8011ca4:	e78e      	b.n	8011bc4 <__sflush_r+0x1c>
 8011ca6:	4407      	add	r7, r0
 8011ca8:	eba8 0800 	sub.w	r8, r8, r0
 8011cac:	e7e9      	b.n	8011c82 <__sflush_r+0xda>
 8011cae:	bf00      	nop
 8011cb0:	20400001 	.word	0x20400001

08011cb4 <_fflush_r>:
 8011cb4:	b538      	push	{r3, r4, r5, lr}
 8011cb6:	690b      	ldr	r3, [r1, #16]
 8011cb8:	4605      	mov	r5, r0
 8011cba:	460c      	mov	r4, r1
 8011cbc:	b913      	cbnz	r3, 8011cc4 <_fflush_r+0x10>
 8011cbe:	2500      	movs	r5, #0
 8011cc0:	4628      	mov	r0, r5
 8011cc2:	bd38      	pop	{r3, r4, r5, pc}
 8011cc4:	b118      	cbz	r0, 8011cce <_fflush_r+0x1a>
 8011cc6:	6983      	ldr	r3, [r0, #24]
 8011cc8:	b90b      	cbnz	r3, 8011cce <_fflush_r+0x1a>
 8011cca:	f000 f887 	bl	8011ddc <__sinit>
 8011cce:	4b14      	ldr	r3, [pc, #80]	; (8011d20 <_fflush_r+0x6c>)
 8011cd0:	429c      	cmp	r4, r3
 8011cd2:	d11b      	bne.n	8011d0c <_fflush_r+0x58>
 8011cd4:	686c      	ldr	r4, [r5, #4]
 8011cd6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8011cda:	2b00      	cmp	r3, #0
 8011cdc:	d0ef      	beq.n	8011cbe <_fflush_r+0xa>
 8011cde:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8011ce0:	07d0      	lsls	r0, r2, #31
 8011ce2:	d404      	bmi.n	8011cee <_fflush_r+0x3a>
 8011ce4:	0599      	lsls	r1, r3, #22
 8011ce6:	d402      	bmi.n	8011cee <_fflush_r+0x3a>
 8011ce8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8011cea:	f000 f915 	bl	8011f18 <__retarget_lock_acquire_recursive>
 8011cee:	4628      	mov	r0, r5
 8011cf0:	4621      	mov	r1, r4
 8011cf2:	f7ff ff59 	bl	8011ba8 <__sflush_r>
 8011cf6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8011cf8:	07da      	lsls	r2, r3, #31
 8011cfa:	4605      	mov	r5, r0
 8011cfc:	d4e0      	bmi.n	8011cc0 <_fflush_r+0xc>
 8011cfe:	89a3      	ldrh	r3, [r4, #12]
 8011d00:	059b      	lsls	r3, r3, #22
 8011d02:	d4dd      	bmi.n	8011cc0 <_fflush_r+0xc>
 8011d04:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8011d06:	f000 f908 	bl	8011f1a <__retarget_lock_release_recursive>
 8011d0a:	e7d9      	b.n	8011cc0 <_fflush_r+0xc>
 8011d0c:	4b05      	ldr	r3, [pc, #20]	; (8011d24 <_fflush_r+0x70>)
 8011d0e:	429c      	cmp	r4, r3
 8011d10:	d101      	bne.n	8011d16 <_fflush_r+0x62>
 8011d12:	68ac      	ldr	r4, [r5, #8]
 8011d14:	e7df      	b.n	8011cd6 <_fflush_r+0x22>
 8011d16:	4b04      	ldr	r3, [pc, #16]	; (8011d28 <_fflush_r+0x74>)
 8011d18:	429c      	cmp	r4, r3
 8011d1a:	bf08      	it	eq
 8011d1c:	68ec      	ldreq	r4, [r5, #12]
 8011d1e:	e7da      	b.n	8011cd6 <_fflush_r+0x22>
 8011d20:	08013004 	.word	0x08013004
 8011d24:	08013024 	.word	0x08013024
 8011d28:	08012fe4 	.word	0x08012fe4

08011d2c <std>:
 8011d2c:	2300      	movs	r3, #0
 8011d2e:	b510      	push	{r4, lr}
 8011d30:	4604      	mov	r4, r0
 8011d32:	e9c0 3300 	strd	r3, r3, [r0]
 8011d36:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8011d3a:	6083      	str	r3, [r0, #8]
 8011d3c:	8181      	strh	r1, [r0, #12]
 8011d3e:	6643      	str	r3, [r0, #100]	; 0x64
 8011d40:	81c2      	strh	r2, [r0, #14]
 8011d42:	6183      	str	r3, [r0, #24]
 8011d44:	4619      	mov	r1, r3
 8011d46:	2208      	movs	r2, #8
 8011d48:	305c      	adds	r0, #92	; 0x5c
 8011d4a:	f7fd fbdd 	bl	800f508 <memset>
 8011d4e:	4b05      	ldr	r3, [pc, #20]	; (8011d64 <std+0x38>)
 8011d50:	6263      	str	r3, [r4, #36]	; 0x24
 8011d52:	4b05      	ldr	r3, [pc, #20]	; (8011d68 <std+0x3c>)
 8011d54:	62a3      	str	r3, [r4, #40]	; 0x28
 8011d56:	4b05      	ldr	r3, [pc, #20]	; (8011d6c <std+0x40>)
 8011d58:	62e3      	str	r3, [r4, #44]	; 0x2c
 8011d5a:	4b05      	ldr	r3, [pc, #20]	; (8011d70 <std+0x44>)
 8011d5c:	6224      	str	r4, [r4, #32]
 8011d5e:	6323      	str	r3, [r4, #48]	; 0x30
 8011d60:	bd10      	pop	{r4, pc}
 8011d62:	bf00      	nop
 8011d64:	08012071 	.word	0x08012071
 8011d68:	08012093 	.word	0x08012093
 8011d6c:	080120cb 	.word	0x080120cb
 8011d70:	080120ef 	.word	0x080120ef

08011d74 <_cleanup_r>:
 8011d74:	4901      	ldr	r1, [pc, #4]	; (8011d7c <_cleanup_r+0x8>)
 8011d76:	f000 b8af 	b.w	8011ed8 <_fwalk_reent>
 8011d7a:	bf00      	nop
 8011d7c:	08011cb5 	.word	0x08011cb5

08011d80 <__sfmoreglue>:
 8011d80:	b570      	push	{r4, r5, r6, lr}
 8011d82:	2268      	movs	r2, #104	; 0x68
 8011d84:	1e4d      	subs	r5, r1, #1
 8011d86:	4355      	muls	r5, r2
 8011d88:	460e      	mov	r6, r1
 8011d8a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8011d8e:	f7ff fa17 	bl	80111c0 <_malloc_r>
 8011d92:	4604      	mov	r4, r0
 8011d94:	b140      	cbz	r0, 8011da8 <__sfmoreglue+0x28>
 8011d96:	2100      	movs	r1, #0
 8011d98:	e9c0 1600 	strd	r1, r6, [r0]
 8011d9c:	300c      	adds	r0, #12
 8011d9e:	60a0      	str	r0, [r4, #8]
 8011da0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8011da4:	f7fd fbb0 	bl	800f508 <memset>
 8011da8:	4620      	mov	r0, r4
 8011daa:	bd70      	pop	{r4, r5, r6, pc}

08011dac <__sfp_lock_acquire>:
 8011dac:	4801      	ldr	r0, [pc, #4]	; (8011db4 <__sfp_lock_acquire+0x8>)
 8011dae:	f000 b8b3 	b.w	8011f18 <__retarget_lock_acquire_recursive>
 8011db2:	bf00      	nop
 8011db4:	24000c6d 	.word	0x24000c6d

08011db8 <__sfp_lock_release>:
 8011db8:	4801      	ldr	r0, [pc, #4]	; (8011dc0 <__sfp_lock_release+0x8>)
 8011dba:	f000 b8ae 	b.w	8011f1a <__retarget_lock_release_recursive>
 8011dbe:	bf00      	nop
 8011dc0:	24000c6d 	.word	0x24000c6d

08011dc4 <__sinit_lock_acquire>:
 8011dc4:	4801      	ldr	r0, [pc, #4]	; (8011dcc <__sinit_lock_acquire+0x8>)
 8011dc6:	f000 b8a7 	b.w	8011f18 <__retarget_lock_acquire_recursive>
 8011dca:	bf00      	nop
 8011dcc:	24000c6e 	.word	0x24000c6e

08011dd0 <__sinit_lock_release>:
 8011dd0:	4801      	ldr	r0, [pc, #4]	; (8011dd8 <__sinit_lock_release+0x8>)
 8011dd2:	f000 b8a2 	b.w	8011f1a <__retarget_lock_release_recursive>
 8011dd6:	bf00      	nop
 8011dd8:	24000c6e 	.word	0x24000c6e

08011ddc <__sinit>:
 8011ddc:	b510      	push	{r4, lr}
 8011dde:	4604      	mov	r4, r0
 8011de0:	f7ff fff0 	bl	8011dc4 <__sinit_lock_acquire>
 8011de4:	69a3      	ldr	r3, [r4, #24]
 8011de6:	b11b      	cbz	r3, 8011df0 <__sinit+0x14>
 8011de8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011dec:	f7ff bff0 	b.w	8011dd0 <__sinit_lock_release>
 8011df0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8011df4:	6523      	str	r3, [r4, #80]	; 0x50
 8011df6:	4b13      	ldr	r3, [pc, #76]	; (8011e44 <__sinit+0x68>)
 8011df8:	4a13      	ldr	r2, [pc, #76]	; (8011e48 <__sinit+0x6c>)
 8011dfa:	681b      	ldr	r3, [r3, #0]
 8011dfc:	62a2      	str	r2, [r4, #40]	; 0x28
 8011dfe:	42a3      	cmp	r3, r4
 8011e00:	bf04      	itt	eq
 8011e02:	2301      	moveq	r3, #1
 8011e04:	61a3      	streq	r3, [r4, #24]
 8011e06:	4620      	mov	r0, r4
 8011e08:	f000 f820 	bl	8011e4c <__sfp>
 8011e0c:	6060      	str	r0, [r4, #4]
 8011e0e:	4620      	mov	r0, r4
 8011e10:	f000 f81c 	bl	8011e4c <__sfp>
 8011e14:	60a0      	str	r0, [r4, #8]
 8011e16:	4620      	mov	r0, r4
 8011e18:	f000 f818 	bl	8011e4c <__sfp>
 8011e1c:	2200      	movs	r2, #0
 8011e1e:	60e0      	str	r0, [r4, #12]
 8011e20:	2104      	movs	r1, #4
 8011e22:	6860      	ldr	r0, [r4, #4]
 8011e24:	f7ff ff82 	bl	8011d2c <std>
 8011e28:	68a0      	ldr	r0, [r4, #8]
 8011e2a:	2201      	movs	r2, #1
 8011e2c:	2109      	movs	r1, #9
 8011e2e:	f7ff ff7d 	bl	8011d2c <std>
 8011e32:	68e0      	ldr	r0, [r4, #12]
 8011e34:	2202      	movs	r2, #2
 8011e36:	2112      	movs	r1, #18
 8011e38:	f7ff ff78 	bl	8011d2c <std>
 8011e3c:	2301      	movs	r3, #1
 8011e3e:	61a3      	str	r3, [r4, #24]
 8011e40:	e7d2      	b.n	8011de8 <__sinit+0xc>
 8011e42:	bf00      	nop
 8011e44:	08012c18 	.word	0x08012c18
 8011e48:	08011d75 	.word	0x08011d75

08011e4c <__sfp>:
 8011e4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011e4e:	4607      	mov	r7, r0
 8011e50:	f7ff ffac 	bl	8011dac <__sfp_lock_acquire>
 8011e54:	4b1e      	ldr	r3, [pc, #120]	; (8011ed0 <__sfp+0x84>)
 8011e56:	681e      	ldr	r6, [r3, #0]
 8011e58:	69b3      	ldr	r3, [r6, #24]
 8011e5a:	b913      	cbnz	r3, 8011e62 <__sfp+0x16>
 8011e5c:	4630      	mov	r0, r6
 8011e5e:	f7ff ffbd 	bl	8011ddc <__sinit>
 8011e62:	3648      	adds	r6, #72	; 0x48
 8011e64:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8011e68:	3b01      	subs	r3, #1
 8011e6a:	d503      	bpl.n	8011e74 <__sfp+0x28>
 8011e6c:	6833      	ldr	r3, [r6, #0]
 8011e6e:	b30b      	cbz	r3, 8011eb4 <__sfp+0x68>
 8011e70:	6836      	ldr	r6, [r6, #0]
 8011e72:	e7f7      	b.n	8011e64 <__sfp+0x18>
 8011e74:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8011e78:	b9d5      	cbnz	r5, 8011eb0 <__sfp+0x64>
 8011e7a:	4b16      	ldr	r3, [pc, #88]	; (8011ed4 <__sfp+0x88>)
 8011e7c:	60e3      	str	r3, [r4, #12]
 8011e7e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8011e82:	6665      	str	r5, [r4, #100]	; 0x64
 8011e84:	f000 f847 	bl	8011f16 <__retarget_lock_init_recursive>
 8011e88:	f7ff ff96 	bl	8011db8 <__sfp_lock_release>
 8011e8c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8011e90:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8011e94:	6025      	str	r5, [r4, #0]
 8011e96:	61a5      	str	r5, [r4, #24]
 8011e98:	2208      	movs	r2, #8
 8011e9a:	4629      	mov	r1, r5
 8011e9c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8011ea0:	f7fd fb32 	bl	800f508 <memset>
 8011ea4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8011ea8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8011eac:	4620      	mov	r0, r4
 8011eae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011eb0:	3468      	adds	r4, #104	; 0x68
 8011eb2:	e7d9      	b.n	8011e68 <__sfp+0x1c>
 8011eb4:	2104      	movs	r1, #4
 8011eb6:	4638      	mov	r0, r7
 8011eb8:	f7ff ff62 	bl	8011d80 <__sfmoreglue>
 8011ebc:	4604      	mov	r4, r0
 8011ebe:	6030      	str	r0, [r6, #0]
 8011ec0:	2800      	cmp	r0, #0
 8011ec2:	d1d5      	bne.n	8011e70 <__sfp+0x24>
 8011ec4:	f7ff ff78 	bl	8011db8 <__sfp_lock_release>
 8011ec8:	230c      	movs	r3, #12
 8011eca:	603b      	str	r3, [r7, #0]
 8011ecc:	e7ee      	b.n	8011eac <__sfp+0x60>
 8011ece:	bf00      	nop
 8011ed0:	08012c18 	.word	0x08012c18
 8011ed4:	ffff0001 	.word	0xffff0001

08011ed8 <_fwalk_reent>:
 8011ed8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011edc:	4606      	mov	r6, r0
 8011ede:	4688      	mov	r8, r1
 8011ee0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8011ee4:	2700      	movs	r7, #0
 8011ee6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8011eea:	f1b9 0901 	subs.w	r9, r9, #1
 8011eee:	d505      	bpl.n	8011efc <_fwalk_reent+0x24>
 8011ef0:	6824      	ldr	r4, [r4, #0]
 8011ef2:	2c00      	cmp	r4, #0
 8011ef4:	d1f7      	bne.n	8011ee6 <_fwalk_reent+0xe>
 8011ef6:	4638      	mov	r0, r7
 8011ef8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011efc:	89ab      	ldrh	r3, [r5, #12]
 8011efe:	2b01      	cmp	r3, #1
 8011f00:	d907      	bls.n	8011f12 <_fwalk_reent+0x3a>
 8011f02:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8011f06:	3301      	adds	r3, #1
 8011f08:	d003      	beq.n	8011f12 <_fwalk_reent+0x3a>
 8011f0a:	4629      	mov	r1, r5
 8011f0c:	4630      	mov	r0, r6
 8011f0e:	47c0      	blx	r8
 8011f10:	4307      	orrs	r7, r0
 8011f12:	3568      	adds	r5, #104	; 0x68
 8011f14:	e7e9      	b.n	8011eea <_fwalk_reent+0x12>

08011f16 <__retarget_lock_init_recursive>:
 8011f16:	4770      	bx	lr

08011f18 <__retarget_lock_acquire_recursive>:
 8011f18:	4770      	bx	lr

08011f1a <__retarget_lock_release_recursive>:
 8011f1a:	4770      	bx	lr

08011f1c <__swhatbuf_r>:
 8011f1c:	b570      	push	{r4, r5, r6, lr}
 8011f1e:	460e      	mov	r6, r1
 8011f20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011f24:	2900      	cmp	r1, #0
 8011f26:	b096      	sub	sp, #88	; 0x58
 8011f28:	4614      	mov	r4, r2
 8011f2a:	461d      	mov	r5, r3
 8011f2c:	da08      	bge.n	8011f40 <__swhatbuf_r+0x24>
 8011f2e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8011f32:	2200      	movs	r2, #0
 8011f34:	602a      	str	r2, [r5, #0]
 8011f36:	061a      	lsls	r2, r3, #24
 8011f38:	d410      	bmi.n	8011f5c <__swhatbuf_r+0x40>
 8011f3a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011f3e:	e00e      	b.n	8011f5e <__swhatbuf_r+0x42>
 8011f40:	466a      	mov	r2, sp
 8011f42:	f000 f8fb 	bl	801213c <_fstat_r>
 8011f46:	2800      	cmp	r0, #0
 8011f48:	dbf1      	blt.n	8011f2e <__swhatbuf_r+0x12>
 8011f4a:	9a01      	ldr	r2, [sp, #4]
 8011f4c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8011f50:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8011f54:	425a      	negs	r2, r3
 8011f56:	415a      	adcs	r2, r3
 8011f58:	602a      	str	r2, [r5, #0]
 8011f5a:	e7ee      	b.n	8011f3a <__swhatbuf_r+0x1e>
 8011f5c:	2340      	movs	r3, #64	; 0x40
 8011f5e:	2000      	movs	r0, #0
 8011f60:	6023      	str	r3, [r4, #0]
 8011f62:	b016      	add	sp, #88	; 0x58
 8011f64:	bd70      	pop	{r4, r5, r6, pc}
	...

08011f68 <__smakebuf_r>:
 8011f68:	898b      	ldrh	r3, [r1, #12]
 8011f6a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011f6c:	079d      	lsls	r5, r3, #30
 8011f6e:	4606      	mov	r6, r0
 8011f70:	460c      	mov	r4, r1
 8011f72:	d507      	bpl.n	8011f84 <__smakebuf_r+0x1c>
 8011f74:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8011f78:	6023      	str	r3, [r4, #0]
 8011f7a:	6123      	str	r3, [r4, #16]
 8011f7c:	2301      	movs	r3, #1
 8011f7e:	6163      	str	r3, [r4, #20]
 8011f80:	b002      	add	sp, #8
 8011f82:	bd70      	pop	{r4, r5, r6, pc}
 8011f84:	ab01      	add	r3, sp, #4
 8011f86:	466a      	mov	r2, sp
 8011f88:	f7ff ffc8 	bl	8011f1c <__swhatbuf_r>
 8011f8c:	9900      	ldr	r1, [sp, #0]
 8011f8e:	4605      	mov	r5, r0
 8011f90:	4630      	mov	r0, r6
 8011f92:	f7ff f915 	bl	80111c0 <_malloc_r>
 8011f96:	b948      	cbnz	r0, 8011fac <__smakebuf_r+0x44>
 8011f98:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8011f9c:	059a      	lsls	r2, r3, #22
 8011f9e:	d4ef      	bmi.n	8011f80 <__smakebuf_r+0x18>
 8011fa0:	f023 0303 	bic.w	r3, r3, #3
 8011fa4:	f043 0302 	orr.w	r3, r3, #2
 8011fa8:	81a3      	strh	r3, [r4, #12]
 8011faa:	e7e3      	b.n	8011f74 <__smakebuf_r+0xc>
 8011fac:	4b0d      	ldr	r3, [pc, #52]	; (8011fe4 <__smakebuf_r+0x7c>)
 8011fae:	62b3      	str	r3, [r6, #40]	; 0x28
 8011fb0:	89a3      	ldrh	r3, [r4, #12]
 8011fb2:	6020      	str	r0, [r4, #0]
 8011fb4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8011fb8:	81a3      	strh	r3, [r4, #12]
 8011fba:	9b00      	ldr	r3, [sp, #0]
 8011fbc:	6163      	str	r3, [r4, #20]
 8011fbe:	9b01      	ldr	r3, [sp, #4]
 8011fc0:	6120      	str	r0, [r4, #16]
 8011fc2:	b15b      	cbz	r3, 8011fdc <__smakebuf_r+0x74>
 8011fc4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8011fc8:	4630      	mov	r0, r6
 8011fca:	f000 f8c9 	bl	8012160 <_isatty_r>
 8011fce:	b128      	cbz	r0, 8011fdc <__smakebuf_r+0x74>
 8011fd0:	89a3      	ldrh	r3, [r4, #12]
 8011fd2:	f023 0303 	bic.w	r3, r3, #3
 8011fd6:	f043 0301 	orr.w	r3, r3, #1
 8011fda:	81a3      	strh	r3, [r4, #12]
 8011fdc:	89a0      	ldrh	r0, [r4, #12]
 8011fde:	4305      	orrs	r5, r0
 8011fe0:	81a5      	strh	r5, [r4, #12]
 8011fe2:	e7cd      	b.n	8011f80 <__smakebuf_r+0x18>
 8011fe4:	08011d75 	.word	0x08011d75

08011fe8 <_raise_r>:
 8011fe8:	291f      	cmp	r1, #31
 8011fea:	b538      	push	{r3, r4, r5, lr}
 8011fec:	4604      	mov	r4, r0
 8011fee:	460d      	mov	r5, r1
 8011ff0:	d904      	bls.n	8011ffc <_raise_r+0x14>
 8011ff2:	2316      	movs	r3, #22
 8011ff4:	6003      	str	r3, [r0, #0]
 8011ff6:	f04f 30ff 	mov.w	r0, #4294967295
 8011ffa:	bd38      	pop	{r3, r4, r5, pc}
 8011ffc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8011ffe:	b112      	cbz	r2, 8012006 <_raise_r+0x1e>
 8012000:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8012004:	b94b      	cbnz	r3, 801201a <_raise_r+0x32>
 8012006:	4620      	mov	r0, r4
 8012008:	f000 f830 	bl	801206c <_getpid_r>
 801200c:	462a      	mov	r2, r5
 801200e:	4601      	mov	r1, r0
 8012010:	4620      	mov	r0, r4
 8012012:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012016:	f000 b817 	b.w	8012048 <_kill_r>
 801201a:	2b01      	cmp	r3, #1
 801201c:	d00a      	beq.n	8012034 <_raise_r+0x4c>
 801201e:	1c59      	adds	r1, r3, #1
 8012020:	d103      	bne.n	801202a <_raise_r+0x42>
 8012022:	2316      	movs	r3, #22
 8012024:	6003      	str	r3, [r0, #0]
 8012026:	2001      	movs	r0, #1
 8012028:	e7e7      	b.n	8011ffa <_raise_r+0x12>
 801202a:	2400      	movs	r4, #0
 801202c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8012030:	4628      	mov	r0, r5
 8012032:	4798      	blx	r3
 8012034:	2000      	movs	r0, #0
 8012036:	e7e0      	b.n	8011ffa <_raise_r+0x12>

08012038 <raise>:
 8012038:	4b02      	ldr	r3, [pc, #8]	; (8012044 <raise+0xc>)
 801203a:	4601      	mov	r1, r0
 801203c:	6818      	ldr	r0, [r3, #0]
 801203e:	f7ff bfd3 	b.w	8011fe8 <_raise_r>
 8012042:	bf00      	nop
 8012044:	240000c0 	.word	0x240000c0

08012048 <_kill_r>:
 8012048:	b538      	push	{r3, r4, r5, lr}
 801204a:	4d07      	ldr	r5, [pc, #28]	; (8012068 <_kill_r+0x20>)
 801204c:	2300      	movs	r3, #0
 801204e:	4604      	mov	r4, r0
 8012050:	4608      	mov	r0, r1
 8012052:	4611      	mov	r1, r2
 8012054:	602b      	str	r3, [r5, #0]
 8012056:	f7f2 fb6f 	bl	8004738 <_kill>
 801205a:	1c43      	adds	r3, r0, #1
 801205c:	d102      	bne.n	8012064 <_kill_r+0x1c>
 801205e:	682b      	ldr	r3, [r5, #0]
 8012060:	b103      	cbz	r3, 8012064 <_kill_r+0x1c>
 8012062:	6023      	str	r3, [r4, #0]
 8012064:	bd38      	pop	{r3, r4, r5, pc}
 8012066:	bf00      	nop
 8012068:	24000c68 	.word	0x24000c68

0801206c <_getpid_r>:
 801206c:	f7f2 bb5c 	b.w	8004728 <_getpid>

08012070 <__sread>:
 8012070:	b510      	push	{r4, lr}
 8012072:	460c      	mov	r4, r1
 8012074:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8012078:	f000 f894 	bl	80121a4 <_read_r>
 801207c:	2800      	cmp	r0, #0
 801207e:	bfab      	itete	ge
 8012080:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8012082:	89a3      	ldrhlt	r3, [r4, #12]
 8012084:	181b      	addge	r3, r3, r0
 8012086:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801208a:	bfac      	ite	ge
 801208c:	6563      	strge	r3, [r4, #84]	; 0x54
 801208e:	81a3      	strhlt	r3, [r4, #12]
 8012090:	bd10      	pop	{r4, pc}

08012092 <__swrite>:
 8012092:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012096:	461f      	mov	r7, r3
 8012098:	898b      	ldrh	r3, [r1, #12]
 801209a:	05db      	lsls	r3, r3, #23
 801209c:	4605      	mov	r5, r0
 801209e:	460c      	mov	r4, r1
 80120a0:	4616      	mov	r6, r2
 80120a2:	d505      	bpl.n	80120b0 <__swrite+0x1e>
 80120a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80120a8:	2302      	movs	r3, #2
 80120aa:	2200      	movs	r2, #0
 80120ac:	f000 f868 	bl	8012180 <_lseek_r>
 80120b0:	89a3      	ldrh	r3, [r4, #12]
 80120b2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80120b6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80120ba:	81a3      	strh	r3, [r4, #12]
 80120bc:	4632      	mov	r2, r6
 80120be:	463b      	mov	r3, r7
 80120c0:	4628      	mov	r0, r5
 80120c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80120c6:	f000 b817 	b.w	80120f8 <_write_r>

080120ca <__sseek>:
 80120ca:	b510      	push	{r4, lr}
 80120cc:	460c      	mov	r4, r1
 80120ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80120d2:	f000 f855 	bl	8012180 <_lseek_r>
 80120d6:	1c43      	adds	r3, r0, #1
 80120d8:	89a3      	ldrh	r3, [r4, #12]
 80120da:	bf15      	itete	ne
 80120dc:	6560      	strne	r0, [r4, #84]	; 0x54
 80120de:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80120e2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80120e6:	81a3      	strheq	r3, [r4, #12]
 80120e8:	bf18      	it	ne
 80120ea:	81a3      	strhne	r3, [r4, #12]
 80120ec:	bd10      	pop	{r4, pc}

080120ee <__sclose>:
 80120ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80120f2:	f000 b813 	b.w	801211c <_close_r>
	...

080120f8 <_write_r>:
 80120f8:	b538      	push	{r3, r4, r5, lr}
 80120fa:	4d07      	ldr	r5, [pc, #28]	; (8012118 <_write_r+0x20>)
 80120fc:	4604      	mov	r4, r0
 80120fe:	4608      	mov	r0, r1
 8012100:	4611      	mov	r1, r2
 8012102:	2200      	movs	r2, #0
 8012104:	602a      	str	r2, [r5, #0]
 8012106:	461a      	mov	r2, r3
 8012108:	f7f2 fb4d 	bl	80047a6 <_write>
 801210c:	1c43      	adds	r3, r0, #1
 801210e:	d102      	bne.n	8012116 <_write_r+0x1e>
 8012110:	682b      	ldr	r3, [r5, #0]
 8012112:	b103      	cbz	r3, 8012116 <_write_r+0x1e>
 8012114:	6023      	str	r3, [r4, #0]
 8012116:	bd38      	pop	{r3, r4, r5, pc}
 8012118:	24000c68 	.word	0x24000c68

0801211c <_close_r>:
 801211c:	b538      	push	{r3, r4, r5, lr}
 801211e:	4d06      	ldr	r5, [pc, #24]	; (8012138 <_close_r+0x1c>)
 8012120:	2300      	movs	r3, #0
 8012122:	4604      	mov	r4, r0
 8012124:	4608      	mov	r0, r1
 8012126:	602b      	str	r3, [r5, #0]
 8012128:	f7f2 fb59 	bl	80047de <_close>
 801212c:	1c43      	adds	r3, r0, #1
 801212e:	d102      	bne.n	8012136 <_close_r+0x1a>
 8012130:	682b      	ldr	r3, [r5, #0]
 8012132:	b103      	cbz	r3, 8012136 <_close_r+0x1a>
 8012134:	6023      	str	r3, [r4, #0]
 8012136:	bd38      	pop	{r3, r4, r5, pc}
 8012138:	24000c68 	.word	0x24000c68

0801213c <_fstat_r>:
 801213c:	b538      	push	{r3, r4, r5, lr}
 801213e:	4d07      	ldr	r5, [pc, #28]	; (801215c <_fstat_r+0x20>)
 8012140:	2300      	movs	r3, #0
 8012142:	4604      	mov	r4, r0
 8012144:	4608      	mov	r0, r1
 8012146:	4611      	mov	r1, r2
 8012148:	602b      	str	r3, [r5, #0]
 801214a:	f7f2 fb54 	bl	80047f6 <_fstat>
 801214e:	1c43      	adds	r3, r0, #1
 8012150:	d102      	bne.n	8012158 <_fstat_r+0x1c>
 8012152:	682b      	ldr	r3, [r5, #0]
 8012154:	b103      	cbz	r3, 8012158 <_fstat_r+0x1c>
 8012156:	6023      	str	r3, [r4, #0]
 8012158:	bd38      	pop	{r3, r4, r5, pc}
 801215a:	bf00      	nop
 801215c:	24000c68 	.word	0x24000c68

08012160 <_isatty_r>:
 8012160:	b538      	push	{r3, r4, r5, lr}
 8012162:	4d06      	ldr	r5, [pc, #24]	; (801217c <_isatty_r+0x1c>)
 8012164:	2300      	movs	r3, #0
 8012166:	4604      	mov	r4, r0
 8012168:	4608      	mov	r0, r1
 801216a:	602b      	str	r3, [r5, #0]
 801216c:	f7f2 fb53 	bl	8004816 <_isatty>
 8012170:	1c43      	adds	r3, r0, #1
 8012172:	d102      	bne.n	801217a <_isatty_r+0x1a>
 8012174:	682b      	ldr	r3, [r5, #0]
 8012176:	b103      	cbz	r3, 801217a <_isatty_r+0x1a>
 8012178:	6023      	str	r3, [r4, #0]
 801217a:	bd38      	pop	{r3, r4, r5, pc}
 801217c:	24000c68 	.word	0x24000c68

08012180 <_lseek_r>:
 8012180:	b538      	push	{r3, r4, r5, lr}
 8012182:	4d07      	ldr	r5, [pc, #28]	; (80121a0 <_lseek_r+0x20>)
 8012184:	4604      	mov	r4, r0
 8012186:	4608      	mov	r0, r1
 8012188:	4611      	mov	r1, r2
 801218a:	2200      	movs	r2, #0
 801218c:	602a      	str	r2, [r5, #0]
 801218e:	461a      	mov	r2, r3
 8012190:	f7f2 fb4c 	bl	800482c <_lseek>
 8012194:	1c43      	adds	r3, r0, #1
 8012196:	d102      	bne.n	801219e <_lseek_r+0x1e>
 8012198:	682b      	ldr	r3, [r5, #0]
 801219a:	b103      	cbz	r3, 801219e <_lseek_r+0x1e>
 801219c:	6023      	str	r3, [r4, #0]
 801219e:	bd38      	pop	{r3, r4, r5, pc}
 80121a0:	24000c68 	.word	0x24000c68

080121a4 <_read_r>:
 80121a4:	b538      	push	{r3, r4, r5, lr}
 80121a6:	4d07      	ldr	r5, [pc, #28]	; (80121c4 <_read_r+0x20>)
 80121a8:	4604      	mov	r4, r0
 80121aa:	4608      	mov	r0, r1
 80121ac:	4611      	mov	r1, r2
 80121ae:	2200      	movs	r2, #0
 80121b0:	602a      	str	r2, [r5, #0]
 80121b2:	461a      	mov	r2, r3
 80121b4:	f7f2 fada 	bl	800476c <_read>
 80121b8:	1c43      	adds	r3, r0, #1
 80121ba:	d102      	bne.n	80121c2 <_read_r+0x1e>
 80121bc:	682b      	ldr	r3, [r5, #0]
 80121be:	b103      	cbz	r3, 80121c2 <_read_r+0x1e>
 80121c0:	6023      	str	r3, [r4, #0]
 80121c2:	bd38      	pop	{r3, r4, r5, pc}
 80121c4:	24000c68 	.word	0x24000c68

080121c8 <checkint>:
 80121c8:	f3c1 520a 	ubfx	r2, r1, #20, #11
 80121cc:	f240 33fe 	movw	r3, #1022	; 0x3fe
 80121d0:	429a      	cmp	r2, r3
 80121d2:	b570      	push	{r4, r5, r6, lr}
 80121d4:	dd2a      	ble.n	801222c <checkint+0x64>
 80121d6:	f240 4333 	movw	r3, #1075	; 0x433
 80121da:	429a      	cmp	r2, r3
 80121dc:	dc24      	bgt.n	8012228 <checkint+0x60>
 80121de:	1a9b      	subs	r3, r3, r2
 80121e0:	f1a3 0620 	sub.w	r6, r3, #32
 80121e4:	f04f 32ff 	mov.w	r2, #4294967295
 80121e8:	fa02 f403 	lsl.w	r4, r2, r3
 80121ec:	fa02 f606 	lsl.w	r6, r2, r6
 80121f0:	f1c3 0520 	rsb	r5, r3, #32
 80121f4:	fa22 f505 	lsr.w	r5, r2, r5
 80121f8:	4334      	orrs	r4, r6
 80121fa:	432c      	orrs	r4, r5
 80121fc:	409a      	lsls	r2, r3
 80121fe:	ea20 0202 	bic.w	r2, r0, r2
 8012202:	ea21 0404 	bic.w	r4, r1, r4
 8012206:	4322      	orrs	r2, r4
 8012208:	f1a3 0420 	sub.w	r4, r3, #32
 801220c:	f1c3 0220 	rsb	r2, r3, #32
 8012210:	d10c      	bne.n	801222c <checkint+0x64>
 8012212:	40d8      	lsrs	r0, r3
 8012214:	fa01 f302 	lsl.w	r3, r1, r2
 8012218:	4318      	orrs	r0, r3
 801221a:	40e1      	lsrs	r1, r4
 801221c:	4308      	orrs	r0, r1
 801221e:	f000 0001 	and.w	r0, r0, #1
 8012222:	f1d0 0002 	rsbs	r0, r0, #2
 8012226:	bd70      	pop	{r4, r5, r6, pc}
 8012228:	2002      	movs	r0, #2
 801222a:	e7fc      	b.n	8012226 <checkint+0x5e>
 801222c:	2000      	movs	r0, #0
 801222e:	e7fa      	b.n	8012226 <checkint+0x5e>

08012230 <pow>:
 8012230:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012234:	ee10 4a90 	vmov	r4, s1
 8012238:	ed2d 8b0a 	vpush	{d8-d12}
 801223c:	ea4f 5a14 	mov.w	sl, r4, lsr #20
 8012240:	ee11 7a90 	vmov	r7, s3
 8012244:	f10a 32ff 	add.w	r2, sl, #4294967295
 8012248:	f240 73fd 	movw	r3, #2045	; 0x7fd
 801224c:	429a      	cmp	r2, r3
 801224e:	ee10 6a10 	vmov	r6, s0
 8012252:	ee11 0a10 	vmov	r0, s2
 8012256:	b086      	sub	sp, #24
 8012258:	46d4      	mov	ip, sl
 801225a:	ea4f 5517 	mov.w	r5, r7, lsr #20
 801225e:	d806      	bhi.n	801226e <pow+0x3e>
 8012260:	f3c5 030a 	ubfx	r3, r5, #0, #11
 8012264:	f2a3 33be 	subw	r3, r3, #958	; 0x3be
 8012268:	2b7f      	cmp	r3, #127	; 0x7f
 801226a:	f240 8156 	bls.w	801251a <pow+0x2ea>
 801226e:	1802      	adds	r2, r0, r0
 8012270:	eb47 0107 	adc.w	r1, r7, r7
 8012274:	f06f 0e01 	mvn.w	lr, #1
 8012278:	f112 39ff 	adds.w	r9, r2, #4294967295
 801227c:	f141 38ff 	adc.w	r8, r1, #4294967295
 8012280:	f46f 1300 	mvn.w	r3, #2097152	; 0x200000
 8012284:	45ce      	cmp	lr, r9
 8012286:	eb73 0808 	sbcs.w	r8, r3, r8
 801228a:	d23f      	bcs.n	801230c <pow+0xdc>
 801228c:	ea52 0301 	orrs.w	r3, r2, r1
 8012290:	f04f 0300 	mov.w	r3, #0
 8012294:	d10c      	bne.n	80122b0 <pow+0x80>
 8012296:	19b6      	adds	r6, r6, r6
 8012298:	f484 2400 	eor.w	r4, r4, #524288	; 0x80000
 801229c:	4164      	adcs	r4, r4
 801229e:	42b3      	cmp	r3, r6
 80122a0:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 80122a4:	41a3      	sbcs	r3, r4
 80122a6:	f0c0 808c 	bcc.w	80123c2 <pow+0x192>
 80122aa:	eeb7 0b00 	vmov.f64	d0, #112	; 0x3f800000  1.0
 80122ae:	e028      	b.n	8012302 <pow+0xd2>
 80122b0:	4da3      	ldr	r5, [pc, #652]	; (8012540 <pow+0x310>)
 80122b2:	42ac      	cmp	r4, r5
 80122b4:	bf08      	it	eq
 80122b6:	429e      	cmpeq	r6, r3
 80122b8:	d107      	bne.n	80122ca <pow+0x9a>
 80122ba:	1800      	adds	r0, r0, r0
 80122bc:	f487 2700 	eor.w	r7, r7, #524288	; 0x80000
 80122c0:	417f      	adcs	r7, r7
 80122c2:	4283      	cmp	r3, r0
 80122c4:	4b9f      	ldr	r3, [pc, #636]	; (8012544 <pow+0x314>)
 80122c6:	41bb      	sbcs	r3, r7
 80122c8:	e7ed      	b.n	80122a6 <pow+0x76>
 80122ca:	19b6      	adds	r6, r6, r6
 80122cc:	489e      	ldr	r0, [pc, #632]	; (8012548 <pow+0x318>)
 80122ce:	4164      	adcs	r4, r4
 80122d0:	42b3      	cmp	r3, r6
 80122d2:	eb70 0504 	sbcs.w	r5, r0, r4
 80122d6:	d374      	bcc.n	80123c2 <pow+0x192>
 80122d8:	4281      	cmp	r1, r0
 80122da:	bf08      	it	eq
 80122dc:	429a      	cmpeq	r2, r3
 80122de:	d170      	bne.n	80123c2 <pow+0x192>
 80122e0:	4a9a      	ldr	r2, [pc, #616]	; (801254c <pow+0x31c>)
 80122e2:	4294      	cmp	r4, r2
 80122e4:	bf08      	it	eq
 80122e6:	429e      	cmpeq	r6, r3
 80122e8:	d0df      	beq.n	80122aa <pow+0x7a>
 80122ea:	4294      	cmp	r4, r2
 80122ec:	ea6f 0707 	mvn.w	r7, r7
 80122f0:	bf34      	ite	cc
 80122f2:	2400      	movcc	r4, #0
 80122f4:	2401      	movcs	r4, #1
 80122f6:	0fff      	lsrs	r7, r7, #31
 80122f8:	42bc      	cmp	r4, r7
 80122fa:	f040 81d9 	bne.w	80126b0 <pow+0x480>
 80122fe:	ee21 0b01 	vmul.f64	d0, d1, d1
 8012302:	b006      	add	sp, #24
 8012304:	ecbd 8b0a 	vpop	{d8-d12}
 8012308:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801230c:	eb16 0806 	adds.w	r8, r6, r6
 8012310:	eb44 0904 	adc.w	r9, r4, r4
 8012314:	f118 31ff 	adds.w	r1, r8, #4294967295
 8012318:	f169 0200 	sbc.w	r2, r9, #0
 801231c:	458e      	cmp	lr, r1
 801231e:	4193      	sbcs	r3, r2
 8012320:	d223      	bcs.n	801236a <pow+0x13a>
 8012322:	ee20 0b00 	vmul.f64	d0, d0, d0
 8012326:	2c00      	cmp	r4, #0
 8012328:	da12      	bge.n	8012350 <pow+0x120>
 801232a:	4639      	mov	r1, r7
 801232c:	f7ff ff4c 	bl	80121c8 <checkint>
 8012330:	2801      	cmp	r0, #1
 8012332:	d10d      	bne.n	8012350 <pow+0x120>
 8012334:	eeb1 0b40 	vneg.f64	d0, d0
 8012338:	ea58 0309 	orrs.w	r3, r8, r9
 801233c:	d10a      	bne.n	8012354 <pow+0x124>
 801233e:	2f00      	cmp	r7, #0
 8012340:	dadf      	bge.n	8012302 <pow+0xd2>
 8012342:	b006      	add	sp, #24
 8012344:	ecbd 8b0a 	vpop	{d8-d12}
 8012348:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801234c:	f000 bb50 	b.w	80129f0 <__math_divzero>
 8012350:	2000      	movs	r0, #0
 8012352:	e7f1      	b.n	8012338 <pow+0x108>
 8012354:	2f00      	cmp	r7, #0
 8012356:	dad4      	bge.n	8012302 <pow+0xd2>
 8012358:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 801235c:	ee86 7b00 	vdiv.f64	d7, d6, d0
 8012360:	ed8d 7b00 	vstr	d7, [sp]
 8012364:	ed9d 0b00 	vldr	d0, [sp]
 8012368:	e7cb      	b.n	8012302 <pow+0xd2>
 801236a:	2c00      	cmp	r4, #0
 801236c:	da2c      	bge.n	80123c8 <pow+0x198>
 801236e:	4639      	mov	r1, r7
 8012370:	f7ff ff2a 	bl	80121c8 <checkint>
 8012374:	b930      	cbnz	r0, 8012384 <pow+0x154>
 8012376:	b006      	add	sp, #24
 8012378:	ecbd 8b0a 	vpop	{d8-d12}
 801237c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012380:	f000 bb4e 	b.w	8012a20 <__math_invalid>
 8012384:	2801      	cmp	r0, #1
 8012386:	bf14      	ite	ne
 8012388:	2000      	movne	r0, #0
 801238a:	f44f 2080 	moveq.w	r0, #262144	; 0x40000
 801238e:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
 8012392:	f3ca 0c0a 	ubfx	ip, sl, #0, #11
 8012396:	f3c5 020a 	ubfx	r2, r5, #0, #11
 801239a:	f2a2 33be 	subw	r3, r2, #958	; 0x3be
 801239e:	2b7f      	cmp	r3, #127	; 0x7f
 80123a0:	d92d      	bls.n	80123fe <pow+0x1ce>
 80123a2:	4b67      	ldr	r3, [pc, #412]	; (8012540 <pow+0x310>)
 80123a4:	2000      	movs	r0, #0
 80123a6:	429c      	cmp	r4, r3
 80123a8:	bf08      	it	eq
 80123aa:	4286      	cmpeq	r6, r0
 80123ac:	f43f af7d 	beq.w	80122aa <pow+0x7a>
 80123b0:	f240 31bd 	movw	r1, #957	; 0x3bd
 80123b4:	428a      	cmp	r2, r1
 80123b6:	d80c      	bhi.n	80123d2 <pow+0x1a2>
 80123b8:	eeb7 0b00 	vmov.f64	d0, #112	; 0x3f800000  1.0
 80123bc:	42b0      	cmp	r0, r6
 80123be:	41a3      	sbcs	r3, r4
 80123c0:	d204      	bcs.n	80123cc <pow+0x19c>
 80123c2:	ee31 0b00 	vadd.f64	d0, d1, d0
 80123c6:	e79c      	b.n	8012302 <pow+0xd2>
 80123c8:	2000      	movs	r0, #0
 80123ca:	e7e4      	b.n	8012396 <pow+0x166>
 80123cc:	ee30 0b41 	vsub.f64	d0, d0, d1
 80123d0:	e797      	b.n	8012302 <pow+0xd2>
 80123d2:	2e01      	cmp	r6, #1
 80123d4:	eb74 0303 	sbcs.w	r3, r4, r3
 80123d8:	f240 72ff 	movw	r2, #2047	; 0x7ff
 80123dc:	bf34      	ite	cc
 80123de:	2301      	movcc	r3, #1
 80123e0:	2300      	movcs	r3, #0
 80123e2:	4295      	cmp	r5, r2
 80123e4:	bf8c      	ite	hi
 80123e6:	2500      	movhi	r5, #0
 80123e8:	2501      	movls	r5, #1
 80123ea:	42ab      	cmp	r3, r5
 80123ec:	f000 809d 	beq.w	801252a <pow+0x2fa>
 80123f0:	b006      	add	sp, #24
 80123f2:	ecbd 8b0a 	vpop	{d8-d12}
 80123f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80123fa:	f000 baf1 	b.w	80129e0 <__math_oflow>
 80123fe:	f1bc 0f00 	cmp.w	ip, #0
 8012402:	d10b      	bne.n	801241c <pow+0x1ec>
 8012404:	ed9f 7b4c 	vldr	d7, [pc, #304]	; 8012538 <pow+0x308>
 8012408:	ee20 7b07 	vmul.f64	d7, d0, d7
 801240c:	ec53 2b17 	vmov	r2, r3, d7
 8012410:	ee17 6a10 	vmov	r6, s14
 8012414:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
 8012418:	f1a4 7450 	sub.w	r4, r4, #54525952	; 0x3400000
 801241c:	4b4c      	ldr	r3, [pc, #304]	; (8012550 <pow+0x320>)
 801241e:	eebf 6b00 	vmov.f64	d6, #240	; 0xbf800000 -1.0
 8012422:	4423      	add	r3, r4
 8012424:	f3c3 3246 	ubfx	r2, r3, #13, #7
 8012428:	1519      	asrs	r1, r3, #20
 801242a:	0d1b      	lsrs	r3, r3, #20
 801242c:	051b      	lsls	r3, r3, #20
 801242e:	eba4 0903 	sub.w	r9, r4, r3
 8012432:	4b48      	ldr	r3, [pc, #288]	; (8012554 <pow+0x324>)
 8012434:	ee04 1a10 	vmov	s8, r1
 8012438:	eb03 1142 	add.w	r1, r3, r2, lsl #5
 801243c:	f1b6 0800 	subs.w	r8, r6, #0
 8012440:	ed91 7b12 	vldr	d7, [r1, #72]	; 0x48
 8012444:	ec49 8b15 	vmov	d5, r8, r9
 8012448:	ed91 2b16 	vldr	d2, [r1, #88]	; 0x58
 801244c:	eea5 6b07 	vfma.f64	d6, d5, d7
 8012450:	ed93 7b00 	vldr	d7, [r3]
 8012454:	ed93 5b02 	vldr	d5, [r3, #8]
 8012458:	eeb8 4bc4 	vcvt.f64.s32	d4, s8
 801245c:	eea4 2b07 	vfma.f64	d2, d4, d7
 8012460:	ed91 7b18 	vldr	d7, [r1, #96]	; 0x60
 8012464:	ee36 ab02 	vadd.f64	d10, d6, d2
 8012468:	ee32 2b4a 	vsub.f64	d2, d2, d10
 801246c:	eea4 7b05 	vfma.f64	d7, d4, d5
 8012470:	ed93 5b04 	vldr	d5, [r3, #16]
 8012474:	ee32 2b06 	vadd.f64	d2, d2, d6
 8012478:	ee37 7b02 	vadd.f64	d7, d7, d2
 801247c:	ee26 5b05 	vmul.f64	d5, d6, d5
 8012480:	ed93 4b08 	vldr	d4, [r3, #32]
 8012484:	ee26 0b05 	vmul.f64	d0, d6, d5
 8012488:	eeb0 9b40 	vmov.f64	d9, d0
 801248c:	ee95 9b06 	vfnms.f64	d9, d5, d6
 8012490:	ed93 5b06 	vldr	d5, [r3, #24]
 8012494:	ee3a 8b00 	vadd.f64	d8, d10, d0
 8012498:	ee26 bb00 	vmul.f64	d11, d6, d0
 801249c:	ed93 3b0c 	vldr	d3, [r3, #48]	; 0x30
 80124a0:	eea6 5b04 	vfma.f64	d5, d6, d4
 80124a4:	ee3a ab48 	vsub.f64	d10, d10, d8
 80124a8:	ed93 4b0a 	vldr	d4, [r3, #40]	; 0x28
 80124ac:	ee37 9b09 	vadd.f64	d9, d7, d9
 80124b0:	ee3a ab00 	vadd.f64	d10, d10, d0
 80124b4:	eea6 4b03 	vfma.f64	d4, d6, d3
 80124b8:	ed93 cb10 	vldr	d12, [r3, #64]	; 0x40
 80124bc:	ee39 ab0a 	vadd.f64	d10, d9, d10
 80124c0:	ed93 3b0e 	vldr	d3, [r3, #56]	; 0x38
 80124c4:	eea6 3b0c 	vfma.f64	d3, d6, d12
 80124c8:	eea0 4b03 	vfma.f64	d4, d0, d3
 80124cc:	eea0 5b04 	vfma.f64	d5, d0, d4
 80124d0:	eeab ab05 	vfma.f64	d10, d11, d5
 80124d4:	ee38 6b0a 	vadd.f64	d6, d8, d10
 80124d8:	ee21 7b06 	vmul.f64	d7, d1, d6
 80124dc:	ee17 3a90 	vmov	r3, s15
 80124e0:	eeb0 5b47 	vmov.f64	d5, d7
 80124e4:	f3c3 560a 	ubfx	r6, r3, #20, #11
 80124e8:	f46f 7272 	mvn.w	r2, #968	; 0x3c8
 80124ec:	18b2      	adds	r2, r6, r2
 80124ee:	2a3e      	cmp	r2, #62	; 0x3e
 80124f0:	ee91 5b06 	vfnms.f64	d5, d1, d6
 80124f4:	ee38 8b46 	vsub.f64	d8, d8, d6
 80124f8:	ee38 ab0a 	vadd.f64	d10, d8, d10
 80124fc:	eea1 5b0a 	vfma.f64	d5, d1, d10
 8012500:	d92b      	bls.n	801255a <pow+0x32a>
 8012502:	2a00      	cmp	r2, #0
 8012504:	da0b      	bge.n	801251e <pow+0x2ee>
 8012506:	eeb7 0b00 	vmov.f64	d0, #112	; 0x3f800000  1.0
 801250a:	ee37 0b00 	vadd.f64	d0, d7, d0
 801250e:	2800      	cmp	r0, #0
 8012510:	f43f aef7 	beq.w	8012302 <pow+0xd2>
 8012514:	eeb1 0b40 	vneg.f64	d0, d0
 8012518:	e6f3      	b.n	8012302 <pow+0xd2>
 801251a:	2000      	movs	r0, #0
 801251c:	e77e      	b.n	801241c <pow+0x1ec>
 801251e:	f5b6 6f81 	cmp.w	r6, #1032	; 0x408
 8012522:	d919      	bls.n	8012558 <pow+0x328>
 8012524:	2b00      	cmp	r3, #0
 8012526:	f6bf af63 	bge.w	80123f0 <pow+0x1c0>
 801252a:	b006      	add	sp, #24
 801252c:	ecbd 8b0a 	vpop	{d8-d12}
 8012530:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012534:	f000 ba4c 	b.w	80129d0 <__math_uflow>
 8012538:	00000000 	.word	0x00000000
 801253c:	43300000 	.word	0x43300000
 8012540:	3ff00000 	.word	0x3ff00000
 8012544:	fff00000 	.word	0xfff00000
 8012548:	ffe00000 	.word	0xffe00000
 801254c:	7fe00000 	.word	0x7fe00000
 8012550:	c0196aab 	.word	0xc0196aab
 8012554:	08013048 	.word	0x08013048
 8012558:	2600      	movs	r6, #0
 801255a:	495d      	ldr	r1, [pc, #372]	; (80126d0 <pow+0x4a0>)
 801255c:	ed91 4b02 	vldr	d4, [r1, #8]
 8012560:	ed91 3b00 	vldr	d3, [r1]
 8012564:	eeb0 6b44 	vmov.f64	d6, d4
 8012568:	eea7 6b03 	vfma.f64	d6, d7, d3
 801256c:	ee16 5a10 	vmov	r5, s12
 8012570:	ee36 6b44 	vsub.f64	d6, d6, d4
 8012574:	ed91 4b04 	vldr	d4, [r1, #16]
 8012578:	f005 037f 	and.w	r3, r5, #127	; 0x7f
 801257c:	eea6 7b04 	vfma.f64	d7, d6, d4
 8012580:	eeb0 0b47 	vmov.f64	d0, d7
 8012584:	ed91 7b06 	vldr	d7, [r1, #24]
 8012588:	18dc      	adds	r4, r3, r3
 801258a:	f104 030f 	add.w	r3, r4, #15
 801258e:	eb01 04c4 	add.w	r4, r1, r4, lsl #3
 8012592:	eea6 0b07 	vfma.f64	d0, d6, d7
 8012596:	ed91 4b0a 	vldr	d4, [r1, #40]	; 0x28
 801259a:	ee35 0b00 	vadd.f64	d0, d5, d0
 801259e:	ee20 6b00 	vmul.f64	d6, d0, d0
 80125a2:	ed94 7b1c 	vldr	d7, [r4, #112]	; 0x70
 80125a6:	ed91 5b08 	vldr	d5, [r1, #32]
 80125aa:	ee30 7b07 	vadd.f64	d7, d0, d7
 80125ae:	eb01 02c3 	add.w	r2, r1, r3, lsl #3
 80125b2:	eea0 5b04 	vfma.f64	d5, d0, d4
 80125b6:	ed91 4b0e 	vldr	d4, [r1, #56]	; 0x38
 80125ba:	eea6 7b05 	vfma.f64	d7, d6, d5
 80125be:	ee26 6b06 	vmul.f64	d6, d6, d6
 80125c2:	ed91 5b0c 	vldr	d5, [r1, #48]	; 0x30
 80125c6:	f851 c033 	ldr.w	ip, [r1, r3, lsl #3]
 80125ca:	f8d2 e004 	ldr.w	lr, [r2, #4]
 80125ce:	eea0 5b04 	vfma.f64	d5, d0, d4
 80125d2:	1940      	adds	r0, r0, r5
 80125d4:	2700      	movs	r7, #0
 80125d6:	eb17 020c 	adds.w	r2, r7, ip
 80125da:	eb0e 3340 	add.w	r3, lr, r0, lsl #13
 80125de:	eea6 7b05 	vfma.f64	d7, d6, d5
 80125e2:	2e00      	cmp	r6, #0
 80125e4:	d15f      	bne.n	80126a6 <pow+0x476>
 80125e6:	42bd      	cmp	r5, r7
 80125e8:	db13      	blt.n	8012612 <pow+0x3e2>
 80125ea:	f103 4140 	add.w	r1, r3, #3221225472	; 0xc0000000
 80125ee:	f501 0170 	add.w	r1, r1, #15728640	; 0xf00000
 80125f2:	4610      	mov	r0, r2
 80125f4:	ec41 0b10 	vmov	d0, r0, r1
 80125f8:	eea7 0b00 	vfma.f64	d0, d7, d0
 80125fc:	ed9f 7b2e 	vldr	d7, [pc, #184]	; 80126b8 <pow+0x488>
 8012600:	ee20 0b07 	vmul.f64	d0, d0, d7
 8012604:	b006      	add	sp, #24
 8012606:	ecbd 8b0a 	vpop	{d8-d12}
 801260a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801260e:	f000 ba1f 	b.w	8012a50 <__math_check_oflow>
 8012612:	f103 517f 	add.w	r1, r3, #1069547520	; 0x3fc00000
 8012616:	f501 1100 	add.w	r1, r1, #2097152	; 0x200000
 801261a:	4610      	mov	r0, r2
 801261c:	ec41 0b15 	vmov	d5, r0, r1
 8012620:	eeb7 4b00 	vmov.f64	d4, #112	; 0x3f800000  1.0
 8012624:	ee27 6b05 	vmul.f64	d6, d7, d5
 8012628:	ee35 7b06 	vadd.f64	d7, d5, d6
 801262c:	eeb0 3bc7 	vabs.f64	d3, d7
 8012630:	eeb4 3bc4 	vcmpe.f64	d3, d4
 8012634:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012638:	ed9f 0b21 	vldr	d0, [pc, #132]	; 80126c0 <pow+0x490>
 801263c:	d52a      	bpl.n	8012694 <pow+0x464>
 801263e:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 8012642:	ee35 5b47 	vsub.f64	d5, d5, d7
 8012646:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801264a:	eebf 3b00 	vmov.f64	d3, #240	; 0xbf800000 -1.0
 801264e:	ee35 6b06 	vadd.f64	d6, d5, d6
 8012652:	bf48      	it	mi
 8012654:	eeb0 4b43 	vmovmi.f64	d4, d3
 8012658:	ee37 3b04 	vadd.f64	d3, d7, d4
 801265c:	ee34 5b43 	vsub.f64	d5, d4, d3
 8012660:	ee35 7b07 	vadd.f64	d7, d5, d7
 8012664:	ee37 7b06 	vadd.f64	d7, d7, d6
 8012668:	ee37 7b03 	vadd.f64	d7, d7, d3
 801266c:	ee37 7b44 	vsub.f64	d7, d7, d4
 8012670:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8012674:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012678:	d104      	bne.n	8012684 <pow+0x454>
 801267a:	4632      	mov	r2, r6
 801267c:	f001 4300 	and.w	r3, r1, #2147483648	; 0x80000000
 8012680:	ec43 2b17 	vmov	d7, r2, r3
 8012684:	ed8d 0b02 	vstr	d0, [sp, #8]
 8012688:	ed9d 6b02 	vldr	d6, [sp, #8]
 801268c:	ee26 6b00 	vmul.f64	d6, d6, d0
 8012690:	ed8d 6b04 	vstr	d6, [sp, #16]
 8012694:	ee27 0b00 	vmul.f64	d0, d7, d0
 8012698:	b006      	add	sp, #24
 801269a:	ecbd 8b0a 	vpop	{d8-d12}
 801269e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80126a2:	f000 b9cc 	b.w	8012a3e <__math_check_uflow>
 80126a6:	ec43 2b10 	vmov	d0, r2, r3
 80126aa:	eea7 0b00 	vfma.f64	d0, d7, d0
 80126ae:	e628      	b.n	8012302 <pow+0xd2>
 80126b0:	ed9f 0b05 	vldr	d0, [pc, #20]	; 80126c8 <pow+0x498>
 80126b4:	e625      	b.n	8012302 <pow+0xd2>
 80126b6:	bf00      	nop
 80126b8:	00000000 	.word	0x00000000
 80126bc:	7f000000 	.word	0x7f000000
 80126c0:	00000000 	.word	0x00000000
 80126c4:	00100000 	.word	0x00100000
	...
 80126d0:	08014090 	.word	0x08014090

080126d4 <asin>:
 80126d4:	b508      	push	{r3, lr}
 80126d6:	ed2d 8b04 	vpush	{d8-d9}
 80126da:	eeb0 8b40 	vmov.f64	d8, d0
 80126de:	f000 f847 	bl	8012770 <__ieee754_asin>
 80126e2:	eeb4 8b48 	vcmp.f64	d8, d8
 80126e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80126ea:	eeb0 9b40 	vmov.f64	d9, d0
 80126ee:	d615      	bvs.n	801271c <asin+0x48>
 80126f0:	eeb0 0b48 	vmov.f64	d0, d8
 80126f4:	f000 f9c0 	bl	8012a78 <fabs>
 80126f8:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
 80126fc:	eeb4 0bc7 	vcmpe.f64	d0, d7
 8012700:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012704:	dd0a      	ble.n	801271c <asin+0x48>
 8012706:	f7fc fec7 	bl	800f498 <__errno>
 801270a:	ecbd 8b04 	vpop	{d8-d9}
 801270e:	2321      	movs	r3, #33	; 0x21
 8012710:	6003      	str	r3, [r0, #0]
 8012712:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012716:	4804      	ldr	r0, [pc, #16]	; (8012728 <asin+0x54>)
 8012718:	f7fe bdc6 	b.w	80112a8 <nan>
 801271c:	eeb0 0b49 	vmov.f64	d0, d9
 8012720:	ecbd 8b04 	vpop	{d8-d9}
 8012724:	bd08      	pop	{r3, pc}
 8012726:	bf00      	nop
 8012728:	08012eaf 	.word	0x08012eaf
 801272c:	00000000 	.word	0x00000000

08012730 <sqrt>:
 8012730:	b508      	push	{r3, lr}
 8012732:	ed2d 8b04 	vpush	{d8-d9}
 8012736:	eeb0 8b40 	vmov.f64	d8, d0
 801273a:	f000 f927 	bl	801298c <__ieee754_sqrt>
 801273e:	eeb4 8b48 	vcmp.f64	d8, d8
 8012742:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012746:	d60c      	bvs.n	8012762 <sqrt+0x32>
 8012748:	ed9f 9b07 	vldr	d9, [pc, #28]	; 8012768 <sqrt+0x38>
 801274c:	eeb4 8bc9 	vcmpe.f64	d8, d9
 8012750:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012754:	d505      	bpl.n	8012762 <sqrt+0x32>
 8012756:	f7fc fe9f 	bl	800f498 <__errno>
 801275a:	ee89 0b09 	vdiv.f64	d0, d9, d9
 801275e:	2321      	movs	r3, #33	; 0x21
 8012760:	6003      	str	r3, [r0, #0]
 8012762:	ecbd 8b04 	vpop	{d8-d9}
 8012766:	bd08      	pop	{r3, pc}
	...

08012770 <__ieee754_asin>:
 8012770:	b538      	push	{r3, r4, r5, lr}
 8012772:	ee10 5a90 	vmov	r5, s1
 8012776:	4b82      	ldr	r3, [pc, #520]	; (8012980 <__ieee754_asin+0x210>)
 8012778:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 801277c:	429c      	cmp	r4, r3
 801277e:	ed2d 8b06 	vpush	{d8-d10}
 8012782:	dd19      	ble.n	80127b8 <__ieee754_asin+0x48>
 8012784:	ee10 3a10 	vmov	r3, s0
 8012788:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 801278c:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8012790:	4323      	orrs	r3, r4
 8012792:	d10c      	bne.n	80127ae <__ieee754_asin+0x3e>
 8012794:	ed9f 7b5c 	vldr	d7, [pc, #368]	; 8012908 <__ieee754_asin+0x198>
 8012798:	ed9f 6b5d 	vldr	d6, [pc, #372]	; 8012910 <__ieee754_asin+0x1a0>
 801279c:	ee20 7b07 	vmul.f64	d7, d0, d7
 80127a0:	eea0 7b06 	vfma.f64	d7, d0, d6
 80127a4:	eeb0 0b47 	vmov.f64	d0, d7
 80127a8:	ecbd 8b06 	vpop	{d8-d10}
 80127ac:	bd38      	pop	{r3, r4, r5, pc}
 80127ae:	ee30 7b40 	vsub.f64	d7, d0, d0
 80127b2:	ee87 0b07 	vdiv.f64	d0, d7, d7
 80127b6:	e7f7      	b.n	80127a8 <__ieee754_asin+0x38>
 80127b8:	4b72      	ldr	r3, [pc, #456]	; (8012984 <__ieee754_asin+0x214>)
 80127ba:	eeb7 9b00 	vmov.f64	d9, #112	; 0x3f800000  1.0
 80127be:	429c      	cmp	r4, r3
 80127c0:	dc0b      	bgt.n	80127da <__ieee754_asin+0x6a>
 80127c2:	f1b4 5f79 	cmp.w	r4, #1044381696	; 0x3e400000
 80127c6:	da52      	bge.n	801286e <__ieee754_asin+0xfe>
 80127c8:	ed9f 7b53 	vldr	d7, [pc, #332]	; 8012918 <__ieee754_asin+0x1a8>
 80127cc:	ee30 7b07 	vadd.f64	d7, d0, d7
 80127d0:	eeb4 7bc9 	vcmpe.f64	d7, d9
 80127d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80127d8:	dce6      	bgt.n	80127a8 <__ieee754_asin+0x38>
 80127da:	eeb6 8b00 	vmov.f64	d8, #96	; 0x3f000000  0.5
 80127de:	f000 f94b 	bl	8012a78 <fabs>
 80127e2:	ed9f 7b4f 	vldr	d7, [pc, #316]	; 8012920 <__ieee754_asin+0x1b0>
 80127e6:	ee39 0b40 	vsub.f64	d0, d9, d0
 80127ea:	ee20 8b08 	vmul.f64	d8, d0, d8
 80127ee:	ed9f 6b4e 	vldr	d6, [pc, #312]	; 8012928 <__ieee754_asin+0x1b8>
 80127f2:	eeb0 0b48 	vmov.f64	d0, d8
 80127f6:	eea8 6b07 	vfma.f64	d6, d8, d7
 80127fa:	ed9f 7b4d 	vldr	d7, [pc, #308]	; 8012930 <__ieee754_asin+0x1c0>
 80127fe:	eea6 7b08 	vfma.f64	d7, d6, d8
 8012802:	ed9f 6b4d 	vldr	d6, [pc, #308]	; 8012938 <__ieee754_asin+0x1c8>
 8012806:	ed9f ab4e 	vldr	d10, [pc, #312]	; 8012940 <__ieee754_asin+0x1d0>
 801280a:	eea7 6b08 	vfma.f64	d6, d7, d8
 801280e:	ed9f 7b4e 	vldr	d7, [pc, #312]	; 8012948 <__ieee754_asin+0x1d8>
 8012812:	eea6 7b08 	vfma.f64	d7, d6, d8
 8012816:	ed9f 6b4e 	vldr	d6, [pc, #312]	; 8012950 <__ieee754_asin+0x1e0>
 801281a:	eea7 ab08 	vfma.f64	d10, d7, d8
 801281e:	ee2a ab08 	vmul.f64	d10, d10, d8
 8012822:	ed9f 7b4d 	vldr	d7, [pc, #308]	; 8012958 <__ieee754_asin+0x1e8>
 8012826:	eea8 7b06 	vfma.f64	d7, d8, d6
 801282a:	ed9f 6b4d 	vldr	d6, [pc, #308]	; 8012960 <__ieee754_asin+0x1f0>
 801282e:	eea7 6b08 	vfma.f64	d6, d7, d8
 8012832:	ed9f 7b4d 	vldr	d7, [pc, #308]	; 8012968 <__ieee754_asin+0x1f8>
 8012836:	eea6 7b08 	vfma.f64	d7, d6, d8
 801283a:	eea7 9b08 	vfma.f64	d9, d7, d8
 801283e:	f000 f8a5 	bl	801298c <__ieee754_sqrt>
 8012842:	ee8a 5b09 	vdiv.f64	d5, d10, d9
 8012846:	eeb0 4b00 	vmov.f64	d4, #0	; 0x40000000  2.0
 801284a:	4b4f      	ldr	r3, [pc, #316]	; (8012988 <__ieee754_asin+0x218>)
 801284c:	429c      	cmp	r4, r3
 801284e:	dd3d      	ble.n	80128cc <__ieee754_asin+0x15c>
 8012850:	eea0 0b05 	vfma.f64	d0, d0, d5
 8012854:	ed9f 7b46 	vldr	d7, [pc, #280]	; 8012970 <__ieee754_asin+0x200>
 8012858:	eea0 7b04 	vfma.f64	d7, d0, d4
 801285c:	ed9f 0b2c 	vldr	d0, [pc, #176]	; 8012910 <__ieee754_asin+0x1a0>
 8012860:	ee30 0b47 	vsub.f64	d0, d0, d7
 8012864:	2d00      	cmp	r5, #0
 8012866:	bfd8      	it	le
 8012868:	eeb1 0b40 	vnegle.f64	d0, d0
 801286c:	e79c      	b.n	80127a8 <__ieee754_asin+0x38>
 801286e:	ed9f 5b2c 	vldr	d5, [pc, #176]	; 8012920 <__ieee754_asin+0x1b0>
 8012872:	ee20 7b00 	vmul.f64	d7, d0, d0
 8012876:	ed9f 6b2c 	vldr	d6, [pc, #176]	; 8012928 <__ieee754_asin+0x1b8>
 801287a:	eea7 6b05 	vfma.f64	d6, d7, d5
 801287e:	ed9f 5b2c 	vldr	d5, [pc, #176]	; 8012930 <__ieee754_asin+0x1c0>
 8012882:	eea6 5b07 	vfma.f64	d5, d6, d7
 8012886:	ed9f 6b2c 	vldr	d6, [pc, #176]	; 8012938 <__ieee754_asin+0x1c8>
 801288a:	eea5 6b07 	vfma.f64	d6, d5, d7
 801288e:	ed9f 5b2e 	vldr	d5, [pc, #184]	; 8012948 <__ieee754_asin+0x1d8>
 8012892:	eea6 5b07 	vfma.f64	d5, d6, d7
 8012896:	ed9f 6b2a 	vldr	d6, [pc, #168]	; 8012940 <__ieee754_asin+0x1d0>
 801289a:	ed9f 4b2d 	vldr	d4, [pc, #180]	; 8012950 <__ieee754_asin+0x1e0>
 801289e:	eea5 6b07 	vfma.f64	d6, d5, d7
 80128a2:	ee26 6b07 	vmul.f64	d6, d6, d7
 80128a6:	ed9f 5b2c 	vldr	d5, [pc, #176]	; 8012958 <__ieee754_asin+0x1e8>
 80128aa:	eea7 5b04 	vfma.f64	d5, d7, d4
 80128ae:	ed9f 4b2c 	vldr	d4, [pc, #176]	; 8012960 <__ieee754_asin+0x1f0>
 80128b2:	eea5 4b07 	vfma.f64	d4, d5, d7
 80128b6:	ed9f 5b2c 	vldr	d5, [pc, #176]	; 8012968 <__ieee754_asin+0x1f8>
 80128ba:	eea4 5b07 	vfma.f64	d5, d4, d7
 80128be:	eea5 9b07 	vfma.f64	d9, d5, d7
 80128c2:	ee86 7b09 	vdiv.f64	d7, d6, d9
 80128c6:	eea0 0b07 	vfma.f64	d0, d0, d7
 80128ca:	e76d      	b.n	80127a8 <__ieee754_asin+0x38>
 80128cc:	ec53 2b10 	vmov	r2, r3, d0
 80128d0:	2200      	movs	r2, #0
 80128d2:	ec43 2b16 	vmov	d6, r2, r3
 80128d6:	ee30 7b06 	vadd.f64	d7, d0, d6
 80128da:	eea6 8b46 	vfms.f64	d8, d6, d6
 80128de:	ee88 3b07 	vdiv.f64	d3, d8, d7
 80128e2:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8012908 <__ieee754_asin+0x198>
 80128e6:	ee30 0b00 	vadd.f64	d0, d0, d0
 80128ea:	eea3 7b44 	vfms.f64	d7, d3, d4
 80128ee:	ee90 7b05 	vfnms.f64	d7, d0, d5
 80128f2:	ed9f 5b21 	vldr	d5, [pc, #132]	; 8012978 <__ieee754_asin+0x208>
 80128f6:	eeb0 0b45 	vmov.f64	d0, d5
 80128fa:	eea6 0b44 	vfms.f64	d0, d6, d4
 80128fe:	ee37 0b40 	vsub.f64	d0, d7, d0
 8012902:	ee35 0b40 	vsub.f64	d0, d5, d0
 8012906:	e7ad      	b.n	8012864 <__ieee754_asin+0xf4>
 8012908:	33145c07 	.word	0x33145c07
 801290c:	3c91a626 	.word	0x3c91a626
 8012910:	54442d18 	.word	0x54442d18
 8012914:	3ff921fb 	.word	0x3ff921fb
 8012918:	8800759c 	.word	0x8800759c
 801291c:	7e37e43c 	.word	0x7e37e43c
 8012920:	0dfdf709 	.word	0x0dfdf709
 8012924:	3f023de1 	.word	0x3f023de1
 8012928:	7501b288 	.word	0x7501b288
 801292c:	3f49efe0 	.word	0x3f49efe0
 8012930:	b5688f3b 	.word	0xb5688f3b
 8012934:	bfa48228 	.word	0xbfa48228
 8012938:	0e884455 	.word	0x0e884455
 801293c:	3fc9c155 	.word	0x3fc9c155
 8012940:	55555555 	.word	0x55555555
 8012944:	3fc55555 	.word	0x3fc55555
 8012948:	03eb6f7d 	.word	0x03eb6f7d
 801294c:	bfd4d612 	.word	0xbfd4d612
 8012950:	b12e9282 	.word	0xb12e9282
 8012954:	3fb3b8c5 	.word	0x3fb3b8c5
 8012958:	1b8d0159 	.word	0x1b8d0159
 801295c:	bfe6066c 	.word	0xbfe6066c
 8012960:	9c598ac8 	.word	0x9c598ac8
 8012964:	40002ae5 	.word	0x40002ae5
 8012968:	1c8a2d4b 	.word	0x1c8a2d4b
 801296c:	c0033a27 	.word	0xc0033a27
 8012970:	33145c07 	.word	0x33145c07
 8012974:	bc91a626 	.word	0xbc91a626
 8012978:	54442d18 	.word	0x54442d18
 801297c:	3fe921fb 	.word	0x3fe921fb
 8012980:	3fefffff 	.word	0x3fefffff
 8012984:	3fdfffff 	.word	0x3fdfffff
 8012988:	3fef3332 	.word	0x3fef3332

0801298c <__ieee754_sqrt>:
 801298c:	eeb1 0bc0 	vsqrt.f64	d0, d0
 8012990:	4770      	bx	lr

08012992 <with_errno>:
 8012992:	b513      	push	{r0, r1, r4, lr}
 8012994:	4604      	mov	r4, r0
 8012996:	ed8d 0b00 	vstr	d0, [sp]
 801299a:	f7fc fd7d 	bl	800f498 <__errno>
 801299e:	ed9d 0b00 	vldr	d0, [sp]
 80129a2:	6004      	str	r4, [r0, #0]
 80129a4:	b002      	add	sp, #8
 80129a6:	bd10      	pop	{r4, pc}

080129a8 <xflow>:
 80129a8:	b082      	sub	sp, #8
 80129aa:	b158      	cbz	r0, 80129c4 <xflow+0x1c>
 80129ac:	eeb1 7b40 	vneg.f64	d7, d0
 80129b0:	ed8d 7b00 	vstr	d7, [sp]
 80129b4:	ed9d 7b00 	vldr	d7, [sp]
 80129b8:	2022      	movs	r0, #34	; 0x22
 80129ba:	ee20 0b07 	vmul.f64	d0, d0, d7
 80129be:	b002      	add	sp, #8
 80129c0:	f7ff bfe7 	b.w	8012992 <with_errno>
 80129c4:	eeb0 7b40 	vmov.f64	d7, d0
 80129c8:	e7f2      	b.n	80129b0 <xflow+0x8>
 80129ca:	0000      	movs	r0, r0
 80129cc:	0000      	movs	r0, r0
	...

080129d0 <__math_uflow>:
 80129d0:	ed9f 0b01 	vldr	d0, [pc, #4]	; 80129d8 <__math_uflow+0x8>
 80129d4:	f7ff bfe8 	b.w	80129a8 <xflow>
 80129d8:	00000000 	.word	0x00000000
 80129dc:	10000000 	.word	0x10000000

080129e0 <__math_oflow>:
 80129e0:	ed9f 0b01 	vldr	d0, [pc, #4]	; 80129e8 <__math_oflow+0x8>
 80129e4:	f7ff bfe0 	b.w	80129a8 <xflow>
 80129e8:	00000000 	.word	0x00000000
 80129ec:	70000000 	.word	0x70000000

080129f0 <__math_divzero>:
 80129f0:	b082      	sub	sp, #8
 80129f2:	2800      	cmp	r0, #0
 80129f4:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80129f8:	eebf 7b00 	vmov.f64	d7, #240	; 0xbf800000 -1.0
 80129fc:	fe06 7b07 	vseleq.f64	d7, d6, d7
 8012a00:	ed8d 7b00 	vstr	d7, [sp]
 8012a04:	ed9d 0b00 	vldr	d0, [sp]
 8012a08:	ed9f 7b03 	vldr	d7, [pc, #12]	; 8012a18 <__math_divzero+0x28>
 8012a0c:	2022      	movs	r0, #34	; 0x22
 8012a0e:	ee80 0b07 	vdiv.f64	d0, d0, d7
 8012a12:	b002      	add	sp, #8
 8012a14:	f7ff bfbd 	b.w	8012992 <with_errno>
	...

08012a20 <__math_invalid>:
 8012a20:	eeb0 7b40 	vmov.f64	d7, d0
 8012a24:	eeb4 7b47 	vcmp.f64	d7, d7
 8012a28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a2c:	ee30 6b40 	vsub.f64	d6, d0, d0
 8012a30:	ee86 0b06 	vdiv.f64	d0, d6, d6
 8012a34:	d602      	bvs.n	8012a3c <__math_invalid+0x1c>
 8012a36:	2021      	movs	r0, #33	; 0x21
 8012a38:	f7ff bfab 	b.w	8012992 <with_errno>
 8012a3c:	4770      	bx	lr

08012a3e <__math_check_uflow>:
 8012a3e:	eeb5 0b40 	vcmp.f64	d0, #0.0
 8012a42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a46:	d102      	bne.n	8012a4e <__math_check_uflow+0x10>
 8012a48:	2022      	movs	r0, #34	; 0x22
 8012a4a:	f7ff bfa2 	b.w	8012992 <with_errno>
 8012a4e:	4770      	bx	lr

08012a50 <__math_check_oflow>:
 8012a50:	ed9f 6b07 	vldr	d6, [pc, #28]	; 8012a70 <__math_check_oflow+0x20>
 8012a54:	eeb0 7bc0 	vabs.f64	d7, d0
 8012a58:	eeb4 7b46 	vcmp.f64	d7, d6
 8012a5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a60:	dd02      	ble.n	8012a68 <__math_check_oflow+0x18>
 8012a62:	2022      	movs	r0, #34	; 0x22
 8012a64:	f7ff bf95 	b.w	8012992 <with_errno>
 8012a68:	4770      	bx	lr
 8012a6a:	bf00      	nop
 8012a6c:	f3af 8000 	nop.w
 8012a70:	ffffffff 	.word	0xffffffff
 8012a74:	7fefffff 	.word	0x7fefffff

08012a78 <fabs>:
 8012a78:	ec51 0b10 	vmov	r0, r1, d0
 8012a7c:	ee10 2a10 	vmov	r2, s0
 8012a80:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8012a84:	ec43 2b10 	vmov	d0, r2, r3
 8012a88:	4770      	bx	lr
	...

08012a8c <_init>:
 8012a8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012a8e:	bf00      	nop
 8012a90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8012a92:	bc08      	pop	{r3}
 8012a94:	469e      	mov	lr, r3
 8012a96:	4770      	bx	lr

08012a98 <_fini>:
 8012a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012a9a:	bf00      	nop
 8012a9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8012a9e:	bc08      	pop	{r3}
 8012aa0:	469e      	mov	lr, r3
 8012aa2:	4770      	bx	lr
