
delta.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00012044  080002a0  080002a0  000102a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001d48  080122e8  080122e8  000222e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08014030  08014030  000302d4  2**0
                  CONTENTS
  4 .ARM          00000008  08014030  08014030  00024030  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08014038  08014038  000302d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08014038  08014038  00024038  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0801403c  0801403c  0002403c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000002d4  24000000  08014040  00030000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000009c8  240002d8  08014314  000302d8  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  24000ca0  08014314  00030ca0  2**0
                  ALLOC
 11 .ARM.attributes 0000002e  00000000  00000000  000302d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001c1fe  00000000  00000000  00030302  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000366b  00000000  00000000  0004c500  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001330  00000000  00000000  0004fb70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000011a8  00000000  00000000  00050ea0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000395d2  00000000  00000000  00052048  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001e05a  00000000  00000000  0008b61a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    001656cc  00000000  00000000  000a9674  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0020ed40  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00006240  00000000  00000000  0020ed90  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002a0 <__do_global_dtors_aux>:
 80002a0:	b510      	push	{r4, lr}
 80002a2:	4c05      	ldr	r4, [pc, #20]	; (80002b8 <__do_global_dtors_aux+0x18>)
 80002a4:	7823      	ldrb	r3, [r4, #0]
 80002a6:	b933      	cbnz	r3, 80002b6 <__do_global_dtors_aux+0x16>
 80002a8:	4b04      	ldr	r3, [pc, #16]	; (80002bc <__do_global_dtors_aux+0x1c>)
 80002aa:	b113      	cbz	r3, 80002b2 <__do_global_dtors_aux+0x12>
 80002ac:	4804      	ldr	r0, [pc, #16]	; (80002c0 <__do_global_dtors_aux+0x20>)
 80002ae:	f3af 8000 	nop.w
 80002b2:	2301      	movs	r3, #1
 80002b4:	7023      	strb	r3, [r4, #0]
 80002b6:	bd10      	pop	{r4, pc}
 80002b8:	240002d8 	.word	0x240002d8
 80002bc:	00000000 	.word	0x00000000
 80002c0:	080122cc 	.word	0x080122cc

080002c4 <frame_dummy>:
 80002c4:	b508      	push	{r3, lr}
 80002c6:	4b03      	ldr	r3, [pc, #12]	; (80002d4 <frame_dummy+0x10>)
 80002c8:	b11b      	cbz	r3, 80002d2 <frame_dummy+0xe>
 80002ca:	4903      	ldr	r1, [pc, #12]	; (80002d8 <frame_dummy+0x14>)
 80002cc:	4803      	ldr	r0, [pc, #12]	; (80002dc <frame_dummy+0x18>)
 80002ce:	f3af 8000 	nop.w
 80002d2:	bd08      	pop	{r3, pc}
 80002d4:	00000000 	.word	0x00000000
 80002d8:	240002dc 	.word	0x240002dc
 80002dc:	080122cc 	.word	0x080122cc

080002e0 <strlen>:
 80002e0:	4603      	mov	r3, r0
 80002e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002e6:	2a00      	cmp	r2, #0
 80002e8:	d1fb      	bne.n	80002e2 <strlen+0x2>
 80002ea:	1a18      	subs	r0, r3, r0
 80002ec:	3801      	subs	r0, #1
 80002ee:	4770      	bx	lr

080002f0 <memchr>:
 80002f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002f4:	2a10      	cmp	r2, #16
 80002f6:	db2b      	blt.n	8000350 <memchr+0x60>
 80002f8:	f010 0f07 	tst.w	r0, #7
 80002fc:	d008      	beq.n	8000310 <memchr+0x20>
 80002fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000302:	3a01      	subs	r2, #1
 8000304:	428b      	cmp	r3, r1
 8000306:	d02d      	beq.n	8000364 <memchr+0x74>
 8000308:	f010 0f07 	tst.w	r0, #7
 800030c:	b342      	cbz	r2, 8000360 <memchr+0x70>
 800030e:	d1f6      	bne.n	80002fe <memchr+0xe>
 8000310:	b4f0      	push	{r4, r5, r6, r7}
 8000312:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000316:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800031a:	f022 0407 	bic.w	r4, r2, #7
 800031e:	f07f 0700 	mvns.w	r7, #0
 8000322:	2300      	movs	r3, #0
 8000324:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000328:	3c08      	subs	r4, #8
 800032a:	ea85 0501 	eor.w	r5, r5, r1
 800032e:	ea86 0601 	eor.w	r6, r6, r1
 8000332:	fa85 f547 	uadd8	r5, r5, r7
 8000336:	faa3 f587 	sel	r5, r3, r7
 800033a:	fa86 f647 	uadd8	r6, r6, r7
 800033e:	faa5 f687 	sel	r6, r5, r7
 8000342:	b98e      	cbnz	r6, 8000368 <memchr+0x78>
 8000344:	d1ee      	bne.n	8000324 <memchr+0x34>
 8000346:	bcf0      	pop	{r4, r5, r6, r7}
 8000348:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800034c:	f002 0207 	and.w	r2, r2, #7
 8000350:	b132      	cbz	r2, 8000360 <memchr+0x70>
 8000352:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000356:	3a01      	subs	r2, #1
 8000358:	ea83 0301 	eor.w	r3, r3, r1
 800035c:	b113      	cbz	r3, 8000364 <memchr+0x74>
 800035e:	d1f8      	bne.n	8000352 <memchr+0x62>
 8000360:	2000      	movs	r0, #0
 8000362:	4770      	bx	lr
 8000364:	3801      	subs	r0, #1
 8000366:	4770      	bx	lr
 8000368:	2d00      	cmp	r5, #0
 800036a:	bf06      	itte	eq
 800036c:	4635      	moveq	r5, r6
 800036e:	3803      	subeq	r0, #3
 8000370:	3807      	subne	r0, #7
 8000372:	f015 0f01 	tst.w	r5, #1
 8000376:	d107      	bne.n	8000388 <memchr+0x98>
 8000378:	3001      	adds	r0, #1
 800037a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800037e:	bf02      	ittt	eq
 8000380:	3001      	addeq	r0, #1
 8000382:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000386:	3001      	addeq	r0, #1
 8000388:	bcf0      	pop	{r4, r5, r6, r7}
 800038a:	3801      	subs	r0, #1
 800038c:	4770      	bx	lr
 800038e:	bf00      	nop

08000390 <__aeabi_drsub>:
 8000390:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000394:	e002      	b.n	800039c <__adddf3>
 8000396:	bf00      	nop

08000398 <__aeabi_dsub>:
 8000398:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800039c <__adddf3>:
 800039c:	b530      	push	{r4, r5, lr}
 800039e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80003a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80003a6:	ea94 0f05 	teq	r4, r5
 80003aa:	bf08      	it	eq
 80003ac:	ea90 0f02 	teqeq	r0, r2
 80003b0:	bf1f      	itttt	ne
 80003b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80003b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80003ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80003be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003c2:	f000 80e2 	beq.w	800058a <__adddf3+0x1ee>
 80003c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80003ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80003ce:	bfb8      	it	lt
 80003d0:	426d      	neglt	r5, r5
 80003d2:	dd0c      	ble.n	80003ee <__adddf3+0x52>
 80003d4:	442c      	add	r4, r5
 80003d6:	ea80 0202 	eor.w	r2, r0, r2
 80003da:	ea81 0303 	eor.w	r3, r1, r3
 80003de:	ea82 0000 	eor.w	r0, r2, r0
 80003e2:	ea83 0101 	eor.w	r1, r3, r1
 80003e6:	ea80 0202 	eor.w	r2, r0, r2
 80003ea:	ea81 0303 	eor.w	r3, r1, r3
 80003ee:	2d36      	cmp	r5, #54	; 0x36
 80003f0:	bf88      	it	hi
 80003f2:	bd30      	pophi	{r4, r5, pc}
 80003f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80003f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80003fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000400:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000404:	d002      	beq.n	800040c <__adddf3+0x70>
 8000406:	4240      	negs	r0, r0
 8000408:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800040c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000410:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000414:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000418:	d002      	beq.n	8000420 <__adddf3+0x84>
 800041a:	4252      	negs	r2, r2
 800041c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000420:	ea94 0f05 	teq	r4, r5
 8000424:	f000 80a7 	beq.w	8000576 <__adddf3+0x1da>
 8000428:	f1a4 0401 	sub.w	r4, r4, #1
 800042c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000430:	db0d      	blt.n	800044e <__adddf3+0xb2>
 8000432:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000436:	fa22 f205 	lsr.w	r2, r2, r5
 800043a:	1880      	adds	r0, r0, r2
 800043c:	f141 0100 	adc.w	r1, r1, #0
 8000440:	fa03 f20e 	lsl.w	r2, r3, lr
 8000444:	1880      	adds	r0, r0, r2
 8000446:	fa43 f305 	asr.w	r3, r3, r5
 800044a:	4159      	adcs	r1, r3
 800044c:	e00e      	b.n	800046c <__adddf3+0xd0>
 800044e:	f1a5 0520 	sub.w	r5, r5, #32
 8000452:	f10e 0e20 	add.w	lr, lr, #32
 8000456:	2a01      	cmp	r2, #1
 8000458:	fa03 fc0e 	lsl.w	ip, r3, lr
 800045c:	bf28      	it	cs
 800045e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000462:	fa43 f305 	asr.w	r3, r3, r5
 8000466:	18c0      	adds	r0, r0, r3
 8000468:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800046c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000470:	d507      	bpl.n	8000482 <__adddf3+0xe6>
 8000472:	f04f 0e00 	mov.w	lr, #0
 8000476:	f1dc 0c00 	rsbs	ip, ip, #0
 800047a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800047e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000482:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000486:	d31b      	bcc.n	80004c0 <__adddf3+0x124>
 8000488:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800048c:	d30c      	bcc.n	80004a8 <__adddf3+0x10c>
 800048e:	0849      	lsrs	r1, r1, #1
 8000490:	ea5f 0030 	movs.w	r0, r0, rrx
 8000494:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000498:	f104 0401 	add.w	r4, r4, #1
 800049c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80004a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80004a4:	f080 809a 	bcs.w	80005dc <__adddf3+0x240>
 80004a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80004ac:	bf08      	it	eq
 80004ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80004b2:	f150 0000 	adcs.w	r0, r0, #0
 80004b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80004ba:	ea41 0105 	orr.w	r1, r1, r5
 80004be:	bd30      	pop	{r4, r5, pc}
 80004c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80004c4:	4140      	adcs	r0, r0
 80004c6:	eb41 0101 	adc.w	r1, r1, r1
 80004ca:	3c01      	subs	r4, #1
 80004cc:	bf28      	it	cs
 80004ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80004d2:	d2e9      	bcs.n	80004a8 <__adddf3+0x10c>
 80004d4:	f091 0f00 	teq	r1, #0
 80004d8:	bf04      	itt	eq
 80004da:	4601      	moveq	r1, r0
 80004dc:	2000      	moveq	r0, #0
 80004de:	fab1 f381 	clz	r3, r1
 80004e2:	bf08      	it	eq
 80004e4:	3320      	addeq	r3, #32
 80004e6:	f1a3 030b 	sub.w	r3, r3, #11
 80004ea:	f1b3 0220 	subs.w	r2, r3, #32
 80004ee:	da0c      	bge.n	800050a <__adddf3+0x16e>
 80004f0:	320c      	adds	r2, #12
 80004f2:	dd08      	ble.n	8000506 <__adddf3+0x16a>
 80004f4:	f102 0c14 	add.w	ip, r2, #20
 80004f8:	f1c2 020c 	rsb	r2, r2, #12
 80004fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000500:	fa21 f102 	lsr.w	r1, r1, r2
 8000504:	e00c      	b.n	8000520 <__adddf3+0x184>
 8000506:	f102 0214 	add.w	r2, r2, #20
 800050a:	bfd8      	it	le
 800050c:	f1c2 0c20 	rsble	ip, r2, #32
 8000510:	fa01 f102 	lsl.w	r1, r1, r2
 8000514:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000518:	bfdc      	itt	le
 800051a:	ea41 010c 	orrle.w	r1, r1, ip
 800051e:	4090      	lslle	r0, r2
 8000520:	1ae4      	subs	r4, r4, r3
 8000522:	bfa2      	ittt	ge
 8000524:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000528:	4329      	orrge	r1, r5
 800052a:	bd30      	popge	{r4, r5, pc}
 800052c:	ea6f 0404 	mvn.w	r4, r4
 8000530:	3c1f      	subs	r4, #31
 8000532:	da1c      	bge.n	800056e <__adddf3+0x1d2>
 8000534:	340c      	adds	r4, #12
 8000536:	dc0e      	bgt.n	8000556 <__adddf3+0x1ba>
 8000538:	f104 0414 	add.w	r4, r4, #20
 800053c:	f1c4 0220 	rsb	r2, r4, #32
 8000540:	fa20 f004 	lsr.w	r0, r0, r4
 8000544:	fa01 f302 	lsl.w	r3, r1, r2
 8000548:	ea40 0003 	orr.w	r0, r0, r3
 800054c:	fa21 f304 	lsr.w	r3, r1, r4
 8000550:	ea45 0103 	orr.w	r1, r5, r3
 8000554:	bd30      	pop	{r4, r5, pc}
 8000556:	f1c4 040c 	rsb	r4, r4, #12
 800055a:	f1c4 0220 	rsb	r2, r4, #32
 800055e:	fa20 f002 	lsr.w	r0, r0, r2
 8000562:	fa01 f304 	lsl.w	r3, r1, r4
 8000566:	ea40 0003 	orr.w	r0, r0, r3
 800056a:	4629      	mov	r1, r5
 800056c:	bd30      	pop	{r4, r5, pc}
 800056e:	fa21 f004 	lsr.w	r0, r1, r4
 8000572:	4629      	mov	r1, r5
 8000574:	bd30      	pop	{r4, r5, pc}
 8000576:	f094 0f00 	teq	r4, #0
 800057a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800057e:	bf06      	itte	eq
 8000580:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000584:	3401      	addeq	r4, #1
 8000586:	3d01      	subne	r5, #1
 8000588:	e74e      	b.n	8000428 <__adddf3+0x8c>
 800058a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800058e:	bf18      	it	ne
 8000590:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000594:	d029      	beq.n	80005ea <__adddf3+0x24e>
 8000596:	ea94 0f05 	teq	r4, r5
 800059a:	bf08      	it	eq
 800059c:	ea90 0f02 	teqeq	r0, r2
 80005a0:	d005      	beq.n	80005ae <__adddf3+0x212>
 80005a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80005a6:	bf04      	itt	eq
 80005a8:	4619      	moveq	r1, r3
 80005aa:	4610      	moveq	r0, r2
 80005ac:	bd30      	pop	{r4, r5, pc}
 80005ae:	ea91 0f03 	teq	r1, r3
 80005b2:	bf1e      	ittt	ne
 80005b4:	2100      	movne	r1, #0
 80005b6:	2000      	movne	r0, #0
 80005b8:	bd30      	popne	{r4, r5, pc}
 80005ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80005be:	d105      	bne.n	80005cc <__adddf3+0x230>
 80005c0:	0040      	lsls	r0, r0, #1
 80005c2:	4149      	adcs	r1, r1
 80005c4:	bf28      	it	cs
 80005c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80005ca:	bd30      	pop	{r4, r5, pc}
 80005cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80005d0:	bf3c      	itt	cc
 80005d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80005d6:	bd30      	popcc	{r4, r5, pc}
 80005d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80005e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80005e4:	f04f 0000 	mov.w	r0, #0
 80005e8:	bd30      	pop	{r4, r5, pc}
 80005ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005ee:	bf1a      	itte	ne
 80005f0:	4619      	movne	r1, r3
 80005f2:	4610      	movne	r0, r2
 80005f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80005f8:	bf1c      	itt	ne
 80005fa:	460b      	movne	r3, r1
 80005fc:	4602      	movne	r2, r0
 80005fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000602:	bf06      	itte	eq
 8000604:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000608:	ea91 0f03 	teqeq	r1, r3
 800060c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000610:	bd30      	pop	{r4, r5, pc}
 8000612:	bf00      	nop

08000614 <__aeabi_ui2d>:
 8000614:	f090 0f00 	teq	r0, #0
 8000618:	bf04      	itt	eq
 800061a:	2100      	moveq	r1, #0
 800061c:	4770      	bxeq	lr
 800061e:	b530      	push	{r4, r5, lr}
 8000620:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000624:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000628:	f04f 0500 	mov.w	r5, #0
 800062c:	f04f 0100 	mov.w	r1, #0
 8000630:	e750      	b.n	80004d4 <__adddf3+0x138>
 8000632:	bf00      	nop

08000634 <__aeabi_i2d>:
 8000634:	f090 0f00 	teq	r0, #0
 8000638:	bf04      	itt	eq
 800063a:	2100      	moveq	r1, #0
 800063c:	4770      	bxeq	lr
 800063e:	b530      	push	{r4, r5, lr}
 8000640:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000644:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000648:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800064c:	bf48      	it	mi
 800064e:	4240      	negmi	r0, r0
 8000650:	f04f 0100 	mov.w	r1, #0
 8000654:	e73e      	b.n	80004d4 <__adddf3+0x138>
 8000656:	bf00      	nop

08000658 <__aeabi_f2d>:
 8000658:	0042      	lsls	r2, r0, #1
 800065a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800065e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000662:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000666:	bf1f      	itttt	ne
 8000668:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800066c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000670:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000674:	4770      	bxne	lr
 8000676:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800067a:	bf08      	it	eq
 800067c:	4770      	bxeq	lr
 800067e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000682:	bf04      	itt	eq
 8000684:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000688:	4770      	bxeq	lr
 800068a:	b530      	push	{r4, r5, lr}
 800068c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000690:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000694:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000698:	e71c      	b.n	80004d4 <__adddf3+0x138>
 800069a:	bf00      	nop

0800069c <__aeabi_ul2d>:
 800069c:	ea50 0201 	orrs.w	r2, r0, r1
 80006a0:	bf08      	it	eq
 80006a2:	4770      	bxeq	lr
 80006a4:	b530      	push	{r4, r5, lr}
 80006a6:	f04f 0500 	mov.w	r5, #0
 80006aa:	e00a      	b.n	80006c2 <__aeabi_l2d+0x16>

080006ac <__aeabi_l2d>:
 80006ac:	ea50 0201 	orrs.w	r2, r0, r1
 80006b0:	bf08      	it	eq
 80006b2:	4770      	bxeq	lr
 80006b4:	b530      	push	{r4, r5, lr}
 80006b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80006ba:	d502      	bpl.n	80006c2 <__aeabi_l2d+0x16>
 80006bc:	4240      	negs	r0, r0
 80006be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80006c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80006c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80006ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80006ce:	f43f aed8 	beq.w	8000482 <__adddf3+0xe6>
 80006d2:	f04f 0203 	mov.w	r2, #3
 80006d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006da:	bf18      	it	ne
 80006dc:	3203      	addne	r2, #3
 80006de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006e2:	bf18      	it	ne
 80006e4:	3203      	addne	r2, #3
 80006e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80006ea:	f1c2 0320 	rsb	r3, r2, #32
 80006ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80006f2:	fa20 f002 	lsr.w	r0, r0, r2
 80006f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80006fa:	ea40 000e 	orr.w	r0, r0, lr
 80006fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000702:	4414      	add	r4, r2
 8000704:	e6bd      	b.n	8000482 <__adddf3+0xe6>
 8000706:	bf00      	nop

08000708 <__aeabi_uldivmod>:
 8000708:	b953      	cbnz	r3, 8000720 <__aeabi_uldivmod+0x18>
 800070a:	b94a      	cbnz	r2, 8000720 <__aeabi_uldivmod+0x18>
 800070c:	2900      	cmp	r1, #0
 800070e:	bf08      	it	eq
 8000710:	2800      	cmpeq	r0, #0
 8000712:	bf1c      	itt	ne
 8000714:	f04f 31ff 	movne.w	r1, #4294967295
 8000718:	f04f 30ff 	movne.w	r0, #4294967295
 800071c:	f000 b9ac 	b.w	8000a78 <__aeabi_idiv0>
 8000720:	f1ad 0c08 	sub.w	ip, sp, #8
 8000724:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000728:	f000 f83e 	bl	80007a8 <__udivmoddi4>
 800072c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000730:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000734:	b004      	add	sp, #16
 8000736:	4770      	bx	lr

08000738 <__aeabi_d2lz>:
 8000738:	b508      	push	{r3, lr}
 800073a:	4602      	mov	r2, r0
 800073c:	460b      	mov	r3, r1
 800073e:	ec43 2b17 	vmov	d7, r2, r3
 8000742:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 8000746:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800074a:	d403      	bmi.n	8000754 <__aeabi_d2lz+0x1c>
 800074c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000750:	f000 b80a 	b.w	8000768 <__aeabi_d2ulz>
 8000754:	eeb1 7b47 	vneg.f64	d7, d7
 8000758:	ec51 0b17 	vmov	r0, r1, d7
 800075c:	f000 f804 	bl	8000768 <__aeabi_d2ulz>
 8000760:	4240      	negs	r0, r0
 8000762:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000766:	bd08      	pop	{r3, pc}

08000768 <__aeabi_d2ulz>:
 8000768:	ed9f 6b0b 	vldr	d6, [pc, #44]	; 8000798 <__aeabi_d2ulz+0x30>
 800076c:	ec41 0b17 	vmov	d7, r0, r1
 8000770:	ed9f 5b0b 	vldr	d5, [pc, #44]	; 80007a0 <__aeabi_d2ulz+0x38>
 8000774:	ee27 6b06 	vmul.f64	d6, d7, d6
 8000778:	eebc 6bc6 	vcvt.u32.f64	s12, d6
 800077c:	eeb8 4b46 	vcvt.f64.u32	d4, s12
 8000780:	eea4 7b45 	vfms.f64	d7, d4, d5
 8000784:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8000788:	ee16 1a10 	vmov	r1, s12
 800078c:	ee17 0a90 	vmov	r0, s15
 8000790:	4770      	bx	lr
 8000792:	bf00      	nop
 8000794:	f3af 8000 	nop.w
 8000798:	00000000 	.word	0x00000000
 800079c:	3df00000 	.word	0x3df00000
 80007a0:	00000000 	.word	0x00000000
 80007a4:	41f00000 	.word	0x41f00000

080007a8 <__udivmoddi4>:
 80007a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80007ac:	9d08      	ldr	r5, [sp, #32]
 80007ae:	4604      	mov	r4, r0
 80007b0:	468e      	mov	lr, r1
 80007b2:	2b00      	cmp	r3, #0
 80007b4:	d14d      	bne.n	8000852 <__udivmoddi4+0xaa>
 80007b6:	428a      	cmp	r2, r1
 80007b8:	4694      	mov	ip, r2
 80007ba:	d969      	bls.n	8000890 <__udivmoddi4+0xe8>
 80007bc:	fab2 f282 	clz	r2, r2
 80007c0:	b152      	cbz	r2, 80007d8 <__udivmoddi4+0x30>
 80007c2:	fa01 f302 	lsl.w	r3, r1, r2
 80007c6:	f1c2 0120 	rsb	r1, r2, #32
 80007ca:	fa20 f101 	lsr.w	r1, r0, r1
 80007ce:	fa0c fc02 	lsl.w	ip, ip, r2
 80007d2:	ea41 0e03 	orr.w	lr, r1, r3
 80007d6:	4094      	lsls	r4, r2
 80007d8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80007dc:	0c21      	lsrs	r1, r4, #16
 80007de:	fbbe f6f8 	udiv	r6, lr, r8
 80007e2:	fa1f f78c 	uxth.w	r7, ip
 80007e6:	fb08 e316 	mls	r3, r8, r6, lr
 80007ea:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 80007ee:	fb06 f107 	mul.w	r1, r6, r7
 80007f2:	4299      	cmp	r1, r3
 80007f4:	d90a      	bls.n	800080c <__udivmoddi4+0x64>
 80007f6:	eb1c 0303 	adds.w	r3, ip, r3
 80007fa:	f106 30ff 	add.w	r0, r6, #4294967295
 80007fe:	f080 811f 	bcs.w	8000a40 <__udivmoddi4+0x298>
 8000802:	4299      	cmp	r1, r3
 8000804:	f240 811c 	bls.w	8000a40 <__udivmoddi4+0x298>
 8000808:	3e02      	subs	r6, #2
 800080a:	4463      	add	r3, ip
 800080c:	1a5b      	subs	r3, r3, r1
 800080e:	b2a4      	uxth	r4, r4
 8000810:	fbb3 f0f8 	udiv	r0, r3, r8
 8000814:	fb08 3310 	mls	r3, r8, r0, r3
 8000818:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800081c:	fb00 f707 	mul.w	r7, r0, r7
 8000820:	42a7      	cmp	r7, r4
 8000822:	d90a      	bls.n	800083a <__udivmoddi4+0x92>
 8000824:	eb1c 0404 	adds.w	r4, ip, r4
 8000828:	f100 33ff 	add.w	r3, r0, #4294967295
 800082c:	f080 810a 	bcs.w	8000a44 <__udivmoddi4+0x29c>
 8000830:	42a7      	cmp	r7, r4
 8000832:	f240 8107 	bls.w	8000a44 <__udivmoddi4+0x29c>
 8000836:	4464      	add	r4, ip
 8000838:	3802      	subs	r0, #2
 800083a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800083e:	1be4      	subs	r4, r4, r7
 8000840:	2600      	movs	r6, #0
 8000842:	b11d      	cbz	r5, 800084c <__udivmoddi4+0xa4>
 8000844:	40d4      	lsrs	r4, r2
 8000846:	2300      	movs	r3, #0
 8000848:	e9c5 4300 	strd	r4, r3, [r5]
 800084c:	4631      	mov	r1, r6
 800084e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000852:	428b      	cmp	r3, r1
 8000854:	d909      	bls.n	800086a <__udivmoddi4+0xc2>
 8000856:	2d00      	cmp	r5, #0
 8000858:	f000 80ef 	beq.w	8000a3a <__udivmoddi4+0x292>
 800085c:	2600      	movs	r6, #0
 800085e:	e9c5 0100 	strd	r0, r1, [r5]
 8000862:	4630      	mov	r0, r6
 8000864:	4631      	mov	r1, r6
 8000866:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800086a:	fab3 f683 	clz	r6, r3
 800086e:	2e00      	cmp	r6, #0
 8000870:	d14a      	bne.n	8000908 <__udivmoddi4+0x160>
 8000872:	428b      	cmp	r3, r1
 8000874:	d302      	bcc.n	800087c <__udivmoddi4+0xd4>
 8000876:	4282      	cmp	r2, r0
 8000878:	f200 80f9 	bhi.w	8000a6e <__udivmoddi4+0x2c6>
 800087c:	1a84      	subs	r4, r0, r2
 800087e:	eb61 0303 	sbc.w	r3, r1, r3
 8000882:	2001      	movs	r0, #1
 8000884:	469e      	mov	lr, r3
 8000886:	2d00      	cmp	r5, #0
 8000888:	d0e0      	beq.n	800084c <__udivmoddi4+0xa4>
 800088a:	e9c5 4e00 	strd	r4, lr, [r5]
 800088e:	e7dd      	b.n	800084c <__udivmoddi4+0xa4>
 8000890:	b902      	cbnz	r2, 8000894 <__udivmoddi4+0xec>
 8000892:	deff      	udf	#255	; 0xff
 8000894:	fab2 f282 	clz	r2, r2
 8000898:	2a00      	cmp	r2, #0
 800089a:	f040 8092 	bne.w	80009c2 <__udivmoddi4+0x21a>
 800089e:	eba1 010c 	sub.w	r1, r1, ip
 80008a2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80008a6:	fa1f fe8c 	uxth.w	lr, ip
 80008aa:	2601      	movs	r6, #1
 80008ac:	0c20      	lsrs	r0, r4, #16
 80008ae:	fbb1 f3f7 	udiv	r3, r1, r7
 80008b2:	fb07 1113 	mls	r1, r7, r3, r1
 80008b6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80008ba:	fb0e f003 	mul.w	r0, lr, r3
 80008be:	4288      	cmp	r0, r1
 80008c0:	d908      	bls.n	80008d4 <__udivmoddi4+0x12c>
 80008c2:	eb1c 0101 	adds.w	r1, ip, r1
 80008c6:	f103 38ff 	add.w	r8, r3, #4294967295
 80008ca:	d202      	bcs.n	80008d2 <__udivmoddi4+0x12a>
 80008cc:	4288      	cmp	r0, r1
 80008ce:	f200 80cb 	bhi.w	8000a68 <__udivmoddi4+0x2c0>
 80008d2:	4643      	mov	r3, r8
 80008d4:	1a09      	subs	r1, r1, r0
 80008d6:	b2a4      	uxth	r4, r4
 80008d8:	fbb1 f0f7 	udiv	r0, r1, r7
 80008dc:	fb07 1110 	mls	r1, r7, r0, r1
 80008e0:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80008e4:	fb0e fe00 	mul.w	lr, lr, r0
 80008e8:	45a6      	cmp	lr, r4
 80008ea:	d908      	bls.n	80008fe <__udivmoddi4+0x156>
 80008ec:	eb1c 0404 	adds.w	r4, ip, r4
 80008f0:	f100 31ff 	add.w	r1, r0, #4294967295
 80008f4:	d202      	bcs.n	80008fc <__udivmoddi4+0x154>
 80008f6:	45a6      	cmp	lr, r4
 80008f8:	f200 80bb 	bhi.w	8000a72 <__udivmoddi4+0x2ca>
 80008fc:	4608      	mov	r0, r1
 80008fe:	eba4 040e 	sub.w	r4, r4, lr
 8000902:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000906:	e79c      	b.n	8000842 <__udivmoddi4+0x9a>
 8000908:	f1c6 0720 	rsb	r7, r6, #32
 800090c:	40b3      	lsls	r3, r6
 800090e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000912:	ea4c 0c03 	orr.w	ip, ip, r3
 8000916:	fa20 f407 	lsr.w	r4, r0, r7
 800091a:	fa01 f306 	lsl.w	r3, r1, r6
 800091e:	431c      	orrs	r4, r3
 8000920:	40f9      	lsrs	r1, r7
 8000922:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000926:	fa00 f306 	lsl.w	r3, r0, r6
 800092a:	fbb1 f8f9 	udiv	r8, r1, r9
 800092e:	0c20      	lsrs	r0, r4, #16
 8000930:	fa1f fe8c 	uxth.w	lr, ip
 8000934:	fb09 1118 	mls	r1, r9, r8, r1
 8000938:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800093c:	fb08 f00e 	mul.w	r0, r8, lr
 8000940:	4288      	cmp	r0, r1
 8000942:	fa02 f206 	lsl.w	r2, r2, r6
 8000946:	d90b      	bls.n	8000960 <__udivmoddi4+0x1b8>
 8000948:	eb1c 0101 	adds.w	r1, ip, r1
 800094c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000950:	f080 8088 	bcs.w	8000a64 <__udivmoddi4+0x2bc>
 8000954:	4288      	cmp	r0, r1
 8000956:	f240 8085 	bls.w	8000a64 <__udivmoddi4+0x2bc>
 800095a:	f1a8 0802 	sub.w	r8, r8, #2
 800095e:	4461      	add	r1, ip
 8000960:	1a09      	subs	r1, r1, r0
 8000962:	b2a4      	uxth	r4, r4
 8000964:	fbb1 f0f9 	udiv	r0, r1, r9
 8000968:	fb09 1110 	mls	r1, r9, r0, r1
 800096c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000970:	fb00 fe0e 	mul.w	lr, r0, lr
 8000974:	458e      	cmp	lr, r1
 8000976:	d908      	bls.n	800098a <__udivmoddi4+0x1e2>
 8000978:	eb1c 0101 	adds.w	r1, ip, r1
 800097c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000980:	d26c      	bcs.n	8000a5c <__udivmoddi4+0x2b4>
 8000982:	458e      	cmp	lr, r1
 8000984:	d96a      	bls.n	8000a5c <__udivmoddi4+0x2b4>
 8000986:	3802      	subs	r0, #2
 8000988:	4461      	add	r1, ip
 800098a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 800098e:	fba0 9402 	umull	r9, r4, r0, r2
 8000992:	eba1 010e 	sub.w	r1, r1, lr
 8000996:	42a1      	cmp	r1, r4
 8000998:	46c8      	mov	r8, r9
 800099a:	46a6      	mov	lr, r4
 800099c:	d356      	bcc.n	8000a4c <__udivmoddi4+0x2a4>
 800099e:	d053      	beq.n	8000a48 <__udivmoddi4+0x2a0>
 80009a0:	b15d      	cbz	r5, 80009ba <__udivmoddi4+0x212>
 80009a2:	ebb3 0208 	subs.w	r2, r3, r8
 80009a6:	eb61 010e 	sbc.w	r1, r1, lr
 80009aa:	fa01 f707 	lsl.w	r7, r1, r7
 80009ae:	fa22 f306 	lsr.w	r3, r2, r6
 80009b2:	40f1      	lsrs	r1, r6
 80009b4:	431f      	orrs	r7, r3
 80009b6:	e9c5 7100 	strd	r7, r1, [r5]
 80009ba:	2600      	movs	r6, #0
 80009bc:	4631      	mov	r1, r6
 80009be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80009c2:	f1c2 0320 	rsb	r3, r2, #32
 80009c6:	40d8      	lsrs	r0, r3
 80009c8:	fa0c fc02 	lsl.w	ip, ip, r2
 80009cc:	fa21 f303 	lsr.w	r3, r1, r3
 80009d0:	4091      	lsls	r1, r2
 80009d2:	4301      	orrs	r1, r0
 80009d4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80009d8:	fa1f fe8c 	uxth.w	lr, ip
 80009dc:	fbb3 f0f7 	udiv	r0, r3, r7
 80009e0:	fb07 3610 	mls	r6, r7, r0, r3
 80009e4:	0c0b      	lsrs	r3, r1, #16
 80009e6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 80009ea:	fb00 f60e 	mul.w	r6, r0, lr
 80009ee:	429e      	cmp	r6, r3
 80009f0:	fa04 f402 	lsl.w	r4, r4, r2
 80009f4:	d908      	bls.n	8000a08 <__udivmoddi4+0x260>
 80009f6:	eb1c 0303 	adds.w	r3, ip, r3
 80009fa:	f100 38ff 	add.w	r8, r0, #4294967295
 80009fe:	d22f      	bcs.n	8000a60 <__udivmoddi4+0x2b8>
 8000a00:	429e      	cmp	r6, r3
 8000a02:	d92d      	bls.n	8000a60 <__udivmoddi4+0x2b8>
 8000a04:	3802      	subs	r0, #2
 8000a06:	4463      	add	r3, ip
 8000a08:	1b9b      	subs	r3, r3, r6
 8000a0a:	b289      	uxth	r1, r1
 8000a0c:	fbb3 f6f7 	udiv	r6, r3, r7
 8000a10:	fb07 3316 	mls	r3, r7, r6, r3
 8000a14:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000a18:	fb06 f30e 	mul.w	r3, r6, lr
 8000a1c:	428b      	cmp	r3, r1
 8000a1e:	d908      	bls.n	8000a32 <__udivmoddi4+0x28a>
 8000a20:	eb1c 0101 	adds.w	r1, ip, r1
 8000a24:	f106 38ff 	add.w	r8, r6, #4294967295
 8000a28:	d216      	bcs.n	8000a58 <__udivmoddi4+0x2b0>
 8000a2a:	428b      	cmp	r3, r1
 8000a2c:	d914      	bls.n	8000a58 <__udivmoddi4+0x2b0>
 8000a2e:	3e02      	subs	r6, #2
 8000a30:	4461      	add	r1, ip
 8000a32:	1ac9      	subs	r1, r1, r3
 8000a34:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000a38:	e738      	b.n	80008ac <__udivmoddi4+0x104>
 8000a3a:	462e      	mov	r6, r5
 8000a3c:	4628      	mov	r0, r5
 8000a3e:	e705      	b.n	800084c <__udivmoddi4+0xa4>
 8000a40:	4606      	mov	r6, r0
 8000a42:	e6e3      	b.n	800080c <__udivmoddi4+0x64>
 8000a44:	4618      	mov	r0, r3
 8000a46:	e6f8      	b.n	800083a <__udivmoddi4+0x92>
 8000a48:	454b      	cmp	r3, r9
 8000a4a:	d2a9      	bcs.n	80009a0 <__udivmoddi4+0x1f8>
 8000a4c:	ebb9 0802 	subs.w	r8, r9, r2
 8000a50:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000a54:	3801      	subs	r0, #1
 8000a56:	e7a3      	b.n	80009a0 <__udivmoddi4+0x1f8>
 8000a58:	4646      	mov	r6, r8
 8000a5a:	e7ea      	b.n	8000a32 <__udivmoddi4+0x28a>
 8000a5c:	4620      	mov	r0, r4
 8000a5e:	e794      	b.n	800098a <__udivmoddi4+0x1e2>
 8000a60:	4640      	mov	r0, r8
 8000a62:	e7d1      	b.n	8000a08 <__udivmoddi4+0x260>
 8000a64:	46d0      	mov	r8, sl
 8000a66:	e77b      	b.n	8000960 <__udivmoddi4+0x1b8>
 8000a68:	3b02      	subs	r3, #2
 8000a6a:	4461      	add	r1, ip
 8000a6c:	e732      	b.n	80008d4 <__udivmoddi4+0x12c>
 8000a6e:	4630      	mov	r0, r6
 8000a70:	e709      	b.n	8000886 <__udivmoddi4+0xde>
 8000a72:	4464      	add	r4, ip
 8000a74:	3802      	subs	r0, #2
 8000a76:	e742      	b.n	80008fe <__udivmoddi4+0x156>

08000a78 <__aeabi_idiv0>:
 8000a78:	4770      	bx	lr
 8000a7a:	bf00      	nop

08000a7c <transpuesta>:
 *      Author: Elias Correa y Eliseo Elorga
 */

#include <GlobalFunc.h>

array2D transpuesta(double Maux[3][3]) {
 8000a7c:	b580      	push	{r7, lr}
 8000a7e:	b096      	sub	sp, #88	; 0x58
 8000a80:	af00      	add	r7, sp, #0
 8000a82:	6078      	str	r0, [r7, #4]
 8000a84:	6039      	str	r1, [r7, #0]
	array2D MTaux;
	for (int i = 0; i < 3; ++i) {
 8000a86:	2300      	movs	r3, #0
 8000a88:	657b      	str	r3, [r7, #84]	; 0x54
 8000a8a:	e024      	b.n	8000ad6 <transpuesta+0x5a>
		for (int j = 0; j < 3; ++j) {
 8000a8c:	2300      	movs	r3, #0
 8000a8e:	653b      	str	r3, [r7, #80]	; 0x50
 8000a90:	e01b      	b.n	8000aca <transpuesta+0x4e>
			MTaux.m[j][i] = Maux[i][j];	//transpuesta de la matriz l2 JP=[l21';l22';l23'];
 8000a92:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8000a94:	4613      	mov	r3, r2
 8000a96:	005b      	lsls	r3, r3, #1
 8000a98:	4413      	add	r3, r2
 8000a9a:	00db      	lsls	r3, r3, #3
 8000a9c:	461a      	mov	r2, r3
 8000a9e:	683b      	ldr	r3, [r7, #0]
 8000aa0:	441a      	add	r2, r3
 8000aa2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000aa4:	00db      	lsls	r3, r3, #3
 8000aa6:	4413      	add	r3, r2
 8000aa8:	e9d3 0100 	ldrd	r0, r1, [r3]
 8000aac:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 8000aae:	4613      	mov	r3, r2
 8000ab0:	005b      	lsls	r3, r3, #1
 8000ab2:	4413      	add	r3, r2
 8000ab4:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8000ab6:	4413      	add	r3, r2
 8000ab8:	00db      	lsls	r3, r3, #3
 8000aba:	3358      	adds	r3, #88	; 0x58
 8000abc:	443b      	add	r3, r7
 8000abe:	3b50      	subs	r3, #80	; 0x50
 8000ac0:	e9c3 0100 	strd	r0, r1, [r3]
		for (int j = 0; j < 3; ++j) {
 8000ac4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000ac6:	3301      	adds	r3, #1
 8000ac8:	653b      	str	r3, [r7, #80]	; 0x50
 8000aca:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000acc:	2b02      	cmp	r3, #2
 8000ace:	dde0      	ble.n	8000a92 <transpuesta+0x16>
	for (int i = 0; i < 3; ++i) {
 8000ad0:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000ad2:	3301      	adds	r3, #1
 8000ad4:	657b      	str	r3, [r7, #84]	; 0x54
 8000ad6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000ad8:	2b02      	cmp	r3, #2
 8000ada:	ddd7      	ble.n	8000a8c <transpuesta+0x10>
		}
	}
	return MTaux;
 8000adc:	687b      	ldr	r3, [r7, #4]
 8000ade:	4618      	mov	r0, r3
 8000ae0:	f107 0308 	add.w	r3, r7, #8
 8000ae4:	2248      	movs	r2, #72	; 0x48
 8000ae6:	4619      	mov	r1, r3
 8000ae8:	f00e f920 	bl	800ed2c <memcpy>
}
 8000aec:	6878      	ldr	r0, [r7, #4]
 8000aee:	3758      	adds	r7, #88	; 0x58
 8000af0:	46bd      	mov	sp, r7
 8000af2:	bd80      	pop	{r7, pc}

08000af4 <productDot>:

double productDot(double VectA[], double VectB[]) {
 8000af4:	b480      	push	{r7}
 8000af6:	b087      	sub	sp, #28
 8000af8:	af00      	add	r7, sp, #0
 8000afa:	6078      	str	r0, [r7, #4]
 8000afc:	6039      	str	r1, [r7, #0]
	double dotaux = 0;
 8000afe:	f04f 0200 	mov.w	r2, #0
 8000b02:	f04f 0300 	mov.w	r3, #0
 8000b06:	e9c7 2304 	strd	r2, r3, [r7, #16]
	for (int i = 0; i < 3; ++i) {				//Producto punto entre vectores
 8000b0a:	2300      	movs	r3, #0
 8000b0c:	60fb      	str	r3, [r7, #12]
 8000b0e:	e016      	b.n	8000b3e <productDot+0x4a>
		dotaux = dotaux + VectA[i] * VectB[i];
 8000b10:	68fb      	ldr	r3, [r7, #12]
 8000b12:	00db      	lsls	r3, r3, #3
 8000b14:	687a      	ldr	r2, [r7, #4]
 8000b16:	4413      	add	r3, r2
 8000b18:	ed93 6b00 	vldr	d6, [r3]
 8000b1c:	68fb      	ldr	r3, [r7, #12]
 8000b1e:	00db      	lsls	r3, r3, #3
 8000b20:	683a      	ldr	r2, [r7, #0]
 8000b22:	4413      	add	r3, r2
 8000b24:	ed93 7b00 	vldr	d7, [r3]
 8000b28:	ee26 7b07 	vmul.f64	d7, d6, d7
 8000b2c:	ed97 6b04 	vldr	d6, [r7, #16]
 8000b30:	ee36 7b07 	vadd.f64	d7, d6, d7
 8000b34:	ed87 7b04 	vstr	d7, [r7, #16]
	for (int i = 0; i < 3; ++i) {				//Producto punto entre vectores
 8000b38:	68fb      	ldr	r3, [r7, #12]
 8000b3a:	3301      	adds	r3, #1
 8000b3c:	60fb      	str	r3, [r7, #12]
 8000b3e:	68fb      	ldr	r3, [r7, #12]
 8000b40:	2b02      	cmp	r3, #2
 8000b42:	dde5      	ble.n	8000b10 <productDot+0x1c>
	}
	return dotaux;
 8000b44:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8000b48:	ec43 2b17 	vmov	d7, r2, r3
}
 8000b4c:	eeb0 0b47 	vmov.f64	d0, d7
 8000b50:	371c      	adds	r7, #28
 8000b52:	46bd      	mov	sp, r7
 8000b54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b58:	4770      	bx	lr

08000b5a <determinante>:

double determinante(double Maux[3][3]) {
 8000b5a:	b480      	push	{r7}
 8000b5c:	b085      	sub	sp, #20
 8000b5e:	af00      	add	r7, sp, #0
 8000b60:	6078      	str	r0, [r7, #4]
	double det;
	det = Maux[0][0] * Maux[1][1] * Maux[2][2]; // + Maux[0][1] * Maux[1][2] * Maux[2][0] + Maux[1][0] * Maux[2][1] * Maux[0][2] - Maux[2][0] * Maux[1][1] * Maux[0][2] - Maux[1][0] * Maux[0][1] * Maux[2][2] - Maux[2][1] * Maux[1][2] * Maux[0][0];
 8000b62:	687b      	ldr	r3, [r7, #4]
 8000b64:	ed93 6b00 	vldr	d6, [r3]
 8000b68:	687b      	ldr	r3, [r7, #4]
 8000b6a:	3318      	adds	r3, #24
 8000b6c:	ed93 7b02 	vldr	d7, [r3, #8]
 8000b70:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000b74:	687b      	ldr	r3, [r7, #4]
 8000b76:	3330      	adds	r3, #48	; 0x30
 8000b78:	ed93 7b04 	vldr	d7, [r3, #16]
 8000b7c:	ee26 7b07 	vmul.f64	d7, d6, d7
 8000b80:	ed87 7b02 	vstr	d7, [r7, #8]
	return det;
 8000b84:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8000b88:	ec43 2b17 	vmov	d7, r2, r3
}
 8000b8c:	eeb0 0b47 	vmov.f64	d0, d7
 8000b90:	3714      	adds	r7, #20
 8000b92:	46bd      	mov	sp, r7
 8000b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b98:	4770      	bx	lr

08000b9a <adjunta>:

array2D adjunta(double Maux[3][3]) {
 8000b9a:	b580      	push	{r7, lr}
 8000b9c:	b094      	sub	sp, #80	; 0x50
 8000b9e:	af00      	add	r7, sp, #0
 8000ba0:	6078      	str	r0, [r7, #4]
 8000ba2:	6039      	str	r1, [r7, #0]
	array2D adj;
	adj.m[0][0] = Maux[1][1] * Maux[2][2] - Maux[2][1] * Maux[1][2];
 8000ba4:	683b      	ldr	r3, [r7, #0]
 8000ba6:	3318      	adds	r3, #24
 8000ba8:	ed93 6b02 	vldr	d6, [r3, #8]
 8000bac:	683b      	ldr	r3, [r7, #0]
 8000bae:	3330      	adds	r3, #48	; 0x30
 8000bb0:	ed93 7b04 	vldr	d7, [r3, #16]
 8000bb4:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000bb8:	683b      	ldr	r3, [r7, #0]
 8000bba:	3330      	adds	r3, #48	; 0x30
 8000bbc:	ed93 5b02 	vldr	d5, [r3, #8]
 8000bc0:	683b      	ldr	r3, [r7, #0]
 8000bc2:	3318      	adds	r3, #24
 8000bc4:	ed93 7b04 	vldr	d7, [r3, #16]
 8000bc8:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000bcc:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000bd0:	ed87 7b02 	vstr	d7, [r7, #8]
	adj.m[0][1] = Maux[1][0] * Maux[2][2] - Maux[2][0] * Maux[1][2];
 8000bd4:	683b      	ldr	r3, [r7, #0]
 8000bd6:	3318      	adds	r3, #24
 8000bd8:	ed93 6b00 	vldr	d6, [r3]
 8000bdc:	683b      	ldr	r3, [r7, #0]
 8000bde:	3330      	adds	r3, #48	; 0x30
 8000be0:	ed93 7b04 	vldr	d7, [r3, #16]
 8000be4:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000be8:	683b      	ldr	r3, [r7, #0]
 8000bea:	3330      	adds	r3, #48	; 0x30
 8000bec:	ed93 5b00 	vldr	d5, [r3]
 8000bf0:	683b      	ldr	r3, [r7, #0]
 8000bf2:	3318      	adds	r3, #24
 8000bf4:	ed93 7b04 	vldr	d7, [r3, #16]
 8000bf8:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000bfc:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000c00:	ed87 7b04 	vstr	d7, [r7, #16]
	adj.m[0][2] = Maux[1][0] * Maux[2][1] - Maux[2][0] * Maux[1][1];
 8000c04:	683b      	ldr	r3, [r7, #0]
 8000c06:	3318      	adds	r3, #24
 8000c08:	ed93 6b00 	vldr	d6, [r3]
 8000c0c:	683b      	ldr	r3, [r7, #0]
 8000c0e:	3330      	adds	r3, #48	; 0x30
 8000c10:	ed93 7b02 	vldr	d7, [r3, #8]
 8000c14:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000c18:	683b      	ldr	r3, [r7, #0]
 8000c1a:	3330      	adds	r3, #48	; 0x30
 8000c1c:	ed93 5b00 	vldr	d5, [r3]
 8000c20:	683b      	ldr	r3, [r7, #0]
 8000c22:	3318      	adds	r3, #24
 8000c24:	ed93 7b02 	vldr	d7, [r3, #8]
 8000c28:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000c2c:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000c30:	ed87 7b06 	vstr	d7, [r7, #24]
	adj.m[1][0] = Maux[0][1] * Maux[2][2] - Maux[2][1] * Maux[0][2];
 8000c34:	683b      	ldr	r3, [r7, #0]
 8000c36:	ed93 6b02 	vldr	d6, [r3, #8]
 8000c3a:	683b      	ldr	r3, [r7, #0]
 8000c3c:	3330      	adds	r3, #48	; 0x30
 8000c3e:	ed93 7b04 	vldr	d7, [r3, #16]
 8000c42:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000c46:	683b      	ldr	r3, [r7, #0]
 8000c48:	3330      	adds	r3, #48	; 0x30
 8000c4a:	ed93 5b02 	vldr	d5, [r3, #8]
 8000c4e:	683b      	ldr	r3, [r7, #0]
 8000c50:	ed93 7b04 	vldr	d7, [r3, #16]
 8000c54:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000c58:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000c5c:	ed87 7b08 	vstr	d7, [r7, #32]
	adj.m[1][1] = Maux[0][0] * Maux[2][2] - Maux[2][0] * Maux[0][2];
 8000c60:	683b      	ldr	r3, [r7, #0]
 8000c62:	ed93 6b00 	vldr	d6, [r3]
 8000c66:	683b      	ldr	r3, [r7, #0]
 8000c68:	3330      	adds	r3, #48	; 0x30
 8000c6a:	ed93 7b04 	vldr	d7, [r3, #16]
 8000c6e:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000c72:	683b      	ldr	r3, [r7, #0]
 8000c74:	3330      	adds	r3, #48	; 0x30
 8000c76:	ed93 5b00 	vldr	d5, [r3]
 8000c7a:	683b      	ldr	r3, [r7, #0]
 8000c7c:	ed93 7b04 	vldr	d7, [r3, #16]
 8000c80:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000c84:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000c88:	ed87 7b0a 	vstr	d7, [r7, #40]	; 0x28
	adj.m[1][2] = Maux[0][0] * Maux[2][1] - Maux[2][0] * Maux[0][1];
 8000c8c:	683b      	ldr	r3, [r7, #0]
 8000c8e:	ed93 6b00 	vldr	d6, [r3]
 8000c92:	683b      	ldr	r3, [r7, #0]
 8000c94:	3330      	adds	r3, #48	; 0x30
 8000c96:	ed93 7b02 	vldr	d7, [r3, #8]
 8000c9a:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000c9e:	683b      	ldr	r3, [r7, #0]
 8000ca0:	3330      	adds	r3, #48	; 0x30
 8000ca2:	ed93 5b00 	vldr	d5, [r3]
 8000ca6:	683b      	ldr	r3, [r7, #0]
 8000ca8:	ed93 7b02 	vldr	d7, [r3, #8]
 8000cac:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000cb0:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000cb4:	ed87 7b0c 	vstr	d7, [r7, #48]	; 0x30
	adj.m[2][0] = Maux[0][1] * Maux[1][2] - Maux[1][1] * Maux[0][2];
 8000cb8:	683b      	ldr	r3, [r7, #0]
 8000cba:	ed93 6b02 	vldr	d6, [r3, #8]
 8000cbe:	683b      	ldr	r3, [r7, #0]
 8000cc0:	3318      	adds	r3, #24
 8000cc2:	ed93 7b04 	vldr	d7, [r3, #16]
 8000cc6:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000cca:	683b      	ldr	r3, [r7, #0]
 8000ccc:	3318      	adds	r3, #24
 8000cce:	ed93 5b02 	vldr	d5, [r3, #8]
 8000cd2:	683b      	ldr	r3, [r7, #0]
 8000cd4:	ed93 7b04 	vldr	d7, [r3, #16]
 8000cd8:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000cdc:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000ce0:	ed87 7b0e 	vstr	d7, [r7, #56]	; 0x38
	adj.m[2][1] = Maux[0][0] * Maux[1][2] - Maux[1][0] * Maux[0][2];
 8000ce4:	683b      	ldr	r3, [r7, #0]
 8000ce6:	ed93 6b00 	vldr	d6, [r3]
 8000cea:	683b      	ldr	r3, [r7, #0]
 8000cec:	3318      	adds	r3, #24
 8000cee:	ed93 7b04 	vldr	d7, [r3, #16]
 8000cf2:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000cf6:	683b      	ldr	r3, [r7, #0]
 8000cf8:	3318      	adds	r3, #24
 8000cfa:	ed93 5b00 	vldr	d5, [r3]
 8000cfe:	683b      	ldr	r3, [r7, #0]
 8000d00:	ed93 7b04 	vldr	d7, [r3, #16]
 8000d04:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000d08:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000d0c:	ed87 7b10 	vstr	d7, [r7, #64]	; 0x40
	adj.m[2][2] = Maux[0][0] * Maux[1][1] - Maux[1][0] * Maux[0][1];
 8000d10:	683b      	ldr	r3, [r7, #0]
 8000d12:	ed93 6b00 	vldr	d6, [r3]
 8000d16:	683b      	ldr	r3, [r7, #0]
 8000d18:	3318      	adds	r3, #24
 8000d1a:	ed93 7b02 	vldr	d7, [r3, #8]
 8000d1e:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000d22:	683b      	ldr	r3, [r7, #0]
 8000d24:	3318      	adds	r3, #24
 8000d26:	ed93 5b00 	vldr	d5, [r3]
 8000d2a:	683b      	ldr	r3, [r7, #0]
 8000d2c:	ed93 7b02 	vldr	d7, [r3, #8]
 8000d30:	ee25 7b07 	vmul.f64	d7, d5, d7
 8000d34:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000d38:	ed87 7b12 	vstr	d7, [r7, #72]	; 0x48
	return adj;
 8000d3c:	687b      	ldr	r3, [r7, #4]
 8000d3e:	4618      	mov	r0, r3
 8000d40:	f107 0308 	add.w	r3, r7, #8
 8000d44:	2248      	movs	r2, #72	; 0x48
 8000d46:	4619      	mov	r1, r3
 8000d48:	f00d fff0 	bl	800ed2c <memcpy>
}
 8000d4c:	6878      	ldr	r0, [r7, #4]
 8000d4e:	3750      	adds	r7, #80	; 0x50
 8000d50:	46bd      	mov	sp, r7
 8000d52:	bd80      	pop	{r7, pc}

08000d54 <inversa>:

array2D inversa(double A[3][3]) {
 8000d54:	b580      	push	{r7, lr}
 8000d56:	b0bc      	sub	sp, #240	; 0xf0
 8000d58:	af00      	add	r7, sp, #0
 8000d5a:	64f8      	str	r0, [r7, #76]	; 0x4c
 8000d5c:	64b9      	str	r1, [r7, #72]	; 0x48
	array2D Minv;
	array2D Maux;
	double det;
	Maux = adjunta(A);
 8000d5e:	463b      	mov	r3, r7
 8000d60:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8000d62:	4618      	mov	r0, r3
 8000d64:	f7ff ff19 	bl	8000b9a <adjunta>
 8000d68:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000d6c:	4639      	mov	r1, r7
 8000d6e:	2248      	movs	r2, #72	; 0x48
 8000d70:	4618      	mov	r0, r3
 8000d72:	f00d ffdb 	bl	800ed2c <memcpy>
	Maux = transpuesta(Maux.m);
 8000d76:	463b      	mov	r3, r7
 8000d78:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8000d7c:	4611      	mov	r1, r2
 8000d7e:	4618      	mov	r0, r3
 8000d80:	f7ff fe7c 	bl	8000a7c <transpuesta>
 8000d84:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000d88:	4639      	mov	r1, r7
 8000d8a:	2248      	movs	r2, #72	; 0x48
 8000d8c:	4618      	mov	r0, r3
 8000d8e:	f00d ffcd 	bl	800ed2c <memcpy>
	det = determinante(A);
 8000d92:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8000d94:	f7ff fee1 	bl	8000b5a <determinante>
 8000d98:	ed87 0b38 	vstr	d0, [r7, #224]	; 0xe0
	for (int i = 0; i < 3; ++i) {
 8000d9c:	2300      	movs	r3, #0
 8000d9e:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 8000da2:	e035      	b.n	8000e10 <inversa+0xbc>
		for (int j = 0; j < 3; ++j) {
 8000da4:	2300      	movs	r3, #0
 8000da6:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8000daa:	e028      	b.n	8000dfe <inversa+0xaa>
			Minv.m[i][j] = (1 / det) * Maux.m[i][j];
 8000dac:	eeb7 5b00 	vmov.f64	d5, #112	; 0x3f800000  1.0
 8000db0:	ed97 7b38 	vldr	d7, [r7, #224]	; 0xe0
 8000db4:	ee85 6b07 	vdiv.f64	d6, d5, d7
 8000db8:	f8d7 20ec 	ldr.w	r2, [r7, #236]	; 0xec
 8000dbc:	4613      	mov	r3, r2
 8000dbe:	005b      	lsls	r3, r3, #1
 8000dc0:	4413      	add	r3, r2
 8000dc2:	f8d7 20e8 	ldr.w	r2, [r7, #232]	; 0xe8
 8000dc6:	4413      	add	r3, r2
 8000dc8:	00db      	lsls	r3, r3, #3
 8000dca:	33f0      	adds	r3, #240	; 0xf0
 8000dcc:	443b      	add	r3, r7
 8000dce:	3ba0      	subs	r3, #160	; 0xa0
 8000dd0:	ed93 7b00 	vldr	d7, [r3]
 8000dd4:	ee26 7b07 	vmul.f64	d7, d6, d7
 8000dd8:	f8d7 20ec 	ldr.w	r2, [r7, #236]	; 0xec
 8000ddc:	4613      	mov	r3, r2
 8000dde:	005b      	lsls	r3, r3, #1
 8000de0:	4413      	add	r3, r2
 8000de2:	f8d7 20e8 	ldr.w	r2, [r7, #232]	; 0xe8
 8000de6:	4413      	add	r3, r2
 8000de8:	00db      	lsls	r3, r3, #3
 8000dea:	33f0      	adds	r3, #240	; 0xf0
 8000dec:	443b      	add	r3, r7
 8000dee:	3b58      	subs	r3, #88	; 0x58
 8000df0:	ed83 7b00 	vstr	d7, [r3]
		for (int j = 0; j < 3; ++j) {
 8000df4:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 8000df8:	3301      	adds	r3, #1
 8000dfa:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8000dfe:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 8000e02:	2b02      	cmp	r3, #2
 8000e04:	ddd2      	ble.n	8000dac <inversa+0x58>
	for (int i = 0; i < 3; ++i) {
 8000e06:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 8000e0a:	3301      	adds	r3, #1
 8000e0c:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 8000e10:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 8000e14:	2b02      	cmp	r3, #2
 8000e16:	ddc5      	ble.n	8000da4 <inversa+0x50>
		}
	}
	return Minv;
 8000e18:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000e1a:	4618      	mov	r0, r3
 8000e1c:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8000e20:	2248      	movs	r2, #72	; 0x48
 8000e22:	4619      	mov	r1, r3
 8000e24:	f00d ff82 	bl	800ed2c <memcpy>
}
 8000e28:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8000e2a:	37f0      	adds	r7, #240	; 0xf0
 8000e2c:	46bd      	mov	sp, r7
 8000e2e:	bd80      	pop	{r7, pc}

08000e30 <productMatriz>:

array2D productMatriz(double MatrizA[3][3], double MatrizB[3][3]) {
 8000e30:	b580      	push	{r7, lr}
 8000e32:	b09c      	sub	sp, #112	; 0x70
 8000e34:	af00      	add	r7, sp, #0
 8000e36:	60f8      	str	r0, [r7, #12]
 8000e38:	60b9      	str	r1, [r7, #8]
 8000e3a:	607a      	str	r2, [r7, #4]
	array2D producto;

	for (int k = 0; k < 3; ++k) {
 8000e3c:	2300      	movs	r3, #0
 8000e3e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8000e40:	e04b      	b.n	8000eda <productMatriz+0xaa>
		for (int i = 0; i < 3; ++i) {
 8000e42:	2300      	movs	r3, #0
 8000e44:	66bb      	str	r3, [r7, #104]	; 0x68
 8000e46:	e042      	b.n	8000ece <productMatriz+0x9e>
			double suma = 0;
 8000e48:	f04f 0200 	mov.w	r2, #0
 8000e4c:	f04f 0300 	mov.w	r3, #0
 8000e50:	e9c7 2318 	strd	r2, r3, [r7, #96]	; 0x60
			for (int j = 0; j < 3; ++j) {
 8000e54:	2300      	movs	r3, #0
 8000e56:	65fb      	str	r3, [r7, #92]	; 0x5c
 8000e58:	e024      	b.n	8000ea4 <productMatriz+0x74>
				suma += MatrizA[i][j] * MatrizB[j][k];
 8000e5a:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8000e5c:	4613      	mov	r3, r2
 8000e5e:	005b      	lsls	r3, r3, #1
 8000e60:	4413      	add	r3, r2
 8000e62:	00db      	lsls	r3, r3, #3
 8000e64:	461a      	mov	r2, r3
 8000e66:	68bb      	ldr	r3, [r7, #8]
 8000e68:	441a      	add	r2, r3
 8000e6a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000e6c:	00db      	lsls	r3, r3, #3
 8000e6e:	4413      	add	r3, r2
 8000e70:	ed93 6b00 	vldr	d6, [r3]
 8000e74:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8000e76:	4613      	mov	r3, r2
 8000e78:	005b      	lsls	r3, r3, #1
 8000e7a:	4413      	add	r3, r2
 8000e7c:	00db      	lsls	r3, r3, #3
 8000e7e:	461a      	mov	r2, r3
 8000e80:	687b      	ldr	r3, [r7, #4]
 8000e82:	441a      	add	r2, r3
 8000e84:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8000e86:	00db      	lsls	r3, r3, #3
 8000e88:	4413      	add	r3, r2
 8000e8a:	ed93 7b00 	vldr	d7, [r3]
 8000e8e:	ee26 7b07 	vmul.f64	d7, d6, d7
 8000e92:	ed97 6b18 	vldr	d6, [r7, #96]	; 0x60
 8000e96:	ee36 7b07 	vadd.f64	d7, d6, d7
 8000e9a:	ed87 7b18 	vstr	d7, [r7, #96]	; 0x60
			for (int j = 0; j < 3; ++j) {
 8000e9e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000ea0:	3301      	adds	r3, #1
 8000ea2:	65fb      	str	r3, [r7, #92]	; 0x5c
 8000ea4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000ea6:	2b02      	cmp	r3, #2
 8000ea8:	ddd7      	ble.n	8000e5a <productMatriz+0x2a>
			}
			producto.m[i][k] = suma;
 8000eaa:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8000eac:	4613      	mov	r3, r2
 8000eae:	005b      	lsls	r3, r3, #1
 8000eb0:	4413      	add	r3, r2
 8000eb2:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8000eb4:	4413      	add	r3, r2
 8000eb6:	00db      	lsls	r3, r3, #3
 8000eb8:	3370      	adds	r3, #112	; 0x70
 8000eba:	443b      	add	r3, r7
 8000ebc:	f1a3 0160 	sub.w	r1, r3, #96	; 0x60
 8000ec0:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8000ec4:	e9c1 2300 	strd	r2, r3, [r1]
		for (int i = 0; i < 3; ++i) {
 8000ec8:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8000eca:	3301      	adds	r3, #1
 8000ecc:	66bb      	str	r3, [r7, #104]	; 0x68
 8000ece:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8000ed0:	2b02      	cmp	r3, #2
 8000ed2:	ddb9      	ble.n	8000e48 <productMatriz+0x18>
	for (int k = 0; k < 3; ++k) {
 8000ed4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8000ed6:	3301      	adds	r3, #1
 8000ed8:	66fb      	str	r3, [r7, #108]	; 0x6c
 8000eda:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8000edc:	2b02      	cmp	r3, #2
 8000ede:	ddb0      	ble.n	8000e42 <productMatriz+0x12>
		}
	}
	return producto;
 8000ee0:	68fb      	ldr	r3, [r7, #12]
 8000ee2:	4618      	mov	r0, r3
 8000ee4:	f107 0310 	add.w	r3, r7, #16
 8000ee8:	2248      	movs	r2, #72	; 0x48
 8000eea:	4619      	mov	r1, r3
 8000eec:	f00d ff1e 	bl	800ed2c <memcpy>
}
 8000ef0:	68f8      	ldr	r0, [r7, #12]
 8000ef2:	3770      	adds	r7, #112	; 0x70
 8000ef4:	46bd      	mov	sp, r7
 8000ef6:	bd80      	pop	{r7, pc}

08000ef8 <cinematicaInversa>:
double A1, B1, C1, XJ1_1, XJ1_2, YJ1_1, YJ1_2, ZJ1_1, ZJ1_2, A11, A12, A13, A14, A15;
double A2, B2, C2, XJ2_1, XJ2_2, YJ2_1, YJ2_2, ZJ2_1, ZJ2_2;
double A3, B3, C3, XJ3_1, XJ3_2, YJ3_1, YJ3_2, ZJ3_1, ZJ3_2;


void cinematicaInversa(Vec3D _Pfin) {
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	ed2d 8b04 	vpush	{d8-d9}
 8000efe:	b086      	sub	sp, #24
 8000f00:	af00      	add	r7, sp, #0
 8000f02:	eeb0 5b40 	vmov.f64	d5, d0
 8000f06:	eeb0 6b41 	vmov.f64	d6, d1
 8000f0a:	eeb0 7b42 	vmov.f64	d7, d2
 8000f0e:	ed87 5b00 	vstr	d5, [r7]
 8000f12:	ed87 6b02 	vstr	d6, [r7, #8]
 8000f16:	ed87 7b04 	vstr	d7, [r7, #16]

	A1 = 1.0 + pow(((-2.0  * (R + (_Pfin.y - r))) / (2 * _Pfin.z)), 2);
 8000f1a:	ed97 7b02 	vldr	d7, [r7, #8]
 8000f1e:	ed9f 6bee 	vldr	d6, [pc, #952]	; 80012d8 <cinematicaInversa+0x3e0>
 8000f22:	ee37 7b46 	vsub.f64	d7, d7, d6
 8000f26:	ed9f 6bee 	vldr	d6, [pc, #952]	; 80012e0 <cinematicaInversa+0x3e8>
 8000f2a:	ee37 7b06 	vadd.f64	d7, d7, d6
 8000f2e:	eeb8 6b00 	vmov.f64	d6, #128	; 0xc0000000 -2.0
 8000f32:	ee27 6b06 	vmul.f64	d6, d7, d6
 8000f36:	ed97 7b04 	vldr	d7, [r7, #16]
 8000f3a:	ee37 7b07 	vadd.f64	d7, d7, d7
 8000f3e:	ee86 5b07 	vdiv.f64	d5, d6, d7
 8000f42:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8000f46:	eeb0 0b45 	vmov.f64	d0, d5
 8000f4a:	f010 fd91 	bl	8011a70 <pow>
 8000f4e:	eeb0 7b40 	vmov.f64	d7, d0
 8000f52:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8000f56:	ee37 7b06 	vadd.f64	d7, d7, d6
 8000f5a:	4bf9      	ldr	r3, [pc, #996]	; (8001340 <cinematicaInversa+0x448>)
 8000f5c:	ed83 7b00 	vstr	d7, [r3]
	A2 = 4.0 + pow(((2.0 * sqrt(3.0) * R * C30 + 2.0 * R * S30 - 2.0 * sqrt(3) * (_Pfin.x + r * C30) - 2.0 * (_Pfin.y + r * S30)) / (2.0 * _Pfin.z)), 2.0);
 8000f60:	ed97 7b00 	vldr	d7, [r7]
 8000f64:	ed9f 6be0 	vldr	d6, [pc, #896]	; 80012e8 <cinematicaInversa+0x3f0>
 8000f68:	ee37 7b06 	vadd.f64	d7, d7, d6
 8000f6c:	ed9f 6be0 	vldr	d6, [pc, #896]	; 80012f0 <cinematicaInversa+0x3f8>
 8000f70:	ee27 7b06 	vmul.f64	d7, d7, d6
 8000f74:	ed9f 6be0 	vldr	d6, [pc, #896]	; 80012f8 <cinematicaInversa+0x400>
 8000f78:	ee36 6b47 	vsub.f64	d6, d6, d7
 8000f7c:	ed97 7b02 	vldr	d7, [r7, #8]
 8000f80:	ed9f 5bdf 	vldr	d5, [pc, #892]	; 8001300 <cinematicaInversa+0x408>
 8000f84:	ee37 7b05 	vadd.f64	d7, d7, d5
 8000f88:	ee37 7b07 	vadd.f64	d7, d7, d7
 8000f8c:	ee36 6b47 	vsub.f64	d6, d6, d7
 8000f90:	ed97 7b04 	vldr	d7, [r7, #16]
 8000f94:	ee37 7b07 	vadd.f64	d7, d7, d7
 8000f98:	ee86 5b07 	vdiv.f64	d5, d6, d7
 8000f9c:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8000fa0:	eeb0 0b45 	vmov.f64	d0, d5
 8000fa4:	f010 fd64 	bl	8011a70 <pow>
 8000fa8:	eeb0 7b40 	vmov.f64	d7, d0
 8000fac:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 8000fb0:	ee37 7b06 	vadd.f64	d7, d7, d6
 8000fb4:	4be3      	ldr	r3, [pc, #908]	; (8001344 <cinematicaInversa+0x44c>)
 8000fb6:	ed83 7b00 	vstr	d7, [r3]
	A3 = 4.0 + pow(((2.0 * sqrt(3.0) * (_Pfin.x + r * C150) - 2.0 * (_Pfin.y + r * S150) - 2.0 * sqrt(3) * R * C150 + 2.0 * R * S150) / (2.0 * _Pfin.z)), 2.0);
 8000fba:	ed97 7b00 	vldr	d7, [r7]
 8000fbe:	ed9f 6bca 	vldr	d6, [pc, #808]	; 80012e8 <cinematicaInversa+0x3f0>
 8000fc2:	ee37 7b46 	vsub.f64	d7, d7, d6
 8000fc6:	ed9f 6bca 	vldr	d6, [pc, #808]	; 80012f0 <cinematicaInversa+0x3f8>
 8000fca:	ee27 6b06 	vmul.f64	d6, d7, d6
 8000fce:	ed97 7b02 	vldr	d7, [r7, #8]
 8000fd2:	ed9f 5bcb 	vldr	d5, [pc, #812]	; 8001300 <cinematicaInversa+0x408>
 8000fd6:	ee37 7b05 	vadd.f64	d7, d7, d5
 8000fda:	ee37 7b07 	vadd.f64	d7, d7, d7
 8000fde:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000fe2:	ed9f 6bc9 	vldr	d6, [pc, #804]	; 8001308 <cinematicaInversa+0x410>
 8000fe6:	ee37 7b06 	vadd.f64	d7, d7, d6
 8000fea:	ed9f 6bbd 	vldr	d6, [pc, #756]	; 80012e0 <cinematicaInversa+0x3e8>
 8000fee:	ee37 6b06 	vadd.f64	d6, d7, d6
 8000ff2:	ed97 7b04 	vldr	d7, [r7, #16]
 8000ff6:	ee37 7b07 	vadd.f64	d7, d7, d7
 8000ffa:	ee86 5b07 	vdiv.f64	d5, d6, d7
 8000ffe:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001002:	eeb0 0b45 	vmov.f64	d0, d5
 8001006:	f010 fd33 	bl	8011a70 <pow>
 800100a:	eeb0 7b40 	vmov.f64	d7, d0
 800100e:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 8001012:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001016:	4bcc      	ldr	r3, [pc, #816]	; (8001348 <cinematicaInversa+0x450>)
 8001018:	ed83 7b00 	vstr	d7, [r3]

	B1 = (2.0 * R) + (2.0 * ((-2.0  * (R + (_Pfin.y - r))) / (2.0 * _Pfin.z)) * ((-pow(R, 2.0) + pow(L1, 2.0) + pow((_Pfin.y - r), 2.0) + pow(_Pfin.z, 2.0) - pow(L2, 2.0) + pow(_Pfin.x, 2)) / (2 * _Pfin.z)));
 800101c:	ed97 7b02 	vldr	d7, [r7, #8]
 8001020:	ed9f 6bad 	vldr	d6, [pc, #692]	; 80012d8 <cinematicaInversa+0x3e0>
 8001024:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001028:	ed9f 6bad 	vldr	d6, [pc, #692]	; 80012e0 <cinematicaInversa+0x3e8>
 800102c:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001030:	eeb8 6b00 	vmov.f64	d6, #128	; 0xc0000000 -2.0
 8001034:	ee27 5b06 	vmul.f64	d5, d7, d6
 8001038:	ed97 7b04 	vldr	d7, [r7, #16]
 800103c:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001040:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001044:	ee37 8b07 	vadd.f64	d8, d7, d7
 8001048:	ed97 7b02 	vldr	d7, [r7, #8]
 800104c:	ed9f 6ba2 	vldr	d6, [pc, #648]	; 80012d8 <cinematicaInversa+0x3e0>
 8001050:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001054:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001058:	eeb0 0b47 	vmov.f64	d0, d7
 800105c:	f010 fd08 	bl	8011a70 <pow>
 8001060:	eeb0 7b40 	vmov.f64	d7, d0
 8001064:	ed9f 6baa 	vldr	d6, [pc, #680]	; 8001310 <cinematicaInversa+0x418>
 8001068:	ee37 9b06 	vadd.f64	d9, d7, d6
 800106c:	ed97 7b04 	vldr	d7, [r7, #16]
 8001070:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001074:	eeb0 0b47 	vmov.f64	d0, d7
 8001078:	f010 fcfa 	bl	8011a70 <pow>
 800107c:	eeb0 7b40 	vmov.f64	d7, d0
 8001080:	ee39 7b07 	vadd.f64	d7, d9, d7
 8001084:	ed9f 6ba4 	vldr	d6, [pc, #656]	; 8001318 <cinematicaInversa+0x420>
 8001088:	ee37 9b46 	vsub.f64	d9, d7, d6
 800108c:	ed97 7b00 	vldr	d7, [r7]
 8001090:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001094:	eeb0 0b47 	vmov.f64	d0, d7
 8001098:	f010 fcea 	bl	8011a70 <pow>
 800109c:	eeb0 7b40 	vmov.f64	d7, d0
 80010a0:	ee39 5b07 	vadd.f64	d5, d9, d7
 80010a4:	ed97 7b04 	vldr	d7, [r7, #16]
 80010a8:	ee37 6b07 	vadd.f64	d6, d7, d7
 80010ac:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80010b0:	ee28 7b07 	vmul.f64	d7, d8, d7
 80010b4:	ed9f 6b9a 	vldr	d6, [pc, #616]	; 8001320 <cinematicaInversa+0x428>
 80010b8:	ee37 7b06 	vadd.f64	d7, d7, d6
 80010bc:	4ba3      	ldr	r3, [pc, #652]	; (800134c <cinematicaInversa+0x454>)
 80010be:	ed83 7b00 	vstr	d7, [r3]
	B2 = -2.0 * sqrt(3) * R * C30 - 2.0 * R * S30 + 2.0 * (((2.0 * sqrt(3) * R * C30 + 2.0 * R * S30)	+ (-2 * sqrt(3) * (_Pfin.x + r * C30)	- 2.0 * (_Pfin.y + r * S30))) / (2 * _Pfin.z)) * ((-pow(R, 2) + pow(L1, 2) + pow((_Pfin.x + r * C30), 2) + pow((_Pfin.y + r * S30), 2) + pow(_Pfin.z, 2) - pow(L2, 2)) / (2 * _Pfin.z));
 80010c2:	ed97 7b00 	vldr	d7, [r7]
 80010c6:	ed9f 6b88 	vldr	d6, [pc, #544]	; 80012e8 <cinematicaInversa+0x3f0>
 80010ca:	ee37 7b06 	vadd.f64	d7, d7, d6
 80010ce:	ed9f 6b96 	vldr	d6, [pc, #600]	; 8001328 <cinematicaInversa+0x430>
 80010d2:	ee27 6b06 	vmul.f64	d6, d7, d6
 80010d6:	ed97 7b02 	vldr	d7, [r7, #8]
 80010da:	ed9f 5b89 	vldr	d5, [pc, #548]	; 8001300 <cinematicaInversa+0x408>
 80010de:	ee37 7b05 	vadd.f64	d7, d7, d5
 80010e2:	ee37 7b07 	vadd.f64	d7, d7, d7
 80010e6:	ee36 7b47 	vsub.f64	d7, d6, d7
 80010ea:	ed9f 6b83 	vldr	d6, [pc, #524]	; 80012f8 <cinematicaInversa+0x400>
 80010ee:	ee37 5b06 	vadd.f64	d5, d7, d6
 80010f2:	ed97 7b04 	vldr	d7, [r7, #16]
 80010f6:	ee37 6b07 	vadd.f64	d6, d7, d7
 80010fa:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80010fe:	ee37 8b07 	vadd.f64	d8, d7, d7
 8001102:	ed97 7b00 	vldr	d7, [r7]
 8001106:	ed9f 6b78 	vldr	d6, [pc, #480]	; 80012e8 <cinematicaInversa+0x3f0>
 800110a:	ee37 7b06 	vadd.f64	d7, d7, d6
 800110e:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001112:	eeb0 0b47 	vmov.f64	d0, d7
 8001116:	f010 fcab 	bl	8011a70 <pow>
 800111a:	eeb0 7b40 	vmov.f64	d7, d0
 800111e:	ed9f 6b7c 	vldr	d6, [pc, #496]	; 8001310 <cinematicaInversa+0x418>
 8001122:	ee37 9b06 	vadd.f64	d9, d7, d6
 8001126:	ed97 7b02 	vldr	d7, [r7, #8]
 800112a:	ed9f 6b75 	vldr	d6, [pc, #468]	; 8001300 <cinematicaInversa+0x408>
 800112e:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001132:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001136:	eeb0 0b47 	vmov.f64	d0, d7
 800113a:	f010 fc99 	bl	8011a70 <pow>
 800113e:	eeb0 7b40 	vmov.f64	d7, d0
 8001142:	ee39 9b07 	vadd.f64	d9, d9, d7
 8001146:	ed97 7b04 	vldr	d7, [r7, #16]
 800114a:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800114e:	eeb0 0b47 	vmov.f64	d0, d7
 8001152:	f010 fc8d 	bl	8011a70 <pow>
 8001156:	eeb0 7b40 	vmov.f64	d7, d0
 800115a:	ee39 7b07 	vadd.f64	d7, d9, d7
 800115e:	ed9f 6b6e 	vldr	d6, [pc, #440]	; 8001318 <cinematicaInversa+0x420>
 8001162:	ee37 5b46 	vsub.f64	d5, d7, d6
 8001166:	ed97 7b04 	vldr	d7, [r7, #16]
 800116a:	ee37 6b07 	vadd.f64	d6, d7, d7
 800116e:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001172:	ee28 7b07 	vmul.f64	d7, d8, d7
 8001176:	ed9f 6b60 	vldr	d6, [pc, #384]	; 80012f8 <cinematicaInversa+0x400>
 800117a:	ee37 7b46 	vsub.f64	d7, d7, d6
 800117e:	4b74      	ldr	r3, [pc, #464]	; (8001350 <cinematicaInversa+0x458>)
 8001180:	ed83 7b00 	vstr	d7, [r3]
	B3 = 2.0 * sqrt(3) * R * C150 - 2.0 * R * S150 + 2.0 * ((2.0 * sqrt(3) * (_Pfin.x + r * C150) - 2.0 * (_Pfin.y + r * S150) - 2.0 * sqrt(3) * R * C150 + 2.0 * R * S150) / (2 * _Pfin.z)) * ((pow((_Pfin.x + r * C150), 2) + pow((_Pfin.y + r * S150), 2) + pow(_Pfin.z, 2) - pow(L2, 2) - pow(R, 2) + pow(L1, 2)) / (2 * _Pfin.z));
 8001184:	ed97 7b00 	vldr	d7, [r7]
 8001188:	ed9f 6b57 	vldr	d6, [pc, #348]	; 80012e8 <cinematicaInversa+0x3f0>
 800118c:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001190:	ed9f 6b57 	vldr	d6, [pc, #348]	; 80012f0 <cinematicaInversa+0x3f8>
 8001194:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001198:	ed97 7b02 	vldr	d7, [r7, #8]
 800119c:	ed9f 5b58 	vldr	d5, [pc, #352]	; 8001300 <cinematicaInversa+0x408>
 80011a0:	ee37 7b05 	vadd.f64	d7, d7, d5
 80011a4:	ee37 7b07 	vadd.f64	d7, d7, d7
 80011a8:	ee36 7b47 	vsub.f64	d7, d6, d7
 80011ac:	ed9f 6b56 	vldr	d6, [pc, #344]	; 8001308 <cinematicaInversa+0x410>
 80011b0:	ee37 7b06 	vadd.f64	d7, d7, d6
 80011b4:	ed9f 6b4a 	vldr	d6, [pc, #296]	; 80012e0 <cinematicaInversa+0x3e8>
 80011b8:	ee37 5b06 	vadd.f64	d5, d7, d6
 80011bc:	ed97 7b04 	vldr	d7, [r7, #16]
 80011c0:	ee37 6b07 	vadd.f64	d6, d7, d7
 80011c4:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80011c8:	ee37 8b07 	vadd.f64	d8, d7, d7
 80011cc:	ed97 7b00 	vldr	d7, [r7]
 80011d0:	ed9f 6b45 	vldr	d6, [pc, #276]	; 80012e8 <cinematicaInversa+0x3f0>
 80011d4:	ee37 7b46 	vsub.f64	d7, d7, d6
 80011d8:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80011dc:	eeb0 0b47 	vmov.f64	d0, d7
 80011e0:	f010 fc46 	bl	8011a70 <pow>
 80011e4:	eeb0 9b40 	vmov.f64	d9, d0
 80011e8:	ed97 7b02 	vldr	d7, [r7, #8]
 80011ec:	ed9f 6b44 	vldr	d6, [pc, #272]	; 8001300 <cinematicaInversa+0x408>
 80011f0:	ee37 7b06 	vadd.f64	d7, d7, d6
 80011f4:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80011f8:	eeb0 0b47 	vmov.f64	d0, d7
 80011fc:	f010 fc38 	bl	8011a70 <pow>
 8001200:	eeb0 7b40 	vmov.f64	d7, d0
 8001204:	ee39 9b07 	vadd.f64	d9, d9, d7
 8001208:	ed97 7b04 	vldr	d7, [r7, #16]
 800120c:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001210:	eeb0 0b47 	vmov.f64	d0, d7
 8001214:	f010 fc2c 	bl	8011a70 <pow>
 8001218:	eeb0 7b40 	vmov.f64	d7, d0
 800121c:	ee39 7b07 	vadd.f64	d7, d9, d7
 8001220:	ed9f 6b3d 	vldr	d6, [pc, #244]	; 8001318 <cinematicaInversa+0x420>
 8001224:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001228:	ed9f 6b41 	vldr	d6, [pc, #260]	; 8001330 <cinematicaInversa+0x438>
 800122c:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001230:	ed9f 6b41 	vldr	d6, [pc, #260]	; 8001338 <cinematicaInversa+0x440>
 8001234:	ee37 5b06 	vadd.f64	d5, d7, d6
 8001238:	ed97 7b04 	vldr	d7, [r7, #16]
 800123c:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001240:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001244:	ee28 7b07 	vmul.f64	d7, d8, d7
 8001248:	ed9f 6b2b 	vldr	d6, [pc, #172]	; 80012f8 <cinematicaInversa+0x400>
 800124c:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001250:	4b40      	ldr	r3, [pc, #256]	; (8001354 <cinematicaInversa+0x45c>)
 8001252:	ed83 7b00 	vstr	d7, [r3]

	C1 = (pow(((pow((_Pfin.y - r), 2) + pow(_Pfin.z, 2) - pow(L2, 2) + pow(_Pfin.x, 2) - pow(R, 2) + pow(L1, 2)) / (2 * _Pfin.z)), 2) - pow(L1, 2) + pow(R, 2));
 8001256:	ed97 7b02 	vldr	d7, [r7, #8]
 800125a:	ed9f 6b1f 	vldr	d6, [pc, #124]	; 80012d8 <cinematicaInversa+0x3e0>
 800125e:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001262:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001266:	eeb0 0b47 	vmov.f64	d0, d7
 800126a:	f010 fc01 	bl	8011a70 <pow>
 800126e:	eeb0 8b40 	vmov.f64	d8, d0
 8001272:	ed97 7b04 	vldr	d7, [r7, #16]
 8001276:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800127a:	eeb0 0b47 	vmov.f64	d0, d7
 800127e:	f010 fbf7 	bl	8011a70 <pow>
 8001282:	eeb0 7b40 	vmov.f64	d7, d0
 8001286:	ee38 7b07 	vadd.f64	d7, d8, d7
 800128a:	ed9f 6b23 	vldr	d6, [pc, #140]	; 8001318 <cinematicaInversa+0x420>
 800128e:	ee37 8b46 	vsub.f64	d8, d7, d6
 8001292:	ed97 7b00 	vldr	d7, [r7]
 8001296:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800129a:	eeb0 0b47 	vmov.f64	d0, d7
 800129e:	f010 fbe7 	bl	8011a70 <pow>
 80012a2:	eeb0 7b40 	vmov.f64	d7, d0
 80012a6:	ee38 7b07 	vadd.f64	d7, d8, d7
 80012aa:	ed9f 6b21 	vldr	d6, [pc, #132]	; 8001330 <cinematicaInversa+0x438>
 80012ae:	ee37 7b46 	vsub.f64	d7, d7, d6
 80012b2:	ed9f 6b21 	vldr	d6, [pc, #132]	; 8001338 <cinematicaInversa+0x440>
 80012b6:	ee37 6b06 	vadd.f64	d6, d7, d6
 80012ba:	ed97 7b04 	vldr	d7, [r7, #16]
 80012be:	ee37 7b07 	vadd.f64	d7, d7, d7
 80012c2:	ee86 5b07 	vdiv.f64	d5, d6, d7
 80012c6:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80012ca:	eeb0 0b45 	vmov.f64	d0, d5
 80012ce:	f010 fbcf 	bl	8011a70 <pow>
 80012d2:	eeb0 7b40 	vmov.f64	d7, d0
 80012d6:	e03f      	b.n	8001358 <cinematicaInversa+0x460>
 80012d8:	1eb851ec 	.word	0x1eb851ec
 80012dc:	3fb1eb85 	.word	0x3fb1eb85
 80012e0:	24dd2f1b 	.word	0x24dd2f1b
 80012e4:	3fc58106 	.word	0x3fc58106
 80012e8:	5625749b 	.word	0x5625749b
 80012ec:	3faf09d1 	.word	0x3faf09d1
 80012f0:	e8584caa 	.word	0xe8584caa
 80012f4:	400bb67a 	.word	0x400bb67a
 80012f8:	24dd2f1d 	.word	0x24dd2f1d
 80012fc:	3fe58106 	.word	0x3fe58106
 8001300:	1eb851ec 	.word	0x1eb851ec
 8001304:	3fa1eb85 	.word	0x3fa1eb85
 8001308:	9ba5e356 	.word	0x9ba5e356
 800130c:	3fe020c4 	.word	0x3fe020c4
 8001310:	f705857e 	.word	0xf705857e
 8001314:	3f881e03 	.word	0x3f881e03
 8001318:	70a3d70a 	.word	0x70a3d70a
 800131c:	3fd70a3d 	.word	0x3fd70a3d
 8001320:	24dd2f1b 	.word	0x24dd2f1b
 8001324:	3fd58106 	.word	0x3fd58106
 8001328:	e8584caa 	.word	0xe8584caa
 800132c:	c00bb67a 	.word	0xc00bb67a
 8001330:	93d96639 	.word	0x93d96639
 8001334:	3f9ce6c0 	.word	0x3f9ce6c0
 8001338:	47ae147c 	.word	0x47ae147c
 800133c:	3fa47ae1 	.word	0x3fa47ae1
 8001340:	240002f8 	.word	0x240002f8
 8001344:	24000340 	.word	0x24000340
 8001348:	24000388 	.word	0x24000388
 800134c:	24000300 	.word	0x24000300
 8001350:	24000348 	.word	0x24000348
 8001354:	24000390 	.word	0x24000390
 8001358:	ed9f 6bdf 	vldr	d6, [pc, #892]	; 80016d8 <cinematicaInversa+0x7e0>
 800135c:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001360:	ed9f 6bdf 	vldr	d6, [pc, #892]	; 80016e0 <cinematicaInversa+0x7e8>
 8001364:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001368:	4be7      	ldr	r3, [pc, #924]	; (8001708 <cinematicaInversa+0x810>)
 800136a:	ed83 7b00 	vstr	d7, [r3]
	C2 = pow(R, 2) - pow(L1, 2) + pow(((-pow(R, 2) + pow(L1, 2) + pow((_Pfin.x + r * C30), 2) + pow((_Pfin.y + r * S30), 2) + pow(_Pfin.z, 2) - pow(L2, 2)) / (2.0 * _Pfin.z)), 2.0);
 800136e:	ed97 7b00 	vldr	d7, [r7]
 8001372:	ed9f 6bdd 	vldr	d6, [pc, #884]	; 80016e8 <cinematicaInversa+0x7f0>
 8001376:	ee37 7b06 	vadd.f64	d7, d7, d6
 800137a:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800137e:	eeb0 0b47 	vmov.f64	d0, d7
 8001382:	f010 fb75 	bl	8011a70 <pow>
 8001386:	eeb0 7b40 	vmov.f64	d7, d0
 800138a:	ed9f 6bd9 	vldr	d6, [pc, #868]	; 80016f0 <cinematicaInversa+0x7f8>
 800138e:	ee37 8b06 	vadd.f64	d8, d7, d6
 8001392:	ed97 7b02 	vldr	d7, [r7, #8]
 8001396:	ed9f 6bd8 	vldr	d6, [pc, #864]	; 80016f8 <cinematicaInversa+0x800>
 800139a:	ee37 7b06 	vadd.f64	d7, d7, d6
 800139e:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80013a2:	eeb0 0b47 	vmov.f64	d0, d7
 80013a6:	f010 fb63 	bl	8011a70 <pow>
 80013aa:	eeb0 7b40 	vmov.f64	d7, d0
 80013ae:	ee38 8b07 	vadd.f64	d8, d8, d7
 80013b2:	ed97 7b04 	vldr	d7, [r7, #16]
 80013b6:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80013ba:	eeb0 0b47 	vmov.f64	d0, d7
 80013be:	f010 fb57 	bl	8011a70 <pow>
 80013c2:	eeb0 7b40 	vmov.f64	d7, d0
 80013c6:	ee38 7b07 	vadd.f64	d7, d8, d7
 80013ca:	ed9f 6bcd 	vldr	d6, [pc, #820]	; 8001700 <cinematicaInversa+0x808>
 80013ce:	ee37 6b46 	vsub.f64	d6, d7, d6
 80013d2:	ed97 7b04 	vldr	d7, [r7, #16]
 80013d6:	ee37 7b07 	vadd.f64	d7, d7, d7
 80013da:	ee86 5b07 	vdiv.f64	d5, d6, d7
 80013de:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80013e2:	eeb0 0b45 	vmov.f64	d0, d5
 80013e6:	f010 fb43 	bl	8011a70 <pow>
 80013ea:	eeb0 7b40 	vmov.f64	d7, d0
 80013ee:	ed9f 6bc0 	vldr	d6, [pc, #768]	; 80016f0 <cinematicaInversa+0x7f8>
 80013f2:	ee37 7b46 	vsub.f64	d7, d7, d6
 80013f6:	4bc5      	ldr	r3, [pc, #788]	; (800170c <cinematicaInversa+0x814>)
 80013f8:	ed83 7b00 	vstr	d7, [r3]
	C3 = pow(R, 2) - pow(L1, 2) + pow(((pow((_Pfin.x + r * C150), 2) + pow((_Pfin.y + r * S150), 2) + pow(_Pfin.z, 2) - pow(L2, 2) - pow(R, 2) + pow(L1, 2)) / (2.0 * _Pfin.z)), 2.0);
 80013fc:	ed97 7b00 	vldr	d7, [r7]
 8001400:	ed9f 6bb9 	vldr	d6, [pc, #740]	; 80016e8 <cinematicaInversa+0x7f0>
 8001404:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001408:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800140c:	eeb0 0b47 	vmov.f64	d0, d7
 8001410:	f010 fb2e 	bl	8011a70 <pow>
 8001414:	eeb0 8b40 	vmov.f64	d8, d0
 8001418:	ed97 7b02 	vldr	d7, [r7, #8]
 800141c:	ed9f 6bb6 	vldr	d6, [pc, #728]	; 80016f8 <cinematicaInversa+0x800>
 8001420:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001424:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001428:	eeb0 0b47 	vmov.f64	d0, d7
 800142c:	f010 fb20 	bl	8011a70 <pow>
 8001430:	eeb0 7b40 	vmov.f64	d7, d0
 8001434:	ee38 8b07 	vadd.f64	d8, d8, d7
 8001438:	ed97 7b04 	vldr	d7, [r7, #16]
 800143c:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001440:	eeb0 0b47 	vmov.f64	d0, d7
 8001444:	f010 fb14 	bl	8011a70 <pow>
 8001448:	eeb0 7b40 	vmov.f64	d7, d0
 800144c:	ee38 7b07 	vadd.f64	d7, d8, d7
 8001450:	ed9f 6bab 	vldr	d6, [pc, #684]	; 8001700 <cinematicaInversa+0x808>
 8001454:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001458:	ed9f 6ba1 	vldr	d6, [pc, #644]	; 80016e0 <cinematicaInversa+0x7e8>
 800145c:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001460:	ed9f 6b9d 	vldr	d6, [pc, #628]	; 80016d8 <cinematicaInversa+0x7e0>
 8001464:	ee37 6b06 	vadd.f64	d6, d7, d6
 8001468:	ed97 7b04 	vldr	d7, [r7, #16]
 800146c:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001470:	ee86 5b07 	vdiv.f64	d5, d6, d7
 8001474:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001478:	eeb0 0b45 	vmov.f64	d0, d5
 800147c:	f010 faf8 	bl	8011a70 <pow>
 8001480:	eeb0 7b40 	vmov.f64	d7, d0
 8001484:	ed9f 6b9a 	vldr	d6, [pc, #616]	; 80016f0 <cinematicaInversa+0x7f8>
 8001488:	ee37 7b46 	vsub.f64	d7, d7, d6
 800148c:	4ba0      	ldr	r3, [pc, #640]	; (8001710 <cinematicaInversa+0x818>)
 800148e:	ed83 7b00 	vstr	d7, [r3]

	YJ1_1 = (-B1 - sqrt(pow(B1, 2) - 4 * A1 * C1)) / (2 * A1);
 8001492:	4ba0      	ldr	r3, [pc, #640]	; (8001714 <cinematicaInversa+0x81c>)
 8001494:	ed93 7b00 	vldr	d7, [r3]
 8001498:	eeb1 8b47 	vneg.f64	d8, d7
 800149c:	4b9d      	ldr	r3, [pc, #628]	; (8001714 <cinematicaInversa+0x81c>)
 800149e:	ed93 7b00 	vldr	d7, [r3]
 80014a2:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80014a6:	eeb0 0b47 	vmov.f64	d0, d7
 80014aa:	f010 fae1 	bl	8011a70 <pow>
 80014ae:	eeb0 5b40 	vmov.f64	d5, d0
 80014b2:	4b99      	ldr	r3, [pc, #612]	; (8001718 <cinematicaInversa+0x820>)
 80014b4:	ed93 7b00 	vldr	d7, [r3]
 80014b8:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 80014bc:	ee27 6b06 	vmul.f64	d6, d7, d6
 80014c0:	4b91      	ldr	r3, [pc, #580]	; (8001708 <cinematicaInversa+0x810>)
 80014c2:	ed93 7b00 	vldr	d7, [r3]
 80014c6:	ee26 7b07 	vmul.f64	d7, d6, d7
 80014ca:	ee35 7b47 	vsub.f64	d7, d5, d7
 80014ce:	eeb0 0b47 	vmov.f64	d0, d7
 80014d2:	f010 fd4d 	bl	8011f70 <sqrt>
 80014d6:	eeb0 7b40 	vmov.f64	d7, d0
 80014da:	ee38 5b47 	vsub.f64	d5, d8, d7
 80014de:	4b8e      	ldr	r3, [pc, #568]	; (8001718 <cinematicaInversa+0x820>)
 80014e0:	ed93 7b00 	vldr	d7, [r3]
 80014e4:	ee37 6b07 	vadd.f64	d6, d7, d7
 80014e8:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80014ec:	4b8b      	ldr	r3, [pc, #556]	; (800171c <cinematicaInversa+0x824>)
 80014ee:	ed83 7b00 	vstr	d7, [r3]
	YJ1_2 = (-B1 + sqrt(pow(B1, 2) - 4 * A1 * C1)) / (2 * A1);
 80014f2:	4b88      	ldr	r3, [pc, #544]	; (8001714 <cinematicaInversa+0x81c>)
 80014f4:	ed93 7b00 	vldr	d7, [r3]
 80014f8:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80014fc:	eeb0 0b47 	vmov.f64	d0, d7
 8001500:	f010 fab6 	bl	8011a70 <pow>
 8001504:	eeb0 5b40 	vmov.f64	d5, d0
 8001508:	4b83      	ldr	r3, [pc, #524]	; (8001718 <cinematicaInversa+0x820>)
 800150a:	ed93 7b00 	vldr	d7, [r3]
 800150e:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 8001512:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001516:	4b7c      	ldr	r3, [pc, #496]	; (8001708 <cinematicaInversa+0x810>)
 8001518:	ed93 7b00 	vldr	d7, [r3]
 800151c:	ee26 7b07 	vmul.f64	d7, d6, d7
 8001520:	ee35 7b47 	vsub.f64	d7, d5, d7
 8001524:	eeb0 0b47 	vmov.f64	d0, d7
 8001528:	f010 fd22 	bl	8011f70 <sqrt>
 800152c:	eeb0 6b40 	vmov.f64	d6, d0
 8001530:	4b78      	ldr	r3, [pc, #480]	; (8001714 <cinematicaInversa+0x81c>)
 8001532:	ed93 7b00 	vldr	d7, [r3]
 8001536:	ee36 5b47 	vsub.f64	d5, d6, d7
 800153a:	4b77      	ldr	r3, [pc, #476]	; (8001718 <cinematicaInversa+0x820>)
 800153c:	ed93 7b00 	vldr	d7, [r3]
 8001540:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001544:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001548:	4b75      	ldr	r3, [pc, #468]	; (8001720 <cinematicaInversa+0x828>)
 800154a:	ed83 7b00 	vstr	d7, [r3]
	YJ2_1 = (-B2 + sqrt(pow(B2, 2) - 4 * A2 * C2)) / (2 * A2);
 800154e:	4b75      	ldr	r3, [pc, #468]	; (8001724 <cinematicaInversa+0x82c>)
 8001550:	ed93 7b00 	vldr	d7, [r3]
 8001554:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001558:	eeb0 0b47 	vmov.f64	d0, d7
 800155c:	f010 fa88 	bl	8011a70 <pow>
 8001560:	eeb0 5b40 	vmov.f64	d5, d0
 8001564:	4b70      	ldr	r3, [pc, #448]	; (8001728 <cinematicaInversa+0x830>)
 8001566:	ed93 7b00 	vldr	d7, [r3]
 800156a:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 800156e:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001572:	4b66      	ldr	r3, [pc, #408]	; (800170c <cinematicaInversa+0x814>)
 8001574:	ed93 7b00 	vldr	d7, [r3]
 8001578:	ee26 7b07 	vmul.f64	d7, d6, d7
 800157c:	ee35 7b47 	vsub.f64	d7, d5, d7
 8001580:	eeb0 0b47 	vmov.f64	d0, d7
 8001584:	f010 fcf4 	bl	8011f70 <sqrt>
 8001588:	eeb0 6b40 	vmov.f64	d6, d0
 800158c:	4b65      	ldr	r3, [pc, #404]	; (8001724 <cinematicaInversa+0x82c>)
 800158e:	ed93 7b00 	vldr	d7, [r3]
 8001592:	ee36 5b47 	vsub.f64	d5, d6, d7
 8001596:	4b64      	ldr	r3, [pc, #400]	; (8001728 <cinematicaInversa+0x830>)
 8001598:	ed93 7b00 	vldr	d7, [r3]
 800159c:	ee37 6b07 	vadd.f64	d6, d7, d7
 80015a0:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80015a4:	4b61      	ldr	r3, [pc, #388]	; (800172c <cinematicaInversa+0x834>)
 80015a6:	ed83 7b00 	vstr	d7, [r3]
	YJ2_2 = (-B2 - sqrt(pow(B2, 2) - 4 * A2 * C2)) / (2 * A2);
 80015aa:	4b5e      	ldr	r3, [pc, #376]	; (8001724 <cinematicaInversa+0x82c>)
 80015ac:	ed93 7b00 	vldr	d7, [r3]
 80015b0:	eeb1 8b47 	vneg.f64	d8, d7
 80015b4:	4b5b      	ldr	r3, [pc, #364]	; (8001724 <cinematicaInversa+0x82c>)
 80015b6:	ed93 7b00 	vldr	d7, [r3]
 80015ba:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80015be:	eeb0 0b47 	vmov.f64	d0, d7
 80015c2:	f010 fa55 	bl	8011a70 <pow>
 80015c6:	eeb0 5b40 	vmov.f64	d5, d0
 80015ca:	4b57      	ldr	r3, [pc, #348]	; (8001728 <cinematicaInversa+0x830>)
 80015cc:	ed93 7b00 	vldr	d7, [r3]
 80015d0:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 80015d4:	ee27 6b06 	vmul.f64	d6, d7, d6
 80015d8:	4b4c      	ldr	r3, [pc, #304]	; (800170c <cinematicaInversa+0x814>)
 80015da:	ed93 7b00 	vldr	d7, [r3]
 80015de:	ee26 7b07 	vmul.f64	d7, d6, d7
 80015e2:	ee35 7b47 	vsub.f64	d7, d5, d7
 80015e6:	eeb0 0b47 	vmov.f64	d0, d7
 80015ea:	f010 fcc1 	bl	8011f70 <sqrt>
 80015ee:	eeb0 7b40 	vmov.f64	d7, d0
 80015f2:	ee38 5b47 	vsub.f64	d5, d8, d7
 80015f6:	4b4c      	ldr	r3, [pc, #304]	; (8001728 <cinematicaInversa+0x830>)
 80015f8:	ed93 7b00 	vldr	d7, [r3]
 80015fc:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001600:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001604:	4b4a      	ldr	r3, [pc, #296]	; (8001730 <cinematicaInversa+0x838>)
 8001606:	ed83 7b00 	vstr	d7, [r3]
	YJ3_1 = (-B3 + sqrt(pow(B3, 2) - 4 * A3 * C3)) / (2 * A3);
 800160a:	4b4a      	ldr	r3, [pc, #296]	; (8001734 <cinematicaInversa+0x83c>)
 800160c:	ed93 7b00 	vldr	d7, [r3]
 8001610:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001614:	eeb0 0b47 	vmov.f64	d0, d7
 8001618:	f010 fa2a 	bl	8011a70 <pow>
 800161c:	eeb0 5b40 	vmov.f64	d5, d0
 8001620:	4b45      	ldr	r3, [pc, #276]	; (8001738 <cinematicaInversa+0x840>)
 8001622:	ed93 7b00 	vldr	d7, [r3]
 8001626:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 800162a:	ee27 6b06 	vmul.f64	d6, d7, d6
 800162e:	4b38      	ldr	r3, [pc, #224]	; (8001710 <cinematicaInversa+0x818>)
 8001630:	ed93 7b00 	vldr	d7, [r3]
 8001634:	ee26 7b07 	vmul.f64	d7, d6, d7
 8001638:	ee35 7b47 	vsub.f64	d7, d5, d7
 800163c:	eeb0 0b47 	vmov.f64	d0, d7
 8001640:	f010 fc96 	bl	8011f70 <sqrt>
 8001644:	eeb0 6b40 	vmov.f64	d6, d0
 8001648:	4b3a      	ldr	r3, [pc, #232]	; (8001734 <cinematicaInversa+0x83c>)
 800164a:	ed93 7b00 	vldr	d7, [r3]
 800164e:	ee36 5b47 	vsub.f64	d5, d6, d7
 8001652:	4b39      	ldr	r3, [pc, #228]	; (8001738 <cinematicaInversa+0x840>)
 8001654:	ed93 7b00 	vldr	d7, [r3]
 8001658:	ee37 6b07 	vadd.f64	d6, d7, d7
 800165c:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001660:	4b36      	ldr	r3, [pc, #216]	; (800173c <cinematicaInversa+0x844>)
 8001662:	ed83 7b00 	vstr	d7, [r3]
	YJ3_2 = (-B3 - sqrt(pow(B3, 2) - 4 * A3 * C3)) / (2 * A3);
 8001666:	4b33      	ldr	r3, [pc, #204]	; (8001734 <cinematicaInversa+0x83c>)
 8001668:	ed93 7b00 	vldr	d7, [r3]
 800166c:	eeb1 8b47 	vneg.f64	d8, d7
 8001670:	4b30      	ldr	r3, [pc, #192]	; (8001734 <cinematicaInversa+0x83c>)
 8001672:	ed93 7b00 	vldr	d7, [r3]
 8001676:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800167a:	eeb0 0b47 	vmov.f64	d0, d7
 800167e:	f010 f9f7 	bl	8011a70 <pow>
 8001682:	eeb0 5b40 	vmov.f64	d5, d0
 8001686:	4b2c      	ldr	r3, [pc, #176]	; (8001738 <cinematicaInversa+0x840>)
 8001688:	ed93 7b00 	vldr	d7, [r3]
 800168c:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 8001690:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001694:	4b1e      	ldr	r3, [pc, #120]	; (8001710 <cinematicaInversa+0x818>)
 8001696:	ed93 7b00 	vldr	d7, [r3]
 800169a:	ee26 7b07 	vmul.f64	d7, d6, d7
 800169e:	ee35 7b47 	vsub.f64	d7, d5, d7
 80016a2:	eeb0 0b47 	vmov.f64	d0, d7
 80016a6:	f010 fc63 	bl	8011f70 <sqrt>
 80016aa:	eeb0 7b40 	vmov.f64	d7, d0
 80016ae:	ee38 5b47 	vsub.f64	d5, d8, d7
 80016b2:	4b21      	ldr	r3, [pc, #132]	; (8001738 <cinematicaInversa+0x840>)
 80016b4:	ed93 7b00 	vldr	d7, [r3]
 80016b8:	ee37 6b07 	vadd.f64	d6, d7, d7
 80016bc:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80016c0:	4b1f      	ldr	r3, [pc, #124]	; (8001740 <cinematicaInversa+0x848>)
 80016c2:	ed83 7b00 	vstr	d7, [r3]

	XJ1_1 = 0;
 80016c6:	491f      	ldr	r1, [pc, #124]	; (8001744 <cinematicaInversa+0x84c>)
 80016c8:	f04f 0200 	mov.w	r2, #0
 80016cc:	f04f 0300 	mov.w	r3, #0
 80016d0:	e9c1 2300 	strd	r2, r3, [r1]
 80016d4:	e038      	b.n	8001748 <cinematicaInversa+0x850>
 80016d6:	bf00      	nop
 80016d8:	47ae147c 	.word	0x47ae147c
 80016dc:	3fa47ae1 	.word	0x3fa47ae1
 80016e0:	93d96639 	.word	0x93d96639
 80016e4:	3f9ce6c0 	.word	0x3f9ce6c0
 80016e8:	5625749b 	.word	0x5625749b
 80016ec:	3faf09d1 	.word	0x3faf09d1
 80016f0:	f705857e 	.word	0xf705857e
 80016f4:	3f881e03 	.word	0x3f881e03
 80016f8:	1eb851ec 	.word	0x1eb851ec
 80016fc:	3fa1eb85 	.word	0x3fa1eb85
 8001700:	70a3d70a 	.word	0x70a3d70a
 8001704:	3fd70a3d 	.word	0x3fd70a3d
 8001708:	24000308 	.word	0x24000308
 800170c:	24000350 	.word	0x24000350
 8001710:	24000398 	.word	0x24000398
 8001714:	24000300 	.word	0x24000300
 8001718:	240002f8 	.word	0x240002f8
 800171c:	24000320 	.word	0x24000320
 8001720:	24000328 	.word	0x24000328
 8001724:	24000348 	.word	0x24000348
 8001728:	24000340 	.word	0x24000340
 800172c:	24000368 	.word	0x24000368
 8001730:	24000370 	.word	0x24000370
 8001734:	24000390 	.word	0x24000390
 8001738:	24000388 	.word	0x24000388
 800173c:	240003b0 	.word	0x240003b0
 8001740:	240003b8 	.word	0x240003b8
 8001744:	24000310 	.word	0x24000310
	XJ1_2 = 0;
 8001748:	49f1      	ldr	r1, [pc, #964]	; (8001b10 <cinematicaInversa+0xc18>)
 800174a:	f04f 0200 	mov.w	r2, #0
 800174e:	f04f 0300 	mov.w	r3, #0
 8001752:	e9c1 2300 	strd	r2, r3, [r1]
	XJ2_1 = sqrt(3) * YJ2_1;
 8001756:	4bef      	ldr	r3, [pc, #956]	; (8001b14 <cinematicaInversa+0xc1c>)
 8001758:	ed93 7b00 	vldr	d7, [r3]
 800175c:	ed9f 6bd2 	vldr	d6, [pc, #840]	; 8001aa8 <cinematicaInversa+0xbb0>
 8001760:	ee27 7b06 	vmul.f64	d7, d7, d6
 8001764:	4bec      	ldr	r3, [pc, #944]	; (8001b18 <cinematicaInversa+0xc20>)
 8001766:	ed83 7b00 	vstr	d7, [r3]
	XJ2_2 = sqrt(3) * YJ2_2;
 800176a:	4bec      	ldr	r3, [pc, #944]	; (8001b1c <cinematicaInversa+0xc24>)
 800176c:	ed93 7b00 	vldr	d7, [r3]
 8001770:	ed9f 6bcd 	vldr	d6, [pc, #820]	; 8001aa8 <cinematicaInversa+0xbb0>
 8001774:	ee27 7b06 	vmul.f64	d7, d7, d6
 8001778:	4be9      	ldr	r3, [pc, #932]	; (8001b20 <cinematicaInversa+0xc28>)
 800177a:	ed83 7b00 	vstr	d7, [r3]
	XJ3_1 = -sqrt(3) * YJ3_1;
 800177e:	4be9      	ldr	r3, [pc, #932]	; (8001b24 <cinematicaInversa+0xc2c>)
 8001780:	ed93 7b00 	vldr	d7, [r3]
 8001784:	ed9f 6bca 	vldr	d6, [pc, #808]	; 8001ab0 <cinematicaInversa+0xbb8>
 8001788:	ee27 7b06 	vmul.f64	d7, d7, d6
 800178c:	4be6      	ldr	r3, [pc, #920]	; (8001b28 <cinematicaInversa+0xc30>)
 800178e:	ed83 7b00 	vstr	d7, [r3]
	XJ3_2 = -sqrt(3) * YJ3_2;
 8001792:	4be6      	ldr	r3, [pc, #920]	; (8001b2c <cinematicaInversa+0xc34>)
 8001794:	ed93 7b00 	vldr	d7, [r3]
 8001798:	ed9f 6bc5 	vldr	d6, [pc, #788]	; 8001ab0 <cinematicaInversa+0xbb8>
 800179c:	ee27 7b06 	vmul.f64	d7, d7, d6
 80017a0:	4be3      	ldr	r3, [pc, #908]	; (8001b30 <cinematicaInversa+0xc38>)
 80017a2:	ed83 7b00 	vstr	d7, [r3]

	ZJ1_1 = ((YJ1_1 * ((-2 * (R + (_Pfin.y - r))) / (2 * _Pfin.z))) + ((pow((_Pfin.y - r), 2) + pow(_Pfin.z, 2) - pow(L2, 2) + pow(_Pfin.x, 2) - pow(R, 2) + pow(L1, 2)) / (2 * _Pfin.z)));
 80017a6:	ed97 7b02 	vldr	d7, [r7, #8]
 80017aa:	ed9f 6bc3 	vldr	d6, [pc, #780]	; 8001ab8 <cinematicaInversa+0xbc0>
 80017ae:	ee37 7b46 	vsub.f64	d7, d7, d6
 80017b2:	ed9f 6bc3 	vldr	d6, [pc, #780]	; 8001ac0 <cinematicaInversa+0xbc8>
 80017b6:	ee37 7b06 	vadd.f64	d7, d7, d6
 80017ba:	eeb8 6b00 	vmov.f64	d6, #128	; 0xc0000000 -2.0
 80017be:	ee27 5b06 	vmul.f64	d5, d7, d6
 80017c2:	ed97 7b04 	vldr	d7, [r7, #16]
 80017c6:	ee37 7b07 	vadd.f64	d7, d7, d7
 80017ca:	ee85 6b07 	vdiv.f64	d6, d5, d7
 80017ce:	4bd9      	ldr	r3, [pc, #868]	; (8001b34 <cinematicaInversa+0xc3c>)
 80017d0:	ed93 7b00 	vldr	d7, [r3]
 80017d4:	ee26 8b07 	vmul.f64	d8, d6, d7
 80017d8:	ed97 7b02 	vldr	d7, [r7, #8]
 80017dc:	ed9f 6bb6 	vldr	d6, [pc, #728]	; 8001ab8 <cinematicaInversa+0xbc0>
 80017e0:	ee37 7b46 	vsub.f64	d7, d7, d6
 80017e4:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80017e8:	eeb0 0b47 	vmov.f64	d0, d7
 80017ec:	f010 f940 	bl	8011a70 <pow>
 80017f0:	eeb0 9b40 	vmov.f64	d9, d0
 80017f4:	ed97 7b04 	vldr	d7, [r7, #16]
 80017f8:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80017fc:	eeb0 0b47 	vmov.f64	d0, d7
 8001800:	f010 f936 	bl	8011a70 <pow>
 8001804:	eeb0 7b40 	vmov.f64	d7, d0
 8001808:	ee39 7b07 	vadd.f64	d7, d9, d7
 800180c:	ed9f 6bae 	vldr	d6, [pc, #696]	; 8001ac8 <cinematicaInversa+0xbd0>
 8001810:	ee37 9b46 	vsub.f64	d9, d7, d6
 8001814:	ed97 7b00 	vldr	d7, [r7]
 8001818:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800181c:	eeb0 0b47 	vmov.f64	d0, d7
 8001820:	f010 f926 	bl	8011a70 <pow>
 8001824:	eeb0 7b40 	vmov.f64	d7, d0
 8001828:	ee39 7b07 	vadd.f64	d7, d9, d7
 800182c:	ed9f 6ba8 	vldr	d6, [pc, #672]	; 8001ad0 <cinematicaInversa+0xbd8>
 8001830:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001834:	ed9f 6ba8 	vldr	d6, [pc, #672]	; 8001ad8 <cinematicaInversa+0xbe0>
 8001838:	ee37 5b06 	vadd.f64	d5, d7, d6
 800183c:	ed97 7b04 	vldr	d7, [r7, #16]
 8001840:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001844:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001848:	ee38 7b07 	vadd.f64	d7, d8, d7
 800184c:	4bba      	ldr	r3, [pc, #744]	; (8001b38 <cinematicaInversa+0xc40>)
 800184e:	ed83 7b00 	vstr	d7, [r3]
	ZJ1_2 = ((YJ1_2 * ((-2 * (R + (_Pfin.y - r))) / (2 * _Pfin.z))) + ((pow((_Pfin.y - r), 2) + pow(_Pfin.z, 2) - pow(L2, 2) + pow(_Pfin.x, 2) - pow(R, 2) + pow(L1, 2)) / (2 * _Pfin.z)));
 8001852:	ed97 7b02 	vldr	d7, [r7, #8]
 8001856:	ed9f 6b98 	vldr	d6, [pc, #608]	; 8001ab8 <cinematicaInversa+0xbc0>
 800185a:	ee37 7b46 	vsub.f64	d7, d7, d6
 800185e:	ed9f 6b98 	vldr	d6, [pc, #608]	; 8001ac0 <cinematicaInversa+0xbc8>
 8001862:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001866:	eeb8 6b00 	vmov.f64	d6, #128	; 0xc0000000 -2.0
 800186a:	ee27 5b06 	vmul.f64	d5, d7, d6
 800186e:	ed97 7b04 	vldr	d7, [r7, #16]
 8001872:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001876:	ee85 6b07 	vdiv.f64	d6, d5, d7
 800187a:	4bb0      	ldr	r3, [pc, #704]	; (8001b3c <cinematicaInversa+0xc44>)
 800187c:	ed93 7b00 	vldr	d7, [r3]
 8001880:	ee26 8b07 	vmul.f64	d8, d6, d7
 8001884:	ed97 7b02 	vldr	d7, [r7, #8]
 8001888:	ed9f 6b8b 	vldr	d6, [pc, #556]	; 8001ab8 <cinematicaInversa+0xbc0>
 800188c:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001890:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001894:	eeb0 0b47 	vmov.f64	d0, d7
 8001898:	f010 f8ea 	bl	8011a70 <pow>
 800189c:	eeb0 9b40 	vmov.f64	d9, d0
 80018a0:	ed97 7b04 	vldr	d7, [r7, #16]
 80018a4:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80018a8:	eeb0 0b47 	vmov.f64	d0, d7
 80018ac:	f010 f8e0 	bl	8011a70 <pow>
 80018b0:	eeb0 7b40 	vmov.f64	d7, d0
 80018b4:	ee39 7b07 	vadd.f64	d7, d9, d7
 80018b8:	ed9f 6b83 	vldr	d6, [pc, #524]	; 8001ac8 <cinematicaInversa+0xbd0>
 80018bc:	ee37 9b46 	vsub.f64	d9, d7, d6
 80018c0:	ed97 7b00 	vldr	d7, [r7]
 80018c4:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80018c8:	eeb0 0b47 	vmov.f64	d0, d7
 80018cc:	f010 f8d0 	bl	8011a70 <pow>
 80018d0:	eeb0 7b40 	vmov.f64	d7, d0
 80018d4:	ee39 7b07 	vadd.f64	d7, d9, d7
 80018d8:	ed9f 6b7d 	vldr	d6, [pc, #500]	; 8001ad0 <cinematicaInversa+0xbd8>
 80018dc:	ee37 7b46 	vsub.f64	d7, d7, d6
 80018e0:	ed9f 6b7d 	vldr	d6, [pc, #500]	; 8001ad8 <cinematicaInversa+0xbe0>
 80018e4:	ee37 5b06 	vadd.f64	d5, d7, d6
 80018e8:	ed97 7b04 	vldr	d7, [r7, #16]
 80018ec:	ee37 6b07 	vadd.f64	d6, d7, d7
 80018f0:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80018f4:	ee38 7b07 	vadd.f64	d7, d8, d7
 80018f8:	4b91      	ldr	r3, [pc, #580]	; (8001b40 <cinematicaInversa+0xc48>)
 80018fa:	ed83 7b00 	vstr	d7, [r3]
	ZJ2_1 = YJ2_1 * (((2 * sqrt(3.0) * R * C30 + 2.0 * R * S30) + (-2 * sqrt(3) * (_Pfin.x + r * C30) - 2.0 * (_Pfin.y + r * S30))) / (2 * _Pfin.z)) + ((-pow(R, 2) + pow(L1, 2) + pow((_Pfin.x + r * C30), 2) + pow((_Pfin.y + r * S30), 2) + pow(_Pfin.z, 2) - pow(L2, 2)) / (2 * _Pfin.z));
 80018fe:	ed97 7b00 	vldr	d7, [r7]
 8001902:	ed9f 6b77 	vldr	d6, [pc, #476]	; 8001ae0 <cinematicaInversa+0xbe8>
 8001906:	ee37 7b06 	vadd.f64	d7, d7, d6
 800190a:	ed9f 6b77 	vldr	d6, [pc, #476]	; 8001ae8 <cinematicaInversa+0xbf0>
 800190e:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001912:	ed97 7b02 	vldr	d7, [r7, #8]
 8001916:	ed9f 5b76 	vldr	d5, [pc, #472]	; 8001af0 <cinematicaInversa+0xbf8>
 800191a:	ee37 7b05 	vadd.f64	d7, d7, d5
 800191e:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001922:	ee36 7b47 	vsub.f64	d7, d6, d7
 8001926:	ed9f 6b74 	vldr	d6, [pc, #464]	; 8001af8 <cinematicaInversa+0xc00>
 800192a:	ee37 5b06 	vadd.f64	d5, d7, d6
 800192e:	ed97 7b04 	vldr	d7, [r7, #16]
 8001932:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001936:	ee85 6b07 	vdiv.f64	d6, d5, d7
 800193a:	4b76      	ldr	r3, [pc, #472]	; (8001b14 <cinematicaInversa+0xc1c>)
 800193c:	ed93 7b00 	vldr	d7, [r3]
 8001940:	ee26 8b07 	vmul.f64	d8, d6, d7
 8001944:	ed97 7b00 	vldr	d7, [r7]
 8001948:	ed9f 6b65 	vldr	d6, [pc, #404]	; 8001ae0 <cinematicaInversa+0xbe8>
 800194c:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001950:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001954:	eeb0 0b47 	vmov.f64	d0, d7
 8001958:	f010 f88a 	bl	8011a70 <pow>
 800195c:	eeb0 7b40 	vmov.f64	d7, d0
 8001960:	ed9f 6b67 	vldr	d6, [pc, #412]	; 8001b00 <cinematicaInversa+0xc08>
 8001964:	ee37 9b06 	vadd.f64	d9, d7, d6
 8001968:	ed97 7b02 	vldr	d7, [r7, #8]
 800196c:	ed9f 6b60 	vldr	d6, [pc, #384]	; 8001af0 <cinematicaInversa+0xbf8>
 8001970:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001974:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001978:	eeb0 0b47 	vmov.f64	d0, d7
 800197c:	f010 f878 	bl	8011a70 <pow>
 8001980:	eeb0 7b40 	vmov.f64	d7, d0
 8001984:	ee39 9b07 	vadd.f64	d9, d9, d7
 8001988:	ed97 7b04 	vldr	d7, [r7, #16]
 800198c:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001990:	eeb0 0b47 	vmov.f64	d0, d7
 8001994:	f010 f86c 	bl	8011a70 <pow>
 8001998:	eeb0 7b40 	vmov.f64	d7, d0
 800199c:	ee39 7b07 	vadd.f64	d7, d9, d7
 80019a0:	ed9f 6b49 	vldr	d6, [pc, #292]	; 8001ac8 <cinematicaInversa+0xbd0>
 80019a4:	ee37 5b46 	vsub.f64	d5, d7, d6
 80019a8:	ed97 7b04 	vldr	d7, [r7, #16]
 80019ac:	ee37 6b07 	vadd.f64	d6, d7, d7
 80019b0:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80019b4:	ee38 7b07 	vadd.f64	d7, d8, d7
 80019b8:	4b62      	ldr	r3, [pc, #392]	; (8001b44 <cinematicaInversa+0xc4c>)
 80019ba:	ed83 7b00 	vstr	d7, [r3]
	ZJ2_2 = YJ2_2 * (((2 * sqrt(3.0) * R * C30 + 2.0 * R * S30) + (-2 * sqrt(3) * (_Pfin.x + r * C30) - 2.0 * (_Pfin.y + r * S30))) / (2 * _Pfin.z)) + ((-pow(R, 2) + pow(L1, 2) + pow((_Pfin.x + r * C30), 2) + pow((_Pfin.y + r * S30), 2) + pow(_Pfin.z, 2) - pow(L2, 2)) / (2 * _Pfin.z));
 80019be:	ed97 7b00 	vldr	d7, [r7]
 80019c2:	ed9f 6b47 	vldr	d6, [pc, #284]	; 8001ae0 <cinematicaInversa+0xbe8>
 80019c6:	ee37 7b06 	vadd.f64	d7, d7, d6
 80019ca:	ed9f 6b47 	vldr	d6, [pc, #284]	; 8001ae8 <cinematicaInversa+0xbf0>
 80019ce:	ee27 6b06 	vmul.f64	d6, d7, d6
 80019d2:	ed97 7b02 	vldr	d7, [r7, #8]
 80019d6:	ed9f 5b46 	vldr	d5, [pc, #280]	; 8001af0 <cinematicaInversa+0xbf8>
 80019da:	ee37 7b05 	vadd.f64	d7, d7, d5
 80019de:	ee37 7b07 	vadd.f64	d7, d7, d7
 80019e2:	ee36 7b47 	vsub.f64	d7, d6, d7
 80019e6:	ed9f 6b44 	vldr	d6, [pc, #272]	; 8001af8 <cinematicaInversa+0xc00>
 80019ea:	ee37 5b06 	vadd.f64	d5, d7, d6
 80019ee:	ed97 7b04 	vldr	d7, [r7, #16]
 80019f2:	ee37 7b07 	vadd.f64	d7, d7, d7
 80019f6:	ee85 6b07 	vdiv.f64	d6, d5, d7
 80019fa:	4b48      	ldr	r3, [pc, #288]	; (8001b1c <cinematicaInversa+0xc24>)
 80019fc:	ed93 7b00 	vldr	d7, [r3]
 8001a00:	ee26 8b07 	vmul.f64	d8, d6, d7
 8001a04:	ed97 7b00 	vldr	d7, [r7]
 8001a08:	ed9f 6b35 	vldr	d6, [pc, #212]	; 8001ae0 <cinematicaInversa+0xbe8>
 8001a0c:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001a10:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001a14:	eeb0 0b47 	vmov.f64	d0, d7
 8001a18:	f010 f82a 	bl	8011a70 <pow>
 8001a1c:	eeb0 7b40 	vmov.f64	d7, d0
 8001a20:	ed9f 6b37 	vldr	d6, [pc, #220]	; 8001b00 <cinematicaInversa+0xc08>
 8001a24:	ee37 9b06 	vadd.f64	d9, d7, d6
 8001a28:	ed97 7b02 	vldr	d7, [r7, #8]
 8001a2c:	ed9f 6b30 	vldr	d6, [pc, #192]	; 8001af0 <cinematicaInversa+0xbf8>
 8001a30:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001a34:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001a38:	eeb0 0b47 	vmov.f64	d0, d7
 8001a3c:	f010 f818 	bl	8011a70 <pow>
 8001a40:	eeb0 7b40 	vmov.f64	d7, d0
 8001a44:	ee39 9b07 	vadd.f64	d9, d9, d7
 8001a48:	ed97 7b04 	vldr	d7, [r7, #16]
 8001a4c:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001a50:	eeb0 0b47 	vmov.f64	d0, d7
 8001a54:	f010 f80c 	bl	8011a70 <pow>
 8001a58:	eeb0 7b40 	vmov.f64	d7, d0
 8001a5c:	ee39 7b07 	vadd.f64	d7, d9, d7
 8001a60:	ed9f 6b19 	vldr	d6, [pc, #100]	; 8001ac8 <cinematicaInversa+0xbd0>
 8001a64:	ee37 5b46 	vsub.f64	d5, d7, d6
 8001a68:	ed97 7b04 	vldr	d7, [r7, #16]
 8001a6c:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001a70:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001a74:	ee38 7b07 	vadd.f64	d7, d8, d7
 8001a78:	4b33      	ldr	r3, [pc, #204]	; (8001b48 <cinematicaInversa+0xc50>)
 8001a7a:	ed83 7b00 	vstr	d7, [r3]
	ZJ3_1 = YJ3_1 * ((2 * sqrt(3.0) * (_Pfin.x + r * C150) - 2.0 * (_Pfin.y + r * S150) - 2.0 * sqrt(3) * R * C150 + 2.0 * R * S150) / (2.0 * _Pfin.z)) + ((pow((_Pfin.x + r * C150), 2.0) + pow((_Pfin.y + r * S150), 2) + pow(_Pfin.z, 2.0) - pow(L2, 2) - pow(R, 2) + pow(L1, 2)) / (2 * _Pfin.z));
 8001a7e:	ed97 7b00 	vldr	d7, [r7]
 8001a82:	ed9f 6b17 	vldr	d6, [pc, #92]	; 8001ae0 <cinematicaInversa+0xbe8>
 8001a86:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001a8a:	ed9f 6b1f 	vldr	d6, [pc, #124]	; 8001b08 <cinematicaInversa+0xc10>
 8001a8e:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001a92:	ed97 7b02 	vldr	d7, [r7, #8]
 8001a96:	ed9f 5b16 	vldr	d5, [pc, #88]	; 8001af0 <cinematicaInversa+0xbf8>
 8001a9a:	ee37 7b05 	vadd.f64	d7, d7, d5
 8001a9e:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001aa2:	ee36 7b47 	vsub.f64	d7, d6, d7
 8001aa6:	e051      	b.n	8001b4c <cinematicaInversa+0xc54>
 8001aa8:	e8584caa 	.word	0xe8584caa
 8001aac:	3ffbb67a 	.word	0x3ffbb67a
 8001ab0:	e8584caa 	.word	0xe8584caa
 8001ab4:	bffbb67a 	.word	0xbffbb67a
 8001ab8:	1eb851ec 	.word	0x1eb851ec
 8001abc:	3fb1eb85 	.word	0x3fb1eb85
 8001ac0:	24dd2f1b 	.word	0x24dd2f1b
 8001ac4:	3fc58106 	.word	0x3fc58106
 8001ac8:	70a3d70a 	.word	0x70a3d70a
 8001acc:	3fd70a3d 	.word	0x3fd70a3d
 8001ad0:	93d96639 	.word	0x93d96639
 8001ad4:	3f9ce6c0 	.word	0x3f9ce6c0
 8001ad8:	47ae147c 	.word	0x47ae147c
 8001adc:	3fa47ae1 	.word	0x3fa47ae1
 8001ae0:	5625749b 	.word	0x5625749b
 8001ae4:	3faf09d1 	.word	0x3faf09d1
 8001ae8:	e8584caa 	.word	0xe8584caa
 8001aec:	c00bb67a 	.word	0xc00bb67a
 8001af0:	1eb851ec 	.word	0x1eb851ec
 8001af4:	3fa1eb85 	.word	0x3fa1eb85
 8001af8:	24dd2f1d 	.word	0x24dd2f1d
 8001afc:	3fe58106 	.word	0x3fe58106
 8001b00:	f705857e 	.word	0xf705857e
 8001b04:	3f881e03 	.word	0x3f881e03
 8001b08:	e8584caa 	.word	0xe8584caa
 8001b0c:	400bb67a 	.word	0x400bb67a
 8001b10:	24000318 	.word	0x24000318
 8001b14:	24000368 	.word	0x24000368
 8001b18:	24000358 	.word	0x24000358
 8001b1c:	24000370 	.word	0x24000370
 8001b20:	24000360 	.word	0x24000360
 8001b24:	240003b0 	.word	0x240003b0
 8001b28:	240003a0 	.word	0x240003a0
 8001b2c:	240003b8 	.word	0x240003b8
 8001b30:	240003a8 	.word	0x240003a8
 8001b34:	24000320 	.word	0x24000320
 8001b38:	24000330 	.word	0x24000330
 8001b3c:	24000328 	.word	0x24000328
 8001b40:	24000338 	.word	0x24000338
 8001b44:	24000378 	.word	0x24000378
 8001b48:	24000380 	.word	0x24000380
 8001b4c:	ed9f 6b90 	vldr	d6, [pc, #576]	; 8001d90 <cinematicaInversa+0xe98>
 8001b50:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001b54:	ed9f 6b90 	vldr	d6, [pc, #576]	; 8001d98 <cinematicaInversa+0xea0>
 8001b58:	ee37 5b06 	vadd.f64	d5, d7, d6
 8001b5c:	ed97 7b04 	vldr	d7, [r7, #16]
 8001b60:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001b64:	ee85 6b07 	vdiv.f64	d6, d5, d7
 8001b68:	4b9f      	ldr	r3, [pc, #636]	; (8001de8 <cinematicaInversa+0xef0>)
 8001b6a:	ed93 7b00 	vldr	d7, [r3]
 8001b6e:	ee26 8b07 	vmul.f64	d8, d6, d7
 8001b72:	ed97 7b00 	vldr	d7, [r7]
 8001b76:	ed9f 6b8a 	vldr	d6, [pc, #552]	; 8001da0 <cinematicaInversa+0xea8>
 8001b7a:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001b7e:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001b82:	eeb0 0b47 	vmov.f64	d0, d7
 8001b86:	f00f ff73 	bl	8011a70 <pow>
 8001b8a:	eeb0 9b40 	vmov.f64	d9, d0
 8001b8e:	ed97 7b02 	vldr	d7, [r7, #8]
 8001b92:	ed9f 6b85 	vldr	d6, [pc, #532]	; 8001da8 <cinematicaInversa+0xeb0>
 8001b96:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001b9a:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001b9e:	eeb0 0b47 	vmov.f64	d0, d7
 8001ba2:	f00f ff65 	bl	8011a70 <pow>
 8001ba6:	eeb0 7b40 	vmov.f64	d7, d0
 8001baa:	ee39 9b07 	vadd.f64	d9, d9, d7
 8001bae:	ed97 7b04 	vldr	d7, [r7, #16]
 8001bb2:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001bb6:	eeb0 0b47 	vmov.f64	d0, d7
 8001bba:	f00f ff59 	bl	8011a70 <pow>
 8001bbe:	eeb0 7b40 	vmov.f64	d7, d0
 8001bc2:	ee39 7b07 	vadd.f64	d7, d9, d7
 8001bc6:	ed9f 6b7a 	vldr	d6, [pc, #488]	; 8001db0 <cinematicaInversa+0xeb8>
 8001bca:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001bce:	ed9f 6b7a 	vldr	d6, [pc, #488]	; 8001db8 <cinematicaInversa+0xec0>
 8001bd2:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001bd6:	ed9f 6b7a 	vldr	d6, [pc, #488]	; 8001dc0 <cinematicaInversa+0xec8>
 8001bda:	ee37 5b06 	vadd.f64	d5, d7, d6
 8001bde:	ed97 7b04 	vldr	d7, [r7, #16]
 8001be2:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001be6:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001bea:	ee38 7b07 	vadd.f64	d7, d8, d7
 8001bee:	4b7f      	ldr	r3, [pc, #508]	; (8001dec <cinematicaInversa+0xef4>)
 8001bf0:	ed83 7b00 	vstr	d7, [r3]
	ZJ3_2 = YJ3_2 * ((2 * sqrt(3.0) * (_Pfin.x + r * C150) - 2.0 * (_Pfin.y + r * S150) - 2.0 * sqrt(3) * R * C150 + 2.0 * R * S150) / (2.0 * _Pfin.z)) + ((pow((_Pfin.x + r * C150), 2.0) + pow((_Pfin.y + r * S150), 2) + pow(_Pfin.z, 2) - pow(L2, 2) - pow(R, 2) + pow(L1, 2)) / (2 * _Pfin.z));
 8001bf4:	ed97 7b00 	vldr	d7, [r7]
 8001bf8:	ed9f 6b69 	vldr	d6, [pc, #420]	; 8001da0 <cinematicaInversa+0xea8>
 8001bfc:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001c00:	ed9f 6b71 	vldr	d6, [pc, #452]	; 8001dc8 <cinematicaInversa+0xed0>
 8001c04:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001c08:	ed97 7b02 	vldr	d7, [r7, #8]
 8001c0c:	ed9f 5b66 	vldr	d5, [pc, #408]	; 8001da8 <cinematicaInversa+0xeb0>
 8001c10:	ee37 7b05 	vadd.f64	d7, d7, d5
 8001c14:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001c18:	ee36 7b47 	vsub.f64	d7, d6, d7
 8001c1c:	ed9f 6b5c 	vldr	d6, [pc, #368]	; 8001d90 <cinematicaInversa+0xe98>
 8001c20:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001c24:	ed9f 6b5c 	vldr	d6, [pc, #368]	; 8001d98 <cinematicaInversa+0xea0>
 8001c28:	ee37 5b06 	vadd.f64	d5, d7, d6
 8001c2c:	ed97 7b04 	vldr	d7, [r7, #16]
 8001c30:	ee37 7b07 	vadd.f64	d7, d7, d7
 8001c34:	ee85 6b07 	vdiv.f64	d6, d5, d7
 8001c38:	4b6d      	ldr	r3, [pc, #436]	; (8001df0 <cinematicaInversa+0xef8>)
 8001c3a:	ed93 7b00 	vldr	d7, [r3]
 8001c3e:	ee26 8b07 	vmul.f64	d8, d6, d7
 8001c42:	ed97 7b00 	vldr	d7, [r7]
 8001c46:	ed9f 6b56 	vldr	d6, [pc, #344]	; 8001da0 <cinematicaInversa+0xea8>
 8001c4a:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001c4e:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001c52:	eeb0 0b47 	vmov.f64	d0, d7
 8001c56:	f00f ff0b 	bl	8011a70 <pow>
 8001c5a:	eeb0 9b40 	vmov.f64	d9, d0
 8001c5e:	ed97 7b02 	vldr	d7, [r7, #8]
 8001c62:	ed9f 6b51 	vldr	d6, [pc, #324]	; 8001da8 <cinematicaInversa+0xeb0>
 8001c66:	ee37 7b06 	vadd.f64	d7, d7, d6
 8001c6a:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001c6e:	eeb0 0b47 	vmov.f64	d0, d7
 8001c72:	f00f fefd 	bl	8011a70 <pow>
 8001c76:	eeb0 7b40 	vmov.f64	d7, d0
 8001c7a:	ee39 9b07 	vadd.f64	d9, d9, d7
 8001c7e:	ed97 7b04 	vldr	d7, [r7, #16]
 8001c82:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8001c86:	eeb0 0b47 	vmov.f64	d0, d7
 8001c8a:	f00f fef1 	bl	8011a70 <pow>
 8001c8e:	eeb0 7b40 	vmov.f64	d7, d0
 8001c92:	ee39 7b07 	vadd.f64	d7, d9, d7
 8001c96:	ed9f 6b46 	vldr	d6, [pc, #280]	; 8001db0 <cinematicaInversa+0xeb8>
 8001c9a:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001c9e:	ed9f 6b46 	vldr	d6, [pc, #280]	; 8001db8 <cinematicaInversa+0xec0>
 8001ca2:	ee37 7b46 	vsub.f64	d7, d7, d6
 8001ca6:	ed9f 6b46 	vldr	d6, [pc, #280]	; 8001dc0 <cinematicaInversa+0xec8>
 8001caa:	ee37 5b06 	vadd.f64	d5, d7, d6
 8001cae:	ed97 7b04 	vldr	d7, [r7, #16]
 8001cb2:	ee37 6b07 	vadd.f64	d6, d7, d7
 8001cb6:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001cba:	ee38 7b07 	vadd.f64	d7, d8, d7
 8001cbe:	4b4d      	ldr	r3, [pc, #308]	; (8001df4 <cinematicaInversa+0xefc>)
 8001cc0:	ed83 7b00 	vstr	d7, [r3]

	titha1 = -1.0 * asin(ZJ1_1 / L1);
 8001cc4:	4b4c      	ldr	r3, [pc, #304]	; (8001df8 <cinematicaInversa+0xf00>)
 8001cc6:	ed93 7b00 	vldr	d7, [r3]
 8001cca:	ed9f 5b41 	vldr	d5, [pc, #260]	; 8001dd0 <cinematicaInversa+0xed8>
 8001cce:	ee87 6b05 	vdiv.f64	d6, d7, d5
 8001cd2:	eeb0 0b46 	vmov.f64	d0, d6
 8001cd6:	f010 f91d 	bl	8011f14 <asin>
 8001cda:	eeb0 7b40 	vmov.f64	d7, d0
 8001cde:	eeb1 7b47 	vneg.f64	d7, d7
 8001ce2:	4b46      	ldr	r3, [pc, #280]	; (8001dfc <cinematicaInversa+0xf04>)
 8001ce4:	ed83 7b00 	vstr	d7, [r3]
	titha1 = titha1 * RAD_TO_DEG;
 8001ce8:	4b44      	ldr	r3, [pc, #272]	; (8001dfc <cinematicaInversa+0xf04>)
 8001cea:	ed93 7b00 	vldr	d7, [r3]
 8001cee:	ed9f 6b3a 	vldr	d6, [pc, #232]	; 8001dd8 <cinematicaInversa+0xee0>
 8001cf2:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001cf6:	ed9f 5b3a 	vldr	d5, [pc, #232]	; 8001de0 <cinematicaInversa+0xee8>
 8001cfa:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8001cfe:	4b3f      	ldr	r3, [pc, #252]	; (8001dfc <cinematicaInversa+0xf04>)
 8001d00:	ed83 7b00 	vstr	d7, [r3]
	titha2 = -1.0 * asin(ZJ2_1 / L1);
 8001d04:	4b3e      	ldr	r3, [pc, #248]	; (8001e00 <cinematicaInversa+0xf08>)
 8001d06:	ed93 7b00 	vldr	d7, [r3]
 8001d0a:	ed9f 5b31 	vldr	d5, [pc, #196]	; 8001dd0 <cinematicaInversa+0xed8>
 8001d0e:	ee87 6b05 	vdiv.f64	d6, d7, d5
 8001d12:	eeb0 0b46 	vmov.f64	d0, d6
 8001d16:	f010 f8fd 	bl	8011f14 <asin>
 8001d1a:	eeb0 7b40 	vmov.f64	d7, d0
 8001d1e:	eeb1 7b47 	vneg.f64	d7, d7
 8001d22:	4b38      	ldr	r3, [pc, #224]	; (8001e04 <cinematicaInversa+0xf0c>)
 8001d24:	ed83 7b00 	vstr	d7, [r3]
	titha2 = titha2 * RAD_TO_DEG;
 8001d28:	4b36      	ldr	r3, [pc, #216]	; (8001e04 <cinematicaInversa+0xf0c>)
 8001d2a:	ed93 7b00 	vldr	d7, [r3]
 8001d2e:	ed9f 6b2a 	vldr	d6, [pc, #168]	; 8001dd8 <cinematicaInversa+0xee0>
 8001d32:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001d36:	ed9f 5b2a 	vldr	d5, [pc, #168]	; 8001de0 <cinematicaInversa+0xee8>
 8001d3a:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8001d3e:	4b31      	ldr	r3, [pc, #196]	; (8001e04 <cinematicaInversa+0xf0c>)
 8001d40:	ed83 7b00 	vstr	d7, [r3]
	titha3 = -1.0 * asin(ZJ3_1 / L1);
 8001d44:	4b29      	ldr	r3, [pc, #164]	; (8001dec <cinematicaInversa+0xef4>)
 8001d46:	ed93 7b00 	vldr	d7, [r3]
 8001d4a:	ed9f 5b21 	vldr	d5, [pc, #132]	; 8001dd0 <cinematicaInversa+0xed8>
 8001d4e:	ee87 6b05 	vdiv.f64	d6, d7, d5
 8001d52:	eeb0 0b46 	vmov.f64	d0, d6
 8001d56:	f010 f8dd 	bl	8011f14 <asin>
 8001d5a:	eeb0 7b40 	vmov.f64	d7, d0
 8001d5e:	eeb1 7b47 	vneg.f64	d7, d7
 8001d62:	4b29      	ldr	r3, [pc, #164]	; (8001e08 <cinematicaInversa+0xf10>)
 8001d64:	ed83 7b00 	vstr	d7, [r3]
	titha3 = titha3 * RAD_TO_DEG;
 8001d68:	4b27      	ldr	r3, [pc, #156]	; (8001e08 <cinematicaInversa+0xf10>)
 8001d6a:	ed93 7b00 	vldr	d7, [r3]
 8001d6e:	ed9f 6b1a 	vldr	d6, [pc, #104]	; 8001dd8 <cinematicaInversa+0xee0>
 8001d72:	ee27 6b06 	vmul.f64	d6, d7, d6
 8001d76:	ed9f 5b1a 	vldr	d5, [pc, #104]	; 8001de0 <cinematicaInversa+0xee8>
 8001d7a:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8001d7e:	4b22      	ldr	r3, [pc, #136]	; (8001e08 <cinematicaInversa+0xf10>)
 8001d80:	ed83 7b00 	vstr	d7, [r3]
}
 8001d84:	bf00      	nop
 8001d86:	3718      	adds	r7, #24
 8001d88:	46bd      	mov	sp, r7
 8001d8a:	ecbd 8b04 	vpop	{d8-d9}
 8001d8e:	bd80      	pop	{r7, pc}
 8001d90:	9ba5e356 	.word	0x9ba5e356
 8001d94:	3fe020c4 	.word	0x3fe020c4
 8001d98:	24dd2f1b 	.word	0x24dd2f1b
 8001d9c:	3fc58106 	.word	0x3fc58106
 8001da0:	5625749b 	.word	0x5625749b
 8001da4:	3faf09d1 	.word	0x3faf09d1
 8001da8:	1eb851ec 	.word	0x1eb851ec
 8001dac:	3fa1eb85 	.word	0x3fa1eb85
 8001db0:	70a3d70a 	.word	0x70a3d70a
 8001db4:	3fd70a3d 	.word	0x3fd70a3d
 8001db8:	93d96639 	.word	0x93d96639
 8001dbc:	3f9ce6c0 	.word	0x3f9ce6c0
 8001dc0:	47ae147c 	.word	0x47ae147c
 8001dc4:	3fa47ae1 	.word	0x3fa47ae1
 8001dc8:	e8584caa 	.word	0xe8584caa
 8001dcc:	400bb67a 	.word	0x400bb67a
 8001dd0:	9999999a 	.word	0x9999999a
 8001dd4:	3fc99999 	.word	0x3fc99999
 8001dd8:	00000000 	.word	0x00000000
 8001ddc:	40668000 	.word	0x40668000
 8001de0:	54442eea 	.word	0x54442eea
 8001de4:	400921fb 	.word	0x400921fb
 8001de8:	240003b0 	.word	0x240003b0
 8001dec:	240003c0 	.word	0x240003c0
 8001df0:	240003b8 	.word	0x240003b8
 8001df4:	240003c8 	.word	0x240003c8
 8001df8:	24000330 	.word	0x24000330
 8001dfc:	24000658 	.word	0x24000658
 8001e00:	24000378 	.word	0x24000378
 8001e04:	24000660 	.word	0x24000660
 8001e08:	24000668 	.word	0x24000668

08001e0c <MX_GPIO_Init>:
     PH1-OSC_OUT (PH1)   ------> RCC_OSC_OUT
     PA13 (JTMS/SWDIO)   ------> DEBUG_JTMS-SWDIO
     PA14 (JTCK/SWCLK)   ------> DEBUG_JTCK-SWCLK
*/
void MX_GPIO_Init(void)
{
 8001e0c:	b580      	push	{r7, lr}
 8001e0e:	b08c      	sub	sp, #48	; 0x30
 8001e10:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e12:	f107 031c 	add.w	r3, r7, #28
 8001e16:	2200      	movs	r2, #0
 8001e18:	601a      	str	r2, [r3, #0]
 8001e1a:	605a      	str	r2, [r3, #4]
 8001e1c:	609a      	str	r2, [r3, #8]
 8001e1e:	60da      	str	r2, [r3, #12]
 8001e20:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001e22:	4b74      	ldr	r3, [pc, #464]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e24:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e28:	4a72      	ldr	r2, [pc, #456]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e2a:	f043 0310 	orr.w	r3, r3, #16
 8001e2e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001e32:	4b70      	ldr	r3, [pc, #448]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e34:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e38:	f003 0310 	and.w	r3, r3, #16
 8001e3c:	61bb      	str	r3, [r7, #24]
 8001e3e:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e40:	4b6c      	ldr	r3, [pc, #432]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e42:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e46:	4a6b      	ldr	r2, [pc, #428]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e48:	f043 0304 	orr.w	r3, r3, #4
 8001e4c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001e50:	4b68      	ldr	r3, [pc, #416]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e52:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e56:	f003 0304 	and.w	r3, r3, #4
 8001e5a:	617b      	str	r3, [r7, #20]
 8001e5c:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e5e:	4b65      	ldr	r3, [pc, #404]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e60:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e64:	4a63      	ldr	r2, [pc, #396]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e66:	f043 0320 	orr.w	r3, r3, #32
 8001e6a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001e6e:	4b61      	ldr	r3, [pc, #388]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e70:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e74:	f003 0320 	and.w	r3, r3, #32
 8001e78:	613b      	str	r3, [r7, #16]
 8001e7a:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001e7c:	4b5d      	ldr	r3, [pc, #372]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e7e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e82:	4a5c      	ldr	r2, [pc, #368]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e84:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001e88:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001e8c:	4b59      	ldr	r3, [pc, #356]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e8e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001e92:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001e96:	60fb      	str	r3, [r7, #12]
 8001e98:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e9a:	4b56      	ldr	r3, [pc, #344]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001e9c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001ea0:	4a54      	ldr	r2, [pc, #336]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001ea2:	f043 0301 	orr.w	r3, r3, #1
 8001ea6:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001eaa:	4b52      	ldr	r3, [pc, #328]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001eac:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001eb0:	f003 0301 	and.w	r3, r3, #1
 8001eb4:	60bb      	str	r3, [r7, #8]
 8001eb6:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001eb8:	4b4e      	ldr	r3, [pc, #312]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001eba:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001ebe:	4a4d      	ldr	r2, [pc, #308]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001ec0:	f043 0302 	orr.w	r3, r3, #2
 8001ec4:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001ec8:	4b4a      	ldr	r3, [pc, #296]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001eca:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001ece:	f003 0302 	and.w	r3, r3, #2
 8001ed2:	607b      	str	r3, [r7, #4]
 8001ed4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ed6:	4b47      	ldr	r3, [pc, #284]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001ed8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001edc:	4a45      	ldr	r2, [pc, #276]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001ede:	f043 0308 	orr.w	r3, r3, #8
 8001ee2:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001ee6:	4b43      	ldr	r3, [pc, #268]	; (8001ff4 <MX_GPIO_Init+0x1e8>)
 8001ee8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001eec:	f003 0308 	and.w	r3, r3, #8
 8001ef0:	603b      	str	r3, [r7, #0]
 8001ef2:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, S_DirPaP1_Pin|S_DirPaP2_Pin|S_DirPaP3_Pin, GPIO_PIN_RESET);
 8001ef4:	2200      	movs	r2, #0
 8001ef6:	f44f 61e0 	mov.w	r1, #1792	; 0x700
 8001efa:	483f      	ldr	r0, [pc, #252]	; (8001ff8 <MX_GPIO_Init+0x1ec>)
 8001efc:	f006 f802 	bl	8007f04 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, S_Enable_1_Pin|S_Enable_2_Pin|S_Enable_3_Pin, GPIO_PIN_SET);
 8001f00:	2201      	movs	r2, #1
 8001f02:	2170      	movs	r1, #112	; 0x70
 8001f04:	483d      	ldr	r0, [pc, #244]	; (8001ffc <MX_GPIO_Init+0x1f0>)
 8001f06:	f005 fffd 	bl	8007f04 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PEPin PEPin PEPin PEPin
                           PEPin PEPin */
  GPIO_InitStruct.Pin = E_EndStop2_Sup_Pin|E_EndStop2_Inf_Pin|E_EndStop3_Sup_Pin|E_EndStop3_Inf_Pin
 8001f0a:	233f      	movs	r3, #63	; 0x3f
 8001f0c:	61fb      	str	r3, [r7, #28]
                          |E_EndStop1_Sup_Pin|E_EndStop1_Inf_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001f0e:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8001f12:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001f14:	2301      	movs	r3, #1
 8001f16:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001f18:	f107 031c 	add.w	r3, r7, #28
 8001f1c:	4619      	mov	r1, r3
 8001f1e:	4838      	ldr	r0, [pc, #224]	; (8002000 <MX_GPIO_Init+0x1f4>)
 8001f20:	f005 fe28 	bl	8007b74 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = BUTTON_Pin;
 8001f24:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001f28:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001f2a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001f2e:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8001f30:	2302      	movs	r3, #2
 8001f32:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001f34:	f107 031c 	add.w	r3, r7, #28
 8001f38:	4619      	mov	r1, r3
 8001f3a:	482f      	ldr	r0, [pc, #188]	; (8001ff8 <MX_GPIO_Init+0x1ec>)
 8001f3c:	f005 fe1a 	bl	8007b74 <HAL_GPIO_Init>

  /*Configure GPIO pins : PCPin PCPin PCPin */
  GPIO_InitStruct.Pin = S_DirPaP1_Pin|S_DirPaP2_Pin|S_DirPaP3_Pin;
 8001f40:	f44f 63e0 	mov.w	r3, #1792	; 0x700
 8001f44:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f46:	2301      	movs	r3, #1
 8001f48:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001f4a:	2301      	movs	r3, #1
 8001f4c:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f4e:	2300      	movs	r3, #0
 8001f50:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f52:	f107 031c 	add.w	r3, r7, #28
 8001f56:	4619      	mov	r1, r3
 8001f58:	4827      	ldr	r0, [pc, #156]	; (8001ff8 <MX_GPIO_Init+0x1ec>)
 8001f5a:	f005 fe0b 	bl	8007b74 <HAL_GPIO_Init>

  /*Configure GPIO pins : PDPin PDPin PDPin */
  GPIO_InitStruct.Pin = S_Enable_1_Pin|S_Enable_2_Pin|S_Enable_3_Pin;
 8001f5e:	2370      	movs	r3, #112	; 0x70
 8001f60:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f62:	2301      	movs	r3, #1
 8001f64:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001f66:	2301      	movs	r3, #1
 8001f68:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f6a:	2300      	movs	r3, #0
 8001f6c:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f6e:	f107 031c 	add.w	r3, r7, #28
 8001f72:	4619      	mov	r1, r3
 8001f74:	4821      	ldr	r0, [pc, #132]	; (8001ffc <MX_GPIO_Init+0x1f0>)
 8001f76:	f005 fdfd 	bl	8007b74 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 1, 0);
 8001f7a:	2200      	movs	r2, #0
 8001f7c:	2101      	movs	r1, #1
 8001f7e:	2006      	movs	r0, #6
 8001f80:	f005 f851 	bl	8007026 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8001f84:	2006      	movs	r0, #6
 8001f86:	f005 f868 	bl	800705a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI1_IRQn, 1, 0);
 8001f8a:	2200      	movs	r2, #0
 8001f8c:	2101      	movs	r1, #1
 8001f8e:	2007      	movs	r0, #7
 8001f90:	f005 f849 	bl	8007026 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 8001f94:	2007      	movs	r0, #7
 8001f96:	f005 f860 	bl	800705a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI2_IRQn, 1, 0);
 8001f9a:	2200      	movs	r2, #0
 8001f9c:	2101      	movs	r1, #1
 8001f9e:	2008      	movs	r0, #8
 8001fa0:	f005 f841 	bl	8007026 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 8001fa4:	2008      	movs	r0, #8
 8001fa6:	f005 f858 	bl	800705a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI3_IRQn, 1, 0);
 8001faa:	2200      	movs	r2, #0
 8001fac:	2101      	movs	r1, #1
 8001fae:	2009      	movs	r0, #9
 8001fb0:	f005 f839 	bl	8007026 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001fb4:	2009      	movs	r0, #9
 8001fb6:	f005 f850 	bl	800705a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI4_IRQn, 1, 0);
 8001fba:	2200      	movs	r2, #0
 8001fbc:	2101      	movs	r1, #1
 8001fbe:	200a      	movs	r0, #10
 8001fc0:	f005 f831 	bl	8007026 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 8001fc4:	200a      	movs	r0, #10
 8001fc6:	f005 f848 	bl	800705a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 1, 0);
 8001fca:	2200      	movs	r2, #0
 8001fcc:	2101      	movs	r1, #1
 8001fce:	2017      	movs	r0, #23
 8001fd0:	f005 f829 	bl	8007026 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001fd4:	2017      	movs	r0, #23
 8001fd6:	f005 f840 	bl	800705a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 2, 0);
 8001fda:	2200      	movs	r2, #0
 8001fdc:	2102      	movs	r1, #2
 8001fde:	2028      	movs	r0, #40	; 0x28
 8001fe0:	f005 f821 	bl	8007026 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001fe4:	2028      	movs	r0, #40	; 0x28
 8001fe6:	f005 f838 	bl	800705a <HAL_NVIC_EnableIRQ>

}
 8001fea:	bf00      	nop
 8001fec:	3730      	adds	r7, #48	; 0x30
 8001fee:	46bd      	mov	sp, r7
 8001ff0:	bd80      	pop	{r7, pc}
 8001ff2:	bf00      	nop
 8001ff4:	58024400 	.word	0x58024400
 8001ff8:	58020800 	.word	0x58020800
 8001ffc:	58020c00 	.word	0x58020c00
 8002000:	58021000 	.word	0x58021000
 8002004:	00000000 	.word	0x00000000

08002008 <homing>:
double rpm = 2.0;  //Valor experimental.
bool homAprox, homStart,homFin;
bool hom1,hom2,hom3;


void homing(void) {
 8002008:	b580      	push	{r7, lr}
 800200a:	af00      	add	r7, sp, #0

	homAprox = true;
 800200c:	4bb6      	ldr	r3, [pc, #728]	; (80022e8 <homing+0x2e0>)
 800200e:	2201      	movs	r2, #1
 8002010:	701a      	strb	r2, [r3, #0]
	homStart = true;
 8002012:	4bb6      	ldr	r3, [pc, #728]	; (80022ec <homing+0x2e4>)
 8002014:	2201      	movs	r2, #1
 8002016:	701a      	strb	r2, [r3, #0]
    homFin = false;
 8002018:	4bb5      	ldr	r3, [pc, #724]	; (80022f0 <homing+0x2e8>)
 800201a:	2200      	movs	r2, #0
 800201c:	701a      	strb	r2, [r3, #0]
    hom1=false;
 800201e:	4bb5      	ldr	r3, [pc, #724]	; (80022f4 <homing+0x2ec>)
 8002020:	2200      	movs	r2, #0
 8002022:	701a      	strb	r2, [r3, #0]
    hom2=false;
 8002024:	4bb4      	ldr	r3, [pc, #720]	; (80022f8 <homing+0x2f0>)
 8002026:	2200      	movs	r2, #0
 8002028:	701a      	strb	r2, [r3, #0]
    hom3=true;
 800202a:	4bb4      	ldr	r3, [pc, #720]	; (80022fc <homing+0x2f4>)
 800202c:	2201      	movs	r2, #1
 800202e:	701a      	strb	r2, [r3, #0]

    HAL_GPIO_WritePin(S_DirPaP1_GPIO_Port, S_DirPaP1_Pin, GPIO_PIN_RESET); // Se estable la direccion antihorario por defecto
 8002030:	2200      	movs	r2, #0
 8002032:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002036:	48b2      	ldr	r0, [pc, #712]	; (8002300 <homing+0x2f8>)
 8002038:	f005 ff64 	bl	8007f04 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(S_DirPaP2_GPIO_Port, S_DirPaP2_Pin, GPIO_PIN_RESET); // Se estable la direccion antihorario por defecto
 800203c:	2200      	movs	r2, #0
 800203e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002042:	48af      	ldr	r0, [pc, #700]	; (8002300 <homing+0x2f8>)
 8002044:	f005 ff5e 	bl	8007f04 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(S_DirPaP3_GPIO_Port, S_DirPaP3_Pin, GPIO_PIN_RESET); // Se estable la direccion antihorario por defecto
 8002048:	2200      	movs	r2, #0
 800204a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800204e:	48ac      	ldr	r0, [pc, #688]	; (8002300 <homing+0x2f8>)
 8002050:	f005 ff58 	bl	8007f04 <HAL_GPIO_WritePin>

	HAL_TIM_IC_Stop_IT(&htim2, TIM_CHANNEL_1);//Apago interrupcion input capture motor 1
 8002054:	2100      	movs	r1, #0
 8002056:	48ab      	ldr	r0, [pc, #684]	; (8002304 <homing+0x2fc>)
 8002058:	f009 f832 	bl	800b0c0 <HAL_TIM_IC_Stop_IT>
	HAL_TIM_IC_Stop_IT(&htim3, TIM_CHANNEL_1);//Apago interrupcion input capture motor 2
 800205c:	2100      	movs	r1, #0
 800205e:	48aa      	ldr	r0, [pc, #680]	; (8002308 <homing+0x300>)
 8002060:	f009 f82e 	bl	800b0c0 <HAL_TIM_IC_Stop_IT>
	HAL_TIM_IC_Stop_IT(&htim4, TIM_CHANNEL_1);//Apago interrupcion input capture motor 3
 8002064:	2100      	movs	r1, #0
 8002066:	48a9      	ldr	r0, [pc, #676]	; (800230c <homing+0x304>)
 8002068:	f009 f82a 	bl	800b0c0 <HAL_TIM_IC_Stop_IT>

	HAL_NVIC_DisableIRQ(EXTI0_IRQn);	//Apago interrupcion EndStop 1 Superior
 800206c:	2006      	movs	r0, #6
 800206e:	f005 f802 	bl	8007076 <HAL_NVIC_DisableIRQ>
	HAL_NVIC_DisableIRQ(EXTI1_IRQn);	//Apago interrupcion EndStop 1 Inferior
 8002072:	2007      	movs	r0, #7
 8002074:	f004 ffff 	bl	8007076 <HAL_NVIC_DisableIRQ>
	HAL_NVIC_DisableIRQ(EXTI2_IRQn);	//Apago interrupcion EndStop 2 Superior
 8002078:	2008      	movs	r0, #8
 800207a:	f004 fffc 	bl	8007076 <HAL_NVIC_DisableIRQ>
	HAL_NVIC_DisableIRQ(EXTI3_IRQn);	//Apago interrupcion EndStop 2 Inferior
 800207e:	2009      	movs	r0, #9
 8002080:	f004 fff9 	bl	8007076 <HAL_NVIC_DisableIRQ>
	HAL_NVIC_DisableIRQ(EXTI4_IRQn);	//Apago interrupcion EndStop 3 Superior
 8002084:	200a      	movs	r0, #10
 8002086:	f004 fff6 	bl	8007076 <HAL_NVIC_DisableIRQ>
	HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);	//Apago interrupcion EndStop 3 Inferior
 800208a:	2017      	movs	r0, #23
 800208c:	f004 fff3 	bl	8007076 <HAL_NVIC_DisableIRQ>

    //Me aseguro que los motores esten detenidos

	HAL_TIM_PWM_Stop(&htim12, TIM_CHANNEL_1);
 8002090:	2100      	movs	r1, #0
 8002092:	489f      	ldr	r0, [pc, #636]	; (8002310 <homing+0x308>)
 8002094:	f008 fdcc 	bl	800ac30 <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);
 8002098:	2100      	movs	r1, #0
 800209a:	489e      	ldr	r0, [pc, #632]	; (8002314 <homing+0x30c>)
 800209c:	f008 fdc8 	bl	800ac30 <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 80020a0:	2100      	movs	r1, #0
 80020a2:	489d      	ldr	r0, [pc, #628]	; (8002318 <homing+0x310>)
 80020a4:	f008 fdc4 	bl	800ac30 <HAL_TIM_PWM_Stop>

	periodoM[0] = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM12->PSC) + 1.0) * STEPREV)) - 1.0);
 80020a8:	4b9c      	ldr	r3, [pc, #624]	; (800231c <homing+0x314>)
 80020aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80020ac:	ee07 3a90 	vmov	s15, r3
 80020b0:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80020b4:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80020b8:	ee37 6b06 	vadd.f64	d6, d7, d6
 80020bc:	4b98      	ldr	r3, [pc, #608]	; (8002320 <homing+0x318>)
 80020be:	ed93 7b00 	vldr	d7, [r3]
 80020c2:	ee26 7b07 	vmul.f64	d7, d6, d7
 80020c6:	ed9f 6b84 	vldr	d6, [pc, #528]	; 80022d8 <homing+0x2d0>
 80020ca:	ee27 6b06 	vmul.f64	d6, d7, d6
 80020ce:	ed9f 5b84 	vldr	d5, [pc, #528]	; 80022e0 <homing+0x2d8>
 80020d2:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80020d6:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80020da:	ee37 7b46 	vsub.f64	d7, d7, d6
 80020de:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80020e2:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80020e6:	4b8f      	ldr	r3, [pc, #572]	; (8002324 <homing+0x31c>)
 80020e8:	ed83 7b00 	vstr	d7, [r3]
	periodoM[1] = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM13->PSC) + 1.0) * STEPREV)) - 1.0);
 80020ec:	4b8e      	ldr	r3, [pc, #568]	; (8002328 <homing+0x320>)
 80020ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80020f0:	ee07 3a90 	vmov	s15, r3
 80020f4:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80020f8:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80020fc:	ee37 6b06 	vadd.f64	d6, d7, d6
 8002100:	4b87      	ldr	r3, [pc, #540]	; (8002320 <homing+0x318>)
 8002102:	ed93 7b00 	vldr	d7, [r3]
 8002106:	ee26 7b07 	vmul.f64	d7, d6, d7
 800210a:	ed9f 6b73 	vldr	d6, [pc, #460]	; 80022d8 <homing+0x2d0>
 800210e:	ee27 6b06 	vmul.f64	d6, d7, d6
 8002112:	ed9f 5b73 	vldr	d5, [pc, #460]	; 80022e0 <homing+0x2d8>
 8002116:	ee85 7b06 	vdiv.f64	d7, d5, d6
 800211a:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 800211e:	ee37 7b46 	vsub.f64	d7, d7, d6
 8002122:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002126:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 800212a:	4b7e      	ldr	r3, [pc, #504]	; (8002324 <homing+0x31c>)
 800212c:	ed83 7b02 	vstr	d7, [r3, #8]
	periodoM[2] = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM14->PSC) + 1.0) * STEPREV)) - 1.0);
 8002130:	4b7e      	ldr	r3, [pc, #504]	; (800232c <homing+0x324>)
 8002132:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002134:	ee07 3a90 	vmov	s15, r3
 8002138:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 800213c:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002140:	ee37 6b06 	vadd.f64	d6, d7, d6
 8002144:	4b76      	ldr	r3, [pc, #472]	; (8002320 <homing+0x318>)
 8002146:	ed93 7b00 	vldr	d7, [r3]
 800214a:	ee26 7b07 	vmul.f64	d7, d6, d7
 800214e:	ed9f 6b62 	vldr	d6, [pc, #392]	; 80022d8 <homing+0x2d0>
 8002152:	ee27 6b06 	vmul.f64	d6, d7, d6
 8002156:	ed9f 5b62 	vldr	d5, [pc, #392]	; 80022e0 <homing+0x2d8>
 800215a:	ee85 7b06 	vdiv.f64	d7, d5, d6
 800215e:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002162:	ee37 7b46 	vsub.f64	d7, d7, d6
 8002166:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800216a:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 800216e:	4b6d      	ldr	r3, [pc, #436]	; (8002324 <homing+0x31c>)
 8002170:	ed83 7b04 	vstr	d7, [r3, #16]

	TIM12->ARR = periodoM[0];
 8002174:	4b6b      	ldr	r3, [pc, #428]	; (8002324 <homing+0x31c>)
 8002176:	ed93 7b00 	vldr	d7, [r3]
 800217a:	4b68      	ldr	r3, [pc, #416]	; (800231c <homing+0x314>)
 800217c:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002180:	ee17 2a90 	vmov	r2, s15
 8002184:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM12->CCR1 = (uint32_t)((double)(TIM12->ARR) / 2.0);
 8002186:	4b65      	ldr	r3, [pc, #404]	; (800231c <homing+0x314>)
 8002188:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800218a:	ee07 3a90 	vmov	s15, r3
 800218e:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 8002192:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 8002196:	ee86 7b05 	vdiv.f64	d7, d6, d5
 800219a:	4b60      	ldr	r3, [pc, #384]	; (800231c <homing+0x314>)
 800219c:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80021a0:	ee17 2a90 	vmov	r2, s15
 80021a4:	635a      	str	r2, [r3, #52]	; 0x34
	TIM13->ARR =periodoM[1];
 80021a6:	4b5f      	ldr	r3, [pc, #380]	; (8002324 <homing+0x31c>)
 80021a8:	ed93 7b02 	vldr	d7, [r3, #8]
 80021ac:	4b5e      	ldr	r3, [pc, #376]	; (8002328 <homing+0x320>)
 80021ae:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80021b2:	ee17 2a90 	vmov	r2, s15
 80021b6:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM13->CCR1 = (uint32_t)((double)(TIM13->ARR) / 2.0);
 80021b8:	4b5b      	ldr	r3, [pc, #364]	; (8002328 <homing+0x320>)
 80021ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80021bc:	ee07 3a90 	vmov	s15, r3
 80021c0:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 80021c4:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 80021c8:	ee86 7b05 	vdiv.f64	d7, d6, d5
 80021cc:	4b56      	ldr	r3, [pc, #344]	; (8002328 <homing+0x320>)
 80021ce:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80021d2:	ee17 2a90 	vmov	r2, s15
 80021d6:	635a      	str	r2, [r3, #52]	; 0x34
	TIM14->ARR =periodoM[2];
 80021d8:	4b52      	ldr	r3, [pc, #328]	; (8002324 <homing+0x31c>)
 80021da:	ed93 7b04 	vldr	d7, [r3, #16]
 80021de:	4b53      	ldr	r3, [pc, #332]	; (800232c <homing+0x324>)
 80021e0:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80021e4:	ee17 2a90 	vmov	r2, s15
 80021e8:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM14->CCR1 = (uint32_t)((double)(TIM14->ARR) / 2.0);
 80021ea:	4b50      	ldr	r3, [pc, #320]	; (800232c <homing+0x324>)
 80021ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80021ee:	ee07 3a90 	vmov	s15, r3
 80021f2:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 80021f6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 80021fa:	ee86 7b05 	vdiv.f64	d7, d6, d5
 80021fe:	4b4b      	ldr	r3, [pc, #300]	; (800232c <homing+0x324>)
 8002200:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002204:	ee17 2a90 	vmov	r2, s15
 8002208:	635a      	str	r2, [r3, #52]	; 0x34


    while(homAprox){
 800220a:	e047      	b.n	800229c <homing+0x294>

        HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 800220c:	2100      	movs	r1, #0
 800220e:	4840      	ldr	r0, [pc, #256]	; (8002310 <homing+0x308>)
 8002210:	f008 fc00 	bl	800aa14 <HAL_TIM_PWM_Start>
        HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 8002214:	2100      	movs	r1, #0
 8002216:	483f      	ldr	r0, [pc, #252]	; (8002314 <homing+0x30c>)
 8002218:	f008 fbfc 	bl	800aa14 <HAL_TIM_PWM_Start>
        HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 800221c:	2100      	movs	r1, #0
 800221e:	483e      	ldr	r0, [pc, #248]	; (8002318 <homing+0x310>)
 8002220:	f008 fbf8 	bl	800aa14 <HAL_TIM_PWM_Start>

        if (ES1s_PRESSED || ES2s_PRESSED || ES3s_PRESSED){
 8002224:	2101      	movs	r1, #1
 8002226:	4842      	ldr	r0, [pc, #264]	; (8002330 <homing+0x328>)
 8002228:	f005 fe54 	bl	8007ed4 <HAL_GPIO_ReadPin>
 800222c:	4603      	mov	r3, r0
 800222e:	2b00      	cmp	r3, #0
 8002230:	d00d      	beq.n	800224e <homing+0x246>
 8002232:	2104      	movs	r1, #4
 8002234:	483e      	ldr	r0, [pc, #248]	; (8002330 <homing+0x328>)
 8002236:	f005 fe4d 	bl	8007ed4 <HAL_GPIO_ReadPin>
 800223a:	4603      	mov	r3, r0
 800223c:	2b00      	cmp	r3, #0
 800223e:	d006      	beq.n	800224e <homing+0x246>
 8002240:	2110      	movs	r1, #16
 8002242:	483b      	ldr	r0, [pc, #236]	; (8002330 <homing+0x328>)
 8002244:	f005 fe46 	bl	8007ed4 <HAL_GPIO_ReadPin>
 8002248:	4603      	mov	r3, r0
 800224a:	2b00      	cmp	r3, #0
 800224c:	d126      	bne.n	800229c <homing+0x294>
            HAL_Delay(30);
 800224e:	201e      	movs	r0, #30
 8002250:	f004 fdba 	bl	8006dc8 <HAL_Delay>
            if (ES1s_PRESSED || ES2s_PRESSED || ES3s_PRESSED){
 8002254:	2101      	movs	r1, #1
 8002256:	4836      	ldr	r0, [pc, #216]	; (8002330 <homing+0x328>)
 8002258:	f005 fe3c 	bl	8007ed4 <HAL_GPIO_ReadPin>
 800225c:	4603      	mov	r3, r0
 800225e:	2b00      	cmp	r3, #0
 8002260:	d00d      	beq.n	800227e <homing+0x276>
 8002262:	2104      	movs	r1, #4
 8002264:	4832      	ldr	r0, [pc, #200]	; (8002330 <homing+0x328>)
 8002266:	f005 fe35 	bl	8007ed4 <HAL_GPIO_ReadPin>
 800226a:	4603      	mov	r3, r0
 800226c:	2b00      	cmp	r3, #0
 800226e:	d006      	beq.n	800227e <homing+0x276>
 8002270:	2110      	movs	r1, #16
 8002272:	482f      	ldr	r0, [pc, #188]	; (8002330 <homing+0x328>)
 8002274:	f005 fe2e 	bl	8007ed4 <HAL_GPIO_ReadPin>
 8002278:	4603      	mov	r3, r0
 800227a:	2b00      	cmp	r3, #0
 800227c:	d10e      	bne.n	800229c <homing+0x294>

                HAL_TIM_PWM_Stop(&htim12, TIM_CHANNEL_1);
 800227e:	2100      	movs	r1, #0
 8002280:	4823      	ldr	r0, [pc, #140]	; (8002310 <homing+0x308>)
 8002282:	f008 fcd5 	bl	800ac30 <HAL_TIM_PWM_Stop>
                HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);
 8002286:	2100      	movs	r1, #0
 8002288:	4822      	ldr	r0, [pc, #136]	; (8002314 <homing+0x30c>)
 800228a:	f008 fcd1 	bl	800ac30 <HAL_TIM_PWM_Stop>
                HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 800228e:	2100      	movs	r1, #0
 8002290:	4821      	ldr	r0, [pc, #132]	; (8002318 <homing+0x310>)
 8002292:	f008 fccd 	bl	800ac30 <HAL_TIM_PWM_Stop>

                homAprox = false;
 8002296:	4b14      	ldr	r3, [pc, #80]	; (80022e8 <homing+0x2e0>)
 8002298:	2200      	movs	r2, #0
 800229a:	701a      	strb	r2, [r3, #0]
    while(homAprox){
 800229c:	4b12      	ldr	r3, [pc, #72]	; (80022e8 <homing+0x2e0>)
 800229e:	781b      	ldrb	r3, [r3, #0]
 80022a0:	2b00      	cmp	r3, #0
 80022a2:	d1b3      	bne.n	800220c <homing+0x204>
        }
    }

    //-----------------------------------------------------------------------------

    while (!homFin){
 80022a4:	e16c      	b.n	8002580 <homing+0x578>

        if (ES1s_PRESSED && !hom1) {
 80022a6:	2101      	movs	r1, #1
 80022a8:	4821      	ldr	r0, [pc, #132]	; (8002330 <homing+0x328>)
 80022aa:	f005 fe13 	bl	8007ed4 <HAL_GPIO_ReadPin>
 80022ae:	4603      	mov	r3, r0
 80022b0:	2b00      	cmp	r3, #0
 80022b2:	d17d      	bne.n	80023b0 <homing+0x3a8>
 80022b4:	4b0f      	ldr	r3, [pc, #60]	; (80022f4 <homing+0x2ec>)
 80022b6:	781b      	ldrb	r3, [r3, #0]
 80022b8:	2b00      	cmp	r3, #0
 80022ba:	d179      	bne.n	80023b0 <homing+0x3a8>

            HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);
 80022bc:	2100      	movs	r1, #0
 80022be:	4815      	ldr	r0, [pc, #84]	; (8002314 <homing+0x30c>)
 80022c0:	f008 fcb6 	bl	800ac30 <HAL_TIM_PWM_Stop>
            HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 80022c4:	2100      	movs	r1, #0
 80022c6:	4814      	ldr	r0, [pc, #80]	; (8002318 <homing+0x310>)
 80022c8:	f008 fcb2 	bl	800ac30 <HAL_TIM_PWM_Stop>

            HAL_Delay(30);//Delay necesario para consultar el estado del pin vinculado al ES1s
 80022cc:	201e      	movs	r0, #30
 80022ce:	f004 fd7b 	bl	8006dc8 <HAL_Delay>

            while(ES1s_PRESSED){
 80022d2:	e040      	b.n	8002356 <homing+0x34e>
 80022d4:	f3af 8000 	nop.w
 80022d8:	00000000 	.word	0x00000000
 80022dc:	40bf4000 	.word	0x40bf4000
 80022e0:	00000000 	.word	0x00000000
 80022e4:	41ec9c38 	.word	0x41ec9c38
 80022e8:	240003d0 	.word	0x240003d0
 80022ec:	240003d1 	.word	0x240003d1
 80022f0:	240003d2 	.word	0x240003d2
 80022f4:	240003d3 	.word	0x240003d3
 80022f8:	240003d4 	.word	0x240003d4
 80022fc:	240003d5 	.word	0x240003d5
 8002300:	58020800 	.word	0x58020800
 8002304:	24000844 	.word	0x24000844
 8002308:	24000890 	.word	0x24000890
 800230c:	240008dc 	.word	0x240008dc
 8002310:	24000974 	.word	0x24000974
 8002314:	240009c0 	.word	0x240009c0
 8002318:	24000a0c 	.word	0x24000a0c
 800231c:	40001800 	.word	0x40001800
 8002320:	24000000 	.word	0x24000000
 8002324:	24000778 	.word	0x24000778
 8002328:	40001c00 	.word	0x40001c00
 800232c:	40002000 	.word	0x40002000
 8002330:	58021000 	.word	0x58021000

                HAL_GPIO_WritePin(S_DirPaP1_GPIO_Port, S_DirPaP1_Pin, GPIO_PIN_SET);
 8002334:	2201      	movs	r2, #1
 8002336:	f44f 7180 	mov.w	r1, #256	; 0x100
 800233a:	4895      	ldr	r0, [pc, #596]	; (8002590 <homing+0x588>)
 800233c:	f005 fde2 	bl	8007f04 <HAL_GPIO_WritePin>
                HAL_Delay(0.5); 							//delay cambio de dir
 8002340:	2000      	movs	r0, #0
 8002342:	f004 fd41 	bl	8006dc8 <HAL_Delay>
                HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 8002346:	2100      	movs	r1, #0
 8002348:	4892      	ldr	r0, [pc, #584]	; (8002594 <homing+0x58c>)
 800234a:	f008 fb63 	bl	800aa14 <HAL_TIM_PWM_Start>
                HAL_Delay(500); //Lo dejamos que se mueva medio segundo en la direccion descreciente
 800234e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002352:	f004 fd39 	bl	8006dc8 <HAL_Delay>
            while(ES1s_PRESSED){
 8002356:	2101      	movs	r1, #1
 8002358:	488f      	ldr	r0, [pc, #572]	; (8002598 <homing+0x590>)
 800235a:	f005 fdbb 	bl	8007ed4 <HAL_GPIO_ReadPin>
 800235e:	4603      	mov	r3, r0
 8002360:	2b00      	cmp	r3, #0
 8002362:	d0e7      	beq.n	8002334 <homing+0x32c>

            }

            HAL_TIM_PWM_Stop(&htim12, TIM_CHANNEL_1);
 8002364:	2100      	movs	r1, #0
 8002366:	488b      	ldr	r0, [pc, #556]	; (8002594 <homing+0x58c>)
 8002368:	f008 fc62 	bl	800ac30 <HAL_TIM_PWM_Stop>
            titha1 = 0;
 800236c:	498b      	ldr	r1, [pc, #556]	; (800259c <homing+0x594>)
 800236e:	f04f 0200 	mov.w	r2, #0
 8002372:	f04f 0300 	mov.w	r3, #0
 8002376:	e9c1 2300 	strd	r2, r3, [r1]
            hom1=true;
 800237a:	4b89      	ldr	r3, [pc, #548]	; (80025a0 <homing+0x598>)
 800237c:	2201      	movs	r2, #1
 800237e:	701a      	strb	r2, [r3, #0]
            HAL_UART_Transmit(&huart3,(uint8_t *)"F1\n", 4, 100);
 8002380:	2364      	movs	r3, #100	; 0x64
 8002382:	2204      	movs	r2, #4
 8002384:	4987      	ldr	r1, [pc, #540]	; (80025a4 <homing+0x59c>)
 8002386:	4888      	ldr	r0, [pc, #544]	; (80025a8 <homing+0x5a0>)
 8002388:	f00a f998 	bl	800c6bc <HAL_UART_Transmit>
            HAL_Delay(30);
 800238c:	201e      	movs	r0, #30
 800238e:	f004 fd1b 	bl	8006dc8 <HAL_Delay>

            if (ES2s_UNPRESSED && !hom2)HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 8002392:	2104      	movs	r1, #4
 8002394:	4880      	ldr	r0, [pc, #512]	; (8002598 <homing+0x590>)
 8002396:	f005 fd9d 	bl	8007ed4 <HAL_GPIO_ReadPin>
 800239a:	4603      	mov	r3, r0
 800239c:	2b00      	cmp	r3, #0
 800239e:	d007      	beq.n	80023b0 <homing+0x3a8>
 80023a0:	4b82      	ldr	r3, [pc, #520]	; (80025ac <homing+0x5a4>)
 80023a2:	781b      	ldrb	r3, [r3, #0]
 80023a4:	2b00      	cmp	r3, #0
 80023a6:	d103      	bne.n	80023b0 <homing+0x3a8>
 80023a8:	2100      	movs	r1, #0
 80023aa:	4881      	ldr	r0, [pc, #516]	; (80025b0 <homing+0x5a8>)
 80023ac:	f008 fb32 	bl	800aa14 <HAL_TIM_PWM_Start>
            //if (ES3s_UNPRESSED && !hom3)HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);


        } // ES1s_UNPRESSED : Se dejó de presionar el FC1 sup

        if (ES2s_PRESSED && !hom2){
 80023b0:	2104      	movs	r1, #4
 80023b2:	4879      	ldr	r0, [pc, #484]	; (8002598 <homing+0x590>)
 80023b4:	f005 fd8e 	bl	8007ed4 <HAL_GPIO_ReadPin>
 80023b8:	4603      	mov	r3, r0
 80023ba:	2b00      	cmp	r3, #0
 80023bc:	d14d      	bne.n	800245a <homing+0x452>
 80023be:	4b7b      	ldr	r3, [pc, #492]	; (80025ac <homing+0x5a4>)
 80023c0:	781b      	ldrb	r3, [r3, #0]
 80023c2:	2b00      	cmp	r3, #0
 80023c4:	d149      	bne.n	800245a <homing+0x452>

            HAL_TIM_PWM_Stop(&htim12, TIM_CHANNEL_1);
 80023c6:	2100      	movs	r1, #0
 80023c8:	4872      	ldr	r0, [pc, #456]	; (8002594 <homing+0x58c>)
 80023ca:	f008 fc31 	bl	800ac30 <HAL_TIM_PWM_Stop>
            HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 80023ce:	2100      	movs	r1, #0
 80023d0:	4878      	ldr	r0, [pc, #480]	; (80025b4 <homing+0x5ac>)
 80023d2:	f008 fc2d 	bl	800ac30 <HAL_TIM_PWM_Stop>

            HAL_Delay(30);//Delay necesario para consultar el estado del pin vinculado al ES2s
 80023d6:	201e      	movs	r0, #30
 80023d8:	f004 fcf6 	bl	8006dc8 <HAL_Delay>

            while(ES2s_PRESSED){
 80023dc:	e010      	b.n	8002400 <homing+0x3f8>

                HAL_GPIO_WritePin(S_DirPaP2_GPIO_Port, S_DirPaP2_Pin, GPIO_PIN_SET);
 80023de:	2201      	movs	r2, #1
 80023e0:	f44f 7100 	mov.w	r1, #512	; 0x200
 80023e4:	486a      	ldr	r0, [pc, #424]	; (8002590 <homing+0x588>)
 80023e6:	f005 fd8d 	bl	8007f04 <HAL_GPIO_WritePin>
                HAL_Delay(0.5);
 80023ea:	2000      	movs	r0, #0
 80023ec:	f004 fcec 	bl	8006dc8 <HAL_Delay>
                HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 80023f0:	2100      	movs	r1, #0
 80023f2:	486f      	ldr	r0, [pc, #444]	; (80025b0 <homing+0x5a8>)
 80023f4:	f008 fb0e 	bl	800aa14 <HAL_TIM_PWM_Start>
                HAL_Delay(500);
 80023f8:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80023fc:	f004 fce4 	bl	8006dc8 <HAL_Delay>
            while(ES2s_PRESSED){
 8002400:	2104      	movs	r1, #4
 8002402:	4865      	ldr	r0, [pc, #404]	; (8002598 <homing+0x590>)
 8002404:	f005 fd66 	bl	8007ed4 <HAL_GPIO_ReadPin>
 8002408:	4603      	mov	r3, r0
 800240a:	2b00      	cmp	r3, #0
 800240c:	d0e7      	beq.n	80023de <homing+0x3d6>

            }

            HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);
 800240e:	2100      	movs	r1, #0
 8002410:	4867      	ldr	r0, [pc, #412]	; (80025b0 <homing+0x5a8>)
 8002412:	f008 fc0d 	bl	800ac30 <HAL_TIM_PWM_Stop>
            titha2 = 0;
 8002416:	4968      	ldr	r1, [pc, #416]	; (80025b8 <homing+0x5b0>)
 8002418:	f04f 0200 	mov.w	r2, #0
 800241c:	f04f 0300 	mov.w	r3, #0
 8002420:	e9c1 2300 	strd	r2, r3, [r1]
            hom2=true;
 8002424:	4b61      	ldr	r3, [pc, #388]	; (80025ac <homing+0x5a4>)
 8002426:	2201      	movs	r2, #1
 8002428:	701a      	strb	r2, [r3, #0]
            HAL_UART_Transmit(&huart3,(uint8_t *)"F2\n", 4, 100);
 800242a:	2364      	movs	r3, #100	; 0x64
 800242c:	2204      	movs	r2, #4
 800242e:	4963      	ldr	r1, [pc, #396]	; (80025bc <homing+0x5b4>)
 8002430:	485d      	ldr	r0, [pc, #372]	; (80025a8 <homing+0x5a0>)
 8002432:	f00a f943 	bl	800c6bc <HAL_UART_Transmit>
            HAL_Delay(30);
 8002436:	201e      	movs	r0, #30
 8002438:	f004 fcc6 	bl	8006dc8 <HAL_Delay>

            if (ES1s_UNPRESSED && !hom1)HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 800243c:	2101      	movs	r1, #1
 800243e:	4856      	ldr	r0, [pc, #344]	; (8002598 <homing+0x590>)
 8002440:	f005 fd48 	bl	8007ed4 <HAL_GPIO_ReadPin>
 8002444:	4603      	mov	r3, r0
 8002446:	2b00      	cmp	r3, #0
 8002448:	d007      	beq.n	800245a <homing+0x452>
 800244a:	4b55      	ldr	r3, [pc, #340]	; (80025a0 <homing+0x598>)
 800244c:	781b      	ldrb	r3, [r3, #0]
 800244e:	2b00      	cmp	r3, #0
 8002450:	d103      	bne.n	800245a <homing+0x452>
 8002452:	2100      	movs	r1, #0
 8002454:	484f      	ldr	r0, [pc, #316]	; (8002594 <homing+0x58c>)
 8002456:	f008 fadd 	bl	800aa14 <HAL_TIM_PWM_Start>
            //if (ES3s_UNPRESSED && !hom3)HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);

        }// ES2s_UNPRESSED : Se dejó de presionar el FC2 sup


        if (ES3s_PRESSED){
 800245a:	2110      	movs	r1, #16
 800245c:	484e      	ldr	r0, [pc, #312]	; (8002598 <homing+0x590>)
 800245e:	f005 fd39 	bl	8007ed4 <HAL_GPIO_ReadPin>
 8002462:	4603      	mov	r3, r0
 8002464:	2b00      	cmp	r3, #0
 8002466:	d158      	bne.n	800251a <homing+0x512>

            HAL_TIM_PWM_Stop(&htim12, TIM_CHANNEL_1);
 8002468:	2100      	movs	r1, #0
 800246a:	484a      	ldr	r0, [pc, #296]	; (8002594 <homing+0x58c>)
 800246c:	f008 fbe0 	bl	800ac30 <HAL_TIM_PWM_Stop>
            HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);
 8002470:	2100      	movs	r1, #0
 8002472:	484f      	ldr	r0, [pc, #316]	; (80025b0 <homing+0x5a8>)
 8002474:	f008 fbdc 	bl	800ac30 <HAL_TIM_PWM_Stop>

            HAL_Delay(30);//Delay necesario para consultar el estado del pin vinculado al ES3s
 8002478:	201e      	movs	r0, #30
 800247a:	f004 fca5 	bl	8006dc8 <HAL_Delay>

            while(ES3s_PRESSED){
 800247e:	e010      	b.n	80024a2 <homing+0x49a>

                HAL_GPIO_WritePin(S_DirPaP3_GPIO_Port, S_DirPaP3_Pin, GPIO_PIN_SET);
 8002480:	2201      	movs	r2, #1
 8002482:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002486:	4842      	ldr	r0, [pc, #264]	; (8002590 <homing+0x588>)
 8002488:	f005 fd3c 	bl	8007f04 <HAL_GPIO_WritePin>
                HAL_Delay(0.5);
 800248c:	2000      	movs	r0, #0
 800248e:	f004 fc9b 	bl	8006dc8 <HAL_Delay>
                HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 8002492:	2100      	movs	r1, #0
 8002494:	4847      	ldr	r0, [pc, #284]	; (80025b4 <homing+0x5ac>)
 8002496:	f008 fabd 	bl	800aa14 <HAL_TIM_PWM_Start>
                HAL_Delay(500);
 800249a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800249e:	f004 fc93 	bl	8006dc8 <HAL_Delay>
            while(ES3s_PRESSED){
 80024a2:	2110      	movs	r1, #16
 80024a4:	483c      	ldr	r0, [pc, #240]	; (8002598 <homing+0x590>)
 80024a6:	f005 fd15 	bl	8007ed4 <HAL_GPIO_ReadPin>
 80024aa:	4603      	mov	r3, r0
 80024ac:	2b00      	cmp	r3, #0
 80024ae:	d0e7      	beq.n	8002480 <homing+0x478>
            }

            HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 80024b0:	2100      	movs	r1, #0
 80024b2:	4840      	ldr	r0, [pc, #256]	; (80025b4 <homing+0x5ac>)
 80024b4:	f008 fbbc 	bl	800ac30 <HAL_TIM_PWM_Stop>
            titha3 = 0;
 80024b8:	4941      	ldr	r1, [pc, #260]	; (80025c0 <homing+0x5b8>)
 80024ba:	f04f 0200 	mov.w	r2, #0
 80024be:	f04f 0300 	mov.w	r3, #0
 80024c2:	e9c1 2300 	strd	r2, r3, [r1]
            hom3=true;
 80024c6:	4b3f      	ldr	r3, [pc, #252]	; (80025c4 <homing+0x5bc>)
 80024c8:	2201      	movs	r2, #1
 80024ca:	701a      	strb	r2, [r3, #0]
            HAL_UART_Transmit(&huart3,(uint8_t *)"F3\n", 4, 100);
 80024cc:	2364      	movs	r3, #100	; 0x64
 80024ce:	2204      	movs	r2, #4
 80024d0:	493d      	ldr	r1, [pc, #244]	; (80025c8 <homing+0x5c0>)
 80024d2:	4835      	ldr	r0, [pc, #212]	; (80025a8 <homing+0x5a0>)
 80024d4:	f00a f8f2 	bl	800c6bc <HAL_UART_Transmit>
			HAL_Delay(30);
 80024d8:	201e      	movs	r0, #30
 80024da:	f004 fc75 	bl	8006dc8 <HAL_Delay>
            if (ES1s_UNPRESSED && !hom1)HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 80024de:	2101      	movs	r1, #1
 80024e0:	482d      	ldr	r0, [pc, #180]	; (8002598 <homing+0x590>)
 80024e2:	f005 fcf7 	bl	8007ed4 <HAL_GPIO_ReadPin>
 80024e6:	4603      	mov	r3, r0
 80024e8:	2b00      	cmp	r3, #0
 80024ea:	d007      	beq.n	80024fc <homing+0x4f4>
 80024ec:	4b2c      	ldr	r3, [pc, #176]	; (80025a0 <homing+0x598>)
 80024ee:	781b      	ldrb	r3, [r3, #0]
 80024f0:	2b00      	cmp	r3, #0
 80024f2:	d103      	bne.n	80024fc <homing+0x4f4>
 80024f4:	2100      	movs	r1, #0
 80024f6:	4827      	ldr	r0, [pc, #156]	; (8002594 <homing+0x58c>)
 80024f8:	f008 fa8c 	bl	800aa14 <HAL_TIM_PWM_Start>
            if (ES2s_UNPRESSED && !hom2)HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 80024fc:	2104      	movs	r1, #4
 80024fe:	4826      	ldr	r0, [pc, #152]	; (8002598 <homing+0x590>)
 8002500:	f005 fce8 	bl	8007ed4 <HAL_GPIO_ReadPin>
 8002504:	4603      	mov	r3, r0
 8002506:	2b00      	cmp	r3, #0
 8002508:	d007      	beq.n	800251a <homing+0x512>
 800250a:	4b28      	ldr	r3, [pc, #160]	; (80025ac <homing+0x5a4>)
 800250c:	781b      	ldrb	r3, [r3, #0]
 800250e:	2b00      	cmp	r3, #0
 8002510:	d103      	bne.n	800251a <homing+0x512>
 8002512:	2100      	movs	r1, #0
 8002514:	4826      	ldr	r0, [pc, #152]	; (80025b0 <homing+0x5a8>)
 8002516:	f008 fa7d 	bl	800aa14 <HAL_TIM_PWM_Start>
        }// ES3s_UNPRESSED : Se dejó de presionar el FC3 sup



        if (hom1 &&hom2 && hom3){
 800251a:	4b21      	ldr	r3, [pc, #132]	; (80025a0 <homing+0x598>)
 800251c:	781b      	ldrb	r3, [r3, #0]
 800251e:	2b00      	cmp	r3, #0
 8002520:	d02e      	beq.n	8002580 <homing+0x578>
 8002522:	4b22      	ldr	r3, [pc, #136]	; (80025ac <homing+0x5a4>)
 8002524:	781b      	ldrb	r3, [r3, #0]
 8002526:	2b00      	cmp	r3, #0
 8002528:	d02a      	beq.n	8002580 <homing+0x578>
 800252a:	4b26      	ldr	r3, [pc, #152]	; (80025c4 <homing+0x5bc>)
 800252c:	781b      	ldrb	r3, [r3, #0]
 800252e:	2b00      	cmp	r3, #0
 8002530:	d026      	beq.n	8002580 <homing+0x578>
        	homFin=true;
 8002532:	4b26      	ldr	r3, [pc, #152]	; (80025cc <homing+0x5c4>)
 8002534:	2201      	movs	r2, #1
 8002536:	701a      	strb	r2, [r3, #0]

        	HAL_TIM_IC_Start_IT(&htim2, TIM_CHANNEL_1);//Enciendo interrupcion input capture motor 1
 8002538:	2100      	movs	r1, #0
 800253a:	4825      	ldr	r0, [pc, #148]	; (80025d0 <homing+0x5c8>)
 800253c:	f008 fc70 	bl	800ae20 <HAL_TIM_IC_Start_IT>
        	HAL_TIM_IC_Start_IT(&htim3, TIM_CHANNEL_1);//Enciendo interrupcion input capture motor 2
 8002540:	2100      	movs	r1, #0
 8002542:	4824      	ldr	r0, [pc, #144]	; (80025d4 <homing+0x5cc>)
 8002544:	f008 fc6c 	bl	800ae20 <HAL_TIM_IC_Start_IT>
        	HAL_TIM_IC_Start_IT(&htim4, TIM_CHANNEL_1);//Enciendo interrupcion input capture motor 3
 8002548:	2100      	movs	r1, #0
 800254a:	4823      	ldr	r0, [pc, #140]	; (80025d8 <homing+0x5d0>)
 800254c:	f008 fc68 	bl	800ae20 <HAL_TIM_IC_Start_IT>

        	HAL_NVIC_EnableIRQ(EXTI0_IRQn);		//Enciendo interrupcion EndStop 1 Superior
 8002550:	2006      	movs	r0, #6
 8002552:	f004 fd82 	bl	800705a <HAL_NVIC_EnableIRQ>
        	HAL_NVIC_EnableIRQ(EXTI1_IRQn);		//Enciendo interrupcion EndStop 1 Inferior
 8002556:	2007      	movs	r0, #7
 8002558:	f004 fd7f 	bl	800705a <HAL_NVIC_EnableIRQ>
        	HAL_NVIC_EnableIRQ(EXTI2_IRQn);		//Enciendo interrupcion EndStop 2 Superior
 800255c:	2008      	movs	r0, #8
 800255e:	f004 fd7c 	bl	800705a <HAL_NVIC_EnableIRQ>
        	HAL_NVIC_EnableIRQ(EXTI3_IRQn);		//Enciendo interrupcion EndStop 2 Inferior
 8002562:	2009      	movs	r0, #9
 8002564:	f004 fd79 	bl	800705a <HAL_NVIC_EnableIRQ>
        	HAL_NVIC_EnableIRQ(EXTI4_IRQn);		//Enciendo interrupcion EndStop 3 Superior
 8002568:	200a      	movs	r0, #10
 800256a:	f004 fd76 	bl	800705a <HAL_NVIC_EnableIRQ>
        	HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);	//Enciendo interrupcion EndStop 3 Inferior
 800256e:	2017      	movs	r0, #23
 8002570:	f004 fd73 	bl	800705a <HAL_NVIC_EnableIRQ>


        	HAL_UART_Transmit(&huart3,(uint8_t *)"FH\n", 4, 100);
 8002574:	2364      	movs	r3, #100	; 0x64
 8002576:	2204      	movs	r2, #4
 8002578:	4918      	ldr	r1, [pc, #96]	; (80025dc <homing+0x5d4>)
 800257a:	480b      	ldr	r0, [pc, #44]	; (80025a8 <homing+0x5a0>)
 800257c:	f00a f89e 	bl	800c6bc <HAL_UART_Transmit>
    while (!homFin){
 8002580:	4b12      	ldr	r3, [pc, #72]	; (80025cc <homing+0x5c4>)
 8002582:	781b      	ldrb	r3, [r3, #0]
 8002584:	2b00      	cmp	r3, #0
 8002586:	f43f ae8e 	beq.w	80022a6 <homing+0x29e>
        }
       }


    }
 800258a:	bf00      	nop
 800258c:	bf00      	nop
 800258e:	bd80      	pop	{r7, pc}
 8002590:	58020800 	.word	0x58020800
 8002594:	24000974 	.word	0x24000974
 8002598:	58021000 	.word	0x58021000
 800259c:	24000658 	.word	0x24000658
 80025a0:	240003d3 	.word	0x240003d3
 80025a4:	080122e8 	.word	0x080122e8
 80025a8:	24000bfc 	.word	0x24000bfc
 80025ac:	240003d4 	.word	0x240003d4
 80025b0:	240009c0 	.word	0x240009c0
 80025b4:	24000a0c 	.word	0x24000a0c
 80025b8:	24000660 	.word	0x24000660
 80025bc:	080122ec 	.word	0x080122ec
 80025c0:	24000668 	.word	0x24000668
 80025c4:	240003d5 	.word	0x240003d5
 80025c8:	080122f0 	.word	0x080122f0
 80025cc:	240003d2 	.word	0x240003d2
 80025d0:	24000844 	.word	0x24000844
 80025d4:	24000890 	.word	0x24000890
 80025d8:	240008dc 	.word	0x240008dc
 80025dc:	080122f4 	.word	0x080122f4

080025e0 <interpretaComando>:


volatile double aux;
uint8_t auxString[10];

void interpretaComando(void){
 80025e0:	b580      	push	{r7, lr}
 80025e2:	b084      	sub	sp, #16
 80025e4:	af00      	add	r7, sp, #0

	switch(rx_buffer[0]){
 80025e6:	4b88      	ldr	r3, [pc, #544]	; (8002808 <interpretaComando+0x228>)
 80025e8:	781b      	ldrb	r3, [r3, #0]
 80025ea:	2b70      	cmp	r3, #112	; 0x70
 80025ec:	d035      	beq.n	800265a <interpretaComando+0x7a>
 80025ee:	2b70      	cmp	r3, #112	; 0x70
 80025f0:	f300 8102 	bgt.w	80027f8 <interpretaComando+0x218>
 80025f4:	2b68      	cmp	r3, #104	; 0x68
 80025f6:	d007      	beq.n	8002608 <interpretaComando+0x28>
 80025f8:	2b68      	cmp	r3, #104	; 0x68
 80025fa:	f300 80fd 	bgt.w	80027f8 <interpretaComando+0x218>
 80025fe:	2b48      	cmp	r3, #72	; 0x48
 8002600:	d002      	beq.n	8002608 <interpretaComando+0x28>
 8002602:	2b50      	cmp	r3, #80	; 0x50
 8002604:	d029      	beq.n	800265a <interpretaComando+0x7a>



	}

}
 8002606:	e0f7      	b.n	80027f8 <interpretaComando+0x218>
		HAL_GPIO_WritePin(S_Enable_1_GPIO_Port, S_Enable_1_Pin, GPIO_PIN_RESET);
 8002608:	2200      	movs	r2, #0
 800260a:	2110      	movs	r1, #16
 800260c:	487f      	ldr	r0, [pc, #508]	; (800280c <interpretaComando+0x22c>)
 800260e:	f005 fc79 	bl	8007f04 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(S_Enable_2_GPIO_Port, S_Enable_2_Pin, GPIO_PIN_RESET);
 8002612:	2200      	movs	r2, #0
 8002614:	2120      	movs	r1, #32
 8002616:	487d      	ldr	r0, [pc, #500]	; (800280c <interpretaComando+0x22c>)
 8002618:	f005 fc74 	bl	8007f04 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(S_Enable_3_GPIO_Port, S_Enable_3_Pin, GPIO_PIN_RESET);
 800261c:	2200      	movs	r2, #0
 800261e:	2140      	movs	r1, #64	; 0x40
 8002620:	487a      	ldr	r0, [pc, #488]	; (800280c <interpretaComando+0x22c>)
 8002622:	f005 fc6f 	bl	8007f04 <HAL_GPIO_WritePin>
		HAL_Delay(50); //50 ms es el tiempo que la señal ENABLE en cambiar de estado
 8002626:	2032      	movs	r0, #50	; 0x32
 8002628:	f004 fbce 	bl	8006dc8 <HAL_Delay>
		homing();
 800262c:	f7ff fcec 	bl	8002008 <homing>
		Pini.x=0;
 8002630:	4977      	ldr	r1, [pc, #476]	; (8002810 <interpretaComando+0x230>)
 8002632:	f04f 0200 	mov.w	r2, #0
 8002636:	f04f 0300 	mov.w	r3, #0
 800263a:	e9c1 2300 	strd	r2, r3, [r1]
		Pini.y=0;
 800263e:	4974      	ldr	r1, [pc, #464]	; (8002810 <interpretaComando+0x230>)
 8002640:	f04f 0200 	mov.w	r2, #0
 8002644:	f04f 0300 	mov.w	r3, #0
 8002648:	e9c1 2302 	strd	r2, r3, [r1, #8]
		Pini.z =-0.5208; //antes era -0.33
 800264c:	4970      	ldr	r1, [pc, #448]	; (8002810 <interpretaComando+0x230>)
 800264e:	a36c      	add	r3, pc, #432	; (adr r3, 8002800 <interpretaComando+0x220>)
 8002650:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002654:	e9c1 2304 	strd	r2, r3, [r1, #16]
	break;
 8002658:	e0ce      	b.n	80027f8 <interpretaComando+0x218>
		flagErrorEndStop = 0;
 800265a:	496e      	ldr	r1, [pc, #440]	; (8002814 <interpretaComando+0x234>)
 800265c:	f04f 0200 	mov.w	r2, #0
 8002660:	f04f 0300 	mov.w	r3, #0
 8002664:	e9c1 2300 	strd	r2, r3, [r1]
		uint8_t i = 1;
 8002668:	2301      	movs	r3, #1
 800266a:	73fb      	strb	r3, [r7, #15]
		uint8_t j = 0;
 800266c:	2300      	movs	r3, #0
 800266e:	73bb      	strb	r3, [r7, #14]
		while(rx_buffer[i] != 0){
 8002670:	e0ac      	b.n	80027cc <interpretaComando+0x1ec>
			if(rx_buffer[i] == 'x'){
 8002672:	7bfb      	ldrb	r3, [r7, #15]
 8002674:	4a64      	ldr	r2, [pc, #400]	; (8002808 <interpretaComando+0x228>)
 8002676:	5cd3      	ldrb	r3, [r2, r3]
 8002678:	2b78      	cmp	r3, #120	; 0x78
 800267a:	d133      	bne.n	80026e4 <interpretaComando+0x104>
				while(rx_buffer[i+1] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 800267c:	e00c      	b.n	8002698 <interpretaComando+0xb8>
					auxString[j] = rx_buffer[i+1];
 800267e:	7bfb      	ldrb	r3, [r7, #15]
 8002680:	1c5a      	adds	r2, r3, #1
 8002682:	7bbb      	ldrb	r3, [r7, #14]
 8002684:	4960      	ldr	r1, [pc, #384]	; (8002808 <interpretaComando+0x228>)
 8002686:	5c89      	ldrb	r1, [r1, r2]
 8002688:	4a63      	ldr	r2, [pc, #396]	; (8002818 <interpretaComando+0x238>)
 800268a:	54d1      	strb	r1, [r2, r3]
					j++;
 800268c:	7bbb      	ldrb	r3, [r7, #14]
 800268e:	3301      	adds	r3, #1
 8002690:	73bb      	strb	r3, [r7, #14]
					i++;
 8002692:	7bfb      	ldrb	r3, [r7, #15]
 8002694:	3301      	adds	r3, #1
 8002696:	73fb      	strb	r3, [r7, #15]
				while(rx_buffer[i+1] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002698:	7bfb      	ldrb	r3, [r7, #15]
 800269a:	3301      	adds	r3, #1
 800269c:	4a5a      	ldr	r2, [pc, #360]	; (8002808 <interpretaComando+0x228>)
 800269e:	5cd3      	ldrb	r3, [r2, r3]
 80026a0:	2b20      	cmp	r3, #32
 80026a2:	d1ec      	bne.n	800267e <interpretaComando+0x9e>
				Pfin.x = strtod(&auxString[0], NULL);
 80026a4:	2100      	movs	r1, #0
 80026a6:	485c      	ldr	r0, [pc, #368]	; (8002818 <interpretaComando+0x238>)
 80026a8:	f00d f928 	bl	800f8fc <strtod>
 80026ac:	eeb0 7b40 	vmov.f64	d7, d0
 80026b0:	4b5a      	ldr	r3, [pc, #360]	; (800281c <interpretaComando+0x23c>)
 80026b2:	ed83 7b00 	vstr	d7, [r3]
				for (int k = 0; k <= 10; k++) {
 80026b6:	2300      	movs	r3, #0
 80026b8:	60bb      	str	r3, [r7, #8]
 80026ba:	e007      	b.n	80026cc <interpretaComando+0xec>
					auxString[k] = 0;
 80026bc:	4a56      	ldr	r2, [pc, #344]	; (8002818 <interpretaComando+0x238>)
 80026be:	68bb      	ldr	r3, [r7, #8]
 80026c0:	4413      	add	r3, r2
 80026c2:	2200      	movs	r2, #0
 80026c4:	701a      	strb	r2, [r3, #0]
				for (int k = 0; k <= 10; k++) {
 80026c6:	68bb      	ldr	r3, [r7, #8]
 80026c8:	3301      	adds	r3, #1
 80026ca:	60bb      	str	r3, [r7, #8]
 80026cc:	68bb      	ldr	r3, [r7, #8]
 80026ce:	2b0a      	cmp	r3, #10
 80026d0:	ddf4      	ble.n	80026bc <interpretaComando+0xdc>
				j=0;
 80026d2:	2300      	movs	r3, #0
 80026d4:	73bb      	strb	r3, [r7, #14]
				HAL_UART_Transmit(&huart3, (uint8_t *)"Px_ok\n", 7, 100);
 80026d6:	2364      	movs	r3, #100	; 0x64
 80026d8:	2207      	movs	r2, #7
 80026da:	4951      	ldr	r1, [pc, #324]	; (8002820 <interpretaComando+0x240>)
 80026dc:	4851      	ldr	r0, [pc, #324]	; (8002824 <interpretaComando+0x244>)
 80026de:	f009 ffed 	bl	800c6bc <HAL_UART_Transmit>
 80026e2:	e070      	b.n	80027c6 <interpretaComando+0x1e6>
			else if(rx_buffer[i] == 'y'){
 80026e4:	7bfb      	ldrb	r3, [r7, #15]
 80026e6:	4a48      	ldr	r2, [pc, #288]	; (8002808 <interpretaComando+0x228>)
 80026e8:	5cd3      	ldrb	r3, [r2, r3]
 80026ea:	2b79      	cmp	r3, #121	; 0x79
 80026ec:	d133      	bne.n	8002756 <interpretaComando+0x176>
				while(rx_buffer[i+1] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 80026ee:	e00c      	b.n	800270a <interpretaComando+0x12a>
					auxString[j] = rx_buffer[i+1];
 80026f0:	7bfb      	ldrb	r3, [r7, #15]
 80026f2:	1c5a      	adds	r2, r3, #1
 80026f4:	7bbb      	ldrb	r3, [r7, #14]
 80026f6:	4944      	ldr	r1, [pc, #272]	; (8002808 <interpretaComando+0x228>)
 80026f8:	5c89      	ldrb	r1, [r1, r2]
 80026fa:	4a47      	ldr	r2, [pc, #284]	; (8002818 <interpretaComando+0x238>)
 80026fc:	54d1      	strb	r1, [r2, r3]
					j++;
 80026fe:	7bbb      	ldrb	r3, [r7, #14]
 8002700:	3301      	adds	r3, #1
 8002702:	73bb      	strb	r3, [r7, #14]
					i++;
 8002704:	7bfb      	ldrb	r3, [r7, #15]
 8002706:	3301      	adds	r3, #1
 8002708:	73fb      	strb	r3, [r7, #15]
				while(rx_buffer[i+1] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 800270a:	7bfb      	ldrb	r3, [r7, #15]
 800270c:	3301      	adds	r3, #1
 800270e:	4a3e      	ldr	r2, [pc, #248]	; (8002808 <interpretaComando+0x228>)
 8002710:	5cd3      	ldrb	r3, [r2, r3]
 8002712:	2b20      	cmp	r3, #32
 8002714:	d1ec      	bne.n	80026f0 <interpretaComando+0x110>
				Pfin.y = strtod(&auxString[0], NULL);
 8002716:	2100      	movs	r1, #0
 8002718:	483f      	ldr	r0, [pc, #252]	; (8002818 <interpretaComando+0x238>)
 800271a:	f00d f8ef 	bl	800f8fc <strtod>
 800271e:	eeb0 7b40 	vmov.f64	d7, d0
 8002722:	4b3e      	ldr	r3, [pc, #248]	; (800281c <interpretaComando+0x23c>)
 8002724:	ed83 7b02 	vstr	d7, [r3, #8]
				for (int k = 0; k <= 10; k++) {
 8002728:	2300      	movs	r3, #0
 800272a:	607b      	str	r3, [r7, #4]
 800272c:	e007      	b.n	800273e <interpretaComando+0x15e>
					auxString[k] = 0;
 800272e:	4a3a      	ldr	r2, [pc, #232]	; (8002818 <interpretaComando+0x238>)
 8002730:	687b      	ldr	r3, [r7, #4]
 8002732:	4413      	add	r3, r2
 8002734:	2200      	movs	r2, #0
 8002736:	701a      	strb	r2, [r3, #0]
				for (int k = 0; k <= 10; k++) {
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	3301      	adds	r3, #1
 800273c:	607b      	str	r3, [r7, #4]
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	2b0a      	cmp	r3, #10
 8002742:	ddf4      	ble.n	800272e <interpretaComando+0x14e>
				j=0;
 8002744:	2300      	movs	r3, #0
 8002746:	73bb      	strb	r3, [r7, #14]
				HAL_UART_Transmit(&huart3,(uint8_t *)"Py_ok\n", 7, 100);
 8002748:	2364      	movs	r3, #100	; 0x64
 800274a:	2207      	movs	r2, #7
 800274c:	4936      	ldr	r1, [pc, #216]	; (8002828 <interpretaComando+0x248>)
 800274e:	4835      	ldr	r0, [pc, #212]	; (8002824 <interpretaComando+0x244>)
 8002750:	f009 ffb4 	bl	800c6bc <HAL_UART_Transmit>
 8002754:	e037      	b.n	80027c6 <interpretaComando+0x1e6>
			else if(rx_buffer[i] == 'z'){
 8002756:	7bfb      	ldrb	r3, [r7, #15]
 8002758:	4a2b      	ldr	r2, [pc, #172]	; (8002808 <interpretaComando+0x228>)
 800275a:	5cd3      	ldrb	r3, [r2, r3]
 800275c:	2b7a      	cmp	r3, #122	; 0x7a
 800275e:	d132      	bne.n	80027c6 <interpretaComando+0x1e6>
				while(rx_buffer[i+1] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 8002760:	e00c      	b.n	800277c <interpretaComando+0x19c>
					auxString[j] = rx_buffer[i+1];
 8002762:	7bfb      	ldrb	r3, [r7, #15]
 8002764:	1c5a      	adds	r2, r3, #1
 8002766:	7bbb      	ldrb	r3, [r7, #14]
 8002768:	4927      	ldr	r1, [pc, #156]	; (8002808 <interpretaComando+0x228>)
 800276a:	5c89      	ldrb	r1, [r1, r2]
 800276c:	4a2a      	ldr	r2, [pc, #168]	; (8002818 <interpretaComando+0x238>)
 800276e:	54d1      	strb	r1, [r2, r3]
					j++;
 8002770:	7bbb      	ldrb	r3, [r7, #14]
 8002772:	3301      	adds	r3, #1
 8002774:	73bb      	strb	r3, [r7, #14]
					i++;
 8002776:	7bfb      	ldrb	r3, [r7, #15]
 8002778:	3301      	adds	r3, #1
 800277a:	73fb      	strb	r3, [r7, #15]
				while(rx_buffer[i+1] != ' '){			//Almacenar dato en buffer hasta que se encuentre un espacio
 800277c:	7bfb      	ldrb	r3, [r7, #15]
 800277e:	3301      	adds	r3, #1
 8002780:	4a21      	ldr	r2, [pc, #132]	; (8002808 <interpretaComando+0x228>)
 8002782:	5cd3      	ldrb	r3, [r2, r3]
 8002784:	2b20      	cmp	r3, #32
 8002786:	d1ec      	bne.n	8002762 <interpretaComando+0x182>
				Pfin.z = strtod(&auxString[0], NULL);
 8002788:	2100      	movs	r1, #0
 800278a:	4823      	ldr	r0, [pc, #140]	; (8002818 <interpretaComando+0x238>)
 800278c:	f00d f8b6 	bl	800f8fc <strtod>
 8002790:	eeb0 7b40 	vmov.f64	d7, d0
 8002794:	4b21      	ldr	r3, [pc, #132]	; (800281c <interpretaComando+0x23c>)
 8002796:	ed83 7b04 	vstr	d7, [r3, #16]
				for (int k = 0; k <= 10; k++) {
 800279a:	2300      	movs	r3, #0
 800279c:	603b      	str	r3, [r7, #0]
 800279e:	e007      	b.n	80027b0 <interpretaComando+0x1d0>
					auxString[k] = 0;
 80027a0:	4a1d      	ldr	r2, [pc, #116]	; (8002818 <interpretaComando+0x238>)
 80027a2:	683b      	ldr	r3, [r7, #0]
 80027a4:	4413      	add	r3, r2
 80027a6:	2200      	movs	r2, #0
 80027a8:	701a      	strb	r2, [r3, #0]
				for (int k = 0; k <= 10; k++) {
 80027aa:	683b      	ldr	r3, [r7, #0]
 80027ac:	3301      	adds	r3, #1
 80027ae:	603b      	str	r3, [r7, #0]
 80027b0:	683b      	ldr	r3, [r7, #0]
 80027b2:	2b0a      	cmp	r3, #10
 80027b4:	ddf4      	ble.n	80027a0 <interpretaComando+0x1c0>
				j=0;
 80027b6:	2300      	movs	r3, #0
 80027b8:	73bb      	strb	r3, [r7, #14]
				HAL_UART_Transmit(&huart3,(uint8_t *)"Pz_ok\n", 7, 100);
 80027ba:	2364      	movs	r3, #100	; 0x64
 80027bc:	2207      	movs	r2, #7
 80027be:	491b      	ldr	r1, [pc, #108]	; (800282c <interpretaComando+0x24c>)
 80027c0:	4818      	ldr	r0, [pc, #96]	; (8002824 <interpretaComando+0x244>)
 80027c2:	f009 ff7b 	bl	800c6bc <HAL_UART_Transmit>
			i++;
 80027c6:	7bfb      	ldrb	r3, [r7, #15]
 80027c8:	3301      	adds	r3, #1
 80027ca:	73fb      	strb	r3, [r7, #15]
		while(rx_buffer[i] != 0){
 80027cc:	7bfb      	ldrb	r3, [r7, #15]
 80027ce:	4a0e      	ldr	r2, [pc, #56]	; (8002808 <interpretaComando+0x228>)
 80027d0:	5cd3      	ldrb	r3, [r2, r3]
 80027d2:	2b00      	cmp	r3, #0
 80027d4:	f47f af4d 	bne.w	8002672 <interpretaComando+0x92>
		cinematicaInversa(Pfin);
 80027d8:	4b10      	ldr	r3, [pc, #64]	; (800281c <interpretaComando+0x23c>)
 80027da:	ed93 5b00 	vldr	d5, [r3]
 80027de:	ed93 6b02 	vldr	d6, [r3, #8]
 80027e2:	ed93 7b04 	vldr	d7, [r3, #16]
 80027e6:	eeb0 0b45 	vmov.f64	d0, d5
 80027ea:	eeb0 1b46 	vmov.f64	d1, d6
 80027ee:	eeb0 2b47 	vmov.f64	d2, d7
 80027f2:	f7fe fb81 	bl	8000ef8 <cinematicaInversa>
		break;
 80027f6:	bf00      	nop
}
 80027f8:	bf00      	nop
 80027fa:	3710      	adds	r7, #16
 80027fc:	46bd      	mov	sp, r7
 80027fe:	bd80      	pop	{r7, pc}
 8002800:	c2f837b5 	.word	0xc2f837b5
 8002804:	bfe0aa64 	.word	0xbfe0aa64
 8002808:	24000724 	.word	0x24000724
 800280c:	58020c00 	.word	0x58020c00
 8002810:	24000698 	.word	0x24000698
 8002814:	240007a0 	.word	0x240007a0
 8002818:	240003d8 	.word	0x240003d8
 800281c:	240006b0 	.word	0x240006b0
 8002820:	080122f8 	.word	0x080122f8
 8002824:	24000bfc 	.word	0x24000bfc
 8002828:	08012300 	.word	0x08012300
 800282c:	08012308 	.word	0x08012308

08002830 <jacobianoInverso>:
double cross_P2[3];
double cross_P3[3];
double dot[3];


void jacobianoInverso(double Vxaux, double Vyaux, double Vzaux, double Pxaux, double Pyaux, double Pzaux) {
 8002830:	b590      	push	{r4, r7, lr}
 8002832:	b0ad      	sub	sp, #180	; 0xb4
 8002834:	af00      	add	r7, sp, #0
 8002836:	ed87 0b1c 	vstr	d0, [r7, #112]	; 0x70
 800283a:	ed87 1b1a 	vstr	d1, [r7, #104]	; 0x68
 800283e:	ed87 2b18 	vstr	d2, [r7, #96]	; 0x60
 8002842:	ed87 3b16 	vstr	d3, [r7, #88]	; 0x58
 8002846:	ed87 4b14 	vstr	d4, [r7, #80]	; 0x50
 800284a:	ed87 5b12 	vstr	d5, [r7, #72]	; 0x48
	 * 	 Funcion que devuelve la velocidad angular de cada motor
	 *	 Entrada: Velocidad en (x,y,z) y Posicion en (x,y,z)
	 *	 Salida:  Velocidad angular en rad/s
	 	 -----------------------------------------------------------------------*/

	double Vaux[3] = { Vxaux, Vyaux, Vzaux };
 800284e:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	; 0x70
 8002852:	e9c7 231e 	strd	r2, r3, [r7, #120]	; 0x78
 8002856:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 800285a:	e9c7 2320 	strd	r2, r3, [r7, #128]	; 0x80
 800285e:	e9d7 2318 	ldrd	r2, r3, [r7, #96]	; 0x60
 8002862:	e9c7 2322 	strd	r2, r3, [r7, #136]	; 0x88

	E1[0] = Pxaux + 0;
 8002866:	ed97 7b16 	vldr	d7, [r7, #88]	; 0x58
 800286a:	ed9f 6bc3 	vldr	d6, [pc, #780]	; 8002b78 <jacobianoInverso+0x348>
 800286e:	ee37 7b06 	vadd.f64	d7, d7, d6
 8002872:	4bc9      	ldr	r3, [pc, #804]	; (8002b98 <jacobianoInverso+0x368>)
 8002874:	ed83 7b00 	vstr	d7, [r3]
	E1[1] = Pyaux - 0.07;
 8002878:	ed97 7b14 	vldr	d7, [r7, #80]	; 0x50
 800287c:	ed9f 6bc0 	vldr	d6, [pc, #768]	; 8002b80 <jacobianoInverso+0x350>
 8002880:	ee37 7b46 	vsub.f64	d7, d7, d6
 8002884:	4bc4      	ldr	r3, [pc, #784]	; (8002b98 <jacobianoInverso+0x368>)
 8002886:	ed83 7b02 	vstr	d7, [r3, #8]
	E1[2] = Pzaux;
 800288a:	49c3      	ldr	r1, [pc, #780]	; (8002b98 <jacobianoInverso+0x368>)
 800288c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8002890:	e9c1 2304 	strd	r2, r3, [r1, #16]

	E2[0] = Pxaux + 0.060621778264911;
 8002894:	ed97 7b16 	vldr	d7, [r7, #88]	; 0x58
 8002898:	ed9f 6bbb 	vldr	d6, [pc, #748]	; 8002b88 <jacobianoInverso+0x358>
 800289c:	ee37 7b06 	vadd.f64	d7, d7, d6
 80028a0:	4bbe      	ldr	r3, [pc, #760]	; (8002b9c <jacobianoInverso+0x36c>)
 80028a2:	ed83 7b00 	vstr	d7, [r3]
	E2[1] = Pyaux + 0.035;
 80028a6:	ed97 7b14 	vldr	d7, [r7, #80]	; 0x50
 80028aa:	ed9f 6bb9 	vldr	d6, [pc, #740]	; 8002b90 <jacobianoInverso+0x360>
 80028ae:	ee37 7b06 	vadd.f64	d7, d7, d6
 80028b2:	4bba      	ldr	r3, [pc, #744]	; (8002b9c <jacobianoInverso+0x36c>)
 80028b4:	ed83 7b02 	vstr	d7, [r3, #8]
	E2[2] = Pzaux;
 80028b8:	49b8      	ldr	r1, [pc, #736]	; (8002b9c <jacobianoInverso+0x36c>)
 80028ba:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80028be:	e9c1 2304 	strd	r2, r3, [r1, #16]

	E3[0] = Pxaux - 0.060621778264911;
 80028c2:	ed97 7b16 	vldr	d7, [r7, #88]	; 0x58
 80028c6:	ed9f 6bb0 	vldr	d6, [pc, #704]	; 8002b88 <jacobianoInverso+0x358>
 80028ca:	ee37 7b46 	vsub.f64	d7, d7, d6
 80028ce:	4bb4      	ldr	r3, [pc, #720]	; (8002ba0 <jacobianoInverso+0x370>)
 80028d0:	ed83 7b00 	vstr	d7, [r3]
	E3[1] = Pyaux + 0.035;
 80028d4:	ed97 7b14 	vldr	d7, [r7, #80]	; 0x50
 80028d8:	ed9f 6bad 	vldr	d6, [pc, #692]	; 8002b90 <jacobianoInverso+0x360>
 80028dc:	ee37 7b06 	vadd.f64	d7, d7, d6
 80028e0:	4baf      	ldr	r3, [pc, #700]	; (8002ba0 <jacobianoInverso+0x370>)
 80028e2:	ed83 7b02 	vstr	d7, [r3, #8]
	E3[2] = Pzaux;
 80028e6:	49ae      	ldr	r1, [pc, #696]	; (8002ba0 <jacobianoInverso+0x370>)
 80028e8:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80028ec:	e9c1 2304 	strd	r2, r3, [r1, #16]

	l1[0][0] = XJ1_1 - F1[0];//l11=[(XJ1(1)-F1(1,1));(YJ1(1)-F1(1,2));(ZJ1(1)-F1(1,3))];
 80028f0:	4bac      	ldr	r3, [pc, #688]	; (8002ba4 <jacobianoInverso+0x374>)
 80028f2:	ed93 6b00 	vldr	d6, [r3]
 80028f6:	4bac      	ldr	r3, [pc, #688]	; (8002ba8 <jacobianoInverso+0x378>)
 80028f8:	ed93 7b00 	vldr	d7, [r3]
 80028fc:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002900:	4baa      	ldr	r3, [pc, #680]	; (8002bac <jacobianoInverso+0x37c>)
 8002902:	ed83 7b00 	vstr	d7, [r3]
	l1[0][1] = YJ1_1 - F1[1];
 8002906:	4baa      	ldr	r3, [pc, #680]	; (8002bb0 <jacobianoInverso+0x380>)
 8002908:	ed93 6b00 	vldr	d6, [r3]
 800290c:	4ba6      	ldr	r3, [pc, #664]	; (8002ba8 <jacobianoInverso+0x378>)
 800290e:	ed93 7b02 	vldr	d7, [r3, #8]
 8002912:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002916:	4ba5      	ldr	r3, [pc, #660]	; (8002bac <jacobianoInverso+0x37c>)
 8002918:	ed83 7b02 	vstr	d7, [r3, #8]
	l1[0][2] = ZJ1_1 - F1[2];
 800291c:	4ba5      	ldr	r3, [pc, #660]	; (8002bb4 <jacobianoInverso+0x384>)
 800291e:	ed93 6b00 	vldr	d6, [r3]
 8002922:	4ba1      	ldr	r3, [pc, #644]	; (8002ba8 <jacobianoInverso+0x378>)
 8002924:	ed93 7b04 	vldr	d7, [r3, #16]
 8002928:	ee36 7b47 	vsub.f64	d7, d6, d7
 800292c:	4b9f      	ldr	r3, [pc, #636]	; (8002bac <jacobianoInverso+0x37c>)
 800292e:	ed83 7b04 	vstr	d7, [r3, #16]
	l1[1][0] = XJ2_1 - F2[0];//l12=[(XJ2(1)-F2(1,1));(YJ2(1)-F2(1,2));(ZJ2(1)-F2(1,3))];
 8002932:	4ba1      	ldr	r3, [pc, #644]	; (8002bb8 <jacobianoInverso+0x388>)
 8002934:	ed93 6b00 	vldr	d6, [r3]
 8002938:	4ba0      	ldr	r3, [pc, #640]	; (8002bbc <jacobianoInverso+0x38c>)
 800293a:	ed93 7b00 	vldr	d7, [r3]
 800293e:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002942:	4b9a      	ldr	r3, [pc, #616]	; (8002bac <jacobianoInverso+0x37c>)
 8002944:	ed83 7b06 	vstr	d7, [r3, #24]
	l1[1][1] = YJ2_1 - F2[1];
 8002948:	4b9d      	ldr	r3, [pc, #628]	; (8002bc0 <jacobianoInverso+0x390>)
 800294a:	ed93 6b00 	vldr	d6, [r3]
 800294e:	4b9b      	ldr	r3, [pc, #620]	; (8002bbc <jacobianoInverso+0x38c>)
 8002950:	ed93 7b02 	vldr	d7, [r3, #8]
 8002954:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002958:	4b94      	ldr	r3, [pc, #592]	; (8002bac <jacobianoInverso+0x37c>)
 800295a:	ed83 7b08 	vstr	d7, [r3, #32]
	l1[1][2] = ZJ2_1 - F2[2];
 800295e:	4b99      	ldr	r3, [pc, #612]	; (8002bc4 <jacobianoInverso+0x394>)
 8002960:	ed93 6b00 	vldr	d6, [r3]
 8002964:	4b95      	ldr	r3, [pc, #596]	; (8002bbc <jacobianoInverso+0x38c>)
 8002966:	ed93 7b04 	vldr	d7, [r3, #16]
 800296a:	ee36 7b47 	vsub.f64	d7, d6, d7
 800296e:	4b8f      	ldr	r3, [pc, #572]	; (8002bac <jacobianoInverso+0x37c>)
 8002970:	ed83 7b0a 	vstr	d7, [r3, #40]	; 0x28
	l1[2][0] = XJ3_1 - F3[0];//l13=[(XJ3(1)-F3(1,1));(YJ3(1)-F3(1,2));(ZJ3(1)-F3(1,3))];
 8002974:	4b94      	ldr	r3, [pc, #592]	; (8002bc8 <jacobianoInverso+0x398>)
 8002976:	ed93 6b00 	vldr	d6, [r3]
 800297a:	4b94      	ldr	r3, [pc, #592]	; (8002bcc <jacobianoInverso+0x39c>)
 800297c:	ed93 7b00 	vldr	d7, [r3]
 8002980:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002984:	4b89      	ldr	r3, [pc, #548]	; (8002bac <jacobianoInverso+0x37c>)
 8002986:	ed83 7b0c 	vstr	d7, [r3, #48]	; 0x30
	l1[2][1] = YJ3_1 - F3[1];
 800298a:	4b91      	ldr	r3, [pc, #580]	; (8002bd0 <jacobianoInverso+0x3a0>)
 800298c:	ed93 6b00 	vldr	d6, [r3]
 8002990:	4b8e      	ldr	r3, [pc, #568]	; (8002bcc <jacobianoInverso+0x39c>)
 8002992:	ed93 7b02 	vldr	d7, [r3, #8]
 8002996:	ee36 7b47 	vsub.f64	d7, d6, d7
 800299a:	4b84      	ldr	r3, [pc, #528]	; (8002bac <jacobianoInverso+0x37c>)
 800299c:	ed83 7b0e 	vstr	d7, [r3, #56]	; 0x38
	l1[2][2] = ZJ3_1 - F3[2];
 80029a0:	4b8c      	ldr	r3, [pc, #560]	; (8002bd4 <jacobianoInverso+0x3a4>)
 80029a2:	ed93 6b00 	vldr	d6, [r3]
 80029a6:	4b89      	ldr	r3, [pc, #548]	; (8002bcc <jacobianoInverso+0x39c>)
 80029a8:	ed93 7b04 	vldr	d7, [r3, #16]
 80029ac:	ee36 7b47 	vsub.f64	d7, d6, d7
 80029b0:	4b7e      	ldr	r3, [pc, #504]	; (8002bac <jacobianoInverso+0x37c>)
 80029b2:	ed83 7b10 	vstr	d7, [r3, #64]	; 0x40

	l2[0][0] = E1[0] - XJ1_1;//l21=[(E1(1,1)-XJ1(1));(E1(1,2)-YJ1(1));(E1(1,3)-ZJ1(1))];
 80029b6:	4b78      	ldr	r3, [pc, #480]	; (8002b98 <jacobianoInverso+0x368>)
 80029b8:	ed93 6b00 	vldr	d6, [r3]
 80029bc:	4b79      	ldr	r3, [pc, #484]	; (8002ba4 <jacobianoInverso+0x374>)
 80029be:	ed93 7b00 	vldr	d7, [r3]
 80029c2:	ee36 7b47 	vsub.f64	d7, d6, d7
 80029c6:	4b84      	ldr	r3, [pc, #528]	; (8002bd8 <jacobianoInverso+0x3a8>)
 80029c8:	ed83 7b00 	vstr	d7, [r3]
	l2[1][0] = E1[1] - YJ1_1;
 80029cc:	4b72      	ldr	r3, [pc, #456]	; (8002b98 <jacobianoInverso+0x368>)
 80029ce:	ed93 6b02 	vldr	d6, [r3, #8]
 80029d2:	4b77      	ldr	r3, [pc, #476]	; (8002bb0 <jacobianoInverso+0x380>)
 80029d4:	ed93 7b00 	vldr	d7, [r3]
 80029d8:	ee36 7b47 	vsub.f64	d7, d6, d7
 80029dc:	4b7e      	ldr	r3, [pc, #504]	; (8002bd8 <jacobianoInverso+0x3a8>)
 80029de:	ed83 7b06 	vstr	d7, [r3, #24]
	l2[2][0] = E1[2] - ZJ1_1;
 80029e2:	4b6d      	ldr	r3, [pc, #436]	; (8002b98 <jacobianoInverso+0x368>)
 80029e4:	ed93 6b04 	vldr	d6, [r3, #16]
 80029e8:	4b72      	ldr	r3, [pc, #456]	; (8002bb4 <jacobianoInverso+0x384>)
 80029ea:	ed93 7b00 	vldr	d7, [r3]
 80029ee:	ee36 7b47 	vsub.f64	d7, d6, d7
 80029f2:	4b79      	ldr	r3, [pc, #484]	; (8002bd8 <jacobianoInverso+0x3a8>)
 80029f4:	ed83 7b0c 	vstr	d7, [r3, #48]	; 0x30
	l2[0][1] = E2[0] - XJ2_1;//l22=[(E2(1,1)-XJ2(1));(E2(1,2)-YJ2(1));(E2(1,3)-ZJ2(1))];
 80029f8:	4b68      	ldr	r3, [pc, #416]	; (8002b9c <jacobianoInverso+0x36c>)
 80029fa:	ed93 6b00 	vldr	d6, [r3]
 80029fe:	4b6e      	ldr	r3, [pc, #440]	; (8002bb8 <jacobianoInverso+0x388>)
 8002a00:	ed93 7b00 	vldr	d7, [r3]
 8002a04:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002a08:	4b73      	ldr	r3, [pc, #460]	; (8002bd8 <jacobianoInverso+0x3a8>)
 8002a0a:	ed83 7b02 	vstr	d7, [r3, #8]
	l2[1][1] = E2[1] - YJ2_1;
 8002a0e:	4b63      	ldr	r3, [pc, #396]	; (8002b9c <jacobianoInverso+0x36c>)
 8002a10:	ed93 6b02 	vldr	d6, [r3, #8]
 8002a14:	4b6a      	ldr	r3, [pc, #424]	; (8002bc0 <jacobianoInverso+0x390>)
 8002a16:	ed93 7b00 	vldr	d7, [r3]
 8002a1a:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002a1e:	4b6e      	ldr	r3, [pc, #440]	; (8002bd8 <jacobianoInverso+0x3a8>)
 8002a20:	ed83 7b08 	vstr	d7, [r3, #32]
	l2[2][1] = E2[2] - ZJ2_1;
 8002a24:	4b5d      	ldr	r3, [pc, #372]	; (8002b9c <jacobianoInverso+0x36c>)
 8002a26:	ed93 6b04 	vldr	d6, [r3, #16]
 8002a2a:	4b66      	ldr	r3, [pc, #408]	; (8002bc4 <jacobianoInverso+0x394>)
 8002a2c:	ed93 7b00 	vldr	d7, [r3]
 8002a30:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002a34:	4b68      	ldr	r3, [pc, #416]	; (8002bd8 <jacobianoInverso+0x3a8>)
 8002a36:	ed83 7b0e 	vstr	d7, [r3, #56]	; 0x38
	l2[0][2] = E3[0] - XJ3_1;//l23=[(E3(1,1)-XJ3(1));(E3(1,2)-YJ3(1));(E3(1,3)-ZJ3(1))];
 8002a3a:	4b59      	ldr	r3, [pc, #356]	; (8002ba0 <jacobianoInverso+0x370>)
 8002a3c:	ed93 6b00 	vldr	d6, [r3]
 8002a40:	4b61      	ldr	r3, [pc, #388]	; (8002bc8 <jacobianoInverso+0x398>)
 8002a42:	ed93 7b00 	vldr	d7, [r3]
 8002a46:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002a4a:	4b63      	ldr	r3, [pc, #396]	; (8002bd8 <jacobianoInverso+0x3a8>)
 8002a4c:	ed83 7b04 	vstr	d7, [r3, #16]
	l2[1][2] = E3[1] - YJ3_1;
 8002a50:	4b53      	ldr	r3, [pc, #332]	; (8002ba0 <jacobianoInverso+0x370>)
 8002a52:	ed93 6b02 	vldr	d6, [r3, #8]
 8002a56:	4b5e      	ldr	r3, [pc, #376]	; (8002bd0 <jacobianoInverso+0x3a0>)
 8002a58:	ed93 7b00 	vldr	d7, [r3]
 8002a5c:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002a60:	4b5d      	ldr	r3, [pc, #372]	; (8002bd8 <jacobianoInverso+0x3a8>)
 8002a62:	ed83 7b0a 	vstr	d7, [r3, #40]	; 0x28
	l2[2][2] = E3[2] - ZJ3_1;
 8002a66:	4b4e      	ldr	r3, [pc, #312]	; (8002ba0 <jacobianoInverso+0x370>)
 8002a68:	ed93 6b04 	vldr	d6, [r3, #16]
 8002a6c:	4b59      	ldr	r3, [pc, #356]	; (8002bd4 <jacobianoInverso+0x3a4>)
 8002a6e:	ed93 7b00 	vldr	d7, [r3]
 8002a72:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002a76:	4b58      	ldr	r3, [pc, #352]	; (8002bd8 <jacobianoInverso+0x3a8>)
 8002a78:	ed83 7b10 	vstr	d7, [r3, #64]	; 0x40

	Jcd = transpuesta(l2);				//Jacobiano de la cinematica directa
 8002a7c:	4c57      	ldr	r4, [pc, #348]	; (8002bdc <jacobianoInverso+0x3ac>)
 8002a7e:	463b      	mov	r3, r7
 8002a80:	4955      	ldr	r1, [pc, #340]	; (8002bd8 <jacobianoInverso+0x3a8>)
 8002a82:	4618      	mov	r0, r3
 8002a84:	f7fd fffa 	bl	8000a7c <transpuesta>
 8002a88:	4620      	mov	r0, r4
 8002a8a:	463b      	mov	r3, r7
 8002a8c:	2248      	movs	r2, #72	; 0x48
 8002a8e:	4619      	mov	r1, r3
 8002a90:	f00c f94c 	bl	800ed2c <memcpy>

	cross_P1[0] = SA1[1] * l1[0][2] - SA1[2] * l1[0][1];//Producto Cruz entre vectores
 8002a94:	4b52      	ldr	r3, [pc, #328]	; (8002be0 <jacobianoInverso+0x3b0>)
 8002a96:	ed93 6b02 	vldr	d6, [r3, #8]
 8002a9a:	4b44      	ldr	r3, [pc, #272]	; (8002bac <jacobianoInverso+0x37c>)
 8002a9c:	ed93 7b04 	vldr	d7, [r3, #16]
 8002aa0:	ee26 6b07 	vmul.f64	d6, d6, d7
 8002aa4:	4b4e      	ldr	r3, [pc, #312]	; (8002be0 <jacobianoInverso+0x3b0>)
 8002aa6:	ed93 5b04 	vldr	d5, [r3, #16]
 8002aaa:	4b40      	ldr	r3, [pc, #256]	; (8002bac <jacobianoInverso+0x37c>)
 8002aac:	ed93 7b02 	vldr	d7, [r3, #8]
 8002ab0:	ee25 7b07 	vmul.f64	d7, d5, d7
 8002ab4:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002ab8:	4b4a      	ldr	r3, [pc, #296]	; (8002be4 <jacobianoInverso+0x3b4>)
 8002aba:	ed83 7b00 	vstr	d7, [r3]
	cross_P1[1] = SA1[2] * l1[0][0] - SA1[0] * l1[0][2];
 8002abe:	4b48      	ldr	r3, [pc, #288]	; (8002be0 <jacobianoInverso+0x3b0>)
 8002ac0:	ed93 6b04 	vldr	d6, [r3, #16]
 8002ac4:	4b39      	ldr	r3, [pc, #228]	; (8002bac <jacobianoInverso+0x37c>)
 8002ac6:	ed93 7b00 	vldr	d7, [r3]
 8002aca:	ee26 6b07 	vmul.f64	d6, d6, d7
 8002ace:	4b44      	ldr	r3, [pc, #272]	; (8002be0 <jacobianoInverso+0x3b0>)
 8002ad0:	ed93 5b00 	vldr	d5, [r3]
 8002ad4:	4b35      	ldr	r3, [pc, #212]	; (8002bac <jacobianoInverso+0x37c>)
 8002ad6:	ed93 7b04 	vldr	d7, [r3, #16]
 8002ada:	ee25 7b07 	vmul.f64	d7, d5, d7
 8002ade:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002ae2:	4b40      	ldr	r3, [pc, #256]	; (8002be4 <jacobianoInverso+0x3b4>)
 8002ae4:	ed83 7b02 	vstr	d7, [r3, #8]
	cross_P1[2] = SA1[0] * l1[0][1] - SA1[1] * l1[0][0];
 8002ae8:	4b3d      	ldr	r3, [pc, #244]	; (8002be0 <jacobianoInverso+0x3b0>)
 8002aea:	ed93 6b00 	vldr	d6, [r3]
 8002aee:	4b2f      	ldr	r3, [pc, #188]	; (8002bac <jacobianoInverso+0x37c>)
 8002af0:	ed93 7b02 	vldr	d7, [r3, #8]
 8002af4:	ee26 6b07 	vmul.f64	d6, d6, d7
 8002af8:	4b39      	ldr	r3, [pc, #228]	; (8002be0 <jacobianoInverso+0x3b0>)
 8002afa:	ed93 5b02 	vldr	d5, [r3, #8]
 8002afe:	4b2b      	ldr	r3, [pc, #172]	; (8002bac <jacobianoInverso+0x37c>)
 8002b00:	ed93 7b00 	vldr	d7, [r3]
 8002b04:	ee25 7b07 	vmul.f64	d7, d5, d7
 8002b08:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002b0c:	4b35      	ldr	r3, [pc, #212]	; (8002be4 <jacobianoInverso+0x3b4>)
 8002b0e:	ed83 7b04 	vstr	d7, [r3, #16]

	cross_P2[0] = SA2[1] * l1[1][2] - SA2[2] * l1[1][1];//vect_A[1] * vect_B[2] - vect_A[2] * vect_B[1]
 8002b12:	4b35      	ldr	r3, [pc, #212]	; (8002be8 <jacobianoInverso+0x3b8>)
 8002b14:	ed93 6b02 	vldr	d6, [r3, #8]
 8002b18:	4b24      	ldr	r3, [pc, #144]	; (8002bac <jacobianoInverso+0x37c>)
 8002b1a:	ed93 7b0a 	vldr	d7, [r3, #40]	; 0x28
 8002b1e:	ee26 6b07 	vmul.f64	d6, d6, d7
 8002b22:	4b31      	ldr	r3, [pc, #196]	; (8002be8 <jacobianoInverso+0x3b8>)
 8002b24:	ed93 5b04 	vldr	d5, [r3, #16]
 8002b28:	4b20      	ldr	r3, [pc, #128]	; (8002bac <jacobianoInverso+0x37c>)
 8002b2a:	ed93 7b08 	vldr	d7, [r3, #32]
 8002b2e:	ee25 7b07 	vmul.f64	d7, d5, d7
 8002b32:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002b36:	4b2d      	ldr	r3, [pc, #180]	; (8002bec <jacobianoInverso+0x3bc>)
 8002b38:	ed83 7b00 	vstr	d7, [r3]
	cross_P2[1] = SA2[2] * l1[1][0] - SA2[0] * l1[1][2];//vect_A[2] * vect_B[0] - vect_A[0] * vect_B[2]
 8002b3c:	4b2a      	ldr	r3, [pc, #168]	; (8002be8 <jacobianoInverso+0x3b8>)
 8002b3e:	ed93 6b04 	vldr	d6, [r3, #16]
 8002b42:	4b1a      	ldr	r3, [pc, #104]	; (8002bac <jacobianoInverso+0x37c>)
 8002b44:	ed93 7b06 	vldr	d7, [r3, #24]
 8002b48:	ee26 6b07 	vmul.f64	d6, d6, d7
 8002b4c:	4b26      	ldr	r3, [pc, #152]	; (8002be8 <jacobianoInverso+0x3b8>)
 8002b4e:	ed93 5b00 	vldr	d5, [r3]
 8002b52:	4b16      	ldr	r3, [pc, #88]	; (8002bac <jacobianoInverso+0x37c>)
 8002b54:	ed93 7b0a 	vldr	d7, [r3, #40]	; 0x28
 8002b58:	ee25 7b07 	vmul.f64	d7, d5, d7
 8002b5c:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002b60:	4b22      	ldr	r3, [pc, #136]	; (8002bec <jacobianoInverso+0x3bc>)
 8002b62:	ed83 7b02 	vstr	d7, [r3, #8]
	cross_P2[2] = SA2[0] * l1[1][1] - SA2[1] * l1[1][0];//vect_A[0] * vect_B[1] - vect_A[1] * vect_B[0]
 8002b66:	4b20      	ldr	r3, [pc, #128]	; (8002be8 <jacobianoInverso+0x3b8>)
 8002b68:	ed93 6b00 	vldr	d6, [r3]
 8002b6c:	4b0f      	ldr	r3, [pc, #60]	; (8002bac <jacobianoInverso+0x37c>)
 8002b6e:	ed93 7b08 	vldr	d7, [r3, #32]
 8002b72:	ee26 6b07 	vmul.f64	d6, d6, d7
 8002b76:	e03b      	b.n	8002bf0 <jacobianoInverso+0x3c0>
	...
 8002b80:	1eb851ec 	.word	0x1eb851ec
 8002b84:	3fb1eb85 	.word	0x3fb1eb85
 8002b88:	562574c0 	.word	0x562574c0
 8002b8c:	3faf09d1 	.word	0x3faf09d1
 8002b90:	1eb851ec 	.word	0x1eb851ec
 8002b94:	3fa1eb85 	.word	0x3fa1eb85
 8002b98:	240003e8 	.word	0x240003e8
 8002b9c:	24000400 	.word	0x24000400
 8002ba0:	24000418 	.word	0x24000418
 8002ba4:	24000310 	.word	0x24000310
 8002ba8:	24000008 	.word	0x24000008
 8002bac:	24000430 	.word	0x24000430
 8002bb0:	24000320 	.word	0x24000320
 8002bb4:	24000330 	.word	0x24000330
 8002bb8:	24000358 	.word	0x24000358
 8002bbc:	24000020 	.word	0x24000020
 8002bc0:	24000368 	.word	0x24000368
 8002bc4:	24000378 	.word	0x24000378
 8002bc8:	240003a0 	.word	0x240003a0
 8002bcc:	24000038 	.word	0x24000038
 8002bd0:	240003b0 	.word	0x240003b0
 8002bd4:	240003c0 	.word	0x240003c0
 8002bd8:	24000478 	.word	0x24000478
 8002bdc:	240004c0 	.word	0x240004c0
 8002be0:	24000050 	.word	0x24000050
 8002be4:	240005e0 	.word	0x240005e0
 8002be8:	24000068 	.word	0x24000068
 8002bec:	240005f8 	.word	0x240005f8
 8002bf0:	4b92      	ldr	r3, [pc, #584]	; (8002e3c <jacobianoInverso+0x60c>)
 8002bf2:	ed93 5b02 	vldr	d5, [r3, #8]
 8002bf6:	4b92      	ldr	r3, [pc, #584]	; (8002e40 <jacobianoInverso+0x610>)
 8002bf8:	ed93 7b06 	vldr	d7, [r3, #24]
 8002bfc:	ee25 7b07 	vmul.f64	d7, d5, d7
 8002c00:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002c04:	4b8f      	ldr	r3, [pc, #572]	; (8002e44 <jacobianoInverso+0x614>)
 8002c06:	ed83 7b04 	vstr	d7, [r3, #16]

	cross_P3[0] = SA3[1] * l1[2][2] - SA3[2] * l1[2][1];
 8002c0a:	4b8f      	ldr	r3, [pc, #572]	; (8002e48 <jacobianoInverso+0x618>)
 8002c0c:	ed93 6b02 	vldr	d6, [r3, #8]
 8002c10:	4b8b      	ldr	r3, [pc, #556]	; (8002e40 <jacobianoInverso+0x610>)
 8002c12:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 8002c16:	ee26 6b07 	vmul.f64	d6, d6, d7
 8002c1a:	4b8b      	ldr	r3, [pc, #556]	; (8002e48 <jacobianoInverso+0x618>)
 8002c1c:	ed93 5b04 	vldr	d5, [r3, #16]
 8002c20:	4b87      	ldr	r3, [pc, #540]	; (8002e40 <jacobianoInverso+0x610>)
 8002c22:	ed93 7b0e 	vldr	d7, [r3, #56]	; 0x38
 8002c26:	ee25 7b07 	vmul.f64	d7, d5, d7
 8002c2a:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002c2e:	4b87      	ldr	r3, [pc, #540]	; (8002e4c <jacobianoInverso+0x61c>)
 8002c30:	ed83 7b00 	vstr	d7, [r3]
	cross_P3[1] = SA3[2] * l1[2][0] - SA3[0] * l1[2][2];
 8002c34:	4b84      	ldr	r3, [pc, #528]	; (8002e48 <jacobianoInverso+0x618>)
 8002c36:	ed93 6b04 	vldr	d6, [r3, #16]
 8002c3a:	4b81      	ldr	r3, [pc, #516]	; (8002e40 <jacobianoInverso+0x610>)
 8002c3c:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 8002c40:	ee26 6b07 	vmul.f64	d6, d6, d7
 8002c44:	4b80      	ldr	r3, [pc, #512]	; (8002e48 <jacobianoInverso+0x618>)
 8002c46:	ed93 5b00 	vldr	d5, [r3]
 8002c4a:	4b7d      	ldr	r3, [pc, #500]	; (8002e40 <jacobianoInverso+0x610>)
 8002c4c:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 8002c50:	ee25 7b07 	vmul.f64	d7, d5, d7
 8002c54:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002c58:	4b7c      	ldr	r3, [pc, #496]	; (8002e4c <jacobianoInverso+0x61c>)
 8002c5a:	ed83 7b02 	vstr	d7, [r3, #8]
	cross_P3[2] = SA3[0] * l1[2][1] - SA3[1] * l1[2][0];
 8002c5e:	4b7a      	ldr	r3, [pc, #488]	; (8002e48 <jacobianoInverso+0x618>)
 8002c60:	ed93 6b00 	vldr	d6, [r3]
 8002c64:	4b76      	ldr	r3, [pc, #472]	; (8002e40 <jacobianoInverso+0x610>)
 8002c66:	ed93 7b0e 	vldr	d7, [r3, #56]	; 0x38
 8002c6a:	ee26 6b07 	vmul.f64	d6, d6, d7
 8002c6e:	4b76      	ldr	r3, [pc, #472]	; (8002e48 <jacobianoInverso+0x618>)
 8002c70:	ed93 5b02 	vldr	d5, [r3, #8]
 8002c74:	4b72      	ldr	r3, [pc, #456]	; (8002e40 <jacobianoInverso+0x610>)
 8002c76:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 8002c7a:	ee25 7b07 	vmul.f64	d7, d5, d7
 8002c7e:	ee36 7b47 	vsub.f64	d7, d6, d7
 8002c82:	4b72      	ldr	r3, [pc, #456]	; (8002e4c <jacobianoInverso+0x61c>)
 8002c84:	ed83 7b04 	vstr	d7, [r3, #16]

	dot[0] = productDot(cross_P1, Jcd.m[0]);			//Producto Punto
 8002c88:	4971      	ldr	r1, [pc, #452]	; (8002e50 <jacobianoInverso+0x620>)
 8002c8a:	4872      	ldr	r0, [pc, #456]	; (8002e54 <jacobianoInverso+0x624>)
 8002c8c:	f7fd ff32 	bl	8000af4 <productDot>
 8002c90:	eeb0 7b40 	vmov.f64	d7, d0
 8002c94:	4b70      	ldr	r3, [pc, #448]	; (8002e58 <jacobianoInverso+0x628>)
 8002c96:	ed83 7b00 	vstr	d7, [r3]
	dot[1] = productDot(cross_P2, Jcd.m[1]);
 8002c9a:	4970      	ldr	r1, [pc, #448]	; (8002e5c <jacobianoInverso+0x62c>)
 8002c9c:	4869      	ldr	r0, [pc, #420]	; (8002e44 <jacobianoInverso+0x614>)
 8002c9e:	f7fd ff29 	bl	8000af4 <productDot>
 8002ca2:	eeb0 7b40 	vmov.f64	d7, d0
 8002ca6:	4b6c      	ldr	r3, [pc, #432]	; (8002e58 <jacobianoInverso+0x628>)
 8002ca8:	ed83 7b02 	vstr	d7, [r3, #8]
	dot[2] = productDot(cross_P3, Jcd.m[2]);
 8002cac:	496c      	ldr	r1, [pc, #432]	; (8002e60 <jacobianoInverso+0x630>)
 8002cae:	4867      	ldr	r0, [pc, #412]	; (8002e4c <jacobianoInverso+0x61c>)
 8002cb0:	f7fd ff20 	bl	8000af4 <productDot>
 8002cb4:	eeb0 7b40 	vmov.f64	d7, d0
 8002cb8:	4b67      	ldr	r3, [pc, #412]	; (8002e58 <jacobianoInverso+0x628>)
 8002cba:	ed83 7b04 	vstr	d7, [r3, #16]

	for (int i = 0; i < 3; ++i) {			//Jacobiano de la cinematica inversa
 8002cbe:	2300      	movs	r3, #0
 8002cc0:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8002cc4:	e03d      	b.n	8002d42 <jacobianoInverso+0x512>
		for (int j = 0; j < 3; ++j) {
 8002cc6:	2300      	movs	r3, #0
 8002cc8:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8002ccc:	e030      	b.n	8002d30 <jacobianoInverso+0x500>
			if (i == j) {
 8002cce:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8002cd2:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8002cd6:	429a      	cmp	r2, r3
 8002cd8:	d114      	bne.n	8002d04 <jacobianoInverso+0x4d4>
				Jci[i][j] = dot[i];
 8002cda:	4a5f      	ldr	r2, [pc, #380]	; (8002e58 <jacobianoInverso+0x628>)
 8002cdc:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002ce0:	00db      	lsls	r3, r3, #3
 8002ce2:	4413      	add	r3, r2
 8002ce4:	e9d3 0100 	ldrd	r0, r1, [r3]
 8002ce8:	4c5e      	ldr	r4, [pc, #376]	; (8002e64 <jacobianoInverso+0x634>)
 8002cea:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8002cee:	4613      	mov	r3, r2
 8002cf0:	005b      	lsls	r3, r3, #1
 8002cf2:	4413      	add	r3, r2
 8002cf4:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8002cf8:	4413      	add	r3, r2
 8002cfa:	00db      	lsls	r3, r3, #3
 8002cfc:	4423      	add	r3, r4
 8002cfe:	e9c3 0100 	strd	r0, r1, [r3]
 8002d02:	e010      	b.n	8002d26 <jacobianoInverso+0x4f6>
			} else {
				Jci[i][j] = 0;
 8002d04:	4957      	ldr	r1, [pc, #348]	; (8002e64 <jacobianoInverso+0x634>)
 8002d06:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8002d0a:	4613      	mov	r3, r2
 8002d0c:	005b      	lsls	r3, r3, #1
 8002d0e:	4413      	add	r3, r2
 8002d10:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8002d14:	4413      	add	r3, r2
 8002d16:	00db      	lsls	r3, r3, #3
 8002d18:	4419      	add	r1, r3
 8002d1a:	f04f 0200 	mov.w	r2, #0
 8002d1e:	f04f 0300 	mov.w	r3, #0
 8002d22:	e9c1 2300 	strd	r2, r3, [r1]
		for (int j = 0; j < 3; ++j) {
 8002d26:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8002d2a:	3301      	adds	r3, #1
 8002d2c:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8002d30:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8002d34:	2b02      	cmp	r3, #2
 8002d36:	ddca      	ble.n	8002cce <jacobianoInverso+0x49e>
	for (int i = 0; i < 3; ++i) {			//Jacobiano de la cinematica inversa
 8002d38:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002d3c:	3301      	adds	r3, #1
 8002d3e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8002d42:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002d46:	2b02      	cmp	r3, #2
 8002d48:	ddbd      	ble.n	8002cc6 <jacobianoInverso+0x496>
			}
		}
	}

	Jci_inv = inversa(Jci);
 8002d4a:	4c47      	ldr	r4, [pc, #284]	; (8002e68 <jacobianoInverso+0x638>)
 8002d4c:	463b      	mov	r3, r7
 8002d4e:	4945      	ldr	r1, [pc, #276]	; (8002e64 <jacobianoInverso+0x634>)
 8002d50:	4618      	mov	r0, r3
 8002d52:	f7fd ffff 	bl	8000d54 <inversa>
 8002d56:	4620      	mov	r0, r4
 8002d58:	463b      	mov	r3, r7
 8002d5a:	2248      	movs	r2, #72	; 0x48
 8002d5c:	4619      	mov	r1, r3
 8002d5e:	f00b ffe5 	bl	800ed2c <memcpy>
	Jinv = productMatriz(Jcd.m,Jci_inv.m);	//Jacobiano Inverso
 8002d62:	4c42      	ldr	r4, [pc, #264]	; (8002e6c <jacobianoInverso+0x63c>)
 8002d64:	463b      	mov	r3, r7
 8002d66:	4a40      	ldr	r2, [pc, #256]	; (8002e68 <jacobianoInverso+0x638>)
 8002d68:	4939      	ldr	r1, [pc, #228]	; (8002e50 <jacobianoInverso+0x620>)
 8002d6a:	4618      	mov	r0, r3
 8002d6c:	f7fe f860 	bl	8000e30 <productMatriz>
 8002d70:	4620      	mov	r0, r4
 8002d72:	463b      	mov	r3, r7
 8002d74:	2248      	movs	r2, #72	; 0x48
 8002d76:	4619      	mov	r1, r3
 8002d78:	f00b ffd8 	bl	800ed2c <memcpy>

	for (int i = 0; i < 3; ++i) {
 8002d7c:	2300      	movs	r3, #0
 8002d7e:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8002d82:	e041      	b.n	8002e08 <jacobianoInverso+0x5d8>
		double sum = 0;
 8002d84:	f04f 0200 	mov.w	r2, #0
 8002d88:	f04f 0300 	mov.w	r3, #0
 8002d8c:	e9c7 2326 	strd	r2, r3, [r7, #152]	; 0x98
		for (int j = 0; j < 3; ++j) {
 8002d90:	2300      	movs	r3, #0
 8002d92:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8002d96:	e025      	b.n	8002de4 <jacobianoInverso+0x5b4>
			sum += sum + Jinv.m[i][j] * Vaux[j];
 8002d98:	4934      	ldr	r1, [pc, #208]	; (8002e6c <jacobianoInverso+0x63c>)
 8002d9a:	f8d7 20a4 	ldr.w	r2, [r7, #164]	; 0xa4
 8002d9e:	4613      	mov	r3, r2
 8002da0:	005b      	lsls	r3, r3, #1
 8002da2:	4413      	add	r3, r2
 8002da4:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8002da8:	4413      	add	r3, r2
 8002daa:	00db      	lsls	r3, r3, #3
 8002dac:	440b      	add	r3, r1
 8002dae:	ed93 6b00 	vldr	d6, [r3]
 8002db2:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8002db6:	00db      	lsls	r3, r3, #3
 8002db8:	33b0      	adds	r3, #176	; 0xb0
 8002dba:	443b      	add	r3, r7
 8002dbc:	3b38      	subs	r3, #56	; 0x38
 8002dbe:	ed93 7b00 	vldr	d7, [r3]
 8002dc2:	ee26 6b07 	vmul.f64	d6, d6, d7
 8002dc6:	ed97 7b26 	vldr	d7, [r7, #152]	; 0x98
 8002dca:	ee36 7b07 	vadd.f64	d7, d6, d7
 8002dce:	ed97 6b26 	vldr	d6, [r7, #152]	; 0x98
 8002dd2:	ee36 7b07 	vadd.f64	d7, d6, d7
 8002dd6:	ed87 7b26 	vstr	d7, [r7, #152]	; 0x98
		for (int j = 0; j < 3; ++j) {
 8002dda:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8002dde:	3301      	adds	r3, #1
 8002de0:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8002de4:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8002de8:	2b02      	cmp	r3, #2
 8002dea:	ddd5      	ble.n	8002d98 <jacobianoInverso+0x568>
		}
		omega[i] = sum;
 8002dec:	4a20      	ldr	r2, [pc, #128]	; (8002e70 <jacobianoInverso+0x640>)
 8002dee:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8002df2:	00db      	lsls	r3, r3, #3
 8002df4:	18d1      	adds	r1, r2, r3
 8002df6:	e9d7 2326 	ldrd	r2, r3, [r7, #152]	; 0x98
 8002dfa:	e9c1 2300 	strd	r2, r3, [r1]
	for (int i = 0; i < 3; ++i) {
 8002dfe:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8002e02:	3301      	adds	r3, #1
 8002e04:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8002e08:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8002e0c:	2b02      	cmp	r3, #2
 8002e0e:	ddb9      	ble.n	8002d84 <jacobianoInverso+0x554>
	}
	omega1 = omega[0];
 8002e10:	4b17      	ldr	r3, [pc, #92]	; (8002e70 <jacobianoInverso+0x640>)
 8002e12:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e16:	4917      	ldr	r1, [pc, #92]	; (8002e74 <jacobianoInverso+0x644>)
 8002e18:	e9c1 2300 	strd	r2, r3, [r1]
	omega2 = omega[1];
 8002e1c:	4b14      	ldr	r3, [pc, #80]	; (8002e70 <jacobianoInverso+0x640>)
 8002e1e:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8002e22:	4915      	ldr	r1, [pc, #84]	; (8002e78 <jacobianoInverso+0x648>)
 8002e24:	e9c1 2300 	strd	r2, r3, [r1]
	omega3 = omega[2];
 8002e28:	4b11      	ldr	r3, [pc, #68]	; (8002e70 <jacobianoInverso+0x640>)
 8002e2a:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 8002e2e:	4913      	ldr	r1, [pc, #76]	; (8002e7c <jacobianoInverso+0x64c>)
 8002e30:	e9c1 2300 	strd	r2, r3, [r1]

}
 8002e34:	bf00      	nop
 8002e36:	37b4      	adds	r7, #180	; 0xb4
 8002e38:	46bd      	mov	sp, r7
 8002e3a:	bd90      	pop	{r4, r7, pc}
 8002e3c:	24000068 	.word	0x24000068
 8002e40:	24000430 	.word	0x24000430
 8002e44:	240005f8 	.word	0x240005f8
 8002e48:	24000080 	.word	0x24000080
 8002e4c:	24000610 	.word	0x24000610
 8002e50:	240004c0 	.word	0x240004c0
 8002e54:	240005e0 	.word	0x240005e0
 8002e58:	24000628 	.word	0x24000628
 8002e5c:	240004d8 	.word	0x240004d8
 8002e60:	240004f0 	.word	0x240004f0
 8002e64:	24000508 	.word	0x24000508
 8002e68:	24000550 	.word	0x24000550
 8002e6c:	24000598 	.word	0x24000598
 8002e70:	24000708 	.word	0x24000708
 8002e74:	24000760 	.word	0x24000760
 8002e78:	24000768 	.word	0x24000768
 8002e7c:	24000770 	.word	0x24000770

08002e80 <robotInitialization>:
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

void robotInitialization(void){
 8002e80:	b580      	push	{r7, lr}
 8002e82:	b082      	sub	sp, #8
 8002e84:	af00      	add	r7, sp, #0
	* habilatamos los drivers al momento de lanzar el programa para que los motores se bloqueen. Se procedera
	* a darles una consigna pequeña de posicion en direccion horario para que los eslabones no entren en la
	* singularidad de los 90º */


	double rpm = 2.0;
 8002e86:	f04f 0200 	mov.w	r2, #0
 8002e8a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8002e8e:	e9c7 2300 	strd	r2, r3, [r7]

	HAL_TIM_Base_Start(&htim12);
 8002e92:	4887      	ldr	r0, [pc, #540]	; (80030b0 <robotInitialization+0x230>)
 8002e94:	f007 fc1e 	bl	800a6d4 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(&htim13);
 8002e98:	4886      	ldr	r0, [pc, #536]	; (80030b4 <robotInitialization+0x234>)
 8002e9a:	f007 fc1b 	bl	800a6d4 <HAL_TIM_Base_Start>
	HAL_TIM_Base_Start(&htim14);
 8002e9e:	4886      	ldr	r0, [pc, #536]	; (80030b8 <robotInitialization+0x238>)
 8002ea0:	f007 fc18 	bl	800a6d4 <HAL_TIM_Base_Start>

	HAL_TIM_IC_Start_IT(&htim2, TIM_CHANNEL_1);	//Enciendo interrupcion input capture motor 1
 8002ea4:	2100      	movs	r1, #0
 8002ea6:	4885      	ldr	r0, [pc, #532]	; (80030bc <robotInitialization+0x23c>)
 8002ea8:	f007 ffba 	bl	800ae20 <HAL_TIM_IC_Start_IT>
	HAL_TIM_IC_Start_IT(&htim3, TIM_CHANNEL_1);	//Enciendo interrupcion input capture motor 2
 8002eac:	2100      	movs	r1, #0
 8002eae:	4884      	ldr	r0, [pc, #528]	; (80030c0 <robotInitialization+0x240>)
 8002eb0:	f007 ffb6 	bl	800ae20 <HAL_TIM_IC_Start_IT>
	HAL_TIM_IC_Start_IT(&htim4, TIM_CHANNEL_1);	//Enciendo interrupcion input capture motor 3
 8002eb4:	2100      	movs	r1, #0
 8002eb6:	4883      	ldr	r0, [pc, #524]	; (80030c4 <robotInitialization+0x244>)
 8002eb8:	f007 ffb2 	bl	800ae20 <HAL_TIM_IC_Start_IT>

	HAL_GPIO_WritePin(S_Enable_1_GPIO_Port, S_Enable_1_Pin, GPIO_PIN_RESET);
 8002ebc:	2200      	movs	r2, #0
 8002ebe:	2110      	movs	r1, #16
 8002ec0:	4881      	ldr	r0, [pc, #516]	; (80030c8 <robotInitialization+0x248>)
 8002ec2:	f005 f81f 	bl	8007f04 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(S_Enable_2_GPIO_Port, S_Enable_2_Pin, GPIO_PIN_RESET);
 8002ec6:	2200      	movs	r2, #0
 8002ec8:	2120      	movs	r1, #32
 8002eca:	487f      	ldr	r0, [pc, #508]	; (80030c8 <robotInitialization+0x248>)
 8002ecc:	f005 f81a 	bl	8007f04 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(S_Enable_3_GPIO_Port, S_Enable_3_Pin, GPIO_PIN_RESET);
 8002ed0:	2200      	movs	r2, #0
 8002ed2:	2140      	movs	r1, #64	; 0x40
 8002ed4:	487c      	ldr	r0, [pc, #496]	; (80030c8 <robotInitialization+0x248>)
 8002ed6:	f005 f815 	bl	8007f04 <HAL_GPIO_WritePin>

	HAL_Delay(50); //50 ms es el tiempo que la señal ENABLE en cambiar de estado
 8002eda:	2032      	movs	r0, #50	; 0x32
 8002edc:	f003 ff74 	bl	8006dc8 <HAL_Delay>

	HAL_GPIO_WritePin(S_DirPaP1_GPIO_Port, S_DirPaP1_Pin, GPIO_PIN_RESET); // Se estable la direccion antihorario por defecto
 8002ee0:	2200      	movs	r2, #0
 8002ee2:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002ee6:	4879      	ldr	r0, [pc, #484]	; (80030cc <robotInitialization+0x24c>)
 8002ee8:	f005 f80c 	bl	8007f04 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(S_DirPaP2_GPIO_Port, S_DirPaP2_Pin, GPIO_PIN_RESET); // Se estable la direccion antihorario por defecto
 8002eec:	2200      	movs	r2, #0
 8002eee:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002ef2:	4876      	ldr	r0, [pc, #472]	; (80030cc <robotInitialization+0x24c>)
 8002ef4:	f005 f806 	bl	8007f04 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(S_DirPaP3_GPIO_Port, S_DirPaP3_Pin, GPIO_PIN_RESET); // Se estable la direccion antihorario por defecto
 8002ef8:	2200      	movs	r2, #0
 8002efa:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8002efe:	4873      	ldr	r0, [pc, #460]	; (80030cc <robotInitialization+0x24c>)
 8002f00:	f005 f800 	bl	8007f04 <HAL_GPIO_WritePin>

	periodoM[0] = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM12->PSC) + 1.0) * STEPREV)) - 1.0);
 8002f04:	4b72      	ldr	r3, [pc, #456]	; (80030d0 <robotInitialization+0x250>)
 8002f06:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002f08:	ee07 3a90 	vmov	s15, r3
 8002f0c:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8002f10:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002f14:	ee37 6b06 	vadd.f64	d6, d7, d6
 8002f18:	ed97 7b00 	vldr	d7, [r7]
 8002f1c:	ee26 7b07 	vmul.f64	d7, d6, d7
 8002f20:	ed9f 6b5f 	vldr	d6, [pc, #380]	; 80030a0 <robotInitialization+0x220>
 8002f24:	ee27 6b06 	vmul.f64	d6, d7, d6
 8002f28:	ed9f 5b5f 	vldr	d5, [pc, #380]	; 80030a8 <robotInitialization+0x228>
 8002f2c:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8002f30:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002f34:	ee37 7b46 	vsub.f64	d7, d7, d6
 8002f38:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002f3c:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8002f40:	4b64      	ldr	r3, [pc, #400]	; (80030d4 <robotInitialization+0x254>)
 8002f42:	ed83 7b00 	vstr	d7, [r3]
	periodoM[1] = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM13->PSC) + 1.0) * STEPREV)) - 1.0);
 8002f46:	4b64      	ldr	r3, [pc, #400]	; (80030d8 <robotInitialization+0x258>)
 8002f48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002f4a:	ee07 3a90 	vmov	s15, r3
 8002f4e:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8002f52:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002f56:	ee37 6b06 	vadd.f64	d6, d7, d6
 8002f5a:	ed97 7b00 	vldr	d7, [r7]
 8002f5e:	ee26 7b07 	vmul.f64	d7, d6, d7
 8002f62:	ed9f 6b4f 	vldr	d6, [pc, #316]	; 80030a0 <robotInitialization+0x220>
 8002f66:	ee27 6b06 	vmul.f64	d6, d7, d6
 8002f6a:	ed9f 5b4f 	vldr	d5, [pc, #316]	; 80030a8 <robotInitialization+0x228>
 8002f6e:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8002f72:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002f76:	ee37 7b46 	vsub.f64	d7, d7, d6
 8002f7a:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002f7e:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8002f82:	4b54      	ldr	r3, [pc, #336]	; (80030d4 <robotInitialization+0x254>)
 8002f84:	ed83 7b02 	vstr	d7, [r3, #8]
	periodoM[2] = (uint32_t)(((FCL * 60.0) / (rpm * ((double)(TIM14->PSC) + 1.0) * STEPREV)) - 1.0);
 8002f88:	4b54      	ldr	r3, [pc, #336]	; (80030dc <robotInitialization+0x25c>)
 8002f8a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002f8c:	ee07 3a90 	vmov	s15, r3
 8002f90:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8002f94:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002f98:	ee37 6b06 	vadd.f64	d6, d7, d6
 8002f9c:	ed97 7b00 	vldr	d7, [r7]
 8002fa0:	ee26 7b07 	vmul.f64	d7, d6, d7
 8002fa4:	ed9f 6b3e 	vldr	d6, [pc, #248]	; 80030a0 <robotInitialization+0x220>
 8002fa8:	ee27 6b06 	vmul.f64	d6, d7, d6
 8002fac:	ed9f 5b3e 	vldr	d5, [pc, #248]	; 80030a8 <robotInitialization+0x228>
 8002fb0:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8002fb4:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8002fb8:	ee37 7b46 	vsub.f64	d7, d7, d6
 8002fbc:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002fc0:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8002fc4:	4b43      	ldr	r3, [pc, #268]	; (80030d4 <robotInitialization+0x254>)
 8002fc6:	ed83 7b04 	vstr	d7, [r3, #16]

	TIM12->ARR = periodoM[0];
 8002fca:	4b42      	ldr	r3, [pc, #264]	; (80030d4 <robotInitialization+0x254>)
 8002fcc:	ed93 7b00 	vldr	d7, [r3]
 8002fd0:	4b3f      	ldr	r3, [pc, #252]	; (80030d0 <robotInitialization+0x250>)
 8002fd2:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002fd6:	ee17 2a90 	vmov	r2, s15
 8002fda:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM12->CCR1 = (uint32_t)((double)(TIM12->ARR) / 2.0);
 8002fdc:	4b3c      	ldr	r3, [pc, #240]	; (80030d0 <robotInitialization+0x250>)
 8002fde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002fe0:	ee07 3a90 	vmov	s15, r3
 8002fe4:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 8002fe8:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 8002fec:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8002ff0:	4b37      	ldr	r3, [pc, #220]	; (80030d0 <robotInitialization+0x250>)
 8002ff2:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8002ff6:	ee17 2a90 	vmov	r2, s15
 8002ffa:	635a      	str	r2, [r3, #52]	; 0x34
	TIM13->ARR =periodoM[1];
 8002ffc:	4b35      	ldr	r3, [pc, #212]	; (80030d4 <robotInitialization+0x254>)
 8002ffe:	ed93 7b02 	vldr	d7, [r3, #8]
 8003002:	4b35      	ldr	r3, [pc, #212]	; (80030d8 <robotInitialization+0x258>)
 8003004:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8003008:	ee17 2a90 	vmov	r2, s15
 800300c:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM13->CCR1 = (uint32_t)((double)(TIM13->ARR) / 2.0);
 800300e:	4b32      	ldr	r3, [pc, #200]	; (80030d8 <robotInitialization+0x258>)
 8003010:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003012:	ee07 3a90 	vmov	s15, r3
 8003016:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 800301a:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 800301e:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8003022:	4b2d      	ldr	r3, [pc, #180]	; (80030d8 <robotInitialization+0x258>)
 8003024:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8003028:	ee17 2a90 	vmov	r2, s15
 800302c:	635a      	str	r2, [r3, #52]	; 0x34
	TIM14->ARR =periodoM[2];
 800302e:	4b29      	ldr	r3, [pc, #164]	; (80030d4 <robotInitialization+0x254>)
 8003030:	ed93 7b04 	vldr	d7, [r3, #16]
 8003034:	4b29      	ldr	r3, [pc, #164]	; (80030dc <robotInitialization+0x25c>)
 8003036:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800303a:	ee17 2a90 	vmov	r2, s15
 800303e:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM14->CCR1 = (uint32_t)((double)(TIM14->ARR) / 2.0);
 8003040:	4b26      	ldr	r3, [pc, #152]	; (80030dc <robotInitialization+0x25c>)
 8003042:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003044:	ee07 3a90 	vmov	s15, r3
 8003048:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 800304c:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 8003050:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8003054:	4b21      	ldr	r3, [pc, #132]	; (80030dc <robotInitialization+0x25c>)
 8003056:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800305a:	ee17 2a90 	vmov	r2, s15
 800305e:	635a      	str	r2, [r3, #52]	; 0x34

    HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 8003060:	2100      	movs	r1, #0
 8003062:	4813      	ldr	r0, [pc, #76]	; (80030b0 <robotInitialization+0x230>)
 8003064:	f007 fcd6 	bl	800aa14 <HAL_TIM_PWM_Start>
    HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 8003068:	2100      	movs	r1, #0
 800306a:	4812      	ldr	r0, [pc, #72]	; (80030b4 <robotInitialization+0x234>)
 800306c:	f007 fcd2 	bl	800aa14 <HAL_TIM_PWM_Start>
    HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 8003070:	2100      	movs	r1, #0
 8003072:	4811      	ldr	r0, [pc, #68]	; (80030b8 <robotInitialization+0x238>)
 8003074:	f007 fcce 	bl	800aa14 <HAL_TIM_PWM_Start>

    HAL_Delay(1000);
 8003078:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800307c:	f003 fea4 	bl	8006dc8 <HAL_Delay>

	HAL_TIM_PWM_Stop(&htim12, TIM_CHANNEL_1);
 8003080:	2100      	movs	r1, #0
 8003082:	480b      	ldr	r0, [pc, #44]	; (80030b0 <robotInitialization+0x230>)
 8003084:	f007 fdd4 	bl	800ac30 <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);
 8003088:	2100      	movs	r1, #0
 800308a:	480a      	ldr	r0, [pc, #40]	; (80030b4 <robotInitialization+0x234>)
 800308c:	f007 fdd0 	bl	800ac30 <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);
 8003090:	2100      	movs	r1, #0
 8003092:	4809      	ldr	r0, [pc, #36]	; (80030b8 <robotInitialization+0x238>)
 8003094:	f007 fdcc 	bl	800ac30 <HAL_TIM_PWM_Stop>



}
 8003098:	bf00      	nop
 800309a:	3708      	adds	r7, #8
 800309c:	46bd      	mov	sp, r7
 800309e:	bd80      	pop	{r7, pc}
 80030a0:	00000000 	.word	0x00000000
 80030a4:	40bf4000 	.word	0x40bf4000
 80030a8:	00000000 	.word	0x00000000
 80030ac:	41ec9c38 	.word	0x41ec9c38
 80030b0:	24000974 	.word	0x24000974
 80030b4:	240009c0 	.word	0x240009c0
 80030b8:	24000a0c 	.word	0x24000a0c
 80030bc:	24000844 	.word	0x24000844
 80030c0:	24000890 	.word	0x24000890
 80030c4:	240008dc 	.word	0x240008dc
 80030c8:	58020c00 	.word	0x58020c00
 80030cc:	58020800 	.word	0x58020800
 80030d0:	40001800 	.word	0x40001800
 80030d4:	24000778 	.word	0x24000778
 80030d8:	40001c00 	.word	0x40001c00
 80030dc:	40002000 	.word	0x40002000

080030e0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80030e0:	b580      	push	{r7, lr}
 80030e2:	ed2d 8b02 	vpush	{d8}
 80030e6:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80030e8:	f003 fddc 	bl	8006ca4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80030ec:	f000 f958 	bl	80033a0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80030f0:	f7fe fe8c 	bl	8001e0c <MX_GPIO_Init>
  MX_TIM2_Init();
 80030f4:	f001 f842 	bl	800417c <MX_TIM2_Init>
  MX_TIM3_Init();
 80030f8:	f001 f8b0 	bl	800425c <MX_TIM3_Init>
  MX_TIM4_Init();
 80030fc:	f001 f920 	bl	8004340 <MX_TIM4_Init>
  MX_USART3_UART_Init();
 8003100:	f003 fc2e 	bl	8006960 <MX_USART3_UART_Init>
  MX_TIM12_Init();
 8003104:	f001 f9de 	bl	80044c4 <MX_TIM12_Init>
  MX_TIM13_Init();
 8003108:	f001 fa40 	bl	800458c <MX_TIM13_Init>
  MX_TIM14_Init();
 800310c:	f001 fa8e 	bl	800462c <MX_TIM14_Init>
  MX_TIM5_Init();
 8003110:	f001 f988 	bl	8004424 <MX_TIM5_Init>
  MX_TIM15_Init();
 8003114:	f001 fada 	bl	80046cc <MX_TIM15_Init>
  MX_USART1_UART_Init();
 8003118:	f003 fb8a 	bl	8006830 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 800311c:	f003 fbd4 	bl	80068c8 <MX_USART2_UART_Init>

  /* USER CODE BEGIN 2 */

  HAL_UART_Transmit(&huart3, message, sizeof(message), 100); //Mensaje de inicializacion en curso.
 8003120:	2364      	movs	r3, #100	; 0x64
 8003122:	221c      	movs	r2, #28
 8003124:	4981      	ldr	r1, [pc, #516]	; (800332c <main+0x24c>)
 8003126:	4882      	ldr	r0, [pc, #520]	; (8003330 <main+0x250>)
 8003128:	f009 fac8 	bl	800c6bc <HAL_UART_Transmit>
  HAL_UART_Receive_IT(&huart3, &rx_data, 1);
 800312c:	2201      	movs	r2, #1
 800312e:	4981      	ldr	r1, [pc, #516]	; (8003334 <main+0x254>)
 8003130:	487f      	ldr	r0, [pc, #508]	; (8003330 <main+0x250>)
 8003132:	f009 fb59 	bl	800c7e8 <HAL_UART_Receive_IT>

  robotInitialization();
 8003136:	f7ff fea3 	bl	8002e80 <robotInitialization>

  HAL_UART_Transmit(&huart3, message1, sizeof(message1), 100); //Mensaje inidicando que el Robot esta listo para su uso
 800313a:	2364      	movs	r3, #100	; 0x64
 800313c:	2227      	movs	r2, #39	; 0x27
 800313e:	497e      	ldr	r1, [pc, #504]	; (8003338 <main+0x258>)
 8003140:	487b      	ldr	r0, [pc, #492]	; (8003330 <main+0x250>)
 8003142:	f009 fabb 	bl	800c6bc <HAL_UART_Transmit>
  /* USER CODE BEGIN WHILE */
	while (1) {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
		if (FlagButton == 1) {
 8003146:	4b7d      	ldr	r3, [pc, #500]	; (800333c <main+0x25c>)
 8003148:	681b      	ldr	r3, [r3, #0]
 800314a:	2b01      	cmp	r3, #1
 800314c:	d1fb      	bne.n	8003146 <main+0x66>


			test2=1;
 800314e:	4b7c      	ldr	r3, [pc, #496]	; (8003340 <main+0x260>)
 8003150:	2201      	movs	r2, #1
 8003152:	601a      	str	r2, [r3, #0]
			FlagButton = 0;
 8003154:	4b79      	ldr	r3, [pc, #484]	; (800333c <main+0x25c>)
 8003156:	2200      	movs	r2, #0
 8003158:	601a      	str	r2, [r3, #0]
			distancia = sqrt(pow(Pfin.x - Pini.x, 2) + pow(Pfin.y - Pini.y, 2) + pow(Pfin.z - Pini.z, 2));
 800315a:	4b7a      	ldr	r3, [pc, #488]	; (8003344 <main+0x264>)
 800315c:	ed93 6b00 	vldr	d6, [r3]
 8003160:	4b79      	ldr	r3, [pc, #484]	; (8003348 <main+0x268>)
 8003162:	ed93 7b00 	vldr	d7, [r3]
 8003166:	ee36 7b47 	vsub.f64	d7, d6, d7
 800316a:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800316e:	eeb0 0b47 	vmov.f64	d0, d7
 8003172:	f00e fc7d 	bl	8011a70 <pow>
 8003176:	eeb0 8b40 	vmov.f64	d8, d0
 800317a:	4b72      	ldr	r3, [pc, #456]	; (8003344 <main+0x264>)
 800317c:	ed93 6b02 	vldr	d6, [r3, #8]
 8003180:	4b71      	ldr	r3, [pc, #452]	; (8003348 <main+0x268>)
 8003182:	ed93 7b02 	vldr	d7, [r3, #8]
 8003186:	ee36 7b47 	vsub.f64	d7, d6, d7
 800318a:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800318e:	eeb0 0b47 	vmov.f64	d0, d7
 8003192:	f00e fc6d 	bl	8011a70 <pow>
 8003196:	eeb0 7b40 	vmov.f64	d7, d0
 800319a:	ee38 8b07 	vadd.f64	d8, d8, d7
 800319e:	4b69      	ldr	r3, [pc, #420]	; (8003344 <main+0x264>)
 80031a0:	ed93 6b04 	vldr	d6, [r3, #16]
 80031a4:	4b68      	ldr	r3, [pc, #416]	; (8003348 <main+0x268>)
 80031a6:	ed93 7b04 	vldr	d7, [r3, #16]
 80031aa:	ee36 7b47 	vsub.f64	d7, d6, d7
 80031ae:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80031b2:	eeb0 0b47 	vmov.f64	d0, d7
 80031b6:	f00e fc5b 	bl	8011a70 <pow>
 80031ba:	eeb0 7b40 	vmov.f64	d7, d0
 80031be:	ee38 7b07 	vadd.f64	d7, d8, d7
 80031c2:	eeb0 0b47 	vmov.f64	d0, d7
 80031c6:	f00e fed3 	bl	8011f70 <sqrt>
 80031ca:	eeb0 7b40 	vmov.f64	d7, d0
 80031ce:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 80031d2:	4b5e      	ldr	r3, [pc, #376]	; (800334c <main+0x26c>)
 80031d4:	edc3 7a00 	vstr	s15, [r3]
			vDirector[0] = (Pfin.x - Pini.x) / distancia;	//Vector director en X
 80031d8:	4b5a      	ldr	r3, [pc, #360]	; (8003344 <main+0x264>)
 80031da:	ed93 6b00 	vldr	d6, [r3]
 80031de:	4b5a      	ldr	r3, [pc, #360]	; (8003348 <main+0x268>)
 80031e0:	ed93 7b00 	vldr	d7, [r3]
 80031e4:	ee36 5b47 	vsub.f64	d5, d6, d7
 80031e8:	4b58      	ldr	r3, [pc, #352]	; (800334c <main+0x26c>)
 80031ea:	edd3 7a00 	vldr	s15, [r3]
 80031ee:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 80031f2:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80031f6:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 80031fa:	4b55      	ldr	r3, [pc, #340]	; (8003350 <main+0x270>)
 80031fc:	edc3 7a00 	vstr	s15, [r3]
			vDirector[1] = (Pfin.y - Pini.y) / distancia;	//Vector director en Y
 8003200:	4b50      	ldr	r3, [pc, #320]	; (8003344 <main+0x264>)
 8003202:	ed93 6b02 	vldr	d6, [r3, #8]
 8003206:	4b50      	ldr	r3, [pc, #320]	; (8003348 <main+0x268>)
 8003208:	ed93 7b02 	vldr	d7, [r3, #8]
 800320c:	ee36 5b47 	vsub.f64	d5, d6, d7
 8003210:	4b4e      	ldr	r3, [pc, #312]	; (800334c <main+0x26c>)
 8003212:	edd3 7a00 	vldr	s15, [r3]
 8003216:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 800321a:	ee85 7b06 	vdiv.f64	d7, d5, d6
 800321e:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8003222:	4b4b      	ldr	r3, [pc, #300]	; (8003350 <main+0x270>)
 8003224:	edc3 7a01 	vstr	s15, [r3, #4]
			vDirector[2] = (Pfin.z - Pini.z) / distancia;	//Vector director en Z
 8003228:	4b46      	ldr	r3, [pc, #280]	; (8003344 <main+0x264>)
 800322a:	ed93 6b04 	vldr	d6, [r3, #16]
 800322e:	4b46      	ldr	r3, [pc, #280]	; (8003348 <main+0x268>)
 8003230:	ed93 7b04 	vldr	d7, [r3, #16]
 8003234:	ee36 5b47 	vsub.f64	d5, d6, d7
 8003238:	4b44      	ldr	r3, [pc, #272]	; (800334c <main+0x26c>)
 800323a:	edd3 7a00 	vldr	s15, [r3]
 800323e:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 8003242:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8003246:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 800324a:	4b41      	ldr	r3, [pc, #260]	; (8003350 <main+0x270>)
 800324c:	edc3 7a02 	vstr	s15, [r3, #8]
			configStepMotor1(titha1);
 8003250:	4b40      	ldr	r3, [pc, #256]	; (8003354 <main+0x274>)
 8003252:	ed93 7b00 	vldr	d7, [r3]
 8003256:	eeb0 0b47 	vmov.f64	d0, d7
 800325a:	f000 fb81 	bl	8003960 <configStepMotor1>
			configStepMotor2(titha2);
 800325e:	4b3e      	ldr	r3, [pc, #248]	; (8003358 <main+0x278>)
 8003260:	ed93 7b00 	vldr	d7, [r3]
 8003264:	eeb0 0b47 	vmov.f64	d0, d7
 8003268:	f000 fc36 	bl	8003ad8 <configStepMotor2>
			configStepMotor3(titha3);
 800326c:	4b3b      	ldr	r3, [pc, #236]	; (800335c <main+0x27c>)
 800326e:	ed93 7b00 	vldr	d7, [r3]
 8003272:	eeb0 0b47 	vmov.f64	d0, d7
 8003276:	f000 fceb 	bl	8003c50 <configStepMotor3>

			update_ScurveTraj(0, distancia, vi, vf, vmax, amax, jmax);
 800327a:	4b34      	ldr	r3, [pc, #208]	; (800334c <main+0x26c>)
 800327c:	edd3 7a00 	vldr	s15, [r3]
 8003280:	4b37      	ldr	r3, [pc, #220]	; (8003360 <main+0x280>)
 8003282:	ed93 7a00 	vldr	s14, [r3]
 8003286:	4b37      	ldr	r3, [pc, #220]	; (8003364 <main+0x284>)
 8003288:	edd3 6a00 	vldr	s13, [r3]
 800328c:	4b36      	ldr	r3, [pc, #216]	; (8003368 <main+0x288>)
 800328e:	ed93 6a00 	vldr	s12, [r3]
 8003292:	4b36      	ldr	r3, [pc, #216]	; (800336c <main+0x28c>)
 8003294:	edd3 5a00 	vldr	s11, [r3]
 8003298:	4b35      	ldr	r3, [pc, #212]	; (8003370 <main+0x290>)
 800329a:	ed93 5a00 	vldr	s10, [r3]
 800329e:	eeb0 3a45 	vmov.f32	s6, s10
 80032a2:	eef0 2a65 	vmov.f32	s5, s11
 80032a6:	eeb0 2a46 	vmov.f32	s4, s12
 80032aa:	eef0 1a66 	vmov.f32	s3, s13
 80032ae:	eeb0 1a47 	vmov.f32	s2, s14
 80032b2:	eef0 0a67 	vmov.f32	s1, s15
 80032b6:	ed9f 0a2f 	vldr	s0, [pc, #188]	; 8003374 <main+0x294>
 80032ba:	f002 fadd 	bl	8005878 <update_ScurveTraj>

			FlagTiempo = 0;
 80032be:	4b2e      	ldr	r3, [pc, #184]	; (8003378 <main+0x298>)
 80032c0:	2200      	movs	r2, #0
 80032c2:	701a      	strb	r2, [r3, #0]
			FlagTrayectoM1 = 0;
 80032c4:	492d      	ldr	r1, [pc, #180]	; (800337c <main+0x29c>)
 80032c6:	f04f 0200 	mov.w	r2, #0
 80032ca:	f04f 0300 	mov.w	r3, #0
 80032ce:	e9c1 2300 	strd	r2, r3, [r1]
			FlagTrayectoM2 = 0;
 80032d2:	492b      	ldr	r1, [pc, #172]	; (8003380 <main+0x2a0>)
 80032d4:	f04f 0200 	mov.w	r2, #0
 80032d8:	f04f 0300 	mov.w	r3, #0
 80032dc:	e9c1 2300 	strd	r2, r3, [r1]
			FlagTrayectoM3 = 0;
 80032e0:	4928      	ldr	r1, [pc, #160]	; (8003384 <main+0x2a4>)
 80032e2:	f04f 0200 	mov.w	r2, #0
 80032e6:	f04f 0300 	mov.w	r3, #0
 80032ea:	e9c1 2300 	strd	r2, r3, [r1]
			Start=1;
 80032ee:	4b26      	ldr	r3, [pc, #152]	; (8003388 <main+0x2a8>)
 80032f0:	2201      	movs	r2, #1
 80032f2:	701a      	strb	r2, [r3, #0]
			rpm1 = 0;
 80032f4:	4925      	ldr	r1, [pc, #148]	; (800338c <main+0x2ac>)
 80032f6:	f04f 0200 	mov.w	r2, #0
 80032fa:	f04f 0300 	mov.w	r3, #0
 80032fe:	e9c1 2300 	strd	r2, r3, [r1]
			rpm2 = 0;
 8003302:	4923      	ldr	r1, [pc, #140]	; (8003390 <main+0x2b0>)
 8003304:	f04f 0200 	mov.w	r2, #0
 8003308:	f04f 0300 	mov.w	r3, #0
 800330c:	e9c1 2300 	strd	r2, r3, [r1]
			rpm3 = 0;
 8003310:	4920      	ldr	r1, [pc, #128]	; (8003394 <main+0x2b4>)
 8003312:	f04f 0200 	mov.w	r2, #0
 8003316:	f04f 0300 	mov.w	r3, #0
 800331a:	e9c1 2300 	strd	r2, r3, [r1]

			HAL_TIM_Base_Start(&htim5);
 800331e:	481e      	ldr	r0, [pc, #120]	; (8003398 <main+0x2b8>)
 8003320:	f007 f9d8 	bl	800a6d4 <HAL_TIM_Base_Start>
			HAL_TIM_Base_Start_IT(&htim15);
 8003324:	481d      	ldr	r0, [pc, #116]	; (800339c <main+0x2bc>)
 8003326:	f007 fa6d 	bl	800a804 <HAL_TIM_Base_Start_IT>
		if (FlagButton == 1) {
 800332a:	e70c      	b.n	8003146 <main+0x66>
 800332c:	240000a4 	.word	0x240000a4
 8003330:	24000bfc 	.word	0x24000bfc
 8003334:	24000742 	.word	0x24000742
 8003338:	240000c0 	.word	0x240000c0
 800333c:	24000790 	.word	0x24000790
 8003340:	24000798 	.word	0x24000798
 8003344:	240006b0 	.word	0x240006b0
 8003348:	24000698 	.word	0x24000698
 800334c:	240006c8 	.word	0x240006c8
 8003350:	240006cc 	.word	0x240006cc
 8003354:	24000658 	.word	0x24000658
 8003358:	24000660 	.word	0x24000660
 800335c:	24000668 	.word	0x24000668
 8003360:	24000688 	.word	0x24000688
 8003364:	2400068c 	.word	0x2400068c
 8003368:	2400009c 	.word	0x2400009c
 800336c:	240000a0 	.word	0x240000a0
 8003370:	24000098 	.word	0x24000098
 8003374:	00000000 	.word	0x00000000
 8003378:	24000744 	.word	0x24000744
 800337c:	24000750 	.word	0x24000750
 8003380:	24000758 	.word	0x24000758
 8003384:	240000e8 	.word	0x240000e8
 8003388:	240007f0 	.word	0x240007f0
 800338c:	240007a8 	.word	0x240007a8
 8003390:	240007b0 	.word	0x240007b0
 8003394:	240007b8 	.word	0x240007b8
 8003398:	24000928 	.word	0x24000928
 800339c:	24000a58 	.word	0x24000a58

080033a0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80033a0:	b580      	push	{r7, lr}
 80033a2:	b09c      	sub	sp, #112	; 0x70
 80033a4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80033a6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80033aa:	224c      	movs	r2, #76	; 0x4c
 80033ac:	2100      	movs	r1, #0
 80033ae:	4618      	mov	r0, r3
 80033b0:	f00b fcca 	bl	800ed48 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80033b4:	1d3b      	adds	r3, r7, #4
 80033b6:	2220      	movs	r2, #32
 80033b8:	2100      	movs	r1, #0
 80033ba:	4618      	mov	r0, r3
 80033bc:	f00b fcc4 	bl	800ed48 <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 80033c0:	2002      	movs	r0, #2
 80033c2:	f004 fdd3 	bl	8007f6c <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 80033c6:	2300      	movs	r3, #0
 80033c8:	603b      	str	r3, [r7, #0]
 80033ca:	4b32      	ldr	r3, [pc, #200]	; (8003494 <SystemClock_Config+0xf4>)
 80033cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80033ce:	4a31      	ldr	r2, [pc, #196]	; (8003494 <SystemClock_Config+0xf4>)
 80033d0:	f023 0301 	bic.w	r3, r3, #1
 80033d4:	62d3      	str	r3, [r2, #44]	; 0x2c
 80033d6:	4b2f      	ldr	r3, [pc, #188]	; (8003494 <SystemClock_Config+0xf4>)
 80033d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80033da:	f003 0301 	and.w	r3, r3, #1
 80033de:	603b      	str	r3, [r7, #0]
 80033e0:	4b2d      	ldr	r3, [pc, #180]	; (8003498 <SystemClock_Config+0xf8>)
 80033e2:	699b      	ldr	r3, [r3, #24]
 80033e4:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80033e8:	4a2b      	ldr	r2, [pc, #172]	; (8003498 <SystemClock_Config+0xf8>)
 80033ea:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80033ee:	6193      	str	r3, [r2, #24]
 80033f0:	4b29      	ldr	r3, [pc, #164]	; (8003498 <SystemClock_Config+0xf8>)
 80033f2:	699b      	ldr	r3, [r3, #24]
 80033f4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80033f8:	603b      	str	r3, [r7, #0]
 80033fa:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 80033fc:	bf00      	nop
 80033fe:	4b26      	ldr	r3, [pc, #152]	; (8003498 <SystemClock_Config+0xf8>)
 8003400:	699b      	ldr	r3, [r3, #24]
 8003402:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8003406:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800340a:	d1f8      	bne.n	80033fe <SystemClock_Config+0x5e>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800340c:	2302      	movs	r3, #2
 800340e:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 8003410:	2301      	movs	r3, #1
 8003412:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8003414:	2340      	movs	r3, #64	; 0x40
 8003416:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003418:	2302      	movs	r3, #2
 800341a:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800341c:	2300      	movs	r3, #0
 800341e:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8003420:	2304      	movs	r3, #4
 8003422:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLN = 16;
 8003424:	2310      	movs	r3, #16
 8003426:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLP = 2;
 8003428:	2302      	movs	r3, #2
 800342a:	65bb      	str	r3, [r7, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800342c:	2302      	movs	r3, #2
 800342e:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 8003430:	2302      	movs	r3, #2
 8003432:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 8003434:	230c      	movs	r3, #12
 8003436:	667b      	str	r3, [r7, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8003438:	2300      	movs	r3, #0
 800343a:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 800343c:	2300      	movs	r3, #0
 800343e:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003440:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003444:	4618      	mov	r0, r3
 8003446:	f004 fdcb 	bl	8007fe0 <HAL_RCC_OscConfig>
 800344a:	4603      	mov	r3, r0
 800344c:	2b00      	cmp	r3, #0
 800344e:	d001      	beq.n	8003454 <SystemClock_Config+0xb4>
  {
    Error_Handler();
 8003450:	f000 fa7c 	bl	800394c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003454:	233f      	movs	r3, #63	; 0x3f
 8003456:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003458:	2303      	movs	r3, #3
 800345a:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 800345c:	2300      	movs	r3, #0
 800345e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 8003460:	2308      	movs	r3, #8
 8003462:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 8003464:	2300      	movs	r3, #0
 8003466:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 8003468:	2340      	movs	r3, #64	; 0x40
 800346a:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 800346c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003470:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 8003472:	2300      	movs	r3, #0
 8003474:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8003476:	1d3b      	adds	r3, r7, #4
 8003478:	2101      	movs	r1, #1
 800347a:	4618      	mov	r0, r3
 800347c:	f005 f9de 	bl	800883c <HAL_RCC_ClockConfig>
 8003480:	4603      	mov	r3, r0
 8003482:	2b00      	cmp	r3, #0
 8003484:	d001      	beq.n	800348a <SystemClock_Config+0xea>
  {
    Error_Handler();
 8003486:	f000 fa61 	bl	800394c <Error_Handler>
  }
}
 800348a:	bf00      	nop
 800348c:	3770      	adds	r7, #112	; 0x70
 800348e:	46bd      	mov	sp, r7
 8003490:	bd80      	pop	{r7, pc}
 8003492:	bf00      	nop
 8003494:	58000400 	.word	0x58000400
 8003498:	58024800 	.word	0x58024800

0800349c <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
 800349c:	b480      	push	{r7}
 800349e:	b083      	sub	sp, #12
 80034a0:	af00      	add	r7, sp, #0
 80034a2:	4603      	mov	r3, r0
 80034a4:	80fb      	strh	r3, [r7, #6]

	  if(GPIO_Pin == BUTTON_Pin) {
 80034a6:	88fb      	ldrh	r3, [r7, #6]
 80034a8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80034ac:	d106      	bne.n	80034bc <HAL_GPIO_EXTI_Callback+0x20>
		  FlagButton=1;
 80034ae:	4b07      	ldr	r3, [pc, #28]	; (80034cc <HAL_GPIO_EXTI_Callback+0x30>)
 80034b0:	2201      	movs	r2, #1
 80034b2:	601a      	str	r2, [r3, #0]
		  test=1;
 80034b4:	4b06      	ldr	r3, [pc, #24]	; (80034d0 <HAL_GPIO_EXTI_Callback+0x34>)
 80034b6:	2201      	movs	r2, #1
 80034b8:	601a      	str	r2, [r3, #0]
		 HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);	//Apago el PWM del motor 3
		 HAL_UART_Transmit(&huart3, "EndStop3Sup\n\r", 13, 100);
		 break;*/


}
 80034ba:	e000      	b.n	80034be <HAL_GPIO_EXTI_Callback+0x22>
	      __NOP();
 80034bc:	bf00      	nop
}
 80034be:	bf00      	nop
 80034c0:	370c      	adds	r7, #12
 80034c2:	46bd      	mov	sp, r7
 80034c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034c8:	4770      	bx	lr
 80034ca:	bf00      	nop
 80034cc:	24000790 	.word	0x24000790
 80034d0:	24000794 	.word	0x24000794

080034d4 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 80034d4:	b580      	push	{r7, lr}
 80034d6:	b084      	sub	sp, #16
 80034d8:	af00      	add	r7, sp, #0
 80034da:	6078      	str	r0, [r7, #4]

	if (huart->Instance == USART3) {
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	681b      	ldr	r3, [r3, #0]
 80034e0:	4a30      	ldr	r2, [pc, #192]	; (80035a4 <HAL_UART_RxCpltCallback+0xd0>)
 80034e2:	4293      	cmp	r3, r2
 80034e4:	d14d      	bne.n	8003582 <HAL_UART_RxCpltCallback+0xae>
		char dato;
		dato = rx_data;
 80034e6:	4b30      	ldr	r3, [pc, #192]	; (80035a8 <HAL_UART_RxCpltCallback+0xd4>)
 80034e8:	781b      	ldrb	r3, [r3, #0]
 80034ea:	73fb      	strb	r3, [r7, #15]
		switch (dato) {
 80034ec:	7bfb      	ldrb	r3, [r7, #15]
 80034ee:	2b3a      	cmp	r3, #58	; 0x3a
 80034f0:	d006      	beq.n	8003500 <HAL_UART_RxCpltCallback+0x2c>
 80034f2:	2b3a      	cmp	r3, #58	; 0x3a
 80034f4:	dc36      	bgt.n	8003564 <HAL_UART_RxCpltCallback+0x90>
 80034f6:	2b08      	cmp	r3, #8
 80034f8:	d009      	beq.n	800350e <HAL_UART_RxCpltCallback+0x3a>
 80034fa:	2b0d      	cmp	r3, #13
 80034fc:	d01e      	beq.n	800353c <HAL_UART_RxCpltCallback+0x68>
 80034fe:	e031      	b.n	8003564 <HAL_UART_RxCpltCallback+0x90>
		case ':':
			rx_index = 0;
 8003500:	4b2a      	ldr	r3, [pc, #168]	; (80035ac <HAL_UART_RxCpltCallback+0xd8>)
 8003502:	2200      	movs	r2, #0
 8003504:	701a      	strb	r2, [r3, #0]
			cm0 = 1;
 8003506:	4b2a      	ldr	r3, [pc, #168]	; (80035b0 <HAL_UART_RxCpltCallback+0xdc>)
 8003508:	2201      	movs	r2, #1
 800350a:	701a      	strb	r2, [r3, #0]
			break;
 800350c:	e040      	b.n	8003590 <HAL_UART_RxCpltCallback+0xbc>
		case 8:
			if (rx_index > 0) {
 800350e:	4b27      	ldr	r3, [pc, #156]	; (80035ac <HAL_UART_RxCpltCallback+0xd8>)
 8003510:	781b      	ldrb	r3, [r3, #0]
 8003512:	2b00      	cmp	r3, #0
 8003514:	d037      	beq.n	8003586 <HAL_UART_RxCpltCallback+0xb2>
				rx_index--;
 8003516:	4b25      	ldr	r3, [pc, #148]	; (80035ac <HAL_UART_RxCpltCallback+0xd8>)
 8003518:	781b      	ldrb	r3, [r3, #0]
 800351a:	3b01      	subs	r3, #1
 800351c:	b2da      	uxtb	r2, r3
 800351e:	4b23      	ldr	r3, [pc, #140]	; (80035ac <HAL_UART_RxCpltCallback+0xd8>)
 8003520:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003522:	e030      	b.n	8003586 <HAL_UART_RxCpltCallback+0xb2>
		case '\r':

			while (!(rx_index==30)){
				rx_buffer[rx_index]= (uint8_t) 0;
 8003524:	4b21      	ldr	r3, [pc, #132]	; (80035ac <HAL_UART_RxCpltCallback+0xd8>)
 8003526:	781b      	ldrb	r3, [r3, #0]
 8003528:	461a      	mov	r2, r3
 800352a:	4b22      	ldr	r3, [pc, #136]	; (80035b4 <HAL_UART_RxCpltCallback+0xe0>)
 800352c:	2100      	movs	r1, #0
 800352e:	5499      	strb	r1, [r3, r2]
				rx_index++;
 8003530:	4b1e      	ldr	r3, [pc, #120]	; (80035ac <HAL_UART_RxCpltCallback+0xd8>)
 8003532:	781b      	ldrb	r3, [r3, #0]
 8003534:	3301      	adds	r3, #1
 8003536:	b2da      	uxtb	r2, r3
 8003538:	4b1c      	ldr	r3, [pc, #112]	; (80035ac <HAL_UART_RxCpltCallback+0xd8>)
 800353a:	701a      	strb	r2, [r3, #0]
			while (!(rx_index==30)){
 800353c:	4b1b      	ldr	r3, [pc, #108]	; (80035ac <HAL_UART_RxCpltCallback+0xd8>)
 800353e:	781b      	ldrb	r3, [r3, #0]
 8003540:	2b1e      	cmp	r3, #30
 8003542:	d1ef      	bne.n	8003524 <HAL_UART_RxCpltCallback+0x50>
			}

			if (cm0 == 1) {
 8003544:	4b1a      	ldr	r3, [pc, #104]	; (80035b0 <HAL_UART_RxCpltCallback+0xdc>)
 8003546:	781b      	ldrb	r3, [r3, #0]
 8003548:	2b01      	cmp	r3, #1
 800354a:	d11e      	bne.n	800358a <HAL_UART_RxCpltCallback+0xb6>
				rx_buffer[rx_index] = 0;
 800354c:	4b17      	ldr	r3, [pc, #92]	; (80035ac <HAL_UART_RxCpltCallback+0xd8>)
 800354e:	781b      	ldrb	r3, [r3, #0]
 8003550:	461a      	mov	r2, r3
 8003552:	4b18      	ldr	r3, [pc, #96]	; (80035b4 <HAL_UART_RxCpltCallback+0xe0>)
 8003554:	2100      	movs	r1, #0
 8003556:	5499      	strb	r1, [r3, r2]
				interpretaComando();
 8003558:	f7ff f842 	bl	80025e0 <interpretaComando>
				cm0 = 0;
 800355c:	4b14      	ldr	r3, [pc, #80]	; (80035b0 <HAL_UART_RxCpltCallback+0xdc>)
 800355e:	2200      	movs	r2, #0
 8003560:	701a      	strb	r2, [r3, #0]

			}
			break;
 8003562:	e012      	b.n	800358a <HAL_UART_RxCpltCallback+0xb6>
		default:
			if (rx_index < 30) {
 8003564:	4b11      	ldr	r3, [pc, #68]	; (80035ac <HAL_UART_RxCpltCallback+0xd8>)
 8003566:	781b      	ldrb	r3, [r3, #0]
 8003568:	2b1d      	cmp	r3, #29
 800356a:	d810      	bhi.n	800358e <HAL_UART_RxCpltCallback+0xba>
				rx_buffer[rx_index++] = dato;
 800356c:	4b0f      	ldr	r3, [pc, #60]	; (80035ac <HAL_UART_RxCpltCallback+0xd8>)
 800356e:	781b      	ldrb	r3, [r3, #0]
 8003570:	1c5a      	adds	r2, r3, #1
 8003572:	b2d1      	uxtb	r1, r2
 8003574:	4a0d      	ldr	r2, [pc, #52]	; (80035ac <HAL_UART_RxCpltCallback+0xd8>)
 8003576:	7011      	strb	r1, [r2, #0]
 8003578:	4619      	mov	r1, r3
 800357a:	4a0e      	ldr	r2, [pc, #56]	; (80035b4 <HAL_UART_RxCpltCallback+0xe0>)
 800357c:	7bfb      	ldrb	r3, [r7, #15]
 800357e:	5453      	strb	r3, [r2, r1]
			}
			break;
 8003580:	e005      	b.n	800358e <HAL_UART_RxCpltCallback+0xba>
		}
	}
 8003582:	bf00      	nop
 8003584:	e004      	b.n	8003590 <HAL_UART_RxCpltCallback+0xbc>
			break;
 8003586:	bf00      	nop
 8003588:	e002      	b.n	8003590 <HAL_UART_RxCpltCallback+0xbc>
			break;
 800358a:	bf00      	nop
 800358c:	e000      	b.n	8003590 <HAL_UART_RxCpltCallback+0xbc>
			break;
 800358e:	bf00      	nop
	HAL_UART_Receive_IT(&huart3, &rx_data, 1); //Receive data (one character only)
 8003590:	2201      	movs	r2, #1
 8003592:	4905      	ldr	r1, [pc, #20]	; (80035a8 <HAL_UART_RxCpltCallback+0xd4>)
 8003594:	4808      	ldr	r0, [pc, #32]	; (80035b8 <HAL_UART_RxCpltCallback+0xe4>)
 8003596:	f009 f927 	bl	800c7e8 <HAL_UART_Receive_IT>
}
 800359a:	bf00      	nop
 800359c:	3710      	adds	r7, #16
 800359e:	46bd      	mov	sp, r7
 80035a0:	bd80      	pop	{r7, pc}
 80035a2:	bf00      	nop
 80035a4:	40004800 	.word	0x40004800
 80035a8:	24000742 	.word	0x24000742
 80035ac:	24000720 	.word	0x24000720
 80035b0:	24000743 	.word	0x24000743
 80035b4:	24000724 	.word	0x24000724
 80035b8:	24000bfc 	.word	0x24000bfc

080035bc <HAL_UART_TxCpltCallback>:

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart) {
 80035bc:	b480      	push	{r7}
 80035be:	b083      	sub	sp, #12
 80035c0:	af00      	add	r7, sp, #0
 80035c2:	6078      	str	r0, [r7, #4]
	__NOP();
 80035c4:	bf00      	nop
}
 80035c6:	bf00      	nop
 80035c8:	370c      	adds	r7, #12
 80035ca:	46bd      	mov	sp, r7
 80035cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035d0:	4770      	bx	lr
	...

080035d4 <HAL_TIM_IC_CaptureCallback>:

void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim) {
 80035d4:	b580      	push	{r7, lr}
 80035d6:	b082      	sub	sp, #8
 80035d8:	af00      	add	r7, sp, #0
 80035da:	6078      	str	r0, [r7, #4]

	if (htim->Instance == TIM2) {
 80035dc:	687b      	ldr	r3, [r7, #4]
 80035de:	681b      	ldr	r3, [r3, #0]
 80035e0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80035e4:	d116      	bne.n	8003614 <HAL_TIM_IC_CaptureCallback+0x40>
		if (pMotor1 == numStep1) {
 80035e6:	4b29      	ldr	r3, [pc, #164]	; (800368c <HAL_TIM_IC_CaptureCallback+0xb8>)
 80035e8:	681a      	ldr	r2, [r3, #0]
 80035ea:	4b29      	ldr	r3, [pc, #164]	; (8003690 <HAL_TIM_IC_CaptureCallback+0xbc>)
 80035ec:	681b      	ldr	r3, [r3, #0]
 80035ee:	429a      	cmp	r2, r3
 80035f0:	d10a      	bne.n	8003608 <HAL_TIM_IC_CaptureCallback+0x34>
			HAL_TIM_PWM_Stop(&htim12, TIM_CHANNEL_1); //Apago el PWM del motor 1
 80035f2:	2100      	movs	r1, #0
 80035f4:	4827      	ldr	r0, [pc, #156]	; (8003694 <HAL_TIM_IC_CaptureCallback+0xc0>)
 80035f6:	f007 fb1b 	bl	800ac30 <HAL_TIM_PWM_Stop>
			FlagTrayectoM1 = 1;
 80035fa:	4927      	ldr	r1, [pc, #156]	; (8003698 <HAL_TIM_IC_CaptureCallback+0xc4>)
 80035fc:	f04f 0200 	mov.w	r2, #0
 8003600:	4b26      	ldr	r3, [pc, #152]	; (800369c <HAL_TIM_IC_CaptureCallback+0xc8>)
 8003602:	e9c1 2300 	strd	r2, r3, [r1]
		} else {
			pMotor3++;
		}

	}
}
 8003606:	e03c      	b.n	8003682 <HAL_TIM_IC_CaptureCallback+0xae>
			pMotor1++;
 8003608:	4b20      	ldr	r3, [pc, #128]	; (800368c <HAL_TIM_IC_CaptureCallback+0xb8>)
 800360a:	681b      	ldr	r3, [r3, #0]
 800360c:	3301      	adds	r3, #1
 800360e:	4a1f      	ldr	r2, [pc, #124]	; (800368c <HAL_TIM_IC_CaptureCallback+0xb8>)
 8003610:	6013      	str	r3, [r2, #0]
}
 8003612:	e036      	b.n	8003682 <HAL_TIM_IC_CaptureCallback+0xae>
	} else if (htim->Instance == TIM3) {
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	681b      	ldr	r3, [r3, #0]
 8003618:	4a21      	ldr	r2, [pc, #132]	; (80036a0 <HAL_TIM_IC_CaptureCallback+0xcc>)
 800361a:	4293      	cmp	r3, r2
 800361c:	d116      	bne.n	800364c <HAL_TIM_IC_CaptureCallback+0x78>
		if (pMotor2 == numStep2) {
 800361e:	4b21      	ldr	r3, [pc, #132]	; (80036a4 <HAL_TIM_IC_CaptureCallback+0xd0>)
 8003620:	681a      	ldr	r2, [r3, #0]
 8003622:	4b21      	ldr	r3, [pc, #132]	; (80036a8 <HAL_TIM_IC_CaptureCallback+0xd4>)
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	429a      	cmp	r2, r3
 8003628:	d10a      	bne.n	8003640 <HAL_TIM_IC_CaptureCallback+0x6c>
			HAL_TIM_PWM_Stop(&htim13, TIM_CHANNEL_1);//Apago el PWM del motor 1
 800362a:	2100      	movs	r1, #0
 800362c:	481f      	ldr	r0, [pc, #124]	; (80036ac <HAL_TIM_IC_CaptureCallback+0xd8>)
 800362e:	f007 faff 	bl	800ac30 <HAL_TIM_PWM_Stop>
			FlagTrayectoM2 = 1;
 8003632:	491f      	ldr	r1, [pc, #124]	; (80036b0 <HAL_TIM_IC_CaptureCallback+0xdc>)
 8003634:	f04f 0200 	mov.w	r2, #0
 8003638:	4b18      	ldr	r3, [pc, #96]	; (800369c <HAL_TIM_IC_CaptureCallback+0xc8>)
 800363a:	e9c1 2300 	strd	r2, r3, [r1]
}
 800363e:	e020      	b.n	8003682 <HAL_TIM_IC_CaptureCallback+0xae>
			pMotor2++;
 8003640:	4b18      	ldr	r3, [pc, #96]	; (80036a4 <HAL_TIM_IC_CaptureCallback+0xd0>)
 8003642:	681b      	ldr	r3, [r3, #0]
 8003644:	3301      	adds	r3, #1
 8003646:	4a17      	ldr	r2, [pc, #92]	; (80036a4 <HAL_TIM_IC_CaptureCallback+0xd0>)
 8003648:	6013      	str	r3, [r2, #0]
}
 800364a:	e01a      	b.n	8003682 <HAL_TIM_IC_CaptureCallback+0xae>
	} else if (htim->Instance == TIM4) {
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	681b      	ldr	r3, [r3, #0]
 8003650:	4a18      	ldr	r2, [pc, #96]	; (80036b4 <HAL_TIM_IC_CaptureCallback+0xe0>)
 8003652:	4293      	cmp	r3, r2
 8003654:	d115      	bne.n	8003682 <HAL_TIM_IC_CaptureCallback+0xae>
		if (pMotor3 == numStep3) {
 8003656:	4b18      	ldr	r3, [pc, #96]	; (80036b8 <HAL_TIM_IC_CaptureCallback+0xe4>)
 8003658:	681a      	ldr	r2, [r3, #0]
 800365a:	4b18      	ldr	r3, [pc, #96]	; (80036bc <HAL_TIM_IC_CaptureCallback+0xe8>)
 800365c:	681b      	ldr	r3, [r3, #0]
 800365e:	429a      	cmp	r2, r3
 8003660:	d10a      	bne.n	8003678 <HAL_TIM_IC_CaptureCallback+0xa4>
			HAL_TIM_PWM_Stop(&htim14, TIM_CHANNEL_1);//Apago el PWM del motor 1
 8003662:	2100      	movs	r1, #0
 8003664:	4816      	ldr	r0, [pc, #88]	; (80036c0 <HAL_TIM_IC_CaptureCallback+0xec>)
 8003666:	f007 fae3 	bl	800ac30 <HAL_TIM_PWM_Stop>
			FlagTrayectoM3 = 1;
 800366a:	4916      	ldr	r1, [pc, #88]	; (80036c4 <HAL_TIM_IC_CaptureCallback+0xf0>)
 800366c:	f04f 0200 	mov.w	r2, #0
 8003670:	4b0a      	ldr	r3, [pc, #40]	; (800369c <HAL_TIM_IC_CaptureCallback+0xc8>)
 8003672:	e9c1 2300 	strd	r2, r3, [r1]
}
 8003676:	e004      	b.n	8003682 <HAL_TIM_IC_CaptureCallback+0xae>
			pMotor3++;
 8003678:	4b0f      	ldr	r3, [pc, #60]	; (80036b8 <HAL_TIM_IC_CaptureCallback+0xe4>)
 800367a:	681b      	ldr	r3, [r3, #0]
 800367c:	3301      	adds	r3, #1
 800367e:	4a0e      	ldr	r2, [pc, #56]	; (80036b8 <HAL_TIM_IC_CaptureCallback+0xe4>)
 8003680:	6013      	str	r3, [r2, #0]
}
 8003682:	bf00      	nop
 8003684:	3708      	adds	r7, #8
 8003686:	46bd      	mov	sp, r7
 8003688:	bd80      	pop	{r7, pc}
 800368a:	bf00      	nop
 800368c:	24000640 	.word	0x24000640
 8003690:	2400064c 	.word	0x2400064c
 8003694:	24000974 	.word	0x24000974
 8003698:	24000750 	.word	0x24000750
 800369c:	3ff00000 	.word	0x3ff00000
 80036a0:	40000400 	.word	0x40000400
 80036a4:	24000644 	.word	0x24000644
 80036a8:	24000650 	.word	0x24000650
 80036ac:	240009c0 	.word	0x240009c0
 80036b0:	24000758 	.word	0x24000758
 80036b4:	40000800 	.word	0x40000800
 80036b8:	24000648 	.word	0x24000648
 80036bc:	24000654 	.word	0x24000654
 80036c0:	24000a0c 	.word	0x24000a0c
 80036c4:	240000e8 	.word	0x240000e8

080036c8 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 80036c8:	b580      	push	{r7, lr}
 80036ca:	b082      	sub	sp, #8
 80036cc:	af00      	add	r7, sp, #0
 80036ce:	6078      	str	r0, [r7, #4]

	if (htim == &htim15) {  //Timer que actualiza curva de velocidad
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	4a89      	ldr	r2, [pc, #548]	; (80038f8 <HAL_TIM_PeriodElapsedCallback+0x230>)
 80036d4:	4293      	cmp	r3, r2
 80036d6:	f040 8105 	bne.w	80038e4 <HAL_TIM_PeriodElapsedCallback+0x21c>

		if (FlagTrayectoM1 == 1 && FlagTrayectoM2 == 1 && FlagTrayectoM3 == 1) {
 80036da:	4b88      	ldr	r3, [pc, #544]	; (80038fc <HAL_TIM_PeriodElapsedCallback+0x234>)
 80036dc:	ed93 7b00 	vldr	d7, [r3]
 80036e0:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80036e4:	eeb4 7b46 	vcmp.f64	d7, d6
 80036e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036ec:	d12c      	bne.n	8003748 <HAL_TIM_PeriodElapsedCallback+0x80>
 80036ee:	4b84      	ldr	r3, [pc, #528]	; (8003900 <HAL_TIM_PeriodElapsedCallback+0x238>)
 80036f0:	ed93 7b00 	vldr	d7, [r3]
 80036f4:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80036f8:	eeb4 7b46 	vcmp.f64	d7, d6
 80036fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003700:	d122      	bne.n	8003748 <HAL_TIM_PeriodElapsedCallback+0x80>
 8003702:	4b80      	ldr	r3, [pc, #512]	; (8003904 <HAL_TIM_PeriodElapsedCallback+0x23c>)
 8003704:	ed93 7b00 	vldr	d7, [r3]
 8003708:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 800370c:	eeb4 7b46 	vcmp.f64	d7, d6
 8003710:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003714:	d118      	bne.n	8003748 <HAL_TIM_PeriodElapsedCallback+0x80>
			HAL_TIM_Base_Stop_IT(&htim15);
 8003716:	4878      	ldr	r0, [pc, #480]	; (80038f8 <HAL_TIM_PeriodElapsedCallback+0x230>)
 8003718:	f007 f8ec 	bl	800a8f4 <HAL_TIM_Base_Stop_IT>
			HAL_TIM_Base_Stop(&htim5);
 800371c:	487a      	ldr	r0, [pc, #488]	; (8003908 <HAL_TIM_PeriodElapsedCallback+0x240>)
 800371e:	f007 f849 	bl	800a7b4 <HAL_TIM_Base_Stop>
			Pini.x = Pfin.x;
 8003722:	4b7a      	ldr	r3, [pc, #488]	; (800390c <HAL_TIM_PeriodElapsedCallback+0x244>)
 8003724:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003728:	4979      	ldr	r1, [pc, #484]	; (8003910 <HAL_TIM_PeriodElapsedCallback+0x248>)
 800372a:	e9c1 2300 	strd	r2, r3, [r1]
			Pini.y = Pfin.y;
 800372e:	4b77      	ldr	r3, [pc, #476]	; (800390c <HAL_TIM_PeriodElapsedCallback+0x244>)
 8003730:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8003734:	4976      	ldr	r1, [pc, #472]	; (8003910 <HAL_TIM_PeriodElapsedCallback+0x248>)
 8003736:	e9c1 2302 	strd	r2, r3, [r1, #8]
			Pini.z = Pfin.z;
 800373a:	4b74      	ldr	r3, [pc, #464]	; (800390c <HAL_TIM_PeriodElapsedCallback+0x244>)
 800373c:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 8003740:	4973      	ldr	r1, [pc, #460]	; (8003910 <HAL_TIM_PeriodElapsedCallback+0x248>)
 8003742:	e9c1 2304 	strd	r2, r3, [r1, #16]
				HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);	// Activar generacion de pwm
				HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);	// Activar generacion de pwm
			}
		}
	}
}
 8003746:	e0cd      	b.n	80038e4 <HAL_TIM_PeriodElapsedCallback+0x21c>
			if (!FlagTiempo) {
 8003748:	4b72      	ldr	r3, [pc, #456]	; (8003914 <HAL_TIM_PeriodElapsedCallback+0x24c>)
 800374a:	781b      	ldrb	r3, [r3, #0]
 800374c:	2b00      	cmp	r3, #0
 800374e:	d105      	bne.n	800375c <HAL_TIM_PeriodElapsedCallback+0x94>
				FlagTiempo = 1;
 8003750:	4b70      	ldr	r3, [pc, #448]	; (8003914 <HAL_TIM_PeriodElapsedCallback+0x24c>)
 8003752:	2201      	movs	r2, #1
 8003754:	701a      	strb	r2, [r3, #0]
				TIM5->CNT = 0;	// comienzo a contabilizar el tiempo recien acá
 8003756:	4b70      	ldr	r3, [pc, #448]	; (8003918 <HAL_TIM_PeriodElapsedCallback+0x250>)
 8003758:	2200      	movs	r2, #0
 800375a:	625a      	str	r2, [r3, #36]	; 0x24
			Tiempo = (((double) (TIM5->CNT)) * ((double)(TIM5->PSC + 1) / 64000000.0));
 800375c:	4b6e      	ldr	r3, [pc, #440]	; (8003918 <HAL_TIM_PeriodElapsedCallback+0x250>)
 800375e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003760:	ee07 3a90 	vmov	s15, r3
 8003764:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 8003768:	4b6b      	ldr	r3, [pc, #428]	; (8003918 <HAL_TIM_PeriodElapsedCallback+0x250>)
 800376a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800376c:	3301      	adds	r3, #1
 800376e:	ee07 3a90 	vmov	s15, r3
 8003772:	eeb8 5b67 	vcvt.f64.u32	d5, s15
 8003776:	ed9f 4b5e 	vldr	d4, [pc, #376]	; 80038f0 <HAL_TIM_PeriodElapsedCallback+0x228>
 800377a:	ee85 7b04 	vdiv.f64	d7, d5, d4
 800377e:	ee26 7b07 	vmul.f64	d7, d6, d7
 8003782:	4b66      	ldr	r3, [pc, #408]	; (800391c <HAL_TIM_PeriodElapsedCallback+0x254>)
 8003784:	ed83 7b00 	vstr	d7, [r3]
			get_Straj(Tiempo);
 8003788:	4b64      	ldr	r3, [pc, #400]	; (800391c <HAL_TIM_PeriodElapsedCallback+0x254>)
 800378a:	ed93 7b00 	vldr	d7, [r3]
 800378e:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8003792:	eeb0 0a67 	vmov.f32	s0, s15
 8003796:	f001 f9c3 	bl	8004b20 <get_Straj>
			Recta3D[0] = Pini.x + q * vDirector[0];
 800379a:	4b5d      	ldr	r3, [pc, #372]	; (8003910 <HAL_TIM_PeriodElapsedCallback+0x248>)
 800379c:	ed93 6b00 	vldr	d6, [r3]
 80037a0:	4b5f      	ldr	r3, [pc, #380]	; (8003920 <HAL_TIM_PeriodElapsedCallback+0x258>)
 80037a2:	ed93 7a00 	vldr	s14, [r3]
 80037a6:	4b5f      	ldr	r3, [pc, #380]	; (8003924 <HAL_TIM_PeriodElapsedCallback+0x25c>)
 80037a8:	edd3 7a00 	vldr	s15, [r3]
 80037ac:	ee67 7a27 	vmul.f32	s15, s14, s15
 80037b0:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80037b4:	ee36 7b07 	vadd.f64	d7, d6, d7
 80037b8:	4b5b      	ldr	r3, [pc, #364]	; (8003928 <HAL_TIM_PeriodElapsedCallback+0x260>)
 80037ba:	ed83 7b00 	vstr	d7, [r3]
			Recta3D[1] = Pini.y + q * vDirector[1];
 80037be:	4b54      	ldr	r3, [pc, #336]	; (8003910 <HAL_TIM_PeriodElapsedCallback+0x248>)
 80037c0:	ed93 6b02 	vldr	d6, [r3, #8]
 80037c4:	4b56      	ldr	r3, [pc, #344]	; (8003920 <HAL_TIM_PeriodElapsedCallback+0x258>)
 80037c6:	ed93 7a01 	vldr	s14, [r3, #4]
 80037ca:	4b56      	ldr	r3, [pc, #344]	; (8003924 <HAL_TIM_PeriodElapsedCallback+0x25c>)
 80037cc:	edd3 7a00 	vldr	s15, [r3]
 80037d0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80037d4:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80037d8:	ee36 7b07 	vadd.f64	d7, d6, d7
 80037dc:	4b52      	ldr	r3, [pc, #328]	; (8003928 <HAL_TIM_PeriodElapsedCallback+0x260>)
 80037de:	ed83 7b02 	vstr	d7, [r3, #8]
			Recta3D[2] = Pini.z + q * vDirector[2];
 80037e2:	4b4b      	ldr	r3, [pc, #300]	; (8003910 <HAL_TIM_PeriodElapsedCallback+0x248>)
 80037e4:	ed93 6b04 	vldr	d6, [r3, #16]
 80037e8:	4b4d      	ldr	r3, [pc, #308]	; (8003920 <HAL_TIM_PeriodElapsedCallback+0x258>)
 80037ea:	ed93 7a02 	vldr	s14, [r3, #8]
 80037ee:	4b4d      	ldr	r3, [pc, #308]	; (8003924 <HAL_TIM_PeriodElapsedCallback+0x25c>)
 80037f0:	edd3 7a00 	vldr	s15, [r3]
 80037f4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80037f8:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80037fc:	ee36 7b07 	vadd.f64	d7, d6, d7
 8003800:	4b49      	ldr	r3, [pc, #292]	; (8003928 <HAL_TIM_PeriodElapsedCallback+0x260>)
 8003802:	ed83 7b04 	vstr	d7, [r3, #16]
			dRecta3D[0] = 0 + qd * vDirector[0];
 8003806:	4b46      	ldr	r3, [pc, #280]	; (8003920 <HAL_TIM_PeriodElapsedCallback+0x258>)
 8003808:	ed93 7a00 	vldr	s14, [r3]
 800380c:	4b47      	ldr	r3, [pc, #284]	; (800392c <HAL_TIM_PeriodElapsedCallback+0x264>)
 800380e:	edd3 7a00 	vldr	s15, [r3]
 8003812:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003816:	ed9f 7a46 	vldr	s14, [pc, #280]	; 8003930 <HAL_TIM_PeriodElapsedCallback+0x268>
 800381a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800381e:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8003822:	4b44      	ldr	r3, [pc, #272]	; (8003934 <HAL_TIM_PeriodElapsedCallback+0x26c>)
 8003824:	ed83 7b00 	vstr	d7, [r3]
			dRecta3D[1] = 0 + qd * vDirector[1];
 8003828:	4b3d      	ldr	r3, [pc, #244]	; (8003920 <HAL_TIM_PeriodElapsedCallback+0x258>)
 800382a:	ed93 7a01 	vldr	s14, [r3, #4]
 800382e:	4b3f      	ldr	r3, [pc, #252]	; (800392c <HAL_TIM_PeriodElapsedCallback+0x264>)
 8003830:	edd3 7a00 	vldr	s15, [r3]
 8003834:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003838:	ed9f 7a3d 	vldr	s14, [pc, #244]	; 8003930 <HAL_TIM_PeriodElapsedCallback+0x268>
 800383c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003840:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8003844:	4b3b      	ldr	r3, [pc, #236]	; (8003934 <HAL_TIM_PeriodElapsedCallback+0x26c>)
 8003846:	ed83 7b02 	vstr	d7, [r3, #8]
			dRecta3D[2] = 0 + qd * vDirector[2];
 800384a:	4b35      	ldr	r3, [pc, #212]	; (8003920 <HAL_TIM_PeriodElapsedCallback+0x258>)
 800384c:	ed93 7a02 	vldr	s14, [r3, #8]
 8003850:	4b36      	ldr	r3, [pc, #216]	; (800392c <HAL_TIM_PeriodElapsedCallback+0x264>)
 8003852:	edd3 7a00 	vldr	s15, [r3]
 8003856:	ee67 7a27 	vmul.f32	s15, s14, s15
 800385a:	ed9f 7a35 	vldr	s14, [pc, #212]	; 8003930 <HAL_TIM_PeriodElapsedCallback+0x268>
 800385e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003862:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8003866:	4b33      	ldr	r3, [pc, #204]	; (8003934 <HAL_TIM_PeriodElapsedCallback+0x26c>)
 8003868:	ed83 7b04 	vstr	d7, [r3, #16]
			jacobianoInverso(dRecta3D[0], dRecta3D[1], dRecta3D[2], Recta3D[0], Recta3D[1], Recta3D[2]);
 800386c:	4b31      	ldr	r3, [pc, #196]	; (8003934 <HAL_TIM_PeriodElapsedCallback+0x26c>)
 800386e:	ed93 7b00 	vldr	d7, [r3]
 8003872:	4b30      	ldr	r3, [pc, #192]	; (8003934 <HAL_TIM_PeriodElapsedCallback+0x26c>)
 8003874:	ed93 6b02 	vldr	d6, [r3, #8]
 8003878:	4b2e      	ldr	r3, [pc, #184]	; (8003934 <HAL_TIM_PeriodElapsedCallback+0x26c>)
 800387a:	ed93 2b04 	vldr	d2, [r3, #16]
 800387e:	4b2a      	ldr	r3, [pc, #168]	; (8003928 <HAL_TIM_PeriodElapsedCallback+0x260>)
 8003880:	ed93 3b00 	vldr	d3, [r3]
 8003884:	4b28      	ldr	r3, [pc, #160]	; (8003928 <HAL_TIM_PeriodElapsedCallback+0x260>)
 8003886:	ed93 4b02 	vldr	d4, [r3, #8]
 800388a:	4b27      	ldr	r3, [pc, #156]	; (8003928 <HAL_TIM_PeriodElapsedCallback+0x260>)
 800388c:	ed93 5b04 	vldr	d5, [r3, #16]
 8003890:	eeb0 1b46 	vmov.f64	d1, d6
 8003894:	eeb0 0b47 	vmov.f64	d0, d7
 8003898:	f7fe ffca 	bl	8002830 <jacobianoInverso>
			SetPerfilTimers(omega[0], omega[1], omega[2]);
 800389c:	4b26      	ldr	r3, [pc, #152]	; (8003938 <HAL_TIM_PeriodElapsedCallback+0x270>)
 800389e:	ed93 7b00 	vldr	d7, [r3]
 80038a2:	4b25      	ldr	r3, [pc, #148]	; (8003938 <HAL_TIM_PeriodElapsedCallback+0x270>)
 80038a4:	ed93 6b02 	vldr	d6, [r3, #8]
 80038a8:	4b23      	ldr	r3, [pc, #140]	; (8003938 <HAL_TIM_PeriodElapsedCallback+0x270>)
 80038aa:	ed93 5b04 	vldr	d5, [r3, #16]
 80038ae:	eeb0 2b45 	vmov.f64	d2, d5
 80038b2:	eeb0 1b46 	vmov.f64	d1, d6
 80038b6:	eeb0 0b47 	vmov.f64	d0, d7
 80038ba:	f002 fd1d 	bl	80062f8 <SetPerfilTimers>
			if(Start==1){
 80038be:	4b1f      	ldr	r3, [pc, #124]	; (800393c <HAL_TIM_PeriodElapsedCallback+0x274>)
 80038c0:	781b      	ldrb	r3, [r3, #0]
 80038c2:	2b01      	cmp	r3, #1
 80038c4:	d10e      	bne.n	80038e4 <HAL_TIM_PeriodElapsedCallback+0x21c>
				Start=0;
 80038c6:	4b1d      	ldr	r3, [pc, #116]	; (800393c <HAL_TIM_PeriodElapsedCallback+0x274>)
 80038c8:	2200      	movs	r2, #0
 80038ca:	701a      	strb	r2, [r3, #0]
				HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);	// Activar generacion de pwm
 80038cc:	2100      	movs	r1, #0
 80038ce:	481c      	ldr	r0, [pc, #112]	; (8003940 <HAL_TIM_PeriodElapsedCallback+0x278>)
 80038d0:	f007 f8a0 	bl	800aa14 <HAL_TIM_PWM_Start>
				HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);	// Activar generacion de pwm
 80038d4:	2100      	movs	r1, #0
 80038d6:	481b      	ldr	r0, [pc, #108]	; (8003944 <HAL_TIM_PeriodElapsedCallback+0x27c>)
 80038d8:	f007 f89c 	bl	800aa14 <HAL_TIM_PWM_Start>
				HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);	// Activar generacion de pwm
 80038dc:	2100      	movs	r1, #0
 80038de:	481a      	ldr	r0, [pc, #104]	; (8003948 <HAL_TIM_PeriodElapsedCallback+0x280>)
 80038e0:	f007 f898 	bl	800aa14 <HAL_TIM_PWM_Start>
}
 80038e4:	bf00      	nop
 80038e6:	3708      	adds	r7, #8
 80038e8:	46bd      	mov	sp, r7
 80038ea:	bd80      	pop	{r7, pc}
 80038ec:	f3af 8000 	nop.w
 80038f0:	00000000 	.word	0x00000000
 80038f4:	418e8480 	.word	0x418e8480
 80038f8:	24000a58 	.word	0x24000a58
 80038fc:	24000750 	.word	0x24000750
 8003900:	24000758 	.word	0x24000758
 8003904:	240000e8 	.word	0x240000e8
 8003908:	24000928 	.word	0x24000928
 800390c:	240006b0 	.word	0x240006b0
 8003910:	24000698 	.word	0x24000698
 8003914:	24000744 	.word	0x24000744
 8003918:	40000c00 	.word	0x40000c00
 800391c:	24000748 	.word	0x24000748
 8003920:	240006cc 	.word	0x240006cc
 8003924:	24000670 	.word	0x24000670
 8003928:	240006d8 	.word	0x240006d8
 800392c:	24000674 	.word	0x24000674
 8003930:	00000000 	.word	0x00000000
 8003934:	240006f0 	.word	0x240006f0
 8003938:	24000708 	.word	0x24000708
 800393c:	240007f0 	.word	0x240007f0
 8003940:	24000974 	.word	0x24000974
 8003944:	240009c0 	.word	0x240009c0
 8003948:	24000a0c 	.word	0x24000a0c

0800394c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800394c:	b480      	push	{r7}
 800394e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8003950:	bf00      	nop
 8003952:	46bd      	mov	sp, r7
 8003954:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003958:	4770      	bx	lr
 800395a:	0000      	movs	r0, r0
 800395c:	0000      	movs	r0, r0
	...

08003960 <configStepMotor1>:
//double Periodo;		//periodo de timer PWM
//double ErrorPeriodo;
//double ErrorAcumuladoPeriodo[3];


void configStepMotor1(double angulo) {
 8003960:	b580      	push	{r7, lr}
 8003962:	b084      	sub	sp, #16
 8003964:	af00      	add	r7, sp, #0
 8003966:	ed87 0b00 	vstr	d0, [r7]
	double anguloDif;
	pMotor1 = 0;
 800396a:	4b51      	ldr	r3, [pc, #324]	; (8003ab0 <configStepMotor1+0x150>)
 800396c:	2200      	movs	r2, #0
 800396e:	601a      	str	r2, [r3, #0]
	if (angulo >= anguloActual1) {
 8003970:	4b50      	ldr	r3, [pc, #320]	; (8003ab4 <configStepMotor1+0x154>)
 8003972:	ed93 7b00 	vldr	d7, [r3]
 8003976:	ed97 6b00 	vldr	d6, [r7]
 800397a:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800397e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003982:	db22      	blt.n	80039ca <configStepMotor1+0x6a>
		if(ES1i_PRESSED){
 8003984:	2102      	movs	r1, #2
 8003986:	484c      	ldr	r0, [pc, #304]	; (8003ab8 <configStepMotor1+0x158>)
 8003988:	f004 faa4 	bl	8007ed4 <HAL_GPIO_ReadPin>
 800398c:	4603      	mov	r3, r0
 800398e:	2b00      	cmp	r3, #0
 8003990:	d106      	bne.n	80039a0 <configStepMotor1+0x40>
			flagErrorEndStop = 1;
 8003992:	494a      	ldr	r1, [pc, #296]	; (8003abc <configStepMotor1+0x15c>)
 8003994:	f04f 0200 	mov.w	r2, #0
 8003998:	4b49      	ldr	r3, [pc, #292]	; (8003ac0 <configStepMotor1+0x160>)
 800399a:	e9c1 2300 	strd	r2, r3, [r1]
 800399e:	e036      	b.n	8003a0e <configStepMotor1+0xae>
		} else {
			anguloDif = angulo - anguloActual1;	//Calculo cuantos grados se tiene que mover.
 80039a0:	4b44      	ldr	r3, [pc, #272]	; (8003ab4 <configStepMotor1+0x154>)
 80039a2:	ed93 7b00 	vldr	d7, [r3]
 80039a6:	ed97 6b00 	vldr	d6, [r7]
 80039aa:	ee36 7b47 	vsub.f64	d7, d6, d7
 80039ae:	ed87 7b02 	vstr	d7, [r7, #8]
			anguloActual1 = angulo;
 80039b2:	4940      	ldr	r1, [pc, #256]	; (8003ab4 <configStepMotor1+0x154>)
 80039b4:	e9d7 2300 	ldrd	r2, r3, [r7]
 80039b8:	e9c1 2300 	strd	r2, r3, [r1]
			HAL_GPIO_WritePin(S_DirPaP1_GPIO_Port, S_DirPaP1_Pin, GPIO_PIN_SET); //Antihorario visto de frente
 80039bc:	2201      	movs	r2, #1
 80039be:	f44f 7180 	mov.w	r1, #256	; 0x100
 80039c2:	4840      	ldr	r0, [pc, #256]	; (8003ac4 <configStepMotor1+0x164>)
 80039c4:	f004 fa9e 	bl	8007f04 <HAL_GPIO_WritePin>
 80039c8:	e021      	b.n	8003a0e <configStepMotor1+0xae>
		}
	} else {
		if(ES1s_PRESSED){
 80039ca:	2101      	movs	r1, #1
 80039cc:	483a      	ldr	r0, [pc, #232]	; (8003ab8 <configStepMotor1+0x158>)
 80039ce:	f004 fa81 	bl	8007ed4 <HAL_GPIO_ReadPin>
 80039d2:	4603      	mov	r3, r0
 80039d4:	2b00      	cmp	r3, #0
 80039d6:	d106      	bne.n	80039e6 <configStepMotor1+0x86>
			flagErrorEndStop = 1;
 80039d8:	4938      	ldr	r1, [pc, #224]	; (8003abc <configStepMotor1+0x15c>)
 80039da:	f04f 0200 	mov.w	r2, #0
 80039de:	4b38      	ldr	r3, [pc, #224]	; (8003ac0 <configStepMotor1+0x160>)
 80039e0:	e9c1 2300 	strd	r2, r3, [r1]
 80039e4:	e013      	b.n	8003a0e <configStepMotor1+0xae>
		} else {
			anguloDif = anguloActual1 - angulo;	//Calculo cuantos grados se tiene que mover.
 80039e6:	4b33      	ldr	r3, [pc, #204]	; (8003ab4 <configStepMotor1+0x154>)
 80039e8:	ed93 6b00 	vldr	d6, [r3]
 80039ec:	ed97 7b00 	vldr	d7, [r7]
 80039f0:	ee36 7b47 	vsub.f64	d7, d6, d7
 80039f4:	ed87 7b02 	vstr	d7, [r7, #8]
			anguloActual1 = angulo;
 80039f8:	492e      	ldr	r1, [pc, #184]	; (8003ab4 <configStepMotor1+0x154>)
 80039fa:	e9d7 2300 	ldrd	r2, r3, [r7]
 80039fe:	e9c1 2300 	strd	r2, r3, [r1]
			HAL_GPIO_WritePin(S_DirPaP1_GPIO_Port, S_DirPaP1_Pin, GPIO_PIN_RESET); // Horario visto de frente
 8003a02:	2200      	movs	r2, #0
 8003a04:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003a08:	482e      	ldr	r0, [pc, #184]	; (8003ac4 <configStepMotor1+0x164>)
 8003a0a:	f004 fa7b 	bl	8007f04 <HAL_GPIO_WritePin>
		}

	}
	// Calculo el error de posicion por casteo a int, y cuando supera la unidad lo compenzo------
	calculoStep1 = (anguloDif * STEPREV) / 360; // Almaceno el remante de los numeros de pasos y
 8003a0e:	ed97 7b02 	vldr	d7, [r7, #8]
 8003a12:	ed9f 6b23 	vldr	d6, [pc, #140]	; 8003aa0 <configStepMotor1+0x140>
 8003a16:	ee27 6b06 	vmul.f64	d6, d7, d6
 8003a1a:	ed9f 5b23 	vldr	d5, [pc, #140]	; 8003aa8 <configStepMotor1+0x148>
 8003a1e:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8003a22:	4b29      	ldr	r3, [pc, #164]	; (8003ac8 <configStepMotor1+0x168>)
 8003a24:	ed83 7b00 	vstr	d7, [r3]
	numStep1 = (uint32_t) calculoStep1;	// cuando pasa la unidad lo sumo al numero de pasos para
 8003a28:	4b27      	ldr	r3, [pc, #156]	; (8003ac8 <configStepMotor1+0x168>)
 8003a2a:	ed93 7b00 	vldr	d7, [r3]
 8003a2e:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8003a32:	ee17 2a90 	vmov	r2, s15
 8003a36:	4b25      	ldr	r3, [pc, #148]	; (8003acc <configStepMotor1+0x16c>)
 8003a38:	601a      	str	r2, [r3, #0]
	remanente1 = remanente1 + (calculoStep1 - numStep1);// que el error no se amplifique.
 8003a3a:	4b23      	ldr	r3, [pc, #140]	; (8003ac8 <configStepMotor1+0x168>)
 8003a3c:	ed93 6b00 	vldr	d6, [r3]
 8003a40:	4b22      	ldr	r3, [pc, #136]	; (8003acc <configStepMotor1+0x16c>)
 8003a42:	681b      	ldr	r3, [r3, #0]
 8003a44:	ee07 3a90 	vmov	s15, r3
 8003a48:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8003a4c:	ee36 6b47 	vsub.f64	d6, d6, d7
 8003a50:	4b1f      	ldr	r3, [pc, #124]	; (8003ad0 <configStepMotor1+0x170>)
 8003a52:	ed93 7b00 	vldr	d7, [r3]
 8003a56:	ee36 7b07 	vadd.f64	d7, d6, d7
 8003a5a:	4b1d      	ldr	r3, [pc, #116]	; (8003ad0 <configStepMotor1+0x170>)
 8003a5c:	ed83 7b00 	vstr	d7, [r3]
	if (remanente1 >= 1) {
 8003a60:	4b1b      	ldr	r3, [pc, #108]	; (8003ad0 <configStepMotor1+0x170>)
 8003a62:	ed93 7b00 	vldr	d7, [r3]
 8003a66:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8003a6a:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8003a6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a72:	da00      	bge.n	8003a76 <configStepMotor1+0x116>
		remanente1 = remanente1 - 1;
		numStep1 = numStep1 + 1;
	}
}
 8003a74:	e00e      	b.n	8003a94 <configStepMotor1+0x134>
		remanente1 = remanente1 - 1;
 8003a76:	4b16      	ldr	r3, [pc, #88]	; (8003ad0 <configStepMotor1+0x170>)
 8003a78:	ed93 7b00 	vldr	d7, [r3]
 8003a7c:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8003a80:	ee37 7b46 	vsub.f64	d7, d7, d6
 8003a84:	4b12      	ldr	r3, [pc, #72]	; (8003ad0 <configStepMotor1+0x170>)
 8003a86:	ed83 7b00 	vstr	d7, [r3]
		numStep1 = numStep1 + 1;
 8003a8a:	4b10      	ldr	r3, [pc, #64]	; (8003acc <configStepMotor1+0x16c>)
 8003a8c:	681b      	ldr	r3, [r3, #0]
 8003a8e:	3301      	adds	r3, #1
 8003a90:	4a0e      	ldr	r2, [pc, #56]	; (8003acc <configStepMotor1+0x16c>)
 8003a92:	6013      	str	r3, [r2, #0]
}
 8003a94:	bf00      	nop
 8003a96:	3710      	adds	r7, #16
 8003a98:	46bd      	mov	sp, r7
 8003a9a:	bd80      	pop	{r7, pc}
 8003a9c:	f3af 8000 	nop.w
 8003aa0:	00000000 	.word	0x00000000
 8003aa4:	40bf4000 	.word	0x40bf4000
 8003aa8:	00000000 	.word	0x00000000
 8003aac:	40768000 	.word	0x40768000
 8003ab0:	24000640 	.word	0x24000640
 8003ab4:	240007f8 	.word	0x240007f8
 8003ab8:	58021000 	.word	0x58021000
 8003abc:	240007a0 	.word	0x240007a0
 8003ac0:	3ff00000 	.word	0x3ff00000
 8003ac4:	58020800 	.word	0x58020800
 8003ac8:	24000810 	.word	0x24000810
 8003acc:	2400064c 	.word	0x2400064c
 8003ad0:	24000828 	.word	0x24000828
 8003ad4:	00000000 	.word	0x00000000

08003ad8 <configStepMotor2>:

void configStepMotor2(double angulo) {
 8003ad8:	b580      	push	{r7, lr}
 8003ada:	b084      	sub	sp, #16
 8003adc:	af00      	add	r7, sp, #0
 8003ade:	ed87 0b00 	vstr	d0, [r7]
	double anguloDif;
	pMotor2 = 0;
 8003ae2:	4b51      	ldr	r3, [pc, #324]	; (8003c28 <configStepMotor2+0x150>)
 8003ae4:	2200      	movs	r2, #0
 8003ae6:	601a      	str	r2, [r3, #0]
	if (angulo >= anguloActual2) {
 8003ae8:	4b50      	ldr	r3, [pc, #320]	; (8003c2c <configStepMotor2+0x154>)
 8003aea:	ed93 7b00 	vldr	d7, [r3]
 8003aee:	ed97 6b00 	vldr	d6, [r7]
 8003af2:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8003af6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003afa:	db22      	blt.n	8003b42 <configStepMotor2+0x6a>
		if(ES2i_PRESSED){
 8003afc:	2108      	movs	r1, #8
 8003afe:	484c      	ldr	r0, [pc, #304]	; (8003c30 <configStepMotor2+0x158>)
 8003b00:	f004 f9e8 	bl	8007ed4 <HAL_GPIO_ReadPin>
 8003b04:	4603      	mov	r3, r0
 8003b06:	2b00      	cmp	r3, #0
 8003b08:	d106      	bne.n	8003b18 <configStepMotor2+0x40>
			flagErrorEndStop = 1;
 8003b0a:	494a      	ldr	r1, [pc, #296]	; (8003c34 <configStepMotor2+0x15c>)
 8003b0c:	f04f 0200 	mov.w	r2, #0
 8003b10:	4b49      	ldr	r3, [pc, #292]	; (8003c38 <configStepMotor2+0x160>)
 8003b12:	e9c1 2300 	strd	r2, r3, [r1]
 8003b16:	e036      	b.n	8003b86 <configStepMotor2+0xae>
		} else {
			anguloDif = angulo - anguloActual2;	//Calculo cuantos grados se tiene que mover.
 8003b18:	4b44      	ldr	r3, [pc, #272]	; (8003c2c <configStepMotor2+0x154>)
 8003b1a:	ed93 7b00 	vldr	d7, [r3]
 8003b1e:	ed97 6b00 	vldr	d6, [r7]
 8003b22:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003b26:	ed87 7b02 	vstr	d7, [r7, #8]
			anguloActual2 = angulo;
 8003b2a:	4940      	ldr	r1, [pc, #256]	; (8003c2c <configStepMotor2+0x154>)
 8003b2c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003b30:	e9c1 2300 	strd	r2, r3, [r1]
			HAL_GPIO_WritePin(S_DirPaP2_GPIO_Port, S_DirPaP2_Pin, GPIO_PIN_SET); // VERIFICAR SENTIDO DE GIRO
 8003b34:	2201      	movs	r2, #1
 8003b36:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003b3a:	4840      	ldr	r0, [pc, #256]	; (8003c3c <configStepMotor2+0x164>)
 8003b3c:	f004 f9e2 	bl	8007f04 <HAL_GPIO_WritePin>
 8003b40:	e021      	b.n	8003b86 <configStepMotor2+0xae>
		}
	} else {
		if(ES2s_PRESSED){
 8003b42:	2104      	movs	r1, #4
 8003b44:	483a      	ldr	r0, [pc, #232]	; (8003c30 <configStepMotor2+0x158>)
 8003b46:	f004 f9c5 	bl	8007ed4 <HAL_GPIO_ReadPin>
 8003b4a:	4603      	mov	r3, r0
 8003b4c:	2b00      	cmp	r3, #0
 8003b4e:	d106      	bne.n	8003b5e <configStepMotor2+0x86>
			flagErrorEndStop = 1;
 8003b50:	4938      	ldr	r1, [pc, #224]	; (8003c34 <configStepMotor2+0x15c>)
 8003b52:	f04f 0200 	mov.w	r2, #0
 8003b56:	4b38      	ldr	r3, [pc, #224]	; (8003c38 <configStepMotor2+0x160>)
 8003b58:	e9c1 2300 	strd	r2, r3, [r1]
 8003b5c:	e013      	b.n	8003b86 <configStepMotor2+0xae>
		} else {
			anguloDif = anguloActual2 - angulo;	//Calculo cuantos grados se tiene que mover.
 8003b5e:	4b33      	ldr	r3, [pc, #204]	; (8003c2c <configStepMotor2+0x154>)
 8003b60:	ed93 6b00 	vldr	d6, [r3]
 8003b64:	ed97 7b00 	vldr	d7, [r7]
 8003b68:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003b6c:	ed87 7b02 	vstr	d7, [r7, #8]
			anguloActual2 = angulo;
 8003b70:	492e      	ldr	r1, [pc, #184]	; (8003c2c <configStepMotor2+0x154>)
 8003b72:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003b76:	e9c1 2300 	strd	r2, r3, [r1]
			HAL_GPIO_WritePin(S_DirPaP2_GPIO_Port, S_DirPaP2_Pin, GPIO_PIN_RESET); // VERIFICAR SENTIDO DE GIRO
 8003b7a:	2200      	movs	r2, #0
 8003b7c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003b80:	482e      	ldr	r0, [pc, #184]	; (8003c3c <configStepMotor2+0x164>)
 8003b82:	f004 f9bf 	bl	8007f04 <HAL_GPIO_WritePin>
		}

	}
	// Calculo el error de posicion por casteo a int, y cuando supera la unidad lo compenzo------
	calculoStep2 = (anguloDif * STEPREV) / 360; // Almaceno el remante de los numeros de pasos y
 8003b86:	ed97 7b02 	vldr	d7, [r7, #8]
 8003b8a:	ed9f 6b23 	vldr	d6, [pc, #140]	; 8003c18 <configStepMotor2+0x140>
 8003b8e:	ee27 6b06 	vmul.f64	d6, d7, d6
 8003b92:	ed9f 5b23 	vldr	d5, [pc, #140]	; 8003c20 <configStepMotor2+0x148>
 8003b96:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8003b9a:	4b29      	ldr	r3, [pc, #164]	; (8003c40 <configStepMotor2+0x168>)
 8003b9c:	ed83 7b00 	vstr	d7, [r3]
	numStep2 = (uint32_t) calculoStep2;	// cuando pasa la unidad lo sumo al numero de pasos para
 8003ba0:	4b27      	ldr	r3, [pc, #156]	; (8003c40 <configStepMotor2+0x168>)
 8003ba2:	ed93 7b00 	vldr	d7, [r3]
 8003ba6:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8003baa:	ee17 2a90 	vmov	r2, s15
 8003bae:	4b25      	ldr	r3, [pc, #148]	; (8003c44 <configStepMotor2+0x16c>)
 8003bb0:	601a      	str	r2, [r3, #0]
	remanente2 = remanente2 + (calculoStep2 - numStep2);// que el error no se amplifique.
 8003bb2:	4b23      	ldr	r3, [pc, #140]	; (8003c40 <configStepMotor2+0x168>)
 8003bb4:	ed93 6b00 	vldr	d6, [r3]
 8003bb8:	4b22      	ldr	r3, [pc, #136]	; (8003c44 <configStepMotor2+0x16c>)
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	ee07 3a90 	vmov	s15, r3
 8003bc0:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8003bc4:	ee36 6b47 	vsub.f64	d6, d6, d7
 8003bc8:	4b1f      	ldr	r3, [pc, #124]	; (8003c48 <configStepMotor2+0x170>)
 8003bca:	ed93 7b00 	vldr	d7, [r3]
 8003bce:	ee36 7b07 	vadd.f64	d7, d6, d7
 8003bd2:	4b1d      	ldr	r3, [pc, #116]	; (8003c48 <configStepMotor2+0x170>)
 8003bd4:	ed83 7b00 	vstr	d7, [r3]
	if (remanente2 >= 1) {
 8003bd8:	4b1b      	ldr	r3, [pc, #108]	; (8003c48 <configStepMotor2+0x170>)
 8003bda:	ed93 7b00 	vldr	d7, [r3]
 8003bde:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8003be2:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8003be6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003bea:	da00      	bge.n	8003bee <configStepMotor2+0x116>
		remanente2 = remanente2 - 1;
		numStep2 = numStep2 + 1;
	}
}
 8003bec:	e00e      	b.n	8003c0c <configStepMotor2+0x134>
		remanente2 = remanente2 - 1;
 8003bee:	4b16      	ldr	r3, [pc, #88]	; (8003c48 <configStepMotor2+0x170>)
 8003bf0:	ed93 7b00 	vldr	d7, [r3]
 8003bf4:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8003bf8:	ee37 7b46 	vsub.f64	d7, d7, d6
 8003bfc:	4b12      	ldr	r3, [pc, #72]	; (8003c48 <configStepMotor2+0x170>)
 8003bfe:	ed83 7b00 	vstr	d7, [r3]
		numStep2 = numStep2 + 1;
 8003c02:	4b10      	ldr	r3, [pc, #64]	; (8003c44 <configStepMotor2+0x16c>)
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	3301      	adds	r3, #1
 8003c08:	4a0e      	ldr	r2, [pc, #56]	; (8003c44 <configStepMotor2+0x16c>)
 8003c0a:	6013      	str	r3, [r2, #0]
}
 8003c0c:	bf00      	nop
 8003c0e:	3710      	adds	r7, #16
 8003c10:	46bd      	mov	sp, r7
 8003c12:	bd80      	pop	{r7, pc}
 8003c14:	f3af 8000 	nop.w
 8003c18:	00000000 	.word	0x00000000
 8003c1c:	40bf4000 	.word	0x40bf4000
 8003c20:	00000000 	.word	0x00000000
 8003c24:	40768000 	.word	0x40768000
 8003c28:	24000644 	.word	0x24000644
 8003c2c:	24000800 	.word	0x24000800
 8003c30:	58021000 	.word	0x58021000
 8003c34:	240007a0 	.word	0x240007a0
 8003c38:	3ff00000 	.word	0x3ff00000
 8003c3c:	58020800 	.word	0x58020800
 8003c40:	24000818 	.word	0x24000818
 8003c44:	24000650 	.word	0x24000650
 8003c48:	24000830 	.word	0x24000830
 8003c4c:	00000000 	.word	0x00000000

08003c50 <configStepMotor3>:

void configStepMotor3(double angulo) {
 8003c50:	b580      	push	{r7, lr}
 8003c52:	b084      	sub	sp, #16
 8003c54:	af00      	add	r7, sp, #0
 8003c56:	ed87 0b00 	vstr	d0, [r7]
	double anguloDif;
	pMotor3 = 0;
 8003c5a:	4b51      	ldr	r3, [pc, #324]	; (8003da0 <configStepMotor3+0x150>)
 8003c5c:	2200      	movs	r2, #0
 8003c5e:	601a      	str	r2, [r3, #0]
	if (angulo >= anguloActual3) {
 8003c60:	4b50      	ldr	r3, [pc, #320]	; (8003da4 <configStepMotor3+0x154>)
 8003c62:	ed93 7b00 	vldr	d7, [r3]
 8003c66:	ed97 6b00 	vldr	d6, [r7]
 8003c6a:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8003c6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003c72:	db22      	blt.n	8003cba <configStepMotor3+0x6a>
		if(ES3i_PRESSED){
 8003c74:	2120      	movs	r1, #32
 8003c76:	484c      	ldr	r0, [pc, #304]	; (8003da8 <configStepMotor3+0x158>)
 8003c78:	f004 f92c 	bl	8007ed4 <HAL_GPIO_ReadPin>
 8003c7c:	4603      	mov	r3, r0
 8003c7e:	2b00      	cmp	r3, #0
 8003c80:	d106      	bne.n	8003c90 <configStepMotor3+0x40>
			flagErrorEndStop = 1;
 8003c82:	494a      	ldr	r1, [pc, #296]	; (8003dac <configStepMotor3+0x15c>)
 8003c84:	f04f 0200 	mov.w	r2, #0
 8003c88:	4b49      	ldr	r3, [pc, #292]	; (8003db0 <configStepMotor3+0x160>)
 8003c8a:	e9c1 2300 	strd	r2, r3, [r1]
 8003c8e:	e036      	b.n	8003cfe <configStepMotor3+0xae>
		} else {
			anguloDif = angulo - anguloActual3;	//Calculo cuantos grados se tiene que mover.
 8003c90:	4b44      	ldr	r3, [pc, #272]	; (8003da4 <configStepMotor3+0x154>)
 8003c92:	ed93 7b00 	vldr	d7, [r3]
 8003c96:	ed97 6b00 	vldr	d6, [r7]
 8003c9a:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003c9e:	ed87 7b02 	vstr	d7, [r7, #8]
			anguloActual3 = angulo;
 8003ca2:	4940      	ldr	r1, [pc, #256]	; (8003da4 <configStepMotor3+0x154>)
 8003ca4:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003ca8:	e9c1 2300 	strd	r2, r3, [r1]
			HAL_GPIO_WritePin(S_DirPaP3_GPIO_Port, S_DirPaP3_Pin, GPIO_PIN_SET); // Brazo Baja (Antihorario)
 8003cac:	2201      	movs	r2, #1
 8003cae:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003cb2:	4840      	ldr	r0, [pc, #256]	; (8003db4 <configStepMotor3+0x164>)
 8003cb4:	f004 f926 	bl	8007f04 <HAL_GPIO_WritePin>
 8003cb8:	e021      	b.n	8003cfe <configStepMotor3+0xae>
		}
	} else {
		if(ES3s_PRESSED){
 8003cba:	2110      	movs	r1, #16
 8003cbc:	483a      	ldr	r0, [pc, #232]	; (8003da8 <configStepMotor3+0x158>)
 8003cbe:	f004 f909 	bl	8007ed4 <HAL_GPIO_ReadPin>
 8003cc2:	4603      	mov	r3, r0
 8003cc4:	2b00      	cmp	r3, #0
 8003cc6:	d106      	bne.n	8003cd6 <configStepMotor3+0x86>
			flagErrorEndStop = 1;
 8003cc8:	4938      	ldr	r1, [pc, #224]	; (8003dac <configStepMotor3+0x15c>)
 8003cca:	f04f 0200 	mov.w	r2, #0
 8003cce:	4b38      	ldr	r3, [pc, #224]	; (8003db0 <configStepMotor3+0x160>)
 8003cd0:	e9c1 2300 	strd	r2, r3, [r1]
 8003cd4:	e013      	b.n	8003cfe <configStepMotor3+0xae>
		} else {
			anguloDif = anguloActual3 - angulo;	//Calculo cuantos grados se tiene que mover.
 8003cd6:	4b33      	ldr	r3, [pc, #204]	; (8003da4 <configStepMotor3+0x154>)
 8003cd8:	ed93 6b00 	vldr	d6, [r3]
 8003cdc:	ed97 7b00 	vldr	d7, [r7]
 8003ce0:	ee36 7b47 	vsub.f64	d7, d6, d7
 8003ce4:	ed87 7b02 	vstr	d7, [r7, #8]
			anguloActual3 = angulo;
 8003ce8:	492e      	ldr	r1, [pc, #184]	; (8003da4 <configStepMotor3+0x154>)
 8003cea:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003cee:	e9c1 2300 	strd	r2, r3, [r1]
			HAL_GPIO_WritePin(S_DirPaP3_GPIO_Port, S_DirPaP3_Pin, GPIO_PIN_RESET); // Brazo Sube (Horario)
 8003cf2:	2200      	movs	r2, #0
 8003cf4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003cf8:	482e      	ldr	r0, [pc, #184]	; (8003db4 <configStepMotor3+0x164>)
 8003cfa:	f004 f903 	bl	8007f04 <HAL_GPIO_WritePin>
		}
	}
	// Calculo el error de posicion por casteo a int, y cuando supera la unidad lo compenzo------
	calculoStep3 = (anguloDif * STEPREV) / 360; // Almaceno el remante de los numeros de pasos y
 8003cfe:	ed97 7b02 	vldr	d7, [r7, #8]
 8003d02:	ed9f 6b23 	vldr	d6, [pc, #140]	; 8003d90 <configStepMotor3+0x140>
 8003d06:	ee27 6b06 	vmul.f64	d6, d7, d6
 8003d0a:	ed9f 5b23 	vldr	d5, [pc, #140]	; 8003d98 <configStepMotor3+0x148>
 8003d0e:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8003d12:	4b29      	ldr	r3, [pc, #164]	; (8003db8 <configStepMotor3+0x168>)
 8003d14:	ed83 7b00 	vstr	d7, [r3]
	numStep3 = (uint32_t) calculoStep3;	// cuando pasa la unidad lo sumo al numero de pasos para
 8003d18:	4b27      	ldr	r3, [pc, #156]	; (8003db8 <configStepMotor3+0x168>)
 8003d1a:	ed93 7b00 	vldr	d7, [r3]
 8003d1e:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8003d22:	ee17 2a90 	vmov	r2, s15
 8003d26:	4b25      	ldr	r3, [pc, #148]	; (8003dbc <configStepMotor3+0x16c>)
 8003d28:	601a      	str	r2, [r3, #0]
	remanente3 = remanente3 + (calculoStep3 - numStep3);// que el error no se amplifique.
 8003d2a:	4b23      	ldr	r3, [pc, #140]	; (8003db8 <configStepMotor3+0x168>)
 8003d2c:	ed93 6b00 	vldr	d6, [r3]
 8003d30:	4b22      	ldr	r3, [pc, #136]	; (8003dbc <configStepMotor3+0x16c>)
 8003d32:	681b      	ldr	r3, [r3, #0]
 8003d34:	ee07 3a90 	vmov	s15, r3
 8003d38:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8003d3c:	ee36 6b47 	vsub.f64	d6, d6, d7
 8003d40:	4b1f      	ldr	r3, [pc, #124]	; (8003dc0 <configStepMotor3+0x170>)
 8003d42:	ed93 7b00 	vldr	d7, [r3]
 8003d46:	ee36 7b07 	vadd.f64	d7, d6, d7
 8003d4a:	4b1d      	ldr	r3, [pc, #116]	; (8003dc0 <configStepMotor3+0x170>)
 8003d4c:	ed83 7b00 	vstr	d7, [r3]
	if (remanente3 >= 1) {
 8003d50:	4b1b      	ldr	r3, [pc, #108]	; (8003dc0 <configStepMotor3+0x170>)
 8003d52:	ed93 7b00 	vldr	d7, [r3]
 8003d56:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8003d5a:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8003d5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003d62:	da00      	bge.n	8003d66 <configStepMotor3+0x116>
		remanente3 = remanente3 - 1;
		numStep3 = numStep3 + 1;
	}
}
 8003d64:	e00e      	b.n	8003d84 <configStepMotor3+0x134>
		remanente3 = remanente3 - 1;
 8003d66:	4b16      	ldr	r3, [pc, #88]	; (8003dc0 <configStepMotor3+0x170>)
 8003d68:	ed93 7b00 	vldr	d7, [r3]
 8003d6c:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8003d70:	ee37 7b46 	vsub.f64	d7, d7, d6
 8003d74:	4b12      	ldr	r3, [pc, #72]	; (8003dc0 <configStepMotor3+0x170>)
 8003d76:	ed83 7b00 	vstr	d7, [r3]
		numStep3 = numStep3 + 1;
 8003d7a:	4b10      	ldr	r3, [pc, #64]	; (8003dbc <configStepMotor3+0x16c>)
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	3301      	adds	r3, #1
 8003d80:	4a0e      	ldr	r2, [pc, #56]	; (8003dbc <configStepMotor3+0x16c>)
 8003d82:	6013      	str	r3, [r2, #0]
}
 8003d84:	bf00      	nop
 8003d86:	3710      	adds	r7, #16
 8003d88:	46bd      	mov	sp, r7
 8003d8a:	bd80      	pop	{r7, pc}
 8003d8c:	f3af 8000 	nop.w
 8003d90:	00000000 	.word	0x00000000
 8003d94:	40bf4000 	.word	0x40bf4000
 8003d98:	00000000 	.word	0x00000000
 8003d9c:	40768000 	.word	0x40768000
 8003da0:	24000648 	.word	0x24000648
 8003da4:	24000808 	.word	0x24000808
 8003da8:	58021000 	.word	0x58021000
 8003dac:	240007a0 	.word	0x240007a0
 8003db0:	3ff00000 	.word	0x3ff00000
 8003db4:	58020800 	.word	0x58020800
 8003db8:	24000820 	.word	0x24000820
 8003dbc:	24000654 	.word	0x24000654
 8003dc0:	24000838 	.word	0x24000838

08003dc4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8003dc4:	b580      	push	{r7, lr}
 8003dc6:	b082      	sub	sp, #8
 8003dc8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003dca:	4b0f      	ldr	r3, [pc, #60]	; (8003e08 <HAL_MspInit+0x44>)
 8003dcc:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8003dd0:	4a0d      	ldr	r2, [pc, #52]	; (8003e08 <HAL_MspInit+0x44>)
 8003dd2:	f043 0302 	orr.w	r3, r3, #2
 8003dd6:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8003dda:	4b0b      	ldr	r3, [pc, #44]	; (8003e08 <HAL_MspInit+0x44>)
 8003ddc:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8003de0:	f003 0302 	and.w	r3, r3, #2
 8003de4:	607b      	str	r3, [r7, #4]
 8003de6:	687b      	ldr	r3, [r7, #4]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_2);
 8003de8:	2005      	movs	r0, #5
 8003dea:	f003 f911 	bl	8007010 <HAL_NVIC_SetPriorityGrouping>

  /* System interrupt init*/

  /* Peripheral interrupt init */
  /* FPU_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(FPU_IRQn, 1, 0);
 8003dee:	2200      	movs	r2, #0
 8003df0:	2101      	movs	r1, #1
 8003df2:	2051      	movs	r0, #81	; 0x51
 8003df4:	f003 f917 	bl	8007026 <HAL_NVIC_SetPriority>
  /* FPU_IRQn interrupt configuration */
  HAL_NVIC_EnableIRQ(FPU_IRQn);
 8003df8:	2051      	movs	r0, #81	; 0x51
 8003dfa:	f003 f92e 	bl	800705a <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8003dfe:	bf00      	nop
 8003e00:	3708      	adds	r7, #8
 8003e02:	46bd      	mov	sp, r7
 8003e04:	bd80      	pop	{r7, pc}
 8003e06:	bf00      	nop
 8003e08:	58024400 	.word	0x58024400

08003e0c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8003e0c:	b480      	push	{r7}
 8003e0e:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8003e10:	bf00      	nop
 8003e12:	46bd      	mov	sp, r7
 8003e14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e18:	4770      	bx	lr

08003e1a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003e1a:	b480      	push	{r7}
 8003e1c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8003e1e:	e7fe      	b.n	8003e1e <HardFault_Handler+0x4>

08003e20 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8003e20:	b480      	push	{r7}
 8003e22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8003e24:	e7fe      	b.n	8003e24 <MemManage_Handler+0x4>

08003e26 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8003e26:	b480      	push	{r7}
 8003e28:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8003e2a:	e7fe      	b.n	8003e2a <BusFault_Handler+0x4>

08003e2c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8003e2c:	b480      	push	{r7}
 8003e2e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8003e30:	e7fe      	b.n	8003e30 <UsageFault_Handler+0x4>

08003e32 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8003e32:	b480      	push	{r7}
 8003e34:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8003e36:	bf00      	nop
 8003e38:	46bd      	mov	sp, r7
 8003e3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e3e:	4770      	bx	lr

08003e40 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8003e40:	b480      	push	{r7}
 8003e42:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8003e44:	bf00      	nop
 8003e46:	46bd      	mov	sp, r7
 8003e48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e4c:	4770      	bx	lr

08003e4e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8003e4e:	b480      	push	{r7}
 8003e50:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8003e52:	bf00      	nop
 8003e54:	46bd      	mov	sp, r7
 8003e56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e5a:	4770      	bx	lr

08003e5c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8003e5c:	b580      	push	{r7, lr}
 8003e5e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003e60:	f002 ff92 	bl	8006d88 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8003e64:	bf00      	nop
 8003e66:	bd80      	pop	{r7, pc}

08003e68 <EXTI0_IRQHandler>:

/**
  * @brief This function handles EXTI line0 interrupt.
  */
void EXTI0_IRQHandler(void)
{
 8003e68:	b580      	push	{r7, lr}
 8003e6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI0_IRQn 0 */

  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(E_EndStop1_Sup_Pin);
 8003e6c:	2001      	movs	r0, #1
 8003e6e:	f004 f862 	bl	8007f36 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_IRQn 1 */

  /* USER CODE END EXTI0_IRQn 1 */
}
 8003e72:	bf00      	nop
 8003e74:	bd80      	pop	{r7, pc}

08003e76 <EXTI1_IRQHandler>:

/**
  * @brief This function handles EXTI line1 interrupt.
  */
void EXTI1_IRQHandler(void)
{
 8003e76:	b580      	push	{r7, lr}
 8003e78:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI1_IRQn 0 */

  /* USER CODE END EXTI1_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(E_EndStop1_Inf_Pin);
 8003e7a:	2002      	movs	r0, #2
 8003e7c:	f004 f85b 	bl	8007f36 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI1_IRQn 1 */

  /* USER CODE END EXTI1_IRQn 1 */
}
 8003e80:	bf00      	nop
 8003e82:	bd80      	pop	{r7, pc}

08003e84 <EXTI2_IRQHandler>:

/**
  * @brief This function handles EXTI line2 interrupt.
  */
void EXTI2_IRQHandler(void)
{
 8003e84:	b580      	push	{r7, lr}
 8003e86:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI2_IRQn 0 */

  /* USER CODE END EXTI2_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(E_EndStop2_Sup_Pin);
 8003e88:	2004      	movs	r0, #4
 8003e8a:	f004 f854 	bl	8007f36 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI2_IRQn 1 */

  /* USER CODE END EXTI2_IRQn 1 */
}
 8003e8e:	bf00      	nop
 8003e90:	bd80      	pop	{r7, pc}

08003e92 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8003e92:	b580      	push	{r7, lr}
 8003e94:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(E_EndStop2_Inf_Pin);
 8003e96:	2008      	movs	r0, #8
 8003e98:	f004 f84d 	bl	8007f36 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8003e9c:	bf00      	nop
 8003e9e:	bd80      	pop	{r7, pc}

08003ea0 <EXTI4_IRQHandler>:

/**
  * @brief This function handles EXTI line4 interrupt.
  */
void EXTI4_IRQHandler(void)
{
 8003ea0:	b580      	push	{r7, lr}
 8003ea2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_IRQn 0 */

  /* USER CODE END EXTI4_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(E_EndStop3_Sup_Pin);
 8003ea4:	2010      	movs	r0, #16
 8003ea6:	f004 f846 	bl	8007f36 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_IRQn 1 */

  /* USER CODE END EXTI4_IRQn 1 */
}
 8003eaa:	bf00      	nop
 8003eac:	bd80      	pop	{r7, pc}

08003eae <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8003eae:	b580      	push	{r7, lr}
 8003eb0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(E_EndStop3_Inf_Pin);
 8003eb2:	2020      	movs	r0, #32
 8003eb4:	f004 f83f 	bl	8007f36 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8003eb8:	bf00      	nop
 8003eba:	bd80      	pop	{r7, pc}

08003ebc <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8003ebc:	b580      	push	{r7, lr}
 8003ebe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8003ec0:	4802      	ldr	r0, [pc, #8]	; (8003ecc <TIM2_IRQHandler+0x10>)
 8003ec2:	f007 f9bb 	bl	800b23c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8003ec6:	bf00      	nop
 8003ec8:	bd80      	pop	{r7, pc}
 8003eca:	bf00      	nop
 8003ecc:	24000844 	.word	0x24000844

08003ed0 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8003ed0:	b580      	push	{r7, lr}
 8003ed2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8003ed4:	4802      	ldr	r0, [pc, #8]	; (8003ee0 <TIM3_IRQHandler+0x10>)
 8003ed6:	f007 f9b1 	bl	800b23c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8003eda:	bf00      	nop
 8003edc:	bd80      	pop	{r7, pc}
 8003ede:	bf00      	nop
 8003ee0:	24000890 	.word	0x24000890

08003ee4 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8003ee4:	b580      	push	{r7, lr}
 8003ee6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8003ee8:	4802      	ldr	r0, [pc, #8]	; (8003ef4 <TIM4_IRQHandler+0x10>)
 8003eea:	f007 f9a7 	bl	800b23c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8003eee:	bf00      	nop
 8003ef0:	bd80      	pop	{r7, pc}
 8003ef2:	bf00      	nop
 8003ef4:	240008dc 	.word	0x240008dc

08003ef8 <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
 8003ef8:	b580      	push	{r7, lr}
 8003efa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 8003efc:	4802      	ldr	r0, [pc, #8]	; (8003f08 <USART3_IRQHandler+0x10>)
 8003efe:	f008 fcc9 	bl	800c894 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 8003f02:	bf00      	nop
 8003f04:	bd80      	pop	{r7, pc}
 8003f06:	bf00      	nop
 8003f08:	24000bfc 	.word	0x24000bfc

08003f0c <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 8003f0c:	b580      	push	{r7, lr}
 8003f0e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(BUTTON_Pin);
 8003f10:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8003f14:	f004 f80f 	bl	8007f36 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8003f18:	bf00      	nop
 8003f1a:	bd80      	pop	{r7, pc}

08003f1c <FPU_IRQHandler>:

/**
  * @brief This function handles FPU global interrupt.
  */
void FPU_IRQHandler(void)
{
 8003f1c:	b480      	push	{r7}
 8003f1e:	af00      	add	r7, sp, #0

  /* USER CODE END FPU_IRQn 0 */
  /* USER CODE BEGIN FPU_IRQn 1 */

  /* USER CODE END FPU_IRQn 1 */
}
 8003f20:	bf00      	nop
 8003f22:	46bd      	mov	sp, r7
 8003f24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f28:	4770      	bx	lr
	...

08003f2c <TIM15_IRQHandler>:

/**
  * @brief This function handles TIM15 global interrupt.
  */
void TIM15_IRQHandler(void)
{
 8003f2c:	b580      	push	{r7, lr}
 8003f2e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM15_IRQn 0 */

  /* USER CODE END TIM15_IRQn 0 */
  HAL_TIM_IRQHandler(&htim15);
 8003f30:	4802      	ldr	r0, [pc, #8]	; (8003f3c <TIM15_IRQHandler+0x10>)
 8003f32:	f007 f983 	bl	800b23c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM15_IRQn 1 */

  /* USER CODE END TIM15_IRQn 1 */
}
 8003f36:	bf00      	nop
 8003f38:	bd80      	pop	{r7, pc}
 8003f3a:	bf00      	nop
 8003f3c:	24000a58 	.word	0x24000a58

08003f40 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8003f40:	b480      	push	{r7}
 8003f42:	af00      	add	r7, sp, #0
	return 1;
 8003f44:	2301      	movs	r3, #1
}
 8003f46:	4618      	mov	r0, r3
 8003f48:	46bd      	mov	sp, r7
 8003f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f4e:	4770      	bx	lr

08003f50 <_kill>:

int _kill(int pid, int sig)
{
 8003f50:	b580      	push	{r7, lr}
 8003f52:	b082      	sub	sp, #8
 8003f54:	af00      	add	r7, sp, #0
 8003f56:	6078      	str	r0, [r7, #4]
 8003f58:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8003f5a:	f00a febd 	bl	800ecd8 <__errno>
 8003f5e:	4603      	mov	r3, r0
 8003f60:	2216      	movs	r2, #22
 8003f62:	601a      	str	r2, [r3, #0]
	return -1;
 8003f64:	f04f 33ff 	mov.w	r3, #4294967295
}
 8003f68:	4618      	mov	r0, r3
 8003f6a:	3708      	adds	r7, #8
 8003f6c:	46bd      	mov	sp, r7
 8003f6e:	bd80      	pop	{r7, pc}

08003f70 <_exit>:

void _exit (int status)
{
 8003f70:	b580      	push	{r7, lr}
 8003f72:	b082      	sub	sp, #8
 8003f74:	af00      	add	r7, sp, #0
 8003f76:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8003f78:	f04f 31ff 	mov.w	r1, #4294967295
 8003f7c:	6878      	ldr	r0, [r7, #4]
 8003f7e:	f7ff ffe7 	bl	8003f50 <_kill>
	while (1) {}		/* Make sure we hang here */
 8003f82:	e7fe      	b.n	8003f82 <_exit+0x12>

08003f84 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8003f84:	b580      	push	{r7, lr}
 8003f86:	b086      	sub	sp, #24
 8003f88:	af00      	add	r7, sp, #0
 8003f8a:	60f8      	str	r0, [r7, #12]
 8003f8c:	60b9      	str	r1, [r7, #8]
 8003f8e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003f90:	2300      	movs	r3, #0
 8003f92:	617b      	str	r3, [r7, #20]
 8003f94:	e00a      	b.n	8003fac <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8003f96:	f3af 8000 	nop.w
 8003f9a:	4601      	mov	r1, r0
 8003f9c:	68bb      	ldr	r3, [r7, #8]
 8003f9e:	1c5a      	adds	r2, r3, #1
 8003fa0:	60ba      	str	r2, [r7, #8]
 8003fa2:	b2ca      	uxtb	r2, r1
 8003fa4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003fa6:	697b      	ldr	r3, [r7, #20]
 8003fa8:	3301      	adds	r3, #1
 8003faa:	617b      	str	r3, [r7, #20]
 8003fac:	697a      	ldr	r2, [r7, #20]
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	429a      	cmp	r2, r3
 8003fb2:	dbf0      	blt.n	8003f96 <_read+0x12>
	}

return len;
 8003fb4:	687b      	ldr	r3, [r7, #4]
}
 8003fb6:	4618      	mov	r0, r3
 8003fb8:	3718      	adds	r7, #24
 8003fba:	46bd      	mov	sp, r7
 8003fbc:	bd80      	pop	{r7, pc}

08003fbe <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8003fbe:	b580      	push	{r7, lr}
 8003fc0:	b086      	sub	sp, #24
 8003fc2:	af00      	add	r7, sp, #0
 8003fc4:	60f8      	str	r0, [r7, #12]
 8003fc6:	60b9      	str	r1, [r7, #8]
 8003fc8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003fca:	2300      	movs	r3, #0
 8003fcc:	617b      	str	r3, [r7, #20]
 8003fce:	e009      	b.n	8003fe4 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8003fd0:	68bb      	ldr	r3, [r7, #8]
 8003fd2:	1c5a      	adds	r2, r3, #1
 8003fd4:	60ba      	str	r2, [r7, #8]
 8003fd6:	781b      	ldrb	r3, [r3, #0]
 8003fd8:	4618      	mov	r0, r3
 8003fda:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003fde:	697b      	ldr	r3, [r7, #20]
 8003fe0:	3301      	adds	r3, #1
 8003fe2:	617b      	str	r3, [r7, #20]
 8003fe4:	697a      	ldr	r2, [r7, #20]
 8003fe6:	687b      	ldr	r3, [r7, #4]
 8003fe8:	429a      	cmp	r2, r3
 8003fea:	dbf1      	blt.n	8003fd0 <_write+0x12>
	}
	return len;
 8003fec:	687b      	ldr	r3, [r7, #4]
}
 8003fee:	4618      	mov	r0, r3
 8003ff0:	3718      	adds	r7, #24
 8003ff2:	46bd      	mov	sp, r7
 8003ff4:	bd80      	pop	{r7, pc}

08003ff6 <_close>:

int _close(int file)
{
 8003ff6:	b480      	push	{r7}
 8003ff8:	b083      	sub	sp, #12
 8003ffa:	af00      	add	r7, sp, #0
 8003ffc:	6078      	str	r0, [r7, #4]
	return -1;
 8003ffe:	f04f 33ff 	mov.w	r3, #4294967295
}
 8004002:	4618      	mov	r0, r3
 8004004:	370c      	adds	r7, #12
 8004006:	46bd      	mov	sp, r7
 8004008:	f85d 7b04 	ldr.w	r7, [sp], #4
 800400c:	4770      	bx	lr

0800400e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800400e:	b480      	push	{r7}
 8004010:	b083      	sub	sp, #12
 8004012:	af00      	add	r7, sp, #0
 8004014:	6078      	str	r0, [r7, #4]
 8004016:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8004018:	683b      	ldr	r3, [r7, #0]
 800401a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800401e:	605a      	str	r2, [r3, #4]
	return 0;
 8004020:	2300      	movs	r3, #0
}
 8004022:	4618      	mov	r0, r3
 8004024:	370c      	adds	r7, #12
 8004026:	46bd      	mov	sp, r7
 8004028:	f85d 7b04 	ldr.w	r7, [sp], #4
 800402c:	4770      	bx	lr

0800402e <_isatty>:

int _isatty(int file)
{
 800402e:	b480      	push	{r7}
 8004030:	b083      	sub	sp, #12
 8004032:	af00      	add	r7, sp, #0
 8004034:	6078      	str	r0, [r7, #4]
	return 1;
 8004036:	2301      	movs	r3, #1
}
 8004038:	4618      	mov	r0, r3
 800403a:	370c      	adds	r7, #12
 800403c:	46bd      	mov	sp, r7
 800403e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004042:	4770      	bx	lr

08004044 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8004044:	b480      	push	{r7}
 8004046:	b085      	sub	sp, #20
 8004048:	af00      	add	r7, sp, #0
 800404a:	60f8      	str	r0, [r7, #12]
 800404c:	60b9      	str	r1, [r7, #8]
 800404e:	607a      	str	r2, [r7, #4]
	return 0;
 8004050:	2300      	movs	r3, #0
}
 8004052:	4618      	mov	r0, r3
 8004054:	3714      	adds	r7, #20
 8004056:	46bd      	mov	sp, r7
 8004058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800405c:	4770      	bx	lr
	...

08004060 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8004060:	b580      	push	{r7, lr}
 8004062:	b084      	sub	sp, #16
 8004064:	af00      	add	r7, sp, #0
 8004066:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8004068:	4b11      	ldr	r3, [pc, #68]	; (80040b0 <_sbrk+0x50>)
 800406a:	681b      	ldr	r3, [r3, #0]
 800406c:	2b00      	cmp	r3, #0
 800406e:	d102      	bne.n	8004076 <_sbrk+0x16>
		heap_end = &end;
 8004070:	4b0f      	ldr	r3, [pc, #60]	; (80040b0 <_sbrk+0x50>)
 8004072:	4a10      	ldr	r2, [pc, #64]	; (80040b4 <_sbrk+0x54>)
 8004074:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 8004076:	4b0e      	ldr	r3, [pc, #56]	; (80040b0 <_sbrk+0x50>)
 8004078:	681b      	ldr	r3, [r3, #0]
 800407a:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 800407c:	4b0c      	ldr	r3, [pc, #48]	; (80040b0 <_sbrk+0x50>)
 800407e:	681a      	ldr	r2, [r3, #0]
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	4413      	add	r3, r2
 8004084:	466a      	mov	r2, sp
 8004086:	4293      	cmp	r3, r2
 8004088:	d907      	bls.n	800409a <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800408a:	f00a fe25 	bl	800ecd8 <__errno>
 800408e:	4603      	mov	r3, r0
 8004090:	220c      	movs	r2, #12
 8004092:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 8004094:	f04f 33ff 	mov.w	r3, #4294967295
 8004098:	e006      	b.n	80040a8 <_sbrk+0x48>
	}

	heap_end += incr;
 800409a:	4b05      	ldr	r3, [pc, #20]	; (80040b0 <_sbrk+0x50>)
 800409c:	681a      	ldr	r2, [r3, #0]
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	4413      	add	r3, r2
 80040a2:	4a03      	ldr	r2, [pc, #12]	; (80040b0 <_sbrk+0x50>)
 80040a4:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 80040a6:	68fb      	ldr	r3, [r7, #12]
}
 80040a8:	4618      	mov	r0, r3
 80040aa:	3710      	adds	r7, #16
 80040ac:	46bd      	mov	sp, r7
 80040ae:	bd80      	pop	{r7, pc}
 80040b0:	24000840 	.word	0x24000840
 80040b4:	24000ca0 	.word	0x24000ca0

080040b8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80040b8:	b480      	push	{r7}
 80040ba:	af00      	add	r7, sp, #0
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 80040bc:	4b29      	ldr	r3, [pc, #164]	; (8004164 <SystemInit+0xac>)
 80040be:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80040c2:	4a28      	ldr	r2, [pc, #160]	; (8004164 <SystemInit+0xac>)
 80040c4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80040c8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 80040cc:	4b26      	ldr	r3, [pc, #152]	; (8004168 <SystemInit+0xb0>)
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	4a25      	ldr	r2, [pc, #148]	; (8004168 <SystemInit+0xb0>)
 80040d2:	f043 0301 	orr.w	r3, r3, #1
 80040d6:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80040d8:	4b23      	ldr	r3, [pc, #140]	; (8004168 <SystemInit+0xb0>)
 80040da:	2200      	movs	r2, #0
 80040dc:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 80040de:	4b22      	ldr	r3, [pc, #136]	; (8004168 <SystemInit+0xb0>)
 80040e0:	681a      	ldr	r2, [r3, #0]
 80040e2:	4921      	ldr	r1, [pc, #132]	; (8004168 <SystemInit+0xb0>)
 80040e4:	4b21      	ldr	r3, [pc, #132]	; (800416c <SystemInit+0xb4>)
 80040e6:	4013      	ands	r3, r2
 80040e8:	600b      	str	r3, [r1, #0]

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 80040ea:	4b1f      	ldr	r3, [pc, #124]	; (8004168 <SystemInit+0xb0>)
 80040ec:	2200      	movs	r2, #0
 80040ee:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 80040f0:	4b1d      	ldr	r3, [pc, #116]	; (8004168 <SystemInit+0xb0>)
 80040f2:	2200      	movs	r2, #0
 80040f4:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 80040f6:	4b1c      	ldr	r3, [pc, #112]	; (8004168 <SystemInit+0xb0>)
 80040f8:	2200      	movs	r2, #0
 80040fa:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x00000000;
 80040fc:	4b1a      	ldr	r3, [pc, #104]	; (8004168 <SystemInit+0xb0>)
 80040fe:	2200      	movs	r2, #0
 8004100:	629a      	str	r2, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x00000000;
 8004102:	4b19      	ldr	r3, [pc, #100]	; (8004168 <SystemInit+0xb0>)
 8004104:	2200      	movs	r2, #0
 8004106:	62da      	str	r2, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x00000000;
 8004108:	4b17      	ldr	r3, [pc, #92]	; (8004168 <SystemInit+0xb0>)
 800410a:	2200      	movs	r2, #0
 800410c:	631a      	str	r2, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 800410e:	4b16      	ldr	r3, [pc, #88]	; (8004168 <SystemInit+0xb0>)
 8004110:	2200      	movs	r2, #0
 8004112:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x00000000;
 8004114:	4b14      	ldr	r3, [pc, #80]	; (8004168 <SystemInit+0xb0>)
 8004116:	2200      	movs	r2, #0
 8004118:	639a      	str	r2, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 800411a:	4b13      	ldr	r3, [pc, #76]	; (8004168 <SystemInit+0xb0>)
 800411c:	2200      	movs	r2, #0
 800411e:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x00000000;
 8004120:	4b11      	ldr	r3, [pc, #68]	; (8004168 <SystemInit+0xb0>)
 8004122:	2200      	movs	r2, #0
 8004124:	641a      	str	r2, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 8004126:	4b10      	ldr	r3, [pc, #64]	; (8004168 <SystemInit+0xb0>)
 8004128:	2200      	movs	r2, #0
 800412a:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 800412c:	4b0e      	ldr	r3, [pc, #56]	; (8004168 <SystemInit+0xb0>)
 800412e:	681b      	ldr	r3, [r3, #0]
 8004130:	4a0d      	ldr	r2, [pc, #52]	; (8004168 <SystemInit+0xb0>)
 8004132:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004136:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 8004138:	4b0b      	ldr	r3, [pc, #44]	; (8004168 <SystemInit+0xb0>)
 800413a:	2200      	movs	r2, #0
 800413c:	661a      	str	r2, [r3, #96]	; 0x60
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 800413e:	4b0c      	ldr	r3, [pc, #48]	; (8004170 <SystemInit+0xb8>)
 8004140:	681a      	ldr	r2, [r3, #0]
 8004142:	4b0c      	ldr	r3, [pc, #48]	; (8004174 <SystemInit+0xbc>)
 8004144:	4013      	ands	r3, r2
 8004146:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800414a:	d202      	bcs.n	8004152 <SystemInit+0x9a>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
 800414c:	4b0a      	ldr	r3, [pc, #40]	; (8004178 <SystemInit+0xc0>)
 800414e:	2201      	movs	r2, #1
 8004150:	601a      	str	r2, [r3, #0]

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#else
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8004152:	4b04      	ldr	r3, [pc, #16]	; (8004164 <SystemInit+0xac>)
 8004154:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004158:	609a      	str	r2, [r3, #8]
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
 800415a:	bf00      	nop
 800415c:	46bd      	mov	sp, r7
 800415e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004162:	4770      	bx	lr
 8004164:	e000ed00 	.word	0xe000ed00
 8004168:	58024400 	.word	0x58024400
 800416c:	eaf6ed7f 	.word	0xeaf6ed7f
 8004170:	5c001000 	.word	0x5c001000
 8004174:	ffff0000 	.word	0xffff0000
 8004178:	51008108 	.word	0x51008108

0800417c <MX_TIM2_Init>:
TIM_HandleTypeDef htim14;
TIM_HandleTypeDef htim15;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 800417c:	b580      	push	{r7, lr}
 800417e:	b08c      	sub	sp, #48	; 0x30
 8004180:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004182:	f107 0320 	add.w	r3, r7, #32
 8004186:	2200      	movs	r2, #0
 8004188:	601a      	str	r2, [r3, #0]
 800418a:	605a      	str	r2, [r3, #4]
 800418c:	609a      	str	r2, [r3, #8]
 800418e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004190:	f107 0314 	add.w	r3, r7, #20
 8004194:	2200      	movs	r2, #0
 8004196:	601a      	str	r2, [r3, #0]
 8004198:	605a      	str	r2, [r3, #4]
 800419a:	609a      	str	r2, [r3, #8]
  TIM_IC_InitTypeDef sConfigIC = {0};
 800419c:	1d3b      	adds	r3, r7, #4
 800419e:	2200      	movs	r2, #0
 80041a0:	601a      	str	r2, [r3, #0]
 80041a2:	605a      	str	r2, [r3, #4]
 80041a4:	609a      	str	r2, [r3, #8]
 80041a6:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80041a8:	4b2b      	ldr	r3, [pc, #172]	; (8004258 <MX_TIM2_Init+0xdc>)
 80041aa:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80041ae:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 80041b0:	4b29      	ldr	r3, [pc, #164]	; (8004258 <MX_TIM2_Init+0xdc>)
 80041b2:	2200      	movs	r2, #0
 80041b4:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80041b6:	4b28      	ldr	r3, [pc, #160]	; (8004258 <MX_TIM2_Init+0xdc>)
 80041b8:	2200      	movs	r2, #0
 80041ba:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 65535;
 80041bc:	4b26      	ldr	r3, [pc, #152]	; (8004258 <MX_TIM2_Init+0xdc>)
 80041be:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80041c2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80041c4:	4b24      	ldr	r3, [pc, #144]	; (8004258 <MX_TIM2_Init+0xdc>)
 80041c6:	2200      	movs	r2, #0
 80041c8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80041ca:	4b23      	ldr	r3, [pc, #140]	; (8004258 <MX_TIM2_Init+0xdc>)
 80041cc:	2200      	movs	r2, #0
 80041ce:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80041d0:	4821      	ldr	r0, [pc, #132]	; (8004258 <MX_TIM2_Init+0xdc>)
 80041d2:	f006 fa27 	bl	800a624 <HAL_TIM_Base_Init>
 80041d6:	4603      	mov	r3, r0
 80041d8:	2b00      	cmp	r3, #0
 80041da:	d001      	beq.n	80041e0 <MX_TIM2_Init+0x64>
  {
    Error_Handler();
 80041dc:	f7ff fbb6 	bl	800394c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80041e0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80041e4:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80041e6:	f107 0320 	add.w	r3, r7, #32
 80041ea:	4619      	mov	r1, r3
 80041ec:	481a      	ldr	r0, [pc, #104]	; (8004258 <MX_TIM2_Init+0xdc>)
 80041ee:	f007 faf5 	bl	800b7dc <HAL_TIM_ConfigClockSource>
 80041f2:	4603      	mov	r3, r0
 80041f4:	2b00      	cmp	r3, #0
 80041f6:	d001      	beq.n	80041fc <MX_TIM2_Init+0x80>
  {
    Error_Handler();
 80041f8:	f7ff fba8 	bl	800394c <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim2) != HAL_OK)
 80041fc:	4816      	ldr	r0, [pc, #88]	; (8004258 <MX_TIM2_Init+0xdc>)
 80041fe:	f006 fdad 	bl	800ad5c <HAL_TIM_IC_Init>
 8004202:	4603      	mov	r3, r0
 8004204:	2b00      	cmp	r3, #0
 8004206:	d001      	beq.n	800420c <MX_TIM2_Init+0x90>
  {
    Error_Handler();
 8004208:	f7ff fba0 	bl	800394c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800420c:	2300      	movs	r3, #0
 800420e:	617b      	str	r3, [r7, #20]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004210:	2300      	movs	r3, #0
 8004212:	61fb      	str	r3, [r7, #28]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8004214:	f107 0314 	add.w	r3, r7, #20
 8004218:	4619      	mov	r1, r3
 800421a:	480f      	ldr	r0, [pc, #60]	; (8004258 <MX_TIM2_Init+0xdc>)
 800421c:	f008 f952 	bl	800c4c4 <HAL_TIMEx_MasterConfigSynchronization>
 8004220:	4603      	mov	r3, r0
 8004222:	2b00      	cmp	r3, #0
 8004224:	d001      	beq.n	800422a <MX_TIM2_Init+0xae>
  {
    Error_Handler();
 8004226:	f7ff fb91 	bl	800394c <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 800422a:	2300      	movs	r3, #0
 800422c:	607b      	str	r3, [r7, #4]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 800422e:	2301      	movs	r3, #1
 8004230:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8004232:	2300      	movs	r3, #0
 8004234:	60fb      	str	r3, [r7, #12]
  sConfigIC.ICFilter = 0;
 8004236:	2300      	movs	r3, #0
 8004238:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 800423a:	1d3b      	adds	r3, r7, #4
 800423c:	2200      	movs	r2, #0
 800423e:	4619      	mov	r1, r3
 8004240:	4805      	ldr	r0, [pc, #20]	; (8004258 <MX_TIM2_Init+0xdc>)
 8004242:	f007 f91a 	bl	800b47a <HAL_TIM_IC_ConfigChannel>
 8004246:	4603      	mov	r3, r0
 8004248:	2b00      	cmp	r3, #0
 800424a:	d001      	beq.n	8004250 <MX_TIM2_Init+0xd4>
  {
    Error_Handler();
 800424c:	f7ff fb7e 	bl	800394c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8004250:	bf00      	nop
 8004252:	3730      	adds	r7, #48	; 0x30
 8004254:	46bd      	mov	sp, r7
 8004256:	bd80      	pop	{r7, pc}
 8004258:	24000844 	.word	0x24000844

0800425c <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 800425c:	b580      	push	{r7, lr}
 800425e:	b08c      	sub	sp, #48	; 0x30
 8004260:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004262:	f107 0320 	add.w	r3, r7, #32
 8004266:	2200      	movs	r2, #0
 8004268:	601a      	str	r2, [r3, #0]
 800426a:	605a      	str	r2, [r3, #4]
 800426c:	609a      	str	r2, [r3, #8]
 800426e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004270:	f107 0314 	add.w	r3, r7, #20
 8004274:	2200      	movs	r2, #0
 8004276:	601a      	str	r2, [r3, #0]
 8004278:	605a      	str	r2, [r3, #4]
 800427a:	609a      	str	r2, [r3, #8]
  TIM_IC_InitTypeDef sConfigIC = {0};
 800427c:	1d3b      	adds	r3, r7, #4
 800427e:	2200      	movs	r2, #0
 8004280:	601a      	str	r2, [r3, #0]
 8004282:	605a      	str	r2, [r3, #4]
 8004284:	609a      	str	r2, [r3, #8]
 8004286:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8004288:	4b2b      	ldr	r3, [pc, #172]	; (8004338 <MX_TIM3_Init+0xdc>)
 800428a:	4a2c      	ldr	r2, [pc, #176]	; (800433c <MX_TIM3_Init+0xe0>)
 800428c:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 800428e:	4b2a      	ldr	r3, [pc, #168]	; (8004338 <MX_TIM3_Init+0xdc>)
 8004290:	2200      	movs	r2, #0
 8004292:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004294:	4b28      	ldr	r3, [pc, #160]	; (8004338 <MX_TIM3_Init+0xdc>)
 8004296:	2200      	movs	r2, #0
 8004298:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 800429a:	4b27      	ldr	r3, [pc, #156]	; (8004338 <MX_TIM3_Init+0xdc>)
 800429c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80042a0:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80042a2:	4b25      	ldr	r3, [pc, #148]	; (8004338 <MX_TIM3_Init+0xdc>)
 80042a4:	2200      	movs	r2, #0
 80042a6:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80042a8:	4b23      	ldr	r3, [pc, #140]	; (8004338 <MX_TIM3_Init+0xdc>)
 80042aa:	2200      	movs	r2, #0
 80042ac:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80042ae:	4822      	ldr	r0, [pc, #136]	; (8004338 <MX_TIM3_Init+0xdc>)
 80042b0:	f006 f9b8 	bl	800a624 <HAL_TIM_Base_Init>
 80042b4:	4603      	mov	r3, r0
 80042b6:	2b00      	cmp	r3, #0
 80042b8:	d001      	beq.n	80042be <MX_TIM3_Init+0x62>
  {
    Error_Handler();
 80042ba:	f7ff fb47 	bl	800394c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80042be:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80042c2:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80042c4:	f107 0320 	add.w	r3, r7, #32
 80042c8:	4619      	mov	r1, r3
 80042ca:	481b      	ldr	r0, [pc, #108]	; (8004338 <MX_TIM3_Init+0xdc>)
 80042cc:	f007 fa86 	bl	800b7dc <HAL_TIM_ConfigClockSource>
 80042d0:	4603      	mov	r3, r0
 80042d2:	2b00      	cmp	r3, #0
 80042d4:	d001      	beq.n	80042da <MX_TIM3_Init+0x7e>
  {
    Error_Handler();
 80042d6:	f7ff fb39 	bl	800394c <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim3) != HAL_OK)
 80042da:	4817      	ldr	r0, [pc, #92]	; (8004338 <MX_TIM3_Init+0xdc>)
 80042dc:	f006 fd3e 	bl	800ad5c <HAL_TIM_IC_Init>
 80042e0:	4603      	mov	r3, r0
 80042e2:	2b00      	cmp	r3, #0
 80042e4:	d001      	beq.n	80042ea <MX_TIM3_Init+0x8e>
  {
    Error_Handler();
 80042e6:	f7ff fb31 	bl	800394c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80042ea:	2300      	movs	r3, #0
 80042ec:	617b      	str	r3, [r7, #20]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80042ee:	2300      	movs	r3, #0
 80042f0:	61fb      	str	r3, [r7, #28]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80042f2:	f107 0314 	add.w	r3, r7, #20
 80042f6:	4619      	mov	r1, r3
 80042f8:	480f      	ldr	r0, [pc, #60]	; (8004338 <MX_TIM3_Init+0xdc>)
 80042fa:	f008 f8e3 	bl	800c4c4 <HAL_TIMEx_MasterConfigSynchronization>
 80042fe:	4603      	mov	r3, r0
 8004300:	2b00      	cmp	r3, #0
 8004302:	d001      	beq.n	8004308 <MX_TIM3_Init+0xac>
  {
    Error_Handler();
 8004304:	f7ff fb22 	bl	800394c <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 8004308:	2300      	movs	r3, #0
 800430a:	607b      	str	r3, [r7, #4]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 800430c:	2301      	movs	r3, #1
 800430e:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8004310:	2300      	movs	r3, #0
 8004312:	60fb      	str	r3, [r7, #12]
  sConfigIC.ICFilter = 0;
 8004314:	2300      	movs	r3, #0
 8004316:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 8004318:	1d3b      	adds	r3, r7, #4
 800431a:	2200      	movs	r2, #0
 800431c:	4619      	mov	r1, r3
 800431e:	4806      	ldr	r0, [pc, #24]	; (8004338 <MX_TIM3_Init+0xdc>)
 8004320:	f007 f8ab 	bl	800b47a <HAL_TIM_IC_ConfigChannel>
 8004324:	4603      	mov	r3, r0
 8004326:	2b00      	cmp	r3, #0
 8004328:	d001      	beq.n	800432e <MX_TIM3_Init+0xd2>
  {
    Error_Handler();
 800432a:	f7ff fb0f 	bl	800394c <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 800432e:	bf00      	nop
 8004330:	3730      	adds	r7, #48	; 0x30
 8004332:	46bd      	mov	sp, r7
 8004334:	bd80      	pop	{r7, pc}
 8004336:	bf00      	nop
 8004338:	24000890 	.word	0x24000890
 800433c:	40000400 	.word	0x40000400

08004340 <MX_TIM4_Init>:
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 8004340:	b580      	push	{r7, lr}
 8004342:	b08c      	sub	sp, #48	; 0x30
 8004344:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8004346:	f107 0320 	add.w	r3, r7, #32
 800434a:	2200      	movs	r2, #0
 800434c:	601a      	str	r2, [r3, #0]
 800434e:	605a      	str	r2, [r3, #4]
 8004350:	609a      	str	r2, [r3, #8]
 8004352:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004354:	f107 0314 	add.w	r3, r7, #20
 8004358:	2200      	movs	r2, #0
 800435a:	601a      	str	r2, [r3, #0]
 800435c:	605a      	str	r2, [r3, #4]
 800435e:	609a      	str	r2, [r3, #8]
  TIM_IC_InitTypeDef sConfigIC = {0};
 8004360:	1d3b      	adds	r3, r7, #4
 8004362:	2200      	movs	r2, #0
 8004364:	601a      	str	r2, [r3, #0]
 8004366:	605a      	str	r2, [r3, #4]
 8004368:	609a      	str	r2, [r3, #8]
 800436a:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 800436c:	4b2b      	ldr	r3, [pc, #172]	; (800441c <MX_TIM4_Init+0xdc>)
 800436e:	4a2c      	ldr	r2, [pc, #176]	; (8004420 <MX_TIM4_Init+0xe0>)
 8004370:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8004372:	4b2a      	ldr	r3, [pc, #168]	; (800441c <MX_TIM4_Init+0xdc>)
 8004374:	2200      	movs	r2, #0
 8004376:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004378:	4b28      	ldr	r3, [pc, #160]	; (800441c <MX_TIM4_Init+0xdc>)
 800437a:	2200      	movs	r2, #0
 800437c:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 800437e:	4b27      	ldr	r3, [pc, #156]	; (800441c <MX_TIM4_Init+0xdc>)
 8004380:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004384:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004386:	4b25      	ldr	r3, [pc, #148]	; (800441c <MX_TIM4_Init+0xdc>)
 8004388:	2200      	movs	r2, #0
 800438a:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800438c:	4b23      	ldr	r3, [pc, #140]	; (800441c <MX_TIM4_Init+0xdc>)
 800438e:	2200      	movs	r2, #0
 8004390:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8004392:	4822      	ldr	r0, [pc, #136]	; (800441c <MX_TIM4_Init+0xdc>)
 8004394:	f006 f946 	bl	800a624 <HAL_TIM_Base_Init>
 8004398:	4603      	mov	r3, r0
 800439a:	2b00      	cmp	r3, #0
 800439c:	d001      	beq.n	80043a2 <MX_TIM4_Init+0x62>
  {
    Error_Handler();
 800439e:	f7ff fad5 	bl	800394c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80043a2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80043a6:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 80043a8:	f107 0320 	add.w	r3, r7, #32
 80043ac:	4619      	mov	r1, r3
 80043ae:	481b      	ldr	r0, [pc, #108]	; (800441c <MX_TIM4_Init+0xdc>)
 80043b0:	f007 fa14 	bl	800b7dc <HAL_TIM_ConfigClockSource>
 80043b4:	4603      	mov	r3, r0
 80043b6:	2b00      	cmp	r3, #0
 80043b8:	d001      	beq.n	80043be <MX_TIM4_Init+0x7e>
  {
    Error_Handler();
 80043ba:	f7ff fac7 	bl	800394c <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim4) != HAL_OK)
 80043be:	4817      	ldr	r0, [pc, #92]	; (800441c <MX_TIM4_Init+0xdc>)
 80043c0:	f006 fccc 	bl	800ad5c <HAL_TIM_IC_Init>
 80043c4:	4603      	mov	r3, r0
 80043c6:	2b00      	cmp	r3, #0
 80043c8:	d001      	beq.n	80043ce <MX_TIM4_Init+0x8e>
  {
    Error_Handler();
 80043ca:	f7ff fabf 	bl	800394c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80043ce:	2300      	movs	r3, #0
 80043d0:	617b      	str	r3, [r7, #20]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80043d2:	2300      	movs	r3, #0
 80043d4:	61fb      	str	r3, [r7, #28]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 80043d6:	f107 0314 	add.w	r3, r7, #20
 80043da:	4619      	mov	r1, r3
 80043dc:	480f      	ldr	r0, [pc, #60]	; (800441c <MX_TIM4_Init+0xdc>)
 80043de:	f008 f871 	bl	800c4c4 <HAL_TIMEx_MasterConfigSynchronization>
 80043e2:	4603      	mov	r3, r0
 80043e4:	2b00      	cmp	r3, #0
 80043e6:	d001      	beq.n	80043ec <MX_TIM4_Init+0xac>
  {
    Error_Handler();
 80043e8:	f7ff fab0 	bl	800394c <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 80043ec:	2300      	movs	r3, #0
 80043ee:	607b      	str	r3, [r7, #4]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 80043f0:	2301      	movs	r3, #1
 80043f2:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 80043f4:	2300      	movs	r3, #0
 80043f6:	60fb      	str	r3, [r7, #12]
  sConfigIC.ICFilter = 0;
 80043f8:	2300      	movs	r3, #0
 80043fa:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 80043fc:	1d3b      	adds	r3, r7, #4
 80043fe:	2200      	movs	r2, #0
 8004400:	4619      	mov	r1, r3
 8004402:	4806      	ldr	r0, [pc, #24]	; (800441c <MX_TIM4_Init+0xdc>)
 8004404:	f007 f839 	bl	800b47a <HAL_TIM_IC_ConfigChannel>
 8004408:	4603      	mov	r3, r0
 800440a:	2b00      	cmp	r3, #0
 800440c:	d001      	beq.n	8004412 <MX_TIM4_Init+0xd2>
  {
    Error_Handler();
 800440e:	f7ff fa9d 	bl	800394c <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8004412:	bf00      	nop
 8004414:	3730      	adds	r7, #48	; 0x30
 8004416:	46bd      	mov	sp, r7
 8004418:	bd80      	pop	{r7, pc}
 800441a:	bf00      	nop
 800441c:	240008dc 	.word	0x240008dc
 8004420:	40000800 	.word	0x40000800

08004424 <MX_TIM5_Init>:
/* TIM5 init function */
void MX_TIM5_Init(void)
{
 8004424:	b580      	push	{r7, lr}
 8004426:	b088      	sub	sp, #32
 8004428:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800442a:	f107 0310 	add.w	r3, r7, #16
 800442e:	2200      	movs	r2, #0
 8004430:	601a      	str	r2, [r3, #0]
 8004432:	605a      	str	r2, [r3, #4]
 8004434:	609a      	str	r2, [r3, #8]
 8004436:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8004438:	1d3b      	adds	r3, r7, #4
 800443a:	2200      	movs	r2, #0
 800443c:	601a      	str	r2, [r3, #0]
 800443e:	605a      	str	r2, [r3, #4]
 8004440:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8004442:	4b1e      	ldr	r3, [pc, #120]	; (80044bc <MX_TIM5_Init+0x98>)
 8004444:	4a1e      	ldr	r2, [pc, #120]	; (80044c0 <MX_TIM5_Init+0x9c>)
 8004446:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 64000-1;
 8004448:	4b1c      	ldr	r3, [pc, #112]	; (80044bc <MX_TIM5_Init+0x98>)
 800444a:	f64f 12ff 	movw	r2, #63999	; 0xf9ff
 800444e:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004450:	4b1a      	ldr	r3, [pc, #104]	; (80044bc <MX_TIM5_Init+0x98>)
 8004452:	2200      	movs	r2, #0
 8004454:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 8004456:	4b19      	ldr	r3, [pc, #100]	; (80044bc <MX_TIM5_Init+0x98>)
 8004458:	f04f 32ff 	mov.w	r2, #4294967295
 800445c:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800445e:	4b17      	ldr	r3, [pc, #92]	; (80044bc <MX_TIM5_Init+0x98>)
 8004460:	2200      	movs	r2, #0
 8004462:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004464:	4b15      	ldr	r3, [pc, #84]	; (80044bc <MX_TIM5_Init+0x98>)
 8004466:	2200      	movs	r2, #0
 8004468:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 800446a:	4814      	ldr	r0, [pc, #80]	; (80044bc <MX_TIM5_Init+0x98>)
 800446c:	f006 f8da 	bl	800a624 <HAL_TIM_Base_Init>
 8004470:	4603      	mov	r3, r0
 8004472:	2b00      	cmp	r3, #0
 8004474:	d001      	beq.n	800447a <MX_TIM5_Init+0x56>
  {
    Error_Handler();
 8004476:	f7ff fa69 	bl	800394c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800447a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800447e:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 8004480:	f107 0310 	add.w	r3, r7, #16
 8004484:	4619      	mov	r1, r3
 8004486:	480d      	ldr	r0, [pc, #52]	; (80044bc <MX_TIM5_Init+0x98>)
 8004488:	f007 f9a8 	bl	800b7dc <HAL_TIM_ConfigClockSource>
 800448c:	4603      	mov	r3, r0
 800448e:	2b00      	cmp	r3, #0
 8004490:	d001      	beq.n	8004496 <MX_TIM5_Init+0x72>
  {
    Error_Handler();
 8004492:	f7ff fa5b 	bl	800394c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004496:	2300      	movs	r3, #0
 8004498:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800449a:	2300      	movs	r3, #0
 800449c:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 800449e:	1d3b      	adds	r3, r7, #4
 80044a0:	4619      	mov	r1, r3
 80044a2:	4806      	ldr	r0, [pc, #24]	; (80044bc <MX_TIM5_Init+0x98>)
 80044a4:	f008 f80e 	bl	800c4c4 <HAL_TIMEx_MasterConfigSynchronization>
 80044a8:	4603      	mov	r3, r0
 80044aa:	2b00      	cmp	r3, #0
 80044ac:	d001      	beq.n	80044b2 <MX_TIM5_Init+0x8e>
  {
    Error_Handler();
 80044ae:	f7ff fa4d 	bl	800394c <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 80044b2:	bf00      	nop
 80044b4:	3720      	adds	r7, #32
 80044b6:	46bd      	mov	sp, r7
 80044b8:	bd80      	pop	{r7, pc}
 80044ba:	bf00      	nop
 80044bc:	24000928 	.word	0x24000928
 80044c0:	40000c00 	.word	0x40000c00

080044c4 <MX_TIM12_Init>:
/* TIM12 init function */
void MX_TIM12_Init(void)
{
 80044c4:	b580      	push	{r7, lr}
 80044c6:	b08c      	sub	sp, #48	; 0x30
 80044c8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM12_Init 0 */

  /* USER CODE END TIM12_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80044ca:	f107 0320 	add.w	r3, r7, #32
 80044ce:	2200      	movs	r2, #0
 80044d0:	601a      	str	r2, [r3, #0]
 80044d2:	605a      	str	r2, [r3, #4]
 80044d4:	609a      	str	r2, [r3, #8]
 80044d6:	60da      	str	r2, [r3, #12]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80044d8:	1d3b      	adds	r3, r7, #4
 80044da:	2200      	movs	r2, #0
 80044dc:	601a      	str	r2, [r3, #0]
 80044de:	605a      	str	r2, [r3, #4]
 80044e0:	609a      	str	r2, [r3, #8]
 80044e2:	60da      	str	r2, [r3, #12]
 80044e4:	611a      	str	r2, [r3, #16]
 80044e6:	615a      	str	r2, [r3, #20]
 80044e8:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM12_Init 1 */

  /* USER CODE END TIM12_Init 1 */
  htim12.Instance = TIM12;
 80044ea:	4b26      	ldr	r3, [pc, #152]	; (8004584 <MX_TIM12_Init+0xc0>)
 80044ec:	4a26      	ldr	r2, [pc, #152]	; (8004588 <MX_TIM12_Init+0xc4>)
 80044ee:	601a      	str	r2, [r3, #0]
  htim12.Init.Prescaler = 500-1;
 80044f0:	4b24      	ldr	r3, [pc, #144]	; (8004584 <MX_TIM12_Init+0xc0>)
 80044f2:	f240 12f3 	movw	r2, #499	; 0x1f3
 80044f6:	605a      	str	r2, [r3, #4]
  htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 80044f8:	4b22      	ldr	r3, [pc, #136]	; (8004584 <MX_TIM12_Init+0xc0>)
 80044fa:	2200      	movs	r2, #0
 80044fc:	609a      	str	r2, [r3, #8]
  htim12.Init.Period = 40000;
 80044fe:	4b21      	ldr	r3, [pc, #132]	; (8004584 <MX_TIM12_Init+0xc0>)
 8004500:	f649 4240 	movw	r2, #40000	; 0x9c40
 8004504:	60da      	str	r2, [r3, #12]
  htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004506:	4b1f      	ldr	r3, [pc, #124]	; (8004584 <MX_TIM12_Init+0xc0>)
 8004508:	2200      	movs	r2, #0
 800450a:	611a      	str	r2, [r3, #16]
  htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800450c:	4b1d      	ldr	r3, [pc, #116]	; (8004584 <MX_TIM12_Init+0xc0>)
 800450e:	2200      	movs	r2, #0
 8004510:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim12) != HAL_OK)
 8004512:	481c      	ldr	r0, [pc, #112]	; (8004584 <MX_TIM12_Init+0xc0>)
 8004514:	f006 f886 	bl	800a624 <HAL_TIM_Base_Init>
 8004518:	4603      	mov	r3, r0
 800451a:	2b00      	cmp	r3, #0
 800451c:	d001      	beq.n	8004522 <MX_TIM12_Init+0x5e>
  {
    Error_Handler();
 800451e:	f7ff fa15 	bl	800394c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8004522:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004526:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim12, &sClockSourceConfig) != HAL_OK)
 8004528:	f107 0320 	add.w	r3, r7, #32
 800452c:	4619      	mov	r1, r3
 800452e:	4815      	ldr	r0, [pc, #84]	; (8004584 <MX_TIM12_Init+0xc0>)
 8004530:	f007 f954 	bl	800b7dc <HAL_TIM_ConfigClockSource>
 8004534:	4603      	mov	r3, r0
 8004536:	2b00      	cmp	r3, #0
 8004538:	d001      	beq.n	800453e <MX_TIM12_Init+0x7a>
  {
    Error_Handler();
 800453a:	f7ff fa07 	bl	800394c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 800453e:	4811      	ldr	r0, [pc, #68]	; (8004584 <MX_TIM12_Init+0xc0>)
 8004540:	f006 fa07 	bl	800a952 <HAL_TIM_PWM_Init>
 8004544:	4603      	mov	r3, r0
 8004546:	2b00      	cmp	r3, #0
 8004548:	d001      	beq.n	800454e <MX_TIM12_Init+0x8a>
  {
    Error_Handler();
 800454a:	f7ff f9ff 	bl	800394c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800454e:	2360      	movs	r3, #96	; 0x60
 8004550:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 20000;
 8004552:	f644 6320 	movw	r3, #20000	; 0x4e20
 8004556:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8004558:	2300      	movs	r3, #0
 800455a:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800455c:	2300      	movs	r3, #0
 800455e:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8004560:	1d3b      	adds	r3, r7, #4
 8004562:	2200      	movs	r2, #0
 8004564:	4619      	mov	r1, r3
 8004566:	4807      	ldr	r0, [pc, #28]	; (8004584 <MX_TIM12_Init+0xc0>)
 8004568:	f007 f824 	bl	800b5b4 <HAL_TIM_PWM_ConfigChannel>
 800456c:	4603      	mov	r3, r0
 800456e:	2b00      	cmp	r3, #0
 8004570:	d001      	beq.n	8004576 <MX_TIM12_Init+0xb2>
  {
    Error_Handler();
 8004572:	f7ff f9eb 	bl	800394c <Error_Handler>
  }
  /* USER CODE BEGIN TIM12_Init 2 */

  /* USER CODE END TIM12_Init 2 */
  HAL_TIM_MspPostInit(&htim12);
 8004576:	4803      	ldr	r0, [pc, #12]	; (8004584 <MX_TIM12_Init+0xc0>)
 8004578:	f000 fa44 	bl	8004a04 <HAL_TIM_MspPostInit>

}
 800457c:	bf00      	nop
 800457e:	3730      	adds	r7, #48	; 0x30
 8004580:	46bd      	mov	sp, r7
 8004582:	bd80      	pop	{r7, pc}
 8004584:	24000974 	.word	0x24000974
 8004588:	40001800 	.word	0x40001800

0800458c <MX_TIM13_Init>:
/* TIM13 init function */
void MX_TIM13_Init(void)
{
 800458c:	b580      	push	{r7, lr}
 800458e:	b088      	sub	sp, #32
 8004590:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM13_Init 0 */

  /* USER CODE END TIM13_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 8004592:	1d3b      	adds	r3, r7, #4
 8004594:	2200      	movs	r2, #0
 8004596:	601a      	str	r2, [r3, #0]
 8004598:	605a      	str	r2, [r3, #4]
 800459a:	609a      	str	r2, [r3, #8]
 800459c:	60da      	str	r2, [r3, #12]
 800459e:	611a      	str	r2, [r3, #16]
 80045a0:	615a      	str	r2, [r3, #20]
 80045a2:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM13_Init 1 */

  /* USER CODE END TIM13_Init 1 */
  htim13.Instance = TIM13;
 80045a4:	4b1f      	ldr	r3, [pc, #124]	; (8004624 <MX_TIM13_Init+0x98>)
 80045a6:	4a20      	ldr	r2, [pc, #128]	; (8004628 <MX_TIM13_Init+0x9c>)
 80045a8:	601a      	str	r2, [r3, #0]
  htim13.Init.Prescaler = 500-1;
 80045aa:	4b1e      	ldr	r3, [pc, #120]	; (8004624 <MX_TIM13_Init+0x98>)
 80045ac:	f240 12f3 	movw	r2, #499	; 0x1f3
 80045b0:	605a      	str	r2, [r3, #4]
  htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 80045b2:	4b1c      	ldr	r3, [pc, #112]	; (8004624 <MX_TIM13_Init+0x98>)
 80045b4:	2200      	movs	r2, #0
 80045b6:	609a      	str	r2, [r3, #8]
  htim13.Init.Period = 40000;
 80045b8:	4b1a      	ldr	r3, [pc, #104]	; (8004624 <MX_TIM13_Init+0x98>)
 80045ba:	f649 4240 	movw	r2, #40000	; 0x9c40
 80045be:	60da      	str	r2, [r3, #12]
  htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80045c0:	4b18      	ldr	r3, [pc, #96]	; (8004624 <MX_TIM13_Init+0x98>)
 80045c2:	2200      	movs	r2, #0
 80045c4:	611a      	str	r2, [r3, #16]
  htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80045c6:	4b17      	ldr	r3, [pc, #92]	; (8004624 <MX_TIM13_Init+0x98>)
 80045c8:	2200      	movs	r2, #0
 80045ca:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 80045cc:	4815      	ldr	r0, [pc, #84]	; (8004624 <MX_TIM13_Init+0x98>)
 80045ce:	f006 f829 	bl	800a624 <HAL_TIM_Base_Init>
 80045d2:	4603      	mov	r3, r0
 80045d4:	2b00      	cmp	r3, #0
 80045d6:	d001      	beq.n	80045dc <MX_TIM13_Init+0x50>
  {
    Error_Handler();
 80045d8:	f7ff f9b8 	bl	800394c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim13) != HAL_OK)
 80045dc:	4811      	ldr	r0, [pc, #68]	; (8004624 <MX_TIM13_Init+0x98>)
 80045de:	f006 f9b8 	bl	800a952 <HAL_TIM_PWM_Init>
 80045e2:	4603      	mov	r3, r0
 80045e4:	2b00      	cmp	r3, #0
 80045e6:	d001      	beq.n	80045ec <MX_TIM13_Init+0x60>
  {
    Error_Handler();
 80045e8:	f7ff f9b0 	bl	800394c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80045ec:	2360      	movs	r3, #96	; 0x60
 80045ee:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 20000;
 80045f0:	f644 6320 	movw	r3, #20000	; 0x4e20
 80045f4:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80045f6:	2300      	movs	r3, #0
 80045f8:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80045fa:	2300      	movs	r3, #0
 80045fc:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80045fe:	1d3b      	adds	r3, r7, #4
 8004600:	2200      	movs	r2, #0
 8004602:	4619      	mov	r1, r3
 8004604:	4807      	ldr	r0, [pc, #28]	; (8004624 <MX_TIM13_Init+0x98>)
 8004606:	f006 ffd5 	bl	800b5b4 <HAL_TIM_PWM_ConfigChannel>
 800460a:	4603      	mov	r3, r0
 800460c:	2b00      	cmp	r3, #0
 800460e:	d001      	beq.n	8004614 <MX_TIM13_Init+0x88>
  {
    Error_Handler();
 8004610:	f7ff f99c 	bl	800394c <Error_Handler>
  }
  /* USER CODE BEGIN TIM13_Init 2 */

  /* USER CODE END TIM13_Init 2 */
  HAL_TIM_MspPostInit(&htim13);
 8004614:	4803      	ldr	r0, [pc, #12]	; (8004624 <MX_TIM13_Init+0x98>)
 8004616:	f000 f9f5 	bl	8004a04 <HAL_TIM_MspPostInit>

}
 800461a:	bf00      	nop
 800461c:	3720      	adds	r7, #32
 800461e:	46bd      	mov	sp, r7
 8004620:	bd80      	pop	{r7, pc}
 8004622:	bf00      	nop
 8004624:	240009c0 	.word	0x240009c0
 8004628:	40001c00 	.word	0x40001c00

0800462c <MX_TIM14_Init>:
/* TIM14 init function */
void MX_TIM14_Init(void)
{
 800462c:	b580      	push	{r7, lr}
 800462e:	b088      	sub	sp, #32
 8004630:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM14_Init 0 */

  /* USER CODE END TIM14_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 8004632:	1d3b      	adds	r3, r7, #4
 8004634:	2200      	movs	r2, #0
 8004636:	601a      	str	r2, [r3, #0]
 8004638:	605a      	str	r2, [r3, #4]
 800463a:	609a      	str	r2, [r3, #8]
 800463c:	60da      	str	r2, [r3, #12]
 800463e:	611a      	str	r2, [r3, #16]
 8004640:	615a      	str	r2, [r3, #20]
 8004642:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM14_Init 1 */

  /* USER CODE END TIM14_Init 1 */
  htim14.Instance = TIM14;
 8004644:	4b1f      	ldr	r3, [pc, #124]	; (80046c4 <MX_TIM14_Init+0x98>)
 8004646:	4a20      	ldr	r2, [pc, #128]	; (80046c8 <MX_TIM14_Init+0x9c>)
 8004648:	601a      	str	r2, [r3, #0]
  htim14.Init.Prescaler = 500-1;
 800464a:	4b1e      	ldr	r3, [pc, #120]	; (80046c4 <MX_TIM14_Init+0x98>)
 800464c:	f240 12f3 	movw	r2, #499	; 0x1f3
 8004650:	605a      	str	r2, [r3, #4]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004652:	4b1c      	ldr	r3, [pc, #112]	; (80046c4 <MX_TIM14_Init+0x98>)
 8004654:	2200      	movs	r2, #0
 8004656:	609a      	str	r2, [r3, #8]
  htim14.Init.Period = 40000;
 8004658:	4b1a      	ldr	r3, [pc, #104]	; (80046c4 <MX_TIM14_Init+0x98>)
 800465a:	f649 4240 	movw	r2, #40000	; 0x9c40
 800465e:	60da      	str	r2, [r3, #12]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004660:	4b18      	ldr	r3, [pc, #96]	; (80046c4 <MX_TIM14_Init+0x98>)
 8004662:	2200      	movs	r2, #0
 8004664:	611a      	str	r2, [r3, #16]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004666:	4b17      	ldr	r3, [pc, #92]	; (80046c4 <MX_TIM14_Init+0x98>)
 8004668:	2200      	movs	r2, #0
 800466a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 800466c:	4815      	ldr	r0, [pc, #84]	; (80046c4 <MX_TIM14_Init+0x98>)
 800466e:	f005 ffd9 	bl	800a624 <HAL_TIM_Base_Init>
 8004672:	4603      	mov	r3, r0
 8004674:	2b00      	cmp	r3, #0
 8004676:	d001      	beq.n	800467c <MX_TIM14_Init+0x50>
  {
    Error_Handler();
 8004678:	f7ff f968 	bl	800394c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 800467c:	4811      	ldr	r0, [pc, #68]	; (80046c4 <MX_TIM14_Init+0x98>)
 800467e:	f006 f968 	bl	800a952 <HAL_TIM_PWM_Init>
 8004682:	4603      	mov	r3, r0
 8004684:	2b00      	cmp	r3, #0
 8004686:	d001      	beq.n	800468c <MX_TIM14_Init+0x60>
  {
    Error_Handler();
 8004688:	f7ff f960 	bl	800394c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800468c:	2360      	movs	r3, #96	; 0x60
 800468e:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 20000;
 8004690:	f644 6320 	movw	r3, #20000	; 0x4e20
 8004694:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8004696:	2300      	movs	r3, #0
 8004698:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800469a:	2300      	movs	r3, #0
 800469c:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800469e:	1d3b      	adds	r3, r7, #4
 80046a0:	2200      	movs	r2, #0
 80046a2:	4619      	mov	r1, r3
 80046a4:	4807      	ldr	r0, [pc, #28]	; (80046c4 <MX_TIM14_Init+0x98>)
 80046a6:	f006 ff85 	bl	800b5b4 <HAL_TIM_PWM_ConfigChannel>
 80046aa:	4603      	mov	r3, r0
 80046ac:	2b00      	cmp	r3, #0
 80046ae:	d001      	beq.n	80046b4 <MX_TIM14_Init+0x88>
  {
    Error_Handler();
 80046b0:	f7ff f94c 	bl	800394c <Error_Handler>
  }
  /* USER CODE BEGIN TIM14_Init 2 */

  /* USER CODE END TIM14_Init 2 */
  HAL_TIM_MspPostInit(&htim14);
 80046b4:	4803      	ldr	r0, [pc, #12]	; (80046c4 <MX_TIM14_Init+0x98>)
 80046b6:	f000 f9a5 	bl	8004a04 <HAL_TIM_MspPostInit>

}
 80046ba:	bf00      	nop
 80046bc:	3720      	adds	r7, #32
 80046be:	46bd      	mov	sp, r7
 80046c0:	bd80      	pop	{r7, pc}
 80046c2:	bf00      	nop
 80046c4:	24000a0c 	.word	0x24000a0c
 80046c8:	40002000 	.word	0x40002000

080046cc <MX_TIM15_Init>:
/* TIM15 init function */
void MX_TIM15_Init(void)
{
 80046cc:	b580      	push	{r7, lr}
 80046ce:	b088      	sub	sp, #32
 80046d0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM15_Init 0 */

  /* USER CODE END TIM15_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80046d2:	f107 0310 	add.w	r3, r7, #16
 80046d6:	2200      	movs	r2, #0
 80046d8:	601a      	str	r2, [r3, #0]
 80046da:	605a      	str	r2, [r3, #4]
 80046dc:	609a      	str	r2, [r3, #8]
 80046de:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80046e0:	1d3b      	adds	r3, r7, #4
 80046e2:	2200      	movs	r2, #0
 80046e4:	601a      	str	r2, [r3, #0]
 80046e6:	605a      	str	r2, [r3, #4]
 80046e8:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM15_Init 1 */

  /* USER CODE END TIM15_Init 1 */
  htim15.Instance = TIM15;
 80046ea:	4b1f      	ldr	r3, [pc, #124]	; (8004768 <MX_TIM15_Init+0x9c>)
 80046ec:	4a1f      	ldr	r2, [pc, #124]	; (800476c <MX_TIM15_Init+0xa0>)
 80046ee:	601a      	str	r2, [r3, #0]
  htim15.Init.Prescaler = 1;
 80046f0:	4b1d      	ldr	r3, [pc, #116]	; (8004768 <MX_TIM15_Init+0x9c>)
 80046f2:	2201      	movs	r2, #1
 80046f4:	605a      	str	r2, [r3, #4]
  htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 80046f6:	4b1c      	ldr	r3, [pc, #112]	; (8004768 <MX_TIM15_Init+0x9c>)
 80046f8:	2200      	movs	r2, #0
 80046fa:	609a      	str	r2, [r3, #8]
  htim15.Init.Period = 64000;
 80046fc:	4b1a      	ldr	r3, [pc, #104]	; (8004768 <MX_TIM15_Init+0x9c>)
 80046fe:	f44f 427a 	mov.w	r2, #64000	; 0xfa00
 8004702:	60da      	str	r2, [r3, #12]
  htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004704:	4b18      	ldr	r3, [pc, #96]	; (8004768 <MX_TIM15_Init+0x9c>)
 8004706:	2200      	movs	r2, #0
 8004708:	611a      	str	r2, [r3, #16]
  htim15.Init.RepetitionCounter = 0;
 800470a:	4b17      	ldr	r3, [pc, #92]	; (8004768 <MX_TIM15_Init+0x9c>)
 800470c:	2200      	movs	r2, #0
 800470e:	615a      	str	r2, [r3, #20]
  htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8004710:	4b15      	ldr	r3, [pc, #84]	; (8004768 <MX_TIM15_Init+0x9c>)
 8004712:	2200      	movs	r2, #0
 8004714:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim15) != HAL_OK)
 8004716:	4814      	ldr	r0, [pc, #80]	; (8004768 <MX_TIM15_Init+0x9c>)
 8004718:	f005 ff84 	bl	800a624 <HAL_TIM_Base_Init>
 800471c:	4603      	mov	r3, r0
 800471e:	2b00      	cmp	r3, #0
 8004720:	d001      	beq.n	8004726 <MX_TIM15_Init+0x5a>
  {
    Error_Handler();
 8004722:	f7ff f913 	bl	800394c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8004726:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800472a:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim15, &sClockSourceConfig) != HAL_OK)
 800472c:	f107 0310 	add.w	r3, r7, #16
 8004730:	4619      	mov	r1, r3
 8004732:	480d      	ldr	r0, [pc, #52]	; (8004768 <MX_TIM15_Init+0x9c>)
 8004734:	f007 f852 	bl	800b7dc <HAL_TIM_ConfigClockSource>
 8004738:	4603      	mov	r3, r0
 800473a:	2b00      	cmp	r3, #0
 800473c:	d001      	beq.n	8004742 <MX_TIM15_Init+0x76>
  {
    Error_Handler();
 800473e:	f7ff f905 	bl	800394c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8004742:	2300      	movs	r3, #0
 8004744:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004746:	2300      	movs	r3, #0
 8004748:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 800474a:	1d3b      	adds	r3, r7, #4
 800474c:	4619      	mov	r1, r3
 800474e:	4806      	ldr	r0, [pc, #24]	; (8004768 <MX_TIM15_Init+0x9c>)
 8004750:	f007 feb8 	bl	800c4c4 <HAL_TIMEx_MasterConfigSynchronization>
 8004754:	4603      	mov	r3, r0
 8004756:	2b00      	cmp	r3, #0
 8004758:	d001      	beq.n	800475e <MX_TIM15_Init+0x92>
  {
    Error_Handler();
 800475a:	f7ff f8f7 	bl	800394c <Error_Handler>
  }
  /* USER CODE BEGIN TIM15_Init 2 */

  /* USER CODE END TIM15_Init 2 */

}
 800475e:	bf00      	nop
 8004760:	3720      	adds	r7, #32
 8004762:	46bd      	mov	sp, r7
 8004764:	bd80      	pop	{r7, pc}
 8004766:	bf00      	nop
 8004768:	24000a58 	.word	0x24000a58
 800476c:	40014000 	.word	0x40014000

08004770 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8004770:	b580      	push	{r7, lr}
 8004772:	b092      	sub	sp, #72	; 0x48
 8004774:	af00      	add	r7, sp, #0
 8004776:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004778:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800477c:	2200      	movs	r2, #0
 800477e:	601a      	str	r2, [r3, #0]
 8004780:	605a      	str	r2, [r3, #4]
 8004782:	609a      	str	r2, [r3, #8]
 8004784:	60da      	str	r2, [r3, #12]
 8004786:	611a      	str	r2, [r3, #16]
  if(tim_baseHandle->Instance==TIM2)
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004790:	d136      	bne.n	8004800 <HAL_TIM_Base_MspInit+0x90>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8004792:	4b92      	ldr	r3, [pc, #584]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 8004794:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004798:	4a90      	ldr	r2, [pc, #576]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 800479a:	f043 0301 	orr.w	r3, r3, #1
 800479e:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 80047a2:	4b8e      	ldr	r3, [pc, #568]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 80047a4:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80047a8:	f003 0301 	and.w	r3, r3, #1
 80047ac:	633b      	str	r3, [r7, #48]	; 0x30
 80047ae:	6b3b      	ldr	r3, [r7, #48]	; 0x30

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80047b0:	4b8a      	ldr	r3, [pc, #552]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 80047b2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80047b6:	4a89      	ldr	r2, [pc, #548]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 80047b8:	f043 0301 	orr.w	r3, r3, #1
 80047bc:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80047c0:	4b86      	ldr	r3, [pc, #536]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 80047c2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80047c6:	f003 0301 	and.w	r3, r3, #1
 80047ca:	62fb      	str	r3, [r7, #44]	; 0x2c
 80047cc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    /**TIM2 GPIO Configuration
    PA5     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = E_CountPap1_Pin;
 80047ce:	2320      	movs	r3, #32
 80047d0:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80047d2:	2302      	movs	r3, #2
 80047d4:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80047d6:	2302      	movs	r3, #2
 80047d8:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80047da:	2300      	movs	r3, #0
 80047dc:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80047de:	2301      	movs	r3, #1
 80047e0:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(E_CountPap1_GPIO_Port, &GPIO_InitStruct);
 80047e2:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80047e6:	4619      	mov	r1, r3
 80047e8:	487d      	ldr	r0, [pc, #500]	; (80049e0 <HAL_TIM_Base_MspInit+0x270>)
 80047ea:	f003 f9c3 	bl	8007b74 <HAL_GPIO_Init>

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 1, 0);
 80047ee:	2200      	movs	r2, #0
 80047f0:	2101      	movs	r1, #1
 80047f2:	201c      	movs	r0, #28
 80047f4:	f002 fc17 	bl	8007026 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80047f8:	201c      	movs	r0, #28
 80047fa:	f002 fc2e 	bl	800705a <HAL_NVIC_EnableIRQ>
    HAL_NVIC_EnableIRQ(TIM15_IRQn);
  /* USER CODE BEGIN TIM15_MspInit 1 */

  /* USER CODE END TIM15_MspInit 1 */
  }
}
 80047fe:	e0e8      	b.n	80049d2 <HAL_TIM_Base_MspInit+0x262>
  else if(tim_baseHandle->Instance==TIM3)
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	681b      	ldr	r3, [r3, #0]
 8004804:	4a77      	ldr	r2, [pc, #476]	; (80049e4 <HAL_TIM_Base_MspInit+0x274>)
 8004806:	4293      	cmp	r3, r2
 8004808:	d136      	bne.n	8004878 <HAL_TIM_Base_MspInit+0x108>
    __HAL_RCC_TIM3_CLK_ENABLE();
 800480a:	4b74      	ldr	r3, [pc, #464]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 800480c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004810:	4a72      	ldr	r2, [pc, #456]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 8004812:	f043 0302 	orr.w	r3, r3, #2
 8004816:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 800481a:	4b70      	ldr	r3, [pc, #448]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 800481c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004820:	f003 0302 	and.w	r3, r3, #2
 8004824:	62bb      	str	r3, [r7, #40]	; 0x28
 8004826:	6abb      	ldr	r3, [r7, #40]	; 0x28
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004828:	4b6c      	ldr	r3, [pc, #432]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 800482a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800482e:	4a6b      	ldr	r2, [pc, #428]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 8004830:	f043 0301 	orr.w	r3, r3, #1
 8004834:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8004838:	4b68      	ldr	r3, [pc, #416]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 800483a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800483e:	f003 0301 	and.w	r3, r3, #1
 8004842:	627b      	str	r3, [r7, #36]	; 0x24
 8004844:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Pin = E_CountPaP2_Pin;
 8004846:	2340      	movs	r3, #64	; 0x40
 8004848:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800484a:	2302      	movs	r3, #2
 800484c:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 800484e:	2302      	movs	r3, #2
 8004850:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004852:	2300      	movs	r3, #0
 8004854:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8004856:	2302      	movs	r3, #2
 8004858:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(E_CountPaP2_GPIO_Port, &GPIO_InitStruct);
 800485a:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800485e:	4619      	mov	r1, r3
 8004860:	485f      	ldr	r0, [pc, #380]	; (80049e0 <HAL_TIM_Base_MspInit+0x270>)
 8004862:	f003 f987 	bl	8007b74 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(TIM3_IRQn, 1, 0);
 8004866:	2200      	movs	r2, #0
 8004868:	2101      	movs	r1, #1
 800486a:	201d      	movs	r0, #29
 800486c:	f002 fbdb 	bl	8007026 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8004870:	201d      	movs	r0, #29
 8004872:	f002 fbf2 	bl	800705a <HAL_NVIC_EnableIRQ>
}
 8004876:	e0ac      	b.n	80049d2 <HAL_TIM_Base_MspInit+0x262>
  else if(tim_baseHandle->Instance==TIM4)
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	681b      	ldr	r3, [r3, #0]
 800487c:	4a5a      	ldr	r2, [pc, #360]	; (80049e8 <HAL_TIM_Base_MspInit+0x278>)
 800487e:	4293      	cmp	r3, r2
 8004880:	d137      	bne.n	80048f2 <HAL_TIM_Base_MspInit+0x182>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8004882:	4b56      	ldr	r3, [pc, #344]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 8004884:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004888:	4a54      	ldr	r2, [pc, #336]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 800488a:	f043 0304 	orr.w	r3, r3, #4
 800488e:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8004892:	4b52      	ldr	r3, [pc, #328]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 8004894:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004898:	f003 0304 	and.w	r3, r3, #4
 800489c:	623b      	str	r3, [r7, #32]
 800489e:	6a3b      	ldr	r3, [r7, #32]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80048a0:	4b4e      	ldr	r3, [pc, #312]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 80048a2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80048a6:	4a4d      	ldr	r2, [pc, #308]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 80048a8:	f043 0308 	orr.w	r3, r3, #8
 80048ac:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80048b0:	4b4a      	ldr	r3, [pc, #296]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 80048b2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80048b6:	f003 0308 	and.w	r3, r3, #8
 80048ba:	61fb      	str	r3, [r7, #28]
 80048bc:	69fb      	ldr	r3, [r7, #28]
    GPIO_InitStruct.Pin = E_CountPaP3_Pin;
 80048be:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80048c2:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80048c4:	2302      	movs	r3, #2
 80048c6:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 80048c8:	2302      	movs	r3, #2
 80048ca:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80048cc:	2300      	movs	r3, #0
 80048ce:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 80048d0:	2302      	movs	r3, #2
 80048d2:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(E_CountPaP3_GPIO_Port, &GPIO_InitStruct);
 80048d4:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80048d8:	4619      	mov	r1, r3
 80048da:	4844      	ldr	r0, [pc, #272]	; (80049ec <HAL_TIM_Base_MspInit+0x27c>)
 80048dc:	f003 f94a 	bl	8007b74 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(TIM4_IRQn, 1, 0);
 80048e0:	2200      	movs	r2, #0
 80048e2:	2101      	movs	r1, #1
 80048e4:	201e      	movs	r0, #30
 80048e6:	f002 fb9e 	bl	8007026 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 80048ea:	201e      	movs	r0, #30
 80048ec:	f002 fbb5 	bl	800705a <HAL_NVIC_EnableIRQ>
}
 80048f0:	e06f      	b.n	80049d2 <HAL_TIM_Base_MspInit+0x262>
  else if(tim_baseHandle->Instance==TIM5)
 80048f2:	687b      	ldr	r3, [r7, #4]
 80048f4:	681b      	ldr	r3, [r3, #0]
 80048f6:	4a3e      	ldr	r2, [pc, #248]	; (80049f0 <HAL_TIM_Base_MspInit+0x280>)
 80048f8:	4293      	cmp	r3, r2
 80048fa:	d10f      	bne.n	800491c <HAL_TIM_Base_MspInit+0x1ac>
    __HAL_RCC_TIM5_CLK_ENABLE();
 80048fc:	4b37      	ldr	r3, [pc, #220]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 80048fe:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004902:	4a36      	ldr	r2, [pc, #216]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 8004904:	f043 0308 	orr.w	r3, r3, #8
 8004908:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 800490c:	4b33      	ldr	r3, [pc, #204]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 800490e:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004912:	f003 0308 	and.w	r3, r3, #8
 8004916:	61bb      	str	r3, [r7, #24]
 8004918:	69bb      	ldr	r3, [r7, #24]
}
 800491a:	e05a      	b.n	80049d2 <HAL_TIM_Base_MspInit+0x262>
  else if(tim_baseHandle->Instance==TIM12)
 800491c:	687b      	ldr	r3, [r7, #4]
 800491e:	681b      	ldr	r3, [r3, #0]
 8004920:	4a34      	ldr	r2, [pc, #208]	; (80049f4 <HAL_TIM_Base_MspInit+0x284>)
 8004922:	4293      	cmp	r3, r2
 8004924:	d10f      	bne.n	8004946 <HAL_TIM_Base_MspInit+0x1d6>
    __HAL_RCC_TIM12_CLK_ENABLE();
 8004926:	4b2d      	ldr	r3, [pc, #180]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 8004928:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 800492c:	4a2b      	ldr	r2, [pc, #172]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 800492e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004932:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8004936:	4b29      	ldr	r3, [pc, #164]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 8004938:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 800493c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004940:	617b      	str	r3, [r7, #20]
 8004942:	697b      	ldr	r3, [r7, #20]
}
 8004944:	e045      	b.n	80049d2 <HAL_TIM_Base_MspInit+0x262>
  else if(tim_baseHandle->Instance==TIM13)
 8004946:	687b      	ldr	r3, [r7, #4]
 8004948:	681b      	ldr	r3, [r3, #0]
 800494a:	4a2b      	ldr	r2, [pc, #172]	; (80049f8 <HAL_TIM_Base_MspInit+0x288>)
 800494c:	4293      	cmp	r3, r2
 800494e:	d10f      	bne.n	8004970 <HAL_TIM_Base_MspInit+0x200>
    __HAL_RCC_TIM13_CLK_ENABLE();
 8004950:	4b22      	ldr	r3, [pc, #136]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 8004952:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004956:	4a21      	ldr	r2, [pc, #132]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 8004958:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800495c:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8004960:	4b1e      	ldr	r3, [pc, #120]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 8004962:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004966:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800496a:	613b      	str	r3, [r7, #16]
 800496c:	693b      	ldr	r3, [r7, #16]
}
 800496e:	e030      	b.n	80049d2 <HAL_TIM_Base_MspInit+0x262>
  else if(tim_baseHandle->Instance==TIM14)
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	681b      	ldr	r3, [r3, #0]
 8004974:	4a21      	ldr	r2, [pc, #132]	; (80049fc <HAL_TIM_Base_MspInit+0x28c>)
 8004976:	4293      	cmp	r3, r2
 8004978:	d10f      	bne.n	800499a <HAL_TIM_Base_MspInit+0x22a>
    __HAL_RCC_TIM14_CLK_ENABLE();
 800497a:	4b18      	ldr	r3, [pc, #96]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 800497c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004980:	4a16      	ldr	r2, [pc, #88]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 8004982:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004986:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 800498a:	4b14      	ldr	r3, [pc, #80]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 800498c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8004990:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004994:	60fb      	str	r3, [r7, #12]
 8004996:	68fb      	ldr	r3, [r7, #12]
}
 8004998:	e01b      	b.n	80049d2 <HAL_TIM_Base_MspInit+0x262>
  else if(tim_baseHandle->Instance==TIM15)
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	681b      	ldr	r3, [r3, #0]
 800499e:	4a18      	ldr	r2, [pc, #96]	; (8004a00 <HAL_TIM_Base_MspInit+0x290>)
 80049a0:	4293      	cmp	r3, r2
 80049a2:	d116      	bne.n	80049d2 <HAL_TIM_Base_MspInit+0x262>
    __HAL_RCC_TIM15_CLK_ENABLE();
 80049a4:	4b0d      	ldr	r3, [pc, #52]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 80049a6:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 80049aa:	4a0c      	ldr	r2, [pc, #48]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 80049ac:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80049b0:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 80049b4:	4b09      	ldr	r3, [pc, #36]	; (80049dc <HAL_TIM_Base_MspInit+0x26c>)
 80049b6:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 80049ba:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80049be:	60bb      	str	r3, [r7, #8]
 80049c0:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM15_IRQn, 1, 0);
 80049c2:	2200      	movs	r2, #0
 80049c4:	2101      	movs	r1, #1
 80049c6:	2074      	movs	r0, #116	; 0x74
 80049c8:	f002 fb2d 	bl	8007026 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM15_IRQn);
 80049cc:	2074      	movs	r0, #116	; 0x74
 80049ce:	f002 fb44 	bl	800705a <HAL_NVIC_EnableIRQ>
}
 80049d2:	bf00      	nop
 80049d4:	3748      	adds	r7, #72	; 0x48
 80049d6:	46bd      	mov	sp, r7
 80049d8:	bd80      	pop	{r7, pc}
 80049da:	bf00      	nop
 80049dc:	58024400 	.word	0x58024400
 80049e0:	58020000 	.word	0x58020000
 80049e4:	40000400 	.word	0x40000400
 80049e8:	40000800 	.word	0x40000800
 80049ec:	58020c00 	.word	0x58020c00
 80049f0:	40000c00 	.word	0x40000c00
 80049f4:	40001800 	.word	0x40001800
 80049f8:	40001c00 	.word	0x40001c00
 80049fc:	40002000 	.word	0x40002000
 8004a00:	40014000 	.word	0x40014000

08004a04 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8004a04:	b580      	push	{r7, lr}
 8004a06:	b08a      	sub	sp, #40	; 0x28
 8004a08:	af00      	add	r7, sp, #0
 8004a0a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004a0c:	f107 0314 	add.w	r3, r7, #20
 8004a10:	2200      	movs	r2, #0
 8004a12:	601a      	str	r2, [r3, #0]
 8004a14:	605a      	str	r2, [r3, #4]
 8004a16:	609a      	str	r2, [r3, #8]
 8004a18:	60da      	str	r2, [r3, #12]
 8004a1a:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM12)
 8004a1c:	687b      	ldr	r3, [r7, #4]
 8004a1e:	681b      	ldr	r3, [r3, #0]
 8004a20:	4a39      	ldr	r2, [pc, #228]	; (8004b08 <HAL_TIM_MspPostInit+0x104>)
 8004a22:	4293      	cmp	r3, r2
 8004a24:	d120      	bne.n	8004a68 <HAL_TIM_MspPostInit+0x64>
  {
  /* USER CODE BEGIN TIM12_MspPostInit 0 */

  /* USER CODE END TIM12_MspPostInit 0 */
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004a26:	4b39      	ldr	r3, [pc, #228]	; (8004b0c <HAL_TIM_MspPostInit+0x108>)
 8004a28:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004a2c:	4a37      	ldr	r2, [pc, #220]	; (8004b0c <HAL_TIM_MspPostInit+0x108>)
 8004a2e:	f043 0302 	orr.w	r3, r3, #2
 8004a32:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8004a36:	4b35      	ldr	r3, [pc, #212]	; (8004b0c <HAL_TIM_MspPostInit+0x108>)
 8004a38:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004a3c:	f003 0302 	and.w	r3, r3, #2
 8004a40:	613b      	str	r3, [r7, #16]
 8004a42:	693b      	ldr	r3, [r7, #16]
    /**TIM12 GPIO Configuration
    PB14     ------> TIM12_CH1
    */
    GPIO_InitStruct.Pin = S_PulsoPaP1_Pin;
 8004a44:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8004a48:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004a4a:	2302      	movs	r3, #2
 8004a4c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8004a4e:	2302      	movs	r3, #2
 8004a50:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004a52:	2300      	movs	r3, #0
 8004a54:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM12;
 8004a56:	2302      	movs	r3, #2
 8004a58:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(S_PulsoPaP1_GPIO_Port, &GPIO_InitStruct);
 8004a5a:	f107 0314 	add.w	r3, r7, #20
 8004a5e:	4619      	mov	r1, r3
 8004a60:	482b      	ldr	r0, [pc, #172]	; (8004b10 <HAL_TIM_MspPostInit+0x10c>)
 8004a62:	f003 f887 	bl	8007b74 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 8004a66:	e04a      	b.n	8004afe <HAL_TIM_MspPostInit+0xfa>
  else if(timHandle->Instance==TIM13)
 8004a68:	687b      	ldr	r3, [r7, #4]
 8004a6a:	681b      	ldr	r3, [r3, #0]
 8004a6c:	4a29      	ldr	r2, [pc, #164]	; (8004b14 <HAL_TIM_MspPostInit+0x110>)
 8004a6e:	4293      	cmp	r3, r2
 8004a70:	d120      	bne.n	8004ab4 <HAL_TIM_MspPostInit+0xb0>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8004a72:	4b26      	ldr	r3, [pc, #152]	; (8004b0c <HAL_TIM_MspPostInit+0x108>)
 8004a74:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004a78:	4a24      	ldr	r2, [pc, #144]	; (8004b0c <HAL_TIM_MspPostInit+0x108>)
 8004a7a:	f043 0320 	orr.w	r3, r3, #32
 8004a7e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8004a82:	4b22      	ldr	r3, [pc, #136]	; (8004b0c <HAL_TIM_MspPostInit+0x108>)
 8004a84:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004a88:	f003 0320 	and.w	r3, r3, #32
 8004a8c:	60fb      	str	r3, [r7, #12]
 8004a8e:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = S_PulsoPaP2_Pin;
 8004a90:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004a94:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004a96:	2302      	movs	r3, #2
 8004a98:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8004a9a:	2302      	movs	r3, #2
 8004a9c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004a9e:	2300      	movs	r3, #0
 8004aa0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 8004aa2:	2309      	movs	r3, #9
 8004aa4:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(S_PulsoPaP2_GPIO_Port, &GPIO_InitStruct);
 8004aa6:	f107 0314 	add.w	r3, r7, #20
 8004aaa:	4619      	mov	r1, r3
 8004aac:	481a      	ldr	r0, [pc, #104]	; (8004b18 <HAL_TIM_MspPostInit+0x114>)
 8004aae:	f003 f861 	bl	8007b74 <HAL_GPIO_Init>
}
 8004ab2:	e024      	b.n	8004afe <HAL_TIM_MspPostInit+0xfa>
  else if(timHandle->Instance==TIM14)
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	4a18      	ldr	r2, [pc, #96]	; (8004b1c <HAL_TIM_MspPostInit+0x118>)
 8004aba:	4293      	cmp	r3, r2
 8004abc:	d11f      	bne.n	8004afe <HAL_TIM_MspPostInit+0xfa>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8004abe:	4b13      	ldr	r3, [pc, #76]	; (8004b0c <HAL_TIM_MspPostInit+0x108>)
 8004ac0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004ac4:	4a11      	ldr	r2, [pc, #68]	; (8004b0c <HAL_TIM_MspPostInit+0x108>)
 8004ac6:	f043 0320 	orr.w	r3, r3, #32
 8004aca:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8004ace:	4b0f      	ldr	r3, [pc, #60]	; (8004b0c <HAL_TIM_MspPostInit+0x108>)
 8004ad0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004ad4:	f003 0320 	and.w	r3, r3, #32
 8004ad8:	60bb      	str	r3, [r7, #8]
 8004ada:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = S_PulsoPaP3_Pin;
 8004adc:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004ae0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004ae2:	2302      	movs	r3, #2
 8004ae4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 8004ae6:	2302      	movs	r3, #2
 8004ae8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004aea:	2300      	movs	r3, #0
 8004aec:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8004aee:	2309      	movs	r3, #9
 8004af0:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(S_PulsoPaP3_GPIO_Port, &GPIO_InitStruct);
 8004af2:	f107 0314 	add.w	r3, r7, #20
 8004af6:	4619      	mov	r1, r3
 8004af8:	4807      	ldr	r0, [pc, #28]	; (8004b18 <HAL_TIM_MspPostInit+0x114>)
 8004afa:	f003 f83b 	bl	8007b74 <HAL_GPIO_Init>
}
 8004afe:	bf00      	nop
 8004b00:	3728      	adds	r7, #40	; 0x28
 8004b02:	46bd      	mov	sp, r7
 8004b04:	bd80      	pop	{r7, pc}
 8004b06:	bf00      	nop
 8004b08:	40001800 	.word	0x40001800
 8004b0c:	58024400 	.word	0x58024400
 8004b10:	58020400 	.word	0x58020400
 8004b14:	40001c00 	.word	0x40001c00
 8004b18:	58021400 	.word	0x58021400
 8004b1c:	40002000 	.word	0x40002000

08004b20 <get_Straj>:
float alimd;
float vlim;
float T,Ta,Td,Tv,Tj1,Tj2,Tj,delta;
float qi,qf;

void get_Straj(float t){
 8004b20:	b580      	push	{r7, lr}
 8004b22:	ed2d 8b06 	vpush	{d8-d10}
 8004b26:	b082      	sub	sp, #8
 8004b28:	af00      	add	r7, sp, #0
 8004b2a:	ed87 0a01 	vstr	s0, [r7, #4]

    if (qf < qi){
 8004b2e:	4bb6      	ldr	r3, [pc, #728]	; (8004e08 <get_Straj+0x2e8>)
 8004b30:	ed93 7a00 	vldr	s14, [r3]
 8004b34:	4bb5      	ldr	r3, [pc, #724]	; (8004e0c <get_Straj+0x2ec>)
 8004b36:	edd3 7a00 	vldr	s15, [r3]
 8004b3a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8004b3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b42:	f140 8081 	bpl.w	8004c48 <get_Straj+0x128>

    flagInv = true;
 8004b46:	4bb2      	ldr	r3, [pc, #712]	; (8004e10 <get_Straj+0x2f0>)
 8004b48:	2201      	movs	r2, #1
 8004b4a:	701a      	strb	r2, [r3, #0]

    qi = -qi;
 8004b4c:	4baf      	ldr	r3, [pc, #700]	; (8004e0c <get_Straj+0x2ec>)
 8004b4e:	edd3 7a00 	vldr	s15, [r3]
 8004b52:	eef1 7a67 	vneg.f32	s15, s15
 8004b56:	4bad      	ldr	r3, [pc, #692]	; (8004e0c <get_Straj+0x2ec>)
 8004b58:	edc3 7a00 	vstr	s15, [r3]
    qf = -qf;
 8004b5c:	4baa      	ldr	r3, [pc, #680]	; (8004e08 <get_Straj+0x2e8>)
 8004b5e:	edd3 7a00 	vldr	s15, [r3]
 8004b62:	eef1 7a67 	vneg.f32	s15, s15
 8004b66:	4ba8      	ldr	r3, [pc, #672]	; (8004e08 <get_Straj+0x2e8>)
 8004b68:	edc3 7a00 	vstr	s15, [r3]
    vi = -vi;
 8004b6c:	4ba9      	ldr	r3, [pc, #676]	; (8004e14 <get_Straj+0x2f4>)
 8004b6e:	edd3 7a00 	vldr	s15, [r3]
 8004b72:	eef1 7a67 	vneg.f32	s15, s15
 8004b76:	4ba7      	ldr	r3, [pc, #668]	; (8004e14 <get_Straj+0x2f4>)
 8004b78:	edc3 7a00 	vstr	s15, [r3]
    vf = -vf;
 8004b7c:	4ba6      	ldr	r3, [pc, #664]	; (8004e18 <get_Straj+0x2f8>)
 8004b7e:	edd3 7a00 	vldr	s15, [r3]
 8004b82:	eef1 7a67 	vneg.f32	s15, s15
 8004b86:	4ba4      	ldr	r3, [pc, #656]	; (8004e18 <get_Straj+0x2f8>)
 8004b88:	edc3 7a00 	vstr	s15, [r3]

    vmax = -vmin;
 8004b8c:	4ba3      	ldr	r3, [pc, #652]	; (8004e1c <get_Straj+0x2fc>)
 8004b8e:	edd3 7a00 	vldr	s15, [r3]
 8004b92:	eef1 7a67 	vneg.f32	s15, s15
 8004b96:	4ba2      	ldr	r3, [pc, #648]	; (8004e20 <get_Straj+0x300>)
 8004b98:	edc3 7a00 	vstr	s15, [r3]
    vmin = -vmax;
 8004b9c:	4ba0      	ldr	r3, [pc, #640]	; (8004e20 <get_Straj+0x300>)
 8004b9e:	edd3 7a00 	vldr	s15, [r3]
 8004ba2:	eef1 7a67 	vneg.f32	s15, s15
 8004ba6:	4b9d      	ldr	r3, [pc, #628]	; (8004e1c <get_Straj+0x2fc>)
 8004ba8:	edc3 7a00 	vstr	s15, [r3]
    amax = -amin;
 8004bac:	4b9d      	ldr	r3, [pc, #628]	; (8004e24 <get_Straj+0x304>)
 8004bae:	edd3 7a00 	vldr	s15, [r3]
 8004bb2:	eef1 7a67 	vneg.f32	s15, s15
 8004bb6:	4b9c      	ldr	r3, [pc, #624]	; (8004e28 <get_Straj+0x308>)
 8004bb8:	edc3 7a00 	vstr	s15, [r3]
    amin = -amax;
 8004bbc:	4b9a      	ldr	r3, [pc, #616]	; (8004e28 <get_Straj+0x308>)
 8004bbe:	edd3 7a00 	vldr	s15, [r3]
 8004bc2:	eef1 7a67 	vneg.f32	s15, s15
 8004bc6:	4b97      	ldr	r3, [pc, #604]	; (8004e24 <get_Straj+0x304>)
 8004bc8:	edc3 7a00 	vstr	s15, [r3]
    jmax = -jmin;
 8004bcc:	4b97      	ldr	r3, [pc, #604]	; (8004e2c <get_Straj+0x30c>)
 8004bce:	edd3 7a00 	vldr	s15, [r3]
 8004bd2:	eef1 7a67 	vneg.f32	s15, s15
 8004bd6:	4b96      	ldr	r3, [pc, #600]	; (8004e30 <get_Straj+0x310>)
 8004bd8:	edc3 7a00 	vstr	s15, [r3]
    jmin = -jmax;
 8004bdc:	4b94      	ldr	r3, [pc, #592]	; (8004e30 <get_Straj+0x310>)
 8004bde:	edd3 7a00 	vldr	s15, [r3]
 8004be2:	eef1 7a67 	vneg.f32	s15, s15
 8004be6:	4b91      	ldr	r3, [pc, #580]	; (8004e2c <get_Straj+0x30c>)
 8004be8:	edc3 7a00 	vstr	s15, [r3]

    alima = jmax*Tj1;
 8004bec:	4b90      	ldr	r3, [pc, #576]	; (8004e30 <get_Straj+0x310>)
 8004bee:	ed93 7a00 	vldr	s14, [r3]
 8004bf2:	4b90      	ldr	r3, [pc, #576]	; (8004e34 <get_Straj+0x314>)
 8004bf4:	edd3 7a00 	vldr	s15, [r3]
 8004bf8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004bfc:	4b8e      	ldr	r3, [pc, #568]	; (8004e38 <get_Straj+0x318>)
 8004bfe:	edc3 7a00 	vstr	s15, [r3]
    alimd = -jmax*Tj2;
 8004c02:	4b8b      	ldr	r3, [pc, #556]	; (8004e30 <get_Straj+0x310>)
 8004c04:	edd3 7a00 	vldr	s15, [r3]
 8004c08:	eeb1 7a67 	vneg.f32	s14, s15
 8004c0c:	4b8b      	ldr	r3, [pc, #556]	; (8004e3c <get_Straj+0x31c>)
 8004c0e:	edd3 7a00 	vldr	s15, [r3]
 8004c12:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004c16:	4b8a      	ldr	r3, [pc, #552]	; (8004e40 <get_Straj+0x320>)
 8004c18:	edc3 7a00 	vstr	s15, [r3]
    vlim = vi+(Ta-Tj1)*alima;
 8004c1c:	4b89      	ldr	r3, [pc, #548]	; (8004e44 <get_Straj+0x324>)
 8004c1e:	ed93 7a00 	vldr	s14, [r3]
 8004c22:	4b84      	ldr	r3, [pc, #528]	; (8004e34 <get_Straj+0x314>)
 8004c24:	edd3 7a00 	vldr	s15, [r3]
 8004c28:	ee37 7a67 	vsub.f32	s14, s14, s15
 8004c2c:	4b82      	ldr	r3, [pc, #520]	; (8004e38 <get_Straj+0x318>)
 8004c2e:	edd3 7a00 	vldr	s15, [r3]
 8004c32:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004c36:	4b77      	ldr	r3, [pc, #476]	; (8004e14 <get_Straj+0x2f4>)
 8004c38:	edd3 7a00 	vldr	s15, [r3]
 8004c3c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004c40:	4b81      	ldr	r3, [pc, #516]	; (8004e48 <get_Straj+0x328>)
 8004c42:	edc3 7a00 	vstr	s15, [r3]
 8004c46:	e044      	b.n	8004cd2 <get_Straj+0x1b2>

    }else{
        jmin = -jmax;
 8004c48:	4b79      	ldr	r3, [pc, #484]	; (8004e30 <get_Straj+0x310>)
 8004c4a:	edd3 7a00 	vldr	s15, [r3]
 8004c4e:	eef1 7a67 	vneg.f32	s15, s15
 8004c52:	4b76      	ldr	r3, [pc, #472]	; (8004e2c <get_Straj+0x30c>)
 8004c54:	edc3 7a00 	vstr	s15, [r3]
        amin = -amax;
 8004c58:	4b73      	ldr	r3, [pc, #460]	; (8004e28 <get_Straj+0x308>)
 8004c5a:	edd3 7a00 	vldr	s15, [r3]
 8004c5e:	eef1 7a67 	vneg.f32	s15, s15
 8004c62:	4b70      	ldr	r3, [pc, #448]	; (8004e24 <get_Straj+0x304>)
 8004c64:	edc3 7a00 	vstr	s15, [r3]
        vmin = -vmax;
 8004c68:	4b6d      	ldr	r3, [pc, #436]	; (8004e20 <get_Straj+0x300>)
 8004c6a:	edd3 7a00 	vldr	s15, [r3]
 8004c6e:	eef1 7a67 	vneg.f32	s15, s15
 8004c72:	4b6a      	ldr	r3, [pc, #424]	; (8004e1c <get_Straj+0x2fc>)
 8004c74:	edc3 7a00 	vstr	s15, [r3]

        alima = jmax*Tj1;
 8004c78:	4b6d      	ldr	r3, [pc, #436]	; (8004e30 <get_Straj+0x310>)
 8004c7a:	ed93 7a00 	vldr	s14, [r3]
 8004c7e:	4b6d      	ldr	r3, [pc, #436]	; (8004e34 <get_Straj+0x314>)
 8004c80:	edd3 7a00 	vldr	s15, [r3]
 8004c84:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004c88:	4b6b      	ldr	r3, [pc, #428]	; (8004e38 <get_Straj+0x318>)
 8004c8a:	edc3 7a00 	vstr	s15, [r3]
        alimd = -jmax*Tj2;
 8004c8e:	4b68      	ldr	r3, [pc, #416]	; (8004e30 <get_Straj+0x310>)
 8004c90:	edd3 7a00 	vldr	s15, [r3]
 8004c94:	eeb1 7a67 	vneg.f32	s14, s15
 8004c98:	4b68      	ldr	r3, [pc, #416]	; (8004e3c <get_Straj+0x31c>)
 8004c9a:	edd3 7a00 	vldr	s15, [r3]
 8004c9e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004ca2:	4b67      	ldr	r3, [pc, #412]	; (8004e40 <get_Straj+0x320>)
 8004ca4:	edc3 7a00 	vstr	s15, [r3]
        vlim = vi+(Ta-Tj1)*alima;
 8004ca8:	4b66      	ldr	r3, [pc, #408]	; (8004e44 <get_Straj+0x324>)
 8004caa:	ed93 7a00 	vldr	s14, [r3]
 8004cae:	4b61      	ldr	r3, [pc, #388]	; (8004e34 <get_Straj+0x314>)
 8004cb0:	edd3 7a00 	vldr	s15, [r3]
 8004cb4:	ee37 7a67 	vsub.f32	s14, s14, s15
 8004cb8:	4b5f      	ldr	r3, [pc, #380]	; (8004e38 <get_Straj+0x318>)
 8004cba:	edd3 7a00 	vldr	s15, [r3]
 8004cbe:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004cc2:	4b54      	ldr	r3, [pc, #336]	; (8004e14 <get_Straj+0x2f4>)
 8004cc4:	edd3 7a00 	vldr	s15, [r3]
 8004cc8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004ccc:	4b5e      	ldr	r3, [pc, #376]	; (8004e48 <get_Straj+0x328>)
 8004cce:	edc3 7a00 	vstr	s15, [r3]
    }


    //#Acceleration phase

    if (t>=0 && t<=Tj1){               //a) [0,Tj1]
 8004cd2:	edd7 7a01 	vldr	s15, [r7, #4]
 8004cd6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004cda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004cde:	f2c0 80bd 	blt.w	8004e5c <get_Straj+0x33c>
 8004ce2:	4b54      	ldr	r3, [pc, #336]	; (8004e34 <get_Straj+0x314>)
 8004ce4:	edd3 7a00 	vldr	s15, [r3]
 8004ce8:	ed97 7a01 	vldr	s14, [r7, #4]
 8004cec:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8004cf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004cf4:	f200 80b2 	bhi.w	8004e5c <get_Straj+0x33c>
        //printf("tramo1\n");
        q = qi+vi*t+jmax*pow(t,3)/6;
 8004cf8:	4b46      	ldr	r3, [pc, #280]	; (8004e14 <get_Straj+0x2f4>)
 8004cfa:	ed93 7a00 	vldr	s14, [r3]
 8004cfe:	edd7 7a01 	vldr	s15, [r7, #4]
 8004d02:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004d06:	4b41      	ldr	r3, [pc, #260]	; (8004e0c <get_Straj+0x2ec>)
 8004d08:	edd3 7a00 	vldr	s15, [r3]
 8004d0c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004d10:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8004d14:	4b46      	ldr	r3, [pc, #280]	; (8004e30 <get_Straj+0x310>)
 8004d16:	edd3 7a00 	vldr	s15, [r3]
 8004d1a:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8004d1e:	edd7 7a01 	vldr	s15, [r7, #4]
 8004d22:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8004d26:	eeb0 1b08 	vmov.f64	d1, #8	; 0x40400000  3.0
 8004d2a:	eeb0 0b47 	vmov.f64	d0, d7
 8004d2e:	f00c fe9f 	bl	8011a70 <pow>
 8004d32:	eeb0 7b40 	vmov.f64	d7, d0
 8004d36:	ee29 6b07 	vmul.f64	d6, d9, d7
 8004d3a:	eeb1 5b08 	vmov.f64	d5, #24	; 0x40c00000  6.0
 8004d3e:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8004d42:	ee38 7b07 	vadd.f64	d7, d8, d7
 8004d46:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8004d4a:	4b40      	ldr	r3, [pc, #256]	; (8004e4c <get_Straj+0x32c>)
 8004d4c:	edc3 7a00 	vstr	s15, [r3]
        qd = vi+jmax*pow(t,2)/2;
 8004d50:	4b30      	ldr	r3, [pc, #192]	; (8004e14 <get_Straj+0x2f4>)
 8004d52:	edd3 7a00 	vldr	s15, [r3]
 8004d56:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8004d5a:	4b35      	ldr	r3, [pc, #212]	; (8004e30 <get_Straj+0x310>)
 8004d5c:	edd3 7a00 	vldr	s15, [r3]
 8004d60:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8004d64:	edd7 7a01 	vldr	s15, [r7, #4]
 8004d68:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8004d6c:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8004d70:	eeb0 0b47 	vmov.f64	d0, d7
 8004d74:	f00c fe7c 	bl	8011a70 <pow>
 8004d78:	eeb0 7b40 	vmov.f64	d7, d0
 8004d7c:	ee29 6b07 	vmul.f64	d6, d9, d7
 8004d80:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 8004d84:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8004d88:	ee38 7b07 	vadd.f64	d7, d8, d7
 8004d8c:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8004d90:	4b2f      	ldr	r3, [pc, #188]	; (8004e50 <get_Straj+0x330>)
 8004d92:	edc3 7a00 	vstr	s15, [r3]
        qdd = jmax*t;
 8004d96:	4b26      	ldr	r3, [pc, #152]	; (8004e30 <get_Straj+0x310>)
 8004d98:	ed93 7a00 	vldr	s14, [r3]
 8004d9c:	edd7 7a01 	vldr	s15, [r7, #4]
 8004da0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004da4:	4b2b      	ldr	r3, [pc, #172]	; (8004e54 <get_Straj+0x334>)
 8004da6:	edc3 7a00 	vstr	s15, [r3]
        qddd = jmax;
 8004daa:	4b21      	ldr	r3, [pc, #132]	; (8004e30 <get_Straj+0x310>)
 8004dac:	681b      	ldr	r3, [r3, #0]
 8004dae:	4a2a      	ldr	r2, [pc, #168]	; (8004e58 <get_Straj+0x338>)
 8004db0:	6013      	str	r3, [r2, #0]
        if (flagInv){
 8004db2:	4b17      	ldr	r3, [pc, #92]	; (8004e10 <get_Straj+0x2f0>)
 8004db4:	781b      	ldrb	r3, [r3, #0]
 8004db6:	2b00      	cmp	r3, #0
 8004db8:	f000 8545 	beq.w	8005846 <get_Straj+0xd26>
            q=-q; qd=-qd; qdd=-qdd; qddd=-qddd;
 8004dbc:	4b23      	ldr	r3, [pc, #140]	; (8004e4c <get_Straj+0x32c>)
 8004dbe:	edd3 7a00 	vldr	s15, [r3]
 8004dc2:	eef1 7a67 	vneg.f32	s15, s15
 8004dc6:	4b21      	ldr	r3, [pc, #132]	; (8004e4c <get_Straj+0x32c>)
 8004dc8:	edc3 7a00 	vstr	s15, [r3]
 8004dcc:	4b20      	ldr	r3, [pc, #128]	; (8004e50 <get_Straj+0x330>)
 8004dce:	edd3 7a00 	vldr	s15, [r3]
 8004dd2:	eef1 7a67 	vneg.f32	s15, s15
 8004dd6:	4b1e      	ldr	r3, [pc, #120]	; (8004e50 <get_Straj+0x330>)
 8004dd8:	edc3 7a00 	vstr	s15, [r3]
 8004ddc:	4b1d      	ldr	r3, [pc, #116]	; (8004e54 <get_Straj+0x334>)
 8004dde:	edd3 7a00 	vldr	s15, [r3]
 8004de2:	eef1 7a67 	vneg.f32	s15, s15
 8004de6:	4b1b      	ldr	r3, [pc, #108]	; (8004e54 <get_Straj+0x334>)
 8004de8:	edc3 7a00 	vstr	s15, [r3]
 8004dec:	4b1a      	ldr	r3, [pc, #104]	; (8004e58 <get_Straj+0x338>)
 8004dee:	edd3 7a00 	vldr	s15, [r3]
 8004df2:	eef1 7a67 	vneg.f32	s15, s15
 8004df6:	4b18      	ldr	r3, [pc, #96]	; (8004e58 <get_Straj+0x338>)
 8004df8:	edc3 7a00 	vstr	s15, [r3]
            flagInv = false;
 8004dfc:	4b04      	ldr	r3, [pc, #16]	; (8004e10 <get_Straj+0x2f0>)
 8004dfe:	2200      	movs	r2, #0
 8004e00:	701a      	strb	r2, [r3, #0]
        if (flagInv){
 8004e02:	f000 bd20 	b.w	8005846 <get_Straj+0xd26>
 8004e06:	bf00      	nop
 8004e08:	24000ad8 	.word	0x24000ad8
 8004e0c:	24000ad4 	.word	0x24000ad4
 8004e10:	24000aa4 	.word	0x24000aa4
 8004e14:	24000688 	.word	0x24000688
 8004e18:	2400068c 	.word	0x2400068c
 8004e1c:	24000684 	.word	0x24000684
 8004e20:	2400009c 	.word	0x2400009c
 8004e24:	24000690 	.word	0x24000690
 8004e28:	240000a0 	.word	0x240000a0
 8004e2c:	24000680 	.word	0x24000680
 8004e30:	24000098 	.word	0x24000098
 8004e34:	24000ac4 	.word	0x24000ac4
 8004e38:	24000aa8 	.word	0x24000aa8
 8004e3c:	24000ac8 	.word	0x24000ac8
 8004e40:	24000aac 	.word	0x24000aac
 8004e44:	24000ab8 	.word	0x24000ab8
 8004e48:	24000ab0 	.word	0x24000ab0
 8004e4c:	24000670 	.word	0x24000670
 8004e50:	24000674 	.word	0x24000674
 8004e54:	24000678 	.word	0x24000678
 8004e58:	2400067c 	.word	0x2400067c
        }

    } else if (t>Tj1 && t<=Ta-Tj1){   //b) [Tj1,Ta-Tj1]
 8004e5c:	4bc1      	ldr	r3, [pc, #772]	; (8005164 <get_Straj+0x644>)
 8004e5e:	edd3 7a00 	vldr	s15, [r3]
 8004e62:	ed97 7a01 	vldr	s14, [r7, #4]
 8004e66:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8004e6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e6e:	f340 80af 	ble.w	8004fd0 <get_Straj+0x4b0>
 8004e72:	4bbd      	ldr	r3, [pc, #756]	; (8005168 <get_Straj+0x648>)
 8004e74:	ed93 7a00 	vldr	s14, [r3]
 8004e78:	4bba      	ldr	r3, [pc, #744]	; (8005164 <get_Straj+0x644>)
 8004e7a:	edd3 7a00 	vldr	s15, [r3]
 8004e7e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004e82:	ed97 7a01 	vldr	s14, [r7, #4]
 8004e86:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8004e8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e8e:	f200 809f 	bhi.w	8004fd0 <get_Straj+0x4b0>
        //printf("tramo2\n");
        q = qi+vi*t+(alima/6)*(3*pow(t,2)-3*Tj1*t+pow(Tj1,2));
 8004e92:	4bb6      	ldr	r3, [pc, #728]	; (800516c <get_Straj+0x64c>)
 8004e94:	ed93 7a00 	vldr	s14, [r3]
 8004e98:	edd7 7a01 	vldr	s15, [r7, #4]
 8004e9c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004ea0:	4bb3      	ldr	r3, [pc, #716]	; (8005170 <get_Straj+0x650>)
 8004ea2:	edd3 7a00 	vldr	s15, [r3]
 8004ea6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004eaa:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8004eae:	4bb1      	ldr	r3, [pc, #708]	; (8005174 <get_Straj+0x654>)
 8004eb0:	ed93 7a00 	vldr	s14, [r3]
 8004eb4:	eef1 6a08 	vmov.f32	s13, #24	; 0x40c00000  6.0
 8004eb8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004ebc:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8004ec0:	edd7 7a01 	vldr	s15, [r7, #4]
 8004ec4:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8004ec8:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8004ecc:	eeb0 0b47 	vmov.f64	d0, d7
 8004ed0:	f00c fdce 	bl	8011a70 <pow>
 8004ed4:	eeb0 7b40 	vmov.f64	d7, d0
 8004ed8:	eeb0 6b08 	vmov.f64	d6, #8	; 0x40400000  3.0
 8004edc:	ee27 6b06 	vmul.f64	d6, d7, d6
 8004ee0:	4ba0      	ldr	r3, [pc, #640]	; (8005164 <get_Straj+0x644>)
 8004ee2:	edd3 7a00 	vldr	s15, [r3]
 8004ee6:	eeb0 7a08 	vmov.f32	s14, #8	; 0x40400000  3.0
 8004eea:	ee27 7a87 	vmul.f32	s14, s15, s14
 8004eee:	edd7 7a01 	vldr	s15, [r7, #4]
 8004ef2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004ef6:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8004efa:	ee36 ab47 	vsub.f64	d10, d6, d7
 8004efe:	4b99      	ldr	r3, [pc, #612]	; (8005164 <get_Straj+0x644>)
 8004f00:	edd3 7a00 	vldr	s15, [r3]
 8004f04:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8004f08:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8004f0c:	eeb0 0b47 	vmov.f64	d0, d7
 8004f10:	f00c fdae 	bl	8011a70 <pow>
 8004f14:	eeb0 7b40 	vmov.f64	d7, d0
 8004f18:	ee3a 7b07 	vadd.f64	d7, d10, d7
 8004f1c:	ee29 7b07 	vmul.f64	d7, d9, d7
 8004f20:	ee38 7b07 	vadd.f64	d7, d8, d7
 8004f24:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8004f28:	4b93      	ldr	r3, [pc, #588]	; (8005178 <get_Straj+0x658>)
 8004f2a:	edc3 7a00 	vstr	s15, [r3]
        qd = vi+amax*(t-Tj1/2);
 8004f2e:	4b8d      	ldr	r3, [pc, #564]	; (8005164 <get_Straj+0x644>)
 8004f30:	ed93 7a00 	vldr	s14, [r3]
 8004f34:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8004f38:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8004f3c:	ed97 7a01 	vldr	s14, [r7, #4]
 8004f40:	ee37 7a67 	vsub.f32	s14, s14, s15
 8004f44:	4b8d      	ldr	r3, [pc, #564]	; (800517c <get_Straj+0x65c>)
 8004f46:	edd3 7a00 	vldr	s15, [r3]
 8004f4a:	ee27 7a27 	vmul.f32	s14, s14, s15
 8004f4e:	4b87      	ldr	r3, [pc, #540]	; (800516c <get_Straj+0x64c>)
 8004f50:	edd3 7a00 	vldr	s15, [r3]
 8004f54:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004f58:	4b89      	ldr	r3, [pc, #548]	; (8005180 <get_Straj+0x660>)
 8004f5a:	edc3 7a00 	vstr	s15, [r3]
        qdd = jmax*Tj1;
 8004f5e:	4b89      	ldr	r3, [pc, #548]	; (8005184 <get_Straj+0x664>)
 8004f60:	ed93 7a00 	vldr	s14, [r3]
 8004f64:	4b7f      	ldr	r3, [pc, #508]	; (8005164 <get_Straj+0x644>)
 8004f66:	edd3 7a00 	vldr	s15, [r3]
 8004f6a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8004f6e:	4b86      	ldr	r3, [pc, #536]	; (8005188 <get_Straj+0x668>)
 8004f70:	edc3 7a00 	vstr	s15, [r3]
        qddd = 0;
 8004f74:	4b85      	ldr	r3, [pc, #532]	; (800518c <get_Straj+0x66c>)
 8004f76:	f04f 0200 	mov.w	r2, #0
 8004f7a:	601a      	str	r2, [r3, #0]

        if (flagInv){
 8004f7c:	4b84      	ldr	r3, [pc, #528]	; (8005190 <get_Straj+0x670>)
 8004f7e:	781b      	ldrb	r3, [r3, #0]
 8004f80:	2b00      	cmp	r3, #0
 8004f82:	f000 8460 	beq.w	8005846 <get_Straj+0xd26>
            q=-q; qd=-qd; qdd=-qdd; qddd=-qddd;
 8004f86:	4b7c      	ldr	r3, [pc, #496]	; (8005178 <get_Straj+0x658>)
 8004f88:	edd3 7a00 	vldr	s15, [r3]
 8004f8c:	eef1 7a67 	vneg.f32	s15, s15
 8004f90:	4b79      	ldr	r3, [pc, #484]	; (8005178 <get_Straj+0x658>)
 8004f92:	edc3 7a00 	vstr	s15, [r3]
 8004f96:	4b7a      	ldr	r3, [pc, #488]	; (8005180 <get_Straj+0x660>)
 8004f98:	edd3 7a00 	vldr	s15, [r3]
 8004f9c:	eef1 7a67 	vneg.f32	s15, s15
 8004fa0:	4b77      	ldr	r3, [pc, #476]	; (8005180 <get_Straj+0x660>)
 8004fa2:	edc3 7a00 	vstr	s15, [r3]
 8004fa6:	4b78      	ldr	r3, [pc, #480]	; (8005188 <get_Straj+0x668>)
 8004fa8:	edd3 7a00 	vldr	s15, [r3]
 8004fac:	eef1 7a67 	vneg.f32	s15, s15
 8004fb0:	4b75      	ldr	r3, [pc, #468]	; (8005188 <get_Straj+0x668>)
 8004fb2:	edc3 7a00 	vstr	s15, [r3]
 8004fb6:	4b75      	ldr	r3, [pc, #468]	; (800518c <get_Straj+0x66c>)
 8004fb8:	edd3 7a00 	vldr	s15, [r3]
 8004fbc:	eef1 7a67 	vneg.f32	s15, s15
 8004fc0:	4b72      	ldr	r3, [pc, #456]	; (800518c <get_Straj+0x66c>)
 8004fc2:	edc3 7a00 	vstr	s15, [r3]
            flagInv = false;
 8004fc6:	4b72      	ldr	r3, [pc, #456]	; (8005190 <get_Straj+0x670>)
 8004fc8:	2200      	movs	r2, #0
 8004fca:	701a      	strb	r2, [r3, #0]
        if (flagInv){
 8004fcc:	f000 bc3b 	b.w	8005846 <get_Straj+0xd26>
        }

    } else if (t>Ta-Tj1 && t<=Ta){    //c) [Ta-Tj1,Ta]
 8004fd0:	4b65      	ldr	r3, [pc, #404]	; (8005168 <get_Straj+0x648>)
 8004fd2:	ed93 7a00 	vldr	s14, [r3]
 8004fd6:	4b63      	ldr	r3, [pc, #396]	; (8005164 <get_Straj+0x644>)
 8004fd8:	edd3 7a00 	vldr	s15, [r3]
 8004fdc:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004fe0:	ed97 7a01 	vldr	s14, [r7, #4]
 8004fe4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8004fe8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004fec:	f340 80d8 	ble.w	80051a0 <get_Straj+0x680>
 8004ff0:	4b5d      	ldr	r3, [pc, #372]	; (8005168 <get_Straj+0x648>)
 8004ff2:	edd3 7a00 	vldr	s15, [r3]
 8004ff6:	ed97 7a01 	vldr	s14, [r7, #4]
 8004ffa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8004ffe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005002:	f200 80cd 	bhi.w	80051a0 <get_Straj+0x680>
        //printf("tramo3\n");
        q = qi+(vlim+vi)*Ta/2-vlim*(Ta-t)-jmin*pow(Ta-t,3)/6;
 8005006:	4b63      	ldr	r3, [pc, #396]	; (8005194 <get_Straj+0x674>)
 8005008:	ed93 7a00 	vldr	s14, [r3]
 800500c:	4b57      	ldr	r3, [pc, #348]	; (800516c <get_Straj+0x64c>)
 800500e:	edd3 7a00 	vldr	s15, [r3]
 8005012:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005016:	4b54      	ldr	r3, [pc, #336]	; (8005168 <get_Straj+0x648>)
 8005018:	edd3 7a00 	vldr	s15, [r3]
 800501c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005020:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8005024:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8005028:	4b51      	ldr	r3, [pc, #324]	; (8005170 <get_Straj+0x650>)
 800502a:	edd3 7a00 	vldr	s15, [r3]
 800502e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005032:	4b4d      	ldr	r3, [pc, #308]	; (8005168 <get_Straj+0x648>)
 8005034:	edd3 6a00 	vldr	s13, [r3]
 8005038:	edd7 7a01 	vldr	s15, [r7, #4]
 800503c:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8005040:	4b54      	ldr	r3, [pc, #336]	; (8005194 <get_Straj+0x674>)
 8005042:	edd3 7a00 	vldr	s15, [r3]
 8005046:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800504a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800504e:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8005052:	4b51      	ldr	r3, [pc, #324]	; (8005198 <get_Straj+0x678>)
 8005054:	edd3 7a00 	vldr	s15, [r3]
 8005058:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 800505c:	4b42      	ldr	r3, [pc, #264]	; (8005168 <get_Straj+0x648>)
 800505e:	ed93 7a00 	vldr	s14, [r3]
 8005062:	edd7 7a01 	vldr	s15, [r7, #4]
 8005066:	ee77 7a67 	vsub.f32	s15, s14, s15
 800506a:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800506e:	eeb0 1b08 	vmov.f64	d1, #8	; 0x40400000  3.0
 8005072:	eeb0 0b47 	vmov.f64	d0, d7
 8005076:	f00c fcfb 	bl	8011a70 <pow>
 800507a:	eeb0 7b40 	vmov.f64	d7, d0
 800507e:	ee29 6b07 	vmul.f64	d6, d9, d7
 8005082:	eeb1 5b08 	vmov.f64	d5, #24	; 0x40c00000  6.0
 8005086:	ee86 7b05 	vdiv.f64	d7, d6, d5
 800508a:	ee38 7b47 	vsub.f64	d7, d8, d7
 800508e:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005092:	4b39      	ldr	r3, [pc, #228]	; (8005178 <get_Straj+0x658>)
 8005094:	edc3 7a00 	vstr	s15, [r3]
        qd = vmax+jmin*pow(Ta-t,2)/2;
 8005098:	4b40      	ldr	r3, [pc, #256]	; (800519c <get_Straj+0x67c>)
 800509a:	edd3 7a00 	vldr	s15, [r3]
 800509e:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 80050a2:	4b3d      	ldr	r3, [pc, #244]	; (8005198 <get_Straj+0x678>)
 80050a4:	edd3 7a00 	vldr	s15, [r3]
 80050a8:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 80050ac:	4b2e      	ldr	r3, [pc, #184]	; (8005168 <get_Straj+0x648>)
 80050ae:	ed93 7a00 	vldr	s14, [r3]
 80050b2:	edd7 7a01 	vldr	s15, [r7, #4]
 80050b6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80050ba:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80050be:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80050c2:	eeb0 0b47 	vmov.f64	d0, d7
 80050c6:	f00c fcd3 	bl	8011a70 <pow>
 80050ca:	eeb0 7b40 	vmov.f64	d7, d0
 80050ce:	ee29 6b07 	vmul.f64	d6, d9, d7
 80050d2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 80050d6:	ee86 7b05 	vdiv.f64	d7, d6, d5
 80050da:	ee38 7b07 	vadd.f64	d7, d8, d7
 80050de:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 80050e2:	4b27      	ldr	r3, [pc, #156]	; (8005180 <get_Straj+0x660>)
 80050e4:	edc3 7a00 	vstr	s15, [r3]
        qdd = -jmin*(Ta-t);
 80050e8:	4b2b      	ldr	r3, [pc, #172]	; (8005198 <get_Straj+0x678>)
 80050ea:	edd3 7a00 	vldr	s15, [r3]
 80050ee:	eeb1 7a67 	vneg.f32	s14, s15
 80050f2:	4b1d      	ldr	r3, [pc, #116]	; (8005168 <get_Straj+0x648>)
 80050f4:	edd3 6a00 	vldr	s13, [r3]
 80050f8:	edd7 7a01 	vldr	s15, [r7, #4]
 80050fc:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8005100:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005104:	4b20      	ldr	r3, [pc, #128]	; (8005188 <get_Straj+0x668>)
 8005106:	edc3 7a00 	vstr	s15, [r3]
        qddd = jmin;
 800510a:	4b23      	ldr	r3, [pc, #140]	; (8005198 <get_Straj+0x678>)
 800510c:	681b      	ldr	r3, [r3, #0]
 800510e:	4a1f      	ldr	r2, [pc, #124]	; (800518c <get_Straj+0x66c>)
 8005110:	6013      	str	r3, [r2, #0]
        if (flagInv){
 8005112:	4b1f      	ldr	r3, [pc, #124]	; (8005190 <get_Straj+0x670>)
 8005114:	781b      	ldrb	r3, [r3, #0]
 8005116:	2b00      	cmp	r3, #0
 8005118:	f000 8395 	beq.w	8005846 <get_Straj+0xd26>
            q=-q; qd=-qd; qdd=-qdd; qddd=-qddd;
 800511c:	4b16      	ldr	r3, [pc, #88]	; (8005178 <get_Straj+0x658>)
 800511e:	edd3 7a00 	vldr	s15, [r3]
 8005122:	eef1 7a67 	vneg.f32	s15, s15
 8005126:	4b14      	ldr	r3, [pc, #80]	; (8005178 <get_Straj+0x658>)
 8005128:	edc3 7a00 	vstr	s15, [r3]
 800512c:	4b14      	ldr	r3, [pc, #80]	; (8005180 <get_Straj+0x660>)
 800512e:	edd3 7a00 	vldr	s15, [r3]
 8005132:	eef1 7a67 	vneg.f32	s15, s15
 8005136:	4b12      	ldr	r3, [pc, #72]	; (8005180 <get_Straj+0x660>)
 8005138:	edc3 7a00 	vstr	s15, [r3]
 800513c:	4b12      	ldr	r3, [pc, #72]	; (8005188 <get_Straj+0x668>)
 800513e:	edd3 7a00 	vldr	s15, [r3]
 8005142:	eef1 7a67 	vneg.f32	s15, s15
 8005146:	4b10      	ldr	r3, [pc, #64]	; (8005188 <get_Straj+0x668>)
 8005148:	edc3 7a00 	vstr	s15, [r3]
 800514c:	4b0f      	ldr	r3, [pc, #60]	; (800518c <get_Straj+0x66c>)
 800514e:	edd3 7a00 	vldr	s15, [r3]
 8005152:	eef1 7a67 	vneg.f32	s15, s15
 8005156:	4b0d      	ldr	r3, [pc, #52]	; (800518c <get_Straj+0x66c>)
 8005158:	edc3 7a00 	vstr	s15, [r3]
            flagInv = false;
 800515c:	4b0c      	ldr	r3, [pc, #48]	; (8005190 <get_Straj+0x670>)
 800515e:	2200      	movs	r2, #0
 8005160:	701a      	strb	r2, [r3, #0]
        if (flagInv){
 8005162:	e370      	b.n	8005846 <get_Straj+0xd26>
 8005164:	24000ac4 	.word	0x24000ac4
 8005168:	24000ab8 	.word	0x24000ab8
 800516c:	24000688 	.word	0x24000688
 8005170:	24000ad4 	.word	0x24000ad4
 8005174:	24000aa8 	.word	0x24000aa8
 8005178:	24000670 	.word	0x24000670
 800517c:	240000a0 	.word	0x240000a0
 8005180:	24000674 	.word	0x24000674
 8005184:	24000098 	.word	0x24000098
 8005188:	24000678 	.word	0x24000678
 800518c:	2400067c 	.word	0x2400067c
 8005190:	24000aa4 	.word	0x24000aa4
 8005194:	24000ab0 	.word	0x24000ab0
 8005198:	24000680 	.word	0x24000680
 800519c:	2400009c 	.word	0x2400009c
        }
    }

    /*-------------Constant phase ----------------*/
    else if (t>Ta && t<=Ta+Tv){
 80051a0:	4bae      	ldr	r3, [pc, #696]	; (800545c <get_Straj+0x93c>)
 80051a2:	edd3 7a00 	vldr	s15, [r3]
 80051a6:	ed97 7a01 	vldr	s14, [r7, #4]
 80051aa:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80051ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80051b2:	dd6a      	ble.n	800528a <get_Straj+0x76a>
 80051b4:	4ba9      	ldr	r3, [pc, #676]	; (800545c <get_Straj+0x93c>)
 80051b6:	ed93 7a00 	vldr	s14, [r3]
 80051ba:	4ba9      	ldr	r3, [pc, #676]	; (8005460 <get_Straj+0x940>)
 80051bc:	edd3 7a00 	vldr	s15, [r3]
 80051c0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80051c4:	ed97 7a01 	vldr	s14, [r7, #4]
 80051c8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80051cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80051d0:	d85b      	bhi.n	800528a <get_Straj+0x76a>
        //printf("tramo4\n");
        q = qi+(vlim+vi)*Ta/2+vlim*(t-Ta);
 80051d2:	4ba4      	ldr	r3, [pc, #656]	; (8005464 <get_Straj+0x944>)
 80051d4:	ed93 7a00 	vldr	s14, [r3]
 80051d8:	4ba3      	ldr	r3, [pc, #652]	; (8005468 <get_Straj+0x948>)
 80051da:	edd3 7a00 	vldr	s15, [r3]
 80051de:	ee37 7a27 	vadd.f32	s14, s14, s15
 80051e2:	4b9e      	ldr	r3, [pc, #632]	; (800545c <get_Straj+0x93c>)
 80051e4:	edd3 7a00 	vldr	s15, [r3]
 80051e8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80051ec:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 80051f0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80051f4:	4b9d      	ldr	r3, [pc, #628]	; (800546c <get_Straj+0x94c>)
 80051f6:	edd3 7a00 	vldr	s15, [r3]
 80051fa:	ee37 7a27 	vadd.f32	s14, s14, s15
 80051fe:	4b97      	ldr	r3, [pc, #604]	; (800545c <get_Straj+0x93c>)
 8005200:	edd3 7a00 	vldr	s15, [r3]
 8005204:	edd7 6a01 	vldr	s13, [r7, #4]
 8005208:	ee76 6ae7 	vsub.f32	s13, s13, s15
 800520c:	4b95      	ldr	r3, [pc, #596]	; (8005464 <get_Straj+0x944>)
 800520e:	edd3 7a00 	vldr	s15, [r3]
 8005212:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005216:	ee77 7a27 	vadd.f32	s15, s14, s15
 800521a:	4b95      	ldr	r3, [pc, #596]	; (8005470 <get_Straj+0x950>)
 800521c:	edc3 7a00 	vstr	s15, [r3]
        qd = vmax;
 8005220:	4b94      	ldr	r3, [pc, #592]	; (8005474 <get_Straj+0x954>)
 8005222:	681b      	ldr	r3, [r3, #0]
 8005224:	4a94      	ldr	r2, [pc, #592]	; (8005478 <get_Straj+0x958>)
 8005226:	6013      	str	r3, [r2, #0]
        qdd = 0;
 8005228:	4b94      	ldr	r3, [pc, #592]	; (800547c <get_Straj+0x95c>)
 800522a:	f04f 0200 	mov.w	r2, #0
 800522e:	601a      	str	r2, [r3, #0]
        qddd = 0;
 8005230:	4b93      	ldr	r3, [pc, #588]	; (8005480 <get_Straj+0x960>)
 8005232:	f04f 0200 	mov.w	r2, #0
 8005236:	601a      	str	r2, [r3, #0]
        if (flagInv){
 8005238:	4b92      	ldr	r3, [pc, #584]	; (8005484 <get_Straj+0x964>)
 800523a:	781b      	ldrb	r3, [r3, #0]
 800523c:	2b00      	cmp	r3, #0
 800523e:	f000 8302 	beq.w	8005846 <get_Straj+0xd26>
            q=-q; qd=-qd; qdd=-qdd; qddd=-qddd;
 8005242:	4b8b      	ldr	r3, [pc, #556]	; (8005470 <get_Straj+0x950>)
 8005244:	edd3 7a00 	vldr	s15, [r3]
 8005248:	eef1 7a67 	vneg.f32	s15, s15
 800524c:	4b88      	ldr	r3, [pc, #544]	; (8005470 <get_Straj+0x950>)
 800524e:	edc3 7a00 	vstr	s15, [r3]
 8005252:	4b89      	ldr	r3, [pc, #548]	; (8005478 <get_Straj+0x958>)
 8005254:	edd3 7a00 	vldr	s15, [r3]
 8005258:	eef1 7a67 	vneg.f32	s15, s15
 800525c:	4b86      	ldr	r3, [pc, #536]	; (8005478 <get_Straj+0x958>)
 800525e:	edc3 7a00 	vstr	s15, [r3]
 8005262:	4b86      	ldr	r3, [pc, #536]	; (800547c <get_Straj+0x95c>)
 8005264:	edd3 7a00 	vldr	s15, [r3]
 8005268:	eef1 7a67 	vneg.f32	s15, s15
 800526c:	4b83      	ldr	r3, [pc, #524]	; (800547c <get_Straj+0x95c>)
 800526e:	edc3 7a00 	vstr	s15, [r3]
 8005272:	4b83      	ldr	r3, [pc, #524]	; (8005480 <get_Straj+0x960>)
 8005274:	edd3 7a00 	vldr	s15, [r3]
 8005278:	eef1 7a67 	vneg.f32	s15, s15
 800527c:	4b80      	ldr	r3, [pc, #512]	; (8005480 <get_Straj+0x960>)
 800527e:	edc3 7a00 	vstr	s15, [r3]
            flagInv = false;
 8005282:	4b80      	ldr	r3, [pc, #512]	; (8005484 <get_Straj+0x964>)
 8005284:	2200      	movs	r2, #0
 8005286:	701a      	strb	r2, [r3, #0]
        if (flagInv){
 8005288:	e2dd      	b.n	8005846 <get_Straj+0xd26>
        }
    }
    /*-------------Dese phase ----------------*/

    else if (t>=T-Td && t<=T-Td+Tj2){
 800528a:	4b7f      	ldr	r3, [pc, #508]	; (8005488 <get_Straj+0x968>)
 800528c:	ed93 7a00 	vldr	s14, [r3]
 8005290:	4b7e      	ldr	r3, [pc, #504]	; (800548c <get_Straj+0x96c>)
 8005292:	edd3 7a00 	vldr	s15, [r3]
 8005296:	ee77 7a67 	vsub.f32	s15, s14, s15
 800529a:	ed97 7a01 	vldr	s14, [r7, #4]
 800529e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80052a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80052a6:	f2c0 80fd 	blt.w	80054a4 <get_Straj+0x984>
 80052aa:	4b77      	ldr	r3, [pc, #476]	; (8005488 <get_Straj+0x968>)
 80052ac:	ed93 7a00 	vldr	s14, [r3]
 80052b0:	4b76      	ldr	r3, [pc, #472]	; (800548c <get_Straj+0x96c>)
 80052b2:	edd3 7a00 	vldr	s15, [r3]
 80052b6:	ee37 7a67 	vsub.f32	s14, s14, s15
 80052ba:	4b75      	ldr	r3, [pc, #468]	; (8005490 <get_Straj+0x970>)
 80052bc:	edd3 7a00 	vldr	s15, [r3]
 80052c0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80052c4:	ed97 7a01 	vldr	s14, [r7, #4]
 80052c8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80052cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80052d0:	f200 80e8 	bhi.w	80054a4 <get_Straj+0x984>
        //printf("tramo5\n");
        q=qf-(vlim+vf)*Td/2+vlim*(t-T+Td)-jmax*(pow(t-T+Td,3)/6);
 80052d4:	4b6f      	ldr	r3, [pc, #444]	; (8005494 <get_Straj+0x974>)
 80052d6:	ed93 7a00 	vldr	s14, [r3]
 80052da:	4b62      	ldr	r3, [pc, #392]	; (8005464 <get_Straj+0x944>)
 80052dc:	edd3 6a00 	vldr	s13, [r3]
 80052e0:	4b6d      	ldr	r3, [pc, #436]	; (8005498 <get_Straj+0x978>)
 80052e2:	edd3 7a00 	vldr	s15, [r3]
 80052e6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 80052ea:	4b68      	ldr	r3, [pc, #416]	; (800548c <get_Straj+0x96c>)
 80052ec:	edd3 7a00 	vldr	s15, [r3]
 80052f0:	ee66 6aa7 	vmul.f32	s13, s13, s15
 80052f4:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 80052f8:	eec6 7a86 	vdiv.f32	s15, s13, s12
 80052fc:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005300:	4b61      	ldr	r3, [pc, #388]	; (8005488 <get_Straj+0x968>)
 8005302:	edd3 7a00 	vldr	s15, [r3]
 8005306:	edd7 6a01 	vldr	s13, [r7, #4]
 800530a:	ee76 6ae7 	vsub.f32	s13, s13, s15
 800530e:	4b5f      	ldr	r3, [pc, #380]	; (800548c <get_Straj+0x96c>)
 8005310:	edd3 7a00 	vldr	s15, [r3]
 8005314:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8005318:	4b52      	ldr	r3, [pc, #328]	; (8005464 <get_Straj+0x944>)
 800531a:	edd3 7a00 	vldr	s15, [r3]
 800531e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005322:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005326:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 800532a:	4b5c      	ldr	r3, [pc, #368]	; (800549c <get_Straj+0x97c>)
 800532c:	edd3 7a00 	vldr	s15, [r3]
 8005330:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8005334:	4b54      	ldr	r3, [pc, #336]	; (8005488 <get_Straj+0x968>)
 8005336:	edd3 7a00 	vldr	s15, [r3]
 800533a:	ed97 7a01 	vldr	s14, [r7, #4]
 800533e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005342:	4b52      	ldr	r3, [pc, #328]	; (800548c <get_Straj+0x96c>)
 8005344:	edd3 7a00 	vldr	s15, [r3]
 8005348:	ee77 7a27 	vadd.f32	s15, s14, s15
 800534c:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005350:	eeb0 1b08 	vmov.f64	d1, #8	; 0x40400000  3.0
 8005354:	eeb0 0b47 	vmov.f64	d0, d7
 8005358:	f00c fb8a 	bl	8011a70 <pow>
 800535c:	eeb0 6b40 	vmov.f64	d6, d0
 8005360:	eeb1 5b08 	vmov.f64	d5, #24	; 0x40c00000  6.0
 8005364:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8005368:	ee29 7b07 	vmul.f64	d7, d9, d7
 800536c:	ee38 7b47 	vsub.f64	d7, d8, d7
 8005370:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005374:	4b3e      	ldr	r3, [pc, #248]	; (8005470 <get_Straj+0x950>)
 8005376:	edc3 7a00 	vstr	s15, [r3]
        qd=vlim-jmax*(pow(t-T+Td,2)/2);
 800537a:	4b3a      	ldr	r3, [pc, #232]	; (8005464 <get_Straj+0x944>)
 800537c:	edd3 7a00 	vldr	s15, [r3]
 8005380:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8005384:	4b45      	ldr	r3, [pc, #276]	; (800549c <get_Straj+0x97c>)
 8005386:	edd3 7a00 	vldr	s15, [r3]
 800538a:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 800538e:	4b3e      	ldr	r3, [pc, #248]	; (8005488 <get_Straj+0x968>)
 8005390:	edd3 7a00 	vldr	s15, [r3]
 8005394:	ed97 7a01 	vldr	s14, [r7, #4]
 8005398:	ee37 7a67 	vsub.f32	s14, s14, s15
 800539c:	4b3b      	ldr	r3, [pc, #236]	; (800548c <get_Straj+0x96c>)
 800539e:	edd3 7a00 	vldr	s15, [r3]
 80053a2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80053a6:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80053aa:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80053ae:	eeb0 0b47 	vmov.f64	d0, d7
 80053b2:	f00c fb5d 	bl	8011a70 <pow>
 80053b6:	eeb0 6b40 	vmov.f64	d6, d0
 80053ba:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 80053be:	ee86 7b05 	vdiv.f64	d7, d6, d5
 80053c2:	ee29 7b07 	vmul.f64	d7, d9, d7
 80053c6:	ee38 7b47 	vsub.f64	d7, d8, d7
 80053ca:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 80053ce:	4b2a      	ldr	r3, [pc, #168]	; (8005478 <get_Straj+0x958>)
 80053d0:	edc3 7a00 	vstr	s15, [r3]
        qdd=-jmax*(t-T+Td);
 80053d4:	4b31      	ldr	r3, [pc, #196]	; (800549c <get_Straj+0x97c>)
 80053d6:	edd3 7a00 	vldr	s15, [r3]
 80053da:	eeb1 7a67 	vneg.f32	s14, s15
 80053de:	4b2a      	ldr	r3, [pc, #168]	; (8005488 <get_Straj+0x968>)
 80053e0:	edd3 7a00 	vldr	s15, [r3]
 80053e4:	edd7 6a01 	vldr	s13, [r7, #4]
 80053e8:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80053ec:	4b27      	ldr	r3, [pc, #156]	; (800548c <get_Straj+0x96c>)
 80053ee:	edd3 7a00 	vldr	s15, [r3]
 80053f2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80053f6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80053fa:	4b20      	ldr	r3, [pc, #128]	; (800547c <get_Straj+0x95c>)
 80053fc:	edc3 7a00 	vstr	s15, [r3]
        qddd=jmin;
 8005400:	4b27      	ldr	r3, [pc, #156]	; (80054a0 <get_Straj+0x980>)
 8005402:	681b      	ldr	r3, [r3, #0]
 8005404:	4a1e      	ldr	r2, [pc, #120]	; (8005480 <get_Straj+0x960>)
 8005406:	6013      	str	r3, [r2, #0]
        if (flagInv){
 8005408:	4b1e      	ldr	r3, [pc, #120]	; (8005484 <get_Straj+0x964>)
 800540a:	781b      	ldrb	r3, [r3, #0]
 800540c:	2b00      	cmp	r3, #0
 800540e:	f000 821a 	beq.w	8005846 <get_Straj+0xd26>
            q=-q; qd=-qd; qdd=-qdd; qddd=-qddd;
 8005412:	4b17      	ldr	r3, [pc, #92]	; (8005470 <get_Straj+0x950>)
 8005414:	edd3 7a00 	vldr	s15, [r3]
 8005418:	eef1 7a67 	vneg.f32	s15, s15
 800541c:	4b14      	ldr	r3, [pc, #80]	; (8005470 <get_Straj+0x950>)
 800541e:	edc3 7a00 	vstr	s15, [r3]
 8005422:	4b15      	ldr	r3, [pc, #84]	; (8005478 <get_Straj+0x958>)
 8005424:	edd3 7a00 	vldr	s15, [r3]
 8005428:	eef1 7a67 	vneg.f32	s15, s15
 800542c:	4b12      	ldr	r3, [pc, #72]	; (8005478 <get_Straj+0x958>)
 800542e:	edc3 7a00 	vstr	s15, [r3]
 8005432:	4b12      	ldr	r3, [pc, #72]	; (800547c <get_Straj+0x95c>)
 8005434:	edd3 7a00 	vldr	s15, [r3]
 8005438:	eef1 7a67 	vneg.f32	s15, s15
 800543c:	4b0f      	ldr	r3, [pc, #60]	; (800547c <get_Straj+0x95c>)
 800543e:	edc3 7a00 	vstr	s15, [r3]
 8005442:	4b0f      	ldr	r3, [pc, #60]	; (8005480 <get_Straj+0x960>)
 8005444:	edd3 7a00 	vldr	s15, [r3]
 8005448:	eef1 7a67 	vneg.f32	s15, s15
 800544c:	4b0c      	ldr	r3, [pc, #48]	; (8005480 <get_Straj+0x960>)
 800544e:	edc3 7a00 	vstr	s15, [r3]
            flagInv = false;
 8005452:	4b0c      	ldr	r3, [pc, #48]	; (8005484 <get_Straj+0x964>)
 8005454:	2200      	movs	r2, #0
 8005456:	701a      	strb	r2, [r3, #0]
        if (flagInv){
 8005458:	e1f5      	b.n	8005846 <get_Straj+0xd26>
 800545a:	bf00      	nop
 800545c:	24000ab8 	.word	0x24000ab8
 8005460:	24000ac0 	.word	0x24000ac0
 8005464:	24000ab0 	.word	0x24000ab0
 8005468:	24000688 	.word	0x24000688
 800546c:	24000ad4 	.word	0x24000ad4
 8005470:	24000670 	.word	0x24000670
 8005474:	2400009c 	.word	0x2400009c
 8005478:	24000674 	.word	0x24000674
 800547c:	24000678 	.word	0x24000678
 8005480:	2400067c 	.word	0x2400067c
 8005484:	24000aa4 	.word	0x24000aa4
 8005488:	24000ab4 	.word	0x24000ab4
 800548c:	24000abc 	.word	0x24000abc
 8005490:	24000ac8 	.word	0x24000ac8
 8005494:	24000ad8 	.word	0x24000ad8
 8005498:	2400068c 	.word	0x2400068c
 800549c:	24000098 	.word	0x24000098
 80054a0:	24000680 	.word	0x24000680
        }
    } else if (t>T-Td+Tj2 && t<=T-Tj2){
 80054a4:	4b8d      	ldr	r3, [pc, #564]	; (80056dc <get_Straj+0xbbc>)
 80054a6:	ed93 7a00 	vldr	s14, [r3]
 80054aa:	4b8d      	ldr	r3, [pc, #564]	; (80056e0 <get_Straj+0xbc0>)
 80054ac:	edd3 7a00 	vldr	s15, [r3]
 80054b0:	ee37 7a67 	vsub.f32	s14, s14, s15
 80054b4:	4b8b      	ldr	r3, [pc, #556]	; (80056e4 <get_Straj+0xbc4>)
 80054b6:	edd3 7a00 	vldr	s15, [r3]
 80054ba:	ee77 7a27 	vadd.f32	s15, s14, s15
 80054be:	ed97 7a01 	vldr	s14, [r7, #4]
 80054c2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80054c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054ca:	f340 80eb 	ble.w	80056a4 <get_Straj+0xb84>
 80054ce:	4b83      	ldr	r3, [pc, #524]	; (80056dc <get_Straj+0xbbc>)
 80054d0:	ed93 7a00 	vldr	s14, [r3]
 80054d4:	4b83      	ldr	r3, [pc, #524]	; (80056e4 <get_Straj+0xbc4>)
 80054d6:	edd3 7a00 	vldr	s15, [r3]
 80054da:	ee77 7a67 	vsub.f32	s15, s14, s15
 80054de:	ed97 7a01 	vldr	s14, [r7, #4]
 80054e2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80054e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054ea:	f200 80db 	bhi.w	80056a4 <get_Straj+0xb84>
        //printf("tramo6\n");
        q=qf-(vlim+vf)*Td/2+vlim*(t-T+Td)+(alimd/6)*(3*pow(t-T+Td,2)-3*Tj2*(t-T+Td)+pow(Tj2,2));
 80054ee:	4b7e      	ldr	r3, [pc, #504]	; (80056e8 <get_Straj+0xbc8>)
 80054f0:	ed93 7a00 	vldr	s14, [r3]
 80054f4:	4b7d      	ldr	r3, [pc, #500]	; (80056ec <get_Straj+0xbcc>)
 80054f6:	edd3 6a00 	vldr	s13, [r3]
 80054fa:	4b7d      	ldr	r3, [pc, #500]	; (80056f0 <get_Straj+0xbd0>)
 80054fc:	edd3 7a00 	vldr	s15, [r3]
 8005500:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8005504:	4b76      	ldr	r3, [pc, #472]	; (80056e0 <get_Straj+0xbc0>)
 8005506:	edd3 7a00 	vldr	s15, [r3]
 800550a:	ee66 6aa7 	vmul.f32	s13, s13, s15
 800550e:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 8005512:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8005516:	ee37 7a67 	vsub.f32	s14, s14, s15
 800551a:	4b70      	ldr	r3, [pc, #448]	; (80056dc <get_Straj+0xbbc>)
 800551c:	edd3 7a00 	vldr	s15, [r3]
 8005520:	edd7 6a01 	vldr	s13, [r7, #4]
 8005524:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8005528:	4b6d      	ldr	r3, [pc, #436]	; (80056e0 <get_Straj+0xbc0>)
 800552a:	edd3 7a00 	vldr	s15, [r3]
 800552e:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8005532:	4b6e      	ldr	r3, [pc, #440]	; (80056ec <get_Straj+0xbcc>)
 8005534:	edd3 7a00 	vldr	s15, [r3]
 8005538:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800553c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005540:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8005544:	4b6b      	ldr	r3, [pc, #428]	; (80056f4 <get_Straj+0xbd4>)
 8005546:	ed93 7a00 	vldr	s14, [r3]
 800554a:	eef1 6a08 	vmov.f32	s13, #24	; 0x40c00000  6.0
 800554e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8005552:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8005556:	4b61      	ldr	r3, [pc, #388]	; (80056dc <get_Straj+0xbbc>)
 8005558:	edd3 7a00 	vldr	s15, [r3]
 800555c:	ed97 7a01 	vldr	s14, [r7, #4]
 8005560:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005564:	4b5e      	ldr	r3, [pc, #376]	; (80056e0 <get_Straj+0xbc0>)
 8005566:	edd3 7a00 	vldr	s15, [r3]
 800556a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800556e:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005572:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005576:	eeb0 0b47 	vmov.f64	d0, d7
 800557a:	f00c fa79 	bl	8011a70 <pow>
 800557e:	eeb0 7b40 	vmov.f64	d7, d0
 8005582:	eeb0 6b08 	vmov.f64	d6, #8	; 0x40400000  3.0
 8005586:	ee27 6b06 	vmul.f64	d6, d7, d6
 800558a:	4b56      	ldr	r3, [pc, #344]	; (80056e4 <get_Straj+0xbc4>)
 800558c:	edd3 7a00 	vldr	s15, [r3]
 8005590:	eeb0 7a08 	vmov.f32	s14, #8	; 0x40400000  3.0
 8005594:	ee27 7a87 	vmul.f32	s14, s15, s14
 8005598:	4b50      	ldr	r3, [pc, #320]	; (80056dc <get_Straj+0xbbc>)
 800559a:	edd3 7a00 	vldr	s15, [r3]
 800559e:	edd7 5a01 	vldr	s11, [r7, #4]
 80055a2:	ee75 5ae7 	vsub.f32	s11, s11, s15
 80055a6:	4b4e      	ldr	r3, [pc, #312]	; (80056e0 <get_Straj+0xbc0>)
 80055a8:	edd3 7a00 	vldr	s15, [r3]
 80055ac:	ee75 7aa7 	vadd.f32	s15, s11, s15
 80055b0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80055b4:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80055b8:	ee36 ab47 	vsub.f64	d10, d6, d7
 80055bc:	4b49      	ldr	r3, [pc, #292]	; (80056e4 <get_Straj+0xbc4>)
 80055be:	edd3 7a00 	vldr	s15, [r3]
 80055c2:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80055c6:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80055ca:	eeb0 0b47 	vmov.f64	d0, d7
 80055ce:	f00c fa4f 	bl	8011a70 <pow>
 80055d2:	eeb0 7b40 	vmov.f64	d7, d0
 80055d6:	ee3a 7b07 	vadd.f64	d7, d10, d7
 80055da:	ee29 7b07 	vmul.f64	d7, d9, d7
 80055de:	ee38 7b07 	vadd.f64	d7, d8, d7
 80055e2:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 80055e6:	4b44      	ldr	r3, [pc, #272]	; (80056f8 <get_Straj+0xbd8>)
 80055e8:	edc3 7a00 	vstr	s15, [r3]
        qd=vlim+alimd*(t-T+Td-Tj2/2);
 80055ec:	4b3b      	ldr	r3, [pc, #236]	; (80056dc <get_Straj+0xbbc>)
 80055ee:	edd3 7a00 	vldr	s15, [r3]
 80055f2:	ed97 7a01 	vldr	s14, [r7, #4]
 80055f6:	ee37 7a67 	vsub.f32	s14, s14, s15
 80055fa:	4b39      	ldr	r3, [pc, #228]	; (80056e0 <get_Straj+0xbc0>)
 80055fc:	edd3 7a00 	vldr	s15, [r3]
 8005600:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005604:	4b37      	ldr	r3, [pc, #220]	; (80056e4 <get_Straj+0xbc4>)
 8005606:	edd3 6a00 	vldr	s13, [r3]
 800560a:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 800560e:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8005612:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005616:	4b37      	ldr	r3, [pc, #220]	; (80056f4 <get_Straj+0xbd4>)
 8005618:	edd3 7a00 	vldr	s15, [r3]
 800561c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8005620:	4b32      	ldr	r3, [pc, #200]	; (80056ec <get_Straj+0xbcc>)
 8005622:	edd3 7a00 	vldr	s15, [r3]
 8005626:	ee77 7a27 	vadd.f32	s15, s14, s15
 800562a:	4b34      	ldr	r3, [pc, #208]	; (80056fc <get_Straj+0xbdc>)
 800562c:	edc3 7a00 	vstr	s15, [r3]
        qdd = -jmax*Tj2;
 8005630:	4b33      	ldr	r3, [pc, #204]	; (8005700 <get_Straj+0xbe0>)
 8005632:	edd3 7a00 	vldr	s15, [r3]
 8005636:	eeb1 7a67 	vneg.f32	s14, s15
 800563a:	4b2a      	ldr	r3, [pc, #168]	; (80056e4 <get_Straj+0xbc4>)
 800563c:	edd3 7a00 	vldr	s15, [r3]
 8005640:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005644:	4b2f      	ldr	r3, [pc, #188]	; (8005704 <get_Straj+0xbe4>)
 8005646:	edc3 7a00 	vstr	s15, [r3]
        qddd = 0;
 800564a:	4b2f      	ldr	r3, [pc, #188]	; (8005708 <get_Straj+0xbe8>)
 800564c:	f04f 0200 	mov.w	r2, #0
 8005650:	601a      	str	r2, [r3, #0]
        if (flagInv){
 8005652:	4b2e      	ldr	r3, [pc, #184]	; (800570c <get_Straj+0xbec>)
 8005654:	781b      	ldrb	r3, [r3, #0]
 8005656:	2b00      	cmp	r3, #0
 8005658:	f000 80f5 	beq.w	8005846 <get_Straj+0xd26>
            q=-q; qd=-qd; qdd=-qdd; qddd=-qddd;
 800565c:	4b26      	ldr	r3, [pc, #152]	; (80056f8 <get_Straj+0xbd8>)
 800565e:	edd3 7a00 	vldr	s15, [r3]
 8005662:	eef1 7a67 	vneg.f32	s15, s15
 8005666:	4b24      	ldr	r3, [pc, #144]	; (80056f8 <get_Straj+0xbd8>)
 8005668:	edc3 7a00 	vstr	s15, [r3]
 800566c:	4b23      	ldr	r3, [pc, #140]	; (80056fc <get_Straj+0xbdc>)
 800566e:	edd3 7a00 	vldr	s15, [r3]
 8005672:	eef1 7a67 	vneg.f32	s15, s15
 8005676:	4b21      	ldr	r3, [pc, #132]	; (80056fc <get_Straj+0xbdc>)
 8005678:	edc3 7a00 	vstr	s15, [r3]
 800567c:	4b21      	ldr	r3, [pc, #132]	; (8005704 <get_Straj+0xbe4>)
 800567e:	edd3 7a00 	vldr	s15, [r3]
 8005682:	eef1 7a67 	vneg.f32	s15, s15
 8005686:	4b1f      	ldr	r3, [pc, #124]	; (8005704 <get_Straj+0xbe4>)
 8005688:	edc3 7a00 	vstr	s15, [r3]
 800568c:	4b1e      	ldr	r3, [pc, #120]	; (8005708 <get_Straj+0xbe8>)
 800568e:	edd3 7a00 	vldr	s15, [r3]
 8005692:	eef1 7a67 	vneg.f32	s15, s15
 8005696:	4b1c      	ldr	r3, [pc, #112]	; (8005708 <get_Straj+0xbe8>)
 8005698:	edc3 7a00 	vstr	s15, [r3]
            flagInv = false;
 800569c:	4b1b      	ldr	r3, [pc, #108]	; (800570c <get_Straj+0xbec>)
 800569e:	2200      	movs	r2, #0
 80056a0:	701a      	strb	r2, [r3, #0]
        if (flagInv){
 80056a2:	e0d0      	b.n	8005846 <get_Straj+0xd26>
        }

    } else if (t>T-Tj2 && t<=T){
 80056a4:	4b0d      	ldr	r3, [pc, #52]	; (80056dc <get_Straj+0xbbc>)
 80056a6:	ed93 7a00 	vldr	s14, [r3]
 80056aa:	4b0e      	ldr	r3, [pc, #56]	; (80056e4 <get_Straj+0xbc4>)
 80056ac:	edd3 7a00 	vldr	s15, [r3]
 80056b0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80056b4:	ed97 7a01 	vldr	s14, [r7, #4]
 80056b8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80056bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80056c0:	dc00      	bgt.n	80056c4 <get_Straj+0xba4>
            flagInv = false;
        }
    }


}
 80056c2:	e0c0      	b.n	8005846 <get_Straj+0xd26>
    } else if (t>T-Tj2 && t<=T){
 80056c4:	4b05      	ldr	r3, [pc, #20]	; (80056dc <get_Straj+0xbbc>)
 80056c6:	edd3 7a00 	vldr	s15, [r3]
 80056ca:	ed97 7a01 	vldr	s14, [r7, #4]
 80056ce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80056d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80056d6:	d91b      	bls.n	8005710 <get_Straj+0xbf0>
}
 80056d8:	e0b5      	b.n	8005846 <get_Straj+0xd26>
 80056da:	bf00      	nop
 80056dc:	24000ab4 	.word	0x24000ab4
 80056e0:	24000abc 	.word	0x24000abc
 80056e4:	24000ac8 	.word	0x24000ac8
 80056e8:	24000ad8 	.word	0x24000ad8
 80056ec:	24000ab0 	.word	0x24000ab0
 80056f0:	2400068c 	.word	0x2400068c
 80056f4:	24000aac 	.word	0x24000aac
 80056f8:	24000670 	.word	0x24000670
 80056fc:	24000674 	.word	0x24000674
 8005700:	24000098 	.word	0x24000098
 8005704:	24000678 	.word	0x24000678
 8005708:	2400067c 	.word	0x2400067c
 800570c:	24000aa4 	.word	0x24000aa4
        q = qf-vf*(T-t)-jmax*(pow(T-t,3)/6);
 8005710:	4b50      	ldr	r3, [pc, #320]	; (8005854 <get_Straj+0xd34>)
 8005712:	ed93 7a00 	vldr	s14, [r3]
 8005716:	4b50      	ldr	r3, [pc, #320]	; (8005858 <get_Straj+0xd38>)
 8005718:	edd3 6a00 	vldr	s13, [r3]
 800571c:	edd7 7a01 	vldr	s15, [r7, #4]
 8005720:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8005724:	4b4d      	ldr	r3, [pc, #308]	; (800585c <get_Straj+0xd3c>)
 8005726:	edd3 7a00 	vldr	s15, [r3]
 800572a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800572e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005732:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8005736:	4b4a      	ldr	r3, [pc, #296]	; (8005860 <get_Straj+0xd40>)
 8005738:	edd3 7a00 	vldr	s15, [r3]
 800573c:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8005740:	4b45      	ldr	r3, [pc, #276]	; (8005858 <get_Straj+0xd38>)
 8005742:	ed93 7a00 	vldr	s14, [r3]
 8005746:	edd7 7a01 	vldr	s15, [r7, #4]
 800574a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800574e:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005752:	eeb0 1b08 	vmov.f64	d1, #8	; 0x40400000  3.0
 8005756:	eeb0 0b47 	vmov.f64	d0, d7
 800575a:	f00c f989 	bl	8011a70 <pow>
 800575e:	eeb0 6b40 	vmov.f64	d6, d0
 8005762:	eeb1 5b08 	vmov.f64	d5, #24	; 0x40c00000  6.0
 8005766:	ee86 7b05 	vdiv.f64	d7, d6, d5
 800576a:	ee29 7b07 	vmul.f64	d7, d9, d7
 800576e:	ee38 7b47 	vsub.f64	d7, d8, d7
 8005772:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005776:	4b3b      	ldr	r3, [pc, #236]	; (8005864 <get_Straj+0xd44>)
 8005778:	edc3 7a00 	vstr	s15, [r3]
        qd = vf+jmax*(pow(T-t,2))/2;
 800577c:	4b37      	ldr	r3, [pc, #220]	; (800585c <get_Straj+0xd3c>)
 800577e:	edd3 7a00 	vldr	s15, [r3]
 8005782:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8005786:	4b36      	ldr	r3, [pc, #216]	; (8005860 <get_Straj+0xd40>)
 8005788:	edd3 7a00 	vldr	s15, [r3]
 800578c:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 8005790:	4b31      	ldr	r3, [pc, #196]	; (8005858 <get_Straj+0xd38>)
 8005792:	ed93 7a00 	vldr	s14, [r3]
 8005796:	edd7 7a01 	vldr	s15, [r7, #4]
 800579a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800579e:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80057a2:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80057a6:	eeb0 0b47 	vmov.f64	d0, d7
 80057aa:	f00c f961 	bl	8011a70 <pow>
 80057ae:	eeb0 7b40 	vmov.f64	d7, d0
 80057b2:	ee29 6b07 	vmul.f64	d6, d9, d7
 80057b6:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 80057ba:	ee86 7b05 	vdiv.f64	d7, d6, d5
 80057be:	ee38 7b07 	vadd.f64	d7, d8, d7
 80057c2:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 80057c6:	4b28      	ldr	r3, [pc, #160]	; (8005868 <get_Straj+0xd48>)
 80057c8:	edc3 7a00 	vstr	s15, [r3]
        qdd = -jmax*(T-t);
 80057cc:	4b24      	ldr	r3, [pc, #144]	; (8005860 <get_Straj+0xd40>)
 80057ce:	edd3 7a00 	vldr	s15, [r3]
 80057d2:	eeb1 7a67 	vneg.f32	s14, s15
 80057d6:	4b20      	ldr	r3, [pc, #128]	; (8005858 <get_Straj+0xd38>)
 80057d8:	edd3 6a00 	vldr	s13, [r3]
 80057dc:	edd7 7a01 	vldr	s15, [r7, #4]
 80057e0:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80057e4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80057e8:	4b20      	ldr	r3, [pc, #128]	; (800586c <get_Straj+0xd4c>)
 80057ea:	edc3 7a00 	vstr	s15, [r3]
        qddd = jmax;
 80057ee:	4b1c      	ldr	r3, [pc, #112]	; (8005860 <get_Straj+0xd40>)
 80057f0:	681b      	ldr	r3, [r3, #0]
 80057f2:	4a1f      	ldr	r2, [pc, #124]	; (8005870 <get_Straj+0xd50>)
 80057f4:	6013      	str	r3, [r2, #0]
        if (flagInv){
 80057f6:	4b1f      	ldr	r3, [pc, #124]	; (8005874 <get_Straj+0xd54>)
 80057f8:	781b      	ldrb	r3, [r3, #0]
 80057fa:	2b00      	cmp	r3, #0
 80057fc:	d023      	beq.n	8005846 <get_Straj+0xd26>
            q=-q; qd=-qd; qdd=-qdd; qddd=-qddd;
 80057fe:	4b19      	ldr	r3, [pc, #100]	; (8005864 <get_Straj+0xd44>)
 8005800:	edd3 7a00 	vldr	s15, [r3]
 8005804:	eef1 7a67 	vneg.f32	s15, s15
 8005808:	4b16      	ldr	r3, [pc, #88]	; (8005864 <get_Straj+0xd44>)
 800580a:	edc3 7a00 	vstr	s15, [r3]
 800580e:	4b16      	ldr	r3, [pc, #88]	; (8005868 <get_Straj+0xd48>)
 8005810:	edd3 7a00 	vldr	s15, [r3]
 8005814:	eef1 7a67 	vneg.f32	s15, s15
 8005818:	4b13      	ldr	r3, [pc, #76]	; (8005868 <get_Straj+0xd48>)
 800581a:	edc3 7a00 	vstr	s15, [r3]
 800581e:	4b13      	ldr	r3, [pc, #76]	; (800586c <get_Straj+0xd4c>)
 8005820:	edd3 7a00 	vldr	s15, [r3]
 8005824:	eef1 7a67 	vneg.f32	s15, s15
 8005828:	4b10      	ldr	r3, [pc, #64]	; (800586c <get_Straj+0xd4c>)
 800582a:	edc3 7a00 	vstr	s15, [r3]
 800582e:	4b10      	ldr	r3, [pc, #64]	; (8005870 <get_Straj+0xd50>)
 8005830:	edd3 7a00 	vldr	s15, [r3]
 8005834:	eef1 7a67 	vneg.f32	s15, s15
 8005838:	4b0d      	ldr	r3, [pc, #52]	; (8005870 <get_Straj+0xd50>)
 800583a:	edc3 7a00 	vstr	s15, [r3]
            flagInv = false;
 800583e:	4b0d      	ldr	r3, [pc, #52]	; (8005874 <get_Straj+0xd54>)
 8005840:	2200      	movs	r2, #0
 8005842:	701a      	strb	r2, [r3, #0]
}
 8005844:	e7ff      	b.n	8005846 <get_Straj+0xd26>
 8005846:	bf00      	nop
 8005848:	3708      	adds	r7, #8
 800584a:	46bd      	mov	sp, r7
 800584c:	ecbd 8b06 	vpop	{d8-d10}
 8005850:	bd80      	pop	{r7, pc}
 8005852:	bf00      	nop
 8005854:	24000ad8 	.word	0x24000ad8
 8005858:	24000ab4 	.word	0x24000ab4
 800585c:	2400068c 	.word	0x2400068c
 8005860:	24000098 	.word	0x24000098
 8005864:	24000670 	.word	0x24000670
 8005868:	24000674 	.word	0x24000674
 800586c:	24000678 	.word	0x24000678
 8005870:	2400067c 	.word	0x2400067c
 8005874:	24000aa4 	.word	0x24000aa4

08005878 <update_ScurveTraj>:


void update_ScurveTraj(float _qi ,float _qf, float vi,float vf ,float vmax,float amax,float jmax){
 8005878:	b580      	push	{r7, lr}
 800587a:	ed2d 8b06 	vpush	{d8-d10}
 800587e:	b08a      	sub	sp, #40	; 0x28
 8005880:	af00      	add	r7, sp, #0
 8005882:	ed87 0a07 	vstr	s0, [r7, #28]
 8005886:	edc7 0a06 	vstr	s1, [r7, #24]
 800588a:	ed87 1a05 	vstr	s2, [r7, #20]
 800588e:	edc7 1a04 	vstr	s3, [r7, #16]
 8005892:	ed87 2a03 	vstr	s4, [r7, #12]
 8005896:	edc7 2a02 	vstr	s5, [r7, #8]
 800589a:	ed87 3a01 	vstr	s6, [r7, #4]

jmin = -jmax;
 800589e:	edd7 7a01 	vldr	s15, [r7, #4]
 80058a2:	eef1 7a67 	vneg.f32	s15, s15
 80058a6:	4bad      	ldr	r3, [pc, #692]	; (8005b5c <update_ScurveTraj+0x2e4>)
 80058a8:	edc3 7a00 	vstr	s15, [r3]
amin = -amax;
 80058ac:	edd7 7a02 	vldr	s15, [r7, #8]
 80058b0:	eef1 7a67 	vneg.f32	s15, s15
 80058b4:	4baa      	ldr	r3, [pc, #680]	; (8005b60 <update_ScurveTraj+0x2e8>)
 80058b6:	edc3 7a00 	vstr	s15, [r3]
vmin = -vmax;
 80058ba:	edd7 7a03 	vldr	s15, [r7, #12]
 80058be:	eef1 7a67 	vneg.f32	s15, s15
 80058c2:	4ba8      	ldr	r3, [pc, #672]	; (8005b64 <update_ScurveTraj+0x2ec>)
 80058c4:	edc3 7a00 	vstr	s15, [r3]
qi=_qi;
 80058c8:	4aa7      	ldr	r2, [pc, #668]	; (8005b68 <update_ScurveTraj+0x2f0>)
 80058ca:	69fb      	ldr	r3, [r7, #28]
 80058cc:	6013      	str	r3, [r2, #0]
qf=_qf;
 80058ce:	4aa7      	ldr	r2, [pc, #668]	; (8005b6c <update_ScurveTraj+0x2f4>)
 80058d0:	69bb      	ldr	r3, [r7, #24]
 80058d2:	6013      	str	r3, [r2, #0]

if (qf < qi){
 80058d4:	4ba5      	ldr	r3, [pc, #660]	; (8005b6c <update_ScurveTraj+0x2f4>)
 80058d6:	ed93 7a00 	vldr	s14, [r3]
 80058da:	4ba3      	ldr	r3, [pc, #652]	; (8005b68 <update_ScurveTraj+0x2f0>)
 80058dc:	edd3 7a00 	vldr	s15, [r3]
 80058e0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80058e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80058e8:	d548      	bpl.n	800597c <update_ScurveTraj+0x104>

    flagInv = true;
 80058ea:	4ba1      	ldr	r3, [pc, #644]	; (8005b70 <update_ScurveTraj+0x2f8>)
 80058ec:	2201      	movs	r2, #1
 80058ee:	701a      	strb	r2, [r3, #0]

    qi = -qi;
 80058f0:	4b9d      	ldr	r3, [pc, #628]	; (8005b68 <update_ScurveTraj+0x2f0>)
 80058f2:	edd3 7a00 	vldr	s15, [r3]
 80058f6:	eef1 7a67 	vneg.f32	s15, s15
 80058fa:	4b9b      	ldr	r3, [pc, #620]	; (8005b68 <update_ScurveTraj+0x2f0>)
 80058fc:	edc3 7a00 	vstr	s15, [r3]
    qf = -qf;
 8005900:	4b9a      	ldr	r3, [pc, #616]	; (8005b6c <update_ScurveTraj+0x2f4>)
 8005902:	edd3 7a00 	vldr	s15, [r3]
 8005906:	eef1 7a67 	vneg.f32	s15, s15
 800590a:	4b98      	ldr	r3, [pc, #608]	; (8005b6c <update_ScurveTraj+0x2f4>)
 800590c:	edc3 7a00 	vstr	s15, [r3]
    vi = -vi;
 8005910:	edd7 7a05 	vldr	s15, [r7, #20]
 8005914:	eef1 7a67 	vneg.f32	s15, s15
 8005918:	edc7 7a05 	vstr	s15, [r7, #20]
    vf = -vf;
 800591c:	edd7 7a04 	vldr	s15, [r7, #16]
 8005920:	eef1 7a67 	vneg.f32	s15, s15
 8005924:	edc7 7a04 	vstr	s15, [r7, #16]

    vmax = -vmin;
 8005928:	4b8e      	ldr	r3, [pc, #568]	; (8005b64 <update_ScurveTraj+0x2ec>)
 800592a:	edd3 7a00 	vldr	s15, [r3]
 800592e:	eef1 7a67 	vneg.f32	s15, s15
 8005932:	edc7 7a03 	vstr	s15, [r7, #12]
    vmin = -vmax;
 8005936:	edd7 7a03 	vldr	s15, [r7, #12]
 800593a:	eef1 7a67 	vneg.f32	s15, s15
 800593e:	4b89      	ldr	r3, [pc, #548]	; (8005b64 <update_ScurveTraj+0x2ec>)
 8005940:	edc3 7a00 	vstr	s15, [r3]
    amax = -amin;
 8005944:	4b86      	ldr	r3, [pc, #536]	; (8005b60 <update_ScurveTraj+0x2e8>)
 8005946:	edd3 7a00 	vldr	s15, [r3]
 800594a:	eef1 7a67 	vneg.f32	s15, s15
 800594e:	edc7 7a02 	vstr	s15, [r7, #8]
    amin = -amax;
 8005952:	edd7 7a02 	vldr	s15, [r7, #8]
 8005956:	eef1 7a67 	vneg.f32	s15, s15
 800595a:	4b81      	ldr	r3, [pc, #516]	; (8005b60 <update_ScurveTraj+0x2e8>)
 800595c:	edc3 7a00 	vstr	s15, [r3]
    jmax = -jmin;
 8005960:	4b7e      	ldr	r3, [pc, #504]	; (8005b5c <update_ScurveTraj+0x2e4>)
 8005962:	edd3 7a00 	vldr	s15, [r3]
 8005966:	eef1 7a67 	vneg.f32	s15, s15
 800596a:	edc7 7a01 	vstr	s15, [r7, #4]
    jmin = -jmax;
 800596e:	edd7 7a01 	vldr	s15, [r7, #4]
 8005972:	eef1 7a67 	vneg.f32	s15, s15
 8005976:	4b79      	ldr	r3, [pc, #484]	; (8005b5c <update_ScurveTraj+0x2e4>)
 8005978:	edc3 7a00 	vstr	s15, [r3]

}

volatile float Tjaux = MIN(sqrt(fabs(vf-vi)/jmax),amax/jmax);
 800597c:	ed97 7a04 	vldr	s14, [r7, #16]
 8005980:	edd7 7a05 	vldr	s15, [r7, #20]
 8005984:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005988:	eef0 7ae7 	vabs.f32	s15, s15
 800598c:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 8005990:	edd7 7a01 	vldr	s15, [r7, #4]
 8005994:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005998:	ee86 5b07 	vdiv.f64	d5, d6, d7
 800599c:	eeb0 0b45 	vmov.f64	d0, d5
 80059a0:	f00c fae6 	bl	8011f70 <sqrt>
 80059a4:	eeb0 6b40 	vmov.f64	d6, d0
 80059a8:	edd7 5a02 	vldr	s11, [r7, #8]
 80059ac:	ed97 7a01 	vldr	s14, [r7, #4]
 80059b0:	eec5 7a87 	vdiv.f32	s15, s11, s14
 80059b4:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80059b8:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80059bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80059c0:	d518      	bpl.n	80059f4 <update_ScurveTraj+0x17c>
 80059c2:	ed97 7a04 	vldr	s14, [r7, #16]
 80059c6:	edd7 7a05 	vldr	s15, [r7, #20]
 80059ca:	ee77 7a67 	vsub.f32	s15, s14, s15
 80059ce:	eef0 7ae7 	vabs.f32	s15, s15
 80059d2:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 80059d6:	edd7 7a01 	vldr	s15, [r7, #4]
 80059da:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80059de:	ee86 5b07 	vdiv.f64	d5, d6, d7
 80059e2:	eeb0 0b45 	vmov.f64	d0, d5
 80059e6:	f00c fac3 	bl	8011f70 <sqrt>
 80059ea:	eeb0 7b40 	vmov.f64	d7, d0
 80059ee:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 80059f2:	e005      	b.n	8005a00 <update_ScurveTraj+0x188>
 80059f4:	edd7 6a02 	vldr	s13, [r7, #8]
 80059f8:	ed97 7a01 	vldr	s14, [r7, #4]
 80059fc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8005a00:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24


if (Tjaux<amax/jmax){
 8005a04:	edd7 6a02 	vldr	s13, [r7, #8]
 8005a08:	edd7 7a01 	vldr	s15, [r7, #4]
 8005a0c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8005a10:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8005a14:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005a18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a1c:	dc00      	bgt.n	8005a20 <update_ScurveTraj+0x1a8>
    //if (qf-qi > Tjaux*(vi+vf)) {printf("the trajectory is feasible \n");}
    //else {printf("the trajectory is NOT \n");}
}
else if (Tjaux == amax/jmax){
 8005a1e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    //if (qf-qi > 0.5*(vi+vf)*(Tjaux+fabs(vi+vf)/amax)) {printf("the trajectory is feasible\n");}
    //else {printf("the trajectory is NOT feasible\n");}
}
//Phase 1: acceleration
if ((vmax-vi)*jmax < pow(amax,2)){
 8005a20:	ed97 7a03 	vldr	s14, [r7, #12]
 8005a24:	edd7 7a05 	vldr	s15, [r7, #20]
 8005a28:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005a2c:	edd7 7a01 	vldr	s15, [r7, #4]
 8005a30:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005a34:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8005a38:	edd7 7a02 	vldr	s15, [r7, #8]
 8005a3c:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005a40:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005a44:	eeb0 0b47 	vmov.f64	d0, d7
 8005a48:	f00c f812 	bl	8011a70 <pow>
 8005a4c:	eeb0 7b40 	vmov.f64	d7, d0
 8005a50:	eeb4 8bc7 	vcmpe.f64	d8, d7
 8005a54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a58:	d523      	bpl.n	8005aa2 <update_ScurveTraj+0x22a>
    //printf("amax is NOT reached\n");

    Tj1=sqrt(fabs(vmax-vi)/jmax);
 8005a5a:	ed97 7a03 	vldr	s14, [r7, #12]
 8005a5e:	edd7 7a05 	vldr	s15, [r7, #20]
 8005a62:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005a66:	eef0 7ae7 	vabs.f32	s15, s15
 8005a6a:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 8005a6e:	edd7 7a01 	vldr	s15, [r7, #4]
 8005a72:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005a76:	ee86 5b07 	vdiv.f64	d5, d6, d7
 8005a7a:	eeb0 0b45 	vmov.f64	d0, d5
 8005a7e:	f00c fa77 	bl	8011f70 <sqrt>
 8005a82:	eeb0 7b40 	vmov.f64	d7, d0
 8005a86:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005a8a:	4b3a      	ldr	r3, [pc, #232]	; (8005b74 <update_ScurveTraj+0x2fc>)
 8005a8c:	edc3 7a00 	vstr	s15, [r3]
    Ta=Tj1*2;
 8005a90:	4b38      	ldr	r3, [pc, #224]	; (8005b74 <update_ScurveTraj+0x2fc>)
 8005a92:	edd3 7a00 	vldr	s15, [r3]
 8005a96:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8005a9a:	4b37      	ldr	r3, [pc, #220]	; (8005b78 <update_ScurveTraj+0x300>)
 8005a9c:	edc3 7a00 	vstr	s15, [r3]
 8005aa0:	e01a      	b.n	8005ad8 <update_ScurveTraj+0x260>
}
else{
    //printf("amax is reached\n");
    Tj1=amax/jmax;
 8005aa2:	edd7 6a02 	vldr	s13, [r7, #8]
 8005aa6:	ed97 7a01 	vldr	s14, [r7, #4]
 8005aaa:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8005aae:	4b31      	ldr	r3, [pc, #196]	; (8005b74 <update_ScurveTraj+0x2fc>)
 8005ab0:	edc3 7a00 	vstr	s15, [r3]
    Ta=Tj1+(vmax-vi)/amax;
 8005ab4:	ed97 7a03 	vldr	s14, [r7, #12]
 8005ab8:	edd7 7a05 	vldr	s15, [r7, #20]
 8005abc:	ee77 6a67 	vsub.f32	s13, s14, s15
 8005ac0:	edd7 7a02 	vldr	s15, [r7, #8]
 8005ac4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8005ac8:	4b2a      	ldr	r3, [pc, #168]	; (8005b74 <update_ScurveTraj+0x2fc>)
 8005aca:	edd3 7a00 	vldr	s15, [r3]
 8005ace:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005ad2:	4b29      	ldr	r3, [pc, #164]	; (8005b78 <update_ScurveTraj+0x300>)
 8005ad4:	edc3 7a00 	vstr	s15, [r3]
}

//Phase 3: Desacceleration


if ((vmax-vf)*jmax < pow(amax,2)){
 8005ad8:	ed97 7a03 	vldr	s14, [r7, #12]
 8005adc:	edd7 7a04 	vldr	s15, [r7, #16]
 8005ae0:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005ae4:	edd7 7a01 	vldr	s15, [r7, #4]
 8005ae8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005aec:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8005af0:	edd7 7a02 	vldr	s15, [r7, #8]
 8005af4:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005af8:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005afc:	eeb0 0b47 	vmov.f64	d0, d7
 8005b00:	f00b ffb6 	bl	8011a70 <pow>
 8005b04:	eeb0 7b40 	vmov.f64	d7, d0
 8005b08:	eeb4 8bc7 	vcmpe.f64	d8, d7
 8005b0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005b10:	d538      	bpl.n	8005b84 <update_ScurveTraj+0x30c>
    //printf("amin is NOT reached\n");

    Tj2=sqrt(fabs(vmax-vf)/jmax);
 8005b12:	ed97 7a03 	vldr	s14, [r7, #12]
 8005b16:	edd7 7a04 	vldr	s15, [r7, #16]
 8005b1a:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005b1e:	eef0 7ae7 	vabs.f32	s15, s15
 8005b22:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 8005b26:	edd7 7a01 	vldr	s15, [r7, #4]
 8005b2a:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005b2e:	ee86 5b07 	vdiv.f64	d5, d6, d7
 8005b32:	eeb0 0b45 	vmov.f64	d0, d5
 8005b36:	f00c fa1b 	bl	8011f70 <sqrt>
 8005b3a:	eeb0 7b40 	vmov.f64	d7, d0
 8005b3e:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005b42:	4b0e      	ldr	r3, [pc, #56]	; (8005b7c <update_ScurveTraj+0x304>)
 8005b44:	edc3 7a00 	vstr	s15, [r3]
    Td=Tj2*2;
 8005b48:	4b0c      	ldr	r3, [pc, #48]	; (8005b7c <update_ScurveTraj+0x304>)
 8005b4a:	edd3 7a00 	vldr	s15, [r3]
 8005b4e:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8005b52:	4b0b      	ldr	r3, [pc, #44]	; (8005b80 <update_ScurveTraj+0x308>)
 8005b54:	edc3 7a00 	vstr	s15, [r3]
 8005b58:	e02f      	b.n	8005bba <update_ScurveTraj+0x342>
 8005b5a:	bf00      	nop
 8005b5c:	24000680 	.word	0x24000680
 8005b60:	24000690 	.word	0x24000690
 8005b64:	24000684 	.word	0x24000684
 8005b68:	24000ad4 	.word	0x24000ad4
 8005b6c:	24000ad8 	.word	0x24000ad8
 8005b70:	24000aa4 	.word	0x24000aa4
 8005b74:	24000ac4 	.word	0x24000ac4
 8005b78:	24000ab8 	.word	0x24000ab8
 8005b7c:	24000ac8 	.word	0x24000ac8
 8005b80:	24000abc 	.word	0x24000abc
}
else{
    //printf("amin is reached\n");
    Tj2=amax/jmax;
 8005b84:	edd7 6a02 	vldr	s13, [r7, #8]
 8005b88:	ed97 7a01 	vldr	s14, [r7, #4]
 8005b8c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8005b90:	4ba9      	ldr	r3, [pc, #676]	; (8005e38 <update_ScurveTraj+0x5c0>)
 8005b92:	edc3 7a00 	vstr	s15, [r3]
    Td=Tj2+(vmax-vf)/amax;
 8005b96:	ed97 7a03 	vldr	s14, [r7, #12]
 8005b9a:	edd7 7a04 	vldr	s15, [r7, #16]
 8005b9e:	ee77 6a67 	vsub.f32	s13, s14, s15
 8005ba2:	edd7 7a02 	vldr	s15, [r7, #8]
 8005ba6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8005baa:	4ba3      	ldr	r3, [pc, #652]	; (8005e38 <update_ScurveTraj+0x5c0>)
 8005bac:	edd3 7a00 	vldr	s15, [r3]
 8005bb0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8005bb4:	4ba1      	ldr	r3, [pc, #644]	; (8005e3c <update_ScurveTraj+0x5c4>)
 8005bb6:	edc3 7a00 	vstr	s15, [r3]
}


Tv = (qf-qi)/vmax - Ta/2*(1+vi/vmax)-Td/2*(1+vf/vmax);
 8005bba:	4ba1      	ldr	r3, [pc, #644]	; (8005e40 <update_ScurveTraj+0x5c8>)
 8005bbc:	ed93 7a00 	vldr	s14, [r3]
 8005bc0:	4ba0      	ldr	r3, [pc, #640]	; (8005e44 <update_ScurveTraj+0x5cc>)
 8005bc2:	edd3 7a00 	vldr	s15, [r3]
 8005bc6:	ee77 6a67 	vsub.f32	s13, s14, s15
 8005bca:	edd7 7a03 	vldr	s15, [r7, #12]
 8005bce:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8005bd2:	4b9d      	ldr	r3, [pc, #628]	; (8005e48 <update_ScurveTraj+0x5d0>)
 8005bd4:	edd3 7a00 	vldr	s15, [r3]
 8005bd8:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 8005bdc:	eec7 6a86 	vdiv.f32	s13, s15, s12
 8005be0:	edd7 5a05 	vldr	s11, [r7, #20]
 8005be4:	ed97 6a03 	vldr	s12, [r7, #12]
 8005be8:	eec5 7a86 	vdiv.f32	s15, s11, s12
 8005bec:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8005bf0:	ee77 7a86 	vadd.f32	s15, s15, s12
 8005bf4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005bf8:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005bfc:	4b8f      	ldr	r3, [pc, #572]	; (8005e3c <update_ScurveTraj+0x5c4>)
 8005bfe:	edd3 7a00 	vldr	s15, [r3]
 8005c02:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 8005c06:	eec7 6a86 	vdiv.f32	s13, s15, s12
 8005c0a:	edd7 5a04 	vldr	s11, [r7, #16]
 8005c0e:	ed97 6a03 	vldr	s12, [r7, #12]
 8005c12:	eec5 7a86 	vdiv.f32	s15, s11, s12
 8005c16:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8005c1a:	ee77 7a86 	vadd.f32	s15, s15, s12
 8005c1e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8005c22:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005c26:	4b89      	ldr	r3, [pc, #548]	; (8005e4c <update_ScurveTraj+0x5d4>)
 8005c28:	edc3 7a00 	vstr	s15, [r3]

if (Tv>0){
 8005c2c:	4b87      	ldr	r3, [pc, #540]	; (8005e4c <update_ScurveTraj+0x5d4>)
 8005c2e:	edd3 7a00 	vldr	s15, [r3]
 8005c32:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005c36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005c3a:	f300 8347 	bgt.w	80062cc <update_ScurveTraj+0xa54>
    //printf("the max velocity is reached\n");
}
else{
    //printf("CASE 2\n");
    //printf("In this case vmax is NOT reached, so Tv=0\n");
    Tj1=amax/jmax;
 8005c3e:	edd7 6a02 	vldr	s13, [r7, #8]
 8005c42:	ed97 7a01 	vldr	s14, [r7, #4]
 8005c46:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8005c4a:	4b81      	ldr	r3, [pc, #516]	; (8005e50 <update_ScurveTraj+0x5d8>)
 8005c4c:	edc3 7a00 	vstr	s15, [r3]
    Tj2=Tj1;
 8005c50:	4b7f      	ldr	r3, [pc, #508]	; (8005e50 <update_ScurveTraj+0x5d8>)
 8005c52:	681b      	ldr	r3, [r3, #0]
 8005c54:	4a78      	ldr	r2, [pc, #480]	; (8005e38 <update_ScurveTraj+0x5c0>)
 8005c56:	6013      	str	r3, [r2, #0]
    Tj=Tj1;
 8005c58:	4b7d      	ldr	r3, [pc, #500]	; (8005e50 <update_ScurveTraj+0x5d8>)
 8005c5a:	681b      	ldr	r3, [r3, #0]
 8005c5c:	4a7d      	ldr	r2, [pc, #500]	; (8005e54 <update_ScurveTraj+0x5dc>)
 8005c5e:	6013      	str	r3, [r2, #0]
    delta = (pow(amax,4)/pow(jmax,2))+2*(pow(vi,2)+pow(vf,2))+amax*(4*(qf-qi)-2*(amax/jmax)*(vi+vf));
 8005c60:	edd7 7a02 	vldr	s15, [r7, #8]
 8005c64:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005c68:	eeb1 1b00 	vmov.f64	d1, #16	; 0x40800000  4.0
 8005c6c:	eeb0 0b47 	vmov.f64	d0, d7
 8005c70:	f00b fefe 	bl	8011a70 <pow>
 8005c74:	eeb0 9b40 	vmov.f64	d9, d0
 8005c78:	edd7 7a01 	vldr	s15, [r7, #4]
 8005c7c:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005c80:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005c84:	eeb0 0b47 	vmov.f64	d0, d7
 8005c88:	f00b fef2 	bl	8011a70 <pow>
 8005c8c:	eeb0 7b40 	vmov.f64	d7, d0
 8005c90:	ee89 8b07 	vdiv.f64	d8, d9, d7
 8005c94:	edd7 7a05 	vldr	s15, [r7, #20]
 8005c98:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005c9c:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005ca0:	eeb0 0b47 	vmov.f64	d0, d7
 8005ca4:	f00b fee4 	bl	8011a70 <pow>
 8005ca8:	eeb0 9b40 	vmov.f64	d9, d0
 8005cac:	edd7 7a04 	vldr	s15, [r7, #16]
 8005cb0:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005cb4:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005cb8:	eeb0 0b47 	vmov.f64	d0, d7
 8005cbc:	f00b fed8 	bl	8011a70 <pow>
 8005cc0:	eeb0 7b40 	vmov.f64	d7, d0
 8005cc4:	ee39 7b07 	vadd.f64	d7, d9, d7
 8005cc8:	ee37 7b07 	vadd.f64	d7, d7, d7
 8005ccc:	ee38 6b07 	vadd.f64	d6, d8, d7
 8005cd0:	4b5b      	ldr	r3, [pc, #364]	; (8005e40 <update_ScurveTraj+0x5c8>)
 8005cd2:	ed93 7a00 	vldr	s14, [r3]
 8005cd6:	4b5b      	ldr	r3, [pc, #364]	; (8005e44 <update_ScurveTraj+0x5cc>)
 8005cd8:	edd3 7a00 	vldr	s15, [r3]
 8005cdc:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005ce0:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 8005ce4:	ee27 7a87 	vmul.f32	s14, s15, s14
 8005ce8:	ed97 5a02 	vldr	s10, [r7, #8]
 8005cec:	edd7 5a01 	vldr	s11, [r7, #4]
 8005cf0:	eec5 7a25 	vdiv.f32	s15, s10, s11
 8005cf4:	ee77 5aa7 	vadd.f32	s11, s15, s15
 8005cf8:	ed97 5a05 	vldr	s10, [r7, #20]
 8005cfc:	edd7 7a04 	vldr	s15, [r7, #16]
 8005d00:	ee75 7a27 	vadd.f32	s15, s10, s15
 8005d04:	ee65 7aa7 	vmul.f32	s15, s11, s15
 8005d08:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005d0c:	edd7 7a02 	vldr	s15, [r7, #8]
 8005d10:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005d14:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005d18:	ee36 7b07 	vadd.f64	d7, d6, d7
 8005d1c:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005d20:	4b4d      	ldr	r3, [pc, #308]	; (8005e58 <update_ScurveTraj+0x5e0>)
 8005d22:	edc3 7a00 	vstr	s15, [r3]
    Ta=((pow(amax,2)/jmax)-2*vi+sqrt(delta))/(2*amax);
 8005d26:	edd7 7a02 	vldr	s15, [r7, #8]
 8005d2a:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005d2e:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005d32:	eeb0 0b47 	vmov.f64	d0, d7
 8005d36:	f00b fe9b 	bl	8011a70 <pow>
 8005d3a:	eeb0 5b40 	vmov.f64	d5, d0
 8005d3e:	edd7 7a01 	vldr	s15, [r7, #4]
 8005d42:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005d46:	ee85 6b07 	vdiv.f64	d6, d5, d7
 8005d4a:	edd7 7a05 	vldr	s15, [r7, #20]
 8005d4e:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8005d52:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005d56:	ee36 8b47 	vsub.f64	d8, d6, d7
 8005d5a:	4b3f      	ldr	r3, [pc, #252]	; (8005e58 <update_ScurveTraj+0x5e0>)
 8005d5c:	edd3 7a00 	vldr	s15, [r3]
 8005d60:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005d64:	eeb0 0b47 	vmov.f64	d0, d7
 8005d68:	f00c f902 	bl	8011f70 <sqrt>
 8005d6c:	eeb0 7b40 	vmov.f64	d7, d0
 8005d70:	ee38 5b07 	vadd.f64	d5, d8, d7
 8005d74:	edd7 7a02 	vldr	s15, [r7, #8]
 8005d78:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8005d7c:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 8005d80:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8005d84:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005d88:	4b2f      	ldr	r3, [pc, #188]	; (8005e48 <update_ScurveTraj+0x5d0>)
 8005d8a:	edc3 7a00 	vstr	s15, [r3]
    Td=((pow(amax,2)/jmax)-2*vf+sqrt(delta))/(2*amax);
 8005d8e:	edd7 7a02 	vldr	s15, [r7, #8]
 8005d92:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005d96:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005d9a:	eeb0 0b47 	vmov.f64	d0, d7
 8005d9e:	f00b fe67 	bl	8011a70 <pow>
 8005da2:	eeb0 5b40 	vmov.f64	d5, d0
 8005da6:	edd7 7a01 	vldr	s15, [r7, #4]
 8005daa:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005dae:	ee85 6b07 	vdiv.f64	d6, d5, d7
 8005db2:	edd7 7a04 	vldr	s15, [r7, #16]
 8005db6:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8005dba:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005dbe:	ee36 8b47 	vsub.f64	d8, d6, d7
 8005dc2:	4b25      	ldr	r3, [pc, #148]	; (8005e58 <update_ScurveTraj+0x5e0>)
 8005dc4:	edd3 7a00 	vldr	s15, [r3]
 8005dc8:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005dcc:	eeb0 0b47 	vmov.f64	d0, d7
 8005dd0:	f00c f8ce 	bl	8011f70 <sqrt>
 8005dd4:	eeb0 7b40 	vmov.f64	d7, d0
 8005dd8:	ee38 5b07 	vadd.f64	d5, d8, d7
 8005ddc:	edd7 7a02 	vldr	s15, [r7, #8]
 8005de0:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8005de4:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 8005de8:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8005dec:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005df0:	4b12      	ldr	r3, [pc, #72]	; (8005e3c <update_ScurveTraj+0x5c4>)
 8005df2:	edc3 7a00 	vstr	s15, [r3]
    Tv=0;
 8005df6:	4b15      	ldr	r3, [pc, #84]	; (8005e4c <update_ScurveTraj+0x5d4>)
 8005df8:	f04f 0200 	mov.w	r2, #0
 8005dfc:	601a      	str	r2, [r3, #0]


    if (Ta<2*Tj || Td<2*Tj){
 8005dfe:	4b15      	ldr	r3, [pc, #84]	; (8005e54 <update_ScurveTraj+0x5dc>)
 8005e00:	edd3 7a00 	vldr	s15, [r3]
 8005e04:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8005e08:	4b0f      	ldr	r3, [pc, #60]	; (8005e48 <update_ScurveTraj+0x5d0>)
 8005e0a:	edd3 7a00 	vldr	s15, [r3]
 8005e0e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005e12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005e16:	f300 822c 	bgt.w	8006272 <update_ScurveTraj+0x9fa>
 8005e1a:	4b0e      	ldr	r3, [pc, #56]	; (8005e54 <update_ScurveTraj+0x5dc>)
 8005e1c:	edd3 7a00 	vldr	s15, [r3]
 8005e20:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8005e24:	4b05      	ldr	r3, [pc, #20]	; (8005e3c <update_ScurveTraj+0x5c4>)
 8005e26:	edd3 7a00 	vldr	s15, [r3]
 8005e2a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8005e2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005e32:	f300 821e 	bgt.w	8006272 <update_ScurveTraj+0x9fa>
        }
    }

}

}
 8005e36:	e249      	b.n	80062cc <update_ScurveTraj+0xa54>
 8005e38:	24000ac8 	.word	0x24000ac8
 8005e3c:	24000abc 	.word	0x24000abc
 8005e40:	24000ad8 	.word	0x24000ad8
 8005e44:	24000ad4 	.word	0x24000ad4
 8005e48:	24000ab8 	.word	0x24000ab8
 8005e4c:	24000ac0 	.word	0x24000ac0
 8005e50:	24000ac4 	.word	0x24000ac4
 8005e54:	24000acc 	.word	0x24000acc
 8005e58:	24000ad0 	.word	0x24000ad0
            amax=amax*0.99;
 8005e5c:	edd7 7a02 	vldr	s15, [r7, #8]
 8005e60:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005e64:	ed9f 6bb8 	vldr	d6, [pc, #736]	; 8006148 <update_ScurveTraj+0x8d0>
 8005e68:	ee27 7b06 	vmul.f64	d7, d7, d6
 8005e6c:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005e70:	edc7 7a02 	vstr	s15, [r7, #8]
            Tj=amax/jmax;
 8005e74:	edd7 6a02 	vldr	s13, [r7, #8]
 8005e78:	ed97 7a01 	vldr	s14, [r7, #4]
 8005e7c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8005e80:	4bb3      	ldr	r3, [pc, #716]	; (8006150 <update_ScurveTraj+0x8d8>)
 8005e82:	edc3 7a00 	vstr	s15, [r3]
            delta = (pow(amax,4)/pow(jmax,2))+2*(pow(vi,2)+pow(vf,2))+amax*(4*(qf-qi)-2*(amax/jmax)*(vi+vf));
 8005e86:	edd7 7a02 	vldr	s15, [r7, #8]
 8005e8a:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005e8e:	eeb1 1b00 	vmov.f64	d1, #16	; 0x40800000  4.0
 8005e92:	eeb0 0b47 	vmov.f64	d0, d7
 8005e96:	f00b fdeb 	bl	8011a70 <pow>
 8005e9a:	eeb0 9b40 	vmov.f64	d9, d0
 8005e9e:	edd7 7a01 	vldr	s15, [r7, #4]
 8005ea2:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005ea6:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005eaa:	eeb0 0b47 	vmov.f64	d0, d7
 8005eae:	f00b fddf 	bl	8011a70 <pow>
 8005eb2:	eeb0 7b40 	vmov.f64	d7, d0
 8005eb6:	ee89 8b07 	vdiv.f64	d8, d9, d7
 8005eba:	edd7 7a05 	vldr	s15, [r7, #20]
 8005ebe:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005ec2:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005ec6:	eeb0 0b47 	vmov.f64	d0, d7
 8005eca:	f00b fdd1 	bl	8011a70 <pow>
 8005ece:	eeb0 9b40 	vmov.f64	d9, d0
 8005ed2:	edd7 7a04 	vldr	s15, [r7, #16]
 8005ed6:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005eda:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005ede:	eeb0 0b47 	vmov.f64	d0, d7
 8005ee2:	f00b fdc5 	bl	8011a70 <pow>
 8005ee6:	eeb0 7b40 	vmov.f64	d7, d0
 8005eea:	ee39 7b07 	vadd.f64	d7, d9, d7
 8005eee:	ee37 7b07 	vadd.f64	d7, d7, d7
 8005ef2:	ee38 6b07 	vadd.f64	d6, d8, d7
 8005ef6:	4b97      	ldr	r3, [pc, #604]	; (8006154 <update_ScurveTraj+0x8dc>)
 8005ef8:	ed93 7a00 	vldr	s14, [r3]
 8005efc:	4b96      	ldr	r3, [pc, #600]	; (8006158 <update_ScurveTraj+0x8e0>)
 8005efe:	edd3 7a00 	vldr	s15, [r3]
 8005f02:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005f06:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 8005f0a:	ee27 7a87 	vmul.f32	s14, s15, s14
 8005f0e:	ed97 5a02 	vldr	s10, [r7, #8]
 8005f12:	edd7 5a01 	vldr	s11, [r7, #4]
 8005f16:	eec5 7a25 	vdiv.f32	s15, s10, s11
 8005f1a:	ee77 5aa7 	vadd.f32	s11, s15, s15
 8005f1e:	ed97 5a05 	vldr	s10, [r7, #20]
 8005f22:	edd7 7a04 	vldr	s15, [r7, #16]
 8005f26:	ee75 7a27 	vadd.f32	s15, s10, s15
 8005f2a:	ee65 7aa7 	vmul.f32	s15, s11, s15
 8005f2e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005f32:	edd7 7a02 	vldr	s15, [r7, #8]
 8005f36:	ee67 7a27 	vmul.f32	s15, s14, s15
 8005f3a:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005f3e:	ee36 7b07 	vadd.f64	d7, d6, d7
 8005f42:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005f46:	4b85      	ldr	r3, [pc, #532]	; (800615c <update_ScurveTraj+0x8e4>)
 8005f48:	edc3 7a00 	vstr	s15, [r3]
            Ta=((pow(amax,2)/jmax)-2*vi+sqrt(delta))/(2*amax);
 8005f4c:	edd7 7a02 	vldr	s15, [r7, #8]
 8005f50:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005f54:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005f58:	eeb0 0b47 	vmov.f64	d0, d7
 8005f5c:	f00b fd88 	bl	8011a70 <pow>
 8005f60:	eeb0 5b40 	vmov.f64	d5, d0
 8005f64:	edd7 7a01 	vldr	s15, [r7, #4]
 8005f68:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005f6c:	ee85 6b07 	vdiv.f64	d6, d5, d7
 8005f70:	edd7 7a05 	vldr	s15, [r7, #20]
 8005f74:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8005f78:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005f7c:	ee36 8b47 	vsub.f64	d8, d6, d7
 8005f80:	4b76      	ldr	r3, [pc, #472]	; (800615c <update_ScurveTraj+0x8e4>)
 8005f82:	edd3 7a00 	vldr	s15, [r3]
 8005f86:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005f8a:	eeb0 0b47 	vmov.f64	d0, d7
 8005f8e:	f00b ffef 	bl	8011f70 <sqrt>
 8005f92:	eeb0 7b40 	vmov.f64	d7, d0
 8005f96:	ee38 5b07 	vadd.f64	d5, d8, d7
 8005f9a:	edd7 7a02 	vldr	s15, [r7, #8]
 8005f9e:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8005fa2:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 8005fa6:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8005faa:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8005fae:	4b6c      	ldr	r3, [pc, #432]	; (8006160 <update_ScurveTraj+0x8e8>)
 8005fb0:	edc3 7a00 	vstr	s15, [r3]
            Td=((pow(amax,2)/jmax)-2*vf+sqrt(delta))/(2*amax);
 8005fb4:	edd7 7a02 	vldr	s15, [r7, #8]
 8005fb8:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005fbc:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 8005fc0:	eeb0 0b47 	vmov.f64	d0, d7
 8005fc4:	f00b fd54 	bl	8011a70 <pow>
 8005fc8:	eeb0 5b40 	vmov.f64	d5, d0
 8005fcc:	edd7 7a01 	vldr	s15, [r7, #4]
 8005fd0:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005fd4:	ee85 6b07 	vdiv.f64	d6, d5, d7
 8005fd8:	edd7 7a04 	vldr	s15, [r7, #16]
 8005fdc:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8005fe0:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005fe4:	ee36 8b47 	vsub.f64	d8, d6, d7
 8005fe8:	4b5c      	ldr	r3, [pc, #368]	; (800615c <update_ScurveTraj+0x8e4>)
 8005fea:	edd3 7a00 	vldr	s15, [r3]
 8005fee:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8005ff2:	eeb0 0b47 	vmov.f64	d0, d7
 8005ff6:	f00b ffbb 	bl	8011f70 <sqrt>
 8005ffa:	eeb0 7b40 	vmov.f64	d7, d0
 8005ffe:	ee38 5b07 	vadd.f64	d5, d8, d7
 8006002:	edd7 7a02 	vldr	s15, [r7, #8]
 8006006:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800600a:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 800600e:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006012:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8006016:	4b53      	ldr	r3, [pc, #332]	; (8006164 <update_ScurveTraj+0x8ec>)
 8006018:	edc3 7a00 	vstr	s15, [r3]
            if (Ta<0){
 800601c:	4b50      	ldr	r3, [pc, #320]	; (8006160 <update_ScurveTraj+0x8e8>)
 800601e:	edd3 7a00 	vldr	s15, [r3]
 8006022:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006026:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800602a:	f140 8081 	bpl.w	8006130 <update_ScurveTraj+0x8b8>
                Ta=0;
 800602e:	4b4c      	ldr	r3, [pc, #304]	; (8006160 <update_ScurveTraj+0x8e8>)
 8006030:	f04f 0200 	mov.w	r2, #0
 8006034:	601a      	str	r2, [r3, #0]
                Tj1=0;
 8006036:	4b4c      	ldr	r3, [pc, #304]	; (8006168 <update_ScurveTraj+0x8f0>)
 8006038:	f04f 0200 	mov.w	r2, #0
 800603c:	601a      	str	r2, [r3, #0]
                Td=2*((qf-qi)/(vf+vi));
 800603e:	4b45      	ldr	r3, [pc, #276]	; (8006154 <update_ScurveTraj+0x8dc>)
 8006040:	ed93 7a00 	vldr	s14, [r3]
 8006044:	4b44      	ldr	r3, [pc, #272]	; (8006158 <update_ScurveTraj+0x8e0>)
 8006046:	edd3 7a00 	vldr	s15, [r3]
 800604a:	ee77 6a67 	vsub.f32	s13, s14, s15
 800604e:	ed97 7a04 	vldr	s14, [r7, #16]
 8006052:	edd7 7a05 	vldr	s15, [r7, #20]
 8006056:	ee37 7a27 	vadd.f32	s14, s14, s15
 800605a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800605e:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8006062:	4b40      	ldr	r3, [pc, #256]	; (8006164 <update_ScurveTraj+0x8ec>)
 8006064:	edc3 7a00 	vstr	s15, [r3]
                Tj2=(jmax*(qf-qi)-sqrt(jmax*(jmax*(pow(qf-qi,2))+pow(vf+vi,2)*(vf-vi))))/(jmax*(vf+vi));
 8006068:	4b3a      	ldr	r3, [pc, #232]	; (8006154 <update_ScurveTraj+0x8dc>)
 800606a:	ed93 7a00 	vldr	s14, [r3]
 800606e:	4b3a      	ldr	r3, [pc, #232]	; (8006158 <update_ScurveTraj+0x8e0>)
 8006070:	edd3 7a00 	vldr	s15, [r3]
 8006074:	ee37 7a67 	vsub.f32	s14, s14, s15
 8006078:	edd7 7a01 	vldr	s15, [r7, #4]
 800607c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006080:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 8006084:	edd7 7a01 	vldr	s15, [r7, #4]
 8006088:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 800608c:	edd7 7a01 	vldr	s15, [r7, #4]
 8006090:	eeb7 aae7 	vcvt.f64.f32	d10, s15
 8006094:	4b2f      	ldr	r3, [pc, #188]	; (8006154 <update_ScurveTraj+0x8dc>)
 8006096:	ed93 7a00 	vldr	s14, [r3]
 800609a:	4b2f      	ldr	r3, [pc, #188]	; (8006158 <update_ScurveTraj+0x8e0>)
 800609c:	edd3 7a00 	vldr	s15, [r3]
 80060a0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80060a4:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80060a8:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80060ac:	eeb0 0b47 	vmov.f64	d0, d7
 80060b0:	f00b fcde 	bl	8011a70 <pow>
 80060b4:	eeb0 7b40 	vmov.f64	d7, d0
 80060b8:	ee2a ab07 	vmul.f64	d10, d10, d7
 80060bc:	ed97 7a04 	vldr	s14, [r7, #16]
 80060c0:	edd7 7a05 	vldr	s15, [r7, #20]
 80060c4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80060c8:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80060cc:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80060d0:	eeb0 0b47 	vmov.f64	d0, d7
 80060d4:	f00b fccc 	bl	8011a70 <pow>
 80060d8:	eeb0 6b40 	vmov.f64	d6, d0
 80060dc:	ed97 7a04 	vldr	s14, [r7, #16]
 80060e0:	edd7 7a05 	vldr	s15, [r7, #20]
 80060e4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80060e8:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80060ec:	ee26 7b07 	vmul.f64	d7, d6, d7
 80060f0:	ee3a 7b07 	vadd.f64	d7, d10, d7
 80060f4:	ee29 7b07 	vmul.f64	d7, d9, d7
 80060f8:	eeb0 0b47 	vmov.f64	d0, d7
 80060fc:	f00b ff38 	bl	8011f70 <sqrt>
 8006100:	eeb0 7b40 	vmov.f64	d7, d0
 8006104:	ee38 5b47 	vsub.f64	d5, d8, d7
 8006108:	ed97 7a04 	vldr	s14, [r7, #16]
 800610c:	edd7 7a05 	vldr	s15, [r7, #20]
 8006110:	ee37 7a27 	vadd.f32	s14, s14, s15
 8006114:	edd7 7a01 	vldr	s15, [r7, #4]
 8006118:	ee67 7a27 	vmul.f32	s15, s14, s15
 800611c:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 8006120:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006124:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8006128:	4b10      	ldr	r3, [pc, #64]	; (800616c <update_ScurveTraj+0x8f4>)
 800612a:	edc3 7a00 	vstr	s15, [r3]
                break;
 800612e:	e0cd      	b.n	80062cc <update_ScurveTraj+0xa54>
            if (Td<0){
 8006130:	4b0c      	ldr	r3, [pc, #48]	; (8006164 <update_ScurveTraj+0x8ec>)
 8006132:	edd3 7a00 	vldr	s15, [r3]
 8006136:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800613a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800613e:	d417      	bmi.n	8006170 <update_ScurveTraj+0x8f8>
 8006140:	e097      	b.n	8006272 <update_ScurveTraj+0x9fa>
 8006142:	bf00      	nop
 8006144:	f3af 8000 	nop.w
 8006148:	7ae147ae 	.word	0x7ae147ae
 800614c:	3fefae14 	.word	0x3fefae14
 8006150:	24000acc 	.word	0x24000acc
 8006154:	24000ad8 	.word	0x24000ad8
 8006158:	24000ad4 	.word	0x24000ad4
 800615c:	24000ad0 	.word	0x24000ad0
 8006160:	24000ab8 	.word	0x24000ab8
 8006164:	24000abc 	.word	0x24000abc
 8006168:	24000ac4 	.word	0x24000ac4
 800616c:	24000ac8 	.word	0x24000ac8
                Td=0;
 8006170:	4b59      	ldr	r3, [pc, #356]	; (80062d8 <update_ScurveTraj+0xa60>)
 8006172:	f04f 0200 	mov.w	r2, #0
 8006176:	601a      	str	r2, [r3, #0]
                Ta=2*((qf-qi)/(vf+vi));
 8006178:	4b58      	ldr	r3, [pc, #352]	; (80062dc <update_ScurveTraj+0xa64>)
 800617a:	ed93 7a00 	vldr	s14, [r3]
 800617e:	4b58      	ldr	r3, [pc, #352]	; (80062e0 <update_ScurveTraj+0xa68>)
 8006180:	edd3 7a00 	vldr	s15, [r3]
 8006184:	ee77 6a67 	vsub.f32	s13, s14, s15
 8006188:	ed97 7a04 	vldr	s14, [r7, #16]
 800618c:	edd7 7a05 	vldr	s15, [r7, #20]
 8006190:	ee37 7a27 	vadd.f32	s14, s14, s15
 8006194:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006198:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800619c:	4b51      	ldr	r3, [pc, #324]	; (80062e4 <update_ScurveTraj+0xa6c>)
 800619e:	edc3 7a00 	vstr	s15, [r3]
                Tj1=(jmax*(qf-qi)-sqrt(jmax*(jmax*(pow(qf-qi,2))-pow(vf+vi,2)*(vf-vi))))/(jmax*(vf+vi));
 80061a2:	4b4e      	ldr	r3, [pc, #312]	; (80062dc <update_ScurveTraj+0xa64>)
 80061a4:	ed93 7a00 	vldr	s14, [r3]
 80061a8:	4b4d      	ldr	r3, [pc, #308]	; (80062e0 <update_ScurveTraj+0xa68>)
 80061aa:	edd3 7a00 	vldr	s15, [r3]
 80061ae:	ee37 7a67 	vsub.f32	s14, s14, s15
 80061b2:	edd7 7a01 	vldr	s15, [r7, #4]
 80061b6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80061ba:	eeb7 8ae7 	vcvt.f64.f32	d8, s15
 80061be:	edd7 7a01 	vldr	s15, [r7, #4]
 80061c2:	eeb7 9ae7 	vcvt.f64.f32	d9, s15
 80061c6:	edd7 7a01 	vldr	s15, [r7, #4]
 80061ca:	eeb7 aae7 	vcvt.f64.f32	d10, s15
 80061ce:	4b43      	ldr	r3, [pc, #268]	; (80062dc <update_ScurveTraj+0xa64>)
 80061d0:	ed93 7a00 	vldr	s14, [r3]
 80061d4:	4b42      	ldr	r3, [pc, #264]	; (80062e0 <update_ScurveTraj+0xa68>)
 80061d6:	edd3 7a00 	vldr	s15, [r3]
 80061da:	ee77 7a67 	vsub.f32	s15, s14, s15
 80061de:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 80061e2:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80061e6:	eeb0 0b47 	vmov.f64	d0, d7
 80061ea:	f00b fc41 	bl	8011a70 <pow>
 80061ee:	eeb0 7b40 	vmov.f64	d7, d0
 80061f2:	ee2a ab07 	vmul.f64	d10, d10, d7
 80061f6:	ed97 7a04 	vldr	s14, [r7, #16]
 80061fa:	edd7 7a05 	vldr	s15, [r7, #20]
 80061fe:	ee77 7a27 	vadd.f32	s15, s14, s15
 8006202:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006206:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 800620a:	eeb0 0b47 	vmov.f64	d0, d7
 800620e:	f00b fc2f 	bl	8011a70 <pow>
 8006212:	eeb0 6b40 	vmov.f64	d6, d0
 8006216:	ed97 7a04 	vldr	s14, [r7, #16]
 800621a:	edd7 7a05 	vldr	s15, [r7, #20]
 800621e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8006222:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8006226:	ee26 7b07 	vmul.f64	d7, d6, d7
 800622a:	ee3a 7b47 	vsub.f64	d7, d10, d7
 800622e:	ee29 7b07 	vmul.f64	d7, d9, d7
 8006232:	eeb0 0b47 	vmov.f64	d0, d7
 8006236:	f00b fe9b 	bl	8011f70 <sqrt>
 800623a:	eeb0 7b40 	vmov.f64	d7, d0
 800623e:	ee38 5b47 	vsub.f64	d5, d8, d7
 8006242:	ed97 7a04 	vldr	s14, [r7, #16]
 8006246:	edd7 7a05 	vldr	s15, [r7, #20]
 800624a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800624e:	edd7 7a01 	vldr	s15, [r7, #4]
 8006252:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006256:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 800625a:	ee85 7b06 	vdiv.f64	d7, d5, d6
 800625e:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8006262:	4b21      	ldr	r3, [pc, #132]	; (80062e8 <update_ScurveTraj+0xa70>)
 8006264:	edc3 7a00 	vstr	s15, [r3]
                Tj2=0;
 8006268:	4b20      	ldr	r3, [pc, #128]	; (80062ec <update_ScurveTraj+0xa74>)
 800626a:	f04f 0200 	mov.w	r2, #0
 800626e:	601a      	str	r2, [r3, #0]
                break;
 8006270:	e02c      	b.n	80062cc <update_ScurveTraj+0xa54>
        while (!(Ta>2*Tj && Td>2*Tj)){
 8006272:	4b1f      	ldr	r3, [pc, #124]	; (80062f0 <update_ScurveTraj+0xa78>)
 8006274:	edd3 7a00 	vldr	s15, [r3]
 8006278:	ee37 7aa7 	vadd.f32	s14, s15, s15
 800627c:	4b19      	ldr	r3, [pc, #100]	; (80062e4 <update_ScurveTraj+0xa6c>)
 800627e:	edd3 7a00 	vldr	s15, [r3]
 8006282:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8006286:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800628a:	bf4c      	ite	mi
 800628c:	2301      	movmi	r3, #1
 800628e:	2300      	movpl	r3, #0
 8006290:	b2db      	uxtb	r3, r3
 8006292:	f083 0301 	eor.w	r3, r3, #1
 8006296:	b2db      	uxtb	r3, r3
 8006298:	2b00      	cmp	r3, #0
 800629a:	f47f addf 	bne.w	8005e5c <update_ScurveTraj+0x5e4>
 800629e:	4b14      	ldr	r3, [pc, #80]	; (80062f0 <update_ScurveTraj+0xa78>)
 80062a0:	edd3 7a00 	vldr	s15, [r3]
 80062a4:	ee37 7aa7 	vadd.f32	s14, s15, s15
 80062a8:	4b0b      	ldr	r3, [pc, #44]	; (80062d8 <update_ScurveTraj+0xa60>)
 80062aa:	edd3 7a00 	vldr	s15, [r3]
 80062ae:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80062b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80062b6:	bf4c      	ite	mi
 80062b8:	2301      	movmi	r3, #1
 80062ba:	2300      	movpl	r3, #0
 80062bc:	b2db      	uxtb	r3, r3
 80062be:	f083 0301 	eor.w	r3, r3, #1
 80062c2:	b2db      	uxtb	r3, r3
 80062c4:	2b00      	cmp	r3, #0
 80062c6:	f47f adc9 	bne.w	8005e5c <update_ScurveTraj+0x5e4>
}
 80062ca:	e7ff      	b.n	80062cc <update_ScurveTraj+0xa54>
 80062cc:	bf00      	nop
 80062ce:	3728      	adds	r7, #40	; 0x28
 80062d0:	46bd      	mov	sp, r7
 80062d2:	ecbd 8b06 	vpop	{d8-d10}
 80062d6:	bd80      	pop	{r7, pc}
 80062d8:	24000abc 	.word	0x24000abc
 80062dc:	24000ad8 	.word	0x24000ad8
 80062e0:	24000ad4 	.word	0x24000ad4
 80062e4:	24000ab8 	.word	0x24000ab8
 80062e8:	24000ac4 	.word	0x24000ac4
 80062ec:	24000ac8 	.word	0x24000ac8
 80062f0:	24000acc 	.word	0x24000acc
 80062f4:	00000000 	.word	0x00000000

080062f8 <SetPerfilTimers>:


void SetPerfilTimers(double omeg1, double omeg2, double omeg3) {	// velAng en rpm
 80062f8:	b480      	push	{r7}
 80062fa:	b089      	sub	sp, #36	; 0x24
 80062fc:	af00      	add	r7, sp, #0
 80062fe:	ed87 0b04 	vstr	d0, [r7, #16]
 8006302:	ed87 1b02 	vstr	d1, [r7, #8]
 8006306:	ed87 2b00 	vstr	d2, [r7]
	 *   Funcion que configura el PWM del timer 12,13 14, para que el motor vaya a la
	 *   velocidad deseada.
	 *   Entrada: velocidad Angular de cada eslabon, en rad/s.
	 ----------------------------------------------------------------------- */

		rpm1 = (omeg1*((60.00)/(2.00*pi)));
 800630a:	ed97 7b04 	vldr	d7, [r7, #16]
 800630e:	ed9f 6b94 	vldr	d6, [pc, #592]	; 8006560 <SetPerfilTimers+0x268>
 8006312:	ee27 7b06 	vmul.f64	d7, d7, d6
 8006316:	4b9a      	ldr	r3, [pc, #616]	; (8006580 <SetPerfilTimers+0x288>)
 8006318:	ed83 7b00 	vstr	d7, [r3]
		rpm2 = (omeg2*((60.00)/(2.00*pi)));
 800631c:	ed97 7b02 	vldr	d7, [r7, #8]
 8006320:	ed9f 6b8f 	vldr	d6, [pc, #572]	; 8006560 <SetPerfilTimers+0x268>
 8006324:	ee27 7b06 	vmul.f64	d7, d7, d6
 8006328:	4b96      	ldr	r3, [pc, #600]	; (8006584 <SetPerfilTimers+0x28c>)
 800632a:	ed83 7b00 	vstr	d7, [r3]
		rpm3 = (omeg3*((60.00)/(2.00*pi)));
 800632e:	ed97 7b00 	vldr	d7, [r7]
 8006332:	ed9f 6b8b 	vldr	d6, [pc, #556]	; 8006560 <SetPerfilTimers+0x268>
 8006336:	ee27 7b06 	vmul.f64	d7, d7, d6
 800633a:	4b93      	ldr	r3, [pc, #588]	; (8006588 <SetPerfilTimers+0x290>)
 800633c:	ed83 7b00 	vstr	d7, [r3]

		if(rpm1<=0.1){
 8006340:	4b8f      	ldr	r3, [pc, #572]	; (8006580 <SetPerfilTimers+0x288>)
 8006342:	ed93 7b00 	vldr	d7, [r3]
 8006346:	ed9f 6b88 	vldr	d6, [pc, #544]	; 8006568 <SetPerfilTimers+0x270>
 800634a:	eeb4 7bc6 	vcmpe.f64	d7, d6
 800634e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006352:	d805      	bhi.n	8006360 <SetPerfilTimers+0x68>
			rpm1=0.1;
 8006354:	498a      	ldr	r1, [pc, #552]	; (8006580 <SetPerfilTimers+0x288>)
 8006356:	a384      	add	r3, pc, #528	; (adr r3, 8006568 <SetPerfilTimers+0x270>)
 8006358:	e9d3 2300 	ldrd	r2, r3, [r3]
 800635c:	e9c1 2300 	strd	r2, r3, [r1]
		}
		if(rpm2<=0.1){
 8006360:	4b88      	ldr	r3, [pc, #544]	; (8006584 <SetPerfilTimers+0x28c>)
 8006362:	ed93 7b00 	vldr	d7, [r3]
 8006366:	ed9f 6b80 	vldr	d6, [pc, #512]	; 8006568 <SetPerfilTimers+0x270>
 800636a:	eeb4 7bc6 	vcmpe.f64	d7, d6
 800636e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006372:	d805      	bhi.n	8006380 <SetPerfilTimers+0x88>
			rpm2=0.1;
 8006374:	4983      	ldr	r1, [pc, #524]	; (8006584 <SetPerfilTimers+0x28c>)
 8006376:	a37c      	add	r3, pc, #496	; (adr r3, 8006568 <SetPerfilTimers+0x270>)
 8006378:	e9d3 2300 	ldrd	r2, r3, [r3]
 800637c:	e9c1 2300 	strd	r2, r3, [r1]
		}
		if(rpm3<=0.1){
 8006380:	4b81      	ldr	r3, [pc, #516]	; (8006588 <SetPerfilTimers+0x290>)
 8006382:	ed93 7b00 	vldr	d7, [r3]
 8006386:	ed9f 6b78 	vldr	d6, [pc, #480]	; 8006568 <SetPerfilTimers+0x270>
 800638a:	eeb4 7bc6 	vcmpe.f64	d7, d6
 800638e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006392:	d805      	bhi.n	80063a0 <SetPerfilTimers+0xa8>
			rpm3=0.1;
 8006394:	497c      	ldr	r1, [pc, #496]	; (8006588 <SetPerfilTimers+0x290>)
 8006396:	a374      	add	r3, pc, #464	; (adr r3, 8006568 <SetPerfilTimers+0x270>)
 8006398:	e9d3 2300 	ldrd	r2, r3, [r3]
 800639c:	e9c1 2300 	strd	r2, r3, [r1]
		}

		rpm1 = 1 ;   //HARDCODE PARA HACER PRUEBAS A BAJA VELOCIDAD
 80063a0:	4977      	ldr	r1, [pc, #476]	; (8006580 <SetPerfilTimers+0x288>)
 80063a2:	f04f 0200 	mov.w	r2, #0
 80063a6:	4b79      	ldr	r3, [pc, #484]	; (800658c <SetPerfilTimers+0x294>)
 80063a8:	e9c1 2300 	strd	r2, r3, [r1]
		rpm2 = 1 ;
 80063ac:	4975      	ldr	r1, [pc, #468]	; (8006584 <SetPerfilTimers+0x28c>)
 80063ae:	f04f 0200 	mov.w	r2, #0
 80063b2:	4b76      	ldr	r3, [pc, #472]	; (800658c <SetPerfilTimers+0x294>)
 80063b4:	e9c1 2300 	strd	r2, r3, [r1]
		rpm3 = 1 ;
 80063b8:	4973      	ldr	r1, [pc, #460]	; (8006588 <SetPerfilTimers+0x290>)
 80063ba:	f04f 0200 	mov.w	r2, #0
 80063be:	4b73      	ldr	r3, [pc, #460]	; (800658c <SetPerfilTimers+0x294>)
 80063c0:	e9c1 2300 	strd	r2, r3, [r1]


		periodoM[0] = (((FCL * 60.00) / ((double)rpm1 * ((double)(TIM12->PSC) + 1.00) * STEPREV)) - 1.00);	//Fpwm = 64M / ((ARR+1)*(PSC+1)
 80063c4:	4b72      	ldr	r3, [pc, #456]	; (8006590 <SetPerfilTimers+0x298>)
 80063c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80063c8:	ee07 3a90 	vmov	s15, r3
 80063cc:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80063d0:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80063d4:	ee37 6b06 	vadd.f64	d6, d7, d6
 80063d8:	4b69      	ldr	r3, [pc, #420]	; (8006580 <SetPerfilTimers+0x288>)
 80063da:	ed93 7b00 	vldr	d7, [r3]
 80063de:	ee26 7b07 	vmul.f64	d7, d6, d7
 80063e2:	ed9f 6b63 	vldr	d6, [pc, #396]	; 8006570 <SetPerfilTimers+0x278>
 80063e6:	ee27 6b06 	vmul.f64	d6, d7, d6
 80063ea:	ed9f 5b63 	vldr	d5, [pc, #396]	; 8006578 <SetPerfilTimers+0x280>
 80063ee:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80063f2:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80063f6:	ee37 7b46 	vsub.f64	d7, d7, d6
 80063fa:	4b66      	ldr	r3, [pc, #408]	; (8006594 <SetPerfilTimers+0x29c>)
 80063fc:	ed83 7b00 	vstr	d7, [r3]
		periodoM[1] = (((FCL * 60.00) / ((double)rpm2 * ((double)(TIM13->PSC) + 1.00) * STEPREV)) - 1.00);
 8006400:	4b65      	ldr	r3, [pc, #404]	; (8006598 <SetPerfilTimers+0x2a0>)
 8006402:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006404:	ee07 3a90 	vmov	s15, r3
 8006408:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 800640c:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006410:	ee37 6b06 	vadd.f64	d6, d7, d6
 8006414:	4b5b      	ldr	r3, [pc, #364]	; (8006584 <SetPerfilTimers+0x28c>)
 8006416:	ed93 7b00 	vldr	d7, [r3]
 800641a:	ee26 7b07 	vmul.f64	d7, d6, d7
 800641e:	ed9f 6b54 	vldr	d6, [pc, #336]	; 8006570 <SetPerfilTimers+0x278>
 8006422:	ee27 6b06 	vmul.f64	d6, d7, d6
 8006426:	ed9f 5b54 	vldr	d5, [pc, #336]	; 8006578 <SetPerfilTimers+0x280>
 800642a:	ee85 7b06 	vdiv.f64	d7, d5, d6
 800642e:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006432:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006436:	4b57      	ldr	r3, [pc, #348]	; (8006594 <SetPerfilTimers+0x29c>)
 8006438:	ed83 7b02 	vstr	d7, [r3, #8]
		periodoM[2] = (((FCL * 60.00) / ((double)rpm3 * ((double)(TIM14->PSC) + 1.00) * STEPREV)) - 1.00);
 800643c:	4b57      	ldr	r3, [pc, #348]	; (800659c <SetPerfilTimers+0x2a4>)
 800643e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006440:	ee07 3a90 	vmov	s15, r3
 8006444:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8006448:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 800644c:	ee37 6b06 	vadd.f64	d6, d7, d6
 8006450:	4b4d      	ldr	r3, [pc, #308]	; (8006588 <SetPerfilTimers+0x290>)
 8006452:	ed93 7b00 	vldr	d7, [r3]
 8006456:	ee26 7b07 	vmul.f64	d7, d6, d7
 800645a:	ed9f 6b45 	vldr	d6, [pc, #276]	; 8006570 <SetPerfilTimers+0x278>
 800645e:	ee27 6b06 	vmul.f64	d6, d7, d6
 8006462:	ed9f 5b45 	vldr	d5, [pc, #276]	; 8006578 <SetPerfilTimers+0x280>
 8006466:	ee85 7b06 	vdiv.f64	d7, d5, d6
 800646a:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 800646e:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006472:	4b48      	ldr	r3, [pc, #288]	; (8006594 <SetPerfilTimers+0x29c>)
 8006474:	ed83 7b04 	vstr	d7, [r3, #16]


		// Calculo el error por casteo a int, y cuando supero la unidad, lo compenzo --------------
		for (int i = 0; i < 3; ++i) {
 8006478:	2300      	movs	r3, #0
 800647a:	61fb      	str	r3, [r7, #28]
 800647c:	e0ad      	b.n	80065da <SetPerfilTimers+0x2e2>
			ErrorPeriodo[i] = periodoM[i] - (double) ((int32_t) periodoM[i]);
 800647e:	4a45      	ldr	r2, [pc, #276]	; (8006594 <SetPerfilTimers+0x29c>)
 8006480:	69fb      	ldr	r3, [r7, #28]
 8006482:	00db      	lsls	r3, r3, #3
 8006484:	4413      	add	r3, r2
 8006486:	ed93 6b00 	vldr	d6, [r3]
 800648a:	4a42      	ldr	r2, [pc, #264]	; (8006594 <SetPerfilTimers+0x29c>)
 800648c:	69fb      	ldr	r3, [r7, #28]
 800648e:	00db      	lsls	r3, r3, #3
 8006490:	4413      	add	r3, r2
 8006492:	ed93 7b00 	vldr	d7, [r3]
 8006496:	eefd 7bc7 	vcvt.s32.f64	s15, d7
 800649a:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 800649e:	ee36 7b47 	vsub.f64	d7, d6, d7
 80064a2:	4a3f      	ldr	r2, [pc, #252]	; (80065a0 <SetPerfilTimers+0x2a8>)
 80064a4:	69fb      	ldr	r3, [r7, #28]
 80064a6:	00db      	lsls	r3, r3, #3
 80064a8:	4413      	add	r3, r2
 80064aa:	ed83 7b00 	vstr	d7, [r3]
			ErrorAcumuladoPeriodo[i] = ErrorAcumuladoPeriodo[i] + ErrorPeriodo[i];
 80064ae:	4a3d      	ldr	r2, [pc, #244]	; (80065a4 <SetPerfilTimers+0x2ac>)
 80064b0:	69fb      	ldr	r3, [r7, #28]
 80064b2:	00db      	lsls	r3, r3, #3
 80064b4:	4413      	add	r3, r2
 80064b6:	ed93 6b00 	vldr	d6, [r3]
 80064ba:	4a39      	ldr	r2, [pc, #228]	; (80065a0 <SetPerfilTimers+0x2a8>)
 80064bc:	69fb      	ldr	r3, [r7, #28]
 80064be:	00db      	lsls	r3, r3, #3
 80064c0:	4413      	add	r3, r2
 80064c2:	ed93 7b00 	vldr	d7, [r3]
 80064c6:	ee36 7b07 	vadd.f64	d7, d6, d7
 80064ca:	4a36      	ldr	r2, [pc, #216]	; (80065a4 <SetPerfilTimers+0x2ac>)
 80064cc:	69fb      	ldr	r3, [r7, #28]
 80064ce:	00db      	lsls	r3, r3, #3
 80064d0:	4413      	add	r3, r2
 80064d2:	ed83 7b00 	vstr	d7, [r3]
			if (ErrorAcumuladoPeriodo[i] > 1) {
 80064d6:	4a33      	ldr	r2, [pc, #204]	; (80065a4 <SetPerfilTimers+0x2ac>)
 80064d8:	69fb      	ldr	r3, [r7, #28]
 80064da:	00db      	lsls	r3, r3, #3
 80064dc:	4413      	add	r3, r2
 80064de:	ed93 7b00 	vldr	d7, [r3]
 80064e2:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80064e6:	eeb4 7bc6 	vcmpe.f64	d7, d6
 80064ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80064ee:	dd1f      	ble.n	8006530 <SetPerfilTimers+0x238>
				periodoM[i] = periodoM[i] + 1;
 80064f0:	4a28      	ldr	r2, [pc, #160]	; (8006594 <SetPerfilTimers+0x29c>)
 80064f2:	69fb      	ldr	r3, [r7, #28]
 80064f4:	00db      	lsls	r3, r3, #3
 80064f6:	4413      	add	r3, r2
 80064f8:	ed93 7b00 	vldr	d7, [r3]
 80064fc:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006500:	ee37 7b06 	vadd.f64	d7, d7, d6
 8006504:	4a23      	ldr	r2, [pc, #140]	; (8006594 <SetPerfilTimers+0x29c>)
 8006506:	69fb      	ldr	r3, [r7, #28]
 8006508:	00db      	lsls	r3, r3, #3
 800650a:	4413      	add	r3, r2
 800650c:	ed83 7b00 	vstr	d7, [r3]
				ErrorAcumuladoPeriodo[i] = ErrorAcumuladoPeriodo[i] - 1;
 8006510:	4a24      	ldr	r2, [pc, #144]	; (80065a4 <SetPerfilTimers+0x2ac>)
 8006512:	69fb      	ldr	r3, [r7, #28]
 8006514:	00db      	lsls	r3, r3, #3
 8006516:	4413      	add	r3, r2
 8006518:	ed93 7b00 	vldr	d7, [r3]
 800651c:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006520:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006524:	4a1f      	ldr	r2, [pc, #124]	; (80065a4 <SetPerfilTimers+0x2ac>)
 8006526:	69fb      	ldr	r3, [r7, #28]
 8006528:	00db      	lsls	r3, r3, #3
 800652a:	4413      	add	r3, r2
 800652c:	ed83 7b00 	vstr	d7, [r3]
			}
			if (periodoM[i] < 2) {
 8006530:	4a18      	ldr	r2, [pc, #96]	; (8006594 <SetPerfilTimers+0x29c>)
 8006532:	69fb      	ldr	r3, [r7, #28]
 8006534:	00db      	lsls	r3, r3, #3
 8006536:	4413      	add	r3, r2
 8006538:	ed93 7b00 	vldr	d7, [r3]
 800653c:	eeb0 6b00 	vmov.f64	d6, #0	; 0x40000000  2.0
 8006540:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8006544:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006548:	d52e      	bpl.n	80065a8 <SetPerfilTimers+0x2b0>
				periodoM[i] = 0; // velocidad lineal de 10.000mm/s !!!
 800654a:	4a12      	ldr	r2, [pc, #72]	; (8006594 <SetPerfilTimers+0x29c>)
 800654c:	69fb      	ldr	r3, [r7, #28]
 800654e:	00db      	lsls	r3, r3, #3
 8006550:	18d1      	adds	r1, r2, r3
 8006552:	f04f 0200 	mov.w	r2, #0
 8006556:	f04f 0300 	mov.w	r3, #0
 800655a:	e9c1 2300 	strd	r2, r3, [r1]
 800655e:	e039      	b.n	80065d4 <SetPerfilTimers+0x2dc>
 8006560:	66ed2a99 	.word	0x66ed2a99
 8006564:	4023193d 	.word	0x4023193d
 8006568:	9999999a 	.word	0x9999999a
 800656c:	3fb99999 	.word	0x3fb99999
 8006570:	00000000 	.word	0x00000000
 8006574:	40bf4000 	.word	0x40bf4000
 8006578:	00000000 	.word	0x00000000
 800657c:	41ec9c38 	.word	0x41ec9c38
 8006580:	240007a8 	.word	0x240007a8
 8006584:	240007b0 	.word	0x240007b0
 8006588:	240007b8 	.word	0x240007b8
 800658c:	3ff00000 	.word	0x3ff00000
 8006590:	40001800 	.word	0x40001800
 8006594:	24000778 	.word	0x24000778
 8006598:	40001c00 	.word	0x40001c00
 800659c:	40002000 	.word	0x40002000
 80065a0:	240007c0 	.word	0x240007c0
 80065a4:	240007d8 	.word	0x240007d8
			}

			else if (periodoM[i] > pow(2, 16)) { 		// desborde de timer 32 bits
 80065a8:	4a99      	ldr	r2, [pc, #612]	; (8006810 <SetPerfilTimers+0x518>)
 80065aa:	69fb      	ldr	r3, [r7, #28]
 80065ac:	00db      	lsls	r3, r3, #3
 80065ae:	4413      	add	r3, r2
 80065b0:	ed93 7b00 	vldr	d7, [r3]
 80065b4:	ed9f 6b90 	vldr	d6, [pc, #576]	; 80067f8 <SetPerfilTimers+0x500>
 80065b8:	eeb4 7bc6 	vcmpe.f64	d7, d6
 80065bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80065c0:	dd08      	ble.n	80065d4 <SetPerfilTimers+0x2dc>
				periodoM[i] = pow(2, 16);
 80065c2:	4a93      	ldr	r2, [pc, #588]	; (8006810 <SetPerfilTimers+0x518>)
 80065c4:	69fb      	ldr	r3, [r7, #28]
 80065c6:	00db      	lsls	r3, r3, #3
 80065c8:	18d1      	adds	r1, r2, r3
 80065ca:	f04f 0200 	mov.w	r2, #0
 80065ce:	4b91      	ldr	r3, [pc, #580]	; (8006814 <SetPerfilTimers+0x51c>)
 80065d0:	e9c1 2300 	strd	r2, r3, [r1]
		for (int i = 0; i < 3; ++i) {
 80065d4:	69fb      	ldr	r3, [r7, #28]
 80065d6:	3301      	adds	r3, #1
 80065d8:	61fb      	str	r3, [r7, #28]
 80065da:	69fb      	ldr	r3, [r7, #28]
 80065dc:	2b02      	cmp	r3, #2
 80065de:	f77f af4e 	ble.w	800647e <SetPerfilTimers+0x186>
			}
		}

			periodoM[0]=(uint32_t)(((FCL * 60.0) / (rpm1 * ((double)(TIM12->PSC) + 1.0) * STEPREV)) - 1.0);
 80065e2:	4b8d      	ldr	r3, [pc, #564]	; (8006818 <SetPerfilTimers+0x520>)
 80065e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80065e6:	ee07 3a90 	vmov	s15, r3
 80065ea:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80065ee:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80065f2:	ee37 6b06 	vadd.f64	d6, d7, d6
 80065f6:	4b89      	ldr	r3, [pc, #548]	; (800681c <SetPerfilTimers+0x524>)
 80065f8:	ed93 7b00 	vldr	d7, [r3]
 80065fc:	ee26 7b07 	vmul.f64	d7, d6, d7
 8006600:	ed9f 6b7f 	vldr	d6, [pc, #508]	; 8006800 <SetPerfilTimers+0x508>
 8006604:	ee27 6b06 	vmul.f64	d6, d7, d6
 8006608:	ed9f 5b7f 	vldr	d5, [pc, #508]	; 8006808 <SetPerfilTimers+0x510>
 800660c:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006610:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006614:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006618:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800661c:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8006620:	4b7b      	ldr	r3, [pc, #492]	; (8006810 <SetPerfilTimers+0x518>)
 8006622:	ed83 7b00 	vstr	d7, [r3]
			periodoM[1]=(uint32_t)(((FCL * 60.0) / (rpm2 * ((double)(TIM13->PSC) + 1.0) * STEPREV)) - 1.0);
 8006626:	4b7e      	ldr	r3, [pc, #504]	; (8006820 <SetPerfilTimers+0x528>)
 8006628:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800662a:	ee07 3a90 	vmov	s15, r3
 800662e:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8006632:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006636:	ee37 6b06 	vadd.f64	d6, d7, d6
 800663a:	4b7a      	ldr	r3, [pc, #488]	; (8006824 <SetPerfilTimers+0x52c>)
 800663c:	ed93 7b00 	vldr	d7, [r3]
 8006640:	ee26 7b07 	vmul.f64	d7, d6, d7
 8006644:	ed9f 6b6e 	vldr	d6, [pc, #440]	; 8006800 <SetPerfilTimers+0x508>
 8006648:	ee27 6b06 	vmul.f64	d6, d7, d6
 800664c:	ed9f 5b6e 	vldr	d5, [pc, #440]	; 8006808 <SetPerfilTimers+0x510>
 8006650:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006654:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006658:	ee37 7b46 	vsub.f64	d7, d7, d6
 800665c:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8006660:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8006664:	4b6a      	ldr	r3, [pc, #424]	; (8006810 <SetPerfilTimers+0x518>)
 8006666:	ed83 7b02 	vstr	d7, [r3, #8]
			periodoM[2]=(uint32_t)(((FCL * 60.0) / (rpm3 * ((double)(TIM14->PSC) + 1.0) * STEPREV)) - 1.0);
 800666a:	4b6f      	ldr	r3, [pc, #444]	; (8006828 <SetPerfilTimers+0x530>)
 800666c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800666e:	ee07 3a90 	vmov	s15, r3
 8006672:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 8006676:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 800667a:	ee37 6b06 	vadd.f64	d6, d7, d6
 800667e:	4b6b      	ldr	r3, [pc, #428]	; (800682c <SetPerfilTimers+0x534>)
 8006680:	ed93 7b00 	vldr	d7, [r3]
 8006684:	ee26 7b07 	vmul.f64	d7, d6, d7
 8006688:	ed9f 6b5d 	vldr	d6, [pc, #372]	; 8006800 <SetPerfilTimers+0x508>
 800668c:	ee27 6b06 	vmul.f64	d6, d7, d6
 8006690:	ed9f 5b5d 	vldr	d5, [pc, #372]	; 8006808 <SetPerfilTimers+0x510>
 8006694:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8006698:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 800669c:	ee37 7b46 	vsub.f64	d7, d7, d6
 80066a0:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80066a4:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 80066a8:	4b59      	ldr	r3, [pc, #356]	; (8006810 <SetPerfilTimers+0x518>)
 80066aa:	ed83 7b04 	vstr	d7, [r3, #16]


			if (TIM12->CNT > periodoM[0]) {
 80066ae:	4b5a      	ldr	r3, [pc, #360]	; (8006818 <SetPerfilTimers+0x520>)
 80066b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80066b2:	ee07 3a90 	vmov	s15, r3
 80066b6:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 80066ba:	4b55      	ldr	r3, [pc, #340]	; (8006810 <SetPerfilTimers+0x518>)
 80066bc:	ed93 7b00 	vldr	d7, [r3]
 80066c0:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80066c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80066c8:	dd0c      	ble.n	80066e4 <SetPerfilTimers+0x3ec>
						TIM12->CNT = periodoM[0] - 1;// Reinicio clock solo si hace falta y a un valor cercano a la interrupcion, para que no haga ese paso de nuevo
 80066ca:	4b51      	ldr	r3, [pc, #324]	; (8006810 <SetPerfilTimers+0x518>)
 80066cc:	ed93 7b00 	vldr	d7, [r3]
 80066d0:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 80066d4:	ee37 7b46 	vsub.f64	d7, d7, d6
 80066d8:	4b4f      	ldr	r3, [pc, #316]	; (8006818 <SetPerfilTimers+0x520>)
 80066da:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80066de:	ee17 2a90 	vmov	r2, s15
 80066e2:	625a      	str	r2, [r3, #36]	; 0x24
			}
			if (TIM13->CNT > periodoM[1]) {
 80066e4:	4b4e      	ldr	r3, [pc, #312]	; (8006820 <SetPerfilTimers+0x528>)
 80066e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80066e8:	ee07 3a90 	vmov	s15, r3
 80066ec:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 80066f0:	4b47      	ldr	r3, [pc, #284]	; (8006810 <SetPerfilTimers+0x518>)
 80066f2:	ed93 7b02 	vldr	d7, [r3, #8]
 80066f6:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80066fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80066fe:	dd0c      	ble.n	800671a <SetPerfilTimers+0x422>
						TIM13->CNT = periodoM[1] - 1;// Reinicio clock solo si hace falta y a un valor cercano a la interrupcion, para que no haga ese paso de nuevo
 8006700:	4b43      	ldr	r3, [pc, #268]	; (8006810 <SetPerfilTimers+0x518>)
 8006702:	ed93 7b02 	vldr	d7, [r3, #8]
 8006706:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 800670a:	ee37 7b46 	vsub.f64	d7, d7, d6
 800670e:	4b44      	ldr	r3, [pc, #272]	; (8006820 <SetPerfilTimers+0x528>)
 8006710:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 8006714:	ee17 2a90 	vmov	r2, s15
 8006718:	625a      	str	r2, [r3, #36]	; 0x24
			}
			if (TIM14->CNT > periodoM[2]) {
 800671a:	4b43      	ldr	r3, [pc, #268]	; (8006828 <SetPerfilTimers+0x530>)
 800671c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800671e:	ee07 3a90 	vmov	s15, r3
 8006722:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 8006726:	4b3a      	ldr	r3, [pc, #232]	; (8006810 <SetPerfilTimers+0x518>)
 8006728:	ed93 7b04 	vldr	d7, [r3, #16]
 800672c:	eeb4 6bc7 	vcmpe.f64	d6, d7
 8006730:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006734:	dd0c      	ble.n	8006750 <SetPerfilTimers+0x458>
						TIM14->CNT = periodoM[2] - 1;// Reinicio clock solo si hace falta y a un valor cercano a la interrupcion, para que no haga ese paso de nuevo
 8006736:	4b36      	ldr	r3, [pc, #216]	; (8006810 <SetPerfilTimers+0x518>)
 8006738:	ed93 7b04 	vldr	d7, [r3, #16]
 800673c:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8006740:	ee37 7b46 	vsub.f64	d7, d7, d6
 8006744:	4b38      	ldr	r3, [pc, #224]	; (8006828 <SetPerfilTimers+0x530>)
 8006746:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800674a:	ee17 2a90 	vmov	r2, s15
 800674e:	625a      	str	r2, [r3, #36]	; 0x24
			}

			TIM12->ARR =periodoM[0];
 8006750:	4b2f      	ldr	r3, [pc, #188]	; (8006810 <SetPerfilTimers+0x518>)
 8006752:	ed93 7b00 	vldr	d7, [r3]
 8006756:	4b30      	ldr	r3, [pc, #192]	; (8006818 <SetPerfilTimers+0x520>)
 8006758:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800675c:	ee17 2a90 	vmov	r2, s15
 8006760:	62da      	str	r2, [r3, #44]	; 0x2c
			TIM12->CCR1 = (uint32_t)((double)(TIM12->ARR) / 2.0);
 8006762:	4b2d      	ldr	r3, [pc, #180]	; (8006818 <SetPerfilTimers+0x520>)
 8006764:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006766:	ee07 3a90 	vmov	s15, r3
 800676a:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 800676e:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 8006772:	ee86 7b05 	vdiv.f64	d7, d6, d5
 8006776:	4b28      	ldr	r3, [pc, #160]	; (8006818 <SetPerfilTimers+0x520>)
 8006778:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800677c:	ee17 2a90 	vmov	r2, s15
 8006780:	635a      	str	r2, [r3, #52]	; 0x34
			TIM13->ARR =periodoM[1];
 8006782:	4b23      	ldr	r3, [pc, #140]	; (8006810 <SetPerfilTimers+0x518>)
 8006784:	ed93 7b02 	vldr	d7, [r3, #8]
 8006788:	4b25      	ldr	r3, [pc, #148]	; (8006820 <SetPerfilTimers+0x528>)
 800678a:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 800678e:	ee17 2a90 	vmov	r2, s15
 8006792:	62da      	str	r2, [r3, #44]	; 0x2c
			TIM13->CCR1 = (uint32_t)((double)(TIM13->ARR) / 2.0);
 8006794:	4b22      	ldr	r3, [pc, #136]	; (8006820 <SetPerfilTimers+0x528>)
 8006796:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006798:	ee07 3a90 	vmov	s15, r3
 800679c:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 80067a0:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 80067a4:	ee86 7b05 	vdiv.f64	d7, d6, d5
 80067a8:	4b1d      	ldr	r3, [pc, #116]	; (8006820 <SetPerfilTimers+0x528>)
 80067aa:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80067ae:	ee17 2a90 	vmov	r2, s15
 80067b2:	635a      	str	r2, [r3, #52]	; 0x34
			TIM14->ARR =periodoM[2];
 80067b4:	4b16      	ldr	r3, [pc, #88]	; (8006810 <SetPerfilTimers+0x518>)
 80067b6:	ed93 7b04 	vldr	d7, [r3, #16]
 80067ba:	4b1b      	ldr	r3, [pc, #108]	; (8006828 <SetPerfilTimers+0x530>)
 80067bc:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80067c0:	ee17 2a90 	vmov	r2, s15
 80067c4:	62da      	str	r2, [r3, #44]	; 0x2c
			TIM14->CCR1 = (uint32_t)((double)(TIM14->ARR) / 2.0);
 80067c6:	4b18      	ldr	r3, [pc, #96]	; (8006828 <SetPerfilTimers+0x530>)
 80067c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80067ca:	ee07 3a90 	vmov	s15, r3
 80067ce:	eeb8 6b67 	vcvt.f64.u32	d6, s15
 80067d2:	eeb0 5b00 	vmov.f64	d5, #0	; 0x40000000  2.0
 80067d6:	ee86 7b05 	vdiv.f64	d7, d6, d5
 80067da:	4b13      	ldr	r3, [pc, #76]	; (8006828 <SetPerfilTimers+0x530>)
 80067dc:	eefc 7bc7 	vcvt.u32.f64	s15, d7
 80067e0:	ee17 2a90 	vmov	r2, s15
 80067e4:	635a      	str	r2, [r3, #52]	; 0x34
			TIM13->CNT = Periodo[1] - 1;// Reinicio clock solo si hace falta y a un valor cercano a la interrupcion, para que no haga ese paso de nuevo
		}
		if (TIM14->CNT > Periodo[2]) {
			TIM14->CNT = Periodo[2] - 1;// Reinicio clock solo si hace falta y a un valor cercano a la interrupcion, para que no haga ese paso de nuevo
		}*/
}
 80067e6:	bf00      	nop
 80067e8:	3724      	adds	r7, #36	; 0x24
 80067ea:	46bd      	mov	sp, r7
 80067ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067f0:	4770      	bx	lr
 80067f2:	bf00      	nop
 80067f4:	f3af 8000 	nop.w
 80067f8:	00000000 	.word	0x00000000
 80067fc:	40f00000 	.word	0x40f00000
 8006800:	00000000 	.word	0x00000000
 8006804:	40bf4000 	.word	0x40bf4000
 8006808:	00000000 	.word	0x00000000
 800680c:	41ec9c38 	.word	0x41ec9c38
 8006810:	24000778 	.word	0x24000778
 8006814:	40f00000 	.word	0x40f00000
 8006818:	40001800 	.word	0x40001800
 800681c:	240007a8 	.word	0x240007a8
 8006820:	40001c00 	.word	0x40001c00
 8006824:	240007b0 	.word	0x240007b0
 8006828:	40002000 	.word	0x40002000
 800682c:	240007b8 	.word	0x240007b8

08006830 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart3;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8006830:	b580      	push	{r7, lr}
 8006832:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8006834:	4b22      	ldr	r3, [pc, #136]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 8006836:	4a23      	ldr	r2, [pc, #140]	; (80068c4 <MX_USART1_UART_Init+0x94>)
 8006838:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 9600;
 800683a:	4b21      	ldr	r3, [pc, #132]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 800683c:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8006840:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8006842:	4b1f      	ldr	r3, [pc, #124]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 8006844:	2200      	movs	r2, #0
 8006846:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8006848:	4b1d      	ldr	r3, [pc, #116]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 800684a:	2200      	movs	r2, #0
 800684c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 800684e:	4b1c      	ldr	r3, [pc, #112]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 8006850:	2200      	movs	r2, #0
 8006852:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8006854:	4b1a      	ldr	r3, [pc, #104]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 8006856:	220c      	movs	r2, #12
 8006858:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800685a:	4b19      	ldr	r3, [pc, #100]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 800685c:	2200      	movs	r2, #0
 800685e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8006860:	4b17      	ldr	r3, [pc, #92]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 8006862:	2200      	movs	r2, #0
 8006864:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8006866:	4b16      	ldr	r3, [pc, #88]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 8006868:	2200      	movs	r2, #0
 800686a:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 800686c:	4b14      	ldr	r3, [pc, #80]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 800686e:	2200      	movs	r2, #0
 8006870:	625a      	str	r2, [r3, #36]	; 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8006872:	4b13      	ldr	r3, [pc, #76]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 8006874:	2200      	movs	r2, #0
 8006876:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8006878:	4811      	ldr	r0, [pc, #68]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 800687a:	f005 fecf 	bl	800c61c <HAL_UART_Init>
 800687e:	4603      	mov	r3, r0
 8006880:	2b00      	cmp	r3, #0
 8006882:	d001      	beq.n	8006888 <MX_USART1_UART_Init+0x58>
  {
    Error_Handler();
 8006884:	f7fd f862 	bl	800394c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8006888:	2100      	movs	r1, #0
 800688a:	480d      	ldr	r0, [pc, #52]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 800688c:	f008 f959 	bl	800eb42 <HAL_UARTEx_SetTxFifoThreshold>
 8006890:	4603      	mov	r3, r0
 8006892:	2b00      	cmp	r3, #0
 8006894:	d001      	beq.n	800689a <MX_USART1_UART_Init+0x6a>
  {
    Error_Handler();
 8006896:	f7fd f859 	bl	800394c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 800689a:	2100      	movs	r1, #0
 800689c:	4808      	ldr	r0, [pc, #32]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 800689e:	f008 f98e 	bl	800ebbe <HAL_UARTEx_SetRxFifoThreshold>
 80068a2:	4603      	mov	r3, r0
 80068a4:	2b00      	cmp	r3, #0
 80068a6:	d001      	beq.n	80068ac <MX_USART1_UART_Init+0x7c>
  {
    Error_Handler();
 80068a8:	f7fd f850 	bl	800394c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 80068ac:	4804      	ldr	r0, [pc, #16]	; (80068c0 <MX_USART1_UART_Init+0x90>)
 80068ae:	f008 f90f 	bl	800ead0 <HAL_UARTEx_DisableFifoMode>
 80068b2:	4603      	mov	r3, r0
 80068b4:	2b00      	cmp	r3, #0
 80068b6:	d001      	beq.n	80068bc <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
 80068b8:	f7fd f848 	bl	800394c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80068bc:	bf00      	nop
 80068be:	bd80      	pop	{r7, pc}
 80068c0:	24000adc 	.word	0x24000adc
 80068c4:	40011000 	.word	0x40011000

080068c8 <MX_USART2_UART_Init>:
/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 80068c8:	b580      	push	{r7, lr}
 80068ca:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80068cc:	4b22      	ldr	r3, [pc, #136]	; (8006958 <MX_USART2_UART_Init+0x90>)
 80068ce:	4a23      	ldr	r2, [pc, #140]	; (800695c <MX_USART2_UART_Init+0x94>)
 80068d0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 80068d2:	4b21      	ldr	r3, [pc, #132]	; (8006958 <MX_USART2_UART_Init+0x90>)
 80068d4:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80068d8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80068da:	4b1f      	ldr	r3, [pc, #124]	; (8006958 <MX_USART2_UART_Init+0x90>)
 80068dc:	2200      	movs	r2, #0
 80068de:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80068e0:	4b1d      	ldr	r3, [pc, #116]	; (8006958 <MX_USART2_UART_Init+0x90>)
 80068e2:	2200      	movs	r2, #0
 80068e4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80068e6:	4b1c      	ldr	r3, [pc, #112]	; (8006958 <MX_USART2_UART_Init+0x90>)
 80068e8:	2200      	movs	r2, #0
 80068ea:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80068ec:	4b1a      	ldr	r3, [pc, #104]	; (8006958 <MX_USART2_UART_Init+0x90>)
 80068ee:	220c      	movs	r2, #12
 80068f0:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80068f2:	4b19      	ldr	r3, [pc, #100]	; (8006958 <MX_USART2_UART_Init+0x90>)
 80068f4:	2200      	movs	r2, #0
 80068f6:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80068f8:	4b17      	ldr	r3, [pc, #92]	; (8006958 <MX_USART2_UART_Init+0x90>)
 80068fa:	2200      	movs	r2, #0
 80068fc:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80068fe:	4b16      	ldr	r3, [pc, #88]	; (8006958 <MX_USART2_UART_Init+0x90>)
 8006900:	2200      	movs	r2, #0
 8006902:	621a      	str	r2, [r3, #32]
  huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8006904:	4b14      	ldr	r3, [pc, #80]	; (8006958 <MX_USART2_UART_Init+0x90>)
 8006906:	2200      	movs	r2, #0
 8006908:	625a      	str	r2, [r3, #36]	; 0x24
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800690a:	4b13      	ldr	r3, [pc, #76]	; (8006958 <MX_USART2_UART_Init+0x90>)
 800690c:	2200      	movs	r2, #0
 800690e:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8006910:	4811      	ldr	r0, [pc, #68]	; (8006958 <MX_USART2_UART_Init+0x90>)
 8006912:	f005 fe83 	bl	800c61c <HAL_UART_Init>
 8006916:	4603      	mov	r3, r0
 8006918:	2b00      	cmp	r3, #0
 800691a:	d001      	beq.n	8006920 <MX_USART2_UART_Init+0x58>
  {
    Error_Handler();
 800691c:	f7fd f816 	bl	800394c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart2, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8006920:	2100      	movs	r1, #0
 8006922:	480d      	ldr	r0, [pc, #52]	; (8006958 <MX_USART2_UART_Init+0x90>)
 8006924:	f008 f90d 	bl	800eb42 <HAL_UARTEx_SetTxFifoThreshold>
 8006928:	4603      	mov	r3, r0
 800692a:	2b00      	cmp	r3, #0
 800692c:	d001      	beq.n	8006932 <MX_USART2_UART_Init+0x6a>
  {
    Error_Handler();
 800692e:	f7fd f80d 	bl	800394c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart2, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8006932:	2100      	movs	r1, #0
 8006934:	4808      	ldr	r0, [pc, #32]	; (8006958 <MX_USART2_UART_Init+0x90>)
 8006936:	f008 f942 	bl	800ebbe <HAL_UARTEx_SetRxFifoThreshold>
 800693a:	4603      	mov	r3, r0
 800693c:	2b00      	cmp	r3, #0
 800693e:	d001      	beq.n	8006944 <MX_USART2_UART_Init+0x7c>
  {
    Error_Handler();
 8006940:	f7fd f804 	bl	800394c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart2) != HAL_OK)
 8006944:	4804      	ldr	r0, [pc, #16]	; (8006958 <MX_USART2_UART_Init+0x90>)
 8006946:	f008 f8c3 	bl	800ead0 <HAL_UARTEx_DisableFifoMode>
 800694a:	4603      	mov	r3, r0
 800694c:	2b00      	cmp	r3, #0
 800694e:	d001      	beq.n	8006954 <MX_USART2_UART_Init+0x8c>
  {
    Error_Handler();
 8006950:	f7fc fffc 	bl	800394c <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8006954:	bf00      	nop
 8006956:	bd80      	pop	{r7, pc}
 8006958:	24000b6c 	.word	0x24000b6c
 800695c:	40004400 	.word	0x40004400

08006960 <MX_USART3_UART_Init>:
/* USART3 init function */

void MX_USART3_UART_Init(void)
{
 8006960:	b580      	push	{r7, lr}
 8006962:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8006964:	4b22      	ldr	r3, [pc, #136]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 8006966:	4a23      	ldr	r2, [pc, #140]	; (80069f4 <MX_USART3_UART_Init+0x94>)
 8006968:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 9600;
 800696a:	4b21      	ldr	r3, [pc, #132]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 800696c:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8006970:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8006972:	4b1f      	ldr	r3, [pc, #124]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 8006974:	2200      	movs	r2, #0
 8006976:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8006978:	4b1d      	ldr	r3, [pc, #116]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 800697a:	2200      	movs	r2, #0
 800697c:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 800697e:	4b1c      	ldr	r3, [pc, #112]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 8006980:	2200      	movs	r2, #0
 8006982:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8006984:	4b1a      	ldr	r3, [pc, #104]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 8006986:	220c      	movs	r2, #12
 8006988:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800698a:	4b19      	ldr	r3, [pc, #100]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 800698c:	2200      	movs	r2, #0
 800698e:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8006990:	4b17      	ldr	r3, [pc, #92]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 8006992:	2200      	movs	r2, #0
 8006994:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8006996:	4b16      	ldr	r3, [pc, #88]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 8006998:	2200      	movs	r2, #0
 800699a:	621a      	str	r2, [r3, #32]
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 800699c:	4b14      	ldr	r3, [pc, #80]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 800699e:	2200      	movs	r2, #0
 80069a0:	625a      	str	r2, [r3, #36]	; 0x24
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80069a2:	4b13      	ldr	r3, [pc, #76]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 80069a4:	2200      	movs	r2, #0
 80069a6:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80069a8:	4811      	ldr	r0, [pc, #68]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 80069aa:	f005 fe37 	bl	800c61c <HAL_UART_Init>
 80069ae:	4603      	mov	r3, r0
 80069b0:	2b00      	cmp	r3, #0
 80069b2:	d001      	beq.n	80069b8 <MX_USART3_UART_Init+0x58>
  {
    Error_Handler();
 80069b4:	f7fc ffca 	bl	800394c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80069b8:	2100      	movs	r1, #0
 80069ba:	480d      	ldr	r0, [pc, #52]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 80069bc:	f008 f8c1 	bl	800eb42 <HAL_UARTEx_SetTxFifoThreshold>
 80069c0:	4603      	mov	r3, r0
 80069c2:	2b00      	cmp	r3, #0
 80069c4:	d001      	beq.n	80069ca <MX_USART3_UART_Init+0x6a>
  {
    Error_Handler();
 80069c6:	f7fc ffc1 	bl	800394c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 80069ca:	2100      	movs	r1, #0
 80069cc:	4808      	ldr	r0, [pc, #32]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 80069ce:	f008 f8f6 	bl	800ebbe <HAL_UARTEx_SetRxFifoThreshold>
 80069d2:	4603      	mov	r3, r0
 80069d4:	2b00      	cmp	r3, #0
 80069d6:	d001      	beq.n	80069dc <MX_USART3_UART_Init+0x7c>
  {
    Error_Handler();
 80069d8:	f7fc ffb8 	bl	800394c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
 80069dc:	4804      	ldr	r0, [pc, #16]	; (80069f0 <MX_USART3_UART_Init+0x90>)
 80069de:	f008 f877 	bl	800ead0 <HAL_UARTEx_DisableFifoMode>
 80069e2:	4603      	mov	r3, r0
 80069e4:	2b00      	cmp	r3, #0
 80069e6:	d001      	beq.n	80069ec <MX_USART3_UART_Init+0x8c>
  {
    Error_Handler();
 80069e8:	f7fc ffb0 	bl	800394c <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 80069ec:	bf00      	nop
 80069ee:	bd80      	pop	{r7, pc}
 80069f0:	24000bfc 	.word	0x24000bfc
 80069f4:	40004800 	.word	0x40004800

080069f8 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80069f8:	b580      	push	{r7, lr}
 80069fa:	b0be      	sub	sp, #248	; 0xf8
 80069fc:	af00      	add	r7, sp, #0
 80069fe:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8006a00:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8006a04:	2200      	movs	r2, #0
 8006a06:	601a      	str	r2, [r3, #0]
 8006a08:	605a      	str	r2, [r3, #4]
 8006a0a:	609a      	str	r2, [r3, #8]
 8006a0c:	60da      	str	r2, [r3, #12]
 8006a0e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8006a10:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8006a14:	22bc      	movs	r2, #188	; 0xbc
 8006a16:	2100      	movs	r1, #0
 8006a18:	4618      	mov	r0, r3
 8006a1a:	f008 f995 	bl	800ed48 <memset>
  if(uartHandle->Instance==USART1)
 8006a1e:	687b      	ldr	r3, [r7, #4]
 8006a20:	681b      	ldr	r3, [r3, #0]
 8006a22:	4a84      	ldr	r2, [pc, #528]	; (8006c34 <HAL_UART_MspInit+0x23c>)
 8006a24:	4293      	cmp	r3, r2
 8006a26:	d168      	bne.n	8006afa <HAL_UART_MspInit+0x102>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8006a28:	2301      	movs	r3, #1
 8006a2a:	62bb      	str	r3, [r7, #40]	; 0x28
    PeriphClkInitStruct.Usart16ClockSelection = RCC_USART16CLKSOURCE_D2PCLK2;
 8006a2c:	2300      	movs	r3, #0
 8006a2e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8006a32:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8006a36:	4618      	mov	r0, r3
 8006a38:	f002 fa8c 	bl	8008f54 <HAL_RCCEx_PeriphCLKConfig>
 8006a3c:	4603      	mov	r3, r0
 8006a3e:	2b00      	cmp	r3, #0
 8006a40:	d001      	beq.n	8006a46 <HAL_UART_MspInit+0x4e>
    {
      Error_Handler();
 8006a42:	f7fc ff83 	bl	800394c <Error_Handler>
    }

    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8006a46:	4b7c      	ldr	r3, [pc, #496]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006a48:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8006a4c:	4a7a      	ldr	r2, [pc, #488]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006a4e:	f043 0310 	orr.w	r3, r3, #16
 8006a52:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 8006a56:	4b78      	ldr	r3, [pc, #480]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006a58:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8006a5c:	f003 0310 	and.w	r3, r3, #16
 8006a60:	627b      	str	r3, [r7, #36]	; 0x24
 8006a62:	6a7b      	ldr	r3, [r7, #36]	; 0x24

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8006a64:	4b74      	ldr	r3, [pc, #464]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006a66:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8006a6a:	4a73      	ldr	r2, [pc, #460]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006a6c:	f043 0302 	orr.w	r3, r3, #2
 8006a70:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8006a74:	4b70      	ldr	r3, [pc, #448]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006a76:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8006a7a:	f003 0302 	and.w	r3, r3, #2
 8006a7e:	623b      	str	r3, [r7, #32]
 8006a80:	6a3b      	ldr	r3, [r7, #32]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8006a82:	4b6d      	ldr	r3, [pc, #436]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006a84:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8006a88:	4a6b      	ldr	r2, [pc, #428]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006a8a:	f043 0301 	orr.w	r3, r3, #1
 8006a8e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8006a92:	4b69      	ldr	r3, [pc, #420]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006a94:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8006a98:	f003 0301 	and.w	r3, r3, #1
 8006a9c:	61fb      	str	r3, [r7, #28]
 8006a9e:	69fb      	ldr	r3, [r7, #28]
    /**USART1 GPIO Configuration
    PB15     ------> USART1_RX
    PA9     ------> USART1_TX
    */
    GPIO_InitStruct.Pin = Jetson_RX_Pin;
 8006aa0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8006aa4:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006aa8:	2302      	movs	r3, #2
 8006aaa:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006aae:	2300      	movs	r3, #0
 8006ab0:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006ab4:	2300      	movs	r3, #0
 8006ab6:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF4_USART1;
 8006aba:	2304      	movs	r3, #4
 8006abc:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(Jetson_RX_GPIO_Port, &GPIO_InitStruct);
 8006ac0:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8006ac4:	4619      	mov	r1, r3
 8006ac6:	485d      	ldr	r0, [pc, #372]	; (8006c3c <HAL_UART_MspInit+0x244>)
 8006ac8:	f001 f854 	bl	8007b74 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = Jetson_TX_Pin;
 8006acc:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006ad0:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006ad4:	2302      	movs	r3, #2
 8006ad6:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006ada:	2300      	movs	r3, #0
 8006adc:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006ae0:	2300      	movs	r3, #0
 8006ae2:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8006ae6:	2307      	movs	r3, #7
 8006ae8:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(Jetson_TX_GPIO_Port, &GPIO_InitStruct);
 8006aec:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8006af0:	4619      	mov	r1, r3
 8006af2:	4853      	ldr	r0, [pc, #332]	; (8006c40 <HAL_UART_MspInit+0x248>)
 8006af4:	f001 f83e 	bl	8007b74 <HAL_GPIO_Init>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }
}
 8006af8:	e097      	b.n	8006c2a <HAL_UART_MspInit+0x232>
  else if(uartHandle->Instance==USART2)
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	4a51      	ldr	r2, [pc, #324]	; (8006c44 <HAL_UART_MspInit+0x24c>)
 8006b00:	4293      	cmp	r3, r2
 8006b02:	d142      	bne.n	8006b8a <HAL_UART_MspInit+0x192>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8006b04:	2302      	movs	r3, #2
 8006b06:	62bb      	str	r3, [r7, #40]	; 0x28
    PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
 8006b08:	2300      	movs	r3, #0
 8006b0a:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8006b0e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8006b12:	4618      	mov	r0, r3
 8006b14:	f002 fa1e 	bl	8008f54 <HAL_RCCEx_PeriphCLKConfig>
 8006b18:	4603      	mov	r3, r0
 8006b1a:	2b00      	cmp	r3, #0
 8006b1c:	d001      	beq.n	8006b22 <HAL_UART_MspInit+0x12a>
      Error_Handler();
 8006b1e:	f7fc ff15 	bl	800394c <Error_Handler>
    __HAL_RCC_USART2_CLK_ENABLE();
 8006b22:	4b45      	ldr	r3, [pc, #276]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006b24:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8006b28:	4a43      	ldr	r2, [pc, #268]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006b2a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8006b2e:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8006b32:	4b41      	ldr	r3, [pc, #260]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006b34:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8006b38:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006b3c:	61bb      	str	r3, [r7, #24]
 8006b3e:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8006b40:	4b3d      	ldr	r3, [pc, #244]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006b42:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8006b46:	4a3c      	ldr	r2, [pc, #240]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006b48:	f043 0301 	orr.w	r3, r3, #1
 8006b4c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8006b50:	4b39      	ldr	r3, [pc, #228]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006b52:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8006b56:	f003 0301 	and.w	r3, r3, #1
 8006b5a:	617b      	str	r3, [r7, #20]
 8006b5c:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = NucleoF4_RX_Pin|NucleoF4_TX_Pin;
 8006b5e:	230c      	movs	r3, #12
 8006b60:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006b64:	2302      	movs	r3, #2
 8006b66:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006b6a:	2300      	movs	r3, #0
 8006b6c:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006b70:	2300      	movs	r3, #0
 8006b72:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8006b76:	2307      	movs	r3, #7
 8006b78:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006b7c:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8006b80:	4619      	mov	r1, r3
 8006b82:	482f      	ldr	r0, [pc, #188]	; (8006c40 <HAL_UART_MspInit+0x248>)
 8006b84:	f000 fff6 	bl	8007b74 <HAL_GPIO_Init>
}
 8006b88:	e04f      	b.n	8006c2a <HAL_UART_MspInit+0x232>
  else if(uartHandle->Instance==USART3)
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	681b      	ldr	r3, [r3, #0]
 8006b8e:	4a2e      	ldr	r2, [pc, #184]	; (8006c48 <HAL_UART_MspInit+0x250>)
 8006b90:	4293      	cmp	r3, r2
 8006b92:	d14a      	bne.n	8006c2a <HAL_UART_MspInit+0x232>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 8006b94:	2302      	movs	r3, #2
 8006b96:	62bb      	str	r3, [r7, #40]	; 0x28
    PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
 8006b98:	2300      	movs	r3, #0
 8006b9a:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8006b9e:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8006ba2:	4618      	mov	r0, r3
 8006ba4:	f002 f9d6 	bl	8008f54 <HAL_RCCEx_PeriphCLKConfig>
 8006ba8:	4603      	mov	r3, r0
 8006baa:	2b00      	cmp	r3, #0
 8006bac:	d001      	beq.n	8006bb2 <HAL_UART_MspInit+0x1ba>
      Error_Handler();
 8006bae:	f7fc fecd 	bl	800394c <Error_Handler>
    __HAL_RCC_USART3_CLK_ENABLE();
 8006bb2:	4b21      	ldr	r3, [pc, #132]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006bb4:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8006bb8:	4a1f      	ldr	r2, [pc, #124]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006bba:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006bbe:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8006bc2:	4b1d      	ldr	r3, [pc, #116]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006bc4:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8006bc8:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8006bcc:	613b      	str	r3, [r7, #16]
 8006bce:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8006bd0:	4b19      	ldr	r3, [pc, #100]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006bd2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8006bd6:	4a18      	ldr	r2, [pc, #96]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006bd8:	f043 0308 	orr.w	r3, r3, #8
 8006bdc:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8006be0:	4b15      	ldr	r3, [pc, #84]	; (8006c38 <HAL_UART_MspInit+0x240>)
 8006be2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8006be6:	f003 0308 	and.w	r3, r3, #8
 8006bea:	60fb      	str	r3, [r7, #12]
 8006bec:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = STLINK_TX_Pin|STLINK_RX_Pin;
 8006bee:	f44f 7340 	mov.w	r3, #768	; 0x300
 8006bf2:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8006bf6:	2302      	movs	r3, #2
 8006bf8:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006bfc:	2300      	movs	r3, #0
 8006bfe:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006c02:	2300      	movs	r3, #0
 8006c04:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8006c08:	2307      	movs	r3, #7
 8006c0a:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8006c0e:	f107 03e4 	add.w	r3, r7, #228	; 0xe4
 8006c12:	4619      	mov	r1, r3
 8006c14:	480d      	ldr	r0, [pc, #52]	; (8006c4c <HAL_UART_MspInit+0x254>)
 8006c16:	f000 ffad 	bl	8007b74 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART3_IRQn, 1, 1);
 8006c1a:	2201      	movs	r2, #1
 8006c1c:	2101      	movs	r1, #1
 8006c1e:	2027      	movs	r0, #39	; 0x27
 8006c20:	f000 fa01 	bl	8007026 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8006c24:	2027      	movs	r0, #39	; 0x27
 8006c26:	f000 fa18 	bl	800705a <HAL_NVIC_EnableIRQ>
}
 8006c2a:	bf00      	nop
 8006c2c:	37f8      	adds	r7, #248	; 0xf8
 8006c2e:	46bd      	mov	sp, r7
 8006c30:	bd80      	pop	{r7, pc}
 8006c32:	bf00      	nop
 8006c34:	40011000 	.word	0x40011000
 8006c38:	58024400 	.word	0x58024400
 8006c3c:	58020400 	.word	0x58020400
 8006c40:	58020000 	.word	0x58020000
 8006c44:	40004400 	.word	0x40004400
 8006c48:	40004800 	.word	0x40004800
 8006c4c:	58020c00 	.word	0x58020c00

08006c50 <Reset_Handler>:
 8006c50:	f8df d034 	ldr.w	sp, [pc, #52]	; 8006c88 <LoopFillZerobss+0x14>
 8006c54:	2100      	movs	r1, #0
 8006c56:	e003      	b.n	8006c60 <LoopCopyDataInit>

08006c58 <CopyDataInit>:
 8006c58:	4b0c      	ldr	r3, [pc, #48]	; (8006c8c <LoopFillZerobss+0x18>)
 8006c5a:	585b      	ldr	r3, [r3, r1]
 8006c5c:	5043      	str	r3, [r0, r1]
 8006c5e:	3104      	adds	r1, #4

08006c60 <LoopCopyDataInit>:
 8006c60:	480b      	ldr	r0, [pc, #44]	; (8006c90 <LoopFillZerobss+0x1c>)
 8006c62:	4b0c      	ldr	r3, [pc, #48]	; (8006c94 <LoopFillZerobss+0x20>)
 8006c64:	1842      	adds	r2, r0, r1
 8006c66:	429a      	cmp	r2, r3
 8006c68:	d3f6      	bcc.n	8006c58 <CopyDataInit>
 8006c6a:	4a0b      	ldr	r2, [pc, #44]	; (8006c98 <LoopFillZerobss+0x24>)
 8006c6c:	e002      	b.n	8006c74 <LoopFillZerobss>

08006c6e <FillZerobss>:
 8006c6e:	2300      	movs	r3, #0
 8006c70:	f842 3b04 	str.w	r3, [r2], #4

08006c74 <LoopFillZerobss>:
 8006c74:	4b09      	ldr	r3, [pc, #36]	; (8006c9c <LoopFillZerobss+0x28>)
 8006c76:	429a      	cmp	r2, r3
 8006c78:	d3f9      	bcc.n	8006c6e <FillZerobss>
 8006c7a:	f7fd fa1d 	bl	80040b8 <SystemInit>
 8006c7e:	f008 f831 	bl	800ece4 <__libc_init_array>
 8006c82:	f7fc fa2d 	bl	80030e0 <main>
 8006c86:	4770      	bx	lr
 8006c88:	24080000 	.word	0x24080000
 8006c8c:	08014040 	.word	0x08014040
 8006c90:	24000000 	.word	0x24000000
 8006c94:	240002d4 	.word	0x240002d4
 8006c98:	240002d8 	.word	0x240002d8
 8006c9c:	24000ca0 	.word	0x24000ca0

08006ca0 <ADC3_IRQHandler>:
 8006ca0:	e7fe      	b.n	8006ca0 <ADC3_IRQHandler>
	...

08006ca4 <HAL_Init>:
 8006ca4:	b580      	push	{r7, lr}
 8006ca6:	b082      	sub	sp, #8
 8006ca8:	af00      	add	r7, sp, #0
 8006caa:	2003      	movs	r0, #3
 8006cac:	f000 f9b0 	bl	8007010 <HAL_NVIC_SetPriorityGrouping>
 8006cb0:	f001 ff7a 	bl	8008ba8 <HAL_RCC_GetSysClockFreq>
 8006cb4:	4602      	mov	r2, r0
 8006cb6:	4b15      	ldr	r3, [pc, #84]	; (8006d0c <HAL_Init+0x68>)
 8006cb8:	699b      	ldr	r3, [r3, #24]
 8006cba:	0a1b      	lsrs	r3, r3, #8
 8006cbc:	f003 030f 	and.w	r3, r3, #15
 8006cc0:	4913      	ldr	r1, [pc, #76]	; (8006d10 <HAL_Init+0x6c>)
 8006cc2:	5ccb      	ldrb	r3, [r1, r3]
 8006cc4:	f003 031f 	and.w	r3, r3, #31
 8006cc8:	fa22 f303 	lsr.w	r3, r2, r3
 8006ccc:	607b      	str	r3, [r7, #4]
 8006cce:	4b0f      	ldr	r3, [pc, #60]	; (8006d0c <HAL_Init+0x68>)
 8006cd0:	699b      	ldr	r3, [r3, #24]
 8006cd2:	f003 030f 	and.w	r3, r3, #15
 8006cd6:	4a0e      	ldr	r2, [pc, #56]	; (8006d10 <HAL_Init+0x6c>)
 8006cd8:	5cd3      	ldrb	r3, [r2, r3]
 8006cda:	f003 031f 	and.w	r3, r3, #31
 8006cde:	687a      	ldr	r2, [r7, #4]
 8006ce0:	fa22 f303 	lsr.w	r3, r2, r3
 8006ce4:	4a0b      	ldr	r2, [pc, #44]	; (8006d14 <HAL_Init+0x70>)
 8006ce6:	6013      	str	r3, [r2, #0]
 8006ce8:	4a0b      	ldr	r2, [pc, #44]	; (8006d18 <HAL_Init+0x74>)
 8006cea:	687b      	ldr	r3, [r7, #4]
 8006cec:	6013      	str	r3, [r2, #0]
 8006cee:	2000      	movs	r0, #0
 8006cf0:	f000 f814 	bl	8006d1c <HAL_InitTick>
 8006cf4:	4603      	mov	r3, r0
 8006cf6:	2b00      	cmp	r3, #0
 8006cf8:	d001      	beq.n	8006cfe <HAL_Init+0x5a>
 8006cfa:	2301      	movs	r3, #1
 8006cfc:	e002      	b.n	8006d04 <HAL_Init+0x60>
 8006cfe:	f7fd f861 	bl	8003dc4 <HAL_MspInit>
 8006d02:	2300      	movs	r3, #0
 8006d04:	4618      	mov	r0, r3
 8006d06:	3708      	adds	r7, #8
 8006d08:	46bd      	mov	sp, r7
 8006d0a:	bd80      	pop	{r7, pc}
 8006d0c:	58024400 	.word	0x58024400
 8006d10:	08012310 	.word	0x08012310
 8006d14:	240000f4 	.word	0x240000f4
 8006d18:	240000f0 	.word	0x240000f0

08006d1c <HAL_InitTick>:
 8006d1c:	b580      	push	{r7, lr}
 8006d1e:	b082      	sub	sp, #8
 8006d20:	af00      	add	r7, sp, #0
 8006d22:	6078      	str	r0, [r7, #4]
 8006d24:	4b15      	ldr	r3, [pc, #84]	; (8006d7c <HAL_InitTick+0x60>)
 8006d26:	781b      	ldrb	r3, [r3, #0]
 8006d28:	2b00      	cmp	r3, #0
 8006d2a:	d101      	bne.n	8006d30 <HAL_InitTick+0x14>
 8006d2c:	2301      	movs	r3, #1
 8006d2e:	e021      	b.n	8006d74 <HAL_InitTick+0x58>
 8006d30:	4b13      	ldr	r3, [pc, #76]	; (8006d80 <HAL_InitTick+0x64>)
 8006d32:	681a      	ldr	r2, [r3, #0]
 8006d34:	4b11      	ldr	r3, [pc, #68]	; (8006d7c <HAL_InitTick+0x60>)
 8006d36:	781b      	ldrb	r3, [r3, #0]
 8006d38:	4619      	mov	r1, r3
 8006d3a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006d3e:	fbb3 f3f1 	udiv	r3, r3, r1
 8006d42:	fbb2 f3f3 	udiv	r3, r2, r3
 8006d46:	4618      	mov	r0, r3
 8006d48:	f000 f9a3 	bl	8007092 <HAL_SYSTICK_Config>
 8006d4c:	4603      	mov	r3, r0
 8006d4e:	2b00      	cmp	r3, #0
 8006d50:	d001      	beq.n	8006d56 <HAL_InitTick+0x3a>
 8006d52:	2301      	movs	r3, #1
 8006d54:	e00e      	b.n	8006d74 <HAL_InitTick+0x58>
 8006d56:	687b      	ldr	r3, [r7, #4]
 8006d58:	2b0f      	cmp	r3, #15
 8006d5a:	d80a      	bhi.n	8006d72 <HAL_InitTick+0x56>
 8006d5c:	2200      	movs	r2, #0
 8006d5e:	6879      	ldr	r1, [r7, #4]
 8006d60:	f04f 30ff 	mov.w	r0, #4294967295
 8006d64:	f000 f95f 	bl	8007026 <HAL_NVIC_SetPriority>
 8006d68:	4a06      	ldr	r2, [pc, #24]	; (8006d84 <HAL_InitTick+0x68>)
 8006d6a:	687b      	ldr	r3, [r7, #4]
 8006d6c:	6013      	str	r3, [r2, #0]
 8006d6e:	2300      	movs	r3, #0
 8006d70:	e000      	b.n	8006d74 <HAL_InitTick+0x58>
 8006d72:	2301      	movs	r3, #1
 8006d74:	4618      	mov	r0, r3
 8006d76:	3708      	adds	r7, #8
 8006d78:	46bd      	mov	sp, r7
 8006d7a:	bd80      	pop	{r7, pc}
 8006d7c:	240000fc 	.word	0x240000fc
 8006d80:	240000f0 	.word	0x240000f0
 8006d84:	240000f8 	.word	0x240000f8

08006d88 <HAL_IncTick>:
 8006d88:	b480      	push	{r7}
 8006d8a:	af00      	add	r7, sp, #0
 8006d8c:	4b06      	ldr	r3, [pc, #24]	; (8006da8 <HAL_IncTick+0x20>)
 8006d8e:	781b      	ldrb	r3, [r3, #0]
 8006d90:	461a      	mov	r2, r3
 8006d92:	4b06      	ldr	r3, [pc, #24]	; (8006dac <HAL_IncTick+0x24>)
 8006d94:	681b      	ldr	r3, [r3, #0]
 8006d96:	4413      	add	r3, r2
 8006d98:	4a04      	ldr	r2, [pc, #16]	; (8006dac <HAL_IncTick+0x24>)
 8006d9a:	6013      	str	r3, [r2, #0]
 8006d9c:	bf00      	nop
 8006d9e:	46bd      	mov	sp, r7
 8006da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006da4:	4770      	bx	lr
 8006da6:	bf00      	nop
 8006da8:	240000fc 	.word	0x240000fc
 8006dac:	24000c8c 	.word	0x24000c8c

08006db0 <HAL_GetTick>:
 8006db0:	b480      	push	{r7}
 8006db2:	af00      	add	r7, sp, #0
 8006db4:	4b03      	ldr	r3, [pc, #12]	; (8006dc4 <HAL_GetTick+0x14>)
 8006db6:	681b      	ldr	r3, [r3, #0]
 8006db8:	4618      	mov	r0, r3
 8006dba:	46bd      	mov	sp, r7
 8006dbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dc0:	4770      	bx	lr
 8006dc2:	bf00      	nop
 8006dc4:	24000c8c 	.word	0x24000c8c

08006dc8 <HAL_Delay>:
 8006dc8:	b580      	push	{r7, lr}
 8006dca:	b084      	sub	sp, #16
 8006dcc:	af00      	add	r7, sp, #0
 8006dce:	6078      	str	r0, [r7, #4]
 8006dd0:	f7ff ffee 	bl	8006db0 <HAL_GetTick>
 8006dd4:	60b8      	str	r0, [r7, #8]
 8006dd6:	687b      	ldr	r3, [r7, #4]
 8006dd8:	60fb      	str	r3, [r7, #12]
 8006dda:	68fb      	ldr	r3, [r7, #12]
 8006ddc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006de0:	d005      	beq.n	8006dee <HAL_Delay+0x26>
 8006de2:	4b0a      	ldr	r3, [pc, #40]	; (8006e0c <HAL_Delay+0x44>)
 8006de4:	781b      	ldrb	r3, [r3, #0]
 8006de6:	461a      	mov	r2, r3
 8006de8:	68fb      	ldr	r3, [r7, #12]
 8006dea:	4413      	add	r3, r2
 8006dec:	60fb      	str	r3, [r7, #12]
 8006dee:	bf00      	nop
 8006df0:	f7ff ffde 	bl	8006db0 <HAL_GetTick>
 8006df4:	4602      	mov	r2, r0
 8006df6:	68bb      	ldr	r3, [r7, #8]
 8006df8:	1ad3      	subs	r3, r2, r3
 8006dfa:	68fa      	ldr	r2, [r7, #12]
 8006dfc:	429a      	cmp	r2, r3
 8006dfe:	d8f7      	bhi.n	8006df0 <HAL_Delay+0x28>
 8006e00:	bf00      	nop
 8006e02:	bf00      	nop
 8006e04:	3710      	adds	r7, #16
 8006e06:	46bd      	mov	sp, r7
 8006e08:	bd80      	pop	{r7, pc}
 8006e0a:	bf00      	nop
 8006e0c:	240000fc 	.word	0x240000fc

08006e10 <HAL_GetREVID>:
 8006e10:	b480      	push	{r7}
 8006e12:	af00      	add	r7, sp, #0
 8006e14:	4b03      	ldr	r3, [pc, #12]	; (8006e24 <HAL_GetREVID+0x14>)
 8006e16:	681b      	ldr	r3, [r3, #0]
 8006e18:	0c1b      	lsrs	r3, r3, #16
 8006e1a:	4618      	mov	r0, r3
 8006e1c:	46bd      	mov	sp, r7
 8006e1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e22:	4770      	bx	lr
 8006e24:	5c001000 	.word	0x5c001000

08006e28 <__NVIC_SetPriorityGrouping>:
 8006e28:	b480      	push	{r7}
 8006e2a:	b085      	sub	sp, #20
 8006e2c:	af00      	add	r7, sp, #0
 8006e2e:	6078      	str	r0, [r7, #4]
 8006e30:	687b      	ldr	r3, [r7, #4]
 8006e32:	f003 0307 	and.w	r3, r3, #7
 8006e36:	60fb      	str	r3, [r7, #12]
 8006e38:	4b0b      	ldr	r3, [pc, #44]	; (8006e68 <__NVIC_SetPriorityGrouping+0x40>)
 8006e3a:	68db      	ldr	r3, [r3, #12]
 8006e3c:	60bb      	str	r3, [r7, #8]
 8006e3e:	68ba      	ldr	r2, [r7, #8]
 8006e40:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8006e44:	4013      	ands	r3, r2
 8006e46:	60bb      	str	r3, [r7, #8]
 8006e48:	68fb      	ldr	r3, [r7, #12]
 8006e4a:	021a      	lsls	r2, r3, #8
 8006e4c:	68bb      	ldr	r3, [r7, #8]
 8006e4e:	431a      	orrs	r2, r3
 8006e50:	4b06      	ldr	r3, [pc, #24]	; (8006e6c <__NVIC_SetPriorityGrouping+0x44>)
 8006e52:	4313      	orrs	r3, r2
 8006e54:	60bb      	str	r3, [r7, #8]
 8006e56:	4a04      	ldr	r2, [pc, #16]	; (8006e68 <__NVIC_SetPriorityGrouping+0x40>)
 8006e58:	68bb      	ldr	r3, [r7, #8]
 8006e5a:	60d3      	str	r3, [r2, #12]
 8006e5c:	bf00      	nop
 8006e5e:	3714      	adds	r7, #20
 8006e60:	46bd      	mov	sp, r7
 8006e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e66:	4770      	bx	lr
 8006e68:	e000ed00 	.word	0xe000ed00
 8006e6c:	05fa0000 	.word	0x05fa0000

08006e70 <__NVIC_GetPriorityGrouping>:
 8006e70:	b480      	push	{r7}
 8006e72:	af00      	add	r7, sp, #0
 8006e74:	4b04      	ldr	r3, [pc, #16]	; (8006e88 <__NVIC_GetPriorityGrouping+0x18>)
 8006e76:	68db      	ldr	r3, [r3, #12]
 8006e78:	0a1b      	lsrs	r3, r3, #8
 8006e7a:	f003 0307 	and.w	r3, r3, #7
 8006e7e:	4618      	mov	r0, r3
 8006e80:	46bd      	mov	sp, r7
 8006e82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e86:	4770      	bx	lr
 8006e88:	e000ed00 	.word	0xe000ed00

08006e8c <__NVIC_EnableIRQ>:
 8006e8c:	b480      	push	{r7}
 8006e8e:	b083      	sub	sp, #12
 8006e90:	af00      	add	r7, sp, #0
 8006e92:	4603      	mov	r3, r0
 8006e94:	80fb      	strh	r3, [r7, #6]
 8006e96:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006e9a:	2b00      	cmp	r3, #0
 8006e9c:	db0b      	blt.n	8006eb6 <__NVIC_EnableIRQ+0x2a>
 8006e9e:	88fb      	ldrh	r3, [r7, #6]
 8006ea0:	f003 021f 	and.w	r2, r3, #31
 8006ea4:	4907      	ldr	r1, [pc, #28]	; (8006ec4 <__NVIC_EnableIRQ+0x38>)
 8006ea6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006eaa:	095b      	lsrs	r3, r3, #5
 8006eac:	2001      	movs	r0, #1
 8006eae:	fa00 f202 	lsl.w	r2, r0, r2
 8006eb2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8006eb6:	bf00      	nop
 8006eb8:	370c      	adds	r7, #12
 8006eba:	46bd      	mov	sp, r7
 8006ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ec0:	4770      	bx	lr
 8006ec2:	bf00      	nop
 8006ec4:	e000e100 	.word	0xe000e100

08006ec8 <__NVIC_DisableIRQ>:
 8006ec8:	b480      	push	{r7}
 8006eca:	b083      	sub	sp, #12
 8006ecc:	af00      	add	r7, sp, #0
 8006ece:	4603      	mov	r3, r0
 8006ed0:	80fb      	strh	r3, [r7, #6]
 8006ed2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006ed6:	2b00      	cmp	r3, #0
 8006ed8:	db12      	blt.n	8006f00 <__NVIC_DisableIRQ+0x38>
 8006eda:	88fb      	ldrh	r3, [r7, #6]
 8006edc:	f003 021f 	and.w	r2, r3, #31
 8006ee0:	490a      	ldr	r1, [pc, #40]	; (8006f0c <__NVIC_DisableIRQ+0x44>)
 8006ee2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006ee6:	095b      	lsrs	r3, r3, #5
 8006ee8:	2001      	movs	r0, #1
 8006eea:	fa00 f202 	lsl.w	r2, r0, r2
 8006eee:	3320      	adds	r3, #32
 8006ef0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8006ef4:	f3bf 8f4f 	dsb	sy
 8006ef8:	bf00      	nop
 8006efa:	f3bf 8f6f 	isb	sy
 8006efe:	bf00      	nop
 8006f00:	bf00      	nop
 8006f02:	370c      	adds	r7, #12
 8006f04:	46bd      	mov	sp, r7
 8006f06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f0a:	4770      	bx	lr
 8006f0c:	e000e100 	.word	0xe000e100

08006f10 <__NVIC_SetPriority>:
 8006f10:	b480      	push	{r7}
 8006f12:	b083      	sub	sp, #12
 8006f14:	af00      	add	r7, sp, #0
 8006f16:	4603      	mov	r3, r0
 8006f18:	6039      	str	r1, [r7, #0]
 8006f1a:	80fb      	strh	r3, [r7, #6]
 8006f1c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006f20:	2b00      	cmp	r3, #0
 8006f22:	db0a      	blt.n	8006f3a <__NVIC_SetPriority+0x2a>
 8006f24:	683b      	ldr	r3, [r7, #0]
 8006f26:	b2da      	uxtb	r2, r3
 8006f28:	490c      	ldr	r1, [pc, #48]	; (8006f5c <__NVIC_SetPriority+0x4c>)
 8006f2a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8006f2e:	0112      	lsls	r2, r2, #4
 8006f30:	b2d2      	uxtb	r2, r2
 8006f32:	440b      	add	r3, r1
 8006f34:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8006f38:	e00a      	b.n	8006f50 <__NVIC_SetPriority+0x40>
 8006f3a:	683b      	ldr	r3, [r7, #0]
 8006f3c:	b2da      	uxtb	r2, r3
 8006f3e:	4908      	ldr	r1, [pc, #32]	; (8006f60 <__NVIC_SetPriority+0x50>)
 8006f40:	88fb      	ldrh	r3, [r7, #6]
 8006f42:	f003 030f 	and.w	r3, r3, #15
 8006f46:	3b04      	subs	r3, #4
 8006f48:	0112      	lsls	r2, r2, #4
 8006f4a:	b2d2      	uxtb	r2, r2
 8006f4c:	440b      	add	r3, r1
 8006f4e:	761a      	strb	r2, [r3, #24]
 8006f50:	bf00      	nop
 8006f52:	370c      	adds	r7, #12
 8006f54:	46bd      	mov	sp, r7
 8006f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f5a:	4770      	bx	lr
 8006f5c:	e000e100 	.word	0xe000e100
 8006f60:	e000ed00 	.word	0xe000ed00

08006f64 <NVIC_EncodePriority>:
 8006f64:	b480      	push	{r7}
 8006f66:	b089      	sub	sp, #36	; 0x24
 8006f68:	af00      	add	r7, sp, #0
 8006f6a:	60f8      	str	r0, [r7, #12]
 8006f6c:	60b9      	str	r1, [r7, #8]
 8006f6e:	607a      	str	r2, [r7, #4]
 8006f70:	68fb      	ldr	r3, [r7, #12]
 8006f72:	f003 0307 	and.w	r3, r3, #7
 8006f76:	61fb      	str	r3, [r7, #28]
 8006f78:	69fb      	ldr	r3, [r7, #28]
 8006f7a:	f1c3 0307 	rsb	r3, r3, #7
 8006f7e:	2b04      	cmp	r3, #4
 8006f80:	bf28      	it	cs
 8006f82:	2304      	movcs	r3, #4
 8006f84:	61bb      	str	r3, [r7, #24]
 8006f86:	69fb      	ldr	r3, [r7, #28]
 8006f88:	3304      	adds	r3, #4
 8006f8a:	2b06      	cmp	r3, #6
 8006f8c:	d902      	bls.n	8006f94 <NVIC_EncodePriority+0x30>
 8006f8e:	69fb      	ldr	r3, [r7, #28]
 8006f90:	3b03      	subs	r3, #3
 8006f92:	e000      	b.n	8006f96 <NVIC_EncodePriority+0x32>
 8006f94:	2300      	movs	r3, #0
 8006f96:	617b      	str	r3, [r7, #20]
 8006f98:	f04f 32ff 	mov.w	r2, #4294967295
 8006f9c:	69bb      	ldr	r3, [r7, #24]
 8006f9e:	fa02 f303 	lsl.w	r3, r2, r3
 8006fa2:	43da      	mvns	r2, r3
 8006fa4:	68bb      	ldr	r3, [r7, #8]
 8006fa6:	401a      	ands	r2, r3
 8006fa8:	697b      	ldr	r3, [r7, #20]
 8006faa:	409a      	lsls	r2, r3
 8006fac:	f04f 31ff 	mov.w	r1, #4294967295
 8006fb0:	697b      	ldr	r3, [r7, #20]
 8006fb2:	fa01 f303 	lsl.w	r3, r1, r3
 8006fb6:	43d9      	mvns	r1, r3
 8006fb8:	687b      	ldr	r3, [r7, #4]
 8006fba:	400b      	ands	r3, r1
 8006fbc:	4313      	orrs	r3, r2
 8006fbe:	4618      	mov	r0, r3
 8006fc0:	3724      	adds	r7, #36	; 0x24
 8006fc2:	46bd      	mov	sp, r7
 8006fc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fc8:	4770      	bx	lr
	...

08006fcc <SysTick_Config>:
 8006fcc:	b580      	push	{r7, lr}
 8006fce:	b082      	sub	sp, #8
 8006fd0:	af00      	add	r7, sp, #0
 8006fd2:	6078      	str	r0, [r7, #4]
 8006fd4:	687b      	ldr	r3, [r7, #4]
 8006fd6:	3b01      	subs	r3, #1
 8006fd8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8006fdc:	d301      	bcc.n	8006fe2 <SysTick_Config+0x16>
 8006fde:	2301      	movs	r3, #1
 8006fe0:	e00f      	b.n	8007002 <SysTick_Config+0x36>
 8006fe2:	4a0a      	ldr	r2, [pc, #40]	; (800700c <SysTick_Config+0x40>)
 8006fe4:	687b      	ldr	r3, [r7, #4]
 8006fe6:	3b01      	subs	r3, #1
 8006fe8:	6053      	str	r3, [r2, #4]
 8006fea:	210f      	movs	r1, #15
 8006fec:	f04f 30ff 	mov.w	r0, #4294967295
 8006ff0:	f7ff ff8e 	bl	8006f10 <__NVIC_SetPriority>
 8006ff4:	4b05      	ldr	r3, [pc, #20]	; (800700c <SysTick_Config+0x40>)
 8006ff6:	2200      	movs	r2, #0
 8006ff8:	609a      	str	r2, [r3, #8]
 8006ffa:	4b04      	ldr	r3, [pc, #16]	; (800700c <SysTick_Config+0x40>)
 8006ffc:	2207      	movs	r2, #7
 8006ffe:	601a      	str	r2, [r3, #0]
 8007000:	2300      	movs	r3, #0
 8007002:	4618      	mov	r0, r3
 8007004:	3708      	adds	r7, #8
 8007006:	46bd      	mov	sp, r7
 8007008:	bd80      	pop	{r7, pc}
 800700a:	bf00      	nop
 800700c:	e000e010 	.word	0xe000e010

08007010 <HAL_NVIC_SetPriorityGrouping>:
 8007010:	b580      	push	{r7, lr}
 8007012:	b082      	sub	sp, #8
 8007014:	af00      	add	r7, sp, #0
 8007016:	6078      	str	r0, [r7, #4]
 8007018:	6878      	ldr	r0, [r7, #4]
 800701a:	f7ff ff05 	bl	8006e28 <__NVIC_SetPriorityGrouping>
 800701e:	bf00      	nop
 8007020:	3708      	adds	r7, #8
 8007022:	46bd      	mov	sp, r7
 8007024:	bd80      	pop	{r7, pc}

08007026 <HAL_NVIC_SetPriority>:
 8007026:	b580      	push	{r7, lr}
 8007028:	b086      	sub	sp, #24
 800702a:	af00      	add	r7, sp, #0
 800702c:	4603      	mov	r3, r0
 800702e:	60b9      	str	r1, [r7, #8]
 8007030:	607a      	str	r2, [r7, #4]
 8007032:	81fb      	strh	r3, [r7, #14]
 8007034:	f7ff ff1c 	bl	8006e70 <__NVIC_GetPriorityGrouping>
 8007038:	6178      	str	r0, [r7, #20]
 800703a:	687a      	ldr	r2, [r7, #4]
 800703c:	68b9      	ldr	r1, [r7, #8]
 800703e:	6978      	ldr	r0, [r7, #20]
 8007040:	f7ff ff90 	bl	8006f64 <NVIC_EncodePriority>
 8007044:	4602      	mov	r2, r0
 8007046:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800704a:	4611      	mov	r1, r2
 800704c:	4618      	mov	r0, r3
 800704e:	f7ff ff5f 	bl	8006f10 <__NVIC_SetPriority>
 8007052:	bf00      	nop
 8007054:	3718      	adds	r7, #24
 8007056:	46bd      	mov	sp, r7
 8007058:	bd80      	pop	{r7, pc}

0800705a <HAL_NVIC_EnableIRQ>:
 800705a:	b580      	push	{r7, lr}
 800705c:	b082      	sub	sp, #8
 800705e:	af00      	add	r7, sp, #0
 8007060:	4603      	mov	r3, r0
 8007062:	80fb      	strh	r3, [r7, #6]
 8007064:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8007068:	4618      	mov	r0, r3
 800706a:	f7ff ff0f 	bl	8006e8c <__NVIC_EnableIRQ>
 800706e:	bf00      	nop
 8007070:	3708      	adds	r7, #8
 8007072:	46bd      	mov	sp, r7
 8007074:	bd80      	pop	{r7, pc}

08007076 <HAL_NVIC_DisableIRQ>:
 8007076:	b580      	push	{r7, lr}
 8007078:	b082      	sub	sp, #8
 800707a:	af00      	add	r7, sp, #0
 800707c:	4603      	mov	r3, r0
 800707e:	80fb      	strh	r3, [r7, #6]
 8007080:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8007084:	4618      	mov	r0, r3
 8007086:	f7ff ff1f 	bl	8006ec8 <__NVIC_DisableIRQ>
 800708a:	bf00      	nop
 800708c:	3708      	adds	r7, #8
 800708e:	46bd      	mov	sp, r7
 8007090:	bd80      	pop	{r7, pc}

08007092 <HAL_SYSTICK_Config>:
 8007092:	b580      	push	{r7, lr}
 8007094:	b082      	sub	sp, #8
 8007096:	af00      	add	r7, sp, #0
 8007098:	6078      	str	r0, [r7, #4]
 800709a:	6878      	ldr	r0, [r7, #4]
 800709c:	f7ff ff96 	bl	8006fcc <SysTick_Config>
 80070a0:	4603      	mov	r3, r0
 80070a2:	4618      	mov	r0, r3
 80070a4:	3708      	adds	r7, #8
 80070a6:	46bd      	mov	sp, r7
 80070a8:	bd80      	pop	{r7, pc}
	...

080070ac <HAL_DMA_Abort>:
 80070ac:	b580      	push	{r7, lr}
 80070ae:	b086      	sub	sp, #24
 80070b0:	af00      	add	r7, sp, #0
 80070b2:	6078      	str	r0, [r7, #4]
 80070b4:	f7ff fe7c 	bl	8006db0 <HAL_GetTick>
 80070b8:	6138      	str	r0, [r7, #16]
 80070ba:	687b      	ldr	r3, [r7, #4]
 80070bc:	2b00      	cmp	r3, #0
 80070be:	d101      	bne.n	80070c4 <HAL_DMA_Abort+0x18>
 80070c0:	2301      	movs	r3, #1
 80070c2:	e2dc      	b.n	800767e <HAL_DMA_Abort+0x5d2>
 80070c4:	687b      	ldr	r3, [r7, #4]
 80070c6:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80070ca:	b2db      	uxtb	r3, r3
 80070cc:	2b02      	cmp	r3, #2
 80070ce:	d008      	beq.n	80070e2 <HAL_DMA_Abort+0x36>
 80070d0:	687b      	ldr	r3, [r7, #4]
 80070d2:	2280      	movs	r2, #128	; 0x80
 80070d4:	655a      	str	r2, [r3, #84]	; 0x54
 80070d6:	687b      	ldr	r3, [r7, #4]
 80070d8:	2200      	movs	r2, #0
 80070da:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80070de:	2301      	movs	r3, #1
 80070e0:	e2cd      	b.n	800767e <HAL_DMA_Abort+0x5d2>
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	681b      	ldr	r3, [r3, #0]
 80070e6:	4a76      	ldr	r2, [pc, #472]	; (80072c0 <HAL_DMA_Abort+0x214>)
 80070e8:	4293      	cmp	r3, r2
 80070ea:	d04a      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	681b      	ldr	r3, [r3, #0]
 80070f0:	4a74      	ldr	r2, [pc, #464]	; (80072c4 <HAL_DMA_Abort+0x218>)
 80070f2:	4293      	cmp	r3, r2
 80070f4:	d045      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 80070f6:	687b      	ldr	r3, [r7, #4]
 80070f8:	681b      	ldr	r3, [r3, #0]
 80070fa:	4a73      	ldr	r2, [pc, #460]	; (80072c8 <HAL_DMA_Abort+0x21c>)
 80070fc:	4293      	cmp	r3, r2
 80070fe:	d040      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 8007100:	687b      	ldr	r3, [r7, #4]
 8007102:	681b      	ldr	r3, [r3, #0]
 8007104:	4a71      	ldr	r2, [pc, #452]	; (80072cc <HAL_DMA_Abort+0x220>)
 8007106:	4293      	cmp	r3, r2
 8007108:	d03b      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 800710a:	687b      	ldr	r3, [r7, #4]
 800710c:	681b      	ldr	r3, [r3, #0]
 800710e:	4a70      	ldr	r2, [pc, #448]	; (80072d0 <HAL_DMA_Abort+0x224>)
 8007110:	4293      	cmp	r3, r2
 8007112:	d036      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 8007114:	687b      	ldr	r3, [r7, #4]
 8007116:	681b      	ldr	r3, [r3, #0]
 8007118:	4a6e      	ldr	r2, [pc, #440]	; (80072d4 <HAL_DMA_Abort+0x228>)
 800711a:	4293      	cmp	r3, r2
 800711c:	d031      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 800711e:	687b      	ldr	r3, [r7, #4]
 8007120:	681b      	ldr	r3, [r3, #0]
 8007122:	4a6d      	ldr	r2, [pc, #436]	; (80072d8 <HAL_DMA_Abort+0x22c>)
 8007124:	4293      	cmp	r3, r2
 8007126:	d02c      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 8007128:	687b      	ldr	r3, [r7, #4]
 800712a:	681b      	ldr	r3, [r3, #0]
 800712c:	4a6b      	ldr	r2, [pc, #428]	; (80072dc <HAL_DMA_Abort+0x230>)
 800712e:	4293      	cmp	r3, r2
 8007130:	d027      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 8007132:	687b      	ldr	r3, [r7, #4]
 8007134:	681b      	ldr	r3, [r3, #0]
 8007136:	4a6a      	ldr	r2, [pc, #424]	; (80072e0 <HAL_DMA_Abort+0x234>)
 8007138:	4293      	cmp	r3, r2
 800713a:	d022      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 800713c:	687b      	ldr	r3, [r7, #4]
 800713e:	681b      	ldr	r3, [r3, #0]
 8007140:	4a68      	ldr	r2, [pc, #416]	; (80072e4 <HAL_DMA_Abort+0x238>)
 8007142:	4293      	cmp	r3, r2
 8007144:	d01d      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 8007146:	687b      	ldr	r3, [r7, #4]
 8007148:	681b      	ldr	r3, [r3, #0]
 800714a:	4a67      	ldr	r2, [pc, #412]	; (80072e8 <HAL_DMA_Abort+0x23c>)
 800714c:	4293      	cmp	r3, r2
 800714e:	d018      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 8007150:	687b      	ldr	r3, [r7, #4]
 8007152:	681b      	ldr	r3, [r3, #0]
 8007154:	4a65      	ldr	r2, [pc, #404]	; (80072ec <HAL_DMA_Abort+0x240>)
 8007156:	4293      	cmp	r3, r2
 8007158:	d013      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 800715a:	687b      	ldr	r3, [r7, #4]
 800715c:	681b      	ldr	r3, [r3, #0]
 800715e:	4a64      	ldr	r2, [pc, #400]	; (80072f0 <HAL_DMA_Abort+0x244>)
 8007160:	4293      	cmp	r3, r2
 8007162:	d00e      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 8007164:	687b      	ldr	r3, [r7, #4]
 8007166:	681b      	ldr	r3, [r3, #0]
 8007168:	4a62      	ldr	r2, [pc, #392]	; (80072f4 <HAL_DMA_Abort+0x248>)
 800716a:	4293      	cmp	r3, r2
 800716c:	d009      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 800716e:	687b      	ldr	r3, [r7, #4]
 8007170:	681b      	ldr	r3, [r3, #0]
 8007172:	4a61      	ldr	r2, [pc, #388]	; (80072f8 <HAL_DMA_Abort+0x24c>)
 8007174:	4293      	cmp	r3, r2
 8007176:	d004      	beq.n	8007182 <HAL_DMA_Abort+0xd6>
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	681b      	ldr	r3, [r3, #0]
 800717c:	4a5f      	ldr	r2, [pc, #380]	; (80072fc <HAL_DMA_Abort+0x250>)
 800717e:	4293      	cmp	r3, r2
 8007180:	d101      	bne.n	8007186 <HAL_DMA_Abort+0xda>
 8007182:	2301      	movs	r3, #1
 8007184:	e000      	b.n	8007188 <HAL_DMA_Abort+0xdc>
 8007186:	2300      	movs	r3, #0
 8007188:	2b00      	cmp	r3, #0
 800718a:	d013      	beq.n	80071b4 <HAL_DMA_Abort+0x108>
 800718c:	687b      	ldr	r3, [r7, #4]
 800718e:	681b      	ldr	r3, [r3, #0]
 8007190:	681a      	ldr	r2, [r3, #0]
 8007192:	687b      	ldr	r3, [r7, #4]
 8007194:	681b      	ldr	r3, [r3, #0]
 8007196:	f022 021e 	bic.w	r2, r2, #30
 800719a:	601a      	str	r2, [r3, #0]
 800719c:	687b      	ldr	r3, [r7, #4]
 800719e:	681b      	ldr	r3, [r3, #0]
 80071a0:	695a      	ldr	r2, [r3, #20]
 80071a2:	687b      	ldr	r3, [r7, #4]
 80071a4:	681b      	ldr	r3, [r3, #0]
 80071a6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80071aa:	615a      	str	r2, [r3, #20]
 80071ac:	687b      	ldr	r3, [r7, #4]
 80071ae:	681b      	ldr	r3, [r3, #0]
 80071b0:	617b      	str	r3, [r7, #20]
 80071b2:	e00a      	b.n	80071ca <HAL_DMA_Abort+0x11e>
 80071b4:	687b      	ldr	r3, [r7, #4]
 80071b6:	681b      	ldr	r3, [r3, #0]
 80071b8:	681a      	ldr	r2, [r3, #0]
 80071ba:	687b      	ldr	r3, [r7, #4]
 80071bc:	681b      	ldr	r3, [r3, #0]
 80071be:	f022 020e 	bic.w	r2, r2, #14
 80071c2:	601a      	str	r2, [r3, #0]
 80071c4:	687b      	ldr	r3, [r7, #4]
 80071c6:	681b      	ldr	r3, [r3, #0]
 80071c8:	617b      	str	r3, [r7, #20]
 80071ca:	687b      	ldr	r3, [r7, #4]
 80071cc:	681b      	ldr	r3, [r3, #0]
 80071ce:	4a3c      	ldr	r2, [pc, #240]	; (80072c0 <HAL_DMA_Abort+0x214>)
 80071d0:	4293      	cmp	r3, r2
 80071d2:	d072      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 80071d4:	687b      	ldr	r3, [r7, #4]
 80071d6:	681b      	ldr	r3, [r3, #0]
 80071d8:	4a3a      	ldr	r2, [pc, #232]	; (80072c4 <HAL_DMA_Abort+0x218>)
 80071da:	4293      	cmp	r3, r2
 80071dc:	d06d      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 80071de:	687b      	ldr	r3, [r7, #4]
 80071e0:	681b      	ldr	r3, [r3, #0]
 80071e2:	4a39      	ldr	r2, [pc, #228]	; (80072c8 <HAL_DMA_Abort+0x21c>)
 80071e4:	4293      	cmp	r3, r2
 80071e6:	d068      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 80071e8:	687b      	ldr	r3, [r7, #4]
 80071ea:	681b      	ldr	r3, [r3, #0]
 80071ec:	4a37      	ldr	r2, [pc, #220]	; (80072cc <HAL_DMA_Abort+0x220>)
 80071ee:	4293      	cmp	r3, r2
 80071f0:	d063      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 80071f2:	687b      	ldr	r3, [r7, #4]
 80071f4:	681b      	ldr	r3, [r3, #0]
 80071f6:	4a36      	ldr	r2, [pc, #216]	; (80072d0 <HAL_DMA_Abort+0x224>)
 80071f8:	4293      	cmp	r3, r2
 80071fa:	d05e      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 80071fc:	687b      	ldr	r3, [r7, #4]
 80071fe:	681b      	ldr	r3, [r3, #0]
 8007200:	4a34      	ldr	r2, [pc, #208]	; (80072d4 <HAL_DMA_Abort+0x228>)
 8007202:	4293      	cmp	r3, r2
 8007204:	d059      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 8007206:	687b      	ldr	r3, [r7, #4]
 8007208:	681b      	ldr	r3, [r3, #0]
 800720a:	4a33      	ldr	r2, [pc, #204]	; (80072d8 <HAL_DMA_Abort+0x22c>)
 800720c:	4293      	cmp	r3, r2
 800720e:	d054      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	681b      	ldr	r3, [r3, #0]
 8007214:	4a31      	ldr	r2, [pc, #196]	; (80072dc <HAL_DMA_Abort+0x230>)
 8007216:	4293      	cmp	r3, r2
 8007218:	d04f      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 800721a:	687b      	ldr	r3, [r7, #4]
 800721c:	681b      	ldr	r3, [r3, #0]
 800721e:	4a30      	ldr	r2, [pc, #192]	; (80072e0 <HAL_DMA_Abort+0x234>)
 8007220:	4293      	cmp	r3, r2
 8007222:	d04a      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 8007224:	687b      	ldr	r3, [r7, #4]
 8007226:	681b      	ldr	r3, [r3, #0]
 8007228:	4a2e      	ldr	r2, [pc, #184]	; (80072e4 <HAL_DMA_Abort+0x238>)
 800722a:	4293      	cmp	r3, r2
 800722c:	d045      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 800722e:	687b      	ldr	r3, [r7, #4]
 8007230:	681b      	ldr	r3, [r3, #0]
 8007232:	4a2d      	ldr	r2, [pc, #180]	; (80072e8 <HAL_DMA_Abort+0x23c>)
 8007234:	4293      	cmp	r3, r2
 8007236:	d040      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 8007238:	687b      	ldr	r3, [r7, #4]
 800723a:	681b      	ldr	r3, [r3, #0]
 800723c:	4a2b      	ldr	r2, [pc, #172]	; (80072ec <HAL_DMA_Abort+0x240>)
 800723e:	4293      	cmp	r3, r2
 8007240:	d03b      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 8007242:	687b      	ldr	r3, [r7, #4]
 8007244:	681b      	ldr	r3, [r3, #0]
 8007246:	4a2a      	ldr	r2, [pc, #168]	; (80072f0 <HAL_DMA_Abort+0x244>)
 8007248:	4293      	cmp	r3, r2
 800724a:	d036      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 800724c:	687b      	ldr	r3, [r7, #4]
 800724e:	681b      	ldr	r3, [r3, #0]
 8007250:	4a28      	ldr	r2, [pc, #160]	; (80072f4 <HAL_DMA_Abort+0x248>)
 8007252:	4293      	cmp	r3, r2
 8007254:	d031      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 8007256:	687b      	ldr	r3, [r7, #4]
 8007258:	681b      	ldr	r3, [r3, #0]
 800725a:	4a27      	ldr	r2, [pc, #156]	; (80072f8 <HAL_DMA_Abort+0x24c>)
 800725c:	4293      	cmp	r3, r2
 800725e:	d02c      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	681b      	ldr	r3, [r3, #0]
 8007264:	4a25      	ldr	r2, [pc, #148]	; (80072fc <HAL_DMA_Abort+0x250>)
 8007266:	4293      	cmp	r3, r2
 8007268:	d027      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 800726a:	687b      	ldr	r3, [r7, #4]
 800726c:	681b      	ldr	r3, [r3, #0]
 800726e:	4a24      	ldr	r2, [pc, #144]	; (8007300 <HAL_DMA_Abort+0x254>)
 8007270:	4293      	cmp	r3, r2
 8007272:	d022      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 8007274:	687b      	ldr	r3, [r7, #4]
 8007276:	681b      	ldr	r3, [r3, #0]
 8007278:	4a22      	ldr	r2, [pc, #136]	; (8007304 <HAL_DMA_Abort+0x258>)
 800727a:	4293      	cmp	r3, r2
 800727c:	d01d      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 800727e:	687b      	ldr	r3, [r7, #4]
 8007280:	681b      	ldr	r3, [r3, #0]
 8007282:	4a21      	ldr	r2, [pc, #132]	; (8007308 <HAL_DMA_Abort+0x25c>)
 8007284:	4293      	cmp	r3, r2
 8007286:	d018      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 8007288:	687b      	ldr	r3, [r7, #4]
 800728a:	681b      	ldr	r3, [r3, #0]
 800728c:	4a1f      	ldr	r2, [pc, #124]	; (800730c <HAL_DMA_Abort+0x260>)
 800728e:	4293      	cmp	r3, r2
 8007290:	d013      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 8007292:	687b      	ldr	r3, [r7, #4]
 8007294:	681b      	ldr	r3, [r3, #0]
 8007296:	4a1e      	ldr	r2, [pc, #120]	; (8007310 <HAL_DMA_Abort+0x264>)
 8007298:	4293      	cmp	r3, r2
 800729a:	d00e      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 800729c:	687b      	ldr	r3, [r7, #4]
 800729e:	681b      	ldr	r3, [r3, #0]
 80072a0:	4a1c      	ldr	r2, [pc, #112]	; (8007314 <HAL_DMA_Abort+0x268>)
 80072a2:	4293      	cmp	r3, r2
 80072a4:	d009      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 80072a6:	687b      	ldr	r3, [r7, #4]
 80072a8:	681b      	ldr	r3, [r3, #0]
 80072aa:	4a1b      	ldr	r2, [pc, #108]	; (8007318 <HAL_DMA_Abort+0x26c>)
 80072ac:	4293      	cmp	r3, r2
 80072ae:	d004      	beq.n	80072ba <HAL_DMA_Abort+0x20e>
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	681b      	ldr	r3, [r3, #0]
 80072b4:	4a19      	ldr	r2, [pc, #100]	; (800731c <HAL_DMA_Abort+0x270>)
 80072b6:	4293      	cmp	r3, r2
 80072b8:	d132      	bne.n	8007320 <HAL_DMA_Abort+0x274>
 80072ba:	2301      	movs	r3, #1
 80072bc:	e031      	b.n	8007322 <HAL_DMA_Abort+0x276>
 80072be:	bf00      	nop
 80072c0:	40020010 	.word	0x40020010
 80072c4:	40020028 	.word	0x40020028
 80072c8:	40020040 	.word	0x40020040
 80072cc:	40020058 	.word	0x40020058
 80072d0:	40020070 	.word	0x40020070
 80072d4:	40020088 	.word	0x40020088
 80072d8:	400200a0 	.word	0x400200a0
 80072dc:	400200b8 	.word	0x400200b8
 80072e0:	40020410 	.word	0x40020410
 80072e4:	40020428 	.word	0x40020428
 80072e8:	40020440 	.word	0x40020440
 80072ec:	40020458 	.word	0x40020458
 80072f0:	40020470 	.word	0x40020470
 80072f4:	40020488 	.word	0x40020488
 80072f8:	400204a0 	.word	0x400204a0
 80072fc:	400204b8 	.word	0x400204b8
 8007300:	58025408 	.word	0x58025408
 8007304:	5802541c 	.word	0x5802541c
 8007308:	58025430 	.word	0x58025430
 800730c:	58025444 	.word	0x58025444
 8007310:	58025458 	.word	0x58025458
 8007314:	5802546c 	.word	0x5802546c
 8007318:	58025480 	.word	0x58025480
 800731c:	58025494 	.word	0x58025494
 8007320:	2300      	movs	r3, #0
 8007322:	2b00      	cmp	r3, #0
 8007324:	d007      	beq.n	8007336 <HAL_DMA_Abort+0x28a>
 8007326:	687b      	ldr	r3, [r7, #4]
 8007328:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800732a:	681a      	ldr	r2, [r3, #0]
 800732c:	687b      	ldr	r3, [r7, #4]
 800732e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007330:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007334:	601a      	str	r2, [r3, #0]
 8007336:	687b      	ldr	r3, [r7, #4]
 8007338:	681b      	ldr	r3, [r3, #0]
 800733a:	4a6d      	ldr	r2, [pc, #436]	; (80074f0 <HAL_DMA_Abort+0x444>)
 800733c:	4293      	cmp	r3, r2
 800733e:	d04a      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 8007340:	687b      	ldr	r3, [r7, #4]
 8007342:	681b      	ldr	r3, [r3, #0]
 8007344:	4a6b      	ldr	r2, [pc, #428]	; (80074f4 <HAL_DMA_Abort+0x448>)
 8007346:	4293      	cmp	r3, r2
 8007348:	d045      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 800734a:	687b      	ldr	r3, [r7, #4]
 800734c:	681b      	ldr	r3, [r3, #0]
 800734e:	4a6a      	ldr	r2, [pc, #424]	; (80074f8 <HAL_DMA_Abort+0x44c>)
 8007350:	4293      	cmp	r3, r2
 8007352:	d040      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	681b      	ldr	r3, [r3, #0]
 8007358:	4a68      	ldr	r2, [pc, #416]	; (80074fc <HAL_DMA_Abort+0x450>)
 800735a:	4293      	cmp	r3, r2
 800735c:	d03b      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 800735e:	687b      	ldr	r3, [r7, #4]
 8007360:	681b      	ldr	r3, [r3, #0]
 8007362:	4a67      	ldr	r2, [pc, #412]	; (8007500 <HAL_DMA_Abort+0x454>)
 8007364:	4293      	cmp	r3, r2
 8007366:	d036      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 8007368:	687b      	ldr	r3, [r7, #4]
 800736a:	681b      	ldr	r3, [r3, #0]
 800736c:	4a65      	ldr	r2, [pc, #404]	; (8007504 <HAL_DMA_Abort+0x458>)
 800736e:	4293      	cmp	r3, r2
 8007370:	d031      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 8007372:	687b      	ldr	r3, [r7, #4]
 8007374:	681b      	ldr	r3, [r3, #0]
 8007376:	4a64      	ldr	r2, [pc, #400]	; (8007508 <HAL_DMA_Abort+0x45c>)
 8007378:	4293      	cmp	r3, r2
 800737a:	d02c      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 800737c:	687b      	ldr	r3, [r7, #4]
 800737e:	681b      	ldr	r3, [r3, #0]
 8007380:	4a62      	ldr	r2, [pc, #392]	; (800750c <HAL_DMA_Abort+0x460>)
 8007382:	4293      	cmp	r3, r2
 8007384:	d027      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 8007386:	687b      	ldr	r3, [r7, #4]
 8007388:	681b      	ldr	r3, [r3, #0]
 800738a:	4a61      	ldr	r2, [pc, #388]	; (8007510 <HAL_DMA_Abort+0x464>)
 800738c:	4293      	cmp	r3, r2
 800738e:	d022      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 8007390:	687b      	ldr	r3, [r7, #4]
 8007392:	681b      	ldr	r3, [r3, #0]
 8007394:	4a5f      	ldr	r2, [pc, #380]	; (8007514 <HAL_DMA_Abort+0x468>)
 8007396:	4293      	cmp	r3, r2
 8007398:	d01d      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 800739a:	687b      	ldr	r3, [r7, #4]
 800739c:	681b      	ldr	r3, [r3, #0]
 800739e:	4a5e      	ldr	r2, [pc, #376]	; (8007518 <HAL_DMA_Abort+0x46c>)
 80073a0:	4293      	cmp	r3, r2
 80073a2:	d018      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 80073a4:	687b      	ldr	r3, [r7, #4]
 80073a6:	681b      	ldr	r3, [r3, #0]
 80073a8:	4a5c      	ldr	r2, [pc, #368]	; (800751c <HAL_DMA_Abort+0x470>)
 80073aa:	4293      	cmp	r3, r2
 80073ac:	d013      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 80073ae:	687b      	ldr	r3, [r7, #4]
 80073b0:	681b      	ldr	r3, [r3, #0]
 80073b2:	4a5b      	ldr	r2, [pc, #364]	; (8007520 <HAL_DMA_Abort+0x474>)
 80073b4:	4293      	cmp	r3, r2
 80073b6:	d00e      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 80073b8:	687b      	ldr	r3, [r7, #4]
 80073ba:	681b      	ldr	r3, [r3, #0]
 80073bc:	4a59      	ldr	r2, [pc, #356]	; (8007524 <HAL_DMA_Abort+0x478>)
 80073be:	4293      	cmp	r3, r2
 80073c0:	d009      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 80073c2:	687b      	ldr	r3, [r7, #4]
 80073c4:	681b      	ldr	r3, [r3, #0]
 80073c6:	4a58      	ldr	r2, [pc, #352]	; (8007528 <HAL_DMA_Abort+0x47c>)
 80073c8:	4293      	cmp	r3, r2
 80073ca:	d004      	beq.n	80073d6 <HAL_DMA_Abort+0x32a>
 80073cc:	687b      	ldr	r3, [r7, #4]
 80073ce:	681b      	ldr	r3, [r3, #0]
 80073d0:	4a56      	ldr	r2, [pc, #344]	; (800752c <HAL_DMA_Abort+0x480>)
 80073d2:	4293      	cmp	r3, r2
 80073d4:	d108      	bne.n	80073e8 <HAL_DMA_Abort+0x33c>
 80073d6:	687b      	ldr	r3, [r7, #4]
 80073d8:	681b      	ldr	r3, [r3, #0]
 80073da:	681a      	ldr	r2, [r3, #0]
 80073dc:	687b      	ldr	r3, [r7, #4]
 80073de:	681b      	ldr	r3, [r3, #0]
 80073e0:	f022 0201 	bic.w	r2, r2, #1
 80073e4:	601a      	str	r2, [r3, #0]
 80073e6:	e007      	b.n	80073f8 <HAL_DMA_Abort+0x34c>
 80073e8:	687b      	ldr	r3, [r7, #4]
 80073ea:	681b      	ldr	r3, [r3, #0]
 80073ec:	681a      	ldr	r2, [r3, #0]
 80073ee:	687b      	ldr	r3, [r7, #4]
 80073f0:	681b      	ldr	r3, [r3, #0]
 80073f2:	f022 0201 	bic.w	r2, r2, #1
 80073f6:	601a      	str	r2, [r3, #0]
 80073f8:	e013      	b.n	8007422 <HAL_DMA_Abort+0x376>
 80073fa:	f7ff fcd9 	bl	8006db0 <HAL_GetTick>
 80073fe:	4602      	mov	r2, r0
 8007400:	693b      	ldr	r3, [r7, #16]
 8007402:	1ad3      	subs	r3, r2, r3
 8007404:	2b05      	cmp	r3, #5
 8007406:	d90c      	bls.n	8007422 <HAL_DMA_Abort+0x376>
 8007408:	687b      	ldr	r3, [r7, #4]
 800740a:	2220      	movs	r2, #32
 800740c:	655a      	str	r2, [r3, #84]	; 0x54
 800740e:	687b      	ldr	r3, [r7, #4]
 8007410:	2203      	movs	r2, #3
 8007412:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007416:	687b      	ldr	r3, [r7, #4]
 8007418:	2200      	movs	r2, #0
 800741a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800741e:	2301      	movs	r3, #1
 8007420:	e12d      	b.n	800767e <HAL_DMA_Abort+0x5d2>
 8007422:	697b      	ldr	r3, [r7, #20]
 8007424:	681b      	ldr	r3, [r3, #0]
 8007426:	f003 0301 	and.w	r3, r3, #1
 800742a:	2b00      	cmp	r3, #0
 800742c:	d1e5      	bne.n	80073fa <HAL_DMA_Abort+0x34e>
 800742e:	687b      	ldr	r3, [r7, #4]
 8007430:	681b      	ldr	r3, [r3, #0]
 8007432:	4a2f      	ldr	r2, [pc, #188]	; (80074f0 <HAL_DMA_Abort+0x444>)
 8007434:	4293      	cmp	r3, r2
 8007436:	d04a      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 8007438:	687b      	ldr	r3, [r7, #4]
 800743a:	681b      	ldr	r3, [r3, #0]
 800743c:	4a2d      	ldr	r2, [pc, #180]	; (80074f4 <HAL_DMA_Abort+0x448>)
 800743e:	4293      	cmp	r3, r2
 8007440:	d045      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 8007442:	687b      	ldr	r3, [r7, #4]
 8007444:	681b      	ldr	r3, [r3, #0]
 8007446:	4a2c      	ldr	r2, [pc, #176]	; (80074f8 <HAL_DMA_Abort+0x44c>)
 8007448:	4293      	cmp	r3, r2
 800744a:	d040      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 800744c:	687b      	ldr	r3, [r7, #4]
 800744e:	681b      	ldr	r3, [r3, #0]
 8007450:	4a2a      	ldr	r2, [pc, #168]	; (80074fc <HAL_DMA_Abort+0x450>)
 8007452:	4293      	cmp	r3, r2
 8007454:	d03b      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	681b      	ldr	r3, [r3, #0]
 800745a:	4a29      	ldr	r2, [pc, #164]	; (8007500 <HAL_DMA_Abort+0x454>)
 800745c:	4293      	cmp	r3, r2
 800745e:	d036      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 8007460:	687b      	ldr	r3, [r7, #4]
 8007462:	681b      	ldr	r3, [r3, #0]
 8007464:	4a27      	ldr	r2, [pc, #156]	; (8007504 <HAL_DMA_Abort+0x458>)
 8007466:	4293      	cmp	r3, r2
 8007468:	d031      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 800746a:	687b      	ldr	r3, [r7, #4]
 800746c:	681b      	ldr	r3, [r3, #0]
 800746e:	4a26      	ldr	r2, [pc, #152]	; (8007508 <HAL_DMA_Abort+0x45c>)
 8007470:	4293      	cmp	r3, r2
 8007472:	d02c      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 8007474:	687b      	ldr	r3, [r7, #4]
 8007476:	681b      	ldr	r3, [r3, #0]
 8007478:	4a24      	ldr	r2, [pc, #144]	; (800750c <HAL_DMA_Abort+0x460>)
 800747a:	4293      	cmp	r3, r2
 800747c:	d027      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 800747e:	687b      	ldr	r3, [r7, #4]
 8007480:	681b      	ldr	r3, [r3, #0]
 8007482:	4a23      	ldr	r2, [pc, #140]	; (8007510 <HAL_DMA_Abort+0x464>)
 8007484:	4293      	cmp	r3, r2
 8007486:	d022      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 8007488:	687b      	ldr	r3, [r7, #4]
 800748a:	681b      	ldr	r3, [r3, #0]
 800748c:	4a21      	ldr	r2, [pc, #132]	; (8007514 <HAL_DMA_Abort+0x468>)
 800748e:	4293      	cmp	r3, r2
 8007490:	d01d      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 8007492:	687b      	ldr	r3, [r7, #4]
 8007494:	681b      	ldr	r3, [r3, #0]
 8007496:	4a20      	ldr	r2, [pc, #128]	; (8007518 <HAL_DMA_Abort+0x46c>)
 8007498:	4293      	cmp	r3, r2
 800749a:	d018      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 800749c:	687b      	ldr	r3, [r7, #4]
 800749e:	681b      	ldr	r3, [r3, #0]
 80074a0:	4a1e      	ldr	r2, [pc, #120]	; (800751c <HAL_DMA_Abort+0x470>)
 80074a2:	4293      	cmp	r3, r2
 80074a4:	d013      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 80074a6:	687b      	ldr	r3, [r7, #4]
 80074a8:	681b      	ldr	r3, [r3, #0]
 80074aa:	4a1d      	ldr	r2, [pc, #116]	; (8007520 <HAL_DMA_Abort+0x474>)
 80074ac:	4293      	cmp	r3, r2
 80074ae:	d00e      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 80074b0:	687b      	ldr	r3, [r7, #4]
 80074b2:	681b      	ldr	r3, [r3, #0]
 80074b4:	4a1b      	ldr	r2, [pc, #108]	; (8007524 <HAL_DMA_Abort+0x478>)
 80074b6:	4293      	cmp	r3, r2
 80074b8:	d009      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 80074ba:	687b      	ldr	r3, [r7, #4]
 80074bc:	681b      	ldr	r3, [r3, #0]
 80074be:	4a1a      	ldr	r2, [pc, #104]	; (8007528 <HAL_DMA_Abort+0x47c>)
 80074c0:	4293      	cmp	r3, r2
 80074c2:	d004      	beq.n	80074ce <HAL_DMA_Abort+0x422>
 80074c4:	687b      	ldr	r3, [r7, #4]
 80074c6:	681b      	ldr	r3, [r3, #0]
 80074c8:	4a18      	ldr	r2, [pc, #96]	; (800752c <HAL_DMA_Abort+0x480>)
 80074ca:	4293      	cmp	r3, r2
 80074cc:	d101      	bne.n	80074d2 <HAL_DMA_Abort+0x426>
 80074ce:	2301      	movs	r3, #1
 80074d0:	e000      	b.n	80074d4 <HAL_DMA_Abort+0x428>
 80074d2:	2300      	movs	r3, #0
 80074d4:	2b00      	cmp	r3, #0
 80074d6:	d02b      	beq.n	8007530 <HAL_DMA_Abort+0x484>
 80074d8:	687b      	ldr	r3, [r7, #4]
 80074da:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80074dc:	60bb      	str	r3, [r7, #8]
 80074de:	687b      	ldr	r3, [r7, #4]
 80074e0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80074e2:	f003 031f 	and.w	r3, r3, #31
 80074e6:	223f      	movs	r2, #63	; 0x3f
 80074e8:	409a      	lsls	r2, r3
 80074ea:	68bb      	ldr	r3, [r7, #8]
 80074ec:	609a      	str	r2, [r3, #8]
 80074ee:	e02a      	b.n	8007546 <HAL_DMA_Abort+0x49a>
 80074f0:	40020010 	.word	0x40020010
 80074f4:	40020028 	.word	0x40020028
 80074f8:	40020040 	.word	0x40020040
 80074fc:	40020058 	.word	0x40020058
 8007500:	40020070 	.word	0x40020070
 8007504:	40020088 	.word	0x40020088
 8007508:	400200a0 	.word	0x400200a0
 800750c:	400200b8 	.word	0x400200b8
 8007510:	40020410 	.word	0x40020410
 8007514:	40020428 	.word	0x40020428
 8007518:	40020440 	.word	0x40020440
 800751c:	40020458 	.word	0x40020458
 8007520:	40020470 	.word	0x40020470
 8007524:	40020488 	.word	0x40020488
 8007528:	400204a0 	.word	0x400204a0
 800752c:	400204b8 	.word	0x400204b8
 8007530:	687b      	ldr	r3, [r7, #4]
 8007532:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007534:	60fb      	str	r3, [r7, #12]
 8007536:	687b      	ldr	r3, [r7, #4]
 8007538:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800753a:	f003 031f 	and.w	r3, r3, #31
 800753e:	2201      	movs	r2, #1
 8007540:	409a      	lsls	r2, r3
 8007542:	68fb      	ldr	r3, [r7, #12]
 8007544:	605a      	str	r2, [r3, #4]
 8007546:	687b      	ldr	r3, [r7, #4]
 8007548:	681b      	ldr	r3, [r3, #0]
 800754a:	4a4f      	ldr	r2, [pc, #316]	; (8007688 <HAL_DMA_Abort+0x5dc>)
 800754c:	4293      	cmp	r3, r2
 800754e:	d072      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 8007550:	687b      	ldr	r3, [r7, #4]
 8007552:	681b      	ldr	r3, [r3, #0]
 8007554:	4a4d      	ldr	r2, [pc, #308]	; (800768c <HAL_DMA_Abort+0x5e0>)
 8007556:	4293      	cmp	r3, r2
 8007558:	d06d      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 800755a:	687b      	ldr	r3, [r7, #4]
 800755c:	681b      	ldr	r3, [r3, #0]
 800755e:	4a4c      	ldr	r2, [pc, #304]	; (8007690 <HAL_DMA_Abort+0x5e4>)
 8007560:	4293      	cmp	r3, r2
 8007562:	d068      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 8007564:	687b      	ldr	r3, [r7, #4]
 8007566:	681b      	ldr	r3, [r3, #0]
 8007568:	4a4a      	ldr	r2, [pc, #296]	; (8007694 <HAL_DMA_Abort+0x5e8>)
 800756a:	4293      	cmp	r3, r2
 800756c:	d063      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 800756e:	687b      	ldr	r3, [r7, #4]
 8007570:	681b      	ldr	r3, [r3, #0]
 8007572:	4a49      	ldr	r2, [pc, #292]	; (8007698 <HAL_DMA_Abort+0x5ec>)
 8007574:	4293      	cmp	r3, r2
 8007576:	d05e      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 8007578:	687b      	ldr	r3, [r7, #4]
 800757a:	681b      	ldr	r3, [r3, #0]
 800757c:	4a47      	ldr	r2, [pc, #284]	; (800769c <HAL_DMA_Abort+0x5f0>)
 800757e:	4293      	cmp	r3, r2
 8007580:	d059      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 8007582:	687b      	ldr	r3, [r7, #4]
 8007584:	681b      	ldr	r3, [r3, #0]
 8007586:	4a46      	ldr	r2, [pc, #280]	; (80076a0 <HAL_DMA_Abort+0x5f4>)
 8007588:	4293      	cmp	r3, r2
 800758a:	d054      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 800758c:	687b      	ldr	r3, [r7, #4]
 800758e:	681b      	ldr	r3, [r3, #0]
 8007590:	4a44      	ldr	r2, [pc, #272]	; (80076a4 <HAL_DMA_Abort+0x5f8>)
 8007592:	4293      	cmp	r3, r2
 8007594:	d04f      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 8007596:	687b      	ldr	r3, [r7, #4]
 8007598:	681b      	ldr	r3, [r3, #0]
 800759a:	4a43      	ldr	r2, [pc, #268]	; (80076a8 <HAL_DMA_Abort+0x5fc>)
 800759c:	4293      	cmp	r3, r2
 800759e:	d04a      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 80075a0:	687b      	ldr	r3, [r7, #4]
 80075a2:	681b      	ldr	r3, [r3, #0]
 80075a4:	4a41      	ldr	r2, [pc, #260]	; (80076ac <HAL_DMA_Abort+0x600>)
 80075a6:	4293      	cmp	r3, r2
 80075a8:	d045      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 80075aa:	687b      	ldr	r3, [r7, #4]
 80075ac:	681b      	ldr	r3, [r3, #0]
 80075ae:	4a40      	ldr	r2, [pc, #256]	; (80076b0 <HAL_DMA_Abort+0x604>)
 80075b0:	4293      	cmp	r3, r2
 80075b2:	d040      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 80075b4:	687b      	ldr	r3, [r7, #4]
 80075b6:	681b      	ldr	r3, [r3, #0]
 80075b8:	4a3e      	ldr	r2, [pc, #248]	; (80076b4 <HAL_DMA_Abort+0x608>)
 80075ba:	4293      	cmp	r3, r2
 80075bc:	d03b      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 80075be:	687b      	ldr	r3, [r7, #4]
 80075c0:	681b      	ldr	r3, [r3, #0]
 80075c2:	4a3d      	ldr	r2, [pc, #244]	; (80076b8 <HAL_DMA_Abort+0x60c>)
 80075c4:	4293      	cmp	r3, r2
 80075c6:	d036      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 80075c8:	687b      	ldr	r3, [r7, #4]
 80075ca:	681b      	ldr	r3, [r3, #0]
 80075cc:	4a3b      	ldr	r2, [pc, #236]	; (80076bc <HAL_DMA_Abort+0x610>)
 80075ce:	4293      	cmp	r3, r2
 80075d0:	d031      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 80075d2:	687b      	ldr	r3, [r7, #4]
 80075d4:	681b      	ldr	r3, [r3, #0]
 80075d6:	4a3a      	ldr	r2, [pc, #232]	; (80076c0 <HAL_DMA_Abort+0x614>)
 80075d8:	4293      	cmp	r3, r2
 80075da:	d02c      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 80075dc:	687b      	ldr	r3, [r7, #4]
 80075de:	681b      	ldr	r3, [r3, #0]
 80075e0:	4a38      	ldr	r2, [pc, #224]	; (80076c4 <HAL_DMA_Abort+0x618>)
 80075e2:	4293      	cmp	r3, r2
 80075e4:	d027      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 80075e6:	687b      	ldr	r3, [r7, #4]
 80075e8:	681b      	ldr	r3, [r3, #0]
 80075ea:	4a37      	ldr	r2, [pc, #220]	; (80076c8 <HAL_DMA_Abort+0x61c>)
 80075ec:	4293      	cmp	r3, r2
 80075ee:	d022      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 80075f0:	687b      	ldr	r3, [r7, #4]
 80075f2:	681b      	ldr	r3, [r3, #0]
 80075f4:	4a35      	ldr	r2, [pc, #212]	; (80076cc <HAL_DMA_Abort+0x620>)
 80075f6:	4293      	cmp	r3, r2
 80075f8:	d01d      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 80075fa:	687b      	ldr	r3, [r7, #4]
 80075fc:	681b      	ldr	r3, [r3, #0]
 80075fe:	4a34      	ldr	r2, [pc, #208]	; (80076d0 <HAL_DMA_Abort+0x624>)
 8007600:	4293      	cmp	r3, r2
 8007602:	d018      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 8007604:	687b      	ldr	r3, [r7, #4]
 8007606:	681b      	ldr	r3, [r3, #0]
 8007608:	4a32      	ldr	r2, [pc, #200]	; (80076d4 <HAL_DMA_Abort+0x628>)
 800760a:	4293      	cmp	r3, r2
 800760c:	d013      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 800760e:	687b      	ldr	r3, [r7, #4]
 8007610:	681b      	ldr	r3, [r3, #0]
 8007612:	4a31      	ldr	r2, [pc, #196]	; (80076d8 <HAL_DMA_Abort+0x62c>)
 8007614:	4293      	cmp	r3, r2
 8007616:	d00e      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 8007618:	687b      	ldr	r3, [r7, #4]
 800761a:	681b      	ldr	r3, [r3, #0]
 800761c:	4a2f      	ldr	r2, [pc, #188]	; (80076dc <HAL_DMA_Abort+0x630>)
 800761e:	4293      	cmp	r3, r2
 8007620:	d009      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 8007622:	687b      	ldr	r3, [r7, #4]
 8007624:	681b      	ldr	r3, [r3, #0]
 8007626:	4a2e      	ldr	r2, [pc, #184]	; (80076e0 <HAL_DMA_Abort+0x634>)
 8007628:	4293      	cmp	r3, r2
 800762a:	d004      	beq.n	8007636 <HAL_DMA_Abort+0x58a>
 800762c:	687b      	ldr	r3, [r7, #4]
 800762e:	681b      	ldr	r3, [r3, #0]
 8007630:	4a2c      	ldr	r2, [pc, #176]	; (80076e4 <HAL_DMA_Abort+0x638>)
 8007632:	4293      	cmp	r3, r2
 8007634:	d101      	bne.n	800763a <HAL_DMA_Abort+0x58e>
 8007636:	2301      	movs	r3, #1
 8007638:	e000      	b.n	800763c <HAL_DMA_Abort+0x590>
 800763a:	2300      	movs	r3, #0
 800763c:	2b00      	cmp	r3, #0
 800763e:	d015      	beq.n	800766c <HAL_DMA_Abort+0x5c0>
 8007640:	687b      	ldr	r3, [r7, #4]
 8007642:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8007644:	687a      	ldr	r2, [r7, #4]
 8007646:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8007648:	605a      	str	r2, [r3, #4]
 800764a:	687b      	ldr	r3, [r7, #4]
 800764c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800764e:	2b00      	cmp	r3, #0
 8007650:	d00c      	beq.n	800766c <HAL_DMA_Abort+0x5c0>
 8007652:	687b      	ldr	r3, [r7, #4]
 8007654:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007656:	681a      	ldr	r2, [r3, #0]
 8007658:	687b      	ldr	r3, [r7, #4]
 800765a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800765c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007660:	601a      	str	r2, [r3, #0]
 8007662:	687b      	ldr	r3, [r7, #4]
 8007664:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007666:	687a      	ldr	r2, [r7, #4]
 8007668:	6f52      	ldr	r2, [r2, #116]	; 0x74
 800766a:	605a      	str	r2, [r3, #4]
 800766c:	687b      	ldr	r3, [r7, #4]
 800766e:	2201      	movs	r2, #1
 8007670:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007674:	687b      	ldr	r3, [r7, #4]
 8007676:	2200      	movs	r2, #0
 8007678:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800767c:	2300      	movs	r3, #0
 800767e:	4618      	mov	r0, r3
 8007680:	3718      	adds	r7, #24
 8007682:	46bd      	mov	sp, r7
 8007684:	bd80      	pop	{r7, pc}
 8007686:	bf00      	nop
 8007688:	40020010 	.word	0x40020010
 800768c:	40020028 	.word	0x40020028
 8007690:	40020040 	.word	0x40020040
 8007694:	40020058 	.word	0x40020058
 8007698:	40020070 	.word	0x40020070
 800769c:	40020088 	.word	0x40020088
 80076a0:	400200a0 	.word	0x400200a0
 80076a4:	400200b8 	.word	0x400200b8
 80076a8:	40020410 	.word	0x40020410
 80076ac:	40020428 	.word	0x40020428
 80076b0:	40020440 	.word	0x40020440
 80076b4:	40020458 	.word	0x40020458
 80076b8:	40020470 	.word	0x40020470
 80076bc:	40020488 	.word	0x40020488
 80076c0:	400204a0 	.word	0x400204a0
 80076c4:	400204b8 	.word	0x400204b8
 80076c8:	58025408 	.word	0x58025408
 80076cc:	5802541c 	.word	0x5802541c
 80076d0:	58025430 	.word	0x58025430
 80076d4:	58025444 	.word	0x58025444
 80076d8:	58025458 	.word	0x58025458
 80076dc:	5802546c 	.word	0x5802546c
 80076e0:	58025480 	.word	0x58025480
 80076e4:	58025494 	.word	0x58025494

080076e8 <HAL_DMA_Abort_IT>:
 80076e8:	b580      	push	{r7, lr}
 80076ea:	b084      	sub	sp, #16
 80076ec:	af00      	add	r7, sp, #0
 80076ee:	6078      	str	r0, [r7, #4]
 80076f0:	687b      	ldr	r3, [r7, #4]
 80076f2:	2b00      	cmp	r3, #0
 80076f4:	d101      	bne.n	80076fa <HAL_DMA_Abort_IT+0x12>
 80076f6:	2301      	movs	r3, #1
 80076f8:	e237      	b.n	8007b6a <HAL_DMA_Abort_IT+0x482>
 80076fa:	687b      	ldr	r3, [r7, #4]
 80076fc:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8007700:	b2db      	uxtb	r3, r3
 8007702:	2b02      	cmp	r3, #2
 8007704:	d004      	beq.n	8007710 <HAL_DMA_Abort_IT+0x28>
 8007706:	687b      	ldr	r3, [r7, #4]
 8007708:	2280      	movs	r2, #128	; 0x80
 800770a:	655a      	str	r2, [r3, #84]	; 0x54
 800770c:	2301      	movs	r3, #1
 800770e:	e22c      	b.n	8007b6a <HAL_DMA_Abort_IT+0x482>
 8007710:	687b      	ldr	r3, [r7, #4]
 8007712:	681b      	ldr	r3, [r3, #0]
 8007714:	4a5c      	ldr	r2, [pc, #368]	; (8007888 <HAL_DMA_Abort_IT+0x1a0>)
 8007716:	4293      	cmp	r3, r2
 8007718:	d04a      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 800771a:	687b      	ldr	r3, [r7, #4]
 800771c:	681b      	ldr	r3, [r3, #0]
 800771e:	4a5b      	ldr	r2, [pc, #364]	; (800788c <HAL_DMA_Abort_IT+0x1a4>)
 8007720:	4293      	cmp	r3, r2
 8007722:	d045      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 8007724:	687b      	ldr	r3, [r7, #4]
 8007726:	681b      	ldr	r3, [r3, #0]
 8007728:	4a59      	ldr	r2, [pc, #356]	; (8007890 <HAL_DMA_Abort_IT+0x1a8>)
 800772a:	4293      	cmp	r3, r2
 800772c:	d040      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 800772e:	687b      	ldr	r3, [r7, #4]
 8007730:	681b      	ldr	r3, [r3, #0]
 8007732:	4a58      	ldr	r2, [pc, #352]	; (8007894 <HAL_DMA_Abort_IT+0x1ac>)
 8007734:	4293      	cmp	r3, r2
 8007736:	d03b      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	681b      	ldr	r3, [r3, #0]
 800773c:	4a56      	ldr	r2, [pc, #344]	; (8007898 <HAL_DMA_Abort_IT+0x1b0>)
 800773e:	4293      	cmp	r3, r2
 8007740:	d036      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 8007742:	687b      	ldr	r3, [r7, #4]
 8007744:	681b      	ldr	r3, [r3, #0]
 8007746:	4a55      	ldr	r2, [pc, #340]	; (800789c <HAL_DMA_Abort_IT+0x1b4>)
 8007748:	4293      	cmp	r3, r2
 800774a:	d031      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 800774c:	687b      	ldr	r3, [r7, #4]
 800774e:	681b      	ldr	r3, [r3, #0]
 8007750:	4a53      	ldr	r2, [pc, #332]	; (80078a0 <HAL_DMA_Abort_IT+0x1b8>)
 8007752:	4293      	cmp	r3, r2
 8007754:	d02c      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 8007756:	687b      	ldr	r3, [r7, #4]
 8007758:	681b      	ldr	r3, [r3, #0]
 800775a:	4a52      	ldr	r2, [pc, #328]	; (80078a4 <HAL_DMA_Abort_IT+0x1bc>)
 800775c:	4293      	cmp	r3, r2
 800775e:	d027      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 8007760:	687b      	ldr	r3, [r7, #4]
 8007762:	681b      	ldr	r3, [r3, #0]
 8007764:	4a50      	ldr	r2, [pc, #320]	; (80078a8 <HAL_DMA_Abort_IT+0x1c0>)
 8007766:	4293      	cmp	r3, r2
 8007768:	d022      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 800776a:	687b      	ldr	r3, [r7, #4]
 800776c:	681b      	ldr	r3, [r3, #0]
 800776e:	4a4f      	ldr	r2, [pc, #316]	; (80078ac <HAL_DMA_Abort_IT+0x1c4>)
 8007770:	4293      	cmp	r3, r2
 8007772:	d01d      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 8007774:	687b      	ldr	r3, [r7, #4]
 8007776:	681b      	ldr	r3, [r3, #0]
 8007778:	4a4d      	ldr	r2, [pc, #308]	; (80078b0 <HAL_DMA_Abort_IT+0x1c8>)
 800777a:	4293      	cmp	r3, r2
 800777c:	d018      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 800777e:	687b      	ldr	r3, [r7, #4]
 8007780:	681b      	ldr	r3, [r3, #0]
 8007782:	4a4c      	ldr	r2, [pc, #304]	; (80078b4 <HAL_DMA_Abort_IT+0x1cc>)
 8007784:	4293      	cmp	r3, r2
 8007786:	d013      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 8007788:	687b      	ldr	r3, [r7, #4]
 800778a:	681b      	ldr	r3, [r3, #0]
 800778c:	4a4a      	ldr	r2, [pc, #296]	; (80078b8 <HAL_DMA_Abort_IT+0x1d0>)
 800778e:	4293      	cmp	r3, r2
 8007790:	d00e      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 8007792:	687b      	ldr	r3, [r7, #4]
 8007794:	681b      	ldr	r3, [r3, #0]
 8007796:	4a49      	ldr	r2, [pc, #292]	; (80078bc <HAL_DMA_Abort_IT+0x1d4>)
 8007798:	4293      	cmp	r3, r2
 800779a:	d009      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 800779c:	687b      	ldr	r3, [r7, #4]
 800779e:	681b      	ldr	r3, [r3, #0]
 80077a0:	4a47      	ldr	r2, [pc, #284]	; (80078c0 <HAL_DMA_Abort_IT+0x1d8>)
 80077a2:	4293      	cmp	r3, r2
 80077a4:	d004      	beq.n	80077b0 <HAL_DMA_Abort_IT+0xc8>
 80077a6:	687b      	ldr	r3, [r7, #4]
 80077a8:	681b      	ldr	r3, [r3, #0]
 80077aa:	4a46      	ldr	r2, [pc, #280]	; (80078c4 <HAL_DMA_Abort_IT+0x1dc>)
 80077ac:	4293      	cmp	r3, r2
 80077ae:	d101      	bne.n	80077b4 <HAL_DMA_Abort_IT+0xcc>
 80077b0:	2301      	movs	r3, #1
 80077b2:	e000      	b.n	80077b6 <HAL_DMA_Abort_IT+0xce>
 80077b4:	2300      	movs	r3, #0
 80077b6:	2b00      	cmp	r3, #0
 80077b8:	f000 8086 	beq.w	80078c8 <HAL_DMA_Abort_IT+0x1e0>
 80077bc:	687b      	ldr	r3, [r7, #4]
 80077be:	2204      	movs	r2, #4
 80077c0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80077c4:	687b      	ldr	r3, [r7, #4]
 80077c6:	681b      	ldr	r3, [r3, #0]
 80077c8:	4a2f      	ldr	r2, [pc, #188]	; (8007888 <HAL_DMA_Abort_IT+0x1a0>)
 80077ca:	4293      	cmp	r3, r2
 80077cc:	d04a      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 80077ce:	687b      	ldr	r3, [r7, #4]
 80077d0:	681b      	ldr	r3, [r3, #0]
 80077d2:	4a2e      	ldr	r2, [pc, #184]	; (800788c <HAL_DMA_Abort_IT+0x1a4>)
 80077d4:	4293      	cmp	r3, r2
 80077d6:	d045      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 80077d8:	687b      	ldr	r3, [r7, #4]
 80077da:	681b      	ldr	r3, [r3, #0]
 80077dc:	4a2c      	ldr	r2, [pc, #176]	; (8007890 <HAL_DMA_Abort_IT+0x1a8>)
 80077de:	4293      	cmp	r3, r2
 80077e0:	d040      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 80077e2:	687b      	ldr	r3, [r7, #4]
 80077e4:	681b      	ldr	r3, [r3, #0]
 80077e6:	4a2b      	ldr	r2, [pc, #172]	; (8007894 <HAL_DMA_Abort_IT+0x1ac>)
 80077e8:	4293      	cmp	r3, r2
 80077ea:	d03b      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 80077ec:	687b      	ldr	r3, [r7, #4]
 80077ee:	681b      	ldr	r3, [r3, #0]
 80077f0:	4a29      	ldr	r2, [pc, #164]	; (8007898 <HAL_DMA_Abort_IT+0x1b0>)
 80077f2:	4293      	cmp	r3, r2
 80077f4:	d036      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 80077f6:	687b      	ldr	r3, [r7, #4]
 80077f8:	681b      	ldr	r3, [r3, #0]
 80077fa:	4a28      	ldr	r2, [pc, #160]	; (800789c <HAL_DMA_Abort_IT+0x1b4>)
 80077fc:	4293      	cmp	r3, r2
 80077fe:	d031      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 8007800:	687b      	ldr	r3, [r7, #4]
 8007802:	681b      	ldr	r3, [r3, #0]
 8007804:	4a26      	ldr	r2, [pc, #152]	; (80078a0 <HAL_DMA_Abort_IT+0x1b8>)
 8007806:	4293      	cmp	r3, r2
 8007808:	d02c      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 800780a:	687b      	ldr	r3, [r7, #4]
 800780c:	681b      	ldr	r3, [r3, #0]
 800780e:	4a25      	ldr	r2, [pc, #148]	; (80078a4 <HAL_DMA_Abort_IT+0x1bc>)
 8007810:	4293      	cmp	r3, r2
 8007812:	d027      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 8007814:	687b      	ldr	r3, [r7, #4]
 8007816:	681b      	ldr	r3, [r3, #0]
 8007818:	4a23      	ldr	r2, [pc, #140]	; (80078a8 <HAL_DMA_Abort_IT+0x1c0>)
 800781a:	4293      	cmp	r3, r2
 800781c:	d022      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 800781e:	687b      	ldr	r3, [r7, #4]
 8007820:	681b      	ldr	r3, [r3, #0]
 8007822:	4a22      	ldr	r2, [pc, #136]	; (80078ac <HAL_DMA_Abort_IT+0x1c4>)
 8007824:	4293      	cmp	r3, r2
 8007826:	d01d      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 8007828:	687b      	ldr	r3, [r7, #4]
 800782a:	681b      	ldr	r3, [r3, #0]
 800782c:	4a20      	ldr	r2, [pc, #128]	; (80078b0 <HAL_DMA_Abort_IT+0x1c8>)
 800782e:	4293      	cmp	r3, r2
 8007830:	d018      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 8007832:	687b      	ldr	r3, [r7, #4]
 8007834:	681b      	ldr	r3, [r3, #0]
 8007836:	4a1f      	ldr	r2, [pc, #124]	; (80078b4 <HAL_DMA_Abort_IT+0x1cc>)
 8007838:	4293      	cmp	r3, r2
 800783a:	d013      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 800783c:	687b      	ldr	r3, [r7, #4]
 800783e:	681b      	ldr	r3, [r3, #0]
 8007840:	4a1d      	ldr	r2, [pc, #116]	; (80078b8 <HAL_DMA_Abort_IT+0x1d0>)
 8007842:	4293      	cmp	r3, r2
 8007844:	d00e      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 8007846:	687b      	ldr	r3, [r7, #4]
 8007848:	681b      	ldr	r3, [r3, #0]
 800784a:	4a1c      	ldr	r2, [pc, #112]	; (80078bc <HAL_DMA_Abort_IT+0x1d4>)
 800784c:	4293      	cmp	r3, r2
 800784e:	d009      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 8007850:	687b      	ldr	r3, [r7, #4]
 8007852:	681b      	ldr	r3, [r3, #0]
 8007854:	4a1a      	ldr	r2, [pc, #104]	; (80078c0 <HAL_DMA_Abort_IT+0x1d8>)
 8007856:	4293      	cmp	r3, r2
 8007858:	d004      	beq.n	8007864 <HAL_DMA_Abort_IT+0x17c>
 800785a:	687b      	ldr	r3, [r7, #4]
 800785c:	681b      	ldr	r3, [r3, #0]
 800785e:	4a19      	ldr	r2, [pc, #100]	; (80078c4 <HAL_DMA_Abort_IT+0x1dc>)
 8007860:	4293      	cmp	r3, r2
 8007862:	d108      	bne.n	8007876 <HAL_DMA_Abort_IT+0x18e>
 8007864:	687b      	ldr	r3, [r7, #4]
 8007866:	681b      	ldr	r3, [r3, #0]
 8007868:	681a      	ldr	r2, [r3, #0]
 800786a:	687b      	ldr	r3, [r7, #4]
 800786c:	681b      	ldr	r3, [r3, #0]
 800786e:	f022 0201 	bic.w	r2, r2, #1
 8007872:	601a      	str	r2, [r3, #0]
 8007874:	e178      	b.n	8007b68 <HAL_DMA_Abort_IT+0x480>
 8007876:	687b      	ldr	r3, [r7, #4]
 8007878:	681b      	ldr	r3, [r3, #0]
 800787a:	681a      	ldr	r2, [r3, #0]
 800787c:	687b      	ldr	r3, [r7, #4]
 800787e:	681b      	ldr	r3, [r3, #0]
 8007880:	f022 0201 	bic.w	r2, r2, #1
 8007884:	601a      	str	r2, [r3, #0]
 8007886:	e16f      	b.n	8007b68 <HAL_DMA_Abort_IT+0x480>
 8007888:	40020010 	.word	0x40020010
 800788c:	40020028 	.word	0x40020028
 8007890:	40020040 	.word	0x40020040
 8007894:	40020058 	.word	0x40020058
 8007898:	40020070 	.word	0x40020070
 800789c:	40020088 	.word	0x40020088
 80078a0:	400200a0 	.word	0x400200a0
 80078a4:	400200b8 	.word	0x400200b8
 80078a8:	40020410 	.word	0x40020410
 80078ac:	40020428 	.word	0x40020428
 80078b0:	40020440 	.word	0x40020440
 80078b4:	40020458 	.word	0x40020458
 80078b8:	40020470 	.word	0x40020470
 80078bc:	40020488 	.word	0x40020488
 80078c0:	400204a0 	.word	0x400204a0
 80078c4:	400204b8 	.word	0x400204b8
 80078c8:	687b      	ldr	r3, [r7, #4]
 80078ca:	681b      	ldr	r3, [r3, #0]
 80078cc:	681a      	ldr	r2, [r3, #0]
 80078ce:	687b      	ldr	r3, [r7, #4]
 80078d0:	681b      	ldr	r3, [r3, #0]
 80078d2:	f022 020e 	bic.w	r2, r2, #14
 80078d6:	601a      	str	r2, [r3, #0]
 80078d8:	687b      	ldr	r3, [r7, #4]
 80078da:	681b      	ldr	r3, [r3, #0]
 80078dc:	4a6c      	ldr	r2, [pc, #432]	; (8007a90 <HAL_DMA_Abort_IT+0x3a8>)
 80078de:	4293      	cmp	r3, r2
 80078e0:	d04a      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 80078e2:	687b      	ldr	r3, [r7, #4]
 80078e4:	681b      	ldr	r3, [r3, #0]
 80078e6:	4a6b      	ldr	r2, [pc, #428]	; (8007a94 <HAL_DMA_Abort_IT+0x3ac>)
 80078e8:	4293      	cmp	r3, r2
 80078ea:	d045      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	681b      	ldr	r3, [r3, #0]
 80078f0:	4a69      	ldr	r2, [pc, #420]	; (8007a98 <HAL_DMA_Abort_IT+0x3b0>)
 80078f2:	4293      	cmp	r3, r2
 80078f4:	d040      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 80078f6:	687b      	ldr	r3, [r7, #4]
 80078f8:	681b      	ldr	r3, [r3, #0]
 80078fa:	4a68      	ldr	r2, [pc, #416]	; (8007a9c <HAL_DMA_Abort_IT+0x3b4>)
 80078fc:	4293      	cmp	r3, r2
 80078fe:	d03b      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 8007900:	687b      	ldr	r3, [r7, #4]
 8007902:	681b      	ldr	r3, [r3, #0]
 8007904:	4a66      	ldr	r2, [pc, #408]	; (8007aa0 <HAL_DMA_Abort_IT+0x3b8>)
 8007906:	4293      	cmp	r3, r2
 8007908:	d036      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 800790a:	687b      	ldr	r3, [r7, #4]
 800790c:	681b      	ldr	r3, [r3, #0]
 800790e:	4a65      	ldr	r2, [pc, #404]	; (8007aa4 <HAL_DMA_Abort_IT+0x3bc>)
 8007910:	4293      	cmp	r3, r2
 8007912:	d031      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	681b      	ldr	r3, [r3, #0]
 8007918:	4a63      	ldr	r2, [pc, #396]	; (8007aa8 <HAL_DMA_Abort_IT+0x3c0>)
 800791a:	4293      	cmp	r3, r2
 800791c:	d02c      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 800791e:	687b      	ldr	r3, [r7, #4]
 8007920:	681b      	ldr	r3, [r3, #0]
 8007922:	4a62      	ldr	r2, [pc, #392]	; (8007aac <HAL_DMA_Abort_IT+0x3c4>)
 8007924:	4293      	cmp	r3, r2
 8007926:	d027      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 8007928:	687b      	ldr	r3, [r7, #4]
 800792a:	681b      	ldr	r3, [r3, #0]
 800792c:	4a60      	ldr	r2, [pc, #384]	; (8007ab0 <HAL_DMA_Abort_IT+0x3c8>)
 800792e:	4293      	cmp	r3, r2
 8007930:	d022      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	681b      	ldr	r3, [r3, #0]
 8007936:	4a5f      	ldr	r2, [pc, #380]	; (8007ab4 <HAL_DMA_Abort_IT+0x3cc>)
 8007938:	4293      	cmp	r3, r2
 800793a:	d01d      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 800793c:	687b      	ldr	r3, [r7, #4]
 800793e:	681b      	ldr	r3, [r3, #0]
 8007940:	4a5d      	ldr	r2, [pc, #372]	; (8007ab8 <HAL_DMA_Abort_IT+0x3d0>)
 8007942:	4293      	cmp	r3, r2
 8007944:	d018      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 8007946:	687b      	ldr	r3, [r7, #4]
 8007948:	681b      	ldr	r3, [r3, #0]
 800794a:	4a5c      	ldr	r2, [pc, #368]	; (8007abc <HAL_DMA_Abort_IT+0x3d4>)
 800794c:	4293      	cmp	r3, r2
 800794e:	d013      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 8007950:	687b      	ldr	r3, [r7, #4]
 8007952:	681b      	ldr	r3, [r3, #0]
 8007954:	4a5a      	ldr	r2, [pc, #360]	; (8007ac0 <HAL_DMA_Abort_IT+0x3d8>)
 8007956:	4293      	cmp	r3, r2
 8007958:	d00e      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 800795a:	687b      	ldr	r3, [r7, #4]
 800795c:	681b      	ldr	r3, [r3, #0]
 800795e:	4a59      	ldr	r2, [pc, #356]	; (8007ac4 <HAL_DMA_Abort_IT+0x3dc>)
 8007960:	4293      	cmp	r3, r2
 8007962:	d009      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 8007964:	687b      	ldr	r3, [r7, #4]
 8007966:	681b      	ldr	r3, [r3, #0]
 8007968:	4a57      	ldr	r2, [pc, #348]	; (8007ac8 <HAL_DMA_Abort_IT+0x3e0>)
 800796a:	4293      	cmp	r3, r2
 800796c:	d004      	beq.n	8007978 <HAL_DMA_Abort_IT+0x290>
 800796e:	687b      	ldr	r3, [r7, #4]
 8007970:	681b      	ldr	r3, [r3, #0]
 8007972:	4a56      	ldr	r2, [pc, #344]	; (8007acc <HAL_DMA_Abort_IT+0x3e4>)
 8007974:	4293      	cmp	r3, r2
 8007976:	d108      	bne.n	800798a <HAL_DMA_Abort_IT+0x2a2>
 8007978:	687b      	ldr	r3, [r7, #4]
 800797a:	681b      	ldr	r3, [r3, #0]
 800797c:	681a      	ldr	r2, [r3, #0]
 800797e:	687b      	ldr	r3, [r7, #4]
 8007980:	681b      	ldr	r3, [r3, #0]
 8007982:	f022 0201 	bic.w	r2, r2, #1
 8007986:	601a      	str	r2, [r3, #0]
 8007988:	e007      	b.n	800799a <HAL_DMA_Abort_IT+0x2b2>
 800798a:	687b      	ldr	r3, [r7, #4]
 800798c:	681b      	ldr	r3, [r3, #0]
 800798e:	681a      	ldr	r2, [r3, #0]
 8007990:	687b      	ldr	r3, [r7, #4]
 8007992:	681b      	ldr	r3, [r3, #0]
 8007994:	f022 0201 	bic.w	r2, r2, #1
 8007998:	601a      	str	r2, [r3, #0]
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	681b      	ldr	r3, [r3, #0]
 800799e:	4a3c      	ldr	r2, [pc, #240]	; (8007a90 <HAL_DMA_Abort_IT+0x3a8>)
 80079a0:	4293      	cmp	r3, r2
 80079a2:	d072      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 80079a4:	687b      	ldr	r3, [r7, #4]
 80079a6:	681b      	ldr	r3, [r3, #0]
 80079a8:	4a3a      	ldr	r2, [pc, #232]	; (8007a94 <HAL_DMA_Abort_IT+0x3ac>)
 80079aa:	4293      	cmp	r3, r2
 80079ac:	d06d      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 80079ae:	687b      	ldr	r3, [r7, #4]
 80079b0:	681b      	ldr	r3, [r3, #0]
 80079b2:	4a39      	ldr	r2, [pc, #228]	; (8007a98 <HAL_DMA_Abort_IT+0x3b0>)
 80079b4:	4293      	cmp	r3, r2
 80079b6:	d068      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 80079b8:	687b      	ldr	r3, [r7, #4]
 80079ba:	681b      	ldr	r3, [r3, #0]
 80079bc:	4a37      	ldr	r2, [pc, #220]	; (8007a9c <HAL_DMA_Abort_IT+0x3b4>)
 80079be:	4293      	cmp	r3, r2
 80079c0:	d063      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 80079c2:	687b      	ldr	r3, [r7, #4]
 80079c4:	681b      	ldr	r3, [r3, #0]
 80079c6:	4a36      	ldr	r2, [pc, #216]	; (8007aa0 <HAL_DMA_Abort_IT+0x3b8>)
 80079c8:	4293      	cmp	r3, r2
 80079ca:	d05e      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 80079cc:	687b      	ldr	r3, [r7, #4]
 80079ce:	681b      	ldr	r3, [r3, #0]
 80079d0:	4a34      	ldr	r2, [pc, #208]	; (8007aa4 <HAL_DMA_Abort_IT+0x3bc>)
 80079d2:	4293      	cmp	r3, r2
 80079d4:	d059      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 80079d6:	687b      	ldr	r3, [r7, #4]
 80079d8:	681b      	ldr	r3, [r3, #0]
 80079da:	4a33      	ldr	r2, [pc, #204]	; (8007aa8 <HAL_DMA_Abort_IT+0x3c0>)
 80079dc:	4293      	cmp	r3, r2
 80079de:	d054      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 80079e0:	687b      	ldr	r3, [r7, #4]
 80079e2:	681b      	ldr	r3, [r3, #0]
 80079e4:	4a31      	ldr	r2, [pc, #196]	; (8007aac <HAL_DMA_Abort_IT+0x3c4>)
 80079e6:	4293      	cmp	r3, r2
 80079e8:	d04f      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 80079ea:	687b      	ldr	r3, [r7, #4]
 80079ec:	681b      	ldr	r3, [r3, #0]
 80079ee:	4a30      	ldr	r2, [pc, #192]	; (8007ab0 <HAL_DMA_Abort_IT+0x3c8>)
 80079f0:	4293      	cmp	r3, r2
 80079f2:	d04a      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 80079f4:	687b      	ldr	r3, [r7, #4]
 80079f6:	681b      	ldr	r3, [r3, #0]
 80079f8:	4a2e      	ldr	r2, [pc, #184]	; (8007ab4 <HAL_DMA_Abort_IT+0x3cc>)
 80079fa:	4293      	cmp	r3, r2
 80079fc:	d045      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 80079fe:	687b      	ldr	r3, [r7, #4]
 8007a00:	681b      	ldr	r3, [r3, #0]
 8007a02:	4a2d      	ldr	r2, [pc, #180]	; (8007ab8 <HAL_DMA_Abort_IT+0x3d0>)
 8007a04:	4293      	cmp	r3, r2
 8007a06:	d040      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 8007a08:	687b      	ldr	r3, [r7, #4]
 8007a0a:	681b      	ldr	r3, [r3, #0]
 8007a0c:	4a2b      	ldr	r2, [pc, #172]	; (8007abc <HAL_DMA_Abort_IT+0x3d4>)
 8007a0e:	4293      	cmp	r3, r2
 8007a10:	d03b      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 8007a12:	687b      	ldr	r3, [r7, #4]
 8007a14:	681b      	ldr	r3, [r3, #0]
 8007a16:	4a2a      	ldr	r2, [pc, #168]	; (8007ac0 <HAL_DMA_Abort_IT+0x3d8>)
 8007a18:	4293      	cmp	r3, r2
 8007a1a:	d036      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 8007a1c:	687b      	ldr	r3, [r7, #4]
 8007a1e:	681b      	ldr	r3, [r3, #0]
 8007a20:	4a28      	ldr	r2, [pc, #160]	; (8007ac4 <HAL_DMA_Abort_IT+0x3dc>)
 8007a22:	4293      	cmp	r3, r2
 8007a24:	d031      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 8007a26:	687b      	ldr	r3, [r7, #4]
 8007a28:	681b      	ldr	r3, [r3, #0]
 8007a2a:	4a27      	ldr	r2, [pc, #156]	; (8007ac8 <HAL_DMA_Abort_IT+0x3e0>)
 8007a2c:	4293      	cmp	r3, r2
 8007a2e:	d02c      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 8007a30:	687b      	ldr	r3, [r7, #4]
 8007a32:	681b      	ldr	r3, [r3, #0]
 8007a34:	4a25      	ldr	r2, [pc, #148]	; (8007acc <HAL_DMA_Abort_IT+0x3e4>)
 8007a36:	4293      	cmp	r3, r2
 8007a38:	d027      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 8007a3a:	687b      	ldr	r3, [r7, #4]
 8007a3c:	681b      	ldr	r3, [r3, #0]
 8007a3e:	4a24      	ldr	r2, [pc, #144]	; (8007ad0 <HAL_DMA_Abort_IT+0x3e8>)
 8007a40:	4293      	cmp	r3, r2
 8007a42:	d022      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 8007a44:	687b      	ldr	r3, [r7, #4]
 8007a46:	681b      	ldr	r3, [r3, #0]
 8007a48:	4a22      	ldr	r2, [pc, #136]	; (8007ad4 <HAL_DMA_Abort_IT+0x3ec>)
 8007a4a:	4293      	cmp	r3, r2
 8007a4c:	d01d      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 8007a4e:	687b      	ldr	r3, [r7, #4]
 8007a50:	681b      	ldr	r3, [r3, #0]
 8007a52:	4a21      	ldr	r2, [pc, #132]	; (8007ad8 <HAL_DMA_Abort_IT+0x3f0>)
 8007a54:	4293      	cmp	r3, r2
 8007a56:	d018      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 8007a58:	687b      	ldr	r3, [r7, #4]
 8007a5a:	681b      	ldr	r3, [r3, #0]
 8007a5c:	4a1f      	ldr	r2, [pc, #124]	; (8007adc <HAL_DMA_Abort_IT+0x3f4>)
 8007a5e:	4293      	cmp	r3, r2
 8007a60:	d013      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 8007a62:	687b      	ldr	r3, [r7, #4]
 8007a64:	681b      	ldr	r3, [r3, #0]
 8007a66:	4a1e      	ldr	r2, [pc, #120]	; (8007ae0 <HAL_DMA_Abort_IT+0x3f8>)
 8007a68:	4293      	cmp	r3, r2
 8007a6a:	d00e      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 8007a6c:	687b      	ldr	r3, [r7, #4]
 8007a6e:	681b      	ldr	r3, [r3, #0]
 8007a70:	4a1c      	ldr	r2, [pc, #112]	; (8007ae4 <HAL_DMA_Abort_IT+0x3fc>)
 8007a72:	4293      	cmp	r3, r2
 8007a74:	d009      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 8007a76:	687b      	ldr	r3, [r7, #4]
 8007a78:	681b      	ldr	r3, [r3, #0]
 8007a7a:	4a1b      	ldr	r2, [pc, #108]	; (8007ae8 <HAL_DMA_Abort_IT+0x400>)
 8007a7c:	4293      	cmp	r3, r2
 8007a7e:	d004      	beq.n	8007a8a <HAL_DMA_Abort_IT+0x3a2>
 8007a80:	687b      	ldr	r3, [r7, #4]
 8007a82:	681b      	ldr	r3, [r3, #0]
 8007a84:	4a19      	ldr	r2, [pc, #100]	; (8007aec <HAL_DMA_Abort_IT+0x404>)
 8007a86:	4293      	cmp	r3, r2
 8007a88:	d132      	bne.n	8007af0 <HAL_DMA_Abort_IT+0x408>
 8007a8a:	2301      	movs	r3, #1
 8007a8c:	e031      	b.n	8007af2 <HAL_DMA_Abort_IT+0x40a>
 8007a8e:	bf00      	nop
 8007a90:	40020010 	.word	0x40020010
 8007a94:	40020028 	.word	0x40020028
 8007a98:	40020040 	.word	0x40020040
 8007a9c:	40020058 	.word	0x40020058
 8007aa0:	40020070 	.word	0x40020070
 8007aa4:	40020088 	.word	0x40020088
 8007aa8:	400200a0 	.word	0x400200a0
 8007aac:	400200b8 	.word	0x400200b8
 8007ab0:	40020410 	.word	0x40020410
 8007ab4:	40020428 	.word	0x40020428
 8007ab8:	40020440 	.word	0x40020440
 8007abc:	40020458 	.word	0x40020458
 8007ac0:	40020470 	.word	0x40020470
 8007ac4:	40020488 	.word	0x40020488
 8007ac8:	400204a0 	.word	0x400204a0
 8007acc:	400204b8 	.word	0x400204b8
 8007ad0:	58025408 	.word	0x58025408
 8007ad4:	5802541c 	.word	0x5802541c
 8007ad8:	58025430 	.word	0x58025430
 8007adc:	58025444 	.word	0x58025444
 8007ae0:	58025458 	.word	0x58025458
 8007ae4:	5802546c 	.word	0x5802546c
 8007ae8:	58025480 	.word	0x58025480
 8007aec:	58025494 	.word	0x58025494
 8007af0:	2300      	movs	r3, #0
 8007af2:	2b00      	cmp	r3, #0
 8007af4:	d028      	beq.n	8007b48 <HAL_DMA_Abort_IT+0x460>
 8007af6:	687b      	ldr	r3, [r7, #4]
 8007af8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007afa:	681a      	ldr	r2, [r3, #0]
 8007afc:	687b      	ldr	r3, [r7, #4]
 8007afe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007b00:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007b04:	601a      	str	r2, [r3, #0]
 8007b06:	687b      	ldr	r3, [r7, #4]
 8007b08:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007b0a:	60fb      	str	r3, [r7, #12]
 8007b0c:	687b      	ldr	r3, [r7, #4]
 8007b0e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007b10:	f003 031f 	and.w	r3, r3, #31
 8007b14:	2201      	movs	r2, #1
 8007b16:	409a      	lsls	r2, r3
 8007b18:	68fb      	ldr	r3, [r7, #12]
 8007b1a:	605a      	str	r2, [r3, #4]
 8007b1c:	687b      	ldr	r3, [r7, #4]
 8007b1e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8007b20:	687a      	ldr	r2, [r7, #4]
 8007b22:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8007b24:	605a      	str	r2, [r3, #4]
 8007b26:	687b      	ldr	r3, [r7, #4]
 8007b28:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007b2a:	2b00      	cmp	r3, #0
 8007b2c:	d00c      	beq.n	8007b48 <HAL_DMA_Abort_IT+0x460>
 8007b2e:	687b      	ldr	r3, [r7, #4]
 8007b30:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007b32:	681a      	ldr	r2, [r3, #0]
 8007b34:	687b      	ldr	r3, [r7, #4]
 8007b36:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007b38:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007b3c:	601a      	str	r2, [r3, #0]
 8007b3e:	687b      	ldr	r3, [r7, #4]
 8007b40:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007b42:	687a      	ldr	r2, [r7, #4]
 8007b44:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8007b46:	605a      	str	r2, [r3, #4]
 8007b48:	687b      	ldr	r3, [r7, #4]
 8007b4a:	2201      	movs	r2, #1
 8007b4c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007b50:	687b      	ldr	r3, [r7, #4]
 8007b52:	2200      	movs	r2, #0
 8007b54:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007b58:	687b      	ldr	r3, [r7, #4]
 8007b5a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007b5c:	2b00      	cmp	r3, #0
 8007b5e:	d003      	beq.n	8007b68 <HAL_DMA_Abort_IT+0x480>
 8007b60:	687b      	ldr	r3, [r7, #4]
 8007b62:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007b64:	6878      	ldr	r0, [r7, #4]
 8007b66:	4798      	blx	r3
 8007b68:	2300      	movs	r3, #0
 8007b6a:	4618      	mov	r0, r3
 8007b6c:	3710      	adds	r7, #16
 8007b6e:	46bd      	mov	sp, r7
 8007b70:	bd80      	pop	{r7, pc}
 8007b72:	bf00      	nop

08007b74 <HAL_GPIO_Init>:
 8007b74:	b480      	push	{r7}
 8007b76:	b089      	sub	sp, #36	; 0x24
 8007b78:	af00      	add	r7, sp, #0
 8007b7a:	6078      	str	r0, [r7, #4]
 8007b7c:	6039      	str	r1, [r7, #0]
 8007b7e:	2300      	movs	r3, #0
 8007b80:	61fb      	str	r3, [r7, #28]
 8007b82:	4b89      	ldr	r3, [pc, #548]	; (8007da8 <HAL_GPIO_Init+0x234>)
 8007b84:	617b      	str	r3, [r7, #20]
 8007b86:	e194      	b.n	8007eb2 <HAL_GPIO_Init+0x33e>
 8007b88:	683b      	ldr	r3, [r7, #0]
 8007b8a:	681a      	ldr	r2, [r3, #0]
 8007b8c:	2101      	movs	r1, #1
 8007b8e:	69fb      	ldr	r3, [r7, #28]
 8007b90:	fa01 f303 	lsl.w	r3, r1, r3
 8007b94:	4013      	ands	r3, r2
 8007b96:	613b      	str	r3, [r7, #16]
 8007b98:	693b      	ldr	r3, [r7, #16]
 8007b9a:	2b00      	cmp	r3, #0
 8007b9c:	f000 8186 	beq.w	8007eac <HAL_GPIO_Init+0x338>
 8007ba0:	683b      	ldr	r3, [r7, #0]
 8007ba2:	685b      	ldr	r3, [r3, #4]
 8007ba4:	f003 0303 	and.w	r3, r3, #3
 8007ba8:	2b01      	cmp	r3, #1
 8007baa:	d005      	beq.n	8007bb8 <HAL_GPIO_Init+0x44>
 8007bac:	683b      	ldr	r3, [r7, #0]
 8007bae:	685b      	ldr	r3, [r3, #4]
 8007bb0:	f003 0303 	and.w	r3, r3, #3
 8007bb4:	2b02      	cmp	r3, #2
 8007bb6:	d130      	bne.n	8007c1a <HAL_GPIO_Init+0xa6>
 8007bb8:	687b      	ldr	r3, [r7, #4]
 8007bba:	689b      	ldr	r3, [r3, #8]
 8007bbc:	61bb      	str	r3, [r7, #24]
 8007bbe:	69fb      	ldr	r3, [r7, #28]
 8007bc0:	005b      	lsls	r3, r3, #1
 8007bc2:	2203      	movs	r2, #3
 8007bc4:	fa02 f303 	lsl.w	r3, r2, r3
 8007bc8:	43db      	mvns	r3, r3
 8007bca:	69ba      	ldr	r2, [r7, #24]
 8007bcc:	4013      	ands	r3, r2
 8007bce:	61bb      	str	r3, [r7, #24]
 8007bd0:	683b      	ldr	r3, [r7, #0]
 8007bd2:	68da      	ldr	r2, [r3, #12]
 8007bd4:	69fb      	ldr	r3, [r7, #28]
 8007bd6:	005b      	lsls	r3, r3, #1
 8007bd8:	fa02 f303 	lsl.w	r3, r2, r3
 8007bdc:	69ba      	ldr	r2, [r7, #24]
 8007bde:	4313      	orrs	r3, r2
 8007be0:	61bb      	str	r3, [r7, #24]
 8007be2:	687b      	ldr	r3, [r7, #4]
 8007be4:	69ba      	ldr	r2, [r7, #24]
 8007be6:	609a      	str	r2, [r3, #8]
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	685b      	ldr	r3, [r3, #4]
 8007bec:	61bb      	str	r3, [r7, #24]
 8007bee:	2201      	movs	r2, #1
 8007bf0:	69fb      	ldr	r3, [r7, #28]
 8007bf2:	fa02 f303 	lsl.w	r3, r2, r3
 8007bf6:	43db      	mvns	r3, r3
 8007bf8:	69ba      	ldr	r2, [r7, #24]
 8007bfa:	4013      	ands	r3, r2
 8007bfc:	61bb      	str	r3, [r7, #24]
 8007bfe:	683b      	ldr	r3, [r7, #0]
 8007c00:	685b      	ldr	r3, [r3, #4]
 8007c02:	091b      	lsrs	r3, r3, #4
 8007c04:	f003 0201 	and.w	r2, r3, #1
 8007c08:	69fb      	ldr	r3, [r7, #28]
 8007c0a:	fa02 f303 	lsl.w	r3, r2, r3
 8007c0e:	69ba      	ldr	r2, [r7, #24]
 8007c10:	4313      	orrs	r3, r2
 8007c12:	61bb      	str	r3, [r7, #24]
 8007c14:	687b      	ldr	r3, [r7, #4]
 8007c16:	69ba      	ldr	r2, [r7, #24]
 8007c18:	605a      	str	r2, [r3, #4]
 8007c1a:	683b      	ldr	r3, [r7, #0]
 8007c1c:	685b      	ldr	r3, [r3, #4]
 8007c1e:	f003 0303 	and.w	r3, r3, #3
 8007c22:	2b03      	cmp	r3, #3
 8007c24:	d017      	beq.n	8007c56 <HAL_GPIO_Init+0xe2>
 8007c26:	687b      	ldr	r3, [r7, #4]
 8007c28:	68db      	ldr	r3, [r3, #12]
 8007c2a:	61bb      	str	r3, [r7, #24]
 8007c2c:	69fb      	ldr	r3, [r7, #28]
 8007c2e:	005b      	lsls	r3, r3, #1
 8007c30:	2203      	movs	r2, #3
 8007c32:	fa02 f303 	lsl.w	r3, r2, r3
 8007c36:	43db      	mvns	r3, r3
 8007c38:	69ba      	ldr	r2, [r7, #24]
 8007c3a:	4013      	ands	r3, r2
 8007c3c:	61bb      	str	r3, [r7, #24]
 8007c3e:	683b      	ldr	r3, [r7, #0]
 8007c40:	689a      	ldr	r2, [r3, #8]
 8007c42:	69fb      	ldr	r3, [r7, #28]
 8007c44:	005b      	lsls	r3, r3, #1
 8007c46:	fa02 f303 	lsl.w	r3, r2, r3
 8007c4a:	69ba      	ldr	r2, [r7, #24]
 8007c4c:	4313      	orrs	r3, r2
 8007c4e:	61bb      	str	r3, [r7, #24]
 8007c50:	687b      	ldr	r3, [r7, #4]
 8007c52:	69ba      	ldr	r2, [r7, #24]
 8007c54:	60da      	str	r2, [r3, #12]
 8007c56:	683b      	ldr	r3, [r7, #0]
 8007c58:	685b      	ldr	r3, [r3, #4]
 8007c5a:	f003 0303 	and.w	r3, r3, #3
 8007c5e:	2b02      	cmp	r3, #2
 8007c60:	d123      	bne.n	8007caa <HAL_GPIO_Init+0x136>
 8007c62:	69fb      	ldr	r3, [r7, #28]
 8007c64:	08da      	lsrs	r2, r3, #3
 8007c66:	687b      	ldr	r3, [r7, #4]
 8007c68:	3208      	adds	r2, #8
 8007c6a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8007c6e:	61bb      	str	r3, [r7, #24]
 8007c70:	69fb      	ldr	r3, [r7, #28]
 8007c72:	f003 0307 	and.w	r3, r3, #7
 8007c76:	009b      	lsls	r3, r3, #2
 8007c78:	220f      	movs	r2, #15
 8007c7a:	fa02 f303 	lsl.w	r3, r2, r3
 8007c7e:	43db      	mvns	r3, r3
 8007c80:	69ba      	ldr	r2, [r7, #24]
 8007c82:	4013      	ands	r3, r2
 8007c84:	61bb      	str	r3, [r7, #24]
 8007c86:	683b      	ldr	r3, [r7, #0]
 8007c88:	691a      	ldr	r2, [r3, #16]
 8007c8a:	69fb      	ldr	r3, [r7, #28]
 8007c8c:	f003 0307 	and.w	r3, r3, #7
 8007c90:	009b      	lsls	r3, r3, #2
 8007c92:	fa02 f303 	lsl.w	r3, r2, r3
 8007c96:	69ba      	ldr	r2, [r7, #24]
 8007c98:	4313      	orrs	r3, r2
 8007c9a:	61bb      	str	r3, [r7, #24]
 8007c9c:	69fb      	ldr	r3, [r7, #28]
 8007c9e:	08da      	lsrs	r2, r3, #3
 8007ca0:	687b      	ldr	r3, [r7, #4]
 8007ca2:	3208      	adds	r2, #8
 8007ca4:	69b9      	ldr	r1, [r7, #24]
 8007ca6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8007caa:	687b      	ldr	r3, [r7, #4]
 8007cac:	681b      	ldr	r3, [r3, #0]
 8007cae:	61bb      	str	r3, [r7, #24]
 8007cb0:	69fb      	ldr	r3, [r7, #28]
 8007cb2:	005b      	lsls	r3, r3, #1
 8007cb4:	2203      	movs	r2, #3
 8007cb6:	fa02 f303 	lsl.w	r3, r2, r3
 8007cba:	43db      	mvns	r3, r3
 8007cbc:	69ba      	ldr	r2, [r7, #24]
 8007cbe:	4013      	ands	r3, r2
 8007cc0:	61bb      	str	r3, [r7, #24]
 8007cc2:	683b      	ldr	r3, [r7, #0]
 8007cc4:	685b      	ldr	r3, [r3, #4]
 8007cc6:	f003 0203 	and.w	r2, r3, #3
 8007cca:	69fb      	ldr	r3, [r7, #28]
 8007ccc:	005b      	lsls	r3, r3, #1
 8007cce:	fa02 f303 	lsl.w	r3, r2, r3
 8007cd2:	69ba      	ldr	r2, [r7, #24]
 8007cd4:	4313      	orrs	r3, r2
 8007cd6:	61bb      	str	r3, [r7, #24]
 8007cd8:	687b      	ldr	r3, [r7, #4]
 8007cda:	69ba      	ldr	r2, [r7, #24]
 8007cdc:	601a      	str	r2, [r3, #0]
 8007cde:	683b      	ldr	r3, [r7, #0]
 8007ce0:	685b      	ldr	r3, [r3, #4]
 8007ce2:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8007ce6:	2b00      	cmp	r3, #0
 8007ce8:	f000 80e0 	beq.w	8007eac <HAL_GPIO_Init+0x338>
 8007cec:	4b2f      	ldr	r3, [pc, #188]	; (8007dac <HAL_GPIO_Init+0x238>)
 8007cee:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8007cf2:	4a2e      	ldr	r2, [pc, #184]	; (8007dac <HAL_GPIO_Init+0x238>)
 8007cf4:	f043 0302 	orr.w	r3, r3, #2
 8007cf8:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8007cfc:	4b2b      	ldr	r3, [pc, #172]	; (8007dac <HAL_GPIO_Init+0x238>)
 8007cfe:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8007d02:	f003 0302 	and.w	r3, r3, #2
 8007d06:	60fb      	str	r3, [r7, #12]
 8007d08:	68fb      	ldr	r3, [r7, #12]
 8007d0a:	4a29      	ldr	r2, [pc, #164]	; (8007db0 <HAL_GPIO_Init+0x23c>)
 8007d0c:	69fb      	ldr	r3, [r7, #28]
 8007d0e:	089b      	lsrs	r3, r3, #2
 8007d10:	3302      	adds	r3, #2
 8007d12:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007d16:	61bb      	str	r3, [r7, #24]
 8007d18:	69fb      	ldr	r3, [r7, #28]
 8007d1a:	f003 0303 	and.w	r3, r3, #3
 8007d1e:	009b      	lsls	r3, r3, #2
 8007d20:	220f      	movs	r2, #15
 8007d22:	fa02 f303 	lsl.w	r3, r2, r3
 8007d26:	43db      	mvns	r3, r3
 8007d28:	69ba      	ldr	r2, [r7, #24]
 8007d2a:	4013      	ands	r3, r2
 8007d2c:	61bb      	str	r3, [r7, #24]
 8007d2e:	687b      	ldr	r3, [r7, #4]
 8007d30:	4a20      	ldr	r2, [pc, #128]	; (8007db4 <HAL_GPIO_Init+0x240>)
 8007d32:	4293      	cmp	r3, r2
 8007d34:	d052      	beq.n	8007ddc <HAL_GPIO_Init+0x268>
 8007d36:	687b      	ldr	r3, [r7, #4]
 8007d38:	4a1f      	ldr	r2, [pc, #124]	; (8007db8 <HAL_GPIO_Init+0x244>)
 8007d3a:	4293      	cmp	r3, r2
 8007d3c:	d031      	beq.n	8007da2 <HAL_GPIO_Init+0x22e>
 8007d3e:	687b      	ldr	r3, [r7, #4]
 8007d40:	4a1e      	ldr	r2, [pc, #120]	; (8007dbc <HAL_GPIO_Init+0x248>)
 8007d42:	4293      	cmp	r3, r2
 8007d44:	d02b      	beq.n	8007d9e <HAL_GPIO_Init+0x22a>
 8007d46:	687b      	ldr	r3, [r7, #4]
 8007d48:	4a1d      	ldr	r2, [pc, #116]	; (8007dc0 <HAL_GPIO_Init+0x24c>)
 8007d4a:	4293      	cmp	r3, r2
 8007d4c:	d025      	beq.n	8007d9a <HAL_GPIO_Init+0x226>
 8007d4e:	687b      	ldr	r3, [r7, #4]
 8007d50:	4a1c      	ldr	r2, [pc, #112]	; (8007dc4 <HAL_GPIO_Init+0x250>)
 8007d52:	4293      	cmp	r3, r2
 8007d54:	d01f      	beq.n	8007d96 <HAL_GPIO_Init+0x222>
 8007d56:	687b      	ldr	r3, [r7, #4]
 8007d58:	4a1b      	ldr	r2, [pc, #108]	; (8007dc8 <HAL_GPIO_Init+0x254>)
 8007d5a:	4293      	cmp	r3, r2
 8007d5c:	d019      	beq.n	8007d92 <HAL_GPIO_Init+0x21e>
 8007d5e:	687b      	ldr	r3, [r7, #4]
 8007d60:	4a1a      	ldr	r2, [pc, #104]	; (8007dcc <HAL_GPIO_Init+0x258>)
 8007d62:	4293      	cmp	r3, r2
 8007d64:	d013      	beq.n	8007d8e <HAL_GPIO_Init+0x21a>
 8007d66:	687b      	ldr	r3, [r7, #4]
 8007d68:	4a19      	ldr	r2, [pc, #100]	; (8007dd0 <HAL_GPIO_Init+0x25c>)
 8007d6a:	4293      	cmp	r3, r2
 8007d6c:	d00d      	beq.n	8007d8a <HAL_GPIO_Init+0x216>
 8007d6e:	687b      	ldr	r3, [r7, #4]
 8007d70:	4a18      	ldr	r2, [pc, #96]	; (8007dd4 <HAL_GPIO_Init+0x260>)
 8007d72:	4293      	cmp	r3, r2
 8007d74:	d007      	beq.n	8007d86 <HAL_GPIO_Init+0x212>
 8007d76:	687b      	ldr	r3, [r7, #4]
 8007d78:	4a17      	ldr	r2, [pc, #92]	; (8007dd8 <HAL_GPIO_Init+0x264>)
 8007d7a:	4293      	cmp	r3, r2
 8007d7c:	d101      	bne.n	8007d82 <HAL_GPIO_Init+0x20e>
 8007d7e:	2309      	movs	r3, #9
 8007d80:	e02d      	b.n	8007dde <HAL_GPIO_Init+0x26a>
 8007d82:	230a      	movs	r3, #10
 8007d84:	e02b      	b.n	8007dde <HAL_GPIO_Init+0x26a>
 8007d86:	2308      	movs	r3, #8
 8007d88:	e029      	b.n	8007dde <HAL_GPIO_Init+0x26a>
 8007d8a:	2307      	movs	r3, #7
 8007d8c:	e027      	b.n	8007dde <HAL_GPIO_Init+0x26a>
 8007d8e:	2306      	movs	r3, #6
 8007d90:	e025      	b.n	8007dde <HAL_GPIO_Init+0x26a>
 8007d92:	2305      	movs	r3, #5
 8007d94:	e023      	b.n	8007dde <HAL_GPIO_Init+0x26a>
 8007d96:	2304      	movs	r3, #4
 8007d98:	e021      	b.n	8007dde <HAL_GPIO_Init+0x26a>
 8007d9a:	2303      	movs	r3, #3
 8007d9c:	e01f      	b.n	8007dde <HAL_GPIO_Init+0x26a>
 8007d9e:	2302      	movs	r3, #2
 8007da0:	e01d      	b.n	8007dde <HAL_GPIO_Init+0x26a>
 8007da2:	2301      	movs	r3, #1
 8007da4:	e01b      	b.n	8007dde <HAL_GPIO_Init+0x26a>
 8007da6:	bf00      	nop
 8007da8:	58000080 	.word	0x58000080
 8007dac:	58024400 	.word	0x58024400
 8007db0:	58000400 	.word	0x58000400
 8007db4:	58020000 	.word	0x58020000
 8007db8:	58020400 	.word	0x58020400
 8007dbc:	58020800 	.word	0x58020800
 8007dc0:	58020c00 	.word	0x58020c00
 8007dc4:	58021000 	.word	0x58021000
 8007dc8:	58021400 	.word	0x58021400
 8007dcc:	58021800 	.word	0x58021800
 8007dd0:	58021c00 	.word	0x58021c00
 8007dd4:	58022000 	.word	0x58022000
 8007dd8:	58022400 	.word	0x58022400
 8007ddc:	2300      	movs	r3, #0
 8007dde:	69fa      	ldr	r2, [r7, #28]
 8007de0:	f002 0203 	and.w	r2, r2, #3
 8007de4:	0092      	lsls	r2, r2, #2
 8007de6:	4093      	lsls	r3, r2
 8007de8:	69ba      	ldr	r2, [r7, #24]
 8007dea:	4313      	orrs	r3, r2
 8007dec:	61bb      	str	r3, [r7, #24]
 8007dee:	4938      	ldr	r1, [pc, #224]	; (8007ed0 <HAL_GPIO_Init+0x35c>)
 8007df0:	69fb      	ldr	r3, [r7, #28]
 8007df2:	089b      	lsrs	r3, r3, #2
 8007df4:	3302      	adds	r3, #2
 8007df6:	69ba      	ldr	r2, [r7, #24]
 8007df8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8007dfc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007e00:	681b      	ldr	r3, [r3, #0]
 8007e02:	61bb      	str	r3, [r7, #24]
 8007e04:	693b      	ldr	r3, [r7, #16]
 8007e06:	43db      	mvns	r3, r3
 8007e08:	69ba      	ldr	r2, [r7, #24]
 8007e0a:	4013      	ands	r3, r2
 8007e0c:	61bb      	str	r3, [r7, #24]
 8007e0e:	683b      	ldr	r3, [r7, #0]
 8007e10:	685b      	ldr	r3, [r3, #4]
 8007e12:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8007e16:	2b00      	cmp	r3, #0
 8007e18:	d003      	beq.n	8007e22 <HAL_GPIO_Init+0x2ae>
 8007e1a:	69ba      	ldr	r2, [r7, #24]
 8007e1c:	693b      	ldr	r3, [r7, #16]
 8007e1e:	4313      	orrs	r3, r2
 8007e20:	61bb      	str	r3, [r7, #24]
 8007e22:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007e26:	69bb      	ldr	r3, [r7, #24]
 8007e28:	6013      	str	r3, [r2, #0]
 8007e2a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007e2e:	685b      	ldr	r3, [r3, #4]
 8007e30:	61bb      	str	r3, [r7, #24]
 8007e32:	693b      	ldr	r3, [r7, #16]
 8007e34:	43db      	mvns	r3, r3
 8007e36:	69ba      	ldr	r2, [r7, #24]
 8007e38:	4013      	ands	r3, r2
 8007e3a:	61bb      	str	r3, [r7, #24]
 8007e3c:	683b      	ldr	r3, [r7, #0]
 8007e3e:	685b      	ldr	r3, [r3, #4]
 8007e40:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8007e44:	2b00      	cmp	r3, #0
 8007e46:	d003      	beq.n	8007e50 <HAL_GPIO_Init+0x2dc>
 8007e48:	69ba      	ldr	r2, [r7, #24]
 8007e4a:	693b      	ldr	r3, [r7, #16]
 8007e4c:	4313      	orrs	r3, r2
 8007e4e:	61bb      	str	r3, [r7, #24]
 8007e50:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007e54:	69bb      	ldr	r3, [r7, #24]
 8007e56:	6053      	str	r3, [r2, #4]
 8007e58:	697b      	ldr	r3, [r7, #20]
 8007e5a:	685b      	ldr	r3, [r3, #4]
 8007e5c:	61bb      	str	r3, [r7, #24]
 8007e5e:	693b      	ldr	r3, [r7, #16]
 8007e60:	43db      	mvns	r3, r3
 8007e62:	69ba      	ldr	r2, [r7, #24]
 8007e64:	4013      	ands	r3, r2
 8007e66:	61bb      	str	r3, [r7, #24]
 8007e68:	683b      	ldr	r3, [r7, #0]
 8007e6a:	685b      	ldr	r3, [r3, #4]
 8007e6c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007e70:	2b00      	cmp	r3, #0
 8007e72:	d003      	beq.n	8007e7c <HAL_GPIO_Init+0x308>
 8007e74:	69ba      	ldr	r2, [r7, #24]
 8007e76:	693b      	ldr	r3, [r7, #16]
 8007e78:	4313      	orrs	r3, r2
 8007e7a:	61bb      	str	r3, [r7, #24]
 8007e7c:	697b      	ldr	r3, [r7, #20]
 8007e7e:	69ba      	ldr	r2, [r7, #24]
 8007e80:	605a      	str	r2, [r3, #4]
 8007e82:	697b      	ldr	r3, [r7, #20]
 8007e84:	681b      	ldr	r3, [r3, #0]
 8007e86:	61bb      	str	r3, [r7, #24]
 8007e88:	693b      	ldr	r3, [r7, #16]
 8007e8a:	43db      	mvns	r3, r3
 8007e8c:	69ba      	ldr	r2, [r7, #24]
 8007e8e:	4013      	ands	r3, r2
 8007e90:	61bb      	str	r3, [r7, #24]
 8007e92:	683b      	ldr	r3, [r7, #0]
 8007e94:	685b      	ldr	r3, [r3, #4]
 8007e96:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8007e9a:	2b00      	cmp	r3, #0
 8007e9c:	d003      	beq.n	8007ea6 <HAL_GPIO_Init+0x332>
 8007e9e:	69ba      	ldr	r2, [r7, #24]
 8007ea0:	693b      	ldr	r3, [r7, #16]
 8007ea2:	4313      	orrs	r3, r2
 8007ea4:	61bb      	str	r3, [r7, #24]
 8007ea6:	697b      	ldr	r3, [r7, #20]
 8007ea8:	69ba      	ldr	r2, [r7, #24]
 8007eaa:	601a      	str	r2, [r3, #0]
 8007eac:	69fb      	ldr	r3, [r7, #28]
 8007eae:	3301      	adds	r3, #1
 8007eb0:	61fb      	str	r3, [r7, #28]
 8007eb2:	683b      	ldr	r3, [r7, #0]
 8007eb4:	681a      	ldr	r2, [r3, #0]
 8007eb6:	69fb      	ldr	r3, [r7, #28]
 8007eb8:	fa22 f303 	lsr.w	r3, r2, r3
 8007ebc:	2b00      	cmp	r3, #0
 8007ebe:	f47f ae63 	bne.w	8007b88 <HAL_GPIO_Init+0x14>
 8007ec2:	bf00      	nop
 8007ec4:	bf00      	nop
 8007ec6:	3724      	adds	r7, #36	; 0x24
 8007ec8:	46bd      	mov	sp, r7
 8007eca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ece:	4770      	bx	lr
 8007ed0:	58000400 	.word	0x58000400

08007ed4 <HAL_GPIO_ReadPin>:
 8007ed4:	b480      	push	{r7}
 8007ed6:	b085      	sub	sp, #20
 8007ed8:	af00      	add	r7, sp, #0
 8007eda:	6078      	str	r0, [r7, #4]
 8007edc:	460b      	mov	r3, r1
 8007ede:	807b      	strh	r3, [r7, #2]
 8007ee0:	687b      	ldr	r3, [r7, #4]
 8007ee2:	691a      	ldr	r2, [r3, #16]
 8007ee4:	887b      	ldrh	r3, [r7, #2]
 8007ee6:	4013      	ands	r3, r2
 8007ee8:	2b00      	cmp	r3, #0
 8007eea:	d002      	beq.n	8007ef2 <HAL_GPIO_ReadPin+0x1e>
 8007eec:	2301      	movs	r3, #1
 8007eee:	73fb      	strb	r3, [r7, #15]
 8007ef0:	e001      	b.n	8007ef6 <HAL_GPIO_ReadPin+0x22>
 8007ef2:	2300      	movs	r3, #0
 8007ef4:	73fb      	strb	r3, [r7, #15]
 8007ef6:	7bfb      	ldrb	r3, [r7, #15]
 8007ef8:	4618      	mov	r0, r3
 8007efa:	3714      	adds	r7, #20
 8007efc:	46bd      	mov	sp, r7
 8007efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f02:	4770      	bx	lr

08007f04 <HAL_GPIO_WritePin>:
 8007f04:	b480      	push	{r7}
 8007f06:	b083      	sub	sp, #12
 8007f08:	af00      	add	r7, sp, #0
 8007f0a:	6078      	str	r0, [r7, #4]
 8007f0c:	460b      	mov	r3, r1
 8007f0e:	807b      	strh	r3, [r7, #2]
 8007f10:	4613      	mov	r3, r2
 8007f12:	707b      	strb	r3, [r7, #1]
 8007f14:	787b      	ldrb	r3, [r7, #1]
 8007f16:	2b00      	cmp	r3, #0
 8007f18:	d003      	beq.n	8007f22 <HAL_GPIO_WritePin+0x1e>
 8007f1a:	887a      	ldrh	r2, [r7, #2]
 8007f1c:	687b      	ldr	r3, [r7, #4]
 8007f1e:	619a      	str	r2, [r3, #24]
 8007f20:	e003      	b.n	8007f2a <HAL_GPIO_WritePin+0x26>
 8007f22:	887b      	ldrh	r3, [r7, #2]
 8007f24:	041a      	lsls	r2, r3, #16
 8007f26:	687b      	ldr	r3, [r7, #4]
 8007f28:	619a      	str	r2, [r3, #24]
 8007f2a:	bf00      	nop
 8007f2c:	370c      	adds	r7, #12
 8007f2e:	46bd      	mov	sp, r7
 8007f30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f34:	4770      	bx	lr

08007f36 <HAL_GPIO_EXTI_IRQHandler>:
 8007f36:	b580      	push	{r7, lr}
 8007f38:	b082      	sub	sp, #8
 8007f3a:	af00      	add	r7, sp, #0
 8007f3c:	4603      	mov	r3, r0
 8007f3e:	80fb      	strh	r3, [r7, #6]
 8007f40:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007f44:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8007f48:	88fb      	ldrh	r3, [r7, #6]
 8007f4a:	4013      	ands	r3, r2
 8007f4c:	2b00      	cmp	r3, #0
 8007f4e:	d008      	beq.n	8007f62 <HAL_GPIO_EXTI_IRQHandler+0x2c>
 8007f50:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007f54:	88fb      	ldrh	r3, [r7, #6]
 8007f56:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8007f5a:	88fb      	ldrh	r3, [r7, #6]
 8007f5c:	4618      	mov	r0, r3
 8007f5e:	f7fb fa9d 	bl	800349c <HAL_GPIO_EXTI_Callback>
 8007f62:	bf00      	nop
 8007f64:	3708      	adds	r7, #8
 8007f66:	46bd      	mov	sp, r7
 8007f68:	bd80      	pop	{r7, pc}
	...

08007f6c <HAL_PWREx_ConfigSupply>:
 8007f6c:	b580      	push	{r7, lr}
 8007f6e:	b084      	sub	sp, #16
 8007f70:	af00      	add	r7, sp, #0
 8007f72:	6078      	str	r0, [r7, #4]
 8007f74:	4b19      	ldr	r3, [pc, #100]	; (8007fdc <HAL_PWREx_ConfigSupply+0x70>)
 8007f76:	68db      	ldr	r3, [r3, #12]
 8007f78:	f003 0304 	and.w	r3, r3, #4
 8007f7c:	2b04      	cmp	r3, #4
 8007f7e:	d00a      	beq.n	8007f96 <HAL_PWREx_ConfigSupply+0x2a>
 8007f80:	4b16      	ldr	r3, [pc, #88]	; (8007fdc <HAL_PWREx_ConfigSupply+0x70>)
 8007f82:	68db      	ldr	r3, [r3, #12]
 8007f84:	f003 0307 	and.w	r3, r3, #7
 8007f88:	687a      	ldr	r2, [r7, #4]
 8007f8a:	429a      	cmp	r2, r3
 8007f8c:	d001      	beq.n	8007f92 <HAL_PWREx_ConfigSupply+0x26>
 8007f8e:	2301      	movs	r3, #1
 8007f90:	e01f      	b.n	8007fd2 <HAL_PWREx_ConfigSupply+0x66>
 8007f92:	2300      	movs	r3, #0
 8007f94:	e01d      	b.n	8007fd2 <HAL_PWREx_ConfigSupply+0x66>
 8007f96:	4b11      	ldr	r3, [pc, #68]	; (8007fdc <HAL_PWREx_ConfigSupply+0x70>)
 8007f98:	68db      	ldr	r3, [r3, #12]
 8007f9a:	f023 0207 	bic.w	r2, r3, #7
 8007f9e:	490f      	ldr	r1, [pc, #60]	; (8007fdc <HAL_PWREx_ConfigSupply+0x70>)
 8007fa0:	687b      	ldr	r3, [r7, #4]
 8007fa2:	4313      	orrs	r3, r2
 8007fa4:	60cb      	str	r3, [r1, #12]
 8007fa6:	f7fe ff03 	bl	8006db0 <HAL_GetTick>
 8007faa:	60f8      	str	r0, [r7, #12]
 8007fac:	e009      	b.n	8007fc2 <HAL_PWREx_ConfigSupply+0x56>
 8007fae:	f7fe feff 	bl	8006db0 <HAL_GetTick>
 8007fb2:	4602      	mov	r2, r0
 8007fb4:	68fb      	ldr	r3, [r7, #12]
 8007fb6:	1ad3      	subs	r3, r2, r3
 8007fb8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8007fbc:	d901      	bls.n	8007fc2 <HAL_PWREx_ConfigSupply+0x56>
 8007fbe:	2301      	movs	r3, #1
 8007fc0:	e007      	b.n	8007fd2 <HAL_PWREx_ConfigSupply+0x66>
 8007fc2:	4b06      	ldr	r3, [pc, #24]	; (8007fdc <HAL_PWREx_ConfigSupply+0x70>)
 8007fc4:	685b      	ldr	r3, [r3, #4]
 8007fc6:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8007fca:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007fce:	d1ee      	bne.n	8007fae <HAL_PWREx_ConfigSupply+0x42>
 8007fd0:	2300      	movs	r3, #0
 8007fd2:	4618      	mov	r0, r3
 8007fd4:	3710      	adds	r7, #16
 8007fd6:	46bd      	mov	sp, r7
 8007fd8:	bd80      	pop	{r7, pc}
 8007fda:	bf00      	nop
 8007fdc:	58024800 	.word	0x58024800

08007fe0 <HAL_RCC_OscConfig>:
 8007fe0:	b580      	push	{r7, lr}
 8007fe2:	b08c      	sub	sp, #48	; 0x30
 8007fe4:	af00      	add	r7, sp, #0
 8007fe6:	6078      	str	r0, [r7, #4]
 8007fe8:	687b      	ldr	r3, [r7, #4]
 8007fea:	2b00      	cmp	r3, #0
 8007fec:	d102      	bne.n	8007ff4 <HAL_RCC_OscConfig+0x14>
 8007fee:	2301      	movs	r3, #1
 8007ff0:	f000 bc1d 	b.w	800882e <HAL_RCC_OscConfig+0x84e>
 8007ff4:	687b      	ldr	r3, [r7, #4]
 8007ff6:	681b      	ldr	r3, [r3, #0]
 8007ff8:	f003 0301 	and.w	r3, r3, #1
 8007ffc:	2b00      	cmp	r3, #0
 8007ffe:	f000 8087 	beq.w	8008110 <HAL_RCC_OscConfig+0x130>
 8008002:	4b99      	ldr	r3, [pc, #612]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008004:	691b      	ldr	r3, [r3, #16]
 8008006:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800800a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800800c:	4b96      	ldr	r3, [pc, #600]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 800800e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008010:	62bb      	str	r3, [r7, #40]	; 0x28
 8008012:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008014:	2b10      	cmp	r3, #16
 8008016:	d007      	beq.n	8008028 <HAL_RCC_OscConfig+0x48>
 8008018:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800801a:	2b18      	cmp	r3, #24
 800801c:	d110      	bne.n	8008040 <HAL_RCC_OscConfig+0x60>
 800801e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008020:	f003 0303 	and.w	r3, r3, #3
 8008024:	2b02      	cmp	r3, #2
 8008026:	d10b      	bne.n	8008040 <HAL_RCC_OscConfig+0x60>
 8008028:	4b8f      	ldr	r3, [pc, #572]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 800802a:	681b      	ldr	r3, [r3, #0]
 800802c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008030:	2b00      	cmp	r3, #0
 8008032:	d06c      	beq.n	800810e <HAL_RCC_OscConfig+0x12e>
 8008034:	687b      	ldr	r3, [r7, #4]
 8008036:	685b      	ldr	r3, [r3, #4]
 8008038:	2b00      	cmp	r3, #0
 800803a:	d168      	bne.n	800810e <HAL_RCC_OscConfig+0x12e>
 800803c:	2301      	movs	r3, #1
 800803e:	e3f6      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 8008040:	687b      	ldr	r3, [r7, #4]
 8008042:	685b      	ldr	r3, [r3, #4]
 8008044:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008048:	d106      	bne.n	8008058 <HAL_RCC_OscConfig+0x78>
 800804a:	4b87      	ldr	r3, [pc, #540]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 800804c:	681b      	ldr	r3, [r3, #0]
 800804e:	4a86      	ldr	r2, [pc, #536]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008050:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008054:	6013      	str	r3, [r2, #0]
 8008056:	e02e      	b.n	80080b6 <HAL_RCC_OscConfig+0xd6>
 8008058:	687b      	ldr	r3, [r7, #4]
 800805a:	685b      	ldr	r3, [r3, #4]
 800805c:	2b00      	cmp	r3, #0
 800805e:	d10c      	bne.n	800807a <HAL_RCC_OscConfig+0x9a>
 8008060:	4b81      	ldr	r3, [pc, #516]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008062:	681b      	ldr	r3, [r3, #0]
 8008064:	4a80      	ldr	r2, [pc, #512]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008066:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800806a:	6013      	str	r3, [r2, #0]
 800806c:	4b7e      	ldr	r3, [pc, #504]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 800806e:	681b      	ldr	r3, [r3, #0]
 8008070:	4a7d      	ldr	r2, [pc, #500]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008072:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008076:	6013      	str	r3, [r2, #0]
 8008078:	e01d      	b.n	80080b6 <HAL_RCC_OscConfig+0xd6>
 800807a:	687b      	ldr	r3, [r7, #4]
 800807c:	685b      	ldr	r3, [r3, #4]
 800807e:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8008082:	d10c      	bne.n	800809e <HAL_RCC_OscConfig+0xbe>
 8008084:	4b78      	ldr	r3, [pc, #480]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008086:	681b      	ldr	r3, [r3, #0]
 8008088:	4a77      	ldr	r2, [pc, #476]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 800808a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800808e:	6013      	str	r3, [r2, #0]
 8008090:	4b75      	ldr	r3, [pc, #468]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008092:	681b      	ldr	r3, [r3, #0]
 8008094:	4a74      	ldr	r2, [pc, #464]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008096:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800809a:	6013      	str	r3, [r2, #0]
 800809c:	e00b      	b.n	80080b6 <HAL_RCC_OscConfig+0xd6>
 800809e:	4b72      	ldr	r3, [pc, #456]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 80080a0:	681b      	ldr	r3, [r3, #0]
 80080a2:	4a71      	ldr	r2, [pc, #452]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 80080a4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80080a8:	6013      	str	r3, [r2, #0]
 80080aa:	4b6f      	ldr	r3, [pc, #444]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 80080ac:	681b      	ldr	r3, [r3, #0]
 80080ae:	4a6e      	ldr	r2, [pc, #440]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 80080b0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80080b4:	6013      	str	r3, [r2, #0]
 80080b6:	687b      	ldr	r3, [r7, #4]
 80080b8:	685b      	ldr	r3, [r3, #4]
 80080ba:	2b00      	cmp	r3, #0
 80080bc:	d013      	beq.n	80080e6 <HAL_RCC_OscConfig+0x106>
 80080be:	f7fe fe77 	bl	8006db0 <HAL_GetTick>
 80080c2:	6278      	str	r0, [r7, #36]	; 0x24
 80080c4:	e008      	b.n	80080d8 <HAL_RCC_OscConfig+0xf8>
 80080c6:	f7fe fe73 	bl	8006db0 <HAL_GetTick>
 80080ca:	4602      	mov	r2, r0
 80080cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80080ce:	1ad3      	subs	r3, r2, r3
 80080d0:	2b64      	cmp	r3, #100	; 0x64
 80080d2:	d901      	bls.n	80080d8 <HAL_RCC_OscConfig+0xf8>
 80080d4:	2303      	movs	r3, #3
 80080d6:	e3aa      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 80080d8:	4b63      	ldr	r3, [pc, #396]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 80080da:	681b      	ldr	r3, [r3, #0]
 80080dc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80080e0:	2b00      	cmp	r3, #0
 80080e2:	d0f0      	beq.n	80080c6 <HAL_RCC_OscConfig+0xe6>
 80080e4:	e014      	b.n	8008110 <HAL_RCC_OscConfig+0x130>
 80080e6:	f7fe fe63 	bl	8006db0 <HAL_GetTick>
 80080ea:	6278      	str	r0, [r7, #36]	; 0x24
 80080ec:	e008      	b.n	8008100 <HAL_RCC_OscConfig+0x120>
 80080ee:	f7fe fe5f 	bl	8006db0 <HAL_GetTick>
 80080f2:	4602      	mov	r2, r0
 80080f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80080f6:	1ad3      	subs	r3, r2, r3
 80080f8:	2b64      	cmp	r3, #100	; 0x64
 80080fa:	d901      	bls.n	8008100 <HAL_RCC_OscConfig+0x120>
 80080fc:	2303      	movs	r3, #3
 80080fe:	e396      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 8008100:	4b59      	ldr	r3, [pc, #356]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008102:	681b      	ldr	r3, [r3, #0]
 8008104:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008108:	2b00      	cmp	r3, #0
 800810a:	d1f0      	bne.n	80080ee <HAL_RCC_OscConfig+0x10e>
 800810c:	e000      	b.n	8008110 <HAL_RCC_OscConfig+0x130>
 800810e:	bf00      	nop
 8008110:	687b      	ldr	r3, [r7, #4]
 8008112:	681b      	ldr	r3, [r3, #0]
 8008114:	f003 0302 	and.w	r3, r3, #2
 8008118:	2b00      	cmp	r3, #0
 800811a:	f000 80cb 	beq.w	80082b4 <HAL_RCC_OscConfig+0x2d4>
 800811e:	4b52      	ldr	r3, [pc, #328]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008120:	691b      	ldr	r3, [r3, #16]
 8008122:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8008126:	623b      	str	r3, [r7, #32]
 8008128:	4b4f      	ldr	r3, [pc, #316]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 800812a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800812c:	61fb      	str	r3, [r7, #28]
 800812e:	6a3b      	ldr	r3, [r7, #32]
 8008130:	2b00      	cmp	r3, #0
 8008132:	d007      	beq.n	8008144 <HAL_RCC_OscConfig+0x164>
 8008134:	6a3b      	ldr	r3, [r7, #32]
 8008136:	2b18      	cmp	r3, #24
 8008138:	d156      	bne.n	80081e8 <HAL_RCC_OscConfig+0x208>
 800813a:	69fb      	ldr	r3, [r7, #28]
 800813c:	f003 0303 	and.w	r3, r3, #3
 8008140:	2b00      	cmp	r3, #0
 8008142:	d151      	bne.n	80081e8 <HAL_RCC_OscConfig+0x208>
 8008144:	4b48      	ldr	r3, [pc, #288]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008146:	681b      	ldr	r3, [r3, #0]
 8008148:	f003 0304 	and.w	r3, r3, #4
 800814c:	2b00      	cmp	r3, #0
 800814e:	d005      	beq.n	800815c <HAL_RCC_OscConfig+0x17c>
 8008150:	687b      	ldr	r3, [r7, #4]
 8008152:	68db      	ldr	r3, [r3, #12]
 8008154:	2b00      	cmp	r3, #0
 8008156:	d101      	bne.n	800815c <HAL_RCC_OscConfig+0x17c>
 8008158:	2301      	movs	r3, #1
 800815a:	e368      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 800815c:	4b42      	ldr	r3, [pc, #264]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 800815e:	681b      	ldr	r3, [r3, #0]
 8008160:	f023 0219 	bic.w	r2, r3, #25
 8008164:	687b      	ldr	r3, [r7, #4]
 8008166:	68db      	ldr	r3, [r3, #12]
 8008168:	493f      	ldr	r1, [pc, #252]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 800816a:	4313      	orrs	r3, r2
 800816c:	600b      	str	r3, [r1, #0]
 800816e:	f7fe fe1f 	bl	8006db0 <HAL_GetTick>
 8008172:	6278      	str	r0, [r7, #36]	; 0x24
 8008174:	e008      	b.n	8008188 <HAL_RCC_OscConfig+0x1a8>
 8008176:	f7fe fe1b 	bl	8006db0 <HAL_GetTick>
 800817a:	4602      	mov	r2, r0
 800817c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800817e:	1ad3      	subs	r3, r2, r3
 8008180:	2b02      	cmp	r3, #2
 8008182:	d901      	bls.n	8008188 <HAL_RCC_OscConfig+0x1a8>
 8008184:	2303      	movs	r3, #3
 8008186:	e352      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 8008188:	4b37      	ldr	r3, [pc, #220]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 800818a:	681b      	ldr	r3, [r3, #0]
 800818c:	f003 0304 	and.w	r3, r3, #4
 8008190:	2b00      	cmp	r3, #0
 8008192:	d0f0      	beq.n	8008176 <HAL_RCC_OscConfig+0x196>
 8008194:	f7fe fe3c 	bl	8006e10 <HAL_GetREVID>
 8008198:	4603      	mov	r3, r0
 800819a:	f241 0203 	movw	r2, #4099	; 0x1003
 800819e:	4293      	cmp	r3, r2
 80081a0:	d817      	bhi.n	80081d2 <HAL_RCC_OscConfig+0x1f2>
 80081a2:	687b      	ldr	r3, [r7, #4]
 80081a4:	691b      	ldr	r3, [r3, #16]
 80081a6:	2b40      	cmp	r3, #64	; 0x40
 80081a8:	d108      	bne.n	80081bc <HAL_RCC_OscConfig+0x1dc>
 80081aa:	4b2f      	ldr	r3, [pc, #188]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 80081ac:	685b      	ldr	r3, [r3, #4]
 80081ae:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 80081b2:	4a2d      	ldr	r2, [pc, #180]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 80081b4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80081b8:	6053      	str	r3, [r2, #4]
 80081ba:	e07b      	b.n	80082b4 <HAL_RCC_OscConfig+0x2d4>
 80081bc:	4b2a      	ldr	r3, [pc, #168]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 80081be:	685b      	ldr	r3, [r3, #4]
 80081c0:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 80081c4:	687b      	ldr	r3, [r7, #4]
 80081c6:	691b      	ldr	r3, [r3, #16]
 80081c8:	031b      	lsls	r3, r3, #12
 80081ca:	4927      	ldr	r1, [pc, #156]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 80081cc:	4313      	orrs	r3, r2
 80081ce:	604b      	str	r3, [r1, #4]
 80081d0:	e070      	b.n	80082b4 <HAL_RCC_OscConfig+0x2d4>
 80081d2:	4b25      	ldr	r3, [pc, #148]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 80081d4:	685b      	ldr	r3, [r3, #4]
 80081d6:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 80081da:	687b      	ldr	r3, [r7, #4]
 80081dc:	691b      	ldr	r3, [r3, #16]
 80081de:	061b      	lsls	r3, r3, #24
 80081e0:	4921      	ldr	r1, [pc, #132]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 80081e2:	4313      	orrs	r3, r2
 80081e4:	604b      	str	r3, [r1, #4]
 80081e6:	e065      	b.n	80082b4 <HAL_RCC_OscConfig+0x2d4>
 80081e8:	687b      	ldr	r3, [r7, #4]
 80081ea:	68db      	ldr	r3, [r3, #12]
 80081ec:	2b00      	cmp	r3, #0
 80081ee:	d048      	beq.n	8008282 <HAL_RCC_OscConfig+0x2a2>
 80081f0:	4b1d      	ldr	r3, [pc, #116]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 80081f2:	681b      	ldr	r3, [r3, #0]
 80081f4:	f023 0219 	bic.w	r2, r3, #25
 80081f8:	687b      	ldr	r3, [r7, #4]
 80081fa:	68db      	ldr	r3, [r3, #12]
 80081fc:	491a      	ldr	r1, [pc, #104]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 80081fe:	4313      	orrs	r3, r2
 8008200:	600b      	str	r3, [r1, #0]
 8008202:	f7fe fdd5 	bl	8006db0 <HAL_GetTick>
 8008206:	6278      	str	r0, [r7, #36]	; 0x24
 8008208:	e008      	b.n	800821c <HAL_RCC_OscConfig+0x23c>
 800820a:	f7fe fdd1 	bl	8006db0 <HAL_GetTick>
 800820e:	4602      	mov	r2, r0
 8008210:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008212:	1ad3      	subs	r3, r2, r3
 8008214:	2b02      	cmp	r3, #2
 8008216:	d901      	bls.n	800821c <HAL_RCC_OscConfig+0x23c>
 8008218:	2303      	movs	r3, #3
 800821a:	e308      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 800821c:	4b12      	ldr	r3, [pc, #72]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 800821e:	681b      	ldr	r3, [r3, #0]
 8008220:	f003 0304 	and.w	r3, r3, #4
 8008224:	2b00      	cmp	r3, #0
 8008226:	d0f0      	beq.n	800820a <HAL_RCC_OscConfig+0x22a>
 8008228:	f7fe fdf2 	bl	8006e10 <HAL_GetREVID>
 800822c:	4603      	mov	r3, r0
 800822e:	f241 0203 	movw	r2, #4099	; 0x1003
 8008232:	4293      	cmp	r3, r2
 8008234:	d81a      	bhi.n	800826c <HAL_RCC_OscConfig+0x28c>
 8008236:	687b      	ldr	r3, [r7, #4]
 8008238:	691b      	ldr	r3, [r3, #16]
 800823a:	2b40      	cmp	r3, #64	; 0x40
 800823c:	d108      	bne.n	8008250 <HAL_RCC_OscConfig+0x270>
 800823e:	4b0a      	ldr	r3, [pc, #40]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008240:	685b      	ldr	r3, [r3, #4]
 8008242:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 8008246:	4a08      	ldr	r2, [pc, #32]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008248:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800824c:	6053      	str	r3, [r2, #4]
 800824e:	e031      	b.n	80082b4 <HAL_RCC_OscConfig+0x2d4>
 8008250:	4b05      	ldr	r3, [pc, #20]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008252:	685b      	ldr	r3, [r3, #4]
 8008254:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 8008258:	687b      	ldr	r3, [r7, #4]
 800825a:	691b      	ldr	r3, [r3, #16]
 800825c:	031b      	lsls	r3, r3, #12
 800825e:	4902      	ldr	r1, [pc, #8]	; (8008268 <HAL_RCC_OscConfig+0x288>)
 8008260:	4313      	orrs	r3, r2
 8008262:	604b      	str	r3, [r1, #4]
 8008264:	e026      	b.n	80082b4 <HAL_RCC_OscConfig+0x2d4>
 8008266:	bf00      	nop
 8008268:	58024400 	.word	0x58024400
 800826c:	4b9a      	ldr	r3, [pc, #616]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 800826e:	685b      	ldr	r3, [r3, #4]
 8008270:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8008274:	687b      	ldr	r3, [r7, #4]
 8008276:	691b      	ldr	r3, [r3, #16]
 8008278:	061b      	lsls	r3, r3, #24
 800827a:	4997      	ldr	r1, [pc, #604]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 800827c:	4313      	orrs	r3, r2
 800827e:	604b      	str	r3, [r1, #4]
 8008280:	e018      	b.n	80082b4 <HAL_RCC_OscConfig+0x2d4>
 8008282:	4b95      	ldr	r3, [pc, #596]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 8008284:	681b      	ldr	r3, [r3, #0]
 8008286:	4a94      	ldr	r2, [pc, #592]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 8008288:	f023 0301 	bic.w	r3, r3, #1
 800828c:	6013      	str	r3, [r2, #0]
 800828e:	f7fe fd8f 	bl	8006db0 <HAL_GetTick>
 8008292:	6278      	str	r0, [r7, #36]	; 0x24
 8008294:	e008      	b.n	80082a8 <HAL_RCC_OscConfig+0x2c8>
 8008296:	f7fe fd8b 	bl	8006db0 <HAL_GetTick>
 800829a:	4602      	mov	r2, r0
 800829c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800829e:	1ad3      	subs	r3, r2, r3
 80082a0:	2b02      	cmp	r3, #2
 80082a2:	d901      	bls.n	80082a8 <HAL_RCC_OscConfig+0x2c8>
 80082a4:	2303      	movs	r3, #3
 80082a6:	e2c2      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 80082a8:	4b8b      	ldr	r3, [pc, #556]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80082aa:	681b      	ldr	r3, [r3, #0]
 80082ac:	f003 0304 	and.w	r3, r3, #4
 80082b0:	2b00      	cmp	r3, #0
 80082b2:	d1f0      	bne.n	8008296 <HAL_RCC_OscConfig+0x2b6>
 80082b4:	687b      	ldr	r3, [r7, #4]
 80082b6:	681b      	ldr	r3, [r3, #0]
 80082b8:	f003 0310 	and.w	r3, r3, #16
 80082bc:	2b00      	cmp	r3, #0
 80082be:	f000 80a9 	beq.w	8008414 <HAL_RCC_OscConfig+0x434>
 80082c2:	4b85      	ldr	r3, [pc, #532]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80082c4:	691b      	ldr	r3, [r3, #16]
 80082c6:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80082ca:	61bb      	str	r3, [r7, #24]
 80082cc:	4b82      	ldr	r3, [pc, #520]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80082ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80082d0:	617b      	str	r3, [r7, #20]
 80082d2:	69bb      	ldr	r3, [r7, #24]
 80082d4:	2b08      	cmp	r3, #8
 80082d6:	d007      	beq.n	80082e8 <HAL_RCC_OscConfig+0x308>
 80082d8:	69bb      	ldr	r3, [r7, #24]
 80082da:	2b18      	cmp	r3, #24
 80082dc:	d13a      	bne.n	8008354 <HAL_RCC_OscConfig+0x374>
 80082de:	697b      	ldr	r3, [r7, #20]
 80082e0:	f003 0303 	and.w	r3, r3, #3
 80082e4:	2b01      	cmp	r3, #1
 80082e6:	d135      	bne.n	8008354 <HAL_RCC_OscConfig+0x374>
 80082e8:	4b7b      	ldr	r3, [pc, #492]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80082ea:	681b      	ldr	r3, [r3, #0]
 80082ec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80082f0:	2b00      	cmp	r3, #0
 80082f2:	d005      	beq.n	8008300 <HAL_RCC_OscConfig+0x320>
 80082f4:	687b      	ldr	r3, [r7, #4]
 80082f6:	69db      	ldr	r3, [r3, #28]
 80082f8:	2b80      	cmp	r3, #128	; 0x80
 80082fa:	d001      	beq.n	8008300 <HAL_RCC_OscConfig+0x320>
 80082fc:	2301      	movs	r3, #1
 80082fe:	e296      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 8008300:	f7fe fd86 	bl	8006e10 <HAL_GetREVID>
 8008304:	4603      	mov	r3, r0
 8008306:	f241 0203 	movw	r2, #4099	; 0x1003
 800830a:	4293      	cmp	r3, r2
 800830c:	d817      	bhi.n	800833e <HAL_RCC_OscConfig+0x35e>
 800830e:	687b      	ldr	r3, [r7, #4]
 8008310:	6a1b      	ldr	r3, [r3, #32]
 8008312:	2b20      	cmp	r3, #32
 8008314:	d108      	bne.n	8008328 <HAL_RCC_OscConfig+0x348>
 8008316:	4b70      	ldr	r3, [pc, #448]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 8008318:	685b      	ldr	r3, [r3, #4]
 800831a:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 800831e:	4a6e      	ldr	r2, [pc, #440]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 8008320:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8008324:	6053      	str	r3, [r2, #4]
 8008326:	e075      	b.n	8008414 <HAL_RCC_OscConfig+0x434>
 8008328:	4b6b      	ldr	r3, [pc, #428]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 800832a:	685b      	ldr	r3, [r3, #4]
 800832c:	f023 42f8 	bic.w	r2, r3, #2080374784	; 0x7c000000
 8008330:	687b      	ldr	r3, [r7, #4]
 8008332:	6a1b      	ldr	r3, [r3, #32]
 8008334:	069b      	lsls	r3, r3, #26
 8008336:	4968      	ldr	r1, [pc, #416]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 8008338:	4313      	orrs	r3, r2
 800833a:	604b      	str	r3, [r1, #4]
 800833c:	e06a      	b.n	8008414 <HAL_RCC_OscConfig+0x434>
 800833e:	4b66      	ldr	r3, [pc, #408]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 8008340:	68db      	ldr	r3, [r3, #12]
 8008342:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 8008346:	687b      	ldr	r3, [r7, #4]
 8008348:	6a1b      	ldr	r3, [r3, #32]
 800834a:	061b      	lsls	r3, r3, #24
 800834c:	4962      	ldr	r1, [pc, #392]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 800834e:	4313      	orrs	r3, r2
 8008350:	60cb      	str	r3, [r1, #12]
 8008352:	e05f      	b.n	8008414 <HAL_RCC_OscConfig+0x434>
 8008354:	687b      	ldr	r3, [r7, #4]
 8008356:	69db      	ldr	r3, [r3, #28]
 8008358:	2b00      	cmp	r3, #0
 800835a:	d042      	beq.n	80083e2 <HAL_RCC_OscConfig+0x402>
 800835c:	4b5e      	ldr	r3, [pc, #376]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 800835e:	681b      	ldr	r3, [r3, #0]
 8008360:	4a5d      	ldr	r2, [pc, #372]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 8008362:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008366:	6013      	str	r3, [r2, #0]
 8008368:	f7fe fd22 	bl	8006db0 <HAL_GetTick>
 800836c:	6278      	str	r0, [r7, #36]	; 0x24
 800836e:	e008      	b.n	8008382 <HAL_RCC_OscConfig+0x3a2>
 8008370:	f7fe fd1e 	bl	8006db0 <HAL_GetTick>
 8008374:	4602      	mov	r2, r0
 8008376:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008378:	1ad3      	subs	r3, r2, r3
 800837a:	2b02      	cmp	r3, #2
 800837c:	d901      	bls.n	8008382 <HAL_RCC_OscConfig+0x3a2>
 800837e:	2303      	movs	r3, #3
 8008380:	e255      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 8008382:	4b55      	ldr	r3, [pc, #340]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 8008384:	681b      	ldr	r3, [r3, #0]
 8008386:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800838a:	2b00      	cmp	r3, #0
 800838c:	d0f0      	beq.n	8008370 <HAL_RCC_OscConfig+0x390>
 800838e:	f7fe fd3f 	bl	8006e10 <HAL_GetREVID>
 8008392:	4603      	mov	r3, r0
 8008394:	f241 0203 	movw	r2, #4099	; 0x1003
 8008398:	4293      	cmp	r3, r2
 800839a:	d817      	bhi.n	80083cc <HAL_RCC_OscConfig+0x3ec>
 800839c:	687b      	ldr	r3, [r7, #4]
 800839e:	6a1b      	ldr	r3, [r3, #32]
 80083a0:	2b20      	cmp	r3, #32
 80083a2:	d108      	bne.n	80083b6 <HAL_RCC_OscConfig+0x3d6>
 80083a4:	4b4c      	ldr	r3, [pc, #304]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80083a6:	685b      	ldr	r3, [r3, #4]
 80083a8:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 80083ac:	4a4a      	ldr	r2, [pc, #296]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80083ae:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80083b2:	6053      	str	r3, [r2, #4]
 80083b4:	e02e      	b.n	8008414 <HAL_RCC_OscConfig+0x434>
 80083b6:	4b48      	ldr	r3, [pc, #288]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80083b8:	685b      	ldr	r3, [r3, #4]
 80083ba:	f023 42f8 	bic.w	r2, r3, #2080374784	; 0x7c000000
 80083be:	687b      	ldr	r3, [r7, #4]
 80083c0:	6a1b      	ldr	r3, [r3, #32]
 80083c2:	069b      	lsls	r3, r3, #26
 80083c4:	4944      	ldr	r1, [pc, #272]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80083c6:	4313      	orrs	r3, r2
 80083c8:	604b      	str	r3, [r1, #4]
 80083ca:	e023      	b.n	8008414 <HAL_RCC_OscConfig+0x434>
 80083cc:	4b42      	ldr	r3, [pc, #264]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80083ce:	68db      	ldr	r3, [r3, #12]
 80083d0:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 80083d4:	687b      	ldr	r3, [r7, #4]
 80083d6:	6a1b      	ldr	r3, [r3, #32]
 80083d8:	061b      	lsls	r3, r3, #24
 80083da:	493f      	ldr	r1, [pc, #252]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80083dc:	4313      	orrs	r3, r2
 80083de:	60cb      	str	r3, [r1, #12]
 80083e0:	e018      	b.n	8008414 <HAL_RCC_OscConfig+0x434>
 80083e2:	4b3d      	ldr	r3, [pc, #244]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80083e4:	681b      	ldr	r3, [r3, #0]
 80083e6:	4a3c      	ldr	r2, [pc, #240]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80083e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80083ec:	6013      	str	r3, [r2, #0]
 80083ee:	f7fe fcdf 	bl	8006db0 <HAL_GetTick>
 80083f2:	6278      	str	r0, [r7, #36]	; 0x24
 80083f4:	e008      	b.n	8008408 <HAL_RCC_OscConfig+0x428>
 80083f6:	f7fe fcdb 	bl	8006db0 <HAL_GetTick>
 80083fa:	4602      	mov	r2, r0
 80083fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80083fe:	1ad3      	subs	r3, r2, r3
 8008400:	2b02      	cmp	r3, #2
 8008402:	d901      	bls.n	8008408 <HAL_RCC_OscConfig+0x428>
 8008404:	2303      	movs	r3, #3
 8008406:	e212      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 8008408:	4b33      	ldr	r3, [pc, #204]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 800840a:	681b      	ldr	r3, [r3, #0]
 800840c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008410:	2b00      	cmp	r3, #0
 8008412:	d1f0      	bne.n	80083f6 <HAL_RCC_OscConfig+0x416>
 8008414:	687b      	ldr	r3, [r7, #4]
 8008416:	681b      	ldr	r3, [r3, #0]
 8008418:	f003 0308 	and.w	r3, r3, #8
 800841c:	2b00      	cmp	r3, #0
 800841e:	d036      	beq.n	800848e <HAL_RCC_OscConfig+0x4ae>
 8008420:	687b      	ldr	r3, [r7, #4]
 8008422:	695b      	ldr	r3, [r3, #20]
 8008424:	2b00      	cmp	r3, #0
 8008426:	d019      	beq.n	800845c <HAL_RCC_OscConfig+0x47c>
 8008428:	4b2b      	ldr	r3, [pc, #172]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 800842a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800842c:	4a2a      	ldr	r2, [pc, #168]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 800842e:	f043 0301 	orr.w	r3, r3, #1
 8008432:	6753      	str	r3, [r2, #116]	; 0x74
 8008434:	f7fe fcbc 	bl	8006db0 <HAL_GetTick>
 8008438:	6278      	str	r0, [r7, #36]	; 0x24
 800843a:	e008      	b.n	800844e <HAL_RCC_OscConfig+0x46e>
 800843c:	f7fe fcb8 	bl	8006db0 <HAL_GetTick>
 8008440:	4602      	mov	r2, r0
 8008442:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008444:	1ad3      	subs	r3, r2, r3
 8008446:	2b02      	cmp	r3, #2
 8008448:	d901      	bls.n	800844e <HAL_RCC_OscConfig+0x46e>
 800844a:	2303      	movs	r3, #3
 800844c:	e1ef      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 800844e:	4b22      	ldr	r3, [pc, #136]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 8008450:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008452:	f003 0302 	and.w	r3, r3, #2
 8008456:	2b00      	cmp	r3, #0
 8008458:	d0f0      	beq.n	800843c <HAL_RCC_OscConfig+0x45c>
 800845a:	e018      	b.n	800848e <HAL_RCC_OscConfig+0x4ae>
 800845c:	4b1e      	ldr	r3, [pc, #120]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 800845e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008460:	4a1d      	ldr	r2, [pc, #116]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 8008462:	f023 0301 	bic.w	r3, r3, #1
 8008466:	6753      	str	r3, [r2, #116]	; 0x74
 8008468:	f7fe fca2 	bl	8006db0 <HAL_GetTick>
 800846c:	6278      	str	r0, [r7, #36]	; 0x24
 800846e:	e008      	b.n	8008482 <HAL_RCC_OscConfig+0x4a2>
 8008470:	f7fe fc9e 	bl	8006db0 <HAL_GetTick>
 8008474:	4602      	mov	r2, r0
 8008476:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008478:	1ad3      	subs	r3, r2, r3
 800847a:	2b02      	cmp	r3, #2
 800847c:	d901      	bls.n	8008482 <HAL_RCC_OscConfig+0x4a2>
 800847e:	2303      	movs	r3, #3
 8008480:	e1d5      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 8008482:	4b15      	ldr	r3, [pc, #84]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 8008484:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008486:	f003 0302 	and.w	r3, r3, #2
 800848a:	2b00      	cmp	r3, #0
 800848c:	d1f0      	bne.n	8008470 <HAL_RCC_OscConfig+0x490>
 800848e:	687b      	ldr	r3, [r7, #4]
 8008490:	681b      	ldr	r3, [r3, #0]
 8008492:	f003 0320 	and.w	r3, r3, #32
 8008496:	2b00      	cmp	r3, #0
 8008498:	d039      	beq.n	800850e <HAL_RCC_OscConfig+0x52e>
 800849a:	687b      	ldr	r3, [r7, #4]
 800849c:	699b      	ldr	r3, [r3, #24]
 800849e:	2b00      	cmp	r3, #0
 80084a0:	d01c      	beq.n	80084dc <HAL_RCC_OscConfig+0x4fc>
 80084a2:	4b0d      	ldr	r3, [pc, #52]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80084a4:	681b      	ldr	r3, [r3, #0]
 80084a6:	4a0c      	ldr	r2, [pc, #48]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80084a8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80084ac:	6013      	str	r3, [r2, #0]
 80084ae:	f7fe fc7f 	bl	8006db0 <HAL_GetTick>
 80084b2:	6278      	str	r0, [r7, #36]	; 0x24
 80084b4:	e008      	b.n	80084c8 <HAL_RCC_OscConfig+0x4e8>
 80084b6:	f7fe fc7b 	bl	8006db0 <HAL_GetTick>
 80084ba:	4602      	mov	r2, r0
 80084bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80084be:	1ad3      	subs	r3, r2, r3
 80084c0:	2b02      	cmp	r3, #2
 80084c2:	d901      	bls.n	80084c8 <HAL_RCC_OscConfig+0x4e8>
 80084c4:	2303      	movs	r3, #3
 80084c6:	e1b2      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 80084c8:	4b03      	ldr	r3, [pc, #12]	; (80084d8 <HAL_RCC_OscConfig+0x4f8>)
 80084ca:	681b      	ldr	r3, [r3, #0]
 80084cc:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80084d0:	2b00      	cmp	r3, #0
 80084d2:	d0f0      	beq.n	80084b6 <HAL_RCC_OscConfig+0x4d6>
 80084d4:	e01b      	b.n	800850e <HAL_RCC_OscConfig+0x52e>
 80084d6:	bf00      	nop
 80084d8:	58024400 	.word	0x58024400
 80084dc:	4b9b      	ldr	r3, [pc, #620]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80084de:	681b      	ldr	r3, [r3, #0]
 80084e0:	4a9a      	ldr	r2, [pc, #616]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80084e2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80084e6:	6013      	str	r3, [r2, #0]
 80084e8:	f7fe fc62 	bl	8006db0 <HAL_GetTick>
 80084ec:	6278      	str	r0, [r7, #36]	; 0x24
 80084ee:	e008      	b.n	8008502 <HAL_RCC_OscConfig+0x522>
 80084f0:	f7fe fc5e 	bl	8006db0 <HAL_GetTick>
 80084f4:	4602      	mov	r2, r0
 80084f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80084f8:	1ad3      	subs	r3, r2, r3
 80084fa:	2b02      	cmp	r3, #2
 80084fc:	d901      	bls.n	8008502 <HAL_RCC_OscConfig+0x522>
 80084fe:	2303      	movs	r3, #3
 8008500:	e195      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 8008502:	4b92      	ldr	r3, [pc, #584]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008504:	681b      	ldr	r3, [r3, #0]
 8008506:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800850a:	2b00      	cmp	r3, #0
 800850c:	d1f0      	bne.n	80084f0 <HAL_RCC_OscConfig+0x510>
 800850e:	687b      	ldr	r3, [r7, #4]
 8008510:	681b      	ldr	r3, [r3, #0]
 8008512:	f003 0304 	and.w	r3, r3, #4
 8008516:	2b00      	cmp	r3, #0
 8008518:	f000 8081 	beq.w	800861e <HAL_RCC_OscConfig+0x63e>
 800851c:	4b8c      	ldr	r3, [pc, #560]	; (8008750 <HAL_RCC_OscConfig+0x770>)
 800851e:	681b      	ldr	r3, [r3, #0]
 8008520:	4a8b      	ldr	r2, [pc, #556]	; (8008750 <HAL_RCC_OscConfig+0x770>)
 8008522:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008526:	6013      	str	r3, [r2, #0]
 8008528:	f7fe fc42 	bl	8006db0 <HAL_GetTick>
 800852c:	6278      	str	r0, [r7, #36]	; 0x24
 800852e:	e008      	b.n	8008542 <HAL_RCC_OscConfig+0x562>
 8008530:	f7fe fc3e 	bl	8006db0 <HAL_GetTick>
 8008534:	4602      	mov	r2, r0
 8008536:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008538:	1ad3      	subs	r3, r2, r3
 800853a:	2b64      	cmp	r3, #100	; 0x64
 800853c:	d901      	bls.n	8008542 <HAL_RCC_OscConfig+0x562>
 800853e:	2303      	movs	r3, #3
 8008540:	e175      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 8008542:	4b83      	ldr	r3, [pc, #524]	; (8008750 <HAL_RCC_OscConfig+0x770>)
 8008544:	681b      	ldr	r3, [r3, #0]
 8008546:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800854a:	2b00      	cmp	r3, #0
 800854c:	d0f0      	beq.n	8008530 <HAL_RCC_OscConfig+0x550>
 800854e:	687b      	ldr	r3, [r7, #4]
 8008550:	689b      	ldr	r3, [r3, #8]
 8008552:	2b01      	cmp	r3, #1
 8008554:	d106      	bne.n	8008564 <HAL_RCC_OscConfig+0x584>
 8008556:	4b7d      	ldr	r3, [pc, #500]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008558:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800855a:	4a7c      	ldr	r2, [pc, #496]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 800855c:	f043 0301 	orr.w	r3, r3, #1
 8008560:	6713      	str	r3, [r2, #112]	; 0x70
 8008562:	e02d      	b.n	80085c0 <HAL_RCC_OscConfig+0x5e0>
 8008564:	687b      	ldr	r3, [r7, #4]
 8008566:	689b      	ldr	r3, [r3, #8]
 8008568:	2b00      	cmp	r3, #0
 800856a:	d10c      	bne.n	8008586 <HAL_RCC_OscConfig+0x5a6>
 800856c:	4b77      	ldr	r3, [pc, #476]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 800856e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008570:	4a76      	ldr	r2, [pc, #472]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008572:	f023 0301 	bic.w	r3, r3, #1
 8008576:	6713      	str	r3, [r2, #112]	; 0x70
 8008578:	4b74      	ldr	r3, [pc, #464]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 800857a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800857c:	4a73      	ldr	r2, [pc, #460]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 800857e:	f023 0304 	bic.w	r3, r3, #4
 8008582:	6713      	str	r3, [r2, #112]	; 0x70
 8008584:	e01c      	b.n	80085c0 <HAL_RCC_OscConfig+0x5e0>
 8008586:	687b      	ldr	r3, [r7, #4]
 8008588:	689b      	ldr	r3, [r3, #8]
 800858a:	2b05      	cmp	r3, #5
 800858c:	d10c      	bne.n	80085a8 <HAL_RCC_OscConfig+0x5c8>
 800858e:	4b6f      	ldr	r3, [pc, #444]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008590:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008592:	4a6e      	ldr	r2, [pc, #440]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008594:	f043 0304 	orr.w	r3, r3, #4
 8008598:	6713      	str	r3, [r2, #112]	; 0x70
 800859a:	4b6c      	ldr	r3, [pc, #432]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 800859c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800859e:	4a6b      	ldr	r2, [pc, #428]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80085a0:	f043 0301 	orr.w	r3, r3, #1
 80085a4:	6713      	str	r3, [r2, #112]	; 0x70
 80085a6:	e00b      	b.n	80085c0 <HAL_RCC_OscConfig+0x5e0>
 80085a8:	4b68      	ldr	r3, [pc, #416]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80085aa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80085ac:	4a67      	ldr	r2, [pc, #412]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80085ae:	f023 0301 	bic.w	r3, r3, #1
 80085b2:	6713      	str	r3, [r2, #112]	; 0x70
 80085b4:	4b65      	ldr	r3, [pc, #404]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80085b6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80085b8:	4a64      	ldr	r2, [pc, #400]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80085ba:	f023 0304 	bic.w	r3, r3, #4
 80085be:	6713      	str	r3, [r2, #112]	; 0x70
 80085c0:	687b      	ldr	r3, [r7, #4]
 80085c2:	689b      	ldr	r3, [r3, #8]
 80085c4:	2b00      	cmp	r3, #0
 80085c6:	d015      	beq.n	80085f4 <HAL_RCC_OscConfig+0x614>
 80085c8:	f7fe fbf2 	bl	8006db0 <HAL_GetTick>
 80085cc:	6278      	str	r0, [r7, #36]	; 0x24
 80085ce:	e00a      	b.n	80085e6 <HAL_RCC_OscConfig+0x606>
 80085d0:	f7fe fbee 	bl	8006db0 <HAL_GetTick>
 80085d4:	4602      	mov	r2, r0
 80085d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80085d8:	1ad3      	subs	r3, r2, r3
 80085da:	f241 3288 	movw	r2, #5000	; 0x1388
 80085de:	4293      	cmp	r3, r2
 80085e0:	d901      	bls.n	80085e6 <HAL_RCC_OscConfig+0x606>
 80085e2:	2303      	movs	r3, #3
 80085e4:	e123      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 80085e6:	4b59      	ldr	r3, [pc, #356]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80085e8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80085ea:	f003 0302 	and.w	r3, r3, #2
 80085ee:	2b00      	cmp	r3, #0
 80085f0:	d0ee      	beq.n	80085d0 <HAL_RCC_OscConfig+0x5f0>
 80085f2:	e014      	b.n	800861e <HAL_RCC_OscConfig+0x63e>
 80085f4:	f7fe fbdc 	bl	8006db0 <HAL_GetTick>
 80085f8:	6278      	str	r0, [r7, #36]	; 0x24
 80085fa:	e00a      	b.n	8008612 <HAL_RCC_OscConfig+0x632>
 80085fc:	f7fe fbd8 	bl	8006db0 <HAL_GetTick>
 8008600:	4602      	mov	r2, r0
 8008602:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008604:	1ad3      	subs	r3, r2, r3
 8008606:	f241 3288 	movw	r2, #5000	; 0x1388
 800860a:	4293      	cmp	r3, r2
 800860c:	d901      	bls.n	8008612 <HAL_RCC_OscConfig+0x632>
 800860e:	2303      	movs	r3, #3
 8008610:	e10d      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 8008612:	4b4e      	ldr	r3, [pc, #312]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008614:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008616:	f003 0302 	and.w	r3, r3, #2
 800861a:	2b00      	cmp	r3, #0
 800861c:	d1ee      	bne.n	80085fc <HAL_RCC_OscConfig+0x61c>
 800861e:	687b      	ldr	r3, [r7, #4]
 8008620:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008622:	2b00      	cmp	r3, #0
 8008624:	f000 8102 	beq.w	800882c <HAL_RCC_OscConfig+0x84c>
 8008628:	4b48      	ldr	r3, [pc, #288]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 800862a:	691b      	ldr	r3, [r3, #16]
 800862c:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8008630:	2b18      	cmp	r3, #24
 8008632:	f000 80bd 	beq.w	80087b0 <HAL_RCC_OscConfig+0x7d0>
 8008636:	687b      	ldr	r3, [r7, #4]
 8008638:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800863a:	2b02      	cmp	r3, #2
 800863c:	f040 809e 	bne.w	800877c <HAL_RCC_OscConfig+0x79c>
 8008640:	4b42      	ldr	r3, [pc, #264]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008642:	681b      	ldr	r3, [r3, #0]
 8008644:	4a41      	ldr	r2, [pc, #260]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008646:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800864a:	6013      	str	r3, [r2, #0]
 800864c:	f7fe fbb0 	bl	8006db0 <HAL_GetTick>
 8008650:	6278      	str	r0, [r7, #36]	; 0x24
 8008652:	e008      	b.n	8008666 <HAL_RCC_OscConfig+0x686>
 8008654:	f7fe fbac 	bl	8006db0 <HAL_GetTick>
 8008658:	4602      	mov	r2, r0
 800865a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800865c:	1ad3      	subs	r3, r2, r3
 800865e:	2b02      	cmp	r3, #2
 8008660:	d901      	bls.n	8008666 <HAL_RCC_OscConfig+0x686>
 8008662:	2303      	movs	r3, #3
 8008664:	e0e3      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 8008666:	4b39      	ldr	r3, [pc, #228]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008668:	681b      	ldr	r3, [r3, #0]
 800866a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800866e:	2b00      	cmp	r3, #0
 8008670:	d1f0      	bne.n	8008654 <HAL_RCC_OscConfig+0x674>
 8008672:	4b36      	ldr	r3, [pc, #216]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008674:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8008676:	4b37      	ldr	r3, [pc, #220]	; (8008754 <HAL_RCC_OscConfig+0x774>)
 8008678:	4013      	ands	r3, r2
 800867a:	687a      	ldr	r2, [r7, #4]
 800867c:	6a91      	ldr	r1, [r2, #40]	; 0x28
 800867e:	687a      	ldr	r2, [r7, #4]
 8008680:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8008682:	0112      	lsls	r2, r2, #4
 8008684:	430a      	orrs	r2, r1
 8008686:	4931      	ldr	r1, [pc, #196]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008688:	4313      	orrs	r3, r2
 800868a:	628b      	str	r3, [r1, #40]	; 0x28
 800868c:	687b      	ldr	r3, [r7, #4]
 800868e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008690:	3b01      	subs	r3, #1
 8008692:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8008696:	687b      	ldr	r3, [r7, #4]
 8008698:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800869a:	3b01      	subs	r3, #1
 800869c:	025b      	lsls	r3, r3, #9
 800869e:	b29b      	uxth	r3, r3
 80086a0:	431a      	orrs	r2, r3
 80086a2:	687b      	ldr	r3, [r7, #4]
 80086a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80086a6:	3b01      	subs	r3, #1
 80086a8:	041b      	lsls	r3, r3, #16
 80086aa:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 80086ae:	431a      	orrs	r2, r3
 80086b0:	687b      	ldr	r3, [r7, #4]
 80086b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80086b4:	3b01      	subs	r3, #1
 80086b6:	061b      	lsls	r3, r3, #24
 80086b8:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 80086bc:	4923      	ldr	r1, [pc, #140]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80086be:	4313      	orrs	r3, r2
 80086c0:	630b      	str	r3, [r1, #48]	; 0x30
 80086c2:	4b22      	ldr	r3, [pc, #136]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80086c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80086c6:	4a21      	ldr	r2, [pc, #132]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80086c8:	f023 0301 	bic.w	r3, r3, #1
 80086cc:	62d3      	str	r3, [r2, #44]	; 0x2c
 80086ce:	4b1f      	ldr	r3, [pc, #124]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80086d0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80086d2:	4b21      	ldr	r3, [pc, #132]	; (8008758 <HAL_RCC_OscConfig+0x778>)
 80086d4:	4013      	ands	r3, r2
 80086d6:	687a      	ldr	r2, [r7, #4]
 80086d8:	6c92      	ldr	r2, [r2, #72]	; 0x48
 80086da:	00d2      	lsls	r2, r2, #3
 80086dc:	491b      	ldr	r1, [pc, #108]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80086de:	4313      	orrs	r3, r2
 80086e0:	634b      	str	r3, [r1, #52]	; 0x34
 80086e2:	4b1a      	ldr	r3, [pc, #104]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80086e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80086e6:	f023 020c 	bic.w	r2, r3, #12
 80086ea:	687b      	ldr	r3, [r7, #4]
 80086ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80086ee:	4917      	ldr	r1, [pc, #92]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80086f0:	4313      	orrs	r3, r2
 80086f2:	62cb      	str	r3, [r1, #44]	; 0x2c
 80086f4:	4b15      	ldr	r3, [pc, #84]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 80086f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80086f8:	f023 0202 	bic.w	r2, r3, #2
 80086fc:	687b      	ldr	r3, [r7, #4]
 80086fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008700:	4912      	ldr	r1, [pc, #72]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008702:	4313      	orrs	r3, r2
 8008704:	62cb      	str	r3, [r1, #44]	; 0x2c
 8008706:	4b11      	ldr	r3, [pc, #68]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008708:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800870a:	4a10      	ldr	r2, [pc, #64]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 800870c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008710:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008712:	4b0e      	ldr	r3, [pc, #56]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008714:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008716:	4a0d      	ldr	r2, [pc, #52]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008718:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800871c:	62d3      	str	r3, [r2, #44]	; 0x2c
 800871e:	4b0b      	ldr	r3, [pc, #44]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008720:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008722:	4a0a      	ldr	r2, [pc, #40]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008724:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8008728:	62d3      	str	r3, [r2, #44]	; 0x2c
 800872a:	4b08      	ldr	r3, [pc, #32]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 800872c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800872e:	4a07      	ldr	r2, [pc, #28]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008730:	f043 0301 	orr.w	r3, r3, #1
 8008734:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008736:	4b05      	ldr	r3, [pc, #20]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 8008738:	681b      	ldr	r3, [r3, #0]
 800873a:	4a04      	ldr	r2, [pc, #16]	; (800874c <HAL_RCC_OscConfig+0x76c>)
 800873c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8008740:	6013      	str	r3, [r2, #0]
 8008742:	f7fe fb35 	bl	8006db0 <HAL_GetTick>
 8008746:	6278      	str	r0, [r7, #36]	; 0x24
 8008748:	e011      	b.n	800876e <HAL_RCC_OscConfig+0x78e>
 800874a:	bf00      	nop
 800874c:	58024400 	.word	0x58024400
 8008750:	58024800 	.word	0x58024800
 8008754:	fffffc0c 	.word	0xfffffc0c
 8008758:	ffff0007 	.word	0xffff0007
 800875c:	f7fe fb28 	bl	8006db0 <HAL_GetTick>
 8008760:	4602      	mov	r2, r0
 8008762:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008764:	1ad3      	subs	r3, r2, r3
 8008766:	2b02      	cmp	r3, #2
 8008768:	d901      	bls.n	800876e <HAL_RCC_OscConfig+0x78e>
 800876a:	2303      	movs	r3, #3
 800876c:	e05f      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 800876e:	4b32      	ldr	r3, [pc, #200]	; (8008838 <HAL_RCC_OscConfig+0x858>)
 8008770:	681b      	ldr	r3, [r3, #0]
 8008772:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008776:	2b00      	cmp	r3, #0
 8008778:	d0f0      	beq.n	800875c <HAL_RCC_OscConfig+0x77c>
 800877a:	e057      	b.n	800882c <HAL_RCC_OscConfig+0x84c>
 800877c:	4b2e      	ldr	r3, [pc, #184]	; (8008838 <HAL_RCC_OscConfig+0x858>)
 800877e:	681b      	ldr	r3, [r3, #0]
 8008780:	4a2d      	ldr	r2, [pc, #180]	; (8008838 <HAL_RCC_OscConfig+0x858>)
 8008782:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8008786:	6013      	str	r3, [r2, #0]
 8008788:	f7fe fb12 	bl	8006db0 <HAL_GetTick>
 800878c:	6278      	str	r0, [r7, #36]	; 0x24
 800878e:	e008      	b.n	80087a2 <HAL_RCC_OscConfig+0x7c2>
 8008790:	f7fe fb0e 	bl	8006db0 <HAL_GetTick>
 8008794:	4602      	mov	r2, r0
 8008796:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008798:	1ad3      	subs	r3, r2, r3
 800879a:	2b02      	cmp	r3, #2
 800879c:	d901      	bls.n	80087a2 <HAL_RCC_OscConfig+0x7c2>
 800879e:	2303      	movs	r3, #3
 80087a0:	e045      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 80087a2:	4b25      	ldr	r3, [pc, #148]	; (8008838 <HAL_RCC_OscConfig+0x858>)
 80087a4:	681b      	ldr	r3, [r3, #0]
 80087a6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80087aa:	2b00      	cmp	r3, #0
 80087ac:	d1f0      	bne.n	8008790 <HAL_RCC_OscConfig+0x7b0>
 80087ae:	e03d      	b.n	800882c <HAL_RCC_OscConfig+0x84c>
 80087b0:	4b21      	ldr	r3, [pc, #132]	; (8008838 <HAL_RCC_OscConfig+0x858>)
 80087b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80087b4:	613b      	str	r3, [r7, #16]
 80087b6:	4b20      	ldr	r3, [pc, #128]	; (8008838 <HAL_RCC_OscConfig+0x858>)
 80087b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80087ba:	60fb      	str	r3, [r7, #12]
 80087bc:	687b      	ldr	r3, [r7, #4]
 80087be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80087c0:	2b01      	cmp	r3, #1
 80087c2:	d031      	beq.n	8008828 <HAL_RCC_OscConfig+0x848>
 80087c4:	693b      	ldr	r3, [r7, #16]
 80087c6:	f003 0203 	and.w	r2, r3, #3
 80087ca:	687b      	ldr	r3, [r7, #4]
 80087cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80087ce:	429a      	cmp	r2, r3
 80087d0:	d12a      	bne.n	8008828 <HAL_RCC_OscConfig+0x848>
 80087d2:	693b      	ldr	r3, [r7, #16]
 80087d4:	091b      	lsrs	r3, r3, #4
 80087d6:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80087da:	687b      	ldr	r3, [r7, #4]
 80087dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80087de:	429a      	cmp	r2, r3
 80087e0:	d122      	bne.n	8008828 <HAL_RCC_OscConfig+0x848>
 80087e2:	68fb      	ldr	r3, [r7, #12]
 80087e4:	f3c3 0208 	ubfx	r2, r3, #0, #9
 80087e8:	687b      	ldr	r3, [r7, #4]
 80087ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80087ec:	3b01      	subs	r3, #1
 80087ee:	429a      	cmp	r2, r3
 80087f0:	d11a      	bne.n	8008828 <HAL_RCC_OscConfig+0x848>
 80087f2:	68fb      	ldr	r3, [r7, #12]
 80087f4:	0a5b      	lsrs	r3, r3, #9
 80087f6:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 80087fa:	687b      	ldr	r3, [r7, #4]
 80087fc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80087fe:	3b01      	subs	r3, #1
 8008800:	429a      	cmp	r2, r3
 8008802:	d111      	bne.n	8008828 <HAL_RCC_OscConfig+0x848>
 8008804:	68fb      	ldr	r3, [r7, #12]
 8008806:	0c1b      	lsrs	r3, r3, #16
 8008808:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800880c:	687b      	ldr	r3, [r7, #4]
 800880e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008810:	3b01      	subs	r3, #1
 8008812:	429a      	cmp	r2, r3
 8008814:	d108      	bne.n	8008828 <HAL_RCC_OscConfig+0x848>
 8008816:	68fb      	ldr	r3, [r7, #12]
 8008818:	0e1b      	lsrs	r3, r3, #24
 800881a:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800881e:	687b      	ldr	r3, [r7, #4]
 8008820:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008822:	3b01      	subs	r3, #1
 8008824:	429a      	cmp	r2, r3
 8008826:	d001      	beq.n	800882c <HAL_RCC_OscConfig+0x84c>
 8008828:	2301      	movs	r3, #1
 800882a:	e000      	b.n	800882e <HAL_RCC_OscConfig+0x84e>
 800882c:	2300      	movs	r3, #0
 800882e:	4618      	mov	r0, r3
 8008830:	3730      	adds	r7, #48	; 0x30
 8008832:	46bd      	mov	sp, r7
 8008834:	bd80      	pop	{r7, pc}
 8008836:	bf00      	nop
 8008838:	58024400 	.word	0x58024400

0800883c <HAL_RCC_ClockConfig>:
 800883c:	b580      	push	{r7, lr}
 800883e:	b086      	sub	sp, #24
 8008840:	af00      	add	r7, sp, #0
 8008842:	6078      	str	r0, [r7, #4]
 8008844:	6039      	str	r1, [r7, #0]
 8008846:	687b      	ldr	r3, [r7, #4]
 8008848:	2b00      	cmp	r3, #0
 800884a:	d101      	bne.n	8008850 <HAL_RCC_ClockConfig+0x14>
 800884c:	2301      	movs	r3, #1
 800884e:	e19c      	b.n	8008b8a <HAL_RCC_ClockConfig+0x34e>
 8008850:	4b8a      	ldr	r3, [pc, #552]	; (8008a7c <HAL_RCC_ClockConfig+0x240>)
 8008852:	681b      	ldr	r3, [r3, #0]
 8008854:	f003 030f 	and.w	r3, r3, #15
 8008858:	683a      	ldr	r2, [r7, #0]
 800885a:	429a      	cmp	r2, r3
 800885c:	d910      	bls.n	8008880 <HAL_RCC_ClockConfig+0x44>
 800885e:	4b87      	ldr	r3, [pc, #540]	; (8008a7c <HAL_RCC_ClockConfig+0x240>)
 8008860:	681b      	ldr	r3, [r3, #0]
 8008862:	f023 020f 	bic.w	r2, r3, #15
 8008866:	4985      	ldr	r1, [pc, #532]	; (8008a7c <HAL_RCC_ClockConfig+0x240>)
 8008868:	683b      	ldr	r3, [r7, #0]
 800886a:	4313      	orrs	r3, r2
 800886c:	600b      	str	r3, [r1, #0]
 800886e:	4b83      	ldr	r3, [pc, #524]	; (8008a7c <HAL_RCC_ClockConfig+0x240>)
 8008870:	681b      	ldr	r3, [r3, #0]
 8008872:	f003 030f 	and.w	r3, r3, #15
 8008876:	683a      	ldr	r2, [r7, #0]
 8008878:	429a      	cmp	r2, r3
 800887a:	d001      	beq.n	8008880 <HAL_RCC_ClockConfig+0x44>
 800887c:	2301      	movs	r3, #1
 800887e:	e184      	b.n	8008b8a <HAL_RCC_ClockConfig+0x34e>
 8008880:	687b      	ldr	r3, [r7, #4]
 8008882:	681b      	ldr	r3, [r3, #0]
 8008884:	f003 0304 	and.w	r3, r3, #4
 8008888:	2b00      	cmp	r3, #0
 800888a:	d010      	beq.n	80088ae <HAL_RCC_ClockConfig+0x72>
 800888c:	687b      	ldr	r3, [r7, #4]
 800888e:	691a      	ldr	r2, [r3, #16]
 8008890:	4b7b      	ldr	r3, [pc, #492]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 8008892:	699b      	ldr	r3, [r3, #24]
 8008894:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8008898:	429a      	cmp	r2, r3
 800889a:	d908      	bls.n	80088ae <HAL_RCC_ClockConfig+0x72>
 800889c:	4b78      	ldr	r3, [pc, #480]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 800889e:	699b      	ldr	r3, [r3, #24]
 80088a0:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80088a4:	687b      	ldr	r3, [r7, #4]
 80088a6:	691b      	ldr	r3, [r3, #16]
 80088a8:	4975      	ldr	r1, [pc, #468]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 80088aa:	4313      	orrs	r3, r2
 80088ac:	618b      	str	r3, [r1, #24]
 80088ae:	687b      	ldr	r3, [r7, #4]
 80088b0:	681b      	ldr	r3, [r3, #0]
 80088b2:	f003 0308 	and.w	r3, r3, #8
 80088b6:	2b00      	cmp	r3, #0
 80088b8:	d010      	beq.n	80088dc <HAL_RCC_ClockConfig+0xa0>
 80088ba:	687b      	ldr	r3, [r7, #4]
 80088bc:	695a      	ldr	r2, [r3, #20]
 80088be:	4b70      	ldr	r3, [pc, #448]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 80088c0:	69db      	ldr	r3, [r3, #28]
 80088c2:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80088c6:	429a      	cmp	r2, r3
 80088c8:	d908      	bls.n	80088dc <HAL_RCC_ClockConfig+0xa0>
 80088ca:	4b6d      	ldr	r3, [pc, #436]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 80088cc:	69db      	ldr	r3, [r3, #28]
 80088ce:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80088d2:	687b      	ldr	r3, [r7, #4]
 80088d4:	695b      	ldr	r3, [r3, #20]
 80088d6:	496a      	ldr	r1, [pc, #424]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 80088d8:	4313      	orrs	r3, r2
 80088da:	61cb      	str	r3, [r1, #28]
 80088dc:	687b      	ldr	r3, [r7, #4]
 80088de:	681b      	ldr	r3, [r3, #0]
 80088e0:	f003 0310 	and.w	r3, r3, #16
 80088e4:	2b00      	cmp	r3, #0
 80088e6:	d010      	beq.n	800890a <HAL_RCC_ClockConfig+0xce>
 80088e8:	687b      	ldr	r3, [r7, #4]
 80088ea:	699a      	ldr	r2, [r3, #24]
 80088ec:	4b64      	ldr	r3, [pc, #400]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 80088ee:	69db      	ldr	r3, [r3, #28]
 80088f0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80088f4:	429a      	cmp	r2, r3
 80088f6:	d908      	bls.n	800890a <HAL_RCC_ClockConfig+0xce>
 80088f8:	4b61      	ldr	r3, [pc, #388]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 80088fa:	69db      	ldr	r3, [r3, #28]
 80088fc:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8008900:	687b      	ldr	r3, [r7, #4]
 8008902:	699b      	ldr	r3, [r3, #24]
 8008904:	495e      	ldr	r1, [pc, #376]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 8008906:	4313      	orrs	r3, r2
 8008908:	61cb      	str	r3, [r1, #28]
 800890a:	687b      	ldr	r3, [r7, #4]
 800890c:	681b      	ldr	r3, [r3, #0]
 800890e:	f003 0320 	and.w	r3, r3, #32
 8008912:	2b00      	cmp	r3, #0
 8008914:	d010      	beq.n	8008938 <HAL_RCC_ClockConfig+0xfc>
 8008916:	687b      	ldr	r3, [r7, #4]
 8008918:	69da      	ldr	r2, [r3, #28]
 800891a:	4b59      	ldr	r3, [pc, #356]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 800891c:	6a1b      	ldr	r3, [r3, #32]
 800891e:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8008922:	429a      	cmp	r2, r3
 8008924:	d908      	bls.n	8008938 <HAL_RCC_ClockConfig+0xfc>
 8008926:	4b56      	ldr	r3, [pc, #344]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 8008928:	6a1b      	ldr	r3, [r3, #32]
 800892a:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800892e:	687b      	ldr	r3, [r7, #4]
 8008930:	69db      	ldr	r3, [r3, #28]
 8008932:	4953      	ldr	r1, [pc, #332]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 8008934:	4313      	orrs	r3, r2
 8008936:	620b      	str	r3, [r1, #32]
 8008938:	687b      	ldr	r3, [r7, #4]
 800893a:	681b      	ldr	r3, [r3, #0]
 800893c:	f003 0302 	and.w	r3, r3, #2
 8008940:	2b00      	cmp	r3, #0
 8008942:	d010      	beq.n	8008966 <HAL_RCC_ClockConfig+0x12a>
 8008944:	687b      	ldr	r3, [r7, #4]
 8008946:	68da      	ldr	r2, [r3, #12]
 8008948:	4b4d      	ldr	r3, [pc, #308]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 800894a:	699b      	ldr	r3, [r3, #24]
 800894c:	f003 030f 	and.w	r3, r3, #15
 8008950:	429a      	cmp	r2, r3
 8008952:	d908      	bls.n	8008966 <HAL_RCC_ClockConfig+0x12a>
 8008954:	4b4a      	ldr	r3, [pc, #296]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 8008956:	699b      	ldr	r3, [r3, #24]
 8008958:	f023 020f 	bic.w	r2, r3, #15
 800895c:	687b      	ldr	r3, [r7, #4]
 800895e:	68db      	ldr	r3, [r3, #12]
 8008960:	4947      	ldr	r1, [pc, #284]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 8008962:	4313      	orrs	r3, r2
 8008964:	618b      	str	r3, [r1, #24]
 8008966:	687b      	ldr	r3, [r7, #4]
 8008968:	681b      	ldr	r3, [r3, #0]
 800896a:	f003 0301 	and.w	r3, r3, #1
 800896e:	2b00      	cmp	r3, #0
 8008970:	d055      	beq.n	8008a1e <HAL_RCC_ClockConfig+0x1e2>
 8008972:	4b43      	ldr	r3, [pc, #268]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 8008974:	699b      	ldr	r3, [r3, #24]
 8008976:	f423 6270 	bic.w	r2, r3, #3840	; 0xf00
 800897a:	687b      	ldr	r3, [r7, #4]
 800897c:	689b      	ldr	r3, [r3, #8]
 800897e:	4940      	ldr	r1, [pc, #256]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 8008980:	4313      	orrs	r3, r2
 8008982:	618b      	str	r3, [r1, #24]
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	685b      	ldr	r3, [r3, #4]
 8008988:	2b02      	cmp	r3, #2
 800898a:	d107      	bne.n	800899c <HAL_RCC_ClockConfig+0x160>
 800898c:	4b3c      	ldr	r3, [pc, #240]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 800898e:	681b      	ldr	r3, [r3, #0]
 8008990:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008994:	2b00      	cmp	r3, #0
 8008996:	d121      	bne.n	80089dc <HAL_RCC_ClockConfig+0x1a0>
 8008998:	2301      	movs	r3, #1
 800899a:	e0f6      	b.n	8008b8a <HAL_RCC_ClockConfig+0x34e>
 800899c:	687b      	ldr	r3, [r7, #4]
 800899e:	685b      	ldr	r3, [r3, #4]
 80089a0:	2b03      	cmp	r3, #3
 80089a2:	d107      	bne.n	80089b4 <HAL_RCC_ClockConfig+0x178>
 80089a4:	4b36      	ldr	r3, [pc, #216]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 80089a6:	681b      	ldr	r3, [r3, #0]
 80089a8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80089ac:	2b00      	cmp	r3, #0
 80089ae:	d115      	bne.n	80089dc <HAL_RCC_ClockConfig+0x1a0>
 80089b0:	2301      	movs	r3, #1
 80089b2:	e0ea      	b.n	8008b8a <HAL_RCC_ClockConfig+0x34e>
 80089b4:	687b      	ldr	r3, [r7, #4]
 80089b6:	685b      	ldr	r3, [r3, #4]
 80089b8:	2b01      	cmp	r3, #1
 80089ba:	d107      	bne.n	80089cc <HAL_RCC_ClockConfig+0x190>
 80089bc:	4b30      	ldr	r3, [pc, #192]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 80089be:	681b      	ldr	r3, [r3, #0]
 80089c0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80089c4:	2b00      	cmp	r3, #0
 80089c6:	d109      	bne.n	80089dc <HAL_RCC_ClockConfig+0x1a0>
 80089c8:	2301      	movs	r3, #1
 80089ca:	e0de      	b.n	8008b8a <HAL_RCC_ClockConfig+0x34e>
 80089cc:	4b2c      	ldr	r3, [pc, #176]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 80089ce:	681b      	ldr	r3, [r3, #0]
 80089d0:	f003 0304 	and.w	r3, r3, #4
 80089d4:	2b00      	cmp	r3, #0
 80089d6:	d101      	bne.n	80089dc <HAL_RCC_ClockConfig+0x1a0>
 80089d8:	2301      	movs	r3, #1
 80089da:	e0d6      	b.n	8008b8a <HAL_RCC_ClockConfig+0x34e>
 80089dc:	4b28      	ldr	r3, [pc, #160]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 80089de:	691b      	ldr	r3, [r3, #16]
 80089e0:	f023 0207 	bic.w	r2, r3, #7
 80089e4:	687b      	ldr	r3, [r7, #4]
 80089e6:	685b      	ldr	r3, [r3, #4]
 80089e8:	4925      	ldr	r1, [pc, #148]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 80089ea:	4313      	orrs	r3, r2
 80089ec:	610b      	str	r3, [r1, #16]
 80089ee:	f7fe f9df 	bl	8006db0 <HAL_GetTick>
 80089f2:	6178      	str	r0, [r7, #20]
 80089f4:	e00a      	b.n	8008a0c <HAL_RCC_ClockConfig+0x1d0>
 80089f6:	f7fe f9db 	bl	8006db0 <HAL_GetTick>
 80089fa:	4602      	mov	r2, r0
 80089fc:	697b      	ldr	r3, [r7, #20]
 80089fe:	1ad3      	subs	r3, r2, r3
 8008a00:	f241 3288 	movw	r2, #5000	; 0x1388
 8008a04:	4293      	cmp	r3, r2
 8008a06:	d901      	bls.n	8008a0c <HAL_RCC_ClockConfig+0x1d0>
 8008a08:	2303      	movs	r3, #3
 8008a0a:	e0be      	b.n	8008b8a <HAL_RCC_ClockConfig+0x34e>
 8008a0c:	4b1c      	ldr	r3, [pc, #112]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 8008a0e:	691b      	ldr	r3, [r3, #16]
 8008a10:	f003 0238 	and.w	r2, r3, #56	; 0x38
 8008a14:	687b      	ldr	r3, [r7, #4]
 8008a16:	685b      	ldr	r3, [r3, #4]
 8008a18:	00db      	lsls	r3, r3, #3
 8008a1a:	429a      	cmp	r2, r3
 8008a1c:	d1eb      	bne.n	80089f6 <HAL_RCC_ClockConfig+0x1ba>
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	681b      	ldr	r3, [r3, #0]
 8008a22:	f003 0302 	and.w	r3, r3, #2
 8008a26:	2b00      	cmp	r3, #0
 8008a28:	d010      	beq.n	8008a4c <HAL_RCC_ClockConfig+0x210>
 8008a2a:	687b      	ldr	r3, [r7, #4]
 8008a2c:	68da      	ldr	r2, [r3, #12]
 8008a2e:	4b14      	ldr	r3, [pc, #80]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 8008a30:	699b      	ldr	r3, [r3, #24]
 8008a32:	f003 030f 	and.w	r3, r3, #15
 8008a36:	429a      	cmp	r2, r3
 8008a38:	d208      	bcs.n	8008a4c <HAL_RCC_ClockConfig+0x210>
 8008a3a:	4b11      	ldr	r3, [pc, #68]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 8008a3c:	699b      	ldr	r3, [r3, #24]
 8008a3e:	f023 020f 	bic.w	r2, r3, #15
 8008a42:	687b      	ldr	r3, [r7, #4]
 8008a44:	68db      	ldr	r3, [r3, #12]
 8008a46:	490e      	ldr	r1, [pc, #56]	; (8008a80 <HAL_RCC_ClockConfig+0x244>)
 8008a48:	4313      	orrs	r3, r2
 8008a4a:	618b      	str	r3, [r1, #24]
 8008a4c:	4b0b      	ldr	r3, [pc, #44]	; (8008a7c <HAL_RCC_ClockConfig+0x240>)
 8008a4e:	681b      	ldr	r3, [r3, #0]
 8008a50:	f003 030f 	and.w	r3, r3, #15
 8008a54:	683a      	ldr	r2, [r7, #0]
 8008a56:	429a      	cmp	r2, r3
 8008a58:	d214      	bcs.n	8008a84 <HAL_RCC_ClockConfig+0x248>
 8008a5a:	4b08      	ldr	r3, [pc, #32]	; (8008a7c <HAL_RCC_ClockConfig+0x240>)
 8008a5c:	681b      	ldr	r3, [r3, #0]
 8008a5e:	f023 020f 	bic.w	r2, r3, #15
 8008a62:	4906      	ldr	r1, [pc, #24]	; (8008a7c <HAL_RCC_ClockConfig+0x240>)
 8008a64:	683b      	ldr	r3, [r7, #0]
 8008a66:	4313      	orrs	r3, r2
 8008a68:	600b      	str	r3, [r1, #0]
 8008a6a:	4b04      	ldr	r3, [pc, #16]	; (8008a7c <HAL_RCC_ClockConfig+0x240>)
 8008a6c:	681b      	ldr	r3, [r3, #0]
 8008a6e:	f003 030f 	and.w	r3, r3, #15
 8008a72:	683a      	ldr	r2, [r7, #0]
 8008a74:	429a      	cmp	r2, r3
 8008a76:	d005      	beq.n	8008a84 <HAL_RCC_ClockConfig+0x248>
 8008a78:	2301      	movs	r3, #1
 8008a7a:	e086      	b.n	8008b8a <HAL_RCC_ClockConfig+0x34e>
 8008a7c:	52002000 	.word	0x52002000
 8008a80:	58024400 	.word	0x58024400
 8008a84:	687b      	ldr	r3, [r7, #4]
 8008a86:	681b      	ldr	r3, [r3, #0]
 8008a88:	f003 0304 	and.w	r3, r3, #4
 8008a8c:	2b00      	cmp	r3, #0
 8008a8e:	d010      	beq.n	8008ab2 <HAL_RCC_ClockConfig+0x276>
 8008a90:	687b      	ldr	r3, [r7, #4]
 8008a92:	691a      	ldr	r2, [r3, #16]
 8008a94:	4b3f      	ldr	r3, [pc, #252]	; (8008b94 <HAL_RCC_ClockConfig+0x358>)
 8008a96:	699b      	ldr	r3, [r3, #24]
 8008a98:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8008a9c:	429a      	cmp	r2, r3
 8008a9e:	d208      	bcs.n	8008ab2 <HAL_RCC_ClockConfig+0x276>
 8008aa0:	4b3c      	ldr	r3, [pc, #240]	; (8008b94 <HAL_RCC_ClockConfig+0x358>)
 8008aa2:	699b      	ldr	r3, [r3, #24]
 8008aa4:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8008aa8:	687b      	ldr	r3, [r7, #4]
 8008aaa:	691b      	ldr	r3, [r3, #16]
 8008aac:	4939      	ldr	r1, [pc, #228]	; (8008b94 <HAL_RCC_ClockConfig+0x358>)
 8008aae:	4313      	orrs	r3, r2
 8008ab0:	618b      	str	r3, [r1, #24]
 8008ab2:	687b      	ldr	r3, [r7, #4]
 8008ab4:	681b      	ldr	r3, [r3, #0]
 8008ab6:	f003 0308 	and.w	r3, r3, #8
 8008aba:	2b00      	cmp	r3, #0
 8008abc:	d010      	beq.n	8008ae0 <HAL_RCC_ClockConfig+0x2a4>
 8008abe:	687b      	ldr	r3, [r7, #4]
 8008ac0:	695a      	ldr	r2, [r3, #20]
 8008ac2:	4b34      	ldr	r3, [pc, #208]	; (8008b94 <HAL_RCC_ClockConfig+0x358>)
 8008ac4:	69db      	ldr	r3, [r3, #28]
 8008ac6:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8008aca:	429a      	cmp	r2, r3
 8008acc:	d208      	bcs.n	8008ae0 <HAL_RCC_ClockConfig+0x2a4>
 8008ace:	4b31      	ldr	r3, [pc, #196]	; (8008b94 <HAL_RCC_ClockConfig+0x358>)
 8008ad0:	69db      	ldr	r3, [r3, #28]
 8008ad2:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8008ad6:	687b      	ldr	r3, [r7, #4]
 8008ad8:	695b      	ldr	r3, [r3, #20]
 8008ada:	492e      	ldr	r1, [pc, #184]	; (8008b94 <HAL_RCC_ClockConfig+0x358>)
 8008adc:	4313      	orrs	r3, r2
 8008ade:	61cb      	str	r3, [r1, #28]
 8008ae0:	687b      	ldr	r3, [r7, #4]
 8008ae2:	681b      	ldr	r3, [r3, #0]
 8008ae4:	f003 0310 	and.w	r3, r3, #16
 8008ae8:	2b00      	cmp	r3, #0
 8008aea:	d010      	beq.n	8008b0e <HAL_RCC_ClockConfig+0x2d2>
 8008aec:	687b      	ldr	r3, [r7, #4]
 8008aee:	699a      	ldr	r2, [r3, #24]
 8008af0:	4b28      	ldr	r3, [pc, #160]	; (8008b94 <HAL_RCC_ClockConfig+0x358>)
 8008af2:	69db      	ldr	r3, [r3, #28]
 8008af4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008af8:	429a      	cmp	r2, r3
 8008afa:	d208      	bcs.n	8008b0e <HAL_RCC_ClockConfig+0x2d2>
 8008afc:	4b25      	ldr	r3, [pc, #148]	; (8008b94 <HAL_RCC_ClockConfig+0x358>)
 8008afe:	69db      	ldr	r3, [r3, #28]
 8008b00:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8008b04:	687b      	ldr	r3, [r7, #4]
 8008b06:	699b      	ldr	r3, [r3, #24]
 8008b08:	4922      	ldr	r1, [pc, #136]	; (8008b94 <HAL_RCC_ClockConfig+0x358>)
 8008b0a:	4313      	orrs	r3, r2
 8008b0c:	61cb      	str	r3, [r1, #28]
 8008b0e:	687b      	ldr	r3, [r7, #4]
 8008b10:	681b      	ldr	r3, [r3, #0]
 8008b12:	f003 0320 	and.w	r3, r3, #32
 8008b16:	2b00      	cmp	r3, #0
 8008b18:	d010      	beq.n	8008b3c <HAL_RCC_ClockConfig+0x300>
 8008b1a:	687b      	ldr	r3, [r7, #4]
 8008b1c:	69da      	ldr	r2, [r3, #28]
 8008b1e:	4b1d      	ldr	r3, [pc, #116]	; (8008b94 <HAL_RCC_ClockConfig+0x358>)
 8008b20:	6a1b      	ldr	r3, [r3, #32]
 8008b22:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8008b26:	429a      	cmp	r2, r3
 8008b28:	d208      	bcs.n	8008b3c <HAL_RCC_ClockConfig+0x300>
 8008b2a:	4b1a      	ldr	r3, [pc, #104]	; (8008b94 <HAL_RCC_ClockConfig+0x358>)
 8008b2c:	6a1b      	ldr	r3, [r3, #32]
 8008b2e:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8008b32:	687b      	ldr	r3, [r7, #4]
 8008b34:	69db      	ldr	r3, [r3, #28]
 8008b36:	4917      	ldr	r1, [pc, #92]	; (8008b94 <HAL_RCC_ClockConfig+0x358>)
 8008b38:	4313      	orrs	r3, r2
 8008b3a:	620b      	str	r3, [r1, #32]
 8008b3c:	f000 f834 	bl	8008ba8 <HAL_RCC_GetSysClockFreq>
 8008b40:	4602      	mov	r2, r0
 8008b42:	4b14      	ldr	r3, [pc, #80]	; (8008b94 <HAL_RCC_ClockConfig+0x358>)
 8008b44:	699b      	ldr	r3, [r3, #24]
 8008b46:	0a1b      	lsrs	r3, r3, #8
 8008b48:	f003 030f 	and.w	r3, r3, #15
 8008b4c:	4912      	ldr	r1, [pc, #72]	; (8008b98 <HAL_RCC_ClockConfig+0x35c>)
 8008b4e:	5ccb      	ldrb	r3, [r1, r3]
 8008b50:	f003 031f 	and.w	r3, r3, #31
 8008b54:	fa22 f303 	lsr.w	r3, r2, r3
 8008b58:	613b      	str	r3, [r7, #16]
 8008b5a:	4b0e      	ldr	r3, [pc, #56]	; (8008b94 <HAL_RCC_ClockConfig+0x358>)
 8008b5c:	699b      	ldr	r3, [r3, #24]
 8008b5e:	f003 030f 	and.w	r3, r3, #15
 8008b62:	4a0d      	ldr	r2, [pc, #52]	; (8008b98 <HAL_RCC_ClockConfig+0x35c>)
 8008b64:	5cd3      	ldrb	r3, [r2, r3]
 8008b66:	f003 031f 	and.w	r3, r3, #31
 8008b6a:	693a      	ldr	r2, [r7, #16]
 8008b6c:	fa22 f303 	lsr.w	r3, r2, r3
 8008b70:	4a0a      	ldr	r2, [pc, #40]	; (8008b9c <HAL_RCC_ClockConfig+0x360>)
 8008b72:	6013      	str	r3, [r2, #0]
 8008b74:	4a0a      	ldr	r2, [pc, #40]	; (8008ba0 <HAL_RCC_ClockConfig+0x364>)
 8008b76:	693b      	ldr	r3, [r7, #16]
 8008b78:	6013      	str	r3, [r2, #0]
 8008b7a:	4b0a      	ldr	r3, [pc, #40]	; (8008ba4 <HAL_RCC_ClockConfig+0x368>)
 8008b7c:	681b      	ldr	r3, [r3, #0]
 8008b7e:	4618      	mov	r0, r3
 8008b80:	f7fe f8cc 	bl	8006d1c <HAL_InitTick>
 8008b84:	4603      	mov	r3, r0
 8008b86:	73fb      	strb	r3, [r7, #15]
 8008b88:	7bfb      	ldrb	r3, [r7, #15]
 8008b8a:	4618      	mov	r0, r3
 8008b8c:	3718      	adds	r7, #24
 8008b8e:	46bd      	mov	sp, r7
 8008b90:	bd80      	pop	{r7, pc}
 8008b92:	bf00      	nop
 8008b94:	58024400 	.word	0x58024400
 8008b98:	08012310 	.word	0x08012310
 8008b9c:	240000f4 	.word	0x240000f4
 8008ba0:	240000f0 	.word	0x240000f0
 8008ba4:	240000f8 	.word	0x240000f8

08008ba8 <HAL_RCC_GetSysClockFreq>:
 8008ba8:	b480      	push	{r7}
 8008baa:	b089      	sub	sp, #36	; 0x24
 8008bac:	af00      	add	r7, sp, #0
 8008bae:	4bb3      	ldr	r3, [pc, #716]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008bb0:	691b      	ldr	r3, [r3, #16]
 8008bb2:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8008bb6:	2b18      	cmp	r3, #24
 8008bb8:	f200 8155 	bhi.w	8008e66 <HAL_RCC_GetSysClockFreq+0x2be>
 8008bbc:	a201      	add	r2, pc, #4	; (adr r2, 8008bc4 <HAL_RCC_GetSysClockFreq+0x1c>)
 8008bbe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008bc2:	bf00      	nop
 8008bc4:	08008c29 	.word	0x08008c29
 8008bc8:	08008e67 	.word	0x08008e67
 8008bcc:	08008e67 	.word	0x08008e67
 8008bd0:	08008e67 	.word	0x08008e67
 8008bd4:	08008e67 	.word	0x08008e67
 8008bd8:	08008e67 	.word	0x08008e67
 8008bdc:	08008e67 	.word	0x08008e67
 8008be0:	08008e67 	.word	0x08008e67
 8008be4:	08008c4f 	.word	0x08008c4f
 8008be8:	08008e67 	.word	0x08008e67
 8008bec:	08008e67 	.word	0x08008e67
 8008bf0:	08008e67 	.word	0x08008e67
 8008bf4:	08008e67 	.word	0x08008e67
 8008bf8:	08008e67 	.word	0x08008e67
 8008bfc:	08008e67 	.word	0x08008e67
 8008c00:	08008e67 	.word	0x08008e67
 8008c04:	08008c55 	.word	0x08008c55
 8008c08:	08008e67 	.word	0x08008e67
 8008c0c:	08008e67 	.word	0x08008e67
 8008c10:	08008e67 	.word	0x08008e67
 8008c14:	08008e67 	.word	0x08008e67
 8008c18:	08008e67 	.word	0x08008e67
 8008c1c:	08008e67 	.word	0x08008e67
 8008c20:	08008e67 	.word	0x08008e67
 8008c24:	08008c5b 	.word	0x08008c5b
 8008c28:	4b94      	ldr	r3, [pc, #592]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008c2a:	681b      	ldr	r3, [r3, #0]
 8008c2c:	f003 0320 	and.w	r3, r3, #32
 8008c30:	2b00      	cmp	r3, #0
 8008c32:	d009      	beq.n	8008c48 <HAL_RCC_GetSysClockFreq+0xa0>
 8008c34:	4b91      	ldr	r3, [pc, #580]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008c36:	681b      	ldr	r3, [r3, #0]
 8008c38:	08db      	lsrs	r3, r3, #3
 8008c3a:	f003 0303 	and.w	r3, r3, #3
 8008c3e:	4a90      	ldr	r2, [pc, #576]	; (8008e80 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8008c40:	fa22 f303 	lsr.w	r3, r2, r3
 8008c44:	61bb      	str	r3, [r7, #24]
 8008c46:	e111      	b.n	8008e6c <HAL_RCC_GetSysClockFreq+0x2c4>
 8008c48:	4b8d      	ldr	r3, [pc, #564]	; (8008e80 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8008c4a:	61bb      	str	r3, [r7, #24]
 8008c4c:	e10e      	b.n	8008e6c <HAL_RCC_GetSysClockFreq+0x2c4>
 8008c4e:	4b8d      	ldr	r3, [pc, #564]	; (8008e84 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8008c50:	61bb      	str	r3, [r7, #24]
 8008c52:	e10b      	b.n	8008e6c <HAL_RCC_GetSysClockFreq+0x2c4>
 8008c54:	4b8c      	ldr	r3, [pc, #560]	; (8008e88 <HAL_RCC_GetSysClockFreq+0x2e0>)
 8008c56:	61bb      	str	r3, [r7, #24]
 8008c58:	e108      	b.n	8008e6c <HAL_RCC_GetSysClockFreq+0x2c4>
 8008c5a:	4b88      	ldr	r3, [pc, #544]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008c5c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008c5e:	f003 0303 	and.w	r3, r3, #3
 8008c62:	617b      	str	r3, [r7, #20]
 8008c64:	4b85      	ldr	r3, [pc, #532]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008c66:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008c68:	091b      	lsrs	r3, r3, #4
 8008c6a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8008c6e:	613b      	str	r3, [r7, #16]
 8008c70:	4b82      	ldr	r3, [pc, #520]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008c72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c74:	f003 0301 	and.w	r3, r3, #1
 8008c78:	60fb      	str	r3, [r7, #12]
 8008c7a:	4b80      	ldr	r3, [pc, #512]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008c7c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008c7e:	08db      	lsrs	r3, r3, #3
 8008c80:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8008c84:	68fa      	ldr	r2, [r7, #12]
 8008c86:	fb02 f303 	mul.w	r3, r2, r3
 8008c8a:	ee07 3a90 	vmov	s15, r3
 8008c8e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008c92:	edc7 7a02 	vstr	s15, [r7, #8]
 8008c96:	693b      	ldr	r3, [r7, #16]
 8008c98:	2b00      	cmp	r3, #0
 8008c9a:	f000 80e1 	beq.w	8008e60 <HAL_RCC_GetSysClockFreq+0x2b8>
 8008c9e:	697b      	ldr	r3, [r7, #20]
 8008ca0:	2b02      	cmp	r3, #2
 8008ca2:	f000 8083 	beq.w	8008dac <HAL_RCC_GetSysClockFreq+0x204>
 8008ca6:	697b      	ldr	r3, [r7, #20]
 8008ca8:	2b02      	cmp	r3, #2
 8008caa:	f200 80a1 	bhi.w	8008df0 <HAL_RCC_GetSysClockFreq+0x248>
 8008cae:	697b      	ldr	r3, [r7, #20]
 8008cb0:	2b00      	cmp	r3, #0
 8008cb2:	d003      	beq.n	8008cbc <HAL_RCC_GetSysClockFreq+0x114>
 8008cb4:	697b      	ldr	r3, [r7, #20]
 8008cb6:	2b01      	cmp	r3, #1
 8008cb8:	d056      	beq.n	8008d68 <HAL_RCC_GetSysClockFreq+0x1c0>
 8008cba:	e099      	b.n	8008df0 <HAL_RCC_GetSysClockFreq+0x248>
 8008cbc:	4b6f      	ldr	r3, [pc, #444]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008cbe:	681b      	ldr	r3, [r3, #0]
 8008cc0:	f003 0320 	and.w	r3, r3, #32
 8008cc4:	2b00      	cmp	r3, #0
 8008cc6:	d02d      	beq.n	8008d24 <HAL_RCC_GetSysClockFreq+0x17c>
 8008cc8:	4b6c      	ldr	r3, [pc, #432]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008cca:	681b      	ldr	r3, [r3, #0]
 8008ccc:	08db      	lsrs	r3, r3, #3
 8008cce:	f003 0303 	and.w	r3, r3, #3
 8008cd2:	4a6b      	ldr	r2, [pc, #428]	; (8008e80 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8008cd4:	fa22 f303 	lsr.w	r3, r2, r3
 8008cd8:	607b      	str	r3, [r7, #4]
 8008cda:	687b      	ldr	r3, [r7, #4]
 8008cdc:	ee07 3a90 	vmov	s15, r3
 8008ce0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008ce4:	693b      	ldr	r3, [r7, #16]
 8008ce6:	ee07 3a90 	vmov	s15, r3
 8008cea:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008cee:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008cf2:	4b62      	ldr	r3, [pc, #392]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008cf4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008cf6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008cfa:	ee07 3a90 	vmov	s15, r3
 8008cfe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008d02:	ed97 6a02 	vldr	s12, [r7, #8]
 8008d06:	eddf 5a61 	vldr	s11, [pc, #388]	; 8008e8c <HAL_RCC_GetSysClockFreq+0x2e4>
 8008d0a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008d0e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008d12:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008d16:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008d1a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008d1e:	edc7 7a07 	vstr	s15, [r7, #28]
 8008d22:	e087      	b.n	8008e34 <HAL_RCC_GetSysClockFreq+0x28c>
 8008d24:	693b      	ldr	r3, [r7, #16]
 8008d26:	ee07 3a90 	vmov	s15, r3
 8008d2a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008d2e:	eddf 6a58 	vldr	s13, [pc, #352]	; 8008e90 <HAL_RCC_GetSysClockFreq+0x2e8>
 8008d32:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008d36:	4b51      	ldr	r3, [pc, #324]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008d38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008d3a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008d3e:	ee07 3a90 	vmov	s15, r3
 8008d42:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008d46:	ed97 6a02 	vldr	s12, [r7, #8]
 8008d4a:	eddf 5a50 	vldr	s11, [pc, #320]	; 8008e8c <HAL_RCC_GetSysClockFreq+0x2e4>
 8008d4e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008d52:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008d56:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008d5a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008d5e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008d62:	edc7 7a07 	vstr	s15, [r7, #28]
 8008d66:	e065      	b.n	8008e34 <HAL_RCC_GetSysClockFreq+0x28c>
 8008d68:	693b      	ldr	r3, [r7, #16]
 8008d6a:	ee07 3a90 	vmov	s15, r3
 8008d6e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008d72:	eddf 6a48 	vldr	s13, [pc, #288]	; 8008e94 <HAL_RCC_GetSysClockFreq+0x2ec>
 8008d76:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008d7a:	4b40      	ldr	r3, [pc, #256]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008d7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008d7e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008d82:	ee07 3a90 	vmov	s15, r3
 8008d86:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008d8a:	ed97 6a02 	vldr	s12, [r7, #8]
 8008d8e:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8008e8c <HAL_RCC_GetSysClockFreq+0x2e4>
 8008d92:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008d96:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008d9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008d9e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008da2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008da6:	edc7 7a07 	vstr	s15, [r7, #28]
 8008daa:	e043      	b.n	8008e34 <HAL_RCC_GetSysClockFreq+0x28c>
 8008dac:	693b      	ldr	r3, [r7, #16]
 8008dae:	ee07 3a90 	vmov	s15, r3
 8008db2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008db6:	eddf 6a38 	vldr	s13, [pc, #224]	; 8008e98 <HAL_RCC_GetSysClockFreq+0x2f0>
 8008dba:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008dbe:	4b2f      	ldr	r3, [pc, #188]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008dc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008dc2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008dc6:	ee07 3a90 	vmov	s15, r3
 8008dca:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008dce:	ed97 6a02 	vldr	s12, [r7, #8]
 8008dd2:	eddf 5a2e 	vldr	s11, [pc, #184]	; 8008e8c <HAL_RCC_GetSysClockFreq+0x2e4>
 8008dd6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008dda:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008dde:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008de2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008de6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008dea:	edc7 7a07 	vstr	s15, [r7, #28]
 8008dee:	e021      	b.n	8008e34 <HAL_RCC_GetSysClockFreq+0x28c>
 8008df0:	693b      	ldr	r3, [r7, #16]
 8008df2:	ee07 3a90 	vmov	s15, r3
 8008df6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008dfa:	eddf 6a26 	vldr	s13, [pc, #152]	; 8008e94 <HAL_RCC_GetSysClockFreq+0x2ec>
 8008dfe:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008e02:	4b1e      	ldr	r3, [pc, #120]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008e04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008e06:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008e0a:	ee07 3a90 	vmov	s15, r3
 8008e0e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008e12:	ed97 6a02 	vldr	s12, [r7, #8]
 8008e16:	eddf 5a1d 	vldr	s11, [pc, #116]	; 8008e8c <HAL_RCC_GetSysClockFreq+0x2e4>
 8008e1a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008e1e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008e22:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008e26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008e2a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008e2e:	edc7 7a07 	vstr	s15, [r7, #28]
 8008e32:	bf00      	nop
 8008e34:	4b11      	ldr	r3, [pc, #68]	; (8008e7c <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008e36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008e38:	0a5b      	lsrs	r3, r3, #9
 8008e3a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8008e3e:	3301      	adds	r3, #1
 8008e40:	603b      	str	r3, [r7, #0]
 8008e42:	683b      	ldr	r3, [r7, #0]
 8008e44:	ee07 3a90 	vmov	s15, r3
 8008e48:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8008e4c:	edd7 6a07 	vldr	s13, [r7, #28]
 8008e50:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8008e54:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8008e58:	ee17 3a90 	vmov	r3, s15
 8008e5c:	61bb      	str	r3, [r7, #24]
 8008e5e:	e005      	b.n	8008e6c <HAL_RCC_GetSysClockFreq+0x2c4>
 8008e60:	2300      	movs	r3, #0
 8008e62:	61bb      	str	r3, [r7, #24]
 8008e64:	e002      	b.n	8008e6c <HAL_RCC_GetSysClockFreq+0x2c4>
 8008e66:	4b07      	ldr	r3, [pc, #28]	; (8008e84 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8008e68:	61bb      	str	r3, [r7, #24]
 8008e6a:	bf00      	nop
 8008e6c:	69bb      	ldr	r3, [r7, #24]
 8008e6e:	4618      	mov	r0, r3
 8008e70:	3724      	adds	r7, #36	; 0x24
 8008e72:	46bd      	mov	sp, r7
 8008e74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e78:	4770      	bx	lr
 8008e7a:	bf00      	nop
 8008e7c:	58024400 	.word	0x58024400
 8008e80:	03d09000 	.word	0x03d09000
 8008e84:	003d0900 	.word	0x003d0900
 8008e88:	017d7840 	.word	0x017d7840
 8008e8c:	46000000 	.word	0x46000000
 8008e90:	4c742400 	.word	0x4c742400
 8008e94:	4a742400 	.word	0x4a742400
 8008e98:	4bbebc20 	.word	0x4bbebc20

08008e9c <HAL_RCC_GetHCLKFreq>:
 8008e9c:	b580      	push	{r7, lr}
 8008e9e:	b082      	sub	sp, #8
 8008ea0:	af00      	add	r7, sp, #0
 8008ea2:	f7ff fe81 	bl	8008ba8 <HAL_RCC_GetSysClockFreq>
 8008ea6:	4602      	mov	r2, r0
 8008ea8:	4b10      	ldr	r3, [pc, #64]	; (8008eec <HAL_RCC_GetHCLKFreq+0x50>)
 8008eaa:	699b      	ldr	r3, [r3, #24]
 8008eac:	0a1b      	lsrs	r3, r3, #8
 8008eae:	f003 030f 	and.w	r3, r3, #15
 8008eb2:	490f      	ldr	r1, [pc, #60]	; (8008ef0 <HAL_RCC_GetHCLKFreq+0x54>)
 8008eb4:	5ccb      	ldrb	r3, [r1, r3]
 8008eb6:	f003 031f 	and.w	r3, r3, #31
 8008eba:	fa22 f303 	lsr.w	r3, r2, r3
 8008ebe:	607b      	str	r3, [r7, #4]
 8008ec0:	4b0a      	ldr	r3, [pc, #40]	; (8008eec <HAL_RCC_GetHCLKFreq+0x50>)
 8008ec2:	699b      	ldr	r3, [r3, #24]
 8008ec4:	f003 030f 	and.w	r3, r3, #15
 8008ec8:	4a09      	ldr	r2, [pc, #36]	; (8008ef0 <HAL_RCC_GetHCLKFreq+0x54>)
 8008eca:	5cd3      	ldrb	r3, [r2, r3]
 8008ecc:	f003 031f 	and.w	r3, r3, #31
 8008ed0:	687a      	ldr	r2, [r7, #4]
 8008ed2:	fa22 f303 	lsr.w	r3, r2, r3
 8008ed6:	4a07      	ldr	r2, [pc, #28]	; (8008ef4 <HAL_RCC_GetHCLKFreq+0x58>)
 8008ed8:	6013      	str	r3, [r2, #0]
 8008eda:	4a07      	ldr	r2, [pc, #28]	; (8008ef8 <HAL_RCC_GetHCLKFreq+0x5c>)
 8008edc:	687b      	ldr	r3, [r7, #4]
 8008ede:	6013      	str	r3, [r2, #0]
 8008ee0:	4b04      	ldr	r3, [pc, #16]	; (8008ef4 <HAL_RCC_GetHCLKFreq+0x58>)
 8008ee2:	681b      	ldr	r3, [r3, #0]
 8008ee4:	4618      	mov	r0, r3
 8008ee6:	3708      	adds	r7, #8
 8008ee8:	46bd      	mov	sp, r7
 8008eea:	bd80      	pop	{r7, pc}
 8008eec:	58024400 	.word	0x58024400
 8008ef0:	08012310 	.word	0x08012310
 8008ef4:	240000f4 	.word	0x240000f4
 8008ef8:	240000f0 	.word	0x240000f0

08008efc <HAL_RCC_GetPCLK1Freq>:
 8008efc:	b580      	push	{r7, lr}
 8008efe:	af00      	add	r7, sp, #0
 8008f00:	f7ff ffcc 	bl	8008e9c <HAL_RCC_GetHCLKFreq>
 8008f04:	4602      	mov	r2, r0
 8008f06:	4b06      	ldr	r3, [pc, #24]	; (8008f20 <HAL_RCC_GetPCLK1Freq+0x24>)
 8008f08:	69db      	ldr	r3, [r3, #28]
 8008f0a:	091b      	lsrs	r3, r3, #4
 8008f0c:	f003 0307 	and.w	r3, r3, #7
 8008f10:	4904      	ldr	r1, [pc, #16]	; (8008f24 <HAL_RCC_GetPCLK1Freq+0x28>)
 8008f12:	5ccb      	ldrb	r3, [r1, r3]
 8008f14:	f003 031f 	and.w	r3, r3, #31
 8008f18:	fa22 f303 	lsr.w	r3, r2, r3
 8008f1c:	4618      	mov	r0, r3
 8008f1e:	bd80      	pop	{r7, pc}
 8008f20:	58024400 	.word	0x58024400
 8008f24:	08012310 	.word	0x08012310

08008f28 <HAL_RCC_GetPCLK2Freq>:
 8008f28:	b580      	push	{r7, lr}
 8008f2a:	af00      	add	r7, sp, #0
 8008f2c:	f7ff ffb6 	bl	8008e9c <HAL_RCC_GetHCLKFreq>
 8008f30:	4602      	mov	r2, r0
 8008f32:	4b06      	ldr	r3, [pc, #24]	; (8008f4c <HAL_RCC_GetPCLK2Freq+0x24>)
 8008f34:	69db      	ldr	r3, [r3, #28]
 8008f36:	0a1b      	lsrs	r3, r3, #8
 8008f38:	f003 0307 	and.w	r3, r3, #7
 8008f3c:	4904      	ldr	r1, [pc, #16]	; (8008f50 <HAL_RCC_GetPCLK2Freq+0x28>)
 8008f3e:	5ccb      	ldrb	r3, [r1, r3]
 8008f40:	f003 031f 	and.w	r3, r3, #31
 8008f44:	fa22 f303 	lsr.w	r3, r2, r3
 8008f48:	4618      	mov	r0, r3
 8008f4a:	bd80      	pop	{r7, pc}
 8008f4c:	58024400 	.word	0x58024400
 8008f50:	08012310 	.word	0x08012310

08008f54 <HAL_RCCEx_PeriphCLKConfig>:
 8008f54:	b580      	push	{r7, lr}
 8008f56:	b086      	sub	sp, #24
 8008f58:	af00      	add	r7, sp, #0
 8008f5a:	6078      	str	r0, [r7, #4]
 8008f5c:	2300      	movs	r3, #0
 8008f5e:	75fb      	strb	r3, [r7, #23]
 8008f60:	2300      	movs	r3, #0
 8008f62:	75bb      	strb	r3, [r7, #22]
 8008f64:	687b      	ldr	r3, [r7, #4]
 8008f66:	681b      	ldr	r3, [r3, #0]
 8008f68:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8008f6c:	2b00      	cmp	r3, #0
 8008f6e:	d03f      	beq.n	8008ff0 <HAL_RCCEx_PeriphCLKConfig+0x9c>
 8008f70:	687b      	ldr	r3, [r7, #4]
 8008f72:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8008f74:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008f78:	d02a      	beq.n	8008fd0 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 8008f7a:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008f7e:	d824      	bhi.n	8008fca <HAL_RCCEx_PeriphCLKConfig+0x76>
 8008f80:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008f84:	d018      	beq.n	8008fb8 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8008f86:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008f8a:	d81e      	bhi.n	8008fca <HAL_RCCEx_PeriphCLKConfig+0x76>
 8008f8c:	2b00      	cmp	r3, #0
 8008f8e:	d003      	beq.n	8008f98 <HAL_RCCEx_PeriphCLKConfig+0x44>
 8008f90:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8008f94:	d007      	beq.n	8008fa6 <HAL_RCCEx_PeriphCLKConfig+0x52>
 8008f96:	e018      	b.n	8008fca <HAL_RCCEx_PeriphCLKConfig+0x76>
 8008f98:	4ba3      	ldr	r3, [pc, #652]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8008f9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f9c:	4aa2      	ldr	r2, [pc, #648]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8008f9e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008fa2:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008fa4:	e015      	b.n	8008fd2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8008fa6:	687b      	ldr	r3, [r7, #4]
 8008fa8:	3304      	adds	r3, #4
 8008faa:	2102      	movs	r1, #2
 8008fac:	4618      	mov	r0, r3
 8008fae:	f001 f9d5 	bl	800a35c <RCCEx_PLL2_Config>
 8008fb2:	4603      	mov	r3, r0
 8008fb4:	75fb      	strb	r3, [r7, #23]
 8008fb6:	e00c      	b.n	8008fd2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8008fb8:	687b      	ldr	r3, [r7, #4]
 8008fba:	3324      	adds	r3, #36	; 0x24
 8008fbc:	2102      	movs	r1, #2
 8008fbe:	4618      	mov	r0, r3
 8008fc0:	f001 fa7e 	bl	800a4c0 <RCCEx_PLL3_Config>
 8008fc4:	4603      	mov	r3, r0
 8008fc6:	75fb      	strb	r3, [r7, #23]
 8008fc8:	e003      	b.n	8008fd2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8008fca:	2301      	movs	r3, #1
 8008fcc:	75fb      	strb	r3, [r7, #23]
 8008fce:	e000      	b.n	8008fd2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8008fd0:	bf00      	nop
 8008fd2:	7dfb      	ldrb	r3, [r7, #23]
 8008fd4:	2b00      	cmp	r3, #0
 8008fd6:	d109      	bne.n	8008fec <HAL_RCCEx_PeriphCLKConfig+0x98>
 8008fd8:	4b93      	ldr	r3, [pc, #588]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8008fda:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008fdc:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8008fe0:	687b      	ldr	r3, [r7, #4]
 8008fe2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8008fe4:	4990      	ldr	r1, [pc, #576]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8008fe6:	4313      	orrs	r3, r2
 8008fe8:	650b      	str	r3, [r1, #80]	; 0x50
 8008fea:	e001      	b.n	8008ff0 <HAL_RCCEx_PeriphCLKConfig+0x9c>
 8008fec:	7dfb      	ldrb	r3, [r7, #23]
 8008fee:	75bb      	strb	r3, [r7, #22]
 8008ff0:	687b      	ldr	r3, [r7, #4]
 8008ff2:	681b      	ldr	r3, [r3, #0]
 8008ff4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008ff8:	2b00      	cmp	r3, #0
 8008ffa:	d03d      	beq.n	8009078 <HAL_RCCEx_PeriphCLKConfig+0x124>
 8008ffc:	687b      	ldr	r3, [r7, #4]
 8008ffe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009000:	2b04      	cmp	r3, #4
 8009002:	d826      	bhi.n	8009052 <HAL_RCCEx_PeriphCLKConfig+0xfe>
 8009004:	a201      	add	r2, pc, #4	; (adr r2, 800900c <HAL_RCCEx_PeriphCLKConfig+0xb8>)
 8009006:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800900a:	bf00      	nop
 800900c:	08009021 	.word	0x08009021
 8009010:	0800902f 	.word	0x0800902f
 8009014:	08009041 	.word	0x08009041
 8009018:	08009059 	.word	0x08009059
 800901c:	08009059 	.word	0x08009059
 8009020:	4b81      	ldr	r3, [pc, #516]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8009022:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009024:	4a80      	ldr	r2, [pc, #512]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8009026:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800902a:	62d3      	str	r3, [r2, #44]	; 0x2c
 800902c:	e015      	b.n	800905a <HAL_RCCEx_PeriphCLKConfig+0x106>
 800902e:	687b      	ldr	r3, [r7, #4]
 8009030:	3304      	adds	r3, #4
 8009032:	2100      	movs	r1, #0
 8009034:	4618      	mov	r0, r3
 8009036:	f001 f991 	bl	800a35c <RCCEx_PLL2_Config>
 800903a:	4603      	mov	r3, r0
 800903c:	75fb      	strb	r3, [r7, #23]
 800903e:	e00c      	b.n	800905a <HAL_RCCEx_PeriphCLKConfig+0x106>
 8009040:	687b      	ldr	r3, [r7, #4]
 8009042:	3324      	adds	r3, #36	; 0x24
 8009044:	2100      	movs	r1, #0
 8009046:	4618      	mov	r0, r3
 8009048:	f001 fa3a 	bl	800a4c0 <RCCEx_PLL3_Config>
 800904c:	4603      	mov	r3, r0
 800904e:	75fb      	strb	r3, [r7, #23]
 8009050:	e003      	b.n	800905a <HAL_RCCEx_PeriphCLKConfig+0x106>
 8009052:	2301      	movs	r3, #1
 8009054:	75fb      	strb	r3, [r7, #23]
 8009056:	e000      	b.n	800905a <HAL_RCCEx_PeriphCLKConfig+0x106>
 8009058:	bf00      	nop
 800905a:	7dfb      	ldrb	r3, [r7, #23]
 800905c:	2b00      	cmp	r3, #0
 800905e:	d109      	bne.n	8009074 <HAL_RCCEx_PeriphCLKConfig+0x120>
 8009060:	4b71      	ldr	r3, [pc, #452]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8009062:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009064:	f023 0207 	bic.w	r2, r3, #7
 8009068:	687b      	ldr	r3, [r7, #4]
 800906a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800906c:	496e      	ldr	r1, [pc, #440]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 800906e:	4313      	orrs	r3, r2
 8009070:	650b      	str	r3, [r1, #80]	; 0x50
 8009072:	e001      	b.n	8009078 <HAL_RCCEx_PeriphCLKConfig+0x124>
 8009074:	7dfb      	ldrb	r3, [r7, #23]
 8009076:	75bb      	strb	r3, [r7, #22]
 8009078:	687b      	ldr	r3, [r7, #4]
 800907a:	681b      	ldr	r3, [r3, #0]
 800907c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8009080:	2b00      	cmp	r3, #0
 8009082:	d042      	beq.n	800910a <HAL_RCCEx_PeriphCLKConfig+0x1b6>
 8009084:	687b      	ldr	r3, [r7, #4]
 8009086:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009088:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800908c:	d02b      	beq.n	80090e6 <HAL_RCCEx_PeriphCLKConfig+0x192>
 800908e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009092:	d825      	bhi.n	80090e0 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 8009094:	2bc0      	cmp	r3, #192	; 0xc0
 8009096:	d028      	beq.n	80090ea <HAL_RCCEx_PeriphCLKConfig+0x196>
 8009098:	2bc0      	cmp	r3, #192	; 0xc0
 800909a:	d821      	bhi.n	80090e0 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 800909c:	2b80      	cmp	r3, #128	; 0x80
 800909e:	d016      	beq.n	80090ce <HAL_RCCEx_PeriphCLKConfig+0x17a>
 80090a0:	2b80      	cmp	r3, #128	; 0x80
 80090a2:	d81d      	bhi.n	80090e0 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 80090a4:	2b00      	cmp	r3, #0
 80090a6:	d002      	beq.n	80090ae <HAL_RCCEx_PeriphCLKConfig+0x15a>
 80090a8:	2b40      	cmp	r3, #64	; 0x40
 80090aa:	d007      	beq.n	80090bc <HAL_RCCEx_PeriphCLKConfig+0x168>
 80090ac:	e018      	b.n	80090e0 <HAL_RCCEx_PeriphCLKConfig+0x18c>
 80090ae:	4b5e      	ldr	r3, [pc, #376]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 80090b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80090b2:	4a5d      	ldr	r2, [pc, #372]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 80090b4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80090b8:	62d3      	str	r3, [r2, #44]	; 0x2c
 80090ba:	e017      	b.n	80090ec <HAL_RCCEx_PeriphCLKConfig+0x198>
 80090bc:	687b      	ldr	r3, [r7, #4]
 80090be:	3304      	adds	r3, #4
 80090c0:	2100      	movs	r1, #0
 80090c2:	4618      	mov	r0, r3
 80090c4:	f001 f94a 	bl	800a35c <RCCEx_PLL2_Config>
 80090c8:	4603      	mov	r3, r0
 80090ca:	75fb      	strb	r3, [r7, #23]
 80090cc:	e00e      	b.n	80090ec <HAL_RCCEx_PeriphCLKConfig+0x198>
 80090ce:	687b      	ldr	r3, [r7, #4]
 80090d0:	3324      	adds	r3, #36	; 0x24
 80090d2:	2100      	movs	r1, #0
 80090d4:	4618      	mov	r0, r3
 80090d6:	f001 f9f3 	bl	800a4c0 <RCCEx_PLL3_Config>
 80090da:	4603      	mov	r3, r0
 80090dc:	75fb      	strb	r3, [r7, #23]
 80090de:	e005      	b.n	80090ec <HAL_RCCEx_PeriphCLKConfig+0x198>
 80090e0:	2301      	movs	r3, #1
 80090e2:	75fb      	strb	r3, [r7, #23]
 80090e4:	e002      	b.n	80090ec <HAL_RCCEx_PeriphCLKConfig+0x198>
 80090e6:	bf00      	nop
 80090e8:	e000      	b.n	80090ec <HAL_RCCEx_PeriphCLKConfig+0x198>
 80090ea:	bf00      	nop
 80090ec:	7dfb      	ldrb	r3, [r7, #23]
 80090ee:	2b00      	cmp	r3, #0
 80090f0:	d109      	bne.n	8009106 <HAL_RCCEx_PeriphCLKConfig+0x1b2>
 80090f2:	4b4d      	ldr	r3, [pc, #308]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 80090f4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80090f6:	f423 72e0 	bic.w	r2, r3, #448	; 0x1c0
 80090fa:	687b      	ldr	r3, [r7, #4]
 80090fc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80090fe:	494a      	ldr	r1, [pc, #296]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8009100:	4313      	orrs	r3, r2
 8009102:	650b      	str	r3, [r1, #80]	; 0x50
 8009104:	e001      	b.n	800910a <HAL_RCCEx_PeriphCLKConfig+0x1b6>
 8009106:	7dfb      	ldrb	r3, [r7, #23]
 8009108:	75bb      	strb	r3, [r7, #22]
 800910a:	687b      	ldr	r3, [r7, #4]
 800910c:	681b      	ldr	r3, [r3, #0]
 800910e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8009112:	2b00      	cmp	r3, #0
 8009114:	d049      	beq.n	80091aa <HAL_RCCEx_PeriphCLKConfig+0x256>
 8009116:	687b      	ldr	r3, [r7, #4]
 8009118:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800911c:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8009120:	d030      	beq.n	8009184 <HAL_RCCEx_PeriphCLKConfig+0x230>
 8009122:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8009126:	d82a      	bhi.n	800917e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8009128:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 800912c:	d02c      	beq.n	8009188 <HAL_RCCEx_PeriphCLKConfig+0x234>
 800912e:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8009132:	d824      	bhi.n	800917e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8009134:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009138:	d018      	beq.n	800916c <HAL_RCCEx_PeriphCLKConfig+0x218>
 800913a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800913e:	d81e      	bhi.n	800917e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8009140:	2b00      	cmp	r3, #0
 8009142:	d003      	beq.n	800914c <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8009144:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8009148:	d007      	beq.n	800915a <HAL_RCCEx_PeriphCLKConfig+0x206>
 800914a:	e018      	b.n	800917e <HAL_RCCEx_PeriphCLKConfig+0x22a>
 800914c:	4b36      	ldr	r3, [pc, #216]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 800914e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009150:	4a35      	ldr	r2, [pc, #212]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8009152:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009156:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009158:	e017      	b.n	800918a <HAL_RCCEx_PeriphCLKConfig+0x236>
 800915a:	687b      	ldr	r3, [r7, #4]
 800915c:	3304      	adds	r3, #4
 800915e:	2100      	movs	r1, #0
 8009160:	4618      	mov	r0, r3
 8009162:	f001 f8fb 	bl	800a35c <RCCEx_PLL2_Config>
 8009166:	4603      	mov	r3, r0
 8009168:	75fb      	strb	r3, [r7, #23]
 800916a:	e00e      	b.n	800918a <HAL_RCCEx_PeriphCLKConfig+0x236>
 800916c:	687b      	ldr	r3, [r7, #4]
 800916e:	3324      	adds	r3, #36	; 0x24
 8009170:	2100      	movs	r1, #0
 8009172:	4618      	mov	r0, r3
 8009174:	f001 f9a4 	bl	800a4c0 <RCCEx_PLL3_Config>
 8009178:	4603      	mov	r3, r0
 800917a:	75fb      	strb	r3, [r7, #23]
 800917c:	e005      	b.n	800918a <HAL_RCCEx_PeriphCLKConfig+0x236>
 800917e:	2301      	movs	r3, #1
 8009180:	75fb      	strb	r3, [r7, #23]
 8009182:	e002      	b.n	800918a <HAL_RCCEx_PeriphCLKConfig+0x236>
 8009184:	bf00      	nop
 8009186:	e000      	b.n	800918a <HAL_RCCEx_PeriphCLKConfig+0x236>
 8009188:	bf00      	nop
 800918a:	7dfb      	ldrb	r3, [r7, #23]
 800918c:	2b00      	cmp	r3, #0
 800918e:	d10a      	bne.n	80091a6 <HAL_RCCEx_PeriphCLKConfig+0x252>
 8009190:	4b25      	ldr	r3, [pc, #148]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8009192:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009194:	f423 0260 	bic.w	r2, r3, #14680064	; 0xe00000
 8009198:	687b      	ldr	r3, [r7, #4]
 800919a:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800919e:	4922      	ldr	r1, [pc, #136]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 80091a0:	4313      	orrs	r3, r2
 80091a2:	658b      	str	r3, [r1, #88]	; 0x58
 80091a4:	e001      	b.n	80091aa <HAL_RCCEx_PeriphCLKConfig+0x256>
 80091a6:	7dfb      	ldrb	r3, [r7, #23]
 80091a8:	75bb      	strb	r3, [r7, #22]
 80091aa:	687b      	ldr	r3, [r7, #4]
 80091ac:	681b      	ldr	r3, [r3, #0]
 80091ae:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80091b2:	2b00      	cmp	r3, #0
 80091b4:	d04b      	beq.n	800924e <HAL_RCCEx_PeriphCLKConfig+0x2fa>
 80091b6:	687b      	ldr	r3, [r7, #4]
 80091b8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 80091bc:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80091c0:	d030      	beq.n	8009224 <HAL_RCCEx_PeriphCLKConfig+0x2d0>
 80091c2:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80091c6:	d82a      	bhi.n	800921e <HAL_RCCEx_PeriphCLKConfig+0x2ca>
 80091c8:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 80091cc:	d02e      	beq.n	800922c <HAL_RCCEx_PeriphCLKConfig+0x2d8>
 80091ce:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 80091d2:	d824      	bhi.n	800921e <HAL_RCCEx_PeriphCLKConfig+0x2ca>
 80091d4:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80091d8:	d018      	beq.n	800920c <HAL_RCCEx_PeriphCLKConfig+0x2b8>
 80091da:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80091de:	d81e      	bhi.n	800921e <HAL_RCCEx_PeriphCLKConfig+0x2ca>
 80091e0:	2b00      	cmp	r3, #0
 80091e2:	d003      	beq.n	80091ec <HAL_RCCEx_PeriphCLKConfig+0x298>
 80091e4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80091e8:	d007      	beq.n	80091fa <HAL_RCCEx_PeriphCLKConfig+0x2a6>
 80091ea:	e018      	b.n	800921e <HAL_RCCEx_PeriphCLKConfig+0x2ca>
 80091ec:	4b0e      	ldr	r3, [pc, #56]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 80091ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80091f0:	4a0d      	ldr	r2, [pc, #52]	; (8009228 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 80091f2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80091f6:	62d3      	str	r3, [r2, #44]	; 0x2c
 80091f8:	e019      	b.n	800922e <HAL_RCCEx_PeriphCLKConfig+0x2da>
 80091fa:	687b      	ldr	r3, [r7, #4]
 80091fc:	3304      	adds	r3, #4
 80091fe:	2100      	movs	r1, #0
 8009200:	4618      	mov	r0, r3
 8009202:	f001 f8ab 	bl	800a35c <RCCEx_PLL2_Config>
 8009206:	4603      	mov	r3, r0
 8009208:	75fb      	strb	r3, [r7, #23]
 800920a:	e010      	b.n	800922e <HAL_RCCEx_PeriphCLKConfig+0x2da>
 800920c:	687b      	ldr	r3, [r7, #4]
 800920e:	3324      	adds	r3, #36	; 0x24
 8009210:	2100      	movs	r1, #0
 8009212:	4618      	mov	r0, r3
 8009214:	f001 f954 	bl	800a4c0 <RCCEx_PLL3_Config>
 8009218:	4603      	mov	r3, r0
 800921a:	75fb      	strb	r3, [r7, #23]
 800921c:	e007      	b.n	800922e <HAL_RCCEx_PeriphCLKConfig+0x2da>
 800921e:	2301      	movs	r3, #1
 8009220:	75fb      	strb	r3, [r7, #23]
 8009222:	e004      	b.n	800922e <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8009224:	bf00      	nop
 8009226:	e002      	b.n	800922e <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8009228:	58024400 	.word	0x58024400
 800922c:	bf00      	nop
 800922e:	7dfb      	ldrb	r3, [r7, #23]
 8009230:	2b00      	cmp	r3, #0
 8009232:	d10a      	bne.n	800924a <HAL_RCCEx_PeriphCLKConfig+0x2f6>
 8009234:	4b99      	ldr	r3, [pc, #612]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009236:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009238:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 800923c:	687b      	ldr	r3, [r7, #4]
 800923e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8009242:	4996      	ldr	r1, [pc, #600]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009244:	4313      	orrs	r3, r2
 8009246:	658b      	str	r3, [r1, #88]	; 0x58
 8009248:	e001      	b.n	800924e <HAL_RCCEx_PeriphCLKConfig+0x2fa>
 800924a:	7dfb      	ldrb	r3, [r7, #23]
 800924c:	75bb      	strb	r3, [r7, #22]
 800924e:	687b      	ldr	r3, [r7, #4]
 8009250:	681b      	ldr	r3, [r3, #0]
 8009252:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009256:	2b00      	cmp	r3, #0
 8009258:	d032      	beq.n	80092c0 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 800925a:	687b      	ldr	r3, [r7, #4]
 800925c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800925e:	2b30      	cmp	r3, #48	; 0x30
 8009260:	d01c      	beq.n	800929c <HAL_RCCEx_PeriphCLKConfig+0x348>
 8009262:	2b30      	cmp	r3, #48	; 0x30
 8009264:	d817      	bhi.n	8009296 <HAL_RCCEx_PeriphCLKConfig+0x342>
 8009266:	2b20      	cmp	r3, #32
 8009268:	d00c      	beq.n	8009284 <HAL_RCCEx_PeriphCLKConfig+0x330>
 800926a:	2b20      	cmp	r3, #32
 800926c:	d813      	bhi.n	8009296 <HAL_RCCEx_PeriphCLKConfig+0x342>
 800926e:	2b00      	cmp	r3, #0
 8009270:	d016      	beq.n	80092a0 <HAL_RCCEx_PeriphCLKConfig+0x34c>
 8009272:	2b10      	cmp	r3, #16
 8009274:	d10f      	bne.n	8009296 <HAL_RCCEx_PeriphCLKConfig+0x342>
 8009276:	4b89      	ldr	r3, [pc, #548]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009278:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800927a:	4a88      	ldr	r2, [pc, #544]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 800927c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009280:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009282:	e00e      	b.n	80092a2 <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8009284:	687b      	ldr	r3, [r7, #4]
 8009286:	3304      	adds	r3, #4
 8009288:	2102      	movs	r1, #2
 800928a:	4618      	mov	r0, r3
 800928c:	f001 f866 	bl	800a35c <RCCEx_PLL2_Config>
 8009290:	4603      	mov	r3, r0
 8009292:	75fb      	strb	r3, [r7, #23]
 8009294:	e005      	b.n	80092a2 <HAL_RCCEx_PeriphCLKConfig+0x34e>
 8009296:	2301      	movs	r3, #1
 8009298:	75fb      	strb	r3, [r7, #23]
 800929a:	e002      	b.n	80092a2 <HAL_RCCEx_PeriphCLKConfig+0x34e>
 800929c:	bf00      	nop
 800929e:	e000      	b.n	80092a2 <HAL_RCCEx_PeriphCLKConfig+0x34e>
 80092a0:	bf00      	nop
 80092a2:	7dfb      	ldrb	r3, [r7, #23]
 80092a4:	2b00      	cmp	r3, #0
 80092a6:	d109      	bne.n	80092bc <HAL_RCCEx_PeriphCLKConfig+0x368>
 80092a8:	4b7c      	ldr	r3, [pc, #496]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 80092aa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80092ac:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 80092b0:	687b      	ldr	r3, [r7, #4]
 80092b2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80092b4:	4979      	ldr	r1, [pc, #484]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 80092b6:	4313      	orrs	r3, r2
 80092b8:	64cb      	str	r3, [r1, #76]	; 0x4c
 80092ba:	e001      	b.n	80092c0 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 80092bc:	7dfb      	ldrb	r3, [r7, #23]
 80092be:	75bb      	strb	r3, [r7, #22]
 80092c0:	687b      	ldr	r3, [r7, #4]
 80092c2:	681b      	ldr	r3, [r3, #0]
 80092c4:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80092c8:	2b00      	cmp	r3, #0
 80092ca:	d047      	beq.n	800935c <HAL_RCCEx_PeriphCLKConfig+0x408>
 80092cc:	687b      	ldr	r3, [r7, #4]
 80092ce:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80092d0:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80092d4:	d030      	beq.n	8009338 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
 80092d6:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80092da:	d82a      	bhi.n	8009332 <HAL_RCCEx_PeriphCLKConfig+0x3de>
 80092dc:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 80092e0:	d02c      	beq.n	800933c <HAL_RCCEx_PeriphCLKConfig+0x3e8>
 80092e2:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 80092e6:	d824      	bhi.n	8009332 <HAL_RCCEx_PeriphCLKConfig+0x3de>
 80092e8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80092ec:	d018      	beq.n	8009320 <HAL_RCCEx_PeriphCLKConfig+0x3cc>
 80092ee:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80092f2:	d81e      	bhi.n	8009332 <HAL_RCCEx_PeriphCLKConfig+0x3de>
 80092f4:	2b00      	cmp	r3, #0
 80092f6:	d003      	beq.n	8009300 <HAL_RCCEx_PeriphCLKConfig+0x3ac>
 80092f8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80092fc:	d007      	beq.n	800930e <HAL_RCCEx_PeriphCLKConfig+0x3ba>
 80092fe:	e018      	b.n	8009332 <HAL_RCCEx_PeriphCLKConfig+0x3de>
 8009300:	4b66      	ldr	r3, [pc, #408]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009302:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009304:	4a65      	ldr	r2, [pc, #404]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009306:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800930a:	62d3      	str	r3, [r2, #44]	; 0x2c
 800930c:	e017      	b.n	800933e <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 800930e:	687b      	ldr	r3, [r7, #4]
 8009310:	3304      	adds	r3, #4
 8009312:	2100      	movs	r1, #0
 8009314:	4618      	mov	r0, r3
 8009316:	f001 f821 	bl	800a35c <RCCEx_PLL2_Config>
 800931a:	4603      	mov	r3, r0
 800931c:	75fb      	strb	r3, [r7, #23]
 800931e:	e00e      	b.n	800933e <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 8009320:	687b      	ldr	r3, [r7, #4]
 8009322:	3324      	adds	r3, #36	; 0x24
 8009324:	2100      	movs	r1, #0
 8009326:	4618      	mov	r0, r3
 8009328:	f001 f8ca 	bl	800a4c0 <RCCEx_PLL3_Config>
 800932c:	4603      	mov	r3, r0
 800932e:	75fb      	strb	r3, [r7, #23]
 8009330:	e005      	b.n	800933e <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 8009332:	2301      	movs	r3, #1
 8009334:	75fb      	strb	r3, [r7, #23]
 8009336:	e002      	b.n	800933e <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 8009338:	bf00      	nop
 800933a:	e000      	b.n	800933e <HAL_RCCEx_PeriphCLKConfig+0x3ea>
 800933c:	bf00      	nop
 800933e:	7dfb      	ldrb	r3, [r7, #23]
 8009340:	2b00      	cmp	r3, #0
 8009342:	d109      	bne.n	8009358 <HAL_RCCEx_PeriphCLKConfig+0x404>
 8009344:	4b55      	ldr	r3, [pc, #340]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009346:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009348:	f423 42e0 	bic.w	r2, r3, #28672	; 0x7000
 800934c:	687b      	ldr	r3, [r7, #4]
 800934e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009350:	4952      	ldr	r1, [pc, #328]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009352:	4313      	orrs	r3, r2
 8009354:	650b      	str	r3, [r1, #80]	; 0x50
 8009356:	e001      	b.n	800935c <HAL_RCCEx_PeriphCLKConfig+0x408>
 8009358:	7dfb      	ldrb	r3, [r7, #23]
 800935a:	75bb      	strb	r3, [r7, #22]
 800935c:	687b      	ldr	r3, [r7, #4]
 800935e:	681b      	ldr	r3, [r3, #0]
 8009360:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8009364:	2b00      	cmp	r3, #0
 8009366:	d049      	beq.n	80093fc <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8009368:	687b      	ldr	r3, [r7, #4]
 800936a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800936c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009370:	d02e      	beq.n	80093d0 <HAL_RCCEx_PeriphCLKConfig+0x47c>
 8009372:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009376:	d828      	bhi.n	80093ca <HAL_RCCEx_PeriphCLKConfig+0x476>
 8009378:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 800937c:	d02a      	beq.n	80093d4 <HAL_RCCEx_PeriphCLKConfig+0x480>
 800937e:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8009382:	d822      	bhi.n	80093ca <HAL_RCCEx_PeriphCLKConfig+0x476>
 8009384:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8009388:	d026      	beq.n	80093d8 <HAL_RCCEx_PeriphCLKConfig+0x484>
 800938a:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 800938e:	d81c      	bhi.n	80093ca <HAL_RCCEx_PeriphCLKConfig+0x476>
 8009390:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009394:	d010      	beq.n	80093b8 <HAL_RCCEx_PeriphCLKConfig+0x464>
 8009396:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800939a:	d816      	bhi.n	80093ca <HAL_RCCEx_PeriphCLKConfig+0x476>
 800939c:	2b00      	cmp	r3, #0
 800939e:	d01d      	beq.n	80093dc <HAL_RCCEx_PeriphCLKConfig+0x488>
 80093a0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80093a4:	d111      	bne.n	80093ca <HAL_RCCEx_PeriphCLKConfig+0x476>
 80093a6:	687b      	ldr	r3, [r7, #4]
 80093a8:	3304      	adds	r3, #4
 80093aa:	2101      	movs	r1, #1
 80093ac:	4618      	mov	r0, r3
 80093ae:	f000 ffd5 	bl	800a35c <RCCEx_PLL2_Config>
 80093b2:	4603      	mov	r3, r0
 80093b4:	75fb      	strb	r3, [r7, #23]
 80093b6:	e012      	b.n	80093de <HAL_RCCEx_PeriphCLKConfig+0x48a>
 80093b8:	687b      	ldr	r3, [r7, #4]
 80093ba:	3324      	adds	r3, #36	; 0x24
 80093bc:	2101      	movs	r1, #1
 80093be:	4618      	mov	r0, r3
 80093c0:	f001 f87e 	bl	800a4c0 <RCCEx_PLL3_Config>
 80093c4:	4603      	mov	r3, r0
 80093c6:	75fb      	strb	r3, [r7, #23]
 80093c8:	e009      	b.n	80093de <HAL_RCCEx_PeriphCLKConfig+0x48a>
 80093ca:	2301      	movs	r3, #1
 80093cc:	75fb      	strb	r3, [r7, #23]
 80093ce:	e006      	b.n	80093de <HAL_RCCEx_PeriphCLKConfig+0x48a>
 80093d0:	bf00      	nop
 80093d2:	e004      	b.n	80093de <HAL_RCCEx_PeriphCLKConfig+0x48a>
 80093d4:	bf00      	nop
 80093d6:	e002      	b.n	80093de <HAL_RCCEx_PeriphCLKConfig+0x48a>
 80093d8:	bf00      	nop
 80093da:	e000      	b.n	80093de <HAL_RCCEx_PeriphCLKConfig+0x48a>
 80093dc:	bf00      	nop
 80093de:	7dfb      	ldrb	r3, [r7, #23]
 80093e0:	2b00      	cmp	r3, #0
 80093e2:	d109      	bne.n	80093f8 <HAL_RCCEx_PeriphCLKConfig+0x4a4>
 80093e4:	4b2d      	ldr	r3, [pc, #180]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 80093e6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80093e8:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 80093ec:	687b      	ldr	r3, [r7, #4]
 80093ee:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80093f0:	492a      	ldr	r1, [pc, #168]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 80093f2:	4313      	orrs	r3, r2
 80093f4:	650b      	str	r3, [r1, #80]	; 0x50
 80093f6:	e001      	b.n	80093fc <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 80093f8:	7dfb      	ldrb	r3, [r7, #23]
 80093fa:	75bb      	strb	r3, [r7, #22]
 80093fc:	687b      	ldr	r3, [r7, #4]
 80093fe:	681b      	ldr	r3, [r3, #0]
 8009400:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8009404:	2b00      	cmp	r3, #0
 8009406:	d04d      	beq.n	80094a4 <HAL_RCCEx_PeriphCLKConfig+0x550>
 8009408:	687b      	ldr	r3, [r7, #4]
 800940a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800940e:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8009412:	d02e      	beq.n	8009472 <HAL_RCCEx_PeriphCLKConfig+0x51e>
 8009414:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8009418:	d828      	bhi.n	800946c <HAL_RCCEx_PeriphCLKConfig+0x518>
 800941a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800941e:	d02a      	beq.n	8009476 <HAL_RCCEx_PeriphCLKConfig+0x522>
 8009420:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009424:	d822      	bhi.n	800946c <HAL_RCCEx_PeriphCLKConfig+0x518>
 8009426:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800942a:	d026      	beq.n	800947a <HAL_RCCEx_PeriphCLKConfig+0x526>
 800942c:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8009430:	d81c      	bhi.n	800946c <HAL_RCCEx_PeriphCLKConfig+0x518>
 8009432:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009436:	d010      	beq.n	800945a <HAL_RCCEx_PeriphCLKConfig+0x506>
 8009438:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800943c:	d816      	bhi.n	800946c <HAL_RCCEx_PeriphCLKConfig+0x518>
 800943e:	2b00      	cmp	r3, #0
 8009440:	d01d      	beq.n	800947e <HAL_RCCEx_PeriphCLKConfig+0x52a>
 8009442:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009446:	d111      	bne.n	800946c <HAL_RCCEx_PeriphCLKConfig+0x518>
 8009448:	687b      	ldr	r3, [r7, #4]
 800944a:	3304      	adds	r3, #4
 800944c:	2101      	movs	r1, #1
 800944e:	4618      	mov	r0, r3
 8009450:	f000 ff84 	bl	800a35c <RCCEx_PLL2_Config>
 8009454:	4603      	mov	r3, r0
 8009456:	75fb      	strb	r3, [r7, #23]
 8009458:	e012      	b.n	8009480 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 800945a:	687b      	ldr	r3, [r7, #4]
 800945c:	3324      	adds	r3, #36	; 0x24
 800945e:	2101      	movs	r1, #1
 8009460:	4618      	mov	r0, r3
 8009462:	f001 f82d 	bl	800a4c0 <RCCEx_PLL3_Config>
 8009466:	4603      	mov	r3, r0
 8009468:	75fb      	strb	r3, [r7, #23]
 800946a:	e009      	b.n	8009480 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 800946c:	2301      	movs	r3, #1
 800946e:	75fb      	strb	r3, [r7, #23]
 8009470:	e006      	b.n	8009480 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 8009472:	bf00      	nop
 8009474:	e004      	b.n	8009480 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 8009476:	bf00      	nop
 8009478:	e002      	b.n	8009480 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 800947a:	bf00      	nop
 800947c:	e000      	b.n	8009480 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 800947e:	bf00      	nop
 8009480:	7dfb      	ldrb	r3, [r7, #23]
 8009482:	2b00      	cmp	r3, #0
 8009484:	d10c      	bne.n	80094a0 <HAL_RCCEx_PeriphCLKConfig+0x54c>
 8009486:	4b05      	ldr	r3, [pc, #20]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009488:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800948a:	f023 42e0 	bic.w	r2, r3, #1879048192	; 0x70000000
 800948e:	687b      	ldr	r3, [r7, #4]
 8009490:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8009494:	4901      	ldr	r1, [pc, #4]	; (800949c <HAL_RCCEx_PeriphCLKConfig+0x548>)
 8009496:	4313      	orrs	r3, r2
 8009498:	658b      	str	r3, [r1, #88]	; 0x58
 800949a:	e003      	b.n	80094a4 <HAL_RCCEx_PeriphCLKConfig+0x550>
 800949c:	58024400 	.word	0x58024400
 80094a0:	7dfb      	ldrb	r3, [r7, #23]
 80094a2:	75bb      	strb	r3, [r7, #22]
 80094a4:	687b      	ldr	r3, [r7, #4]
 80094a6:	681b      	ldr	r3, [r3, #0]
 80094a8:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80094ac:	2b00      	cmp	r3, #0
 80094ae:	d02f      	beq.n	8009510 <HAL_RCCEx_PeriphCLKConfig+0x5bc>
 80094b0:	687b      	ldr	r3, [r7, #4]
 80094b2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80094b4:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80094b8:	d00e      	beq.n	80094d8 <HAL_RCCEx_PeriphCLKConfig+0x584>
 80094ba:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80094be:	d814      	bhi.n	80094ea <HAL_RCCEx_PeriphCLKConfig+0x596>
 80094c0:	2b00      	cmp	r3, #0
 80094c2:	d015      	beq.n	80094f0 <HAL_RCCEx_PeriphCLKConfig+0x59c>
 80094c4:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80094c8:	d10f      	bne.n	80094ea <HAL_RCCEx_PeriphCLKConfig+0x596>
 80094ca:	4baf      	ldr	r3, [pc, #700]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 80094cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80094ce:	4aae      	ldr	r2, [pc, #696]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 80094d0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80094d4:	62d3      	str	r3, [r2, #44]	; 0x2c
 80094d6:	e00c      	b.n	80094f2 <HAL_RCCEx_PeriphCLKConfig+0x59e>
 80094d8:	687b      	ldr	r3, [r7, #4]
 80094da:	3304      	adds	r3, #4
 80094dc:	2101      	movs	r1, #1
 80094de:	4618      	mov	r0, r3
 80094e0:	f000 ff3c 	bl	800a35c <RCCEx_PLL2_Config>
 80094e4:	4603      	mov	r3, r0
 80094e6:	75fb      	strb	r3, [r7, #23]
 80094e8:	e003      	b.n	80094f2 <HAL_RCCEx_PeriphCLKConfig+0x59e>
 80094ea:	2301      	movs	r3, #1
 80094ec:	75fb      	strb	r3, [r7, #23]
 80094ee:	e000      	b.n	80094f2 <HAL_RCCEx_PeriphCLKConfig+0x59e>
 80094f0:	bf00      	nop
 80094f2:	7dfb      	ldrb	r3, [r7, #23]
 80094f4:	2b00      	cmp	r3, #0
 80094f6:	d109      	bne.n	800950c <HAL_RCCEx_PeriphCLKConfig+0x5b8>
 80094f8:	4ba3      	ldr	r3, [pc, #652]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 80094fa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80094fc:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 8009500:	687b      	ldr	r3, [r7, #4]
 8009502:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009504:	49a0      	ldr	r1, [pc, #640]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009506:	4313      	orrs	r3, r2
 8009508:	650b      	str	r3, [r1, #80]	; 0x50
 800950a:	e001      	b.n	8009510 <HAL_RCCEx_PeriphCLKConfig+0x5bc>
 800950c:	7dfb      	ldrb	r3, [r7, #23]
 800950e:	75bb      	strb	r3, [r7, #22]
 8009510:	687b      	ldr	r3, [r7, #4]
 8009512:	681b      	ldr	r3, [r3, #0]
 8009514:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8009518:	2b00      	cmp	r3, #0
 800951a:	d032      	beq.n	8009582 <HAL_RCCEx_PeriphCLKConfig+0x62e>
 800951c:	687b      	ldr	r3, [r7, #4]
 800951e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009520:	2b03      	cmp	r3, #3
 8009522:	d81b      	bhi.n	800955c <HAL_RCCEx_PeriphCLKConfig+0x608>
 8009524:	a201      	add	r2, pc, #4	; (adr r2, 800952c <HAL_RCCEx_PeriphCLKConfig+0x5d8>)
 8009526:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800952a:	bf00      	nop
 800952c:	08009563 	.word	0x08009563
 8009530:	0800953d 	.word	0x0800953d
 8009534:	0800954b 	.word	0x0800954b
 8009538:	08009563 	.word	0x08009563
 800953c:	4b92      	ldr	r3, [pc, #584]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 800953e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009540:	4a91      	ldr	r2, [pc, #580]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009542:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009546:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009548:	e00c      	b.n	8009564 <HAL_RCCEx_PeriphCLKConfig+0x610>
 800954a:	687b      	ldr	r3, [r7, #4]
 800954c:	3304      	adds	r3, #4
 800954e:	2102      	movs	r1, #2
 8009550:	4618      	mov	r0, r3
 8009552:	f000 ff03 	bl	800a35c <RCCEx_PLL2_Config>
 8009556:	4603      	mov	r3, r0
 8009558:	75fb      	strb	r3, [r7, #23]
 800955a:	e003      	b.n	8009564 <HAL_RCCEx_PeriphCLKConfig+0x610>
 800955c:	2301      	movs	r3, #1
 800955e:	75fb      	strb	r3, [r7, #23]
 8009560:	e000      	b.n	8009564 <HAL_RCCEx_PeriphCLKConfig+0x610>
 8009562:	bf00      	nop
 8009564:	7dfb      	ldrb	r3, [r7, #23]
 8009566:	2b00      	cmp	r3, #0
 8009568:	d109      	bne.n	800957e <HAL_RCCEx_PeriphCLKConfig+0x62a>
 800956a:	4b87      	ldr	r3, [pc, #540]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 800956c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800956e:	f023 0203 	bic.w	r2, r3, #3
 8009572:	687b      	ldr	r3, [r7, #4]
 8009574:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009576:	4984      	ldr	r1, [pc, #528]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009578:	4313      	orrs	r3, r2
 800957a:	64cb      	str	r3, [r1, #76]	; 0x4c
 800957c:	e001      	b.n	8009582 <HAL_RCCEx_PeriphCLKConfig+0x62e>
 800957e:	7dfb      	ldrb	r3, [r7, #23]
 8009580:	75bb      	strb	r3, [r7, #22]
 8009582:	687b      	ldr	r3, [r7, #4]
 8009584:	681b      	ldr	r3, [r3, #0]
 8009586:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800958a:	2b00      	cmp	r3, #0
 800958c:	f000 8086 	beq.w	800969c <HAL_RCCEx_PeriphCLKConfig+0x748>
 8009590:	4b7e      	ldr	r3, [pc, #504]	; (800978c <HAL_RCCEx_PeriphCLKConfig+0x838>)
 8009592:	681b      	ldr	r3, [r3, #0]
 8009594:	4a7d      	ldr	r2, [pc, #500]	; (800978c <HAL_RCCEx_PeriphCLKConfig+0x838>)
 8009596:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800959a:	6013      	str	r3, [r2, #0]
 800959c:	f7fd fc08 	bl	8006db0 <HAL_GetTick>
 80095a0:	6138      	str	r0, [r7, #16]
 80095a2:	e009      	b.n	80095b8 <HAL_RCCEx_PeriphCLKConfig+0x664>
 80095a4:	f7fd fc04 	bl	8006db0 <HAL_GetTick>
 80095a8:	4602      	mov	r2, r0
 80095aa:	693b      	ldr	r3, [r7, #16]
 80095ac:	1ad3      	subs	r3, r2, r3
 80095ae:	2b64      	cmp	r3, #100	; 0x64
 80095b0:	d902      	bls.n	80095b8 <HAL_RCCEx_PeriphCLKConfig+0x664>
 80095b2:	2303      	movs	r3, #3
 80095b4:	75fb      	strb	r3, [r7, #23]
 80095b6:	e005      	b.n	80095c4 <HAL_RCCEx_PeriphCLKConfig+0x670>
 80095b8:	4b74      	ldr	r3, [pc, #464]	; (800978c <HAL_RCCEx_PeriphCLKConfig+0x838>)
 80095ba:	681b      	ldr	r3, [r3, #0]
 80095bc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80095c0:	2b00      	cmp	r3, #0
 80095c2:	d0ef      	beq.n	80095a4 <HAL_RCCEx_PeriphCLKConfig+0x650>
 80095c4:	7dfb      	ldrb	r3, [r7, #23]
 80095c6:	2b00      	cmp	r3, #0
 80095c8:	d166      	bne.n	8009698 <HAL_RCCEx_PeriphCLKConfig+0x744>
 80095ca:	4b6f      	ldr	r3, [pc, #444]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 80095cc:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80095ce:	687b      	ldr	r3, [r7, #4]
 80095d0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80095d4:	4053      	eors	r3, r2
 80095d6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80095da:	2b00      	cmp	r3, #0
 80095dc:	d013      	beq.n	8009606 <HAL_RCCEx_PeriphCLKConfig+0x6b2>
 80095de:	4b6a      	ldr	r3, [pc, #424]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 80095e0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80095e2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80095e6:	60fb      	str	r3, [r7, #12]
 80095e8:	4b67      	ldr	r3, [pc, #412]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 80095ea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80095ec:	4a66      	ldr	r2, [pc, #408]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 80095ee:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80095f2:	6713      	str	r3, [r2, #112]	; 0x70
 80095f4:	4b64      	ldr	r3, [pc, #400]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 80095f6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80095f8:	4a63      	ldr	r2, [pc, #396]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 80095fa:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80095fe:	6713      	str	r3, [r2, #112]	; 0x70
 8009600:	4a61      	ldr	r2, [pc, #388]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009602:	68fb      	ldr	r3, [r7, #12]
 8009604:	6713      	str	r3, [r2, #112]	; 0x70
 8009606:	687b      	ldr	r3, [r7, #4]
 8009608:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800960c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009610:	d115      	bne.n	800963e <HAL_RCCEx_PeriphCLKConfig+0x6ea>
 8009612:	f7fd fbcd 	bl	8006db0 <HAL_GetTick>
 8009616:	6138      	str	r0, [r7, #16]
 8009618:	e00b      	b.n	8009632 <HAL_RCCEx_PeriphCLKConfig+0x6de>
 800961a:	f7fd fbc9 	bl	8006db0 <HAL_GetTick>
 800961e:	4602      	mov	r2, r0
 8009620:	693b      	ldr	r3, [r7, #16]
 8009622:	1ad3      	subs	r3, r2, r3
 8009624:	f241 3288 	movw	r2, #5000	; 0x1388
 8009628:	4293      	cmp	r3, r2
 800962a:	d902      	bls.n	8009632 <HAL_RCCEx_PeriphCLKConfig+0x6de>
 800962c:	2303      	movs	r3, #3
 800962e:	75fb      	strb	r3, [r7, #23]
 8009630:	e005      	b.n	800963e <HAL_RCCEx_PeriphCLKConfig+0x6ea>
 8009632:	4b55      	ldr	r3, [pc, #340]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009634:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009636:	f003 0302 	and.w	r3, r3, #2
 800963a:	2b00      	cmp	r3, #0
 800963c:	d0ed      	beq.n	800961a <HAL_RCCEx_PeriphCLKConfig+0x6c6>
 800963e:	7dfb      	ldrb	r3, [r7, #23]
 8009640:	2b00      	cmp	r3, #0
 8009642:	d126      	bne.n	8009692 <HAL_RCCEx_PeriphCLKConfig+0x73e>
 8009644:	687b      	ldr	r3, [r7, #4]
 8009646:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800964a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800964e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8009652:	d10d      	bne.n	8009670 <HAL_RCCEx_PeriphCLKConfig+0x71c>
 8009654:	4b4c      	ldr	r3, [pc, #304]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009656:	691b      	ldr	r3, [r3, #16]
 8009658:	f423 527c 	bic.w	r2, r3, #16128	; 0x3f00
 800965c:	687b      	ldr	r3, [r7, #4]
 800965e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009662:	0919      	lsrs	r1, r3, #4
 8009664:	4b4a      	ldr	r3, [pc, #296]	; (8009790 <HAL_RCCEx_PeriphCLKConfig+0x83c>)
 8009666:	400b      	ands	r3, r1
 8009668:	4947      	ldr	r1, [pc, #284]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 800966a:	4313      	orrs	r3, r2
 800966c:	610b      	str	r3, [r1, #16]
 800966e:	e005      	b.n	800967c <HAL_RCCEx_PeriphCLKConfig+0x728>
 8009670:	4b45      	ldr	r3, [pc, #276]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009672:	691b      	ldr	r3, [r3, #16]
 8009674:	4a44      	ldr	r2, [pc, #272]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 8009676:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 800967a:	6113      	str	r3, [r2, #16]
 800967c:	4b42      	ldr	r3, [pc, #264]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 800967e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8009680:	687b      	ldr	r3, [r7, #4]
 8009682:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009686:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800968a:	493f      	ldr	r1, [pc, #252]	; (8009788 <HAL_RCCEx_PeriphCLKConfig+0x834>)
 800968c:	4313      	orrs	r3, r2
 800968e:	670b      	str	r3, [r1, #112]	; 0x70
 8009690:	e004      	b.n	800969c <HAL_RCCEx_PeriphCLKConfig+0x748>
 8009692:	7dfb      	ldrb	r3, [r7, #23]
 8009694:	75bb      	strb	r3, [r7, #22]
 8009696:	e001      	b.n	800969c <HAL_RCCEx_PeriphCLKConfig+0x748>
 8009698:	7dfb      	ldrb	r3, [r7, #23]
 800969a:	75bb      	strb	r3, [r7, #22]
 800969c:	687b      	ldr	r3, [r7, #4]
 800969e:	681b      	ldr	r3, [r3, #0]
 80096a0:	f003 0301 	and.w	r3, r3, #1
 80096a4:	2b00      	cmp	r3, #0
 80096a6:	f000 8085 	beq.w	80097b4 <HAL_RCCEx_PeriphCLKConfig+0x860>
 80096aa:	687b      	ldr	r3, [r7, #4]
 80096ac:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80096ae:	2b28      	cmp	r3, #40	; 0x28
 80096b0:	d866      	bhi.n	8009780 <HAL_RCCEx_PeriphCLKConfig+0x82c>
 80096b2:	a201      	add	r2, pc, #4	; (adr r2, 80096b8 <HAL_RCCEx_PeriphCLKConfig+0x764>)
 80096b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80096b8:	08009795 	.word	0x08009795
 80096bc:	08009781 	.word	0x08009781
 80096c0:	08009781 	.word	0x08009781
 80096c4:	08009781 	.word	0x08009781
 80096c8:	08009781 	.word	0x08009781
 80096cc:	08009781 	.word	0x08009781
 80096d0:	08009781 	.word	0x08009781
 80096d4:	08009781 	.word	0x08009781
 80096d8:	0800975d 	.word	0x0800975d
 80096dc:	08009781 	.word	0x08009781
 80096e0:	08009781 	.word	0x08009781
 80096e4:	08009781 	.word	0x08009781
 80096e8:	08009781 	.word	0x08009781
 80096ec:	08009781 	.word	0x08009781
 80096f0:	08009781 	.word	0x08009781
 80096f4:	08009781 	.word	0x08009781
 80096f8:	0800976f 	.word	0x0800976f
 80096fc:	08009781 	.word	0x08009781
 8009700:	08009781 	.word	0x08009781
 8009704:	08009781 	.word	0x08009781
 8009708:	08009781 	.word	0x08009781
 800970c:	08009781 	.word	0x08009781
 8009710:	08009781 	.word	0x08009781
 8009714:	08009781 	.word	0x08009781
 8009718:	08009795 	.word	0x08009795
 800971c:	08009781 	.word	0x08009781
 8009720:	08009781 	.word	0x08009781
 8009724:	08009781 	.word	0x08009781
 8009728:	08009781 	.word	0x08009781
 800972c:	08009781 	.word	0x08009781
 8009730:	08009781 	.word	0x08009781
 8009734:	08009781 	.word	0x08009781
 8009738:	08009795 	.word	0x08009795
 800973c:	08009781 	.word	0x08009781
 8009740:	08009781 	.word	0x08009781
 8009744:	08009781 	.word	0x08009781
 8009748:	08009781 	.word	0x08009781
 800974c:	08009781 	.word	0x08009781
 8009750:	08009781 	.word	0x08009781
 8009754:	08009781 	.word	0x08009781
 8009758:	08009795 	.word	0x08009795
 800975c:	687b      	ldr	r3, [r7, #4]
 800975e:	3304      	adds	r3, #4
 8009760:	2101      	movs	r1, #1
 8009762:	4618      	mov	r0, r3
 8009764:	f000 fdfa 	bl	800a35c <RCCEx_PLL2_Config>
 8009768:	4603      	mov	r3, r0
 800976a:	75fb      	strb	r3, [r7, #23]
 800976c:	e013      	b.n	8009796 <HAL_RCCEx_PeriphCLKConfig+0x842>
 800976e:	687b      	ldr	r3, [r7, #4]
 8009770:	3324      	adds	r3, #36	; 0x24
 8009772:	2101      	movs	r1, #1
 8009774:	4618      	mov	r0, r3
 8009776:	f000 fea3 	bl	800a4c0 <RCCEx_PLL3_Config>
 800977a:	4603      	mov	r3, r0
 800977c:	75fb      	strb	r3, [r7, #23]
 800977e:	e00a      	b.n	8009796 <HAL_RCCEx_PeriphCLKConfig+0x842>
 8009780:	2301      	movs	r3, #1
 8009782:	75fb      	strb	r3, [r7, #23]
 8009784:	e007      	b.n	8009796 <HAL_RCCEx_PeriphCLKConfig+0x842>
 8009786:	bf00      	nop
 8009788:	58024400 	.word	0x58024400
 800978c:	58024800 	.word	0x58024800
 8009790:	00ffffcf 	.word	0x00ffffcf
 8009794:	bf00      	nop
 8009796:	7dfb      	ldrb	r3, [r7, #23]
 8009798:	2b00      	cmp	r3, #0
 800979a:	d109      	bne.n	80097b0 <HAL_RCCEx_PeriphCLKConfig+0x85c>
 800979c:	4b96      	ldr	r3, [pc, #600]	; (80099f8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 800979e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80097a0:	f023 0238 	bic.w	r2, r3, #56	; 0x38
 80097a4:	687b      	ldr	r3, [r7, #4]
 80097a6:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80097a8:	4993      	ldr	r1, [pc, #588]	; (80099f8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 80097aa:	4313      	orrs	r3, r2
 80097ac:	654b      	str	r3, [r1, #84]	; 0x54
 80097ae:	e001      	b.n	80097b4 <HAL_RCCEx_PeriphCLKConfig+0x860>
 80097b0:	7dfb      	ldrb	r3, [r7, #23]
 80097b2:	75bb      	strb	r3, [r7, #22]
 80097b4:	687b      	ldr	r3, [r7, #4]
 80097b6:	681b      	ldr	r3, [r3, #0]
 80097b8:	f003 0302 	and.w	r3, r3, #2
 80097bc:	2b00      	cmp	r3, #0
 80097be:	d038      	beq.n	8009832 <HAL_RCCEx_PeriphCLKConfig+0x8de>
 80097c0:	687b      	ldr	r3, [r7, #4]
 80097c2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80097c4:	2b05      	cmp	r3, #5
 80097c6:	d821      	bhi.n	800980c <HAL_RCCEx_PeriphCLKConfig+0x8b8>
 80097c8:	a201      	add	r2, pc, #4	; (adr r2, 80097d0 <HAL_RCCEx_PeriphCLKConfig+0x87c>)
 80097ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80097ce:	bf00      	nop
 80097d0:	08009813 	.word	0x08009813
 80097d4:	080097e9 	.word	0x080097e9
 80097d8:	080097fb 	.word	0x080097fb
 80097dc:	08009813 	.word	0x08009813
 80097e0:	08009813 	.word	0x08009813
 80097e4:	08009813 	.word	0x08009813
 80097e8:	687b      	ldr	r3, [r7, #4]
 80097ea:	3304      	adds	r3, #4
 80097ec:	2101      	movs	r1, #1
 80097ee:	4618      	mov	r0, r3
 80097f0:	f000 fdb4 	bl	800a35c <RCCEx_PLL2_Config>
 80097f4:	4603      	mov	r3, r0
 80097f6:	75fb      	strb	r3, [r7, #23]
 80097f8:	e00c      	b.n	8009814 <HAL_RCCEx_PeriphCLKConfig+0x8c0>
 80097fa:	687b      	ldr	r3, [r7, #4]
 80097fc:	3324      	adds	r3, #36	; 0x24
 80097fe:	2101      	movs	r1, #1
 8009800:	4618      	mov	r0, r3
 8009802:	f000 fe5d 	bl	800a4c0 <RCCEx_PLL3_Config>
 8009806:	4603      	mov	r3, r0
 8009808:	75fb      	strb	r3, [r7, #23]
 800980a:	e003      	b.n	8009814 <HAL_RCCEx_PeriphCLKConfig+0x8c0>
 800980c:	2301      	movs	r3, #1
 800980e:	75fb      	strb	r3, [r7, #23]
 8009810:	e000      	b.n	8009814 <HAL_RCCEx_PeriphCLKConfig+0x8c0>
 8009812:	bf00      	nop
 8009814:	7dfb      	ldrb	r3, [r7, #23]
 8009816:	2b00      	cmp	r3, #0
 8009818:	d109      	bne.n	800982e <HAL_RCCEx_PeriphCLKConfig+0x8da>
 800981a:	4b77      	ldr	r3, [pc, #476]	; (80099f8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 800981c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800981e:	f023 0207 	bic.w	r2, r3, #7
 8009822:	687b      	ldr	r3, [r7, #4]
 8009824:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009826:	4974      	ldr	r1, [pc, #464]	; (80099f8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 8009828:	4313      	orrs	r3, r2
 800982a:	654b      	str	r3, [r1, #84]	; 0x54
 800982c:	e001      	b.n	8009832 <HAL_RCCEx_PeriphCLKConfig+0x8de>
 800982e:	7dfb      	ldrb	r3, [r7, #23]
 8009830:	75bb      	strb	r3, [r7, #22]
 8009832:	687b      	ldr	r3, [r7, #4]
 8009834:	681b      	ldr	r3, [r3, #0]
 8009836:	f003 0304 	and.w	r3, r3, #4
 800983a:	2b00      	cmp	r3, #0
 800983c:	d03a      	beq.n	80098b4 <HAL_RCCEx_PeriphCLKConfig+0x960>
 800983e:	687b      	ldr	r3, [r7, #4]
 8009840:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009844:	2b05      	cmp	r3, #5
 8009846:	d821      	bhi.n	800988c <HAL_RCCEx_PeriphCLKConfig+0x938>
 8009848:	a201      	add	r2, pc, #4	; (adr r2, 8009850 <HAL_RCCEx_PeriphCLKConfig+0x8fc>)
 800984a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800984e:	bf00      	nop
 8009850:	08009893 	.word	0x08009893
 8009854:	08009869 	.word	0x08009869
 8009858:	0800987b 	.word	0x0800987b
 800985c:	08009893 	.word	0x08009893
 8009860:	08009893 	.word	0x08009893
 8009864:	08009893 	.word	0x08009893
 8009868:	687b      	ldr	r3, [r7, #4]
 800986a:	3304      	adds	r3, #4
 800986c:	2101      	movs	r1, #1
 800986e:	4618      	mov	r0, r3
 8009870:	f000 fd74 	bl	800a35c <RCCEx_PLL2_Config>
 8009874:	4603      	mov	r3, r0
 8009876:	75fb      	strb	r3, [r7, #23]
 8009878:	e00c      	b.n	8009894 <HAL_RCCEx_PeriphCLKConfig+0x940>
 800987a:	687b      	ldr	r3, [r7, #4]
 800987c:	3324      	adds	r3, #36	; 0x24
 800987e:	2101      	movs	r1, #1
 8009880:	4618      	mov	r0, r3
 8009882:	f000 fe1d 	bl	800a4c0 <RCCEx_PLL3_Config>
 8009886:	4603      	mov	r3, r0
 8009888:	75fb      	strb	r3, [r7, #23]
 800988a:	e003      	b.n	8009894 <HAL_RCCEx_PeriphCLKConfig+0x940>
 800988c:	2301      	movs	r3, #1
 800988e:	75fb      	strb	r3, [r7, #23]
 8009890:	e000      	b.n	8009894 <HAL_RCCEx_PeriphCLKConfig+0x940>
 8009892:	bf00      	nop
 8009894:	7dfb      	ldrb	r3, [r7, #23]
 8009896:	2b00      	cmp	r3, #0
 8009898:	d10a      	bne.n	80098b0 <HAL_RCCEx_PeriphCLKConfig+0x95c>
 800989a:	4b57      	ldr	r3, [pc, #348]	; (80099f8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 800989c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800989e:	f023 0207 	bic.w	r2, r3, #7
 80098a2:	687b      	ldr	r3, [r7, #4]
 80098a4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80098a8:	4953      	ldr	r1, [pc, #332]	; (80099f8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 80098aa:	4313      	orrs	r3, r2
 80098ac:	658b      	str	r3, [r1, #88]	; 0x58
 80098ae:	e001      	b.n	80098b4 <HAL_RCCEx_PeriphCLKConfig+0x960>
 80098b0:	7dfb      	ldrb	r3, [r7, #23]
 80098b2:	75bb      	strb	r3, [r7, #22]
 80098b4:	687b      	ldr	r3, [r7, #4]
 80098b6:	681b      	ldr	r3, [r3, #0]
 80098b8:	f003 0320 	and.w	r3, r3, #32
 80098bc:	2b00      	cmp	r3, #0
 80098be:	d04b      	beq.n	8009958 <HAL_RCCEx_PeriphCLKConfig+0xa04>
 80098c0:	687b      	ldr	r3, [r7, #4]
 80098c2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80098c6:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80098ca:	d02e      	beq.n	800992a <HAL_RCCEx_PeriphCLKConfig+0x9d6>
 80098cc:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80098d0:	d828      	bhi.n	8009924 <HAL_RCCEx_PeriphCLKConfig+0x9d0>
 80098d2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80098d6:	d02a      	beq.n	800992e <HAL_RCCEx_PeriphCLKConfig+0x9da>
 80098d8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80098dc:	d822      	bhi.n	8009924 <HAL_RCCEx_PeriphCLKConfig+0x9d0>
 80098de:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 80098e2:	d026      	beq.n	8009932 <HAL_RCCEx_PeriphCLKConfig+0x9de>
 80098e4:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 80098e8:	d81c      	bhi.n	8009924 <HAL_RCCEx_PeriphCLKConfig+0x9d0>
 80098ea:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80098ee:	d010      	beq.n	8009912 <HAL_RCCEx_PeriphCLKConfig+0x9be>
 80098f0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80098f4:	d816      	bhi.n	8009924 <HAL_RCCEx_PeriphCLKConfig+0x9d0>
 80098f6:	2b00      	cmp	r3, #0
 80098f8:	d01d      	beq.n	8009936 <HAL_RCCEx_PeriphCLKConfig+0x9e2>
 80098fa:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80098fe:	d111      	bne.n	8009924 <HAL_RCCEx_PeriphCLKConfig+0x9d0>
 8009900:	687b      	ldr	r3, [r7, #4]
 8009902:	3304      	adds	r3, #4
 8009904:	2100      	movs	r1, #0
 8009906:	4618      	mov	r0, r3
 8009908:	f000 fd28 	bl	800a35c <RCCEx_PLL2_Config>
 800990c:	4603      	mov	r3, r0
 800990e:	75fb      	strb	r3, [r7, #23]
 8009910:	e012      	b.n	8009938 <HAL_RCCEx_PeriphCLKConfig+0x9e4>
 8009912:	687b      	ldr	r3, [r7, #4]
 8009914:	3324      	adds	r3, #36	; 0x24
 8009916:	2102      	movs	r1, #2
 8009918:	4618      	mov	r0, r3
 800991a:	f000 fdd1 	bl	800a4c0 <RCCEx_PLL3_Config>
 800991e:	4603      	mov	r3, r0
 8009920:	75fb      	strb	r3, [r7, #23]
 8009922:	e009      	b.n	8009938 <HAL_RCCEx_PeriphCLKConfig+0x9e4>
 8009924:	2301      	movs	r3, #1
 8009926:	75fb      	strb	r3, [r7, #23]
 8009928:	e006      	b.n	8009938 <HAL_RCCEx_PeriphCLKConfig+0x9e4>
 800992a:	bf00      	nop
 800992c:	e004      	b.n	8009938 <HAL_RCCEx_PeriphCLKConfig+0x9e4>
 800992e:	bf00      	nop
 8009930:	e002      	b.n	8009938 <HAL_RCCEx_PeriphCLKConfig+0x9e4>
 8009932:	bf00      	nop
 8009934:	e000      	b.n	8009938 <HAL_RCCEx_PeriphCLKConfig+0x9e4>
 8009936:	bf00      	nop
 8009938:	7dfb      	ldrb	r3, [r7, #23]
 800993a:	2b00      	cmp	r3, #0
 800993c:	d10a      	bne.n	8009954 <HAL_RCCEx_PeriphCLKConfig+0xa00>
 800993e:	4b2e      	ldr	r3, [pc, #184]	; (80099f8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 8009940:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009942:	f023 42e0 	bic.w	r2, r3, #1879048192	; 0x70000000
 8009946:	687b      	ldr	r3, [r7, #4]
 8009948:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800994c:	492a      	ldr	r1, [pc, #168]	; (80099f8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 800994e:	4313      	orrs	r3, r2
 8009950:	654b      	str	r3, [r1, #84]	; 0x54
 8009952:	e001      	b.n	8009958 <HAL_RCCEx_PeriphCLKConfig+0xa04>
 8009954:	7dfb      	ldrb	r3, [r7, #23]
 8009956:	75bb      	strb	r3, [r7, #22]
 8009958:	687b      	ldr	r3, [r7, #4]
 800995a:	681b      	ldr	r3, [r3, #0]
 800995c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009960:	2b00      	cmp	r3, #0
 8009962:	d04d      	beq.n	8009a00 <HAL_RCCEx_PeriphCLKConfig+0xaac>
 8009964:	687b      	ldr	r3, [r7, #4]
 8009966:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800996a:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 800996e:	d02e      	beq.n	80099ce <HAL_RCCEx_PeriphCLKConfig+0xa7a>
 8009970:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 8009974:	d828      	bhi.n	80099c8 <HAL_RCCEx_PeriphCLKConfig+0xa74>
 8009976:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800997a:	d02a      	beq.n	80099d2 <HAL_RCCEx_PeriphCLKConfig+0xa7e>
 800997c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009980:	d822      	bhi.n	80099c8 <HAL_RCCEx_PeriphCLKConfig+0xa74>
 8009982:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8009986:	d026      	beq.n	80099d6 <HAL_RCCEx_PeriphCLKConfig+0xa82>
 8009988:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800998c:	d81c      	bhi.n	80099c8 <HAL_RCCEx_PeriphCLKConfig+0xa74>
 800998e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009992:	d010      	beq.n	80099b6 <HAL_RCCEx_PeriphCLKConfig+0xa62>
 8009994:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009998:	d816      	bhi.n	80099c8 <HAL_RCCEx_PeriphCLKConfig+0xa74>
 800999a:	2b00      	cmp	r3, #0
 800999c:	d01d      	beq.n	80099da <HAL_RCCEx_PeriphCLKConfig+0xa86>
 800999e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80099a2:	d111      	bne.n	80099c8 <HAL_RCCEx_PeriphCLKConfig+0xa74>
 80099a4:	687b      	ldr	r3, [r7, #4]
 80099a6:	3304      	adds	r3, #4
 80099a8:	2100      	movs	r1, #0
 80099aa:	4618      	mov	r0, r3
 80099ac:	f000 fcd6 	bl	800a35c <RCCEx_PLL2_Config>
 80099b0:	4603      	mov	r3, r0
 80099b2:	75fb      	strb	r3, [r7, #23]
 80099b4:	e012      	b.n	80099dc <HAL_RCCEx_PeriphCLKConfig+0xa88>
 80099b6:	687b      	ldr	r3, [r7, #4]
 80099b8:	3324      	adds	r3, #36	; 0x24
 80099ba:	2102      	movs	r1, #2
 80099bc:	4618      	mov	r0, r3
 80099be:	f000 fd7f 	bl	800a4c0 <RCCEx_PLL3_Config>
 80099c2:	4603      	mov	r3, r0
 80099c4:	75fb      	strb	r3, [r7, #23]
 80099c6:	e009      	b.n	80099dc <HAL_RCCEx_PeriphCLKConfig+0xa88>
 80099c8:	2301      	movs	r3, #1
 80099ca:	75fb      	strb	r3, [r7, #23]
 80099cc:	e006      	b.n	80099dc <HAL_RCCEx_PeriphCLKConfig+0xa88>
 80099ce:	bf00      	nop
 80099d0:	e004      	b.n	80099dc <HAL_RCCEx_PeriphCLKConfig+0xa88>
 80099d2:	bf00      	nop
 80099d4:	e002      	b.n	80099dc <HAL_RCCEx_PeriphCLKConfig+0xa88>
 80099d6:	bf00      	nop
 80099d8:	e000      	b.n	80099dc <HAL_RCCEx_PeriphCLKConfig+0xa88>
 80099da:	bf00      	nop
 80099dc:	7dfb      	ldrb	r3, [r7, #23]
 80099de:	2b00      	cmp	r3, #0
 80099e0:	d10c      	bne.n	80099fc <HAL_RCCEx_PeriphCLKConfig+0xaa8>
 80099e2:	4b05      	ldr	r3, [pc, #20]	; (80099f8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 80099e4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80099e6:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80099ea:	687b      	ldr	r3, [r7, #4]
 80099ec:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80099f0:	4901      	ldr	r1, [pc, #4]	; (80099f8 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
 80099f2:	4313      	orrs	r3, r2
 80099f4:	658b      	str	r3, [r1, #88]	; 0x58
 80099f6:	e003      	b.n	8009a00 <HAL_RCCEx_PeriphCLKConfig+0xaac>
 80099f8:	58024400 	.word	0x58024400
 80099fc:	7dfb      	ldrb	r3, [r7, #23]
 80099fe:	75bb      	strb	r3, [r7, #22]
 8009a00:	687b      	ldr	r3, [r7, #4]
 8009a02:	681b      	ldr	r3, [r3, #0]
 8009a04:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009a08:	2b00      	cmp	r3, #0
 8009a0a:	d04b      	beq.n	8009aa4 <HAL_RCCEx_PeriphCLKConfig+0xb50>
 8009a0c:	687b      	ldr	r3, [r7, #4]
 8009a0e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8009a12:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 8009a16:	d02e      	beq.n	8009a76 <HAL_RCCEx_PeriphCLKConfig+0xb22>
 8009a18:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 8009a1c:	d828      	bhi.n	8009a70 <HAL_RCCEx_PeriphCLKConfig+0xb1c>
 8009a1e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009a22:	d02a      	beq.n	8009a7a <HAL_RCCEx_PeriphCLKConfig+0xb26>
 8009a24:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009a28:	d822      	bhi.n	8009a70 <HAL_RCCEx_PeriphCLKConfig+0xb1c>
 8009a2a:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 8009a2e:	d026      	beq.n	8009a7e <HAL_RCCEx_PeriphCLKConfig+0xb2a>
 8009a30:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 8009a34:	d81c      	bhi.n	8009a70 <HAL_RCCEx_PeriphCLKConfig+0xb1c>
 8009a36:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009a3a:	d010      	beq.n	8009a5e <HAL_RCCEx_PeriphCLKConfig+0xb0a>
 8009a3c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009a40:	d816      	bhi.n	8009a70 <HAL_RCCEx_PeriphCLKConfig+0xb1c>
 8009a42:	2b00      	cmp	r3, #0
 8009a44:	d01d      	beq.n	8009a82 <HAL_RCCEx_PeriphCLKConfig+0xb2e>
 8009a46:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009a4a:	d111      	bne.n	8009a70 <HAL_RCCEx_PeriphCLKConfig+0xb1c>
 8009a4c:	687b      	ldr	r3, [r7, #4]
 8009a4e:	3304      	adds	r3, #4
 8009a50:	2100      	movs	r1, #0
 8009a52:	4618      	mov	r0, r3
 8009a54:	f000 fc82 	bl	800a35c <RCCEx_PLL2_Config>
 8009a58:	4603      	mov	r3, r0
 8009a5a:	75fb      	strb	r3, [r7, #23]
 8009a5c:	e012      	b.n	8009a84 <HAL_RCCEx_PeriphCLKConfig+0xb30>
 8009a5e:	687b      	ldr	r3, [r7, #4]
 8009a60:	3324      	adds	r3, #36	; 0x24
 8009a62:	2102      	movs	r1, #2
 8009a64:	4618      	mov	r0, r3
 8009a66:	f000 fd2b 	bl	800a4c0 <RCCEx_PLL3_Config>
 8009a6a:	4603      	mov	r3, r0
 8009a6c:	75fb      	strb	r3, [r7, #23]
 8009a6e:	e009      	b.n	8009a84 <HAL_RCCEx_PeriphCLKConfig+0xb30>
 8009a70:	2301      	movs	r3, #1
 8009a72:	75fb      	strb	r3, [r7, #23]
 8009a74:	e006      	b.n	8009a84 <HAL_RCCEx_PeriphCLKConfig+0xb30>
 8009a76:	bf00      	nop
 8009a78:	e004      	b.n	8009a84 <HAL_RCCEx_PeriphCLKConfig+0xb30>
 8009a7a:	bf00      	nop
 8009a7c:	e002      	b.n	8009a84 <HAL_RCCEx_PeriphCLKConfig+0xb30>
 8009a7e:	bf00      	nop
 8009a80:	e000      	b.n	8009a84 <HAL_RCCEx_PeriphCLKConfig+0xb30>
 8009a82:	bf00      	nop
 8009a84:	7dfb      	ldrb	r3, [r7, #23]
 8009a86:	2b00      	cmp	r3, #0
 8009a88:	d10a      	bne.n	8009aa0 <HAL_RCCEx_PeriphCLKConfig+0xb4c>
 8009a8a:	4b9d      	ldr	r3, [pc, #628]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009a8c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009a8e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8009a92:	687b      	ldr	r3, [r7, #4]
 8009a94:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8009a98:	4999      	ldr	r1, [pc, #612]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009a9a:	4313      	orrs	r3, r2
 8009a9c:	658b      	str	r3, [r1, #88]	; 0x58
 8009a9e:	e001      	b.n	8009aa4 <HAL_RCCEx_PeriphCLKConfig+0xb50>
 8009aa0:	7dfb      	ldrb	r3, [r7, #23]
 8009aa2:	75bb      	strb	r3, [r7, #22]
 8009aa4:	687b      	ldr	r3, [r7, #4]
 8009aa6:	681b      	ldr	r3, [r3, #0]
 8009aa8:	f003 0308 	and.w	r3, r3, #8
 8009aac:	2b00      	cmp	r3, #0
 8009aae:	d01a      	beq.n	8009ae6 <HAL_RCCEx_PeriphCLKConfig+0xb92>
 8009ab0:	687b      	ldr	r3, [r7, #4]
 8009ab2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8009ab6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009aba:	d10a      	bne.n	8009ad2 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 8009abc:	687b      	ldr	r3, [r7, #4]
 8009abe:	3324      	adds	r3, #36	; 0x24
 8009ac0:	2102      	movs	r1, #2
 8009ac2:	4618      	mov	r0, r3
 8009ac4:	f000 fcfc 	bl	800a4c0 <RCCEx_PLL3_Config>
 8009ac8:	4603      	mov	r3, r0
 8009aca:	2b00      	cmp	r3, #0
 8009acc:	d001      	beq.n	8009ad2 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
 8009ace:	2301      	movs	r3, #1
 8009ad0:	75bb      	strb	r3, [r7, #22]
 8009ad2:	4b8b      	ldr	r3, [pc, #556]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009ad4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009ad6:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8009ada:	687b      	ldr	r3, [r7, #4]
 8009adc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8009ae0:	4987      	ldr	r1, [pc, #540]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009ae2:	4313      	orrs	r3, r2
 8009ae4:	654b      	str	r3, [r1, #84]	; 0x54
 8009ae6:	687b      	ldr	r3, [r7, #4]
 8009ae8:	681b      	ldr	r3, [r3, #0]
 8009aea:	f003 0310 	and.w	r3, r3, #16
 8009aee:	2b00      	cmp	r3, #0
 8009af0:	d01a      	beq.n	8009b28 <HAL_RCCEx_PeriphCLKConfig+0xbd4>
 8009af2:	687b      	ldr	r3, [r7, #4]
 8009af4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8009af8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009afc:	d10a      	bne.n	8009b14 <HAL_RCCEx_PeriphCLKConfig+0xbc0>
 8009afe:	687b      	ldr	r3, [r7, #4]
 8009b00:	3324      	adds	r3, #36	; 0x24
 8009b02:	2102      	movs	r1, #2
 8009b04:	4618      	mov	r0, r3
 8009b06:	f000 fcdb 	bl	800a4c0 <RCCEx_PLL3_Config>
 8009b0a:	4603      	mov	r3, r0
 8009b0c:	2b00      	cmp	r3, #0
 8009b0e:	d001      	beq.n	8009b14 <HAL_RCCEx_PeriphCLKConfig+0xbc0>
 8009b10:	2301      	movs	r3, #1
 8009b12:	75bb      	strb	r3, [r7, #22]
 8009b14:	4b7a      	ldr	r3, [pc, #488]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009b16:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009b18:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8009b1c:	687b      	ldr	r3, [r7, #4]
 8009b1e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8009b22:	4977      	ldr	r1, [pc, #476]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009b24:	4313      	orrs	r3, r2
 8009b26:	658b      	str	r3, [r1, #88]	; 0x58
 8009b28:	687b      	ldr	r3, [r7, #4]
 8009b2a:	681b      	ldr	r3, [r3, #0]
 8009b2c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8009b30:	2b00      	cmp	r3, #0
 8009b32:	d034      	beq.n	8009b9e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8009b34:	687b      	ldr	r3, [r7, #4]
 8009b36:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8009b3a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009b3e:	d01d      	beq.n	8009b7c <HAL_RCCEx_PeriphCLKConfig+0xc28>
 8009b40:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009b44:	d817      	bhi.n	8009b76 <HAL_RCCEx_PeriphCLKConfig+0xc22>
 8009b46:	2b00      	cmp	r3, #0
 8009b48:	d003      	beq.n	8009b52 <HAL_RCCEx_PeriphCLKConfig+0xbfe>
 8009b4a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009b4e:	d009      	beq.n	8009b64 <HAL_RCCEx_PeriphCLKConfig+0xc10>
 8009b50:	e011      	b.n	8009b76 <HAL_RCCEx_PeriphCLKConfig+0xc22>
 8009b52:	687b      	ldr	r3, [r7, #4]
 8009b54:	3304      	adds	r3, #4
 8009b56:	2100      	movs	r1, #0
 8009b58:	4618      	mov	r0, r3
 8009b5a:	f000 fbff 	bl	800a35c <RCCEx_PLL2_Config>
 8009b5e:	4603      	mov	r3, r0
 8009b60:	75fb      	strb	r3, [r7, #23]
 8009b62:	e00c      	b.n	8009b7e <HAL_RCCEx_PeriphCLKConfig+0xc2a>
 8009b64:	687b      	ldr	r3, [r7, #4]
 8009b66:	3324      	adds	r3, #36	; 0x24
 8009b68:	2102      	movs	r1, #2
 8009b6a:	4618      	mov	r0, r3
 8009b6c:	f000 fca8 	bl	800a4c0 <RCCEx_PLL3_Config>
 8009b70:	4603      	mov	r3, r0
 8009b72:	75fb      	strb	r3, [r7, #23]
 8009b74:	e003      	b.n	8009b7e <HAL_RCCEx_PeriphCLKConfig+0xc2a>
 8009b76:	2301      	movs	r3, #1
 8009b78:	75fb      	strb	r3, [r7, #23]
 8009b7a:	e000      	b.n	8009b7e <HAL_RCCEx_PeriphCLKConfig+0xc2a>
 8009b7c:	bf00      	nop
 8009b7e:	7dfb      	ldrb	r3, [r7, #23]
 8009b80:	2b00      	cmp	r3, #0
 8009b82:	d10a      	bne.n	8009b9a <HAL_RCCEx_PeriphCLKConfig+0xc46>
 8009b84:	4b5e      	ldr	r3, [pc, #376]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009b86:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009b88:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8009b8c:	687b      	ldr	r3, [r7, #4]
 8009b8e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8009b92:	495b      	ldr	r1, [pc, #364]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009b94:	4313      	orrs	r3, r2
 8009b96:	658b      	str	r3, [r1, #88]	; 0x58
 8009b98:	e001      	b.n	8009b9e <HAL_RCCEx_PeriphCLKConfig+0xc4a>
 8009b9a:	7dfb      	ldrb	r3, [r7, #23]
 8009b9c:	75bb      	strb	r3, [r7, #22]
 8009b9e:	687b      	ldr	r3, [r7, #4]
 8009ba0:	681b      	ldr	r3, [r3, #0]
 8009ba2:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8009ba6:	2b00      	cmp	r3, #0
 8009ba8:	d033      	beq.n	8009c12 <HAL_RCCEx_PeriphCLKConfig+0xcbe>
 8009baa:	687b      	ldr	r3, [r7, #4]
 8009bac:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009bb0:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8009bb4:	d01c      	beq.n	8009bf0 <HAL_RCCEx_PeriphCLKConfig+0xc9c>
 8009bb6:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8009bba:	d816      	bhi.n	8009bea <HAL_RCCEx_PeriphCLKConfig+0xc96>
 8009bbc:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8009bc0:	d003      	beq.n	8009bca <HAL_RCCEx_PeriphCLKConfig+0xc76>
 8009bc2:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8009bc6:	d007      	beq.n	8009bd8 <HAL_RCCEx_PeriphCLKConfig+0xc84>
 8009bc8:	e00f      	b.n	8009bea <HAL_RCCEx_PeriphCLKConfig+0xc96>
 8009bca:	4b4d      	ldr	r3, [pc, #308]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009bcc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009bce:	4a4c      	ldr	r2, [pc, #304]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009bd0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009bd4:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009bd6:	e00c      	b.n	8009bf2 <HAL_RCCEx_PeriphCLKConfig+0xc9e>
 8009bd8:	687b      	ldr	r3, [r7, #4]
 8009bda:	3324      	adds	r3, #36	; 0x24
 8009bdc:	2101      	movs	r1, #1
 8009bde:	4618      	mov	r0, r3
 8009be0:	f000 fc6e 	bl	800a4c0 <RCCEx_PLL3_Config>
 8009be4:	4603      	mov	r3, r0
 8009be6:	75fb      	strb	r3, [r7, #23]
 8009be8:	e003      	b.n	8009bf2 <HAL_RCCEx_PeriphCLKConfig+0xc9e>
 8009bea:	2301      	movs	r3, #1
 8009bec:	75fb      	strb	r3, [r7, #23]
 8009bee:	e000      	b.n	8009bf2 <HAL_RCCEx_PeriphCLKConfig+0xc9e>
 8009bf0:	bf00      	nop
 8009bf2:	7dfb      	ldrb	r3, [r7, #23]
 8009bf4:	2b00      	cmp	r3, #0
 8009bf6:	d10a      	bne.n	8009c0e <HAL_RCCEx_PeriphCLKConfig+0xcba>
 8009bf8:	4b41      	ldr	r3, [pc, #260]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009bfa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009bfc:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8009c00:	687b      	ldr	r3, [r7, #4]
 8009c02:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009c06:	493e      	ldr	r1, [pc, #248]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009c08:	4313      	orrs	r3, r2
 8009c0a:	654b      	str	r3, [r1, #84]	; 0x54
 8009c0c:	e001      	b.n	8009c12 <HAL_RCCEx_PeriphCLKConfig+0xcbe>
 8009c0e:	7dfb      	ldrb	r3, [r7, #23]
 8009c10:	75bb      	strb	r3, [r7, #22]
 8009c12:	687b      	ldr	r3, [r7, #4]
 8009c14:	681b      	ldr	r3, [r3, #0]
 8009c16:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8009c1a:	2b00      	cmp	r3, #0
 8009c1c:	d029      	beq.n	8009c72 <HAL_RCCEx_PeriphCLKConfig+0xd1e>
 8009c1e:	687b      	ldr	r3, [r7, #4]
 8009c20:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009c22:	2b00      	cmp	r3, #0
 8009c24:	d003      	beq.n	8009c2e <HAL_RCCEx_PeriphCLKConfig+0xcda>
 8009c26:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009c2a:	d007      	beq.n	8009c3c <HAL_RCCEx_PeriphCLKConfig+0xce8>
 8009c2c:	e00f      	b.n	8009c4e <HAL_RCCEx_PeriphCLKConfig+0xcfa>
 8009c2e:	4b34      	ldr	r3, [pc, #208]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009c30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c32:	4a33      	ldr	r2, [pc, #204]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009c34:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009c38:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009c3a:	e00b      	b.n	8009c54 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8009c3c:	687b      	ldr	r3, [r7, #4]
 8009c3e:	3304      	adds	r3, #4
 8009c40:	2102      	movs	r1, #2
 8009c42:	4618      	mov	r0, r3
 8009c44:	f000 fb8a 	bl	800a35c <RCCEx_PLL2_Config>
 8009c48:	4603      	mov	r3, r0
 8009c4a:	75fb      	strb	r3, [r7, #23]
 8009c4c:	e002      	b.n	8009c54 <HAL_RCCEx_PeriphCLKConfig+0xd00>
 8009c4e:	2301      	movs	r3, #1
 8009c50:	75fb      	strb	r3, [r7, #23]
 8009c52:	bf00      	nop
 8009c54:	7dfb      	ldrb	r3, [r7, #23]
 8009c56:	2b00      	cmp	r3, #0
 8009c58:	d109      	bne.n	8009c6e <HAL_RCCEx_PeriphCLKConfig+0xd1a>
 8009c5a:	4b29      	ldr	r3, [pc, #164]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009c5c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009c5e:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8009c62:	687b      	ldr	r3, [r7, #4]
 8009c64:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009c66:	4926      	ldr	r1, [pc, #152]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009c68:	4313      	orrs	r3, r2
 8009c6a:	64cb      	str	r3, [r1, #76]	; 0x4c
 8009c6c:	e001      	b.n	8009c72 <HAL_RCCEx_PeriphCLKConfig+0xd1e>
 8009c6e:	7dfb      	ldrb	r3, [r7, #23]
 8009c70:	75bb      	strb	r3, [r7, #22]
 8009c72:	687b      	ldr	r3, [r7, #4]
 8009c74:	681b      	ldr	r3, [r3, #0]
 8009c76:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8009c7a:	2b00      	cmp	r3, #0
 8009c7c:	d00a      	beq.n	8009c94 <HAL_RCCEx_PeriphCLKConfig+0xd40>
 8009c7e:	687b      	ldr	r3, [r7, #4]
 8009c80:	3324      	adds	r3, #36	; 0x24
 8009c82:	2102      	movs	r1, #2
 8009c84:	4618      	mov	r0, r3
 8009c86:	f000 fc1b 	bl	800a4c0 <RCCEx_PLL3_Config>
 8009c8a:	4603      	mov	r3, r0
 8009c8c:	2b00      	cmp	r3, #0
 8009c8e:	d001      	beq.n	8009c94 <HAL_RCCEx_PeriphCLKConfig+0xd40>
 8009c90:	2301      	movs	r3, #1
 8009c92:	75bb      	strb	r3, [r7, #22]
 8009c94:	687b      	ldr	r3, [r7, #4]
 8009c96:	681b      	ldr	r3, [r3, #0]
 8009c98:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009c9c:	2b00      	cmp	r3, #0
 8009c9e:	d033      	beq.n	8009d08 <HAL_RCCEx_PeriphCLKConfig+0xdb4>
 8009ca0:	687b      	ldr	r3, [r7, #4]
 8009ca2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009ca4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8009ca8:	d017      	beq.n	8009cda <HAL_RCCEx_PeriphCLKConfig+0xd86>
 8009caa:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8009cae:	d811      	bhi.n	8009cd4 <HAL_RCCEx_PeriphCLKConfig+0xd80>
 8009cb0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009cb4:	d013      	beq.n	8009cde <HAL_RCCEx_PeriphCLKConfig+0xd8a>
 8009cb6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009cba:	d80b      	bhi.n	8009cd4 <HAL_RCCEx_PeriphCLKConfig+0xd80>
 8009cbc:	2b00      	cmp	r3, #0
 8009cbe:	d010      	beq.n	8009ce2 <HAL_RCCEx_PeriphCLKConfig+0xd8e>
 8009cc0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009cc4:	d106      	bne.n	8009cd4 <HAL_RCCEx_PeriphCLKConfig+0xd80>
 8009cc6:	4b0e      	ldr	r3, [pc, #56]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009cc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009cca:	4a0d      	ldr	r2, [pc, #52]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009ccc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009cd0:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009cd2:	e007      	b.n	8009ce4 <HAL_RCCEx_PeriphCLKConfig+0xd90>
 8009cd4:	2301      	movs	r3, #1
 8009cd6:	75fb      	strb	r3, [r7, #23]
 8009cd8:	e004      	b.n	8009ce4 <HAL_RCCEx_PeriphCLKConfig+0xd90>
 8009cda:	bf00      	nop
 8009cdc:	e002      	b.n	8009ce4 <HAL_RCCEx_PeriphCLKConfig+0xd90>
 8009cde:	bf00      	nop
 8009ce0:	e000      	b.n	8009ce4 <HAL_RCCEx_PeriphCLKConfig+0xd90>
 8009ce2:	bf00      	nop
 8009ce4:	7dfb      	ldrb	r3, [r7, #23]
 8009ce6:	2b00      	cmp	r3, #0
 8009ce8:	d10c      	bne.n	8009d04 <HAL_RCCEx_PeriphCLKConfig+0xdb0>
 8009cea:	4b05      	ldr	r3, [pc, #20]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009cec:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009cee:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8009cf2:	687b      	ldr	r3, [r7, #4]
 8009cf4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009cf6:	4902      	ldr	r1, [pc, #8]	; (8009d00 <HAL_RCCEx_PeriphCLKConfig+0xdac>)
 8009cf8:	4313      	orrs	r3, r2
 8009cfa:	654b      	str	r3, [r1, #84]	; 0x54
 8009cfc:	e004      	b.n	8009d08 <HAL_RCCEx_PeriphCLKConfig+0xdb4>
 8009cfe:	bf00      	nop
 8009d00:	58024400 	.word	0x58024400
 8009d04:	7dfb      	ldrb	r3, [r7, #23]
 8009d06:	75bb      	strb	r3, [r7, #22]
 8009d08:	687b      	ldr	r3, [r7, #4]
 8009d0a:	681b      	ldr	r3, [r3, #0]
 8009d0c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8009d10:	2b00      	cmp	r3, #0
 8009d12:	d008      	beq.n	8009d26 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 8009d14:	4b31      	ldr	r3, [pc, #196]	; (8009ddc <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 8009d16:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009d18:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8009d1c:	687b      	ldr	r3, [r7, #4]
 8009d1e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009d20:	492e      	ldr	r1, [pc, #184]	; (8009ddc <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 8009d22:	4313      	orrs	r3, r2
 8009d24:	650b      	str	r3, [r1, #80]	; 0x50
 8009d26:	687b      	ldr	r3, [r7, #4]
 8009d28:	681b      	ldr	r3, [r3, #0]
 8009d2a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009d2e:	2b00      	cmp	r3, #0
 8009d30:	d009      	beq.n	8009d46 <HAL_RCCEx_PeriphCLKConfig+0xdf2>
 8009d32:	4b2a      	ldr	r3, [pc, #168]	; (8009ddc <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 8009d34:	691b      	ldr	r3, [r3, #16]
 8009d36:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 8009d3a:	687b      	ldr	r3, [r7, #4]
 8009d3c:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8009d40:	4926      	ldr	r1, [pc, #152]	; (8009ddc <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 8009d42:	4313      	orrs	r3, r2
 8009d44:	610b      	str	r3, [r1, #16]
 8009d46:	687b      	ldr	r3, [r7, #4]
 8009d48:	681b      	ldr	r3, [r3, #0]
 8009d4a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8009d4e:	2b00      	cmp	r3, #0
 8009d50:	d008      	beq.n	8009d64 <HAL_RCCEx_PeriphCLKConfig+0xe10>
 8009d52:	4b22      	ldr	r3, [pc, #136]	; (8009ddc <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 8009d54:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009d56:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 8009d5a:	687b      	ldr	r3, [r7, #4]
 8009d5c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8009d5e:	491f      	ldr	r1, [pc, #124]	; (8009ddc <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 8009d60:	4313      	orrs	r3, r2
 8009d62:	650b      	str	r3, [r1, #80]	; 0x50
 8009d64:	687b      	ldr	r3, [r7, #4]
 8009d66:	681b      	ldr	r3, [r3, #0]
 8009d68:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 8009d6c:	2b00      	cmp	r3, #0
 8009d6e:	d00d      	beq.n	8009d8c <HAL_RCCEx_PeriphCLKConfig+0xe38>
 8009d70:	4b1a      	ldr	r3, [pc, #104]	; (8009ddc <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 8009d72:	691b      	ldr	r3, [r3, #16]
 8009d74:	4a19      	ldr	r2, [pc, #100]	; (8009ddc <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 8009d76:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8009d7a:	6113      	str	r3, [r2, #16]
 8009d7c:	4b17      	ldr	r3, [pc, #92]	; (8009ddc <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 8009d7e:	691a      	ldr	r2, [r3, #16]
 8009d80:	687b      	ldr	r3, [r7, #4]
 8009d82:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8009d86:	4915      	ldr	r1, [pc, #84]	; (8009ddc <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 8009d88:	4313      	orrs	r3, r2
 8009d8a:	610b      	str	r3, [r1, #16]
 8009d8c:	687b      	ldr	r3, [r7, #4]
 8009d8e:	681b      	ldr	r3, [r3, #0]
 8009d90:	2b00      	cmp	r3, #0
 8009d92:	da08      	bge.n	8009da6 <HAL_RCCEx_PeriphCLKConfig+0xe52>
 8009d94:	4b11      	ldr	r3, [pc, #68]	; (8009ddc <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 8009d96:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009d98:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 8009d9c:	687b      	ldr	r3, [r7, #4]
 8009d9e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009da0:	490e      	ldr	r1, [pc, #56]	; (8009ddc <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 8009da2:	4313      	orrs	r3, r2
 8009da4:	64cb      	str	r3, [r1, #76]	; 0x4c
 8009da6:	687b      	ldr	r3, [r7, #4]
 8009da8:	681b      	ldr	r3, [r3, #0]
 8009daa:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8009dae:	2b00      	cmp	r3, #0
 8009db0:	d009      	beq.n	8009dc6 <HAL_RCCEx_PeriphCLKConfig+0xe72>
 8009db2:	4b0a      	ldr	r3, [pc, #40]	; (8009ddc <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 8009db4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009db6:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8009dba:	687b      	ldr	r3, [r7, #4]
 8009dbc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8009dc0:	4906      	ldr	r1, [pc, #24]	; (8009ddc <HAL_RCCEx_PeriphCLKConfig+0xe88>)
 8009dc2:	4313      	orrs	r3, r2
 8009dc4:	654b      	str	r3, [r1, #84]	; 0x54
 8009dc6:	7dbb      	ldrb	r3, [r7, #22]
 8009dc8:	2b00      	cmp	r3, #0
 8009dca:	d101      	bne.n	8009dd0 <HAL_RCCEx_PeriphCLKConfig+0xe7c>
 8009dcc:	2300      	movs	r3, #0
 8009dce:	e000      	b.n	8009dd2 <HAL_RCCEx_PeriphCLKConfig+0xe7e>
 8009dd0:	2301      	movs	r3, #1
 8009dd2:	4618      	mov	r0, r3
 8009dd4:	3718      	adds	r7, #24
 8009dd6:	46bd      	mov	sp, r7
 8009dd8:	bd80      	pop	{r7, pc}
 8009dda:	bf00      	nop
 8009ddc:	58024400 	.word	0x58024400

08009de0 <HAL_RCCEx_GetD3PCLK1Freq>:
 8009de0:	b580      	push	{r7, lr}
 8009de2:	af00      	add	r7, sp, #0
 8009de4:	f7ff f85a 	bl	8008e9c <HAL_RCC_GetHCLKFreq>
 8009de8:	4602      	mov	r2, r0
 8009dea:	4b06      	ldr	r3, [pc, #24]	; (8009e04 <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 8009dec:	6a1b      	ldr	r3, [r3, #32]
 8009dee:	091b      	lsrs	r3, r3, #4
 8009df0:	f003 0307 	and.w	r3, r3, #7
 8009df4:	4904      	ldr	r1, [pc, #16]	; (8009e08 <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 8009df6:	5ccb      	ldrb	r3, [r1, r3]
 8009df8:	f003 031f 	and.w	r3, r3, #31
 8009dfc:	fa22 f303 	lsr.w	r3, r2, r3
 8009e00:	4618      	mov	r0, r3
 8009e02:	bd80      	pop	{r7, pc}
 8009e04:	58024400 	.word	0x58024400
 8009e08:	08012310 	.word	0x08012310

08009e0c <HAL_RCCEx_GetPLL2ClockFreq>:
 8009e0c:	b480      	push	{r7}
 8009e0e:	b089      	sub	sp, #36	; 0x24
 8009e10:	af00      	add	r7, sp, #0
 8009e12:	6078      	str	r0, [r7, #4]
 8009e14:	4ba1      	ldr	r3, [pc, #644]	; (800a09c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009e16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e18:	f003 0303 	and.w	r3, r3, #3
 8009e1c:	61bb      	str	r3, [r7, #24]
 8009e1e:	4b9f      	ldr	r3, [pc, #636]	; (800a09c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009e20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e22:	0b1b      	lsrs	r3, r3, #12
 8009e24:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009e28:	617b      	str	r3, [r7, #20]
 8009e2a:	4b9c      	ldr	r3, [pc, #624]	; (800a09c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009e2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009e2e:	091b      	lsrs	r3, r3, #4
 8009e30:	f003 0301 	and.w	r3, r3, #1
 8009e34:	613b      	str	r3, [r7, #16]
 8009e36:	4b99      	ldr	r3, [pc, #612]	; (800a09c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009e38:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009e3a:	08db      	lsrs	r3, r3, #3
 8009e3c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8009e40:	693a      	ldr	r2, [r7, #16]
 8009e42:	fb02 f303 	mul.w	r3, r2, r3
 8009e46:	ee07 3a90 	vmov	s15, r3
 8009e4a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009e4e:	edc7 7a03 	vstr	s15, [r7, #12]
 8009e52:	697b      	ldr	r3, [r7, #20]
 8009e54:	2b00      	cmp	r3, #0
 8009e56:	f000 8111 	beq.w	800a07c <HAL_RCCEx_GetPLL2ClockFreq+0x270>
 8009e5a:	69bb      	ldr	r3, [r7, #24]
 8009e5c:	2b02      	cmp	r3, #2
 8009e5e:	f000 8083 	beq.w	8009f68 <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 8009e62:	69bb      	ldr	r3, [r7, #24]
 8009e64:	2b02      	cmp	r3, #2
 8009e66:	f200 80a1 	bhi.w	8009fac <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 8009e6a:	69bb      	ldr	r3, [r7, #24]
 8009e6c:	2b00      	cmp	r3, #0
 8009e6e:	d003      	beq.n	8009e78 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 8009e70:	69bb      	ldr	r3, [r7, #24]
 8009e72:	2b01      	cmp	r3, #1
 8009e74:	d056      	beq.n	8009f24 <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 8009e76:	e099      	b.n	8009fac <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 8009e78:	4b88      	ldr	r3, [pc, #544]	; (800a09c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009e7a:	681b      	ldr	r3, [r3, #0]
 8009e7c:	f003 0320 	and.w	r3, r3, #32
 8009e80:	2b00      	cmp	r3, #0
 8009e82:	d02d      	beq.n	8009ee0 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
 8009e84:	4b85      	ldr	r3, [pc, #532]	; (800a09c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009e86:	681b      	ldr	r3, [r3, #0]
 8009e88:	08db      	lsrs	r3, r3, #3
 8009e8a:	f003 0303 	and.w	r3, r3, #3
 8009e8e:	4a84      	ldr	r2, [pc, #528]	; (800a0a0 <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 8009e90:	fa22 f303 	lsr.w	r3, r2, r3
 8009e94:	60bb      	str	r3, [r7, #8]
 8009e96:	68bb      	ldr	r3, [r7, #8]
 8009e98:	ee07 3a90 	vmov	s15, r3
 8009e9c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009ea0:	697b      	ldr	r3, [r7, #20]
 8009ea2:	ee07 3a90 	vmov	s15, r3
 8009ea6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009eaa:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009eae:	4b7b      	ldr	r3, [pc, #492]	; (800a09c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009eb0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009eb2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009eb6:	ee07 3a90 	vmov	s15, r3
 8009eba:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009ebe:	ed97 6a03 	vldr	s12, [r7, #12]
 8009ec2:	eddf 5a78 	vldr	s11, [pc, #480]	; 800a0a4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009ec6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009eca:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009ece:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009ed2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ed6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009eda:	edc7 7a07 	vstr	s15, [r7, #28]
 8009ede:	e087      	b.n	8009ff0 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8009ee0:	697b      	ldr	r3, [r7, #20]
 8009ee2:	ee07 3a90 	vmov	s15, r3
 8009ee6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009eea:	eddf 6a6f 	vldr	s13, [pc, #444]	; 800a0a8 <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 8009eee:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009ef2:	4b6a      	ldr	r3, [pc, #424]	; (800a09c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009ef4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009ef6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009efa:	ee07 3a90 	vmov	s15, r3
 8009efe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009f02:	ed97 6a03 	vldr	s12, [r7, #12]
 8009f06:	eddf 5a67 	vldr	s11, [pc, #412]	; 800a0a4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009f0a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009f0e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009f12:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009f16:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009f1a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009f1e:	edc7 7a07 	vstr	s15, [r7, #28]
 8009f22:	e065      	b.n	8009ff0 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8009f24:	697b      	ldr	r3, [r7, #20]
 8009f26:	ee07 3a90 	vmov	s15, r3
 8009f2a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f2e:	eddf 6a5f 	vldr	s13, [pc, #380]	; 800a0ac <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8009f32:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009f36:	4b59      	ldr	r3, [pc, #356]	; (800a09c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009f38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f3a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009f3e:	ee07 3a90 	vmov	s15, r3
 8009f42:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009f46:	ed97 6a03 	vldr	s12, [r7, #12]
 8009f4a:	eddf 5a56 	vldr	s11, [pc, #344]	; 800a0a4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009f4e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009f52:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009f56:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009f5a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009f5e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009f62:	edc7 7a07 	vstr	s15, [r7, #28]
 8009f66:	e043      	b.n	8009ff0 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8009f68:	697b      	ldr	r3, [r7, #20]
 8009f6a:	ee07 3a90 	vmov	s15, r3
 8009f6e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009f72:	eddf 6a4f 	vldr	s13, [pc, #316]	; 800a0b0 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 8009f76:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009f7a:	4b48      	ldr	r3, [pc, #288]	; (800a09c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009f7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009f7e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009f82:	ee07 3a90 	vmov	s15, r3
 8009f86:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009f8a:	ed97 6a03 	vldr	s12, [r7, #12]
 8009f8e:	eddf 5a45 	vldr	s11, [pc, #276]	; 800a0a4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009f92:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009f96:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009f9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009f9e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009fa2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009fa6:	edc7 7a07 	vstr	s15, [r7, #28]
 8009faa:	e021      	b.n	8009ff0 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8009fac:	697b      	ldr	r3, [r7, #20]
 8009fae:	ee07 3a90 	vmov	s15, r3
 8009fb2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009fb6:	eddf 6a3d 	vldr	s13, [pc, #244]	; 800a0ac <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8009fba:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009fbe:	4b37      	ldr	r3, [pc, #220]	; (800a09c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009fc0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009fc2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009fc6:	ee07 3a90 	vmov	s15, r3
 8009fca:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009fce:	ed97 6a03 	vldr	s12, [r7, #12]
 8009fd2:	eddf 5a34 	vldr	s11, [pc, #208]	; 800a0a4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009fd6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009fda:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009fde:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009fe2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009fe6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009fea:	edc7 7a07 	vstr	s15, [r7, #28]
 8009fee:	bf00      	nop
 8009ff0:	4b2a      	ldr	r3, [pc, #168]	; (800a09c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009ff2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009ff4:	0a5b      	lsrs	r3, r3, #9
 8009ff6:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009ffa:	ee07 3a90 	vmov	s15, r3
 8009ffe:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a002:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a006:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a00a:	edd7 6a07 	vldr	s13, [r7, #28]
 800a00e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a012:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a016:	ee17 2a90 	vmov	r2, s15
 800a01a:	687b      	ldr	r3, [r7, #4]
 800a01c:	601a      	str	r2, [r3, #0]
 800a01e:	4b1f      	ldr	r3, [pc, #124]	; (800a09c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a020:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a022:	0c1b      	lsrs	r3, r3, #16
 800a024:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a028:	ee07 3a90 	vmov	s15, r3
 800a02c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a030:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a034:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a038:	edd7 6a07 	vldr	s13, [r7, #28]
 800a03c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a040:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a044:	ee17 2a90 	vmov	r2, s15
 800a048:	687b      	ldr	r3, [r7, #4]
 800a04a:	605a      	str	r2, [r3, #4]
 800a04c:	4b13      	ldr	r3, [pc, #76]	; (800a09c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800a04e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a050:	0e1b      	lsrs	r3, r3, #24
 800a052:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a056:	ee07 3a90 	vmov	s15, r3
 800a05a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a05e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a062:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a066:	edd7 6a07 	vldr	s13, [r7, #28]
 800a06a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a06e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a072:	ee17 2a90 	vmov	r2, s15
 800a076:	687b      	ldr	r3, [r7, #4]
 800a078:	609a      	str	r2, [r3, #8]
 800a07a:	e008      	b.n	800a08e <HAL_RCCEx_GetPLL2ClockFreq+0x282>
 800a07c:	687b      	ldr	r3, [r7, #4]
 800a07e:	2200      	movs	r2, #0
 800a080:	601a      	str	r2, [r3, #0]
 800a082:	687b      	ldr	r3, [r7, #4]
 800a084:	2200      	movs	r2, #0
 800a086:	605a      	str	r2, [r3, #4]
 800a088:	687b      	ldr	r3, [r7, #4]
 800a08a:	2200      	movs	r2, #0
 800a08c:	609a      	str	r2, [r3, #8]
 800a08e:	bf00      	nop
 800a090:	3724      	adds	r7, #36	; 0x24
 800a092:	46bd      	mov	sp, r7
 800a094:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a098:	4770      	bx	lr
 800a09a:	bf00      	nop
 800a09c:	58024400 	.word	0x58024400
 800a0a0:	03d09000 	.word	0x03d09000
 800a0a4:	46000000 	.word	0x46000000
 800a0a8:	4c742400 	.word	0x4c742400
 800a0ac:	4a742400 	.word	0x4a742400
 800a0b0:	4bbebc20 	.word	0x4bbebc20

0800a0b4 <HAL_RCCEx_GetPLL3ClockFreq>:
 800a0b4:	b480      	push	{r7}
 800a0b6:	b089      	sub	sp, #36	; 0x24
 800a0b8:	af00      	add	r7, sp, #0
 800a0ba:	6078      	str	r0, [r7, #4]
 800a0bc:	4ba1      	ldr	r3, [pc, #644]	; (800a344 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a0be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a0c0:	f003 0303 	and.w	r3, r3, #3
 800a0c4:	61bb      	str	r3, [r7, #24]
 800a0c6:	4b9f      	ldr	r3, [pc, #636]	; (800a344 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a0c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a0ca:	0d1b      	lsrs	r3, r3, #20
 800a0cc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800a0d0:	617b      	str	r3, [r7, #20]
 800a0d2:	4b9c      	ldr	r3, [pc, #624]	; (800a344 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a0d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a0d6:	0a1b      	lsrs	r3, r3, #8
 800a0d8:	f003 0301 	and.w	r3, r3, #1
 800a0dc:	613b      	str	r3, [r7, #16]
 800a0de:	4b99      	ldr	r3, [pc, #612]	; (800a344 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a0e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a0e2:	08db      	lsrs	r3, r3, #3
 800a0e4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800a0e8:	693a      	ldr	r2, [r7, #16]
 800a0ea:	fb02 f303 	mul.w	r3, r2, r3
 800a0ee:	ee07 3a90 	vmov	s15, r3
 800a0f2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a0f6:	edc7 7a03 	vstr	s15, [r7, #12]
 800a0fa:	697b      	ldr	r3, [r7, #20]
 800a0fc:	2b00      	cmp	r3, #0
 800a0fe:	f000 8111 	beq.w	800a324 <HAL_RCCEx_GetPLL3ClockFreq+0x270>
 800a102:	69bb      	ldr	r3, [r7, #24]
 800a104:	2b02      	cmp	r3, #2
 800a106:	f000 8083 	beq.w	800a210 <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 800a10a:	69bb      	ldr	r3, [r7, #24]
 800a10c:	2b02      	cmp	r3, #2
 800a10e:	f200 80a1 	bhi.w	800a254 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 800a112:	69bb      	ldr	r3, [r7, #24]
 800a114:	2b00      	cmp	r3, #0
 800a116:	d003      	beq.n	800a120 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 800a118:	69bb      	ldr	r3, [r7, #24]
 800a11a:	2b01      	cmp	r3, #1
 800a11c:	d056      	beq.n	800a1cc <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 800a11e:	e099      	b.n	800a254 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 800a120:	4b88      	ldr	r3, [pc, #544]	; (800a344 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a122:	681b      	ldr	r3, [r3, #0]
 800a124:	f003 0320 	and.w	r3, r3, #32
 800a128:	2b00      	cmp	r3, #0
 800a12a:	d02d      	beq.n	800a188 <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
 800a12c:	4b85      	ldr	r3, [pc, #532]	; (800a344 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a12e:	681b      	ldr	r3, [r3, #0]
 800a130:	08db      	lsrs	r3, r3, #3
 800a132:	f003 0303 	and.w	r3, r3, #3
 800a136:	4a84      	ldr	r2, [pc, #528]	; (800a348 <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 800a138:	fa22 f303 	lsr.w	r3, r2, r3
 800a13c:	60bb      	str	r3, [r7, #8]
 800a13e:	68bb      	ldr	r3, [r7, #8]
 800a140:	ee07 3a90 	vmov	s15, r3
 800a144:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a148:	697b      	ldr	r3, [r7, #20]
 800a14a:	ee07 3a90 	vmov	s15, r3
 800a14e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a152:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a156:	4b7b      	ldr	r3, [pc, #492]	; (800a344 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a158:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a15a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a15e:	ee07 3a90 	vmov	s15, r3
 800a162:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a166:	ed97 6a03 	vldr	s12, [r7, #12]
 800a16a:	eddf 5a78 	vldr	s11, [pc, #480]	; 800a34c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a16e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a172:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a176:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a17a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a17e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a182:	edc7 7a07 	vstr	s15, [r7, #28]
 800a186:	e087      	b.n	800a298 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800a188:	697b      	ldr	r3, [r7, #20]
 800a18a:	ee07 3a90 	vmov	s15, r3
 800a18e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a192:	eddf 6a6f 	vldr	s13, [pc, #444]	; 800a350 <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 800a196:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a19a:	4b6a      	ldr	r3, [pc, #424]	; (800a344 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a19c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a19e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a1a2:	ee07 3a90 	vmov	s15, r3
 800a1a6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a1aa:	ed97 6a03 	vldr	s12, [r7, #12]
 800a1ae:	eddf 5a67 	vldr	s11, [pc, #412]	; 800a34c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a1b2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a1b6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a1ba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a1be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a1c2:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a1c6:	edc7 7a07 	vstr	s15, [r7, #28]
 800a1ca:	e065      	b.n	800a298 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800a1cc:	697b      	ldr	r3, [r7, #20]
 800a1ce:	ee07 3a90 	vmov	s15, r3
 800a1d2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a1d6:	eddf 6a5f 	vldr	s13, [pc, #380]	; 800a354 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800a1da:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a1de:	4b59      	ldr	r3, [pc, #356]	; (800a344 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a1e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a1e2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a1e6:	ee07 3a90 	vmov	s15, r3
 800a1ea:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a1ee:	ed97 6a03 	vldr	s12, [r7, #12]
 800a1f2:	eddf 5a56 	vldr	s11, [pc, #344]	; 800a34c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a1f6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a1fa:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a1fe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a202:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a206:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a20a:	edc7 7a07 	vstr	s15, [r7, #28]
 800a20e:	e043      	b.n	800a298 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800a210:	697b      	ldr	r3, [r7, #20]
 800a212:	ee07 3a90 	vmov	s15, r3
 800a216:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a21a:	eddf 6a4f 	vldr	s13, [pc, #316]	; 800a358 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 800a21e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a222:	4b48      	ldr	r3, [pc, #288]	; (800a344 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a224:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a226:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a22a:	ee07 3a90 	vmov	s15, r3
 800a22e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a232:	ed97 6a03 	vldr	s12, [r7, #12]
 800a236:	eddf 5a45 	vldr	s11, [pc, #276]	; 800a34c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a23a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a23e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a242:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a246:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a24a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a24e:	edc7 7a07 	vstr	s15, [r7, #28]
 800a252:	e021      	b.n	800a298 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800a254:	697b      	ldr	r3, [r7, #20]
 800a256:	ee07 3a90 	vmov	s15, r3
 800a25a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a25e:	eddf 6a3d 	vldr	s13, [pc, #244]	; 800a354 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800a262:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800a266:	4b37      	ldr	r3, [pc, #220]	; (800a344 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a268:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a26a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800a26e:	ee07 3a90 	vmov	s15, r3
 800a272:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800a276:	ed97 6a03 	vldr	s12, [r7, #12]
 800a27a:	eddf 5a34 	vldr	s11, [pc, #208]	; 800a34c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800a27e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800a282:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800a286:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800a28a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a28e:	ee67 7a27 	vmul.f32	s15, s14, s15
 800a292:	edc7 7a07 	vstr	s15, [r7, #28]
 800a296:	bf00      	nop
 800a298:	4b2a      	ldr	r3, [pc, #168]	; (800a344 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a29a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a29c:	0a5b      	lsrs	r3, r3, #9
 800a29e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a2a2:	ee07 3a90 	vmov	s15, r3
 800a2a6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a2aa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a2ae:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a2b2:	edd7 6a07 	vldr	s13, [r7, #28]
 800a2b6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a2ba:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a2be:	ee17 2a90 	vmov	r2, s15
 800a2c2:	687b      	ldr	r3, [r7, #4]
 800a2c4:	601a      	str	r2, [r3, #0]
 800a2c6:	4b1f      	ldr	r3, [pc, #124]	; (800a344 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a2c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a2ca:	0c1b      	lsrs	r3, r3, #16
 800a2cc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a2d0:	ee07 3a90 	vmov	s15, r3
 800a2d4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a2d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a2dc:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a2e0:	edd7 6a07 	vldr	s13, [r7, #28]
 800a2e4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a2e8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a2ec:	ee17 2a90 	vmov	r2, s15
 800a2f0:	687b      	ldr	r3, [r7, #4]
 800a2f2:	605a      	str	r2, [r3, #4]
 800a2f4:	4b13      	ldr	r3, [pc, #76]	; (800a344 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800a2f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a2f8:	0e1b      	lsrs	r3, r3, #24
 800a2fa:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800a2fe:	ee07 3a90 	vmov	s15, r3
 800a302:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800a306:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800a30a:	ee37 7a87 	vadd.f32	s14, s15, s14
 800a30e:	edd7 6a07 	vldr	s13, [r7, #28]
 800a312:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800a316:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800a31a:	ee17 2a90 	vmov	r2, s15
 800a31e:	687b      	ldr	r3, [r7, #4]
 800a320:	609a      	str	r2, [r3, #8]
 800a322:	e008      	b.n	800a336 <HAL_RCCEx_GetPLL3ClockFreq+0x282>
 800a324:	687b      	ldr	r3, [r7, #4]
 800a326:	2200      	movs	r2, #0
 800a328:	601a      	str	r2, [r3, #0]
 800a32a:	687b      	ldr	r3, [r7, #4]
 800a32c:	2200      	movs	r2, #0
 800a32e:	605a      	str	r2, [r3, #4]
 800a330:	687b      	ldr	r3, [r7, #4]
 800a332:	2200      	movs	r2, #0
 800a334:	609a      	str	r2, [r3, #8]
 800a336:	bf00      	nop
 800a338:	3724      	adds	r7, #36	; 0x24
 800a33a:	46bd      	mov	sp, r7
 800a33c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a340:	4770      	bx	lr
 800a342:	bf00      	nop
 800a344:	58024400 	.word	0x58024400
 800a348:	03d09000 	.word	0x03d09000
 800a34c:	46000000 	.word	0x46000000
 800a350:	4c742400 	.word	0x4c742400
 800a354:	4a742400 	.word	0x4a742400
 800a358:	4bbebc20 	.word	0x4bbebc20

0800a35c <RCCEx_PLL2_Config>:
 800a35c:	b580      	push	{r7, lr}
 800a35e:	b084      	sub	sp, #16
 800a360:	af00      	add	r7, sp, #0
 800a362:	6078      	str	r0, [r7, #4]
 800a364:	6039      	str	r1, [r7, #0]
 800a366:	2300      	movs	r3, #0
 800a368:	73fb      	strb	r3, [r7, #15]
 800a36a:	4b53      	ldr	r3, [pc, #332]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a36c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a36e:	f003 0303 	and.w	r3, r3, #3
 800a372:	2b03      	cmp	r3, #3
 800a374:	d101      	bne.n	800a37a <RCCEx_PLL2_Config+0x1e>
 800a376:	2301      	movs	r3, #1
 800a378:	e099      	b.n	800a4ae <RCCEx_PLL2_Config+0x152>
 800a37a:	4b4f      	ldr	r3, [pc, #316]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a37c:	681b      	ldr	r3, [r3, #0]
 800a37e:	4a4e      	ldr	r2, [pc, #312]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a380:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800a384:	6013      	str	r3, [r2, #0]
 800a386:	f7fc fd13 	bl	8006db0 <HAL_GetTick>
 800a38a:	60b8      	str	r0, [r7, #8]
 800a38c:	e008      	b.n	800a3a0 <RCCEx_PLL2_Config+0x44>
 800a38e:	f7fc fd0f 	bl	8006db0 <HAL_GetTick>
 800a392:	4602      	mov	r2, r0
 800a394:	68bb      	ldr	r3, [r7, #8]
 800a396:	1ad3      	subs	r3, r2, r3
 800a398:	2b02      	cmp	r3, #2
 800a39a:	d901      	bls.n	800a3a0 <RCCEx_PLL2_Config+0x44>
 800a39c:	2303      	movs	r3, #3
 800a39e:	e086      	b.n	800a4ae <RCCEx_PLL2_Config+0x152>
 800a3a0:	4b45      	ldr	r3, [pc, #276]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a3a2:	681b      	ldr	r3, [r3, #0]
 800a3a4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800a3a8:	2b00      	cmp	r3, #0
 800a3aa:	d1f0      	bne.n	800a38e <RCCEx_PLL2_Config+0x32>
 800a3ac:	4b42      	ldr	r3, [pc, #264]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a3ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a3b0:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 800a3b4:	687b      	ldr	r3, [r7, #4]
 800a3b6:	681b      	ldr	r3, [r3, #0]
 800a3b8:	031b      	lsls	r3, r3, #12
 800a3ba:	493f      	ldr	r1, [pc, #252]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a3bc:	4313      	orrs	r3, r2
 800a3be:	628b      	str	r3, [r1, #40]	; 0x28
 800a3c0:	687b      	ldr	r3, [r7, #4]
 800a3c2:	685b      	ldr	r3, [r3, #4]
 800a3c4:	3b01      	subs	r3, #1
 800a3c6:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800a3ca:	687b      	ldr	r3, [r7, #4]
 800a3cc:	689b      	ldr	r3, [r3, #8]
 800a3ce:	3b01      	subs	r3, #1
 800a3d0:	025b      	lsls	r3, r3, #9
 800a3d2:	b29b      	uxth	r3, r3
 800a3d4:	431a      	orrs	r2, r3
 800a3d6:	687b      	ldr	r3, [r7, #4]
 800a3d8:	68db      	ldr	r3, [r3, #12]
 800a3da:	3b01      	subs	r3, #1
 800a3dc:	041b      	lsls	r3, r3, #16
 800a3de:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800a3e2:	431a      	orrs	r2, r3
 800a3e4:	687b      	ldr	r3, [r7, #4]
 800a3e6:	691b      	ldr	r3, [r3, #16]
 800a3e8:	3b01      	subs	r3, #1
 800a3ea:	061b      	lsls	r3, r3, #24
 800a3ec:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800a3f0:	4931      	ldr	r1, [pc, #196]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a3f2:	4313      	orrs	r3, r2
 800a3f4:	638b      	str	r3, [r1, #56]	; 0x38
 800a3f6:	4b30      	ldr	r3, [pc, #192]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a3f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a3fa:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 800a3fe:	687b      	ldr	r3, [r7, #4]
 800a400:	695b      	ldr	r3, [r3, #20]
 800a402:	492d      	ldr	r1, [pc, #180]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a404:	4313      	orrs	r3, r2
 800a406:	62cb      	str	r3, [r1, #44]	; 0x2c
 800a408:	4b2b      	ldr	r3, [pc, #172]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a40a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a40c:	f023 0220 	bic.w	r2, r3, #32
 800a410:	687b      	ldr	r3, [r7, #4]
 800a412:	699b      	ldr	r3, [r3, #24]
 800a414:	4928      	ldr	r1, [pc, #160]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a416:	4313      	orrs	r3, r2
 800a418:	62cb      	str	r3, [r1, #44]	; 0x2c
 800a41a:	4b27      	ldr	r3, [pc, #156]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a41c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a41e:	4a26      	ldr	r2, [pc, #152]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a420:	f023 0310 	bic.w	r3, r3, #16
 800a424:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a426:	4b24      	ldr	r3, [pc, #144]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a428:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a42a:	4b24      	ldr	r3, [pc, #144]	; (800a4bc <RCCEx_PLL2_Config+0x160>)
 800a42c:	4013      	ands	r3, r2
 800a42e:	687a      	ldr	r2, [r7, #4]
 800a430:	69d2      	ldr	r2, [r2, #28]
 800a432:	00d2      	lsls	r2, r2, #3
 800a434:	4920      	ldr	r1, [pc, #128]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a436:	4313      	orrs	r3, r2
 800a438:	63cb      	str	r3, [r1, #60]	; 0x3c
 800a43a:	4b1f      	ldr	r3, [pc, #124]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a43c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a43e:	4a1e      	ldr	r2, [pc, #120]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a440:	f043 0310 	orr.w	r3, r3, #16
 800a444:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a446:	683b      	ldr	r3, [r7, #0]
 800a448:	2b00      	cmp	r3, #0
 800a44a:	d106      	bne.n	800a45a <RCCEx_PLL2_Config+0xfe>
 800a44c:	4b1a      	ldr	r3, [pc, #104]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a44e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a450:	4a19      	ldr	r2, [pc, #100]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a452:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800a456:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a458:	e00f      	b.n	800a47a <RCCEx_PLL2_Config+0x11e>
 800a45a:	683b      	ldr	r3, [r7, #0]
 800a45c:	2b01      	cmp	r3, #1
 800a45e:	d106      	bne.n	800a46e <RCCEx_PLL2_Config+0x112>
 800a460:	4b15      	ldr	r3, [pc, #84]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a462:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a464:	4a14      	ldr	r2, [pc, #80]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a466:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800a46a:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a46c:	e005      	b.n	800a47a <RCCEx_PLL2_Config+0x11e>
 800a46e:	4b12      	ldr	r3, [pc, #72]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a470:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a472:	4a11      	ldr	r2, [pc, #68]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a474:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800a478:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a47a:	4b0f      	ldr	r3, [pc, #60]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a47c:	681b      	ldr	r3, [r3, #0]
 800a47e:	4a0e      	ldr	r2, [pc, #56]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a480:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800a484:	6013      	str	r3, [r2, #0]
 800a486:	f7fc fc93 	bl	8006db0 <HAL_GetTick>
 800a48a:	60b8      	str	r0, [r7, #8]
 800a48c:	e008      	b.n	800a4a0 <RCCEx_PLL2_Config+0x144>
 800a48e:	f7fc fc8f 	bl	8006db0 <HAL_GetTick>
 800a492:	4602      	mov	r2, r0
 800a494:	68bb      	ldr	r3, [r7, #8]
 800a496:	1ad3      	subs	r3, r2, r3
 800a498:	2b02      	cmp	r3, #2
 800a49a:	d901      	bls.n	800a4a0 <RCCEx_PLL2_Config+0x144>
 800a49c:	2303      	movs	r3, #3
 800a49e:	e006      	b.n	800a4ae <RCCEx_PLL2_Config+0x152>
 800a4a0:	4b05      	ldr	r3, [pc, #20]	; (800a4b8 <RCCEx_PLL2_Config+0x15c>)
 800a4a2:	681b      	ldr	r3, [r3, #0]
 800a4a4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800a4a8:	2b00      	cmp	r3, #0
 800a4aa:	d0f0      	beq.n	800a48e <RCCEx_PLL2_Config+0x132>
 800a4ac:	7bfb      	ldrb	r3, [r7, #15]
 800a4ae:	4618      	mov	r0, r3
 800a4b0:	3710      	adds	r7, #16
 800a4b2:	46bd      	mov	sp, r7
 800a4b4:	bd80      	pop	{r7, pc}
 800a4b6:	bf00      	nop
 800a4b8:	58024400 	.word	0x58024400
 800a4bc:	ffff0007 	.word	0xffff0007

0800a4c0 <RCCEx_PLL3_Config>:
 800a4c0:	b580      	push	{r7, lr}
 800a4c2:	b084      	sub	sp, #16
 800a4c4:	af00      	add	r7, sp, #0
 800a4c6:	6078      	str	r0, [r7, #4]
 800a4c8:	6039      	str	r1, [r7, #0]
 800a4ca:	2300      	movs	r3, #0
 800a4cc:	73fb      	strb	r3, [r7, #15]
 800a4ce:	4b53      	ldr	r3, [pc, #332]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a4d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a4d2:	f003 0303 	and.w	r3, r3, #3
 800a4d6:	2b03      	cmp	r3, #3
 800a4d8:	d101      	bne.n	800a4de <RCCEx_PLL3_Config+0x1e>
 800a4da:	2301      	movs	r3, #1
 800a4dc:	e099      	b.n	800a612 <RCCEx_PLL3_Config+0x152>
 800a4de:	4b4f      	ldr	r3, [pc, #316]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a4e0:	681b      	ldr	r3, [r3, #0]
 800a4e2:	4a4e      	ldr	r2, [pc, #312]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a4e4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a4e8:	6013      	str	r3, [r2, #0]
 800a4ea:	f7fc fc61 	bl	8006db0 <HAL_GetTick>
 800a4ee:	60b8      	str	r0, [r7, #8]
 800a4f0:	e008      	b.n	800a504 <RCCEx_PLL3_Config+0x44>
 800a4f2:	f7fc fc5d 	bl	8006db0 <HAL_GetTick>
 800a4f6:	4602      	mov	r2, r0
 800a4f8:	68bb      	ldr	r3, [r7, #8]
 800a4fa:	1ad3      	subs	r3, r2, r3
 800a4fc:	2b02      	cmp	r3, #2
 800a4fe:	d901      	bls.n	800a504 <RCCEx_PLL3_Config+0x44>
 800a500:	2303      	movs	r3, #3
 800a502:	e086      	b.n	800a612 <RCCEx_PLL3_Config+0x152>
 800a504:	4b45      	ldr	r3, [pc, #276]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a506:	681b      	ldr	r3, [r3, #0]
 800a508:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a50c:	2b00      	cmp	r3, #0
 800a50e:	d1f0      	bne.n	800a4f2 <RCCEx_PLL3_Config+0x32>
 800a510:	4b42      	ldr	r3, [pc, #264]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a512:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a514:	f023 727c 	bic.w	r2, r3, #66060288	; 0x3f00000
 800a518:	687b      	ldr	r3, [r7, #4]
 800a51a:	681b      	ldr	r3, [r3, #0]
 800a51c:	051b      	lsls	r3, r3, #20
 800a51e:	493f      	ldr	r1, [pc, #252]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a520:	4313      	orrs	r3, r2
 800a522:	628b      	str	r3, [r1, #40]	; 0x28
 800a524:	687b      	ldr	r3, [r7, #4]
 800a526:	685b      	ldr	r3, [r3, #4]
 800a528:	3b01      	subs	r3, #1
 800a52a:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800a52e:	687b      	ldr	r3, [r7, #4]
 800a530:	689b      	ldr	r3, [r3, #8]
 800a532:	3b01      	subs	r3, #1
 800a534:	025b      	lsls	r3, r3, #9
 800a536:	b29b      	uxth	r3, r3
 800a538:	431a      	orrs	r2, r3
 800a53a:	687b      	ldr	r3, [r7, #4]
 800a53c:	68db      	ldr	r3, [r3, #12]
 800a53e:	3b01      	subs	r3, #1
 800a540:	041b      	lsls	r3, r3, #16
 800a542:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800a546:	431a      	orrs	r2, r3
 800a548:	687b      	ldr	r3, [r7, #4]
 800a54a:	691b      	ldr	r3, [r3, #16]
 800a54c:	3b01      	subs	r3, #1
 800a54e:	061b      	lsls	r3, r3, #24
 800a550:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800a554:	4931      	ldr	r1, [pc, #196]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a556:	4313      	orrs	r3, r2
 800a558:	640b      	str	r3, [r1, #64]	; 0x40
 800a55a:	4b30      	ldr	r3, [pc, #192]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a55c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a55e:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800a562:	687b      	ldr	r3, [r7, #4]
 800a564:	695b      	ldr	r3, [r3, #20]
 800a566:	492d      	ldr	r1, [pc, #180]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a568:	4313      	orrs	r3, r2
 800a56a:	62cb      	str	r3, [r1, #44]	; 0x2c
 800a56c:	4b2b      	ldr	r3, [pc, #172]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a56e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a570:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 800a574:	687b      	ldr	r3, [r7, #4]
 800a576:	699b      	ldr	r3, [r3, #24]
 800a578:	4928      	ldr	r1, [pc, #160]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a57a:	4313      	orrs	r3, r2
 800a57c:	62cb      	str	r3, [r1, #44]	; 0x2c
 800a57e:	4b27      	ldr	r3, [pc, #156]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a580:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a582:	4a26      	ldr	r2, [pc, #152]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a584:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a588:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a58a:	4b24      	ldr	r3, [pc, #144]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a58c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800a58e:	4b24      	ldr	r3, [pc, #144]	; (800a620 <RCCEx_PLL3_Config+0x160>)
 800a590:	4013      	ands	r3, r2
 800a592:	687a      	ldr	r2, [r7, #4]
 800a594:	69d2      	ldr	r2, [r2, #28]
 800a596:	00d2      	lsls	r2, r2, #3
 800a598:	4920      	ldr	r1, [pc, #128]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a59a:	4313      	orrs	r3, r2
 800a59c:	644b      	str	r3, [r1, #68]	; 0x44
 800a59e:	4b1f      	ldr	r3, [pc, #124]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a5a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5a2:	4a1e      	ldr	r2, [pc, #120]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a5a4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a5a8:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a5aa:	683b      	ldr	r3, [r7, #0]
 800a5ac:	2b00      	cmp	r3, #0
 800a5ae:	d106      	bne.n	800a5be <RCCEx_PLL3_Config+0xfe>
 800a5b0:	4b1a      	ldr	r3, [pc, #104]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a5b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5b4:	4a19      	ldr	r2, [pc, #100]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a5b6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800a5ba:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a5bc:	e00f      	b.n	800a5de <RCCEx_PLL3_Config+0x11e>
 800a5be:	683b      	ldr	r3, [r7, #0]
 800a5c0:	2b01      	cmp	r3, #1
 800a5c2:	d106      	bne.n	800a5d2 <RCCEx_PLL3_Config+0x112>
 800a5c4:	4b15      	ldr	r3, [pc, #84]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a5c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5c8:	4a14      	ldr	r2, [pc, #80]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a5ca:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800a5ce:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a5d0:	e005      	b.n	800a5de <RCCEx_PLL3_Config+0x11e>
 800a5d2:	4b12      	ldr	r3, [pc, #72]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a5d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a5d6:	4a11      	ldr	r2, [pc, #68]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a5d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800a5dc:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a5de:	4b0f      	ldr	r3, [pc, #60]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a5e0:	681b      	ldr	r3, [r3, #0]
 800a5e2:	4a0e      	ldr	r2, [pc, #56]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a5e4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a5e8:	6013      	str	r3, [r2, #0]
 800a5ea:	f7fc fbe1 	bl	8006db0 <HAL_GetTick>
 800a5ee:	60b8      	str	r0, [r7, #8]
 800a5f0:	e008      	b.n	800a604 <RCCEx_PLL3_Config+0x144>
 800a5f2:	f7fc fbdd 	bl	8006db0 <HAL_GetTick>
 800a5f6:	4602      	mov	r2, r0
 800a5f8:	68bb      	ldr	r3, [r7, #8]
 800a5fa:	1ad3      	subs	r3, r2, r3
 800a5fc:	2b02      	cmp	r3, #2
 800a5fe:	d901      	bls.n	800a604 <RCCEx_PLL3_Config+0x144>
 800a600:	2303      	movs	r3, #3
 800a602:	e006      	b.n	800a612 <RCCEx_PLL3_Config+0x152>
 800a604:	4b05      	ldr	r3, [pc, #20]	; (800a61c <RCCEx_PLL3_Config+0x15c>)
 800a606:	681b      	ldr	r3, [r3, #0]
 800a608:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a60c:	2b00      	cmp	r3, #0
 800a60e:	d0f0      	beq.n	800a5f2 <RCCEx_PLL3_Config+0x132>
 800a610:	7bfb      	ldrb	r3, [r7, #15]
 800a612:	4618      	mov	r0, r3
 800a614:	3710      	adds	r7, #16
 800a616:	46bd      	mov	sp, r7
 800a618:	bd80      	pop	{r7, pc}
 800a61a:	bf00      	nop
 800a61c:	58024400 	.word	0x58024400
 800a620:	ffff0007 	.word	0xffff0007

0800a624 <HAL_TIM_Base_Init>:
 800a624:	b580      	push	{r7, lr}
 800a626:	b082      	sub	sp, #8
 800a628:	af00      	add	r7, sp, #0
 800a62a:	6078      	str	r0, [r7, #4]
 800a62c:	687b      	ldr	r3, [r7, #4]
 800a62e:	2b00      	cmp	r3, #0
 800a630:	d101      	bne.n	800a636 <HAL_TIM_Base_Init+0x12>
 800a632:	2301      	movs	r3, #1
 800a634:	e049      	b.n	800a6ca <HAL_TIM_Base_Init+0xa6>
 800a636:	687b      	ldr	r3, [r7, #4]
 800a638:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a63c:	b2db      	uxtb	r3, r3
 800a63e:	2b00      	cmp	r3, #0
 800a640:	d106      	bne.n	800a650 <HAL_TIM_Base_Init+0x2c>
 800a642:	687b      	ldr	r3, [r7, #4]
 800a644:	2200      	movs	r2, #0
 800a646:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a64a:	6878      	ldr	r0, [r7, #4]
 800a64c:	f7fa f890 	bl	8004770 <HAL_TIM_Base_MspInit>
 800a650:	687b      	ldr	r3, [r7, #4]
 800a652:	2202      	movs	r2, #2
 800a654:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a658:	687b      	ldr	r3, [r7, #4]
 800a65a:	681a      	ldr	r2, [r3, #0]
 800a65c:	687b      	ldr	r3, [r7, #4]
 800a65e:	3304      	adds	r3, #4
 800a660:	4619      	mov	r1, r3
 800a662:	4610      	mov	r0, r2
 800a664:	f001 f9d0 	bl	800ba08 <TIM_Base_SetConfig>
 800a668:	687b      	ldr	r3, [r7, #4]
 800a66a:	2201      	movs	r2, #1
 800a66c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800a670:	687b      	ldr	r3, [r7, #4]
 800a672:	2201      	movs	r2, #1
 800a674:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a678:	687b      	ldr	r3, [r7, #4]
 800a67a:	2201      	movs	r2, #1
 800a67c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a680:	687b      	ldr	r3, [r7, #4]
 800a682:	2201      	movs	r2, #1
 800a684:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a688:	687b      	ldr	r3, [r7, #4]
 800a68a:	2201      	movs	r2, #1
 800a68c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a690:	687b      	ldr	r3, [r7, #4]
 800a692:	2201      	movs	r2, #1
 800a694:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a698:	687b      	ldr	r3, [r7, #4]
 800a69a:	2201      	movs	r2, #1
 800a69c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a6a0:	687b      	ldr	r3, [r7, #4]
 800a6a2:	2201      	movs	r2, #1
 800a6a4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a6a8:	687b      	ldr	r3, [r7, #4]
 800a6aa:	2201      	movs	r2, #1
 800a6ac:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a6b0:	687b      	ldr	r3, [r7, #4]
 800a6b2:	2201      	movs	r2, #1
 800a6b4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a6b8:	687b      	ldr	r3, [r7, #4]
 800a6ba:	2201      	movs	r2, #1
 800a6bc:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 800a6c0:	687b      	ldr	r3, [r7, #4]
 800a6c2:	2201      	movs	r2, #1
 800a6c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a6c8:	2300      	movs	r3, #0
 800a6ca:	4618      	mov	r0, r3
 800a6cc:	3708      	adds	r7, #8
 800a6ce:	46bd      	mov	sp, r7
 800a6d0:	bd80      	pop	{r7, pc}
	...

0800a6d4 <HAL_TIM_Base_Start>:
 800a6d4:	b480      	push	{r7}
 800a6d6:	b085      	sub	sp, #20
 800a6d8:	af00      	add	r7, sp, #0
 800a6da:	6078      	str	r0, [r7, #4]
 800a6dc:	687b      	ldr	r3, [r7, #4]
 800a6de:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a6e2:	b2db      	uxtb	r3, r3
 800a6e4:	2b01      	cmp	r3, #1
 800a6e6:	d001      	beq.n	800a6ec <HAL_TIM_Base_Start+0x18>
 800a6e8:	2301      	movs	r3, #1
 800a6ea:	e04c      	b.n	800a786 <HAL_TIM_Base_Start+0xb2>
 800a6ec:	687b      	ldr	r3, [r7, #4]
 800a6ee:	2202      	movs	r2, #2
 800a6f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a6f4:	687b      	ldr	r3, [r7, #4]
 800a6f6:	681b      	ldr	r3, [r3, #0]
 800a6f8:	4a26      	ldr	r2, [pc, #152]	; (800a794 <HAL_TIM_Base_Start+0xc0>)
 800a6fa:	4293      	cmp	r3, r2
 800a6fc:	d022      	beq.n	800a744 <HAL_TIM_Base_Start+0x70>
 800a6fe:	687b      	ldr	r3, [r7, #4]
 800a700:	681b      	ldr	r3, [r3, #0]
 800a702:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a706:	d01d      	beq.n	800a744 <HAL_TIM_Base_Start+0x70>
 800a708:	687b      	ldr	r3, [r7, #4]
 800a70a:	681b      	ldr	r3, [r3, #0]
 800a70c:	4a22      	ldr	r2, [pc, #136]	; (800a798 <HAL_TIM_Base_Start+0xc4>)
 800a70e:	4293      	cmp	r3, r2
 800a710:	d018      	beq.n	800a744 <HAL_TIM_Base_Start+0x70>
 800a712:	687b      	ldr	r3, [r7, #4]
 800a714:	681b      	ldr	r3, [r3, #0]
 800a716:	4a21      	ldr	r2, [pc, #132]	; (800a79c <HAL_TIM_Base_Start+0xc8>)
 800a718:	4293      	cmp	r3, r2
 800a71a:	d013      	beq.n	800a744 <HAL_TIM_Base_Start+0x70>
 800a71c:	687b      	ldr	r3, [r7, #4]
 800a71e:	681b      	ldr	r3, [r3, #0]
 800a720:	4a1f      	ldr	r2, [pc, #124]	; (800a7a0 <HAL_TIM_Base_Start+0xcc>)
 800a722:	4293      	cmp	r3, r2
 800a724:	d00e      	beq.n	800a744 <HAL_TIM_Base_Start+0x70>
 800a726:	687b      	ldr	r3, [r7, #4]
 800a728:	681b      	ldr	r3, [r3, #0]
 800a72a:	4a1e      	ldr	r2, [pc, #120]	; (800a7a4 <HAL_TIM_Base_Start+0xd0>)
 800a72c:	4293      	cmp	r3, r2
 800a72e:	d009      	beq.n	800a744 <HAL_TIM_Base_Start+0x70>
 800a730:	687b      	ldr	r3, [r7, #4]
 800a732:	681b      	ldr	r3, [r3, #0]
 800a734:	4a1c      	ldr	r2, [pc, #112]	; (800a7a8 <HAL_TIM_Base_Start+0xd4>)
 800a736:	4293      	cmp	r3, r2
 800a738:	d004      	beq.n	800a744 <HAL_TIM_Base_Start+0x70>
 800a73a:	687b      	ldr	r3, [r7, #4]
 800a73c:	681b      	ldr	r3, [r3, #0]
 800a73e:	4a1b      	ldr	r2, [pc, #108]	; (800a7ac <HAL_TIM_Base_Start+0xd8>)
 800a740:	4293      	cmp	r3, r2
 800a742:	d115      	bne.n	800a770 <HAL_TIM_Base_Start+0x9c>
 800a744:	687b      	ldr	r3, [r7, #4]
 800a746:	681b      	ldr	r3, [r3, #0]
 800a748:	689a      	ldr	r2, [r3, #8]
 800a74a:	4b19      	ldr	r3, [pc, #100]	; (800a7b0 <HAL_TIM_Base_Start+0xdc>)
 800a74c:	4013      	ands	r3, r2
 800a74e:	60fb      	str	r3, [r7, #12]
 800a750:	68fb      	ldr	r3, [r7, #12]
 800a752:	2b06      	cmp	r3, #6
 800a754:	d015      	beq.n	800a782 <HAL_TIM_Base_Start+0xae>
 800a756:	68fb      	ldr	r3, [r7, #12]
 800a758:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800a75c:	d011      	beq.n	800a782 <HAL_TIM_Base_Start+0xae>
 800a75e:	687b      	ldr	r3, [r7, #4]
 800a760:	681b      	ldr	r3, [r3, #0]
 800a762:	681a      	ldr	r2, [r3, #0]
 800a764:	687b      	ldr	r3, [r7, #4]
 800a766:	681b      	ldr	r3, [r3, #0]
 800a768:	f042 0201 	orr.w	r2, r2, #1
 800a76c:	601a      	str	r2, [r3, #0]
 800a76e:	e008      	b.n	800a782 <HAL_TIM_Base_Start+0xae>
 800a770:	687b      	ldr	r3, [r7, #4]
 800a772:	681b      	ldr	r3, [r3, #0]
 800a774:	681a      	ldr	r2, [r3, #0]
 800a776:	687b      	ldr	r3, [r7, #4]
 800a778:	681b      	ldr	r3, [r3, #0]
 800a77a:	f042 0201 	orr.w	r2, r2, #1
 800a77e:	601a      	str	r2, [r3, #0]
 800a780:	e000      	b.n	800a784 <HAL_TIM_Base_Start+0xb0>
 800a782:	bf00      	nop
 800a784:	2300      	movs	r3, #0
 800a786:	4618      	mov	r0, r3
 800a788:	3714      	adds	r7, #20
 800a78a:	46bd      	mov	sp, r7
 800a78c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a790:	4770      	bx	lr
 800a792:	bf00      	nop
 800a794:	40010000 	.word	0x40010000
 800a798:	40000400 	.word	0x40000400
 800a79c:	40000800 	.word	0x40000800
 800a7a0:	40000c00 	.word	0x40000c00
 800a7a4:	40010400 	.word	0x40010400
 800a7a8:	40001800 	.word	0x40001800
 800a7ac:	40014000 	.word	0x40014000
 800a7b0:	00010007 	.word	0x00010007

0800a7b4 <HAL_TIM_Base_Stop>:
 800a7b4:	b480      	push	{r7}
 800a7b6:	b083      	sub	sp, #12
 800a7b8:	af00      	add	r7, sp, #0
 800a7ba:	6078      	str	r0, [r7, #4]
 800a7bc:	687b      	ldr	r3, [r7, #4]
 800a7be:	681b      	ldr	r3, [r3, #0]
 800a7c0:	6a1a      	ldr	r2, [r3, #32]
 800a7c2:	f241 1311 	movw	r3, #4369	; 0x1111
 800a7c6:	4013      	ands	r3, r2
 800a7c8:	2b00      	cmp	r3, #0
 800a7ca:	d10f      	bne.n	800a7ec <HAL_TIM_Base_Stop+0x38>
 800a7cc:	687b      	ldr	r3, [r7, #4]
 800a7ce:	681b      	ldr	r3, [r3, #0]
 800a7d0:	6a1a      	ldr	r2, [r3, #32]
 800a7d2:	f240 4344 	movw	r3, #1092	; 0x444
 800a7d6:	4013      	ands	r3, r2
 800a7d8:	2b00      	cmp	r3, #0
 800a7da:	d107      	bne.n	800a7ec <HAL_TIM_Base_Stop+0x38>
 800a7dc:	687b      	ldr	r3, [r7, #4]
 800a7de:	681b      	ldr	r3, [r3, #0]
 800a7e0:	681a      	ldr	r2, [r3, #0]
 800a7e2:	687b      	ldr	r3, [r7, #4]
 800a7e4:	681b      	ldr	r3, [r3, #0]
 800a7e6:	f022 0201 	bic.w	r2, r2, #1
 800a7ea:	601a      	str	r2, [r3, #0]
 800a7ec:	687b      	ldr	r3, [r7, #4]
 800a7ee:	2201      	movs	r2, #1
 800a7f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a7f4:	2300      	movs	r3, #0
 800a7f6:	4618      	mov	r0, r3
 800a7f8:	370c      	adds	r7, #12
 800a7fa:	46bd      	mov	sp, r7
 800a7fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a800:	4770      	bx	lr
	...

0800a804 <HAL_TIM_Base_Start_IT>:
 800a804:	b480      	push	{r7}
 800a806:	b085      	sub	sp, #20
 800a808:	af00      	add	r7, sp, #0
 800a80a:	6078      	str	r0, [r7, #4]
 800a80c:	687b      	ldr	r3, [r7, #4]
 800a80e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a812:	b2db      	uxtb	r3, r3
 800a814:	2b01      	cmp	r3, #1
 800a816:	d001      	beq.n	800a81c <HAL_TIM_Base_Start_IT+0x18>
 800a818:	2301      	movs	r3, #1
 800a81a:	e054      	b.n	800a8c6 <HAL_TIM_Base_Start_IT+0xc2>
 800a81c:	687b      	ldr	r3, [r7, #4]
 800a81e:	2202      	movs	r2, #2
 800a820:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a824:	687b      	ldr	r3, [r7, #4]
 800a826:	681b      	ldr	r3, [r3, #0]
 800a828:	68da      	ldr	r2, [r3, #12]
 800a82a:	687b      	ldr	r3, [r7, #4]
 800a82c:	681b      	ldr	r3, [r3, #0]
 800a82e:	f042 0201 	orr.w	r2, r2, #1
 800a832:	60da      	str	r2, [r3, #12]
 800a834:	687b      	ldr	r3, [r7, #4]
 800a836:	681b      	ldr	r3, [r3, #0]
 800a838:	4a26      	ldr	r2, [pc, #152]	; (800a8d4 <HAL_TIM_Base_Start_IT+0xd0>)
 800a83a:	4293      	cmp	r3, r2
 800a83c:	d022      	beq.n	800a884 <HAL_TIM_Base_Start_IT+0x80>
 800a83e:	687b      	ldr	r3, [r7, #4]
 800a840:	681b      	ldr	r3, [r3, #0]
 800a842:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a846:	d01d      	beq.n	800a884 <HAL_TIM_Base_Start_IT+0x80>
 800a848:	687b      	ldr	r3, [r7, #4]
 800a84a:	681b      	ldr	r3, [r3, #0]
 800a84c:	4a22      	ldr	r2, [pc, #136]	; (800a8d8 <HAL_TIM_Base_Start_IT+0xd4>)
 800a84e:	4293      	cmp	r3, r2
 800a850:	d018      	beq.n	800a884 <HAL_TIM_Base_Start_IT+0x80>
 800a852:	687b      	ldr	r3, [r7, #4]
 800a854:	681b      	ldr	r3, [r3, #0]
 800a856:	4a21      	ldr	r2, [pc, #132]	; (800a8dc <HAL_TIM_Base_Start_IT+0xd8>)
 800a858:	4293      	cmp	r3, r2
 800a85a:	d013      	beq.n	800a884 <HAL_TIM_Base_Start_IT+0x80>
 800a85c:	687b      	ldr	r3, [r7, #4]
 800a85e:	681b      	ldr	r3, [r3, #0]
 800a860:	4a1f      	ldr	r2, [pc, #124]	; (800a8e0 <HAL_TIM_Base_Start_IT+0xdc>)
 800a862:	4293      	cmp	r3, r2
 800a864:	d00e      	beq.n	800a884 <HAL_TIM_Base_Start_IT+0x80>
 800a866:	687b      	ldr	r3, [r7, #4]
 800a868:	681b      	ldr	r3, [r3, #0]
 800a86a:	4a1e      	ldr	r2, [pc, #120]	; (800a8e4 <HAL_TIM_Base_Start_IT+0xe0>)
 800a86c:	4293      	cmp	r3, r2
 800a86e:	d009      	beq.n	800a884 <HAL_TIM_Base_Start_IT+0x80>
 800a870:	687b      	ldr	r3, [r7, #4]
 800a872:	681b      	ldr	r3, [r3, #0]
 800a874:	4a1c      	ldr	r2, [pc, #112]	; (800a8e8 <HAL_TIM_Base_Start_IT+0xe4>)
 800a876:	4293      	cmp	r3, r2
 800a878:	d004      	beq.n	800a884 <HAL_TIM_Base_Start_IT+0x80>
 800a87a:	687b      	ldr	r3, [r7, #4]
 800a87c:	681b      	ldr	r3, [r3, #0]
 800a87e:	4a1b      	ldr	r2, [pc, #108]	; (800a8ec <HAL_TIM_Base_Start_IT+0xe8>)
 800a880:	4293      	cmp	r3, r2
 800a882:	d115      	bne.n	800a8b0 <HAL_TIM_Base_Start_IT+0xac>
 800a884:	687b      	ldr	r3, [r7, #4]
 800a886:	681b      	ldr	r3, [r3, #0]
 800a888:	689a      	ldr	r2, [r3, #8]
 800a88a:	4b19      	ldr	r3, [pc, #100]	; (800a8f0 <HAL_TIM_Base_Start_IT+0xec>)
 800a88c:	4013      	ands	r3, r2
 800a88e:	60fb      	str	r3, [r7, #12]
 800a890:	68fb      	ldr	r3, [r7, #12]
 800a892:	2b06      	cmp	r3, #6
 800a894:	d015      	beq.n	800a8c2 <HAL_TIM_Base_Start_IT+0xbe>
 800a896:	68fb      	ldr	r3, [r7, #12]
 800a898:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800a89c:	d011      	beq.n	800a8c2 <HAL_TIM_Base_Start_IT+0xbe>
 800a89e:	687b      	ldr	r3, [r7, #4]
 800a8a0:	681b      	ldr	r3, [r3, #0]
 800a8a2:	681a      	ldr	r2, [r3, #0]
 800a8a4:	687b      	ldr	r3, [r7, #4]
 800a8a6:	681b      	ldr	r3, [r3, #0]
 800a8a8:	f042 0201 	orr.w	r2, r2, #1
 800a8ac:	601a      	str	r2, [r3, #0]
 800a8ae:	e008      	b.n	800a8c2 <HAL_TIM_Base_Start_IT+0xbe>
 800a8b0:	687b      	ldr	r3, [r7, #4]
 800a8b2:	681b      	ldr	r3, [r3, #0]
 800a8b4:	681a      	ldr	r2, [r3, #0]
 800a8b6:	687b      	ldr	r3, [r7, #4]
 800a8b8:	681b      	ldr	r3, [r3, #0]
 800a8ba:	f042 0201 	orr.w	r2, r2, #1
 800a8be:	601a      	str	r2, [r3, #0]
 800a8c0:	e000      	b.n	800a8c4 <HAL_TIM_Base_Start_IT+0xc0>
 800a8c2:	bf00      	nop
 800a8c4:	2300      	movs	r3, #0
 800a8c6:	4618      	mov	r0, r3
 800a8c8:	3714      	adds	r7, #20
 800a8ca:	46bd      	mov	sp, r7
 800a8cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8d0:	4770      	bx	lr
 800a8d2:	bf00      	nop
 800a8d4:	40010000 	.word	0x40010000
 800a8d8:	40000400 	.word	0x40000400
 800a8dc:	40000800 	.word	0x40000800
 800a8e0:	40000c00 	.word	0x40000c00
 800a8e4:	40010400 	.word	0x40010400
 800a8e8:	40001800 	.word	0x40001800
 800a8ec:	40014000 	.word	0x40014000
 800a8f0:	00010007 	.word	0x00010007

0800a8f4 <HAL_TIM_Base_Stop_IT>:
 800a8f4:	b480      	push	{r7}
 800a8f6:	b083      	sub	sp, #12
 800a8f8:	af00      	add	r7, sp, #0
 800a8fa:	6078      	str	r0, [r7, #4]
 800a8fc:	687b      	ldr	r3, [r7, #4]
 800a8fe:	681b      	ldr	r3, [r3, #0]
 800a900:	68da      	ldr	r2, [r3, #12]
 800a902:	687b      	ldr	r3, [r7, #4]
 800a904:	681b      	ldr	r3, [r3, #0]
 800a906:	f022 0201 	bic.w	r2, r2, #1
 800a90a:	60da      	str	r2, [r3, #12]
 800a90c:	687b      	ldr	r3, [r7, #4]
 800a90e:	681b      	ldr	r3, [r3, #0]
 800a910:	6a1a      	ldr	r2, [r3, #32]
 800a912:	f241 1311 	movw	r3, #4369	; 0x1111
 800a916:	4013      	ands	r3, r2
 800a918:	2b00      	cmp	r3, #0
 800a91a:	d10f      	bne.n	800a93c <HAL_TIM_Base_Stop_IT+0x48>
 800a91c:	687b      	ldr	r3, [r7, #4]
 800a91e:	681b      	ldr	r3, [r3, #0]
 800a920:	6a1a      	ldr	r2, [r3, #32]
 800a922:	f240 4344 	movw	r3, #1092	; 0x444
 800a926:	4013      	ands	r3, r2
 800a928:	2b00      	cmp	r3, #0
 800a92a:	d107      	bne.n	800a93c <HAL_TIM_Base_Stop_IT+0x48>
 800a92c:	687b      	ldr	r3, [r7, #4]
 800a92e:	681b      	ldr	r3, [r3, #0]
 800a930:	681a      	ldr	r2, [r3, #0]
 800a932:	687b      	ldr	r3, [r7, #4]
 800a934:	681b      	ldr	r3, [r3, #0]
 800a936:	f022 0201 	bic.w	r2, r2, #1
 800a93a:	601a      	str	r2, [r3, #0]
 800a93c:	687b      	ldr	r3, [r7, #4]
 800a93e:	2201      	movs	r2, #1
 800a940:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a944:	2300      	movs	r3, #0
 800a946:	4618      	mov	r0, r3
 800a948:	370c      	adds	r7, #12
 800a94a:	46bd      	mov	sp, r7
 800a94c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a950:	4770      	bx	lr

0800a952 <HAL_TIM_PWM_Init>:
 800a952:	b580      	push	{r7, lr}
 800a954:	b082      	sub	sp, #8
 800a956:	af00      	add	r7, sp, #0
 800a958:	6078      	str	r0, [r7, #4]
 800a95a:	687b      	ldr	r3, [r7, #4]
 800a95c:	2b00      	cmp	r3, #0
 800a95e:	d101      	bne.n	800a964 <HAL_TIM_PWM_Init+0x12>
 800a960:	2301      	movs	r3, #1
 800a962:	e049      	b.n	800a9f8 <HAL_TIM_PWM_Init+0xa6>
 800a964:	687b      	ldr	r3, [r7, #4]
 800a966:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a96a:	b2db      	uxtb	r3, r3
 800a96c:	2b00      	cmp	r3, #0
 800a96e:	d106      	bne.n	800a97e <HAL_TIM_PWM_Init+0x2c>
 800a970:	687b      	ldr	r3, [r7, #4]
 800a972:	2200      	movs	r2, #0
 800a974:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a978:	6878      	ldr	r0, [r7, #4]
 800a97a:	f000 f841 	bl	800aa00 <HAL_TIM_PWM_MspInit>
 800a97e:	687b      	ldr	r3, [r7, #4]
 800a980:	2202      	movs	r2, #2
 800a982:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a986:	687b      	ldr	r3, [r7, #4]
 800a988:	681a      	ldr	r2, [r3, #0]
 800a98a:	687b      	ldr	r3, [r7, #4]
 800a98c:	3304      	adds	r3, #4
 800a98e:	4619      	mov	r1, r3
 800a990:	4610      	mov	r0, r2
 800a992:	f001 f839 	bl	800ba08 <TIM_Base_SetConfig>
 800a996:	687b      	ldr	r3, [r7, #4]
 800a998:	2201      	movs	r2, #1
 800a99a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800a99e:	687b      	ldr	r3, [r7, #4]
 800a9a0:	2201      	movs	r2, #1
 800a9a2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a9a6:	687b      	ldr	r3, [r7, #4]
 800a9a8:	2201      	movs	r2, #1
 800a9aa:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a9ae:	687b      	ldr	r3, [r7, #4]
 800a9b0:	2201      	movs	r2, #1
 800a9b2:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a9b6:	687b      	ldr	r3, [r7, #4]
 800a9b8:	2201      	movs	r2, #1
 800a9ba:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a9be:	687b      	ldr	r3, [r7, #4]
 800a9c0:	2201      	movs	r2, #1
 800a9c2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a9c6:	687b      	ldr	r3, [r7, #4]
 800a9c8:	2201      	movs	r2, #1
 800a9ca:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a9ce:	687b      	ldr	r3, [r7, #4]
 800a9d0:	2201      	movs	r2, #1
 800a9d2:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a9d6:	687b      	ldr	r3, [r7, #4]
 800a9d8:	2201      	movs	r2, #1
 800a9da:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a9de:	687b      	ldr	r3, [r7, #4]
 800a9e0:	2201      	movs	r2, #1
 800a9e2:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a9e6:	687b      	ldr	r3, [r7, #4]
 800a9e8:	2201      	movs	r2, #1
 800a9ea:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 800a9ee:	687b      	ldr	r3, [r7, #4]
 800a9f0:	2201      	movs	r2, #1
 800a9f2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a9f6:	2300      	movs	r3, #0
 800a9f8:	4618      	mov	r0, r3
 800a9fa:	3708      	adds	r7, #8
 800a9fc:	46bd      	mov	sp, r7
 800a9fe:	bd80      	pop	{r7, pc}

0800aa00 <HAL_TIM_PWM_MspInit>:
 800aa00:	b480      	push	{r7}
 800aa02:	b083      	sub	sp, #12
 800aa04:	af00      	add	r7, sp, #0
 800aa06:	6078      	str	r0, [r7, #4]
 800aa08:	bf00      	nop
 800aa0a:	370c      	adds	r7, #12
 800aa0c:	46bd      	mov	sp, r7
 800aa0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa12:	4770      	bx	lr

0800aa14 <HAL_TIM_PWM_Start>:
 800aa14:	b580      	push	{r7, lr}
 800aa16:	b084      	sub	sp, #16
 800aa18:	af00      	add	r7, sp, #0
 800aa1a:	6078      	str	r0, [r7, #4]
 800aa1c:	6039      	str	r1, [r7, #0]
 800aa1e:	683b      	ldr	r3, [r7, #0]
 800aa20:	2b00      	cmp	r3, #0
 800aa22:	d109      	bne.n	800aa38 <HAL_TIM_PWM_Start+0x24>
 800aa24:	687b      	ldr	r3, [r7, #4]
 800aa26:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800aa2a:	b2db      	uxtb	r3, r3
 800aa2c:	2b01      	cmp	r3, #1
 800aa2e:	bf14      	ite	ne
 800aa30:	2301      	movne	r3, #1
 800aa32:	2300      	moveq	r3, #0
 800aa34:	b2db      	uxtb	r3, r3
 800aa36:	e03c      	b.n	800aab2 <HAL_TIM_PWM_Start+0x9e>
 800aa38:	683b      	ldr	r3, [r7, #0]
 800aa3a:	2b04      	cmp	r3, #4
 800aa3c:	d109      	bne.n	800aa52 <HAL_TIM_PWM_Start+0x3e>
 800aa3e:	687b      	ldr	r3, [r7, #4]
 800aa40:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800aa44:	b2db      	uxtb	r3, r3
 800aa46:	2b01      	cmp	r3, #1
 800aa48:	bf14      	ite	ne
 800aa4a:	2301      	movne	r3, #1
 800aa4c:	2300      	moveq	r3, #0
 800aa4e:	b2db      	uxtb	r3, r3
 800aa50:	e02f      	b.n	800aab2 <HAL_TIM_PWM_Start+0x9e>
 800aa52:	683b      	ldr	r3, [r7, #0]
 800aa54:	2b08      	cmp	r3, #8
 800aa56:	d109      	bne.n	800aa6c <HAL_TIM_PWM_Start+0x58>
 800aa58:	687b      	ldr	r3, [r7, #4]
 800aa5a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800aa5e:	b2db      	uxtb	r3, r3
 800aa60:	2b01      	cmp	r3, #1
 800aa62:	bf14      	ite	ne
 800aa64:	2301      	movne	r3, #1
 800aa66:	2300      	moveq	r3, #0
 800aa68:	b2db      	uxtb	r3, r3
 800aa6a:	e022      	b.n	800aab2 <HAL_TIM_PWM_Start+0x9e>
 800aa6c:	683b      	ldr	r3, [r7, #0]
 800aa6e:	2b0c      	cmp	r3, #12
 800aa70:	d109      	bne.n	800aa86 <HAL_TIM_PWM_Start+0x72>
 800aa72:	687b      	ldr	r3, [r7, #4]
 800aa74:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800aa78:	b2db      	uxtb	r3, r3
 800aa7a:	2b01      	cmp	r3, #1
 800aa7c:	bf14      	ite	ne
 800aa7e:	2301      	movne	r3, #1
 800aa80:	2300      	moveq	r3, #0
 800aa82:	b2db      	uxtb	r3, r3
 800aa84:	e015      	b.n	800aab2 <HAL_TIM_PWM_Start+0x9e>
 800aa86:	683b      	ldr	r3, [r7, #0]
 800aa88:	2b10      	cmp	r3, #16
 800aa8a:	d109      	bne.n	800aaa0 <HAL_TIM_PWM_Start+0x8c>
 800aa8c:	687b      	ldr	r3, [r7, #4]
 800aa8e:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800aa92:	b2db      	uxtb	r3, r3
 800aa94:	2b01      	cmp	r3, #1
 800aa96:	bf14      	ite	ne
 800aa98:	2301      	movne	r3, #1
 800aa9a:	2300      	moveq	r3, #0
 800aa9c:	b2db      	uxtb	r3, r3
 800aa9e:	e008      	b.n	800aab2 <HAL_TIM_PWM_Start+0x9e>
 800aaa0:	687b      	ldr	r3, [r7, #4]
 800aaa2:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800aaa6:	b2db      	uxtb	r3, r3
 800aaa8:	2b01      	cmp	r3, #1
 800aaaa:	bf14      	ite	ne
 800aaac:	2301      	movne	r3, #1
 800aaae:	2300      	moveq	r3, #0
 800aab0:	b2db      	uxtb	r3, r3
 800aab2:	2b00      	cmp	r3, #0
 800aab4:	d001      	beq.n	800aaba <HAL_TIM_PWM_Start+0xa6>
 800aab6:	2301      	movs	r3, #1
 800aab8:	e0a1      	b.n	800abfe <HAL_TIM_PWM_Start+0x1ea>
 800aaba:	683b      	ldr	r3, [r7, #0]
 800aabc:	2b00      	cmp	r3, #0
 800aabe:	d104      	bne.n	800aaca <HAL_TIM_PWM_Start+0xb6>
 800aac0:	687b      	ldr	r3, [r7, #4]
 800aac2:	2202      	movs	r2, #2
 800aac4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800aac8:	e023      	b.n	800ab12 <HAL_TIM_PWM_Start+0xfe>
 800aaca:	683b      	ldr	r3, [r7, #0]
 800aacc:	2b04      	cmp	r3, #4
 800aace:	d104      	bne.n	800aada <HAL_TIM_PWM_Start+0xc6>
 800aad0:	687b      	ldr	r3, [r7, #4]
 800aad2:	2202      	movs	r2, #2
 800aad4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800aad8:	e01b      	b.n	800ab12 <HAL_TIM_PWM_Start+0xfe>
 800aada:	683b      	ldr	r3, [r7, #0]
 800aadc:	2b08      	cmp	r3, #8
 800aade:	d104      	bne.n	800aaea <HAL_TIM_PWM_Start+0xd6>
 800aae0:	687b      	ldr	r3, [r7, #4]
 800aae2:	2202      	movs	r2, #2
 800aae4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800aae8:	e013      	b.n	800ab12 <HAL_TIM_PWM_Start+0xfe>
 800aaea:	683b      	ldr	r3, [r7, #0]
 800aaec:	2b0c      	cmp	r3, #12
 800aaee:	d104      	bne.n	800aafa <HAL_TIM_PWM_Start+0xe6>
 800aaf0:	687b      	ldr	r3, [r7, #4]
 800aaf2:	2202      	movs	r2, #2
 800aaf4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800aaf8:	e00b      	b.n	800ab12 <HAL_TIM_PWM_Start+0xfe>
 800aafa:	683b      	ldr	r3, [r7, #0]
 800aafc:	2b10      	cmp	r3, #16
 800aafe:	d104      	bne.n	800ab0a <HAL_TIM_PWM_Start+0xf6>
 800ab00:	687b      	ldr	r3, [r7, #4]
 800ab02:	2202      	movs	r2, #2
 800ab04:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800ab08:	e003      	b.n	800ab12 <HAL_TIM_PWM_Start+0xfe>
 800ab0a:	687b      	ldr	r3, [r7, #4]
 800ab0c:	2202      	movs	r2, #2
 800ab0e:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800ab12:	687b      	ldr	r3, [r7, #4]
 800ab14:	681b      	ldr	r3, [r3, #0]
 800ab16:	2201      	movs	r2, #1
 800ab18:	6839      	ldr	r1, [r7, #0]
 800ab1a:	4618      	mov	r0, r3
 800ab1c:	f001 fcac 	bl	800c478 <TIM_CCxChannelCmd>
 800ab20:	687b      	ldr	r3, [r7, #4]
 800ab22:	681b      	ldr	r3, [r3, #0]
 800ab24:	4a38      	ldr	r2, [pc, #224]	; (800ac08 <HAL_TIM_PWM_Start+0x1f4>)
 800ab26:	4293      	cmp	r3, r2
 800ab28:	d013      	beq.n	800ab52 <HAL_TIM_PWM_Start+0x13e>
 800ab2a:	687b      	ldr	r3, [r7, #4]
 800ab2c:	681b      	ldr	r3, [r3, #0]
 800ab2e:	4a37      	ldr	r2, [pc, #220]	; (800ac0c <HAL_TIM_PWM_Start+0x1f8>)
 800ab30:	4293      	cmp	r3, r2
 800ab32:	d00e      	beq.n	800ab52 <HAL_TIM_PWM_Start+0x13e>
 800ab34:	687b      	ldr	r3, [r7, #4]
 800ab36:	681b      	ldr	r3, [r3, #0]
 800ab38:	4a35      	ldr	r2, [pc, #212]	; (800ac10 <HAL_TIM_PWM_Start+0x1fc>)
 800ab3a:	4293      	cmp	r3, r2
 800ab3c:	d009      	beq.n	800ab52 <HAL_TIM_PWM_Start+0x13e>
 800ab3e:	687b      	ldr	r3, [r7, #4]
 800ab40:	681b      	ldr	r3, [r3, #0]
 800ab42:	4a34      	ldr	r2, [pc, #208]	; (800ac14 <HAL_TIM_PWM_Start+0x200>)
 800ab44:	4293      	cmp	r3, r2
 800ab46:	d004      	beq.n	800ab52 <HAL_TIM_PWM_Start+0x13e>
 800ab48:	687b      	ldr	r3, [r7, #4]
 800ab4a:	681b      	ldr	r3, [r3, #0]
 800ab4c:	4a32      	ldr	r2, [pc, #200]	; (800ac18 <HAL_TIM_PWM_Start+0x204>)
 800ab4e:	4293      	cmp	r3, r2
 800ab50:	d101      	bne.n	800ab56 <HAL_TIM_PWM_Start+0x142>
 800ab52:	2301      	movs	r3, #1
 800ab54:	e000      	b.n	800ab58 <HAL_TIM_PWM_Start+0x144>
 800ab56:	2300      	movs	r3, #0
 800ab58:	2b00      	cmp	r3, #0
 800ab5a:	d007      	beq.n	800ab6c <HAL_TIM_PWM_Start+0x158>
 800ab5c:	687b      	ldr	r3, [r7, #4]
 800ab5e:	681b      	ldr	r3, [r3, #0]
 800ab60:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800ab62:	687b      	ldr	r3, [r7, #4]
 800ab64:	681b      	ldr	r3, [r3, #0]
 800ab66:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800ab6a:	645a      	str	r2, [r3, #68]	; 0x44
 800ab6c:	687b      	ldr	r3, [r7, #4]
 800ab6e:	681b      	ldr	r3, [r3, #0]
 800ab70:	4a25      	ldr	r2, [pc, #148]	; (800ac08 <HAL_TIM_PWM_Start+0x1f4>)
 800ab72:	4293      	cmp	r3, r2
 800ab74:	d022      	beq.n	800abbc <HAL_TIM_PWM_Start+0x1a8>
 800ab76:	687b      	ldr	r3, [r7, #4]
 800ab78:	681b      	ldr	r3, [r3, #0]
 800ab7a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ab7e:	d01d      	beq.n	800abbc <HAL_TIM_PWM_Start+0x1a8>
 800ab80:	687b      	ldr	r3, [r7, #4]
 800ab82:	681b      	ldr	r3, [r3, #0]
 800ab84:	4a25      	ldr	r2, [pc, #148]	; (800ac1c <HAL_TIM_PWM_Start+0x208>)
 800ab86:	4293      	cmp	r3, r2
 800ab88:	d018      	beq.n	800abbc <HAL_TIM_PWM_Start+0x1a8>
 800ab8a:	687b      	ldr	r3, [r7, #4]
 800ab8c:	681b      	ldr	r3, [r3, #0]
 800ab8e:	4a24      	ldr	r2, [pc, #144]	; (800ac20 <HAL_TIM_PWM_Start+0x20c>)
 800ab90:	4293      	cmp	r3, r2
 800ab92:	d013      	beq.n	800abbc <HAL_TIM_PWM_Start+0x1a8>
 800ab94:	687b      	ldr	r3, [r7, #4]
 800ab96:	681b      	ldr	r3, [r3, #0]
 800ab98:	4a22      	ldr	r2, [pc, #136]	; (800ac24 <HAL_TIM_PWM_Start+0x210>)
 800ab9a:	4293      	cmp	r3, r2
 800ab9c:	d00e      	beq.n	800abbc <HAL_TIM_PWM_Start+0x1a8>
 800ab9e:	687b      	ldr	r3, [r7, #4]
 800aba0:	681b      	ldr	r3, [r3, #0]
 800aba2:	4a1a      	ldr	r2, [pc, #104]	; (800ac0c <HAL_TIM_PWM_Start+0x1f8>)
 800aba4:	4293      	cmp	r3, r2
 800aba6:	d009      	beq.n	800abbc <HAL_TIM_PWM_Start+0x1a8>
 800aba8:	687b      	ldr	r3, [r7, #4]
 800abaa:	681b      	ldr	r3, [r3, #0]
 800abac:	4a1e      	ldr	r2, [pc, #120]	; (800ac28 <HAL_TIM_PWM_Start+0x214>)
 800abae:	4293      	cmp	r3, r2
 800abb0:	d004      	beq.n	800abbc <HAL_TIM_PWM_Start+0x1a8>
 800abb2:	687b      	ldr	r3, [r7, #4]
 800abb4:	681b      	ldr	r3, [r3, #0]
 800abb6:	4a16      	ldr	r2, [pc, #88]	; (800ac10 <HAL_TIM_PWM_Start+0x1fc>)
 800abb8:	4293      	cmp	r3, r2
 800abba:	d115      	bne.n	800abe8 <HAL_TIM_PWM_Start+0x1d4>
 800abbc:	687b      	ldr	r3, [r7, #4]
 800abbe:	681b      	ldr	r3, [r3, #0]
 800abc0:	689a      	ldr	r2, [r3, #8]
 800abc2:	4b1a      	ldr	r3, [pc, #104]	; (800ac2c <HAL_TIM_PWM_Start+0x218>)
 800abc4:	4013      	ands	r3, r2
 800abc6:	60fb      	str	r3, [r7, #12]
 800abc8:	68fb      	ldr	r3, [r7, #12]
 800abca:	2b06      	cmp	r3, #6
 800abcc:	d015      	beq.n	800abfa <HAL_TIM_PWM_Start+0x1e6>
 800abce:	68fb      	ldr	r3, [r7, #12]
 800abd0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800abd4:	d011      	beq.n	800abfa <HAL_TIM_PWM_Start+0x1e6>
 800abd6:	687b      	ldr	r3, [r7, #4]
 800abd8:	681b      	ldr	r3, [r3, #0]
 800abda:	681a      	ldr	r2, [r3, #0]
 800abdc:	687b      	ldr	r3, [r7, #4]
 800abde:	681b      	ldr	r3, [r3, #0]
 800abe0:	f042 0201 	orr.w	r2, r2, #1
 800abe4:	601a      	str	r2, [r3, #0]
 800abe6:	e008      	b.n	800abfa <HAL_TIM_PWM_Start+0x1e6>
 800abe8:	687b      	ldr	r3, [r7, #4]
 800abea:	681b      	ldr	r3, [r3, #0]
 800abec:	681a      	ldr	r2, [r3, #0]
 800abee:	687b      	ldr	r3, [r7, #4]
 800abf0:	681b      	ldr	r3, [r3, #0]
 800abf2:	f042 0201 	orr.w	r2, r2, #1
 800abf6:	601a      	str	r2, [r3, #0]
 800abf8:	e000      	b.n	800abfc <HAL_TIM_PWM_Start+0x1e8>
 800abfa:	bf00      	nop
 800abfc:	2300      	movs	r3, #0
 800abfe:	4618      	mov	r0, r3
 800ac00:	3710      	adds	r7, #16
 800ac02:	46bd      	mov	sp, r7
 800ac04:	bd80      	pop	{r7, pc}
 800ac06:	bf00      	nop
 800ac08:	40010000 	.word	0x40010000
 800ac0c:	40010400 	.word	0x40010400
 800ac10:	40014000 	.word	0x40014000
 800ac14:	40014400 	.word	0x40014400
 800ac18:	40014800 	.word	0x40014800
 800ac1c:	40000400 	.word	0x40000400
 800ac20:	40000800 	.word	0x40000800
 800ac24:	40000c00 	.word	0x40000c00
 800ac28:	40001800 	.word	0x40001800
 800ac2c:	00010007 	.word	0x00010007

0800ac30 <HAL_TIM_PWM_Stop>:
 800ac30:	b580      	push	{r7, lr}
 800ac32:	b082      	sub	sp, #8
 800ac34:	af00      	add	r7, sp, #0
 800ac36:	6078      	str	r0, [r7, #4]
 800ac38:	6039      	str	r1, [r7, #0]
 800ac3a:	687b      	ldr	r3, [r7, #4]
 800ac3c:	681b      	ldr	r3, [r3, #0]
 800ac3e:	2200      	movs	r2, #0
 800ac40:	6839      	ldr	r1, [r7, #0]
 800ac42:	4618      	mov	r0, r3
 800ac44:	f001 fc18 	bl	800c478 <TIM_CCxChannelCmd>
 800ac48:	687b      	ldr	r3, [r7, #4]
 800ac4a:	681b      	ldr	r3, [r3, #0]
 800ac4c:	4a3e      	ldr	r2, [pc, #248]	; (800ad48 <HAL_TIM_PWM_Stop+0x118>)
 800ac4e:	4293      	cmp	r3, r2
 800ac50:	d013      	beq.n	800ac7a <HAL_TIM_PWM_Stop+0x4a>
 800ac52:	687b      	ldr	r3, [r7, #4]
 800ac54:	681b      	ldr	r3, [r3, #0]
 800ac56:	4a3d      	ldr	r2, [pc, #244]	; (800ad4c <HAL_TIM_PWM_Stop+0x11c>)
 800ac58:	4293      	cmp	r3, r2
 800ac5a:	d00e      	beq.n	800ac7a <HAL_TIM_PWM_Stop+0x4a>
 800ac5c:	687b      	ldr	r3, [r7, #4]
 800ac5e:	681b      	ldr	r3, [r3, #0]
 800ac60:	4a3b      	ldr	r2, [pc, #236]	; (800ad50 <HAL_TIM_PWM_Stop+0x120>)
 800ac62:	4293      	cmp	r3, r2
 800ac64:	d009      	beq.n	800ac7a <HAL_TIM_PWM_Stop+0x4a>
 800ac66:	687b      	ldr	r3, [r7, #4]
 800ac68:	681b      	ldr	r3, [r3, #0]
 800ac6a:	4a3a      	ldr	r2, [pc, #232]	; (800ad54 <HAL_TIM_PWM_Stop+0x124>)
 800ac6c:	4293      	cmp	r3, r2
 800ac6e:	d004      	beq.n	800ac7a <HAL_TIM_PWM_Stop+0x4a>
 800ac70:	687b      	ldr	r3, [r7, #4]
 800ac72:	681b      	ldr	r3, [r3, #0]
 800ac74:	4a38      	ldr	r2, [pc, #224]	; (800ad58 <HAL_TIM_PWM_Stop+0x128>)
 800ac76:	4293      	cmp	r3, r2
 800ac78:	d101      	bne.n	800ac7e <HAL_TIM_PWM_Stop+0x4e>
 800ac7a:	2301      	movs	r3, #1
 800ac7c:	e000      	b.n	800ac80 <HAL_TIM_PWM_Stop+0x50>
 800ac7e:	2300      	movs	r3, #0
 800ac80:	2b00      	cmp	r3, #0
 800ac82:	d017      	beq.n	800acb4 <HAL_TIM_PWM_Stop+0x84>
 800ac84:	687b      	ldr	r3, [r7, #4]
 800ac86:	681b      	ldr	r3, [r3, #0]
 800ac88:	6a1a      	ldr	r2, [r3, #32]
 800ac8a:	f241 1311 	movw	r3, #4369	; 0x1111
 800ac8e:	4013      	ands	r3, r2
 800ac90:	2b00      	cmp	r3, #0
 800ac92:	d10f      	bne.n	800acb4 <HAL_TIM_PWM_Stop+0x84>
 800ac94:	687b      	ldr	r3, [r7, #4]
 800ac96:	681b      	ldr	r3, [r3, #0]
 800ac98:	6a1a      	ldr	r2, [r3, #32]
 800ac9a:	f240 4344 	movw	r3, #1092	; 0x444
 800ac9e:	4013      	ands	r3, r2
 800aca0:	2b00      	cmp	r3, #0
 800aca2:	d107      	bne.n	800acb4 <HAL_TIM_PWM_Stop+0x84>
 800aca4:	687b      	ldr	r3, [r7, #4]
 800aca6:	681b      	ldr	r3, [r3, #0]
 800aca8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800acaa:	687b      	ldr	r3, [r7, #4]
 800acac:	681b      	ldr	r3, [r3, #0]
 800acae:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800acb2:	645a      	str	r2, [r3, #68]	; 0x44
 800acb4:	687b      	ldr	r3, [r7, #4]
 800acb6:	681b      	ldr	r3, [r3, #0]
 800acb8:	6a1a      	ldr	r2, [r3, #32]
 800acba:	f241 1311 	movw	r3, #4369	; 0x1111
 800acbe:	4013      	ands	r3, r2
 800acc0:	2b00      	cmp	r3, #0
 800acc2:	d10f      	bne.n	800ace4 <HAL_TIM_PWM_Stop+0xb4>
 800acc4:	687b      	ldr	r3, [r7, #4]
 800acc6:	681b      	ldr	r3, [r3, #0]
 800acc8:	6a1a      	ldr	r2, [r3, #32]
 800acca:	f240 4344 	movw	r3, #1092	; 0x444
 800acce:	4013      	ands	r3, r2
 800acd0:	2b00      	cmp	r3, #0
 800acd2:	d107      	bne.n	800ace4 <HAL_TIM_PWM_Stop+0xb4>
 800acd4:	687b      	ldr	r3, [r7, #4]
 800acd6:	681b      	ldr	r3, [r3, #0]
 800acd8:	681a      	ldr	r2, [r3, #0]
 800acda:	687b      	ldr	r3, [r7, #4]
 800acdc:	681b      	ldr	r3, [r3, #0]
 800acde:	f022 0201 	bic.w	r2, r2, #1
 800ace2:	601a      	str	r2, [r3, #0]
 800ace4:	683b      	ldr	r3, [r7, #0]
 800ace6:	2b00      	cmp	r3, #0
 800ace8:	d104      	bne.n	800acf4 <HAL_TIM_PWM_Stop+0xc4>
 800acea:	687b      	ldr	r3, [r7, #4]
 800acec:	2201      	movs	r2, #1
 800acee:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800acf2:	e023      	b.n	800ad3c <HAL_TIM_PWM_Stop+0x10c>
 800acf4:	683b      	ldr	r3, [r7, #0]
 800acf6:	2b04      	cmp	r3, #4
 800acf8:	d104      	bne.n	800ad04 <HAL_TIM_PWM_Stop+0xd4>
 800acfa:	687b      	ldr	r3, [r7, #4]
 800acfc:	2201      	movs	r2, #1
 800acfe:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800ad02:	e01b      	b.n	800ad3c <HAL_TIM_PWM_Stop+0x10c>
 800ad04:	683b      	ldr	r3, [r7, #0]
 800ad06:	2b08      	cmp	r3, #8
 800ad08:	d104      	bne.n	800ad14 <HAL_TIM_PWM_Stop+0xe4>
 800ad0a:	687b      	ldr	r3, [r7, #4]
 800ad0c:	2201      	movs	r2, #1
 800ad0e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800ad12:	e013      	b.n	800ad3c <HAL_TIM_PWM_Stop+0x10c>
 800ad14:	683b      	ldr	r3, [r7, #0]
 800ad16:	2b0c      	cmp	r3, #12
 800ad18:	d104      	bne.n	800ad24 <HAL_TIM_PWM_Stop+0xf4>
 800ad1a:	687b      	ldr	r3, [r7, #4]
 800ad1c:	2201      	movs	r2, #1
 800ad1e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800ad22:	e00b      	b.n	800ad3c <HAL_TIM_PWM_Stop+0x10c>
 800ad24:	683b      	ldr	r3, [r7, #0]
 800ad26:	2b10      	cmp	r3, #16
 800ad28:	d104      	bne.n	800ad34 <HAL_TIM_PWM_Stop+0x104>
 800ad2a:	687b      	ldr	r3, [r7, #4]
 800ad2c:	2201      	movs	r2, #1
 800ad2e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800ad32:	e003      	b.n	800ad3c <HAL_TIM_PWM_Stop+0x10c>
 800ad34:	687b      	ldr	r3, [r7, #4]
 800ad36:	2201      	movs	r2, #1
 800ad38:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800ad3c:	2300      	movs	r3, #0
 800ad3e:	4618      	mov	r0, r3
 800ad40:	3708      	adds	r7, #8
 800ad42:	46bd      	mov	sp, r7
 800ad44:	bd80      	pop	{r7, pc}
 800ad46:	bf00      	nop
 800ad48:	40010000 	.word	0x40010000
 800ad4c:	40010400 	.word	0x40010400
 800ad50:	40014000 	.word	0x40014000
 800ad54:	40014400 	.word	0x40014400
 800ad58:	40014800 	.word	0x40014800

0800ad5c <HAL_TIM_IC_Init>:
 800ad5c:	b580      	push	{r7, lr}
 800ad5e:	b082      	sub	sp, #8
 800ad60:	af00      	add	r7, sp, #0
 800ad62:	6078      	str	r0, [r7, #4]
 800ad64:	687b      	ldr	r3, [r7, #4]
 800ad66:	2b00      	cmp	r3, #0
 800ad68:	d101      	bne.n	800ad6e <HAL_TIM_IC_Init+0x12>
 800ad6a:	2301      	movs	r3, #1
 800ad6c:	e049      	b.n	800ae02 <HAL_TIM_IC_Init+0xa6>
 800ad6e:	687b      	ldr	r3, [r7, #4]
 800ad70:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800ad74:	b2db      	uxtb	r3, r3
 800ad76:	2b00      	cmp	r3, #0
 800ad78:	d106      	bne.n	800ad88 <HAL_TIM_IC_Init+0x2c>
 800ad7a:	687b      	ldr	r3, [r7, #4]
 800ad7c:	2200      	movs	r2, #0
 800ad7e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ad82:	6878      	ldr	r0, [r7, #4]
 800ad84:	f000 f841 	bl	800ae0a <HAL_TIM_IC_MspInit>
 800ad88:	687b      	ldr	r3, [r7, #4]
 800ad8a:	2202      	movs	r2, #2
 800ad8c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ad90:	687b      	ldr	r3, [r7, #4]
 800ad92:	681a      	ldr	r2, [r3, #0]
 800ad94:	687b      	ldr	r3, [r7, #4]
 800ad96:	3304      	adds	r3, #4
 800ad98:	4619      	mov	r1, r3
 800ad9a:	4610      	mov	r0, r2
 800ad9c:	f000 fe34 	bl	800ba08 <TIM_Base_SetConfig>
 800ada0:	687b      	ldr	r3, [r7, #4]
 800ada2:	2201      	movs	r2, #1
 800ada4:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800ada8:	687b      	ldr	r3, [r7, #4]
 800adaa:	2201      	movs	r2, #1
 800adac:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800adb0:	687b      	ldr	r3, [r7, #4]
 800adb2:	2201      	movs	r2, #1
 800adb4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800adb8:	687b      	ldr	r3, [r7, #4]
 800adba:	2201      	movs	r2, #1
 800adbc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800adc0:	687b      	ldr	r3, [r7, #4]
 800adc2:	2201      	movs	r2, #1
 800adc4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800adc8:	687b      	ldr	r3, [r7, #4]
 800adca:	2201      	movs	r2, #1
 800adcc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800add0:	687b      	ldr	r3, [r7, #4]
 800add2:	2201      	movs	r2, #1
 800add4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800add8:	687b      	ldr	r3, [r7, #4]
 800adda:	2201      	movs	r2, #1
 800addc:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800ade0:	687b      	ldr	r3, [r7, #4]
 800ade2:	2201      	movs	r2, #1
 800ade4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800ade8:	687b      	ldr	r3, [r7, #4]
 800adea:	2201      	movs	r2, #1
 800adec:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800adf0:	687b      	ldr	r3, [r7, #4]
 800adf2:	2201      	movs	r2, #1
 800adf4:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 800adf8:	687b      	ldr	r3, [r7, #4]
 800adfa:	2201      	movs	r2, #1
 800adfc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ae00:	2300      	movs	r3, #0
 800ae02:	4618      	mov	r0, r3
 800ae04:	3708      	adds	r7, #8
 800ae06:	46bd      	mov	sp, r7
 800ae08:	bd80      	pop	{r7, pc}

0800ae0a <HAL_TIM_IC_MspInit>:
 800ae0a:	b480      	push	{r7}
 800ae0c:	b083      	sub	sp, #12
 800ae0e:	af00      	add	r7, sp, #0
 800ae10:	6078      	str	r0, [r7, #4]
 800ae12:	bf00      	nop
 800ae14:	370c      	adds	r7, #12
 800ae16:	46bd      	mov	sp, r7
 800ae18:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae1c:	4770      	bx	lr
	...

0800ae20 <HAL_TIM_IC_Start_IT>:
 800ae20:	b580      	push	{r7, lr}
 800ae22:	b084      	sub	sp, #16
 800ae24:	af00      	add	r7, sp, #0
 800ae26:	6078      	str	r0, [r7, #4]
 800ae28:	6039      	str	r1, [r7, #0]
 800ae2a:	2300      	movs	r3, #0
 800ae2c:	73fb      	strb	r3, [r7, #15]
 800ae2e:	683b      	ldr	r3, [r7, #0]
 800ae30:	2b00      	cmp	r3, #0
 800ae32:	d104      	bne.n	800ae3e <HAL_TIM_IC_Start_IT+0x1e>
 800ae34:	687b      	ldr	r3, [r7, #4]
 800ae36:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800ae3a:	b2db      	uxtb	r3, r3
 800ae3c:	e023      	b.n	800ae86 <HAL_TIM_IC_Start_IT+0x66>
 800ae3e:	683b      	ldr	r3, [r7, #0]
 800ae40:	2b04      	cmp	r3, #4
 800ae42:	d104      	bne.n	800ae4e <HAL_TIM_IC_Start_IT+0x2e>
 800ae44:	687b      	ldr	r3, [r7, #4]
 800ae46:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800ae4a:	b2db      	uxtb	r3, r3
 800ae4c:	e01b      	b.n	800ae86 <HAL_TIM_IC_Start_IT+0x66>
 800ae4e:	683b      	ldr	r3, [r7, #0]
 800ae50:	2b08      	cmp	r3, #8
 800ae52:	d104      	bne.n	800ae5e <HAL_TIM_IC_Start_IT+0x3e>
 800ae54:	687b      	ldr	r3, [r7, #4]
 800ae56:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800ae5a:	b2db      	uxtb	r3, r3
 800ae5c:	e013      	b.n	800ae86 <HAL_TIM_IC_Start_IT+0x66>
 800ae5e:	683b      	ldr	r3, [r7, #0]
 800ae60:	2b0c      	cmp	r3, #12
 800ae62:	d104      	bne.n	800ae6e <HAL_TIM_IC_Start_IT+0x4e>
 800ae64:	687b      	ldr	r3, [r7, #4]
 800ae66:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800ae6a:	b2db      	uxtb	r3, r3
 800ae6c:	e00b      	b.n	800ae86 <HAL_TIM_IC_Start_IT+0x66>
 800ae6e:	683b      	ldr	r3, [r7, #0]
 800ae70:	2b10      	cmp	r3, #16
 800ae72:	d104      	bne.n	800ae7e <HAL_TIM_IC_Start_IT+0x5e>
 800ae74:	687b      	ldr	r3, [r7, #4]
 800ae76:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800ae7a:	b2db      	uxtb	r3, r3
 800ae7c:	e003      	b.n	800ae86 <HAL_TIM_IC_Start_IT+0x66>
 800ae7e:	687b      	ldr	r3, [r7, #4]
 800ae80:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800ae84:	b2db      	uxtb	r3, r3
 800ae86:	73bb      	strb	r3, [r7, #14]
 800ae88:	683b      	ldr	r3, [r7, #0]
 800ae8a:	2b00      	cmp	r3, #0
 800ae8c:	d104      	bne.n	800ae98 <HAL_TIM_IC_Start_IT+0x78>
 800ae8e:	687b      	ldr	r3, [r7, #4]
 800ae90:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800ae94:	b2db      	uxtb	r3, r3
 800ae96:	e013      	b.n	800aec0 <HAL_TIM_IC_Start_IT+0xa0>
 800ae98:	683b      	ldr	r3, [r7, #0]
 800ae9a:	2b04      	cmp	r3, #4
 800ae9c:	d104      	bne.n	800aea8 <HAL_TIM_IC_Start_IT+0x88>
 800ae9e:	687b      	ldr	r3, [r7, #4]
 800aea0:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800aea4:	b2db      	uxtb	r3, r3
 800aea6:	e00b      	b.n	800aec0 <HAL_TIM_IC_Start_IT+0xa0>
 800aea8:	683b      	ldr	r3, [r7, #0]
 800aeaa:	2b08      	cmp	r3, #8
 800aeac:	d104      	bne.n	800aeb8 <HAL_TIM_IC_Start_IT+0x98>
 800aeae:	687b      	ldr	r3, [r7, #4]
 800aeb0:	f893 3046 	ldrb.w	r3, [r3, #70]	; 0x46
 800aeb4:	b2db      	uxtb	r3, r3
 800aeb6:	e003      	b.n	800aec0 <HAL_TIM_IC_Start_IT+0xa0>
 800aeb8:	687b      	ldr	r3, [r7, #4]
 800aeba:	f893 3047 	ldrb.w	r3, [r3, #71]	; 0x47
 800aebe:	b2db      	uxtb	r3, r3
 800aec0:	737b      	strb	r3, [r7, #13]
 800aec2:	7bbb      	ldrb	r3, [r7, #14]
 800aec4:	2b01      	cmp	r3, #1
 800aec6:	d102      	bne.n	800aece <HAL_TIM_IC_Start_IT+0xae>
 800aec8:	7b7b      	ldrb	r3, [r7, #13]
 800aeca:	2b01      	cmp	r3, #1
 800aecc:	d001      	beq.n	800aed2 <HAL_TIM_IC_Start_IT+0xb2>
 800aece:	2301      	movs	r3, #1
 800aed0:	e0e2      	b.n	800b098 <HAL_TIM_IC_Start_IT+0x278>
 800aed2:	683b      	ldr	r3, [r7, #0]
 800aed4:	2b00      	cmp	r3, #0
 800aed6:	d104      	bne.n	800aee2 <HAL_TIM_IC_Start_IT+0xc2>
 800aed8:	687b      	ldr	r3, [r7, #4]
 800aeda:	2202      	movs	r2, #2
 800aedc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800aee0:	e023      	b.n	800af2a <HAL_TIM_IC_Start_IT+0x10a>
 800aee2:	683b      	ldr	r3, [r7, #0]
 800aee4:	2b04      	cmp	r3, #4
 800aee6:	d104      	bne.n	800aef2 <HAL_TIM_IC_Start_IT+0xd2>
 800aee8:	687b      	ldr	r3, [r7, #4]
 800aeea:	2202      	movs	r2, #2
 800aeec:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800aef0:	e01b      	b.n	800af2a <HAL_TIM_IC_Start_IT+0x10a>
 800aef2:	683b      	ldr	r3, [r7, #0]
 800aef4:	2b08      	cmp	r3, #8
 800aef6:	d104      	bne.n	800af02 <HAL_TIM_IC_Start_IT+0xe2>
 800aef8:	687b      	ldr	r3, [r7, #4]
 800aefa:	2202      	movs	r2, #2
 800aefc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800af00:	e013      	b.n	800af2a <HAL_TIM_IC_Start_IT+0x10a>
 800af02:	683b      	ldr	r3, [r7, #0]
 800af04:	2b0c      	cmp	r3, #12
 800af06:	d104      	bne.n	800af12 <HAL_TIM_IC_Start_IT+0xf2>
 800af08:	687b      	ldr	r3, [r7, #4]
 800af0a:	2202      	movs	r2, #2
 800af0c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800af10:	e00b      	b.n	800af2a <HAL_TIM_IC_Start_IT+0x10a>
 800af12:	683b      	ldr	r3, [r7, #0]
 800af14:	2b10      	cmp	r3, #16
 800af16:	d104      	bne.n	800af22 <HAL_TIM_IC_Start_IT+0x102>
 800af18:	687b      	ldr	r3, [r7, #4]
 800af1a:	2202      	movs	r2, #2
 800af1c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800af20:	e003      	b.n	800af2a <HAL_TIM_IC_Start_IT+0x10a>
 800af22:	687b      	ldr	r3, [r7, #4]
 800af24:	2202      	movs	r2, #2
 800af26:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800af2a:	683b      	ldr	r3, [r7, #0]
 800af2c:	2b00      	cmp	r3, #0
 800af2e:	d104      	bne.n	800af3a <HAL_TIM_IC_Start_IT+0x11a>
 800af30:	687b      	ldr	r3, [r7, #4]
 800af32:	2202      	movs	r2, #2
 800af34:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800af38:	e013      	b.n	800af62 <HAL_TIM_IC_Start_IT+0x142>
 800af3a:	683b      	ldr	r3, [r7, #0]
 800af3c:	2b04      	cmp	r3, #4
 800af3e:	d104      	bne.n	800af4a <HAL_TIM_IC_Start_IT+0x12a>
 800af40:	687b      	ldr	r3, [r7, #4]
 800af42:	2202      	movs	r2, #2
 800af44:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800af48:	e00b      	b.n	800af62 <HAL_TIM_IC_Start_IT+0x142>
 800af4a:	683b      	ldr	r3, [r7, #0]
 800af4c:	2b08      	cmp	r3, #8
 800af4e:	d104      	bne.n	800af5a <HAL_TIM_IC_Start_IT+0x13a>
 800af50:	687b      	ldr	r3, [r7, #4]
 800af52:	2202      	movs	r2, #2
 800af54:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800af58:	e003      	b.n	800af62 <HAL_TIM_IC_Start_IT+0x142>
 800af5a:	687b      	ldr	r3, [r7, #4]
 800af5c:	2202      	movs	r2, #2
 800af5e:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 800af62:	683b      	ldr	r3, [r7, #0]
 800af64:	2b0c      	cmp	r3, #12
 800af66:	d841      	bhi.n	800afec <HAL_TIM_IC_Start_IT+0x1cc>
 800af68:	a201      	add	r2, pc, #4	; (adr r2, 800af70 <HAL_TIM_IC_Start_IT+0x150>)
 800af6a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800af6e:	bf00      	nop
 800af70:	0800afa5 	.word	0x0800afa5
 800af74:	0800afed 	.word	0x0800afed
 800af78:	0800afed 	.word	0x0800afed
 800af7c:	0800afed 	.word	0x0800afed
 800af80:	0800afb7 	.word	0x0800afb7
 800af84:	0800afed 	.word	0x0800afed
 800af88:	0800afed 	.word	0x0800afed
 800af8c:	0800afed 	.word	0x0800afed
 800af90:	0800afc9 	.word	0x0800afc9
 800af94:	0800afed 	.word	0x0800afed
 800af98:	0800afed 	.word	0x0800afed
 800af9c:	0800afed 	.word	0x0800afed
 800afa0:	0800afdb 	.word	0x0800afdb
 800afa4:	687b      	ldr	r3, [r7, #4]
 800afa6:	681b      	ldr	r3, [r3, #0]
 800afa8:	68da      	ldr	r2, [r3, #12]
 800afaa:	687b      	ldr	r3, [r7, #4]
 800afac:	681b      	ldr	r3, [r3, #0]
 800afae:	f042 0202 	orr.w	r2, r2, #2
 800afb2:	60da      	str	r2, [r3, #12]
 800afb4:	e01d      	b.n	800aff2 <HAL_TIM_IC_Start_IT+0x1d2>
 800afb6:	687b      	ldr	r3, [r7, #4]
 800afb8:	681b      	ldr	r3, [r3, #0]
 800afba:	68da      	ldr	r2, [r3, #12]
 800afbc:	687b      	ldr	r3, [r7, #4]
 800afbe:	681b      	ldr	r3, [r3, #0]
 800afc0:	f042 0204 	orr.w	r2, r2, #4
 800afc4:	60da      	str	r2, [r3, #12]
 800afc6:	e014      	b.n	800aff2 <HAL_TIM_IC_Start_IT+0x1d2>
 800afc8:	687b      	ldr	r3, [r7, #4]
 800afca:	681b      	ldr	r3, [r3, #0]
 800afcc:	68da      	ldr	r2, [r3, #12]
 800afce:	687b      	ldr	r3, [r7, #4]
 800afd0:	681b      	ldr	r3, [r3, #0]
 800afd2:	f042 0208 	orr.w	r2, r2, #8
 800afd6:	60da      	str	r2, [r3, #12]
 800afd8:	e00b      	b.n	800aff2 <HAL_TIM_IC_Start_IT+0x1d2>
 800afda:	687b      	ldr	r3, [r7, #4]
 800afdc:	681b      	ldr	r3, [r3, #0]
 800afde:	68da      	ldr	r2, [r3, #12]
 800afe0:	687b      	ldr	r3, [r7, #4]
 800afe2:	681b      	ldr	r3, [r3, #0]
 800afe4:	f042 0210 	orr.w	r2, r2, #16
 800afe8:	60da      	str	r2, [r3, #12]
 800afea:	e002      	b.n	800aff2 <HAL_TIM_IC_Start_IT+0x1d2>
 800afec:	2301      	movs	r3, #1
 800afee:	73fb      	strb	r3, [r7, #15]
 800aff0:	bf00      	nop
 800aff2:	7bfb      	ldrb	r3, [r7, #15]
 800aff4:	2b00      	cmp	r3, #0
 800aff6:	d14e      	bne.n	800b096 <HAL_TIM_IC_Start_IT+0x276>
 800aff8:	687b      	ldr	r3, [r7, #4]
 800affa:	681b      	ldr	r3, [r3, #0]
 800affc:	2201      	movs	r2, #1
 800affe:	6839      	ldr	r1, [r7, #0]
 800b000:	4618      	mov	r0, r3
 800b002:	f001 fa39 	bl	800c478 <TIM_CCxChannelCmd>
 800b006:	687b      	ldr	r3, [r7, #4]
 800b008:	681b      	ldr	r3, [r3, #0]
 800b00a:	4a25      	ldr	r2, [pc, #148]	; (800b0a0 <HAL_TIM_IC_Start_IT+0x280>)
 800b00c:	4293      	cmp	r3, r2
 800b00e:	d022      	beq.n	800b056 <HAL_TIM_IC_Start_IT+0x236>
 800b010:	687b      	ldr	r3, [r7, #4]
 800b012:	681b      	ldr	r3, [r3, #0]
 800b014:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b018:	d01d      	beq.n	800b056 <HAL_TIM_IC_Start_IT+0x236>
 800b01a:	687b      	ldr	r3, [r7, #4]
 800b01c:	681b      	ldr	r3, [r3, #0]
 800b01e:	4a21      	ldr	r2, [pc, #132]	; (800b0a4 <HAL_TIM_IC_Start_IT+0x284>)
 800b020:	4293      	cmp	r3, r2
 800b022:	d018      	beq.n	800b056 <HAL_TIM_IC_Start_IT+0x236>
 800b024:	687b      	ldr	r3, [r7, #4]
 800b026:	681b      	ldr	r3, [r3, #0]
 800b028:	4a1f      	ldr	r2, [pc, #124]	; (800b0a8 <HAL_TIM_IC_Start_IT+0x288>)
 800b02a:	4293      	cmp	r3, r2
 800b02c:	d013      	beq.n	800b056 <HAL_TIM_IC_Start_IT+0x236>
 800b02e:	687b      	ldr	r3, [r7, #4]
 800b030:	681b      	ldr	r3, [r3, #0]
 800b032:	4a1e      	ldr	r2, [pc, #120]	; (800b0ac <HAL_TIM_IC_Start_IT+0x28c>)
 800b034:	4293      	cmp	r3, r2
 800b036:	d00e      	beq.n	800b056 <HAL_TIM_IC_Start_IT+0x236>
 800b038:	687b      	ldr	r3, [r7, #4]
 800b03a:	681b      	ldr	r3, [r3, #0]
 800b03c:	4a1c      	ldr	r2, [pc, #112]	; (800b0b0 <HAL_TIM_IC_Start_IT+0x290>)
 800b03e:	4293      	cmp	r3, r2
 800b040:	d009      	beq.n	800b056 <HAL_TIM_IC_Start_IT+0x236>
 800b042:	687b      	ldr	r3, [r7, #4]
 800b044:	681b      	ldr	r3, [r3, #0]
 800b046:	4a1b      	ldr	r2, [pc, #108]	; (800b0b4 <HAL_TIM_IC_Start_IT+0x294>)
 800b048:	4293      	cmp	r3, r2
 800b04a:	d004      	beq.n	800b056 <HAL_TIM_IC_Start_IT+0x236>
 800b04c:	687b      	ldr	r3, [r7, #4]
 800b04e:	681b      	ldr	r3, [r3, #0]
 800b050:	4a19      	ldr	r2, [pc, #100]	; (800b0b8 <HAL_TIM_IC_Start_IT+0x298>)
 800b052:	4293      	cmp	r3, r2
 800b054:	d115      	bne.n	800b082 <HAL_TIM_IC_Start_IT+0x262>
 800b056:	687b      	ldr	r3, [r7, #4]
 800b058:	681b      	ldr	r3, [r3, #0]
 800b05a:	689a      	ldr	r2, [r3, #8]
 800b05c:	4b17      	ldr	r3, [pc, #92]	; (800b0bc <HAL_TIM_IC_Start_IT+0x29c>)
 800b05e:	4013      	ands	r3, r2
 800b060:	60bb      	str	r3, [r7, #8]
 800b062:	68bb      	ldr	r3, [r7, #8]
 800b064:	2b06      	cmp	r3, #6
 800b066:	d015      	beq.n	800b094 <HAL_TIM_IC_Start_IT+0x274>
 800b068:	68bb      	ldr	r3, [r7, #8]
 800b06a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b06e:	d011      	beq.n	800b094 <HAL_TIM_IC_Start_IT+0x274>
 800b070:	687b      	ldr	r3, [r7, #4]
 800b072:	681b      	ldr	r3, [r3, #0]
 800b074:	681a      	ldr	r2, [r3, #0]
 800b076:	687b      	ldr	r3, [r7, #4]
 800b078:	681b      	ldr	r3, [r3, #0]
 800b07a:	f042 0201 	orr.w	r2, r2, #1
 800b07e:	601a      	str	r2, [r3, #0]
 800b080:	e008      	b.n	800b094 <HAL_TIM_IC_Start_IT+0x274>
 800b082:	687b      	ldr	r3, [r7, #4]
 800b084:	681b      	ldr	r3, [r3, #0]
 800b086:	681a      	ldr	r2, [r3, #0]
 800b088:	687b      	ldr	r3, [r7, #4]
 800b08a:	681b      	ldr	r3, [r3, #0]
 800b08c:	f042 0201 	orr.w	r2, r2, #1
 800b090:	601a      	str	r2, [r3, #0]
 800b092:	e000      	b.n	800b096 <HAL_TIM_IC_Start_IT+0x276>
 800b094:	bf00      	nop
 800b096:	7bfb      	ldrb	r3, [r7, #15]
 800b098:	4618      	mov	r0, r3
 800b09a:	3710      	adds	r7, #16
 800b09c:	46bd      	mov	sp, r7
 800b09e:	bd80      	pop	{r7, pc}
 800b0a0:	40010000 	.word	0x40010000
 800b0a4:	40000400 	.word	0x40000400
 800b0a8:	40000800 	.word	0x40000800
 800b0ac:	40000c00 	.word	0x40000c00
 800b0b0:	40010400 	.word	0x40010400
 800b0b4:	40001800 	.word	0x40001800
 800b0b8:	40014000 	.word	0x40014000
 800b0bc:	00010007 	.word	0x00010007

0800b0c0 <HAL_TIM_IC_Stop_IT>:
 800b0c0:	b580      	push	{r7, lr}
 800b0c2:	b084      	sub	sp, #16
 800b0c4:	af00      	add	r7, sp, #0
 800b0c6:	6078      	str	r0, [r7, #4]
 800b0c8:	6039      	str	r1, [r7, #0]
 800b0ca:	2300      	movs	r3, #0
 800b0cc:	73fb      	strb	r3, [r7, #15]
 800b0ce:	683b      	ldr	r3, [r7, #0]
 800b0d0:	2b0c      	cmp	r3, #12
 800b0d2:	d841      	bhi.n	800b158 <HAL_TIM_IC_Stop_IT+0x98>
 800b0d4:	a201      	add	r2, pc, #4	; (adr r2, 800b0dc <HAL_TIM_IC_Stop_IT+0x1c>)
 800b0d6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b0da:	bf00      	nop
 800b0dc:	0800b111 	.word	0x0800b111
 800b0e0:	0800b159 	.word	0x0800b159
 800b0e4:	0800b159 	.word	0x0800b159
 800b0e8:	0800b159 	.word	0x0800b159
 800b0ec:	0800b123 	.word	0x0800b123
 800b0f0:	0800b159 	.word	0x0800b159
 800b0f4:	0800b159 	.word	0x0800b159
 800b0f8:	0800b159 	.word	0x0800b159
 800b0fc:	0800b135 	.word	0x0800b135
 800b100:	0800b159 	.word	0x0800b159
 800b104:	0800b159 	.word	0x0800b159
 800b108:	0800b159 	.word	0x0800b159
 800b10c:	0800b147 	.word	0x0800b147
 800b110:	687b      	ldr	r3, [r7, #4]
 800b112:	681b      	ldr	r3, [r3, #0]
 800b114:	68da      	ldr	r2, [r3, #12]
 800b116:	687b      	ldr	r3, [r7, #4]
 800b118:	681b      	ldr	r3, [r3, #0]
 800b11a:	f022 0202 	bic.w	r2, r2, #2
 800b11e:	60da      	str	r2, [r3, #12]
 800b120:	e01d      	b.n	800b15e <HAL_TIM_IC_Stop_IT+0x9e>
 800b122:	687b      	ldr	r3, [r7, #4]
 800b124:	681b      	ldr	r3, [r3, #0]
 800b126:	68da      	ldr	r2, [r3, #12]
 800b128:	687b      	ldr	r3, [r7, #4]
 800b12a:	681b      	ldr	r3, [r3, #0]
 800b12c:	f022 0204 	bic.w	r2, r2, #4
 800b130:	60da      	str	r2, [r3, #12]
 800b132:	e014      	b.n	800b15e <HAL_TIM_IC_Stop_IT+0x9e>
 800b134:	687b      	ldr	r3, [r7, #4]
 800b136:	681b      	ldr	r3, [r3, #0]
 800b138:	68da      	ldr	r2, [r3, #12]
 800b13a:	687b      	ldr	r3, [r7, #4]
 800b13c:	681b      	ldr	r3, [r3, #0]
 800b13e:	f022 0208 	bic.w	r2, r2, #8
 800b142:	60da      	str	r2, [r3, #12]
 800b144:	e00b      	b.n	800b15e <HAL_TIM_IC_Stop_IT+0x9e>
 800b146:	687b      	ldr	r3, [r7, #4]
 800b148:	681b      	ldr	r3, [r3, #0]
 800b14a:	68da      	ldr	r2, [r3, #12]
 800b14c:	687b      	ldr	r3, [r7, #4]
 800b14e:	681b      	ldr	r3, [r3, #0]
 800b150:	f022 0210 	bic.w	r2, r2, #16
 800b154:	60da      	str	r2, [r3, #12]
 800b156:	e002      	b.n	800b15e <HAL_TIM_IC_Stop_IT+0x9e>
 800b158:	2301      	movs	r3, #1
 800b15a:	73fb      	strb	r3, [r7, #15]
 800b15c:	bf00      	nop
 800b15e:	7bfb      	ldrb	r3, [r7, #15]
 800b160:	2b00      	cmp	r3, #0
 800b162:	d166      	bne.n	800b232 <HAL_TIM_IC_Stop_IT+0x172>
 800b164:	687b      	ldr	r3, [r7, #4]
 800b166:	681b      	ldr	r3, [r3, #0]
 800b168:	2200      	movs	r2, #0
 800b16a:	6839      	ldr	r1, [r7, #0]
 800b16c:	4618      	mov	r0, r3
 800b16e:	f001 f983 	bl	800c478 <TIM_CCxChannelCmd>
 800b172:	687b      	ldr	r3, [r7, #4]
 800b174:	681b      	ldr	r3, [r3, #0]
 800b176:	6a1a      	ldr	r2, [r3, #32]
 800b178:	f241 1311 	movw	r3, #4369	; 0x1111
 800b17c:	4013      	ands	r3, r2
 800b17e:	2b00      	cmp	r3, #0
 800b180:	d10f      	bne.n	800b1a2 <HAL_TIM_IC_Stop_IT+0xe2>
 800b182:	687b      	ldr	r3, [r7, #4]
 800b184:	681b      	ldr	r3, [r3, #0]
 800b186:	6a1a      	ldr	r2, [r3, #32]
 800b188:	f240 4344 	movw	r3, #1092	; 0x444
 800b18c:	4013      	ands	r3, r2
 800b18e:	2b00      	cmp	r3, #0
 800b190:	d107      	bne.n	800b1a2 <HAL_TIM_IC_Stop_IT+0xe2>
 800b192:	687b      	ldr	r3, [r7, #4]
 800b194:	681b      	ldr	r3, [r3, #0]
 800b196:	681a      	ldr	r2, [r3, #0]
 800b198:	687b      	ldr	r3, [r7, #4]
 800b19a:	681b      	ldr	r3, [r3, #0]
 800b19c:	f022 0201 	bic.w	r2, r2, #1
 800b1a0:	601a      	str	r2, [r3, #0]
 800b1a2:	683b      	ldr	r3, [r7, #0]
 800b1a4:	2b00      	cmp	r3, #0
 800b1a6:	d104      	bne.n	800b1b2 <HAL_TIM_IC_Stop_IT+0xf2>
 800b1a8:	687b      	ldr	r3, [r7, #4]
 800b1aa:	2201      	movs	r2, #1
 800b1ac:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b1b0:	e023      	b.n	800b1fa <HAL_TIM_IC_Stop_IT+0x13a>
 800b1b2:	683b      	ldr	r3, [r7, #0]
 800b1b4:	2b04      	cmp	r3, #4
 800b1b6:	d104      	bne.n	800b1c2 <HAL_TIM_IC_Stop_IT+0x102>
 800b1b8:	687b      	ldr	r3, [r7, #4]
 800b1ba:	2201      	movs	r2, #1
 800b1bc:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800b1c0:	e01b      	b.n	800b1fa <HAL_TIM_IC_Stop_IT+0x13a>
 800b1c2:	683b      	ldr	r3, [r7, #0]
 800b1c4:	2b08      	cmp	r3, #8
 800b1c6:	d104      	bne.n	800b1d2 <HAL_TIM_IC_Stop_IT+0x112>
 800b1c8:	687b      	ldr	r3, [r7, #4]
 800b1ca:	2201      	movs	r2, #1
 800b1cc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800b1d0:	e013      	b.n	800b1fa <HAL_TIM_IC_Stop_IT+0x13a>
 800b1d2:	683b      	ldr	r3, [r7, #0]
 800b1d4:	2b0c      	cmp	r3, #12
 800b1d6:	d104      	bne.n	800b1e2 <HAL_TIM_IC_Stop_IT+0x122>
 800b1d8:	687b      	ldr	r3, [r7, #4]
 800b1da:	2201      	movs	r2, #1
 800b1dc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800b1e0:	e00b      	b.n	800b1fa <HAL_TIM_IC_Stop_IT+0x13a>
 800b1e2:	683b      	ldr	r3, [r7, #0]
 800b1e4:	2b10      	cmp	r3, #16
 800b1e6:	d104      	bne.n	800b1f2 <HAL_TIM_IC_Stop_IT+0x132>
 800b1e8:	687b      	ldr	r3, [r7, #4]
 800b1ea:	2201      	movs	r2, #1
 800b1ec:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800b1f0:	e003      	b.n	800b1fa <HAL_TIM_IC_Stop_IT+0x13a>
 800b1f2:	687b      	ldr	r3, [r7, #4]
 800b1f4:	2201      	movs	r2, #1
 800b1f6:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800b1fa:	683b      	ldr	r3, [r7, #0]
 800b1fc:	2b00      	cmp	r3, #0
 800b1fe:	d104      	bne.n	800b20a <HAL_TIM_IC_Stop_IT+0x14a>
 800b200:	687b      	ldr	r3, [r7, #4]
 800b202:	2201      	movs	r2, #1
 800b204:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b208:	e013      	b.n	800b232 <HAL_TIM_IC_Stop_IT+0x172>
 800b20a:	683b      	ldr	r3, [r7, #0]
 800b20c:	2b04      	cmp	r3, #4
 800b20e:	d104      	bne.n	800b21a <HAL_TIM_IC_Stop_IT+0x15a>
 800b210:	687b      	ldr	r3, [r7, #4]
 800b212:	2201      	movs	r2, #1
 800b214:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b218:	e00b      	b.n	800b232 <HAL_TIM_IC_Stop_IT+0x172>
 800b21a:	683b      	ldr	r3, [r7, #0]
 800b21c:	2b08      	cmp	r3, #8
 800b21e:	d104      	bne.n	800b22a <HAL_TIM_IC_Stop_IT+0x16a>
 800b220:	687b      	ldr	r3, [r7, #4]
 800b222:	2201      	movs	r2, #1
 800b224:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800b228:	e003      	b.n	800b232 <HAL_TIM_IC_Stop_IT+0x172>
 800b22a:	687b      	ldr	r3, [r7, #4]
 800b22c:	2201      	movs	r2, #1
 800b22e:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 800b232:	7bfb      	ldrb	r3, [r7, #15]
 800b234:	4618      	mov	r0, r3
 800b236:	3710      	adds	r7, #16
 800b238:	46bd      	mov	sp, r7
 800b23a:	bd80      	pop	{r7, pc}

0800b23c <HAL_TIM_IRQHandler>:
 800b23c:	b580      	push	{r7, lr}
 800b23e:	b082      	sub	sp, #8
 800b240:	af00      	add	r7, sp, #0
 800b242:	6078      	str	r0, [r7, #4]
 800b244:	687b      	ldr	r3, [r7, #4]
 800b246:	681b      	ldr	r3, [r3, #0]
 800b248:	691b      	ldr	r3, [r3, #16]
 800b24a:	f003 0302 	and.w	r3, r3, #2
 800b24e:	2b02      	cmp	r3, #2
 800b250:	d122      	bne.n	800b298 <HAL_TIM_IRQHandler+0x5c>
 800b252:	687b      	ldr	r3, [r7, #4]
 800b254:	681b      	ldr	r3, [r3, #0]
 800b256:	68db      	ldr	r3, [r3, #12]
 800b258:	f003 0302 	and.w	r3, r3, #2
 800b25c:	2b02      	cmp	r3, #2
 800b25e:	d11b      	bne.n	800b298 <HAL_TIM_IRQHandler+0x5c>
 800b260:	687b      	ldr	r3, [r7, #4]
 800b262:	681b      	ldr	r3, [r3, #0]
 800b264:	f06f 0202 	mvn.w	r2, #2
 800b268:	611a      	str	r2, [r3, #16]
 800b26a:	687b      	ldr	r3, [r7, #4]
 800b26c:	2201      	movs	r2, #1
 800b26e:	771a      	strb	r2, [r3, #28]
 800b270:	687b      	ldr	r3, [r7, #4]
 800b272:	681b      	ldr	r3, [r3, #0]
 800b274:	699b      	ldr	r3, [r3, #24]
 800b276:	f003 0303 	and.w	r3, r3, #3
 800b27a:	2b00      	cmp	r3, #0
 800b27c:	d003      	beq.n	800b286 <HAL_TIM_IRQHandler+0x4a>
 800b27e:	6878      	ldr	r0, [r7, #4]
 800b280:	f7f8 f9a8 	bl	80035d4 <HAL_TIM_IC_CaptureCallback>
 800b284:	e005      	b.n	800b292 <HAL_TIM_IRQHandler+0x56>
 800b286:	6878      	ldr	r0, [r7, #4]
 800b288:	f000 fba0 	bl	800b9cc <HAL_TIM_OC_DelayElapsedCallback>
 800b28c:	6878      	ldr	r0, [r7, #4]
 800b28e:	f000 fba7 	bl	800b9e0 <HAL_TIM_PWM_PulseFinishedCallback>
 800b292:	687b      	ldr	r3, [r7, #4]
 800b294:	2200      	movs	r2, #0
 800b296:	771a      	strb	r2, [r3, #28]
 800b298:	687b      	ldr	r3, [r7, #4]
 800b29a:	681b      	ldr	r3, [r3, #0]
 800b29c:	691b      	ldr	r3, [r3, #16]
 800b29e:	f003 0304 	and.w	r3, r3, #4
 800b2a2:	2b04      	cmp	r3, #4
 800b2a4:	d122      	bne.n	800b2ec <HAL_TIM_IRQHandler+0xb0>
 800b2a6:	687b      	ldr	r3, [r7, #4]
 800b2a8:	681b      	ldr	r3, [r3, #0]
 800b2aa:	68db      	ldr	r3, [r3, #12]
 800b2ac:	f003 0304 	and.w	r3, r3, #4
 800b2b0:	2b04      	cmp	r3, #4
 800b2b2:	d11b      	bne.n	800b2ec <HAL_TIM_IRQHandler+0xb0>
 800b2b4:	687b      	ldr	r3, [r7, #4]
 800b2b6:	681b      	ldr	r3, [r3, #0]
 800b2b8:	f06f 0204 	mvn.w	r2, #4
 800b2bc:	611a      	str	r2, [r3, #16]
 800b2be:	687b      	ldr	r3, [r7, #4]
 800b2c0:	2202      	movs	r2, #2
 800b2c2:	771a      	strb	r2, [r3, #28]
 800b2c4:	687b      	ldr	r3, [r7, #4]
 800b2c6:	681b      	ldr	r3, [r3, #0]
 800b2c8:	699b      	ldr	r3, [r3, #24]
 800b2ca:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800b2ce:	2b00      	cmp	r3, #0
 800b2d0:	d003      	beq.n	800b2da <HAL_TIM_IRQHandler+0x9e>
 800b2d2:	6878      	ldr	r0, [r7, #4]
 800b2d4:	f7f8 f97e 	bl	80035d4 <HAL_TIM_IC_CaptureCallback>
 800b2d8:	e005      	b.n	800b2e6 <HAL_TIM_IRQHandler+0xaa>
 800b2da:	6878      	ldr	r0, [r7, #4]
 800b2dc:	f000 fb76 	bl	800b9cc <HAL_TIM_OC_DelayElapsedCallback>
 800b2e0:	6878      	ldr	r0, [r7, #4]
 800b2e2:	f000 fb7d 	bl	800b9e0 <HAL_TIM_PWM_PulseFinishedCallback>
 800b2e6:	687b      	ldr	r3, [r7, #4]
 800b2e8:	2200      	movs	r2, #0
 800b2ea:	771a      	strb	r2, [r3, #28]
 800b2ec:	687b      	ldr	r3, [r7, #4]
 800b2ee:	681b      	ldr	r3, [r3, #0]
 800b2f0:	691b      	ldr	r3, [r3, #16]
 800b2f2:	f003 0308 	and.w	r3, r3, #8
 800b2f6:	2b08      	cmp	r3, #8
 800b2f8:	d122      	bne.n	800b340 <HAL_TIM_IRQHandler+0x104>
 800b2fa:	687b      	ldr	r3, [r7, #4]
 800b2fc:	681b      	ldr	r3, [r3, #0]
 800b2fe:	68db      	ldr	r3, [r3, #12]
 800b300:	f003 0308 	and.w	r3, r3, #8
 800b304:	2b08      	cmp	r3, #8
 800b306:	d11b      	bne.n	800b340 <HAL_TIM_IRQHandler+0x104>
 800b308:	687b      	ldr	r3, [r7, #4]
 800b30a:	681b      	ldr	r3, [r3, #0]
 800b30c:	f06f 0208 	mvn.w	r2, #8
 800b310:	611a      	str	r2, [r3, #16]
 800b312:	687b      	ldr	r3, [r7, #4]
 800b314:	2204      	movs	r2, #4
 800b316:	771a      	strb	r2, [r3, #28]
 800b318:	687b      	ldr	r3, [r7, #4]
 800b31a:	681b      	ldr	r3, [r3, #0]
 800b31c:	69db      	ldr	r3, [r3, #28]
 800b31e:	f003 0303 	and.w	r3, r3, #3
 800b322:	2b00      	cmp	r3, #0
 800b324:	d003      	beq.n	800b32e <HAL_TIM_IRQHandler+0xf2>
 800b326:	6878      	ldr	r0, [r7, #4]
 800b328:	f7f8 f954 	bl	80035d4 <HAL_TIM_IC_CaptureCallback>
 800b32c:	e005      	b.n	800b33a <HAL_TIM_IRQHandler+0xfe>
 800b32e:	6878      	ldr	r0, [r7, #4]
 800b330:	f000 fb4c 	bl	800b9cc <HAL_TIM_OC_DelayElapsedCallback>
 800b334:	6878      	ldr	r0, [r7, #4]
 800b336:	f000 fb53 	bl	800b9e0 <HAL_TIM_PWM_PulseFinishedCallback>
 800b33a:	687b      	ldr	r3, [r7, #4]
 800b33c:	2200      	movs	r2, #0
 800b33e:	771a      	strb	r2, [r3, #28]
 800b340:	687b      	ldr	r3, [r7, #4]
 800b342:	681b      	ldr	r3, [r3, #0]
 800b344:	691b      	ldr	r3, [r3, #16]
 800b346:	f003 0310 	and.w	r3, r3, #16
 800b34a:	2b10      	cmp	r3, #16
 800b34c:	d122      	bne.n	800b394 <HAL_TIM_IRQHandler+0x158>
 800b34e:	687b      	ldr	r3, [r7, #4]
 800b350:	681b      	ldr	r3, [r3, #0]
 800b352:	68db      	ldr	r3, [r3, #12]
 800b354:	f003 0310 	and.w	r3, r3, #16
 800b358:	2b10      	cmp	r3, #16
 800b35a:	d11b      	bne.n	800b394 <HAL_TIM_IRQHandler+0x158>
 800b35c:	687b      	ldr	r3, [r7, #4]
 800b35e:	681b      	ldr	r3, [r3, #0]
 800b360:	f06f 0210 	mvn.w	r2, #16
 800b364:	611a      	str	r2, [r3, #16]
 800b366:	687b      	ldr	r3, [r7, #4]
 800b368:	2208      	movs	r2, #8
 800b36a:	771a      	strb	r2, [r3, #28]
 800b36c:	687b      	ldr	r3, [r7, #4]
 800b36e:	681b      	ldr	r3, [r3, #0]
 800b370:	69db      	ldr	r3, [r3, #28]
 800b372:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800b376:	2b00      	cmp	r3, #0
 800b378:	d003      	beq.n	800b382 <HAL_TIM_IRQHandler+0x146>
 800b37a:	6878      	ldr	r0, [r7, #4]
 800b37c:	f7f8 f92a 	bl	80035d4 <HAL_TIM_IC_CaptureCallback>
 800b380:	e005      	b.n	800b38e <HAL_TIM_IRQHandler+0x152>
 800b382:	6878      	ldr	r0, [r7, #4]
 800b384:	f000 fb22 	bl	800b9cc <HAL_TIM_OC_DelayElapsedCallback>
 800b388:	6878      	ldr	r0, [r7, #4]
 800b38a:	f000 fb29 	bl	800b9e0 <HAL_TIM_PWM_PulseFinishedCallback>
 800b38e:	687b      	ldr	r3, [r7, #4]
 800b390:	2200      	movs	r2, #0
 800b392:	771a      	strb	r2, [r3, #28]
 800b394:	687b      	ldr	r3, [r7, #4]
 800b396:	681b      	ldr	r3, [r3, #0]
 800b398:	691b      	ldr	r3, [r3, #16]
 800b39a:	f003 0301 	and.w	r3, r3, #1
 800b39e:	2b01      	cmp	r3, #1
 800b3a0:	d10e      	bne.n	800b3c0 <HAL_TIM_IRQHandler+0x184>
 800b3a2:	687b      	ldr	r3, [r7, #4]
 800b3a4:	681b      	ldr	r3, [r3, #0]
 800b3a6:	68db      	ldr	r3, [r3, #12]
 800b3a8:	f003 0301 	and.w	r3, r3, #1
 800b3ac:	2b01      	cmp	r3, #1
 800b3ae:	d107      	bne.n	800b3c0 <HAL_TIM_IRQHandler+0x184>
 800b3b0:	687b      	ldr	r3, [r7, #4]
 800b3b2:	681b      	ldr	r3, [r3, #0]
 800b3b4:	f06f 0201 	mvn.w	r2, #1
 800b3b8:	611a      	str	r2, [r3, #16]
 800b3ba:	6878      	ldr	r0, [r7, #4]
 800b3bc:	f7f8 f984 	bl	80036c8 <HAL_TIM_PeriodElapsedCallback>
 800b3c0:	687b      	ldr	r3, [r7, #4]
 800b3c2:	681b      	ldr	r3, [r3, #0]
 800b3c4:	691b      	ldr	r3, [r3, #16]
 800b3c6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b3ca:	2b80      	cmp	r3, #128	; 0x80
 800b3cc:	d10e      	bne.n	800b3ec <HAL_TIM_IRQHandler+0x1b0>
 800b3ce:	687b      	ldr	r3, [r7, #4]
 800b3d0:	681b      	ldr	r3, [r3, #0]
 800b3d2:	68db      	ldr	r3, [r3, #12]
 800b3d4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b3d8:	2b80      	cmp	r3, #128	; 0x80
 800b3da:	d107      	bne.n	800b3ec <HAL_TIM_IRQHandler+0x1b0>
 800b3dc:	687b      	ldr	r3, [r7, #4]
 800b3de:	681b      	ldr	r3, [r3, #0]
 800b3e0:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800b3e4:	611a      	str	r2, [r3, #16]
 800b3e6:	6878      	ldr	r0, [r7, #4]
 800b3e8:	f001 f904 	bl	800c5f4 <HAL_TIMEx_BreakCallback>
 800b3ec:	687b      	ldr	r3, [r7, #4]
 800b3ee:	681b      	ldr	r3, [r3, #0]
 800b3f0:	691b      	ldr	r3, [r3, #16]
 800b3f2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b3f6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b3fa:	d10e      	bne.n	800b41a <HAL_TIM_IRQHandler+0x1de>
 800b3fc:	687b      	ldr	r3, [r7, #4]
 800b3fe:	681b      	ldr	r3, [r3, #0]
 800b400:	68db      	ldr	r3, [r3, #12]
 800b402:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b406:	2b80      	cmp	r3, #128	; 0x80
 800b408:	d107      	bne.n	800b41a <HAL_TIM_IRQHandler+0x1de>
 800b40a:	687b      	ldr	r3, [r7, #4]
 800b40c:	681b      	ldr	r3, [r3, #0]
 800b40e:	f46f 7280 	mvn.w	r2, #256	; 0x100
 800b412:	611a      	str	r2, [r3, #16]
 800b414:	6878      	ldr	r0, [r7, #4]
 800b416:	f001 f8f7 	bl	800c608 <HAL_TIMEx_Break2Callback>
 800b41a:	687b      	ldr	r3, [r7, #4]
 800b41c:	681b      	ldr	r3, [r3, #0]
 800b41e:	691b      	ldr	r3, [r3, #16]
 800b420:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b424:	2b40      	cmp	r3, #64	; 0x40
 800b426:	d10e      	bne.n	800b446 <HAL_TIM_IRQHandler+0x20a>
 800b428:	687b      	ldr	r3, [r7, #4]
 800b42a:	681b      	ldr	r3, [r3, #0]
 800b42c:	68db      	ldr	r3, [r3, #12]
 800b42e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b432:	2b40      	cmp	r3, #64	; 0x40
 800b434:	d107      	bne.n	800b446 <HAL_TIM_IRQHandler+0x20a>
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	681b      	ldr	r3, [r3, #0]
 800b43a:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800b43e:	611a      	str	r2, [r3, #16]
 800b440:	6878      	ldr	r0, [r7, #4]
 800b442:	f000 fad7 	bl	800b9f4 <HAL_TIM_TriggerCallback>
 800b446:	687b      	ldr	r3, [r7, #4]
 800b448:	681b      	ldr	r3, [r3, #0]
 800b44a:	691b      	ldr	r3, [r3, #16]
 800b44c:	f003 0320 	and.w	r3, r3, #32
 800b450:	2b20      	cmp	r3, #32
 800b452:	d10e      	bne.n	800b472 <HAL_TIM_IRQHandler+0x236>
 800b454:	687b      	ldr	r3, [r7, #4]
 800b456:	681b      	ldr	r3, [r3, #0]
 800b458:	68db      	ldr	r3, [r3, #12]
 800b45a:	f003 0320 	and.w	r3, r3, #32
 800b45e:	2b20      	cmp	r3, #32
 800b460:	d107      	bne.n	800b472 <HAL_TIM_IRQHandler+0x236>
 800b462:	687b      	ldr	r3, [r7, #4]
 800b464:	681b      	ldr	r3, [r3, #0]
 800b466:	f06f 0220 	mvn.w	r2, #32
 800b46a:	611a      	str	r2, [r3, #16]
 800b46c:	6878      	ldr	r0, [r7, #4]
 800b46e:	f001 f8b7 	bl	800c5e0 <HAL_TIMEx_CommutCallback>
 800b472:	bf00      	nop
 800b474:	3708      	adds	r7, #8
 800b476:	46bd      	mov	sp, r7
 800b478:	bd80      	pop	{r7, pc}

0800b47a <HAL_TIM_IC_ConfigChannel>:
 800b47a:	b580      	push	{r7, lr}
 800b47c:	b086      	sub	sp, #24
 800b47e:	af00      	add	r7, sp, #0
 800b480:	60f8      	str	r0, [r7, #12]
 800b482:	60b9      	str	r1, [r7, #8]
 800b484:	607a      	str	r2, [r7, #4]
 800b486:	2300      	movs	r3, #0
 800b488:	75fb      	strb	r3, [r7, #23]
 800b48a:	68fb      	ldr	r3, [r7, #12]
 800b48c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b490:	2b01      	cmp	r3, #1
 800b492:	d101      	bne.n	800b498 <HAL_TIM_IC_ConfigChannel+0x1e>
 800b494:	2302      	movs	r3, #2
 800b496:	e088      	b.n	800b5aa <HAL_TIM_IC_ConfigChannel+0x130>
 800b498:	68fb      	ldr	r3, [r7, #12]
 800b49a:	2201      	movs	r2, #1
 800b49c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b4a0:	687b      	ldr	r3, [r7, #4]
 800b4a2:	2b00      	cmp	r3, #0
 800b4a4:	d11b      	bne.n	800b4de <HAL_TIM_IC_ConfigChannel+0x64>
 800b4a6:	68fb      	ldr	r3, [r7, #12]
 800b4a8:	6818      	ldr	r0, [r3, #0]
 800b4aa:	68bb      	ldr	r3, [r7, #8]
 800b4ac:	6819      	ldr	r1, [r3, #0]
 800b4ae:	68bb      	ldr	r3, [r7, #8]
 800b4b0:	685a      	ldr	r2, [r3, #4]
 800b4b2:	68bb      	ldr	r3, [r7, #8]
 800b4b4:	68db      	ldr	r3, [r3, #12]
 800b4b6:	f000 fe17 	bl	800c0e8 <TIM_TI1_SetConfig>
 800b4ba:	68fb      	ldr	r3, [r7, #12]
 800b4bc:	681b      	ldr	r3, [r3, #0]
 800b4be:	699a      	ldr	r2, [r3, #24]
 800b4c0:	68fb      	ldr	r3, [r7, #12]
 800b4c2:	681b      	ldr	r3, [r3, #0]
 800b4c4:	f022 020c 	bic.w	r2, r2, #12
 800b4c8:	619a      	str	r2, [r3, #24]
 800b4ca:	68fb      	ldr	r3, [r7, #12]
 800b4cc:	681b      	ldr	r3, [r3, #0]
 800b4ce:	6999      	ldr	r1, [r3, #24]
 800b4d0:	68bb      	ldr	r3, [r7, #8]
 800b4d2:	689a      	ldr	r2, [r3, #8]
 800b4d4:	68fb      	ldr	r3, [r7, #12]
 800b4d6:	681b      	ldr	r3, [r3, #0]
 800b4d8:	430a      	orrs	r2, r1
 800b4da:	619a      	str	r2, [r3, #24]
 800b4dc:	e060      	b.n	800b5a0 <HAL_TIM_IC_ConfigChannel+0x126>
 800b4de:	687b      	ldr	r3, [r7, #4]
 800b4e0:	2b04      	cmp	r3, #4
 800b4e2:	d11c      	bne.n	800b51e <HAL_TIM_IC_ConfigChannel+0xa4>
 800b4e4:	68fb      	ldr	r3, [r7, #12]
 800b4e6:	6818      	ldr	r0, [r3, #0]
 800b4e8:	68bb      	ldr	r3, [r7, #8]
 800b4ea:	6819      	ldr	r1, [r3, #0]
 800b4ec:	68bb      	ldr	r3, [r7, #8]
 800b4ee:	685a      	ldr	r2, [r3, #4]
 800b4f0:	68bb      	ldr	r3, [r7, #8]
 800b4f2:	68db      	ldr	r3, [r3, #12]
 800b4f4:	f000 fe9b 	bl	800c22e <TIM_TI2_SetConfig>
 800b4f8:	68fb      	ldr	r3, [r7, #12]
 800b4fa:	681b      	ldr	r3, [r3, #0]
 800b4fc:	699a      	ldr	r2, [r3, #24]
 800b4fe:	68fb      	ldr	r3, [r7, #12]
 800b500:	681b      	ldr	r3, [r3, #0]
 800b502:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800b506:	619a      	str	r2, [r3, #24]
 800b508:	68fb      	ldr	r3, [r7, #12]
 800b50a:	681b      	ldr	r3, [r3, #0]
 800b50c:	6999      	ldr	r1, [r3, #24]
 800b50e:	68bb      	ldr	r3, [r7, #8]
 800b510:	689b      	ldr	r3, [r3, #8]
 800b512:	021a      	lsls	r2, r3, #8
 800b514:	68fb      	ldr	r3, [r7, #12]
 800b516:	681b      	ldr	r3, [r3, #0]
 800b518:	430a      	orrs	r2, r1
 800b51a:	619a      	str	r2, [r3, #24]
 800b51c:	e040      	b.n	800b5a0 <HAL_TIM_IC_ConfigChannel+0x126>
 800b51e:	687b      	ldr	r3, [r7, #4]
 800b520:	2b08      	cmp	r3, #8
 800b522:	d11b      	bne.n	800b55c <HAL_TIM_IC_ConfigChannel+0xe2>
 800b524:	68fb      	ldr	r3, [r7, #12]
 800b526:	6818      	ldr	r0, [r3, #0]
 800b528:	68bb      	ldr	r3, [r7, #8]
 800b52a:	6819      	ldr	r1, [r3, #0]
 800b52c:	68bb      	ldr	r3, [r7, #8]
 800b52e:	685a      	ldr	r2, [r3, #4]
 800b530:	68bb      	ldr	r3, [r7, #8]
 800b532:	68db      	ldr	r3, [r3, #12]
 800b534:	f000 fee8 	bl	800c308 <TIM_TI3_SetConfig>
 800b538:	68fb      	ldr	r3, [r7, #12]
 800b53a:	681b      	ldr	r3, [r3, #0]
 800b53c:	69da      	ldr	r2, [r3, #28]
 800b53e:	68fb      	ldr	r3, [r7, #12]
 800b540:	681b      	ldr	r3, [r3, #0]
 800b542:	f022 020c 	bic.w	r2, r2, #12
 800b546:	61da      	str	r2, [r3, #28]
 800b548:	68fb      	ldr	r3, [r7, #12]
 800b54a:	681b      	ldr	r3, [r3, #0]
 800b54c:	69d9      	ldr	r1, [r3, #28]
 800b54e:	68bb      	ldr	r3, [r7, #8]
 800b550:	689a      	ldr	r2, [r3, #8]
 800b552:	68fb      	ldr	r3, [r7, #12]
 800b554:	681b      	ldr	r3, [r3, #0]
 800b556:	430a      	orrs	r2, r1
 800b558:	61da      	str	r2, [r3, #28]
 800b55a:	e021      	b.n	800b5a0 <HAL_TIM_IC_ConfigChannel+0x126>
 800b55c:	687b      	ldr	r3, [r7, #4]
 800b55e:	2b0c      	cmp	r3, #12
 800b560:	d11c      	bne.n	800b59c <HAL_TIM_IC_ConfigChannel+0x122>
 800b562:	68fb      	ldr	r3, [r7, #12]
 800b564:	6818      	ldr	r0, [r3, #0]
 800b566:	68bb      	ldr	r3, [r7, #8]
 800b568:	6819      	ldr	r1, [r3, #0]
 800b56a:	68bb      	ldr	r3, [r7, #8]
 800b56c:	685a      	ldr	r2, [r3, #4]
 800b56e:	68bb      	ldr	r3, [r7, #8]
 800b570:	68db      	ldr	r3, [r3, #12]
 800b572:	f000 ff05 	bl	800c380 <TIM_TI4_SetConfig>
 800b576:	68fb      	ldr	r3, [r7, #12]
 800b578:	681b      	ldr	r3, [r3, #0]
 800b57a:	69da      	ldr	r2, [r3, #28]
 800b57c:	68fb      	ldr	r3, [r7, #12]
 800b57e:	681b      	ldr	r3, [r3, #0]
 800b580:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 800b584:	61da      	str	r2, [r3, #28]
 800b586:	68fb      	ldr	r3, [r7, #12]
 800b588:	681b      	ldr	r3, [r3, #0]
 800b58a:	69d9      	ldr	r1, [r3, #28]
 800b58c:	68bb      	ldr	r3, [r7, #8]
 800b58e:	689b      	ldr	r3, [r3, #8]
 800b590:	021a      	lsls	r2, r3, #8
 800b592:	68fb      	ldr	r3, [r7, #12]
 800b594:	681b      	ldr	r3, [r3, #0]
 800b596:	430a      	orrs	r2, r1
 800b598:	61da      	str	r2, [r3, #28]
 800b59a:	e001      	b.n	800b5a0 <HAL_TIM_IC_ConfigChannel+0x126>
 800b59c:	2301      	movs	r3, #1
 800b59e:	75fb      	strb	r3, [r7, #23]
 800b5a0:	68fb      	ldr	r3, [r7, #12]
 800b5a2:	2200      	movs	r2, #0
 800b5a4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b5a8:	7dfb      	ldrb	r3, [r7, #23]
 800b5aa:	4618      	mov	r0, r3
 800b5ac:	3718      	adds	r7, #24
 800b5ae:	46bd      	mov	sp, r7
 800b5b0:	bd80      	pop	{r7, pc}
	...

0800b5b4 <HAL_TIM_PWM_ConfigChannel>:
 800b5b4:	b580      	push	{r7, lr}
 800b5b6:	b086      	sub	sp, #24
 800b5b8:	af00      	add	r7, sp, #0
 800b5ba:	60f8      	str	r0, [r7, #12]
 800b5bc:	60b9      	str	r1, [r7, #8]
 800b5be:	607a      	str	r2, [r7, #4]
 800b5c0:	2300      	movs	r3, #0
 800b5c2:	75fb      	strb	r3, [r7, #23]
 800b5c4:	68fb      	ldr	r3, [r7, #12]
 800b5c6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b5ca:	2b01      	cmp	r3, #1
 800b5cc:	d101      	bne.n	800b5d2 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800b5ce:	2302      	movs	r3, #2
 800b5d0:	e0ff      	b.n	800b7d2 <HAL_TIM_PWM_ConfigChannel+0x21e>
 800b5d2:	68fb      	ldr	r3, [r7, #12]
 800b5d4:	2201      	movs	r2, #1
 800b5d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b5da:	687b      	ldr	r3, [r7, #4]
 800b5dc:	2b14      	cmp	r3, #20
 800b5de:	f200 80f0 	bhi.w	800b7c2 <HAL_TIM_PWM_ConfigChannel+0x20e>
 800b5e2:	a201      	add	r2, pc, #4	; (adr r2, 800b5e8 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800b5e4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b5e8:	0800b63d 	.word	0x0800b63d
 800b5ec:	0800b7c3 	.word	0x0800b7c3
 800b5f0:	0800b7c3 	.word	0x0800b7c3
 800b5f4:	0800b7c3 	.word	0x0800b7c3
 800b5f8:	0800b67d 	.word	0x0800b67d
 800b5fc:	0800b7c3 	.word	0x0800b7c3
 800b600:	0800b7c3 	.word	0x0800b7c3
 800b604:	0800b7c3 	.word	0x0800b7c3
 800b608:	0800b6bf 	.word	0x0800b6bf
 800b60c:	0800b7c3 	.word	0x0800b7c3
 800b610:	0800b7c3 	.word	0x0800b7c3
 800b614:	0800b7c3 	.word	0x0800b7c3
 800b618:	0800b6ff 	.word	0x0800b6ff
 800b61c:	0800b7c3 	.word	0x0800b7c3
 800b620:	0800b7c3 	.word	0x0800b7c3
 800b624:	0800b7c3 	.word	0x0800b7c3
 800b628:	0800b741 	.word	0x0800b741
 800b62c:	0800b7c3 	.word	0x0800b7c3
 800b630:	0800b7c3 	.word	0x0800b7c3
 800b634:	0800b7c3 	.word	0x0800b7c3
 800b638:	0800b781 	.word	0x0800b781
 800b63c:	68fb      	ldr	r3, [r7, #12]
 800b63e:	681b      	ldr	r3, [r3, #0]
 800b640:	68b9      	ldr	r1, [r7, #8]
 800b642:	4618      	mov	r0, r3
 800b644:	f000 fa7a 	bl	800bb3c <TIM_OC1_SetConfig>
 800b648:	68fb      	ldr	r3, [r7, #12]
 800b64a:	681b      	ldr	r3, [r3, #0]
 800b64c:	699a      	ldr	r2, [r3, #24]
 800b64e:	68fb      	ldr	r3, [r7, #12]
 800b650:	681b      	ldr	r3, [r3, #0]
 800b652:	f042 0208 	orr.w	r2, r2, #8
 800b656:	619a      	str	r2, [r3, #24]
 800b658:	68fb      	ldr	r3, [r7, #12]
 800b65a:	681b      	ldr	r3, [r3, #0]
 800b65c:	699a      	ldr	r2, [r3, #24]
 800b65e:	68fb      	ldr	r3, [r7, #12]
 800b660:	681b      	ldr	r3, [r3, #0]
 800b662:	f022 0204 	bic.w	r2, r2, #4
 800b666:	619a      	str	r2, [r3, #24]
 800b668:	68fb      	ldr	r3, [r7, #12]
 800b66a:	681b      	ldr	r3, [r3, #0]
 800b66c:	6999      	ldr	r1, [r3, #24]
 800b66e:	68bb      	ldr	r3, [r7, #8]
 800b670:	691a      	ldr	r2, [r3, #16]
 800b672:	68fb      	ldr	r3, [r7, #12]
 800b674:	681b      	ldr	r3, [r3, #0]
 800b676:	430a      	orrs	r2, r1
 800b678:	619a      	str	r2, [r3, #24]
 800b67a:	e0a5      	b.n	800b7c8 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b67c:	68fb      	ldr	r3, [r7, #12]
 800b67e:	681b      	ldr	r3, [r3, #0]
 800b680:	68b9      	ldr	r1, [r7, #8]
 800b682:	4618      	mov	r0, r3
 800b684:	f000 faea 	bl	800bc5c <TIM_OC2_SetConfig>
 800b688:	68fb      	ldr	r3, [r7, #12]
 800b68a:	681b      	ldr	r3, [r3, #0]
 800b68c:	699a      	ldr	r2, [r3, #24]
 800b68e:	68fb      	ldr	r3, [r7, #12]
 800b690:	681b      	ldr	r3, [r3, #0]
 800b692:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b696:	619a      	str	r2, [r3, #24]
 800b698:	68fb      	ldr	r3, [r7, #12]
 800b69a:	681b      	ldr	r3, [r3, #0]
 800b69c:	699a      	ldr	r2, [r3, #24]
 800b69e:	68fb      	ldr	r3, [r7, #12]
 800b6a0:	681b      	ldr	r3, [r3, #0]
 800b6a2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b6a6:	619a      	str	r2, [r3, #24]
 800b6a8:	68fb      	ldr	r3, [r7, #12]
 800b6aa:	681b      	ldr	r3, [r3, #0]
 800b6ac:	6999      	ldr	r1, [r3, #24]
 800b6ae:	68bb      	ldr	r3, [r7, #8]
 800b6b0:	691b      	ldr	r3, [r3, #16]
 800b6b2:	021a      	lsls	r2, r3, #8
 800b6b4:	68fb      	ldr	r3, [r7, #12]
 800b6b6:	681b      	ldr	r3, [r3, #0]
 800b6b8:	430a      	orrs	r2, r1
 800b6ba:	619a      	str	r2, [r3, #24]
 800b6bc:	e084      	b.n	800b7c8 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b6be:	68fb      	ldr	r3, [r7, #12]
 800b6c0:	681b      	ldr	r3, [r3, #0]
 800b6c2:	68b9      	ldr	r1, [r7, #8]
 800b6c4:	4618      	mov	r0, r3
 800b6c6:	f000 fb53 	bl	800bd70 <TIM_OC3_SetConfig>
 800b6ca:	68fb      	ldr	r3, [r7, #12]
 800b6cc:	681b      	ldr	r3, [r3, #0]
 800b6ce:	69da      	ldr	r2, [r3, #28]
 800b6d0:	68fb      	ldr	r3, [r7, #12]
 800b6d2:	681b      	ldr	r3, [r3, #0]
 800b6d4:	f042 0208 	orr.w	r2, r2, #8
 800b6d8:	61da      	str	r2, [r3, #28]
 800b6da:	68fb      	ldr	r3, [r7, #12]
 800b6dc:	681b      	ldr	r3, [r3, #0]
 800b6de:	69da      	ldr	r2, [r3, #28]
 800b6e0:	68fb      	ldr	r3, [r7, #12]
 800b6e2:	681b      	ldr	r3, [r3, #0]
 800b6e4:	f022 0204 	bic.w	r2, r2, #4
 800b6e8:	61da      	str	r2, [r3, #28]
 800b6ea:	68fb      	ldr	r3, [r7, #12]
 800b6ec:	681b      	ldr	r3, [r3, #0]
 800b6ee:	69d9      	ldr	r1, [r3, #28]
 800b6f0:	68bb      	ldr	r3, [r7, #8]
 800b6f2:	691a      	ldr	r2, [r3, #16]
 800b6f4:	68fb      	ldr	r3, [r7, #12]
 800b6f6:	681b      	ldr	r3, [r3, #0]
 800b6f8:	430a      	orrs	r2, r1
 800b6fa:	61da      	str	r2, [r3, #28]
 800b6fc:	e064      	b.n	800b7c8 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b6fe:	68fb      	ldr	r3, [r7, #12]
 800b700:	681b      	ldr	r3, [r3, #0]
 800b702:	68b9      	ldr	r1, [r7, #8]
 800b704:	4618      	mov	r0, r3
 800b706:	f000 fbbb 	bl	800be80 <TIM_OC4_SetConfig>
 800b70a:	68fb      	ldr	r3, [r7, #12]
 800b70c:	681b      	ldr	r3, [r3, #0]
 800b70e:	69da      	ldr	r2, [r3, #28]
 800b710:	68fb      	ldr	r3, [r7, #12]
 800b712:	681b      	ldr	r3, [r3, #0]
 800b714:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b718:	61da      	str	r2, [r3, #28]
 800b71a:	68fb      	ldr	r3, [r7, #12]
 800b71c:	681b      	ldr	r3, [r3, #0]
 800b71e:	69da      	ldr	r2, [r3, #28]
 800b720:	68fb      	ldr	r3, [r7, #12]
 800b722:	681b      	ldr	r3, [r3, #0]
 800b724:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b728:	61da      	str	r2, [r3, #28]
 800b72a:	68fb      	ldr	r3, [r7, #12]
 800b72c:	681b      	ldr	r3, [r3, #0]
 800b72e:	69d9      	ldr	r1, [r3, #28]
 800b730:	68bb      	ldr	r3, [r7, #8]
 800b732:	691b      	ldr	r3, [r3, #16]
 800b734:	021a      	lsls	r2, r3, #8
 800b736:	68fb      	ldr	r3, [r7, #12]
 800b738:	681b      	ldr	r3, [r3, #0]
 800b73a:	430a      	orrs	r2, r1
 800b73c:	61da      	str	r2, [r3, #28]
 800b73e:	e043      	b.n	800b7c8 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b740:	68fb      	ldr	r3, [r7, #12]
 800b742:	681b      	ldr	r3, [r3, #0]
 800b744:	68b9      	ldr	r1, [r7, #8]
 800b746:	4618      	mov	r0, r3
 800b748:	f000 fc04 	bl	800bf54 <TIM_OC5_SetConfig>
 800b74c:	68fb      	ldr	r3, [r7, #12]
 800b74e:	681b      	ldr	r3, [r3, #0]
 800b750:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800b752:	68fb      	ldr	r3, [r7, #12]
 800b754:	681b      	ldr	r3, [r3, #0]
 800b756:	f042 0208 	orr.w	r2, r2, #8
 800b75a:	655a      	str	r2, [r3, #84]	; 0x54
 800b75c:	68fb      	ldr	r3, [r7, #12]
 800b75e:	681b      	ldr	r3, [r3, #0]
 800b760:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800b762:	68fb      	ldr	r3, [r7, #12]
 800b764:	681b      	ldr	r3, [r3, #0]
 800b766:	f022 0204 	bic.w	r2, r2, #4
 800b76a:	655a      	str	r2, [r3, #84]	; 0x54
 800b76c:	68fb      	ldr	r3, [r7, #12]
 800b76e:	681b      	ldr	r3, [r3, #0]
 800b770:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800b772:	68bb      	ldr	r3, [r7, #8]
 800b774:	691a      	ldr	r2, [r3, #16]
 800b776:	68fb      	ldr	r3, [r7, #12]
 800b778:	681b      	ldr	r3, [r3, #0]
 800b77a:	430a      	orrs	r2, r1
 800b77c:	655a      	str	r2, [r3, #84]	; 0x54
 800b77e:	e023      	b.n	800b7c8 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b780:	68fb      	ldr	r3, [r7, #12]
 800b782:	681b      	ldr	r3, [r3, #0]
 800b784:	68b9      	ldr	r1, [r7, #8]
 800b786:	4618      	mov	r0, r3
 800b788:	f000 fc48 	bl	800c01c <TIM_OC6_SetConfig>
 800b78c:	68fb      	ldr	r3, [r7, #12]
 800b78e:	681b      	ldr	r3, [r3, #0]
 800b790:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800b792:	68fb      	ldr	r3, [r7, #12]
 800b794:	681b      	ldr	r3, [r3, #0]
 800b796:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b79a:	655a      	str	r2, [r3, #84]	; 0x54
 800b79c:	68fb      	ldr	r3, [r7, #12]
 800b79e:	681b      	ldr	r3, [r3, #0]
 800b7a0:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800b7a2:	68fb      	ldr	r3, [r7, #12]
 800b7a4:	681b      	ldr	r3, [r3, #0]
 800b7a6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b7aa:	655a      	str	r2, [r3, #84]	; 0x54
 800b7ac:	68fb      	ldr	r3, [r7, #12]
 800b7ae:	681b      	ldr	r3, [r3, #0]
 800b7b0:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800b7b2:	68bb      	ldr	r3, [r7, #8]
 800b7b4:	691b      	ldr	r3, [r3, #16]
 800b7b6:	021a      	lsls	r2, r3, #8
 800b7b8:	68fb      	ldr	r3, [r7, #12]
 800b7ba:	681b      	ldr	r3, [r3, #0]
 800b7bc:	430a      	orrs	r2, r1
 800b7be:	655a      	str	r2, [r3, #84]	; 0x54
 800b7c0:	e002      	b.n	800b7c8 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b7c2:	2301      	movs	r3, #1
 800b7c4:	75fb      	strb	r3, [r7, #23]
 800b7c6:	bf00      	nop
 800b7c8:	68fb      	ldr	r3, [r7, #12]
 800b7ca:	2200      	movs	r2, #0
 800b7cc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b7d0:	7dfb      	ldrb	r3, [r7, #23]
 800b7d2:	4618      	mov	r0, r3
 800b7d4:	3718      	adds	r7, #24
 800b7d6:	46bd      	mov	sp, r7
 800b7d8:	bd80      	pop	{r7, pc}
 800b7da:	bf00      	nop

0800b7dc <HAL_TIM_ConfigClockSource>:
 800b7dc:	b580      	push	{r7, lr}
 800b7de:	b084      	sub	sp, #16
 800b7e0:	af00      	add	r7, sp, #0
 800b7e2:	6078      	str	r0, [r7, #4]
 800b7e4:	6039      	str	r1, [r7, #0]
 800b7e6:	2300      	movs	r3, #0
 800b7e8:	73fb      	strb	r3, [r7, #15]
 800b7ea:	687b      	ldr	r3, [r7, #4]
 800b7ec:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b7f0:	2b01      	cmp	r3, #1
 800b7f2:	d101      	bne.n	800b7f8 <HAL_TIM_ConfigClockSource+0x1c>
 800b7f4:	2302      	movs	r3, #2
 800b7f6:	e0dc      	b.n	800b9b2 <HAL_TIM_ConfigClockSource+0x1d6>
 800b7f8:	687b      	ldr	r3, [r7, #4]
 800b7fa:	2201      	movs	r2, #1
 800b7fc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b800:	687b      	ldr	r3, [r7, #4]
 800b802:	2202      	movs	r2, #2
 800b804:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b808:	687b      	ldr	r3, [r7, #4]
 800b80a:	681b      	ldr	r3, [r3, #0]
 800b80c:	689b      	ldr	r3, [r3, #8]
 800b80e:	60bb      	str	r3, [r7, #8]
 800b810:	68ba      	ldr	r2, [r7, #8]
 800b812:	4b6a      	ldr	r3, [pc, #424]	; (800b9bc <HAL_TIM_ConfigClockSource+0x1e0>)
 800b814:	4013      	ands	r3, r2
 800b816:	60bb      	str	r3, [r7, #8]
 800b818:	68bb      	ldr	r3, [r7, #8]
 800b81a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800b81e:	60bb      	str	r3, [r7, #8]
 800b820:	687b      	ldr	r3, [r7, #4]
 800b822:	681b      	ldr	r3, [r3, #0]
 800b824:	68ba      	ldr	r2, [r7, #8]
 800b826:	609a      	str	r2, [r3, #8]
 800b828:	683b      	ldr	r3, [r7, #0]
 800b82a:	681b      	ldr	r3, [r3, #0]
 800b82c:	4a64      	ldr	r2, [pc, #400]	; (800b9c0 <HAL_TIM_ConfigClockSource+0x1e4>)
 800b82e:	4293      	cmp	r3, r2
 800b830:	f000 80a9 	beq.w	800b986 <HAL_TIM_ConfigClockSource+0x1aa>
 800b834:	4a62      	ldr	r2, [pc, #392]	; (800b9c0 <HAL_TIM_ConfigClockSource+0x1e4>)
 800b836:	4293      	cmp	r3, r2
 800b838:	f200 80ae 	bhi.w	800b998 <HAL_TIM_ConfigClockSource+0x1bc>
 800b83c:	4a61      	ldr	r2, [pc, #388]	; (800b9c4 <HAL_TIM_ConfigClockSource+0x1e8>)
 800b83e:	4293      	cmp	r3, r2
 800b840:	f000 80a1 	beq.w	800b986 <HAL_TIM_ConfigClockSource+0x1aa>
 800b844:	4a5f      	ldr	r2, [pc, #380]	; (800b9c4 <HAL_TIM_ConfigClockSource+0x1e8>)
 800b846:	4293      	cmp	r3, r2
 800b848:	f200 80a6 	bhi.w	800b998 <HAL_TIM_ConfigClockSource+0x1bc>
 800b84c:	4a5e      	ldr	r2, [pc, #376]	; (800b9c8 <HAL_TIM_ConfigClockSource+0x1ec>)
 800b84e:	4293      	cmp	r3, r2
 800b850:	f000 8099 	beq.w	800b986 <HAL_TIM_ConfigClockSource+0x1aa>
 800b854:	4a5c      	ldr	r2, [pc, #368]	; (800b9c8 <HAL_TIM_ConfigClockSource+0x1ec>)
 800b856:	4293      	cmp	r3, r2
 800b858:	f200 809e 	bhi.w	800b998 <HAL_TIM_ConfigClockSource+0x1bc>
 800b85c:	f1b3 1f10 	cmp.w	r3, #1048592	; 0x100010
 800b860:	f000 8091 	beq.w	800b986 <HAL_TIM_ConfigClockSource+0x1aa>
 800b864:	f1b3 1f10 	cmp.w	r3, #1048592	; 0x100010
 800b868:	f200 8096 	bhi.w	800b998 <HAL_TIM_ConfigClockSource+0x1bc>
 800b86c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800b870:	f000 8089 	beq.w	800b986 <HAL_TIM_ConfigClockSource+0x1aa>
 800b874:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800b878:	f200 808e 	bhi.w	800b998 <HAL_TIM_ConfigClockSource+0x1bc>
 800b87c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b880:	d03e      	beq.n	800b900 <HAL_TIM_ConfigClockSource+0x124>
 800b882:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b886:	f200 8087 	bhi.w	800b998 <HAL_TIM_ConfigClockSource+0x1bc>
 800b88a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b88e:	f000 8086 	beq.w	800b99e <HAL_TIM_ConfigClockSource+0x1c2>
 800b892:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b896:	d87f      	bhi.n	800b998 <HAL_TIM_ConfigClockSource+0x1bc>
 800b898:	2b70      	cmp	r3, #112	; 0x70
 800b89a:	d01a      	beq.n	800b8d2 <HAL_TIM_ConfigClockSource+0xf6>
 800b89c:	2b70      	cmp	r3, #112	; 0x70
 800b89e:	d87b      	bhi.n	800b998 <HAL_TIM_ConfigClockSource+0x1bc>
 800b8a0:	2b60      	cmp	r3, #96	; 0x60
 800b8a2:	d050      	beq.n	800b946 <HAL_TIM_ConfigClockSource+0x16a>
 800b8a4:	2b60      	cmp	r3, #96	; 0x60
 800b8a6:	d877      	bhi.n	800b998 <HAL_TIM_ConfigClockSource+0x1bc>
 800b8a8:	2b50      	cmp	r3, #80	; 0x50
 800b8aa:	d03c      	beq.n	800b926 <HAL_TIM_ConfigClockSource+0x14a>
 800b8ac:	2b50      	cmp	r3, #80	; 0x50
 800b8ae:	d873      	bhi.n	800b998 <HAL_TIM_ConfigClockSource+0x1bc>
 800b8b0:	2b40      	cmp	r3, #64	; 0x40
 800b8b2:	d058      	beq.n	800b966 <HAL_TIM_ConfigClockSource+0x18a>
 800b8b4:	2b40      	cmp	r3, #64	; 0x40
 800b8b6:	d86f      	bhi.n	800b998 <HAL_TIM_ConfigClockSource+0x1bc>
 800b8b8:	2b30      	cmp	r3, #48	; 0x30
 800b8ba:	d064      	beq.n	800b986 <HAL_TIM_ConfigClockSource+0x1aa>
 800b8bc:	2b30      	cmp	r3, #48	; 0x30
 800b8be:	d86b      	bhi.n	800b998 <HAL_TIM_ConfigClockSource+0x1bc>
 800b8c0:	2b20      	cmp	r3, #32
 800b8c2:	d060      	beq.n	800b986 <HAL_TIM_ConfigClockSource+0x1aa>
 800b8c4:	2b20      	cmp	r3, #32
 800b8c6:	d867      	bhi.n	800b998 <HAL_TIM_ConfigClockSource+0x1bc>
 800b8c8:	2b00      	cmp	r3, #0
 800b8ca:	d05c      	beq.n	800b986 <HAL_TIM_ConfigClockSource+0x1aa>
 800b8cc:	2b10      	cmp	r3, #16
 800b8ce:	d05a      	beq.n	800b986 <HAL_TIM_ConfigClockSource+0x1aa>
 800b8d0:	e062      	b.n	800b998 <HAL_TIM_ConfigClockSource+0x1bc>
 800b8d2:	687b      	ldr	r3, [r7, #4]
 800b8d4:	6818      	ldr	r0, [r3, #0]
 800b8d6:	683b      	ldr	r3, [r7, #0]
 800b8d8:	6899      	ldr	r1, [r3, #8]
 800b8da:	683b      	ldr	r3, [r7, #0]
 800b8dc:	685a      	ldr	r2, [r3, #4]
 800b8de:	683b      	ldr	r3, [r7, #0]
 800b8e0:	68db      	ldr	r3, [r3, #12]
 800b8e2:	f000 fda9 	bl	800c438 <TIM_ETR_SetConfig>
 800b8e6:	687b      	ldr	r3, [r7, #4]
 800b8e8:	681b      	ldr	r3, [r3, #0]
 800b8ea:	689b      	ldr	r3, [r3, #8]
 800b8ec:	60bb      	str	r3, [r7, #8]
 800b8ee:	68bb      	ldr	r3, [r7, #8]
 800b8f0:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800b8f4:	60bb      	str	r3, [r7, #8]
 800b8f6:	687b      	ldr	r3, [r7, #4]
 800b8f8:	681b      	ldr	r3, [r3, #0]
 800b8fa:	68ba      	ldr	r2, [r7, #8]
 800b8fc:	609a      	str	r2, [r3, #8]
 800b8fe:	e04f      	b.n	800b9a0 <HAL_TIM_ConfigClockSource+0x1c4>
 800b900:	687b      	ldr	r3, [r7, #4]
 800b902:	6818      	ldr	r0, [r3, #0]
 800b904:	683b      	ldr	r3, [r7, #0]
 800b906:	6899      	ldr	r1, [r3, #8]
 800b908:	683b      	ldr	r3, [r7, #0]
 800b90a:	685a      	ldr	r2, [r3, #4]
 800b90c:	683b      	ldr	r3, [r7, #0]
 800b90e:	68db      	ldr	r3, [r3, #12]
 800b910:	f000 fd92 	bl	800c438 <TIM_ETR_SetConfig>
 800b914:	687b      	ldr	r3, [r7, #4]
 800b916:	681b      	ldr	r3, [r3, #0]
 800b918:	689a      	ldr	r2, [r3, #8]
 800b91a:	687b      	ldr	r3, [r7, #4]
 800b91c:	681b      	ldr	r3, [r3, #0]
 800b91e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800b922:	609a      	str	r2, [r3, #8]
 800b924:	e03c      	b.n	800b9a0 <HAL_TIM_ConfigClockSource+0x1c4>
 800b926:	687b      	ldr	r3, [r7, #4]
 800b928:	6818      	ldr	r0, [r3, #0]
 800b92a:	683b      	ldr	r3, [r7, #0]
 800b92c:	6859      	ldr	r1, [r3, #4]
 800b92e:	683b      	ldr	r3, [r7, #0]
 800b930:	68db      	ldr	r3, [r3, #12]
 800b932:	461a      	mov	r2, r3
 800b934:	f000 fc4c 	bl	800c1d0 <TIM_TI1_ConfigInputStage>
 800b938:	687b      	ldr	r3, [r7, #4]
 800b93a:	681b      	ldr	r3, [r3, #0]
 800b93c:	2150      	movs	r1, #80	; 0x50
 800b93e:	4618      	mov	r0, r3
 800b940:	f000 fd5c 	bl	800c3fc <TIM_ITRx_SetConfig>
 800b944:	e02c      	b.n	800b9a0 <HAL_TIM_ConfigClockSource+0x1c4>
 800b946:	687b      	ldr	r3, [r7, #4]
 800b948:	6818      	ldr	r0, [r3, #0]
 800b94a:	683b      	ldr	r3, [r7, #0]
 800b94c:	6859      	ldr	r1, [r3, #4]
 800b94e:	683b      	ldr	r3, [r7, #0]
 800b950:	68db      	ldr	r3, [r3, #12]
 800b952:	461a      	mov	r2, r3
 800b954:	f000 fca8 	bl	800c2a8 <TIM_TI2_ConfigInputStage>
 800b958:	687b      	ldr	r3, [r7, #4]
 800b95a:	681b      	ldr	r3, [r3, #0]
 800b95c:	2160      	movs	r1, #96	; 0x60
 800b95e:	4618      	mov	r0, r3
 800b960:	f000 fd4c 	bl	800c3fc <TIM_ITRx_SetConfig>
 800b964:	e01c      	b.n	800b9a0 <HAL_TIM_ConfigClockSource+0x1c4>
 800b966:	687b      	ldr	r3, [r7, #4]
 800b968:	6818      	ldr	r0, [r3, #0]
 800b96a:	683b      	ldr	r3, [r7, #0]
 800b96c:	6859      	ldr	r1, [r3, #4]
 800b96e:	683b      	ldr	r3, [r7, #0]
 800b970:	68db      	ldr	r3, [r3, #12]
 800b972:	461a      	mov	r2, r3
 800b974:	f000 fc2c 	bl	800c1d0 <TIM_TI1_ConfigInputStage>
 800b978:	687b      	ldr	r3, [r7, #4]
 800b97a:	681b      	ldr	r3, [r3, #0]
 800b97c:	2140      	movs	r1, #64	; 0x40
 800b97e:	4618      	mov	r0, r3
 800b980:	f000 fd3c 	bl	800c3fc <TIM_ITRx_SetConfig>
 800b984:	e00c      	b.n	800b9a0 <HAL_TIM_ConfigClockSource+0x1c4>
 800b986:	687b      	ldr	r3, [r7, #4]
 800b988:	681a      	ldr	r2, [r3, #0]
 800b98a:	683b      	ldr	r3, [r7, #0]
 800b98c:	681b      	ldr	r3, [r3, #0]
 800b98e:	4619      	mov	r1, r3
 800b990:	4610      	mov	r0, r2
 800b992:	f000 fd33 	bl	800c3fc <TIM_ITRx_SetConfig>
 800b996:	e003      	b.n	800b9a0 <HAL_TIM_ConfigClockSource+0x1c4>
 800b998:	2301      	movs	r3, #1
 800b99a:	73fb      	strb	r3, [r7, #15]
 800b99c:	e000      	b.n	800b9a0 <HAL_TIM_ConfigClockSource+0x1c4>
 800b99e:	bf00      	nop
 800b9a0:	687b      	ldr	r3, [r7, #4]
 800b9a2:	2201      	movs	r2, #1
 800b9a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b9a8:	687b      	ldr	r3, [r7, #4]
 800b9aa:	2200      	movs	r2, #0
 800b9ac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b9b0:	7bfb      	ldrb	r3, [r7, #15]
 800b9b2:	4618      	mov	r0, r3
 800b9b4:	3710      	adds	r7, #16
 800b9b6:	46bd      	mov	sp, r7
 800b9b8:	bd80      	pop	{r7, pc}
 800b9ba:	bf00      	nop
 800b9bc:	ffceff88 	.word	0xffceff88
 800b9c0:	00100040 	.word	0x00100040
 800b9c4:	00100030 	.word	0x00100030
 800b9c8:	00100020 	.word	0x00100020

0800b9cc <HAL_TIM_OC_DelayElapsedCallback>:
 800b9cc:	b480      	push	{r7}
 800b9ce:	b083      	sub	sp, #12
 800b9d0:	af00      	add	r7, sp, #0
 800b9d2:	6078      	str	r0, [r7, #4]
 800b9d4:	bf00      	nop
 800b9d6:	370c      	adds	r7, #12
 800b9d8:	46bd      	mov	sp, r7
 800b9da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9de:	4770      	bx	lr

0800b9e0 <HAL_TIM_PWM_PulseFinishedCallback>:
 800b9e0:	b480      	push	{r7}
 800b9e2:	b083      	sub	sp, #12
 800b9e4:	af00      	add	r7, sp, #0
 800b9e6:	6078      	str	r0, [r7, #4]
 800b9e8:	bf00      	nop
 800b9ea:	370c      	adds	r7, #12
 800b9ec:	46bd      	mov	sp, r7
 800b9ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9f2:	4770      	bx	lr

0800b9f4 <HAL_TIM_TriggerCallback>:
 800b9f4:	b480      	push	{r7}
 800b9f6:	b083      	sub	sp, #12
 800b9f8:	af00      	add	r7, sp, #0
 800b9fa:	6078      	str	r0, [r7, #4]
 800b9fc:	bf00      	nop
 800b9fe:	370c      	adds	r7, #12
 800ba00:	46bd      	mov	sp, r7
 800ba02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba06:	4770      	bx	lr

0800ba08 <TIM_Base_SetConfig>:
 800ba08:	b480      	push	{r7}
 800ba0a:	b085      	sub	sp, #20
 800ba0c:	af00      	add	r7, sp, #0
 800ba0e:	6078      	str	r0, [r7, #4]
 800ba10:	6039      	str	r1, [r7, #0]
 800ba12:	687b      	ldr	r3, [r7, #4]
 800ba14:	681b      	ldr	r3, [r3, #0]
 800ba16:	60fb      	str	r3, [r7, #12]
 800ba18:	687b      	ldr	r3, [r7, #4]
 800ba1a:	4a40      	ldr	r2, [pc, #256]	; (800bb1c <TIM_Base_SetConfig+0x114>)
 800ba1c:	4293      	cmp	r3, r2
 800ba1e:	d013      	beq.n	800ba48 <TIM_Base_SetConfig+0x40>
 800ba20:	687b      	ldr	r3, [r7, #4]
 800ba22:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ba26:	d00f      	beq.n	800ba48 <TIM_Base_SetConfig+0x40>
 800ba28:	687b      	ldr	r3, [r7, #4]
 800ba2a:	4a3d      	ldr	r2, [pc, #244]	; (800bb20 <TIM_Base_SetConfig+0x118>)
 800ba2c:	4293      	cmp	r3, r2
 800ba2e:	d00b      	beq.n	800ba48 <TIM_Base_SetConfig+0x40>
 800ba30:	687b      	ldr	r3, [r7, #4]
 800ba32:	4a3c      	ldr	r2, [pc, #240]	; (800bb24 <TIM_Base_SetConfig+0x11c>)
 800ba34:	4293      	cmp	r3, r2
 800ba36:	d007      	beq.n	800ba48 <TIM_Base_SetConfig+0x40>
 800ba38:	687b      	ldr	r3, [r7, #4]
 800ba3a:	4a3b      	ldr	r2, [pc, #236]	; (800bb28 <TIM_Base_SetConfig+0x120>)
 800ba3c:	4293      	cmp	r3, r2
 800ba3e:	d003      	beq.n	800ba48 <TIM_Base_SetConfig+0x40>
 800ba40:	687b      	ldr	r3, [r7, #4]
 800ba42:	4a3a      	ldr	r2, [pc, #232]	; (800bb2c <TIM_Base_SetConfig+0x124>)
 800ba44:	4293      	cmp	r3, r2
 800ba46:	d108      	bne.n	800ba5a <TIM_Base_SetConfig+0x52>
 800ba48:	68fb      	ldr	r3, [r7, #12]
 800ba4a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800ba4e:	60fb      	str	r3, [r7, #12]
 800ba50:	683b      	ldr	r3, [r7, #0]
 800ba52:	685b      	ldr	r3, [r3, #4]
 800ba54:	68fa      	ldr	r2, [r7, #12]
 800ba56:	4313      	orrs	r3, r2
 800ba58:	60fb      	str	r3, [r7, #12]
 800ba5a:	687b      	ldr	r3, [r7, #4]
 800ba5c:	4a2f      	ldr	r2, [pc, #188]	; (800bb1c <TIM_Base_SetConfig+0x114>)
 800ba5e:	4293      	cmp	r3, r2
 800ba60:	d01f      	beq.n	800baa2 <TIM_Base_SetConfig+0x9a>
 800ba62:	687b      	ldr	r3, [r7, #4]
 800ba64:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ba68:	d01b      	beq.n	800baa2 <TIM_Base_SetConfig+0x9a>
 800ba6a:	687b      	ldr	r3, [r7, #4]
 800ba6c:	4a2c      	ldr	r2, [pc, #176]	; (800bb20 <TIM_Base_SetConfig+0x118>)
 800ba6e:	4293      	cmp	r3, r2
 800ba70:	d017      	beq.n	800baa2 <TIM_Base_SetConfig+0x9a>
 800ba72:	687b      	ldr	r3, [r7, #4]
 800ba74:	4a2b      	ldr	r2, [pc, #172]	; (800bb24 <TIM_Base_SetConfig+0x11c>)
 800ba76:	4293      	cmp	r3, r2
 800ba78:	d013      	beq.n	800baa2 <TIM_Base_SetConfig+0x9a>
 800ba7a:	687b      	ldr	r3, [r7, #4]
 800ba7c:	4a2a      	ldr	r2, [pc, #168]	; (800bb28 <TIM_Base_SetConfig+0x120>)
 800ba7e:	4293      	cmp	r3, r2
 800ba80:	d00f      	beq.n	800baa2 <TIM_Base_SetConfig+0x9a>
 800ba82:	687b      	ldr	r3, [r7, #4]
 800ba84:	4a29      	ldr	r2, [pc, #164]	; (800bb2c <TIM_Base_SetConfig+0x124>)
 800ba86:	4293      	cmp	r3, r2
 800ba88:	d00b      	beq.n	800baa2 <TIM_Base_SetConfig+0x9a>
 800ba8a:	687b      	ldr	r3, [r7, #4]
 800ba8c:	4a28      	ldr	r2, [pc, #160]	; (800bb30 <TIM_Base_SetConfig+0x128>)
 800ba8e:	4293      	cmp	r3, r2
 800ba90:	d007      	beq.n	800baa2 <TIM_Base_SetConfig+0x9a>
 800ba92:	687b      	ldr	r3, [r7, #4]
 800ba94:	4a27      	ldr	r2, [pc, #156]	; (800bb34 <TIM_Base_SetConfig+0x12c>)
 800ba96:	4293      	cmp	r3, r2
 800ba98:	d003      	beq.n	800baa2 <TIM_Base_SetConfig+0x9a>
 800ba9a:	687b      	ldr	r3, [r7, #4]
 800ba9c:	4a26      	ldr	r2, [pc, #152]	; (800bb38 <TIM_Base_SetConfig+0x130>)
 800ba9e:	4293      	cmp	r3, r2
 800baa0:	d108      	bne.n	800bab4 <TIM_Base_SetConfig+0xac>
 800baa2:	68fb      	ldr	r3, [r7, #12]
 800baa4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800baa8:	60fb      	str	r3, [r7, #12]
 800baaa:	683b      	ldr	r3, [r7, #0]
 800baac:	68db      	ldr	r3, [r3, #12]
 800baae:	68fa      	ldr	r2, [r7, #12]
 800bab0:	4313      	orrs	r3, r2
 800bab2:	60fb      	str	r3, [r7, #12]
 800bab4:	68fb      	ldr	r3, [r7, #12]
 800bab6:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800baba:	683b      	ldr	r3, [r7, #0]
 800babc:	695b      	ldr	r3, [r3, #20]
 800babe:	4313      	orrs	r3, r2
 800bac0:	60fb      	str	r3, [r7, #12]
 800bac2:	687b      	ldr	r3, [r7, #4]
 800bac4:	68fa      	ldr	r2, [r7, #12]
 800bac6:	601a      	str	r2, [r3, #0]
 800bac8:	683b      	ldr	r3, [r7, #0]
 800baca:	689a      	ldr	r2, [r3, #8]
 800bacc:	687b      	ldr	r3, [r7, #4]
 800bace:	62da      	str	r2, [r3, #44]	; 0x2c
 800bad0:	683b      	ldr	r3, [r7, #0]
 800bad2:	681a      	ldr	r2, [r3, #0]
 800bad4:	687b      	ldr	r3, [r7, #4]
 800bad6:	629a      	str	r2, [r3, #40]	; 0x28
 800bad8:	687b      	ldr	r3, [r7, #4]
 800bada:	4a10      	ldr	r2, [pc, #64]	; (800bb1c <TIM_Base_SetConfig+0x114>)
 800badc:	4293      	cmp	r3, r2
 800bade:	d00f      	beq.n	800bb00 <TIM_Base_SetConfig+0xf8>
 800bae0:	687b      	ldr	r3, [r7, #4]
 800bae2:	4a12      	ldr	r2, [pc, #72]	; (800bb2c <TIM_Base_SetConfig+0x124>)
 800bae4:	4293      	cmp	r3, r2
 800bae6:	d00b      	beq.n	800bb00 <TIM_Base_SetConfig+0xf8>
 800bae8:	687b      	ldr	r3, [r7, #4]
 800baea:	4a11      	ldr	r2, [pc, #68]	; (800bb30 <TIM_Base_SetConfig+0x128>)
 800baec:	4293      	cmp	r3, r2
 800baee:	d007      	beq.n	800bb00 <TIM_Base_SetConfig+0xf8>
 800baf0:	687b      	ldr	r3, [r7, #4]
 800baf2:	4a10      	ldr	r2, [pc, #64]	; (800bb34 <TIM_Base_SetConfig+0x12c>)
 800baf4:	4293      	cmp	r3, r2
 800baf6:	d003      	beq.n	800bb00 <TIM_Base_SetConfig+0xf8>
 800baf8:	687b      	ldr	r3, [r7, #4]
 800bafa:	4a0f      	ldr	r2, [pc, #60]	; (800bb38 <TIM_Base_SetConfig+0x130>)
 800bafc:	4293      	cmp	r3, r2
 800bafe:	d103      	bne.n	800bb08 <TIM_Base_SetConfig+0x100>
 800bb00:	683b      	ldr	r3, [r7, #0]
 800bb02:	691a      	ldr	r2, [r3, #16]
 800bb04:	687b      	ldr	r3, [r7, #4]
 800bb06:	631a      	str	r2, [r3, #48]	; 0x30
 800bb08:	687b      	ldr	r3, [r7, #4]
 800bb0a:	2201      	movs	r2, #1
 800bb0c:	615a      	str	r2, [r3, #20]
 800bb0e:	bf00      	nop
 800bb10:	3714      	adds	r7, #20
 800bb12:	46bd      	mov	sp, r7
 800bb14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb18:	4770      	bx	lr
 800bb1a:	bf00      	nop
 800bb1c:	40010000 	.word	0x40010000
 800bb20:	40000400 	.word	0x40000400
 800bb24:	40000800 	.word	0x40000800
 800bb28:	40000c00 	.word	0x40000c00
 800bb2c:	40010400 	.word	0x40010400
 800bb30:	40014000 	.word	0x40014000
 800bb34:	40014400 	.word	0x40014400
 800bb38:	40014800 	.word	0x40014800

0800bb3c <TIM_OC1_SetConfig>:
 800bb3c:	b480      	push	{r7}
 800bb3e:	b087      	sub	sp, #28
 800bb40:	af00      	add	r7, sp, #0
 800bb42:	6078      	str	r0, [r7, #4]
 800bb44:	6039      	str	r1, [r7, #0]
 800bb46:	687b      	ldr	r3, [r7, #4]
 800bb48:	6a1b      	ldr	r3, [r3, #32]
 800bb4a:	f023 0201 	bic.w	r2, r3, #1
 800bb4e:	687b      	ldr	r3, [r7, #4]
 800bb50:	621a      	str	r2, [r3, #32]
 800bb52:	687b      	ldr	r3, [r7, #4]
 800bb54:	6a1b      	ldr	r3, [r3, #32]
 800bb56:	617b      	str	r3, [r7, #20]
 800bb58:	687b      	ldr	r3, [r7, #4]
 800bb5a:	685b      	ldr	r3, [r3, #4]
 800bb5c:	613b      	str	r3, [r7, #16]
 800bb5e:	687b      	ldr	r3, [r7, #4]
 800bb60:	699b      	ldr	r3, [r3, #24]
 800bb62:	60fb      	str	r3, [r7, #12]
 800bb64:	68fa      	ldr	r2, [r7, #12]
 800bb66:	4b37      	ldr	r3, [pc, #220]	; (800bc44 <TIM_OC1_SetConfig+0x108>)
 800bb68:	4013      	ands	r3, r2
 800bb6a:	60fb      	str	r3, [r7, #12]
 800bb6c:	68fb      	ldr	r3, [r7, #12]
 800bb6e:	f023 0303 	bic.w	r3, r3, #3
 800bb72:	60fb      	str	r3, [r7, #12]
 800bb74:	683b      	ldr	r3, [r7, #0]
 800bb76:	681b      	ldr	r3, [r3, #0]
 800bb78:	68fa      	ldr	r2, [r7, #12]
 800bb7a:	4313      	orrs	r3, r2
 800bb7c:	60fb      	str	r3, [r7, #12]
 800bb7e:	697b      	ldr	r3, [r7, #20]
 800bb80:	f023 0302 	bic.w	r3, r3, #2
 800bb84:	617b      	str	r3, [r7, #20]
 800bb86:	683b      	ldr	r3, [r7, #0]
 800bb88:	689b      	ldr	r3, [r3, #8]
 800bb8a:	697a      	ldr	r2, [r7, #20]
 800bb8c:	4313      	orrs	r3, r2
 800bb8e:	617b      	str	r3, [r7, #20]
 800bb90:	687b      	ldr	r3, [r7, #4]
 800bb92:	4a2d      	ldr	r2, [pc, #180]	; (800bc48 <TIM_OC1_SetConfig+0x10c>)
 800bb94:	4293      	cmp	r3, r2
 800bb96:	d00f      	beq.n	800bbb8 <TIM_OC1_SetConfig+0x7c>
 800bb98:	687b      	ldr	r3, [r7, #4]
 800bb9a:	4a2c      	ldr	r2, [pc, #176]	; (800bc4c <TIM_OC1_SetConfig+0x110>)
 800bb9c:	4293      	cmp	r3, r2
 800bb9e:	d00b      	beq.n	800bbb8 <TIM_OC1_SetConfig+0x7c>
 800bba0:	687b      	ldr	r3, [r7, #4]
 800bba2:	4a2b      	ldr	r2, [pc, #172]	; (800bc50 <TIM_OC1_SetConfig+0x114>)
 800bba4:	4293      	cmp	r3, r2
 800bba6:	d007      	beq.n	800bbb8 <TIM_OC1_SetConfig+0x7c>
 800bba8:	687b      	ldr	r3, [r7, #4]
 800bbaa:	4a2a      	ldr	r2, [pc, #168]	; (800bc54 <TIM_OC1_SetConfig+0x118>)
 800bbac:	4293      	cmp	r3, r2
 800bbae:	d003      	beq.n	800bbb8 <TIM_OC1_SetConfig+0x7c>
 800bbb0:	687b      	ldr	r3, [r7, #4]
 800bbb2:	4a29      	ldr	r2, [pc, #164]	; (800bc58 <TIM_OC1_SetConfig+0x11c>)
 800bbb4:	4293      	cmp	r3, r2
 800bbb6:	d10c      	bne.n	800bbd2 <TIM_OC1_SetConfig+0x96>
 800bbb8:	697b      	ldr	r3, [r7, #20]
 800bbba:	f023 0308 	bic.w	r3, r3, #8
 800bbbe:	617b      	str	r3, [r7, #20]
 800bbc0:	683b      	ldr	r3, [r7, #0]
 800bbc2:	68db      	ldr	r3, [r3, #12]
 800bbc4:	697a      	ldr	r2, [r7, #20]
 800bbc6:	4313      	orrs	r3, r2
 800bbc8:	617b      	str	r3, [r7, #20]
 800bbca:	697b      	ldr	r3, [r7, #20]
 800bbcc:	f023 0304 	bic.w	r3, r3, #4
 800bbd0:	617b      	str	r3, [r7, #20]
 800bbd2:	687b      	ldr	r3, [r7, #4]
 800bbd4:	4a1c      	ldr	r2, [pc, #112]	; (800bc48 <TIM_OC1_SetConfig+0x10c>)
 800bbd6:	4293      	cmp	r3, r2
 800bbd8:	d00f      	beq.n	800bbfa <TIM_OC1_SetConfig+0xbe>
 800bbda:	687b      	ldr	r3, [r7, #4]
 800bbdc:	4a1b      	ldr	r2, [pc, #108]	; (800bc4c <TIM_OC1_SetConfig+0x110>)
 800bbde:	4293      	cmp	r3, r2
 800bbe0:	d00b      	beq.n	800bbfa <TIM_OC1_SetConfig+0xbe>
 800bbe2:	687b      	ldr	r3, [r7, #4]
 800bbe4:	4a1a      	ldr	r2, [pc, #104]	; (800bc50 <TIM_OC1_SetConfig+0x114>)
 800bbe6:	4293      	cmp	r3, r2
 800bbe8:	d007      	beq.n	800bbfa <TIM_OC1_SetConfig+0xbe>
 800bbea:	687b      	ldr	r3, [r7, #4]
 800bbec:	4a19      	ldr	r2, [pc, #100]	; (800bc54 <TIM_OC1_SetConfig+0x118>)
 800bbee:	4293      	cmp	r3, r2
 800bbf0:	d003      	beq.n	800bbfa <TIM_OC1_SetConfig+0xbe>
 800bbf2:	687b      	ldr	r3, [r7, #4]
 800bbf4:	4a18      	ldr	r2, [pc, #96]	; (800bc58 <TIM_OC1_SetConfig+0x11c>)
 800bbf6:	4293      	cmp	r3, r2
 800bbf8:	d111      	bne.n	800bc1e <TIM_OC1_SetConfig+0xe2>
 800bbfa:	693b      	ldr	r3, [r7, #16]
 800bbfc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800bc00:	613b      	str	r3, [r7, #16]
 800bc02:	693b      	ldr	r3, [r7, #16]
 800bc04:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800bc08:	613b      	str	r3, [r7, #16]
 800bc0a:	683b      	ldr	r3, [r7, #0]
 800bc0c:	695b      	ldr	r3, [r3, #20]
 800bc0e:	693a      	ldr	r2, [r7, #16]
 800bc10:	4313      	orrs	r3, r2
 800bc12:	613b      	str	r3, [r7, #16]
 800bc14:	683b      	ldr	r3, [r7, #0]
 800bc16:	699b      	ldr	r3, [r3, #24]
 800bc18:	693a      	ldr	r2, [r7, #16]
 800bc1a:	4313      	orrs	r3, r2
 800bc1c:	613b      	str	r3, [r7, #16]
 800bc1e:	687b      	ldr	r3, [r7, #4]
 800bc20:	693a      	ldr	r2, [r7, #16]
 800bc22:	605a      	str	r2, [r3, #4]
 800bc24:	687b      	ldr	r3, [r7, #4]
 800bc26:	68fa      	ldr	r2, [r7, #12]
 800bc28:	619a      	str	r2, [r3, #24]
 800bc2a:	683b      	ldr	r3, [r7, #0]
 800bc2c:	685a      	ldr	r2, [r3, #4]
 800bc2e:	687b      	ldr	r3, [r7, #4]
 800bc30:	635a      	str	r2, [r3, #52]	; 0x34
 800bc32:	687b      	ldr	r3, [r7, #4]
 800bc34:	697a      	ldr	r2, [r7, #20]
 800bc36:	621a      	str	r2, [r3, #32]
 800bc38:	bf00      	nop
 800bc3a:	371c      	adds	r7, #28
 800bc3c:	46bd      	mov	sp, r7
 800bc3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc42:	4770      	bx	lr
 800bc44:	fffeff8f 	.word	0xfffeff8f
 800bc48:	40010000 	.word	0x40010000
 800bc4c:	40010400 	.word	0x40010400
 800bc50:	40014000 	.word	0x40014000
 800bc54:	40014400 	.word	0x40014400
 800bc58:	40014800 	.word	0x40014800

0800bc5c <TIM_OC2_SetConfig>:
 800bc5c:	b480      	push	{r7}
 800bc5e:	b087      	sub	sp, #28
 800bc60:	af00      	add	r7, sp, #0
 800bc62:	6078      	str	r0, [r7, #4]
 800bc64:	6039      	str	r1, [r7, #0]
 800bc66:	687b      	ldr	r3, [r7, #4]
 800bc68:	6a1b      	ldr	r3, [r3, #32]
 800bc6a:	f023 0210 	bic.w	r2, r3, #16
 800bc6e:	687b      	ldr	r3, [r7, #4]
 800bc70:	621a      	str	r2, [r3, #32]
 800bc72:	687b      	ldr	r3, [r7, #4]
 800bc74:	6a1b      	ldr	r3, [r3, #32]
 800bc76:	617b      	str	r3, [r7, #20]
 800bc78:	687b      	ldr	r3, [r7, #4]
 800bc7a:	685b      	ldr	r3, [r3, #4]
 800bc7c:	613b      	str	r3, [r7, #16]
 800bc7e:	687b      	ldr	r3, [r7, #4]
 800bc80:	699b      	ldr	r3, [r3, #24]
 800bc82:	60fb      	str	r3, [r7, #12]
 800bc84:	68fa      	ldr	r2, [r7, #12]
 800bc86:	4b34      	ldr	r3, [pc, #208]	; (800bd58 <TIM_OC2_SetConfig+0xfc>)
 800bc88:	4013      	ands	r3, r2
 800bc8a:	60fb      	str	r3, [r7, #12]
 800bc8c:	68fb      	ldr	r3, [r7, #12]
 800bc8e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800bc92:	60fb      	str	r3, [r7, #12]
 800bc94:	683b      	ldr	r3, [r7, #0]
 800bc96:	681b      	ldr	r3, [r3, #0]
 800bc98:	021b      	lsls	r3, r3, #8
 800bc9a:	68fa      	ldr	r2, [r7, #12]
 800bc9c:	4313      	orrs	r3, r2
 800bc9e:	60fb      	str	r3, [r7, #12]
 800bca0:	697b      	ldr	r3, [r7, #20]
 800bca2:	f023 0320 	bic.w	r3, r3, #32
 800bca6:	617b      	str	r3, [r7, #20]
 800bca8:	683b      	ldr	r3, [r7, #0]
 800bcaa:	689b      	ldr	r3, [r3, #8]
 800bcac:	011b      	lsls	r3, r3, #4
 800bcae:	697a      	ldr	r2, [r7, #20]
 800bcb0:	4313      	orrs	r3, r2
 800bcb2:	617b      	str	r3, [r7, #20]
 800bcb4:	687b      	ldr	r3, [r7, #4]
 800bcb6:	4a29      	ldr	r2, [pc, #164]	; (800bd5c <TIM_OC2_SetConfig+0x100>)
 800bcb8:	4293      	cmp	r3, r2
 800bcba:	d003      	beq.n	800bcc4 <TIM_OC2_SetConfig+0x68>
 800bcbc:	687b      	ldr	r3, [r7, #4]
 800bcbe:	4a28      	ldr	r2, [pc, #160]	; (800bd60 <TIM_OC2_SetConfig+0x104>)
 800bcc0:	4293      	cmp	r3, r2
 800bcc2:	d10d      	bne.n	800bce0 <TIM_OC2_SetConfig+0x84>
 800bcc4:	697b      	ldr	r3, [r7, #20]
 800bcc6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800bcca:	617b      	str	r3, [r7, #20]
 800bccc:	683b      	ldr	r3, [r7, #0]
 800bcce:	68db      	ldr	r3, [r3, #12]
 800bcd0:	011b      	lsls	r3, r3, #4
 800bcd2:	697a      	ldr	r2, [r7, #20]
 800bcd4:	4313      	orrs	r3, r2
 800bcd6:	617b      	str	r3, [r7, #20]
 800bcd8:	697b      	ldr	r3, [r7, #20]
 800bcda:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bcde:	617b      	str	r3, [r7, #20]
 800bce0:	687b      	ldr	r3, [r7, #4]
 800bce2:	4a1e      	ldr	r2, [pc, #120]	; (800bd5c <TIM_OC2_SetConfig+0x100>)
 800bce4:	4293      	cmp	r3, r2
 800bce6:	d00f      	beq.n	800bd08 <TIM_OC2_SetConfig+0xac>
 800bce8:	687b      	ldr	r3, [r7, #4]
 800bcea:	4a1d      	ldr	r2, [pc, #116]	; (800bd60 <TIM_OC2_SetConfig+0x104>)
 800bcec:	4293      	cmp	r3, r2
 800bcee:	d00b      	beq.n	800bd08 <TIM_OC2_SetConfig+0xac>
 800bcf0:	687b      	ldr	r3, [r7, #4]
 800bcf2:	4a1c      	ldr	r2, [pc, #112]	; (800bd64 <TIM_OC2_SetConfig+0x108>)
 800bcf4:	4293      	cmp	r3, r2
 800bcf6:	d007      	beq.n	800bd08 <TIM_OC2_SetConfig+0xac>
 800bcf8:	687b      	ldr	r3, [r7, #4]
 800bcfa:	4a1b      	ldr	r2, [pc, #108]	; (800bd68 <TIM_OC2_SetConfig+0x10c>)
 800bcfc:	4293      	cmp	r3, r2
 800bcfe:	d003      	beq.n	800bd08 <TIM_OC2_SetConfig+0xac>
 800bd00:	687b      	ldr	r3, [r7, #4]
 800bd02:	4a1a      	ldr	r2, [pc, #104]	; (800bd6c <TIM_OC2_SetConfig+0x110>)
 800bd04:	4293      	cmp	r3, r2
 800bd06:	d113      	bne.n	800bd30 <TIM_OC2_SetConfig+0xd4>
 800bd08:	693b      	ldr	r3, [r7, #16]
 800bd0a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800bd0e:	613b      	str	r3, [r7, #16]
 800bd10:	693b      	ldr	r3, [r7, #16]
 800bd12:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800bd16:	613b      	str	r3, [r7, #16]
 800bd18:	683b      	ldr	r3, [r7, #0]
 800bd1a:	695b      	ldr	r3, [r3, #20]
 800bd1c:	009b      	lsls	r3, r3, #2
 800bd1e:	693a      	ldr	r2, [r7, #16]
 800bd20:	4313      	orrs	r3, r2
 800bd22:	613b      	str	r3, [r7, #16]
 800bd24:	683b      	ldr	r3, [r7, #0]
 800bd26:	699b      	ldr	r3, [r3, #24]
 800bd28:	009b      	lsls	r3, r3, #2
 800bd2a:	693a      	ldr	r2, [r7, #16]
 800bd2c:	4313      	orrs	r3, r2
 800bd2e:	613b      	str	r3, [r7, #16]
 800bd30:	687b      	ldr	r3, [r7, #4]
 800bd32:	693a      	ldr	r2, [r7, #16]
 800bd34:	605a      	str	r2, [r3, #4]
 800bd36:	687b      	ldr	r3, [r7, #4]
 800bd38:	68fa      	ldr	r2, [r7, #12]
 800bd3a:	619a      	str	r2, [r3, #24]
 800bd3c:	683b      	ldr	r3, [r7, #0]
 800bd3e:	685a      	ldr	r2, [r3, #4]
 800bd40:	687b      	ldr	r3, [r7, #4]
 800bd42:	639a      	str	r2, [r3, #56]	; 0x38
 800bd44:	687b      	ldr	r3, [r7, #4]
 800bd46:	697a      	ldr	r2, [r7, #20]
 800bd48:	621a      	str	r2, [r3, #32]
 800bd4a:	bf00      	nop
 800bd4c:	371c      	adds	r7, #28
 800bd4e:	46bd      	mov	sp, r7
 800bd50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd54:	4770      	bx	lr
 800bd56:	bf00      	nop
 800bd58:	feff8fff 	.word	0xfeff8fff
 800bd5c:	40010000 	.word	0x40010000
 800bd60:	40010400 	.word	0x40010400
 800bd64:	40014000 	.word	0x40014000
 800bd68:	40014400 	.word	0x40014400
 800bd6c:	40014800 	.word	0x40014800

0800bd70 <TIM_OC3_SetConfig>:
 800bd70:	b480      	push	{r7}
 800bd72:	b087      	sub	sp, #28
 800bd74:	af00      	add	r7, sp, #0
 800bd76:	6078      	str	r0, [r7, #4]
 800bd78:	6039      	str	r1, [r7, #0]
 800bd7a:	687b      	ldr	r3, [r7, #4]
 800bd7c:	6a1b      	ldr	r3, [r3, #32]
 800bd7e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800bd82:	687b      	ldr	r3, [r7, #4]
 800bd84:	621a      	str	r2, [r3, #32]
 800bd86:	687b      	ldr	r3, [r7, #4]
 800bd88:	6a1b      	ldr	r3, [r3, #32]
 800bd8a:	617b      	str	r3, [r7, #20]
 800bd8c:	687b      	ldr	r3, [r7, #4]
 800bd8e:	685b      	ldr	r3, [r3, #4]
 800bd90:	613b      	str	r3, [r7, #16]
 800bd92:	687b      	ldr	r3, [r7, #4]
 800bd94:	69db      	ldr	r3, [r3, #28]
 800bd96:	60fb      	str	r3, [r7, #12]
 800bd98:	68fa      	ldr	r2, [r7, #12]
 800bd9a:	4b33      	ldr	r3, [pc, #204]	; (800be68 <TIM_OC3_SetConfig+0xf8>)
 800bd9c:	4013      	ands	r3, r2
 800bd9e:	60fb      	str	r3, [r7, #12]
 800bda0:	68fb      	ldr	r3, [r7, #12]
 800bda2:	f023 0303 	bic.w	r3, r3, #3
 800bda6:	60fb      	str	r3, [r7, #12]
 800bda8:	683b      	ldr	r3, [r7, #0]
 800bdaa:	681b      	ldr	r3, [r3, #0]
 800bdac:	68fa      	ldr	r2, [r7, #12]
 800bdae:	4313      	orrs	r3, r2
 800bdb0:	60fb      	str	r3, [r7, #12]
 800bdb2:	697b      	ldr	r3, [r7, #20]
 800bdb4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800bdb8:	617b      	str	r3, [r7, #20]
 800bdba:	683b      	ldr	r3, [r7, #0]
 800bdbc:	689b      	ldr	r3, [r3, #8]
 800bdbe:	021b      	lsls	r3, r3, #8
 800bdc0:	697a      	ldr	r2, [r7, #20]
 800bdc2:	4313      	orrs	r3, r2
 800bdc4:	617b      	str	r3, [r7, #20]
 800bdc6:	687b      	ldr	r3, [r7, #4]
 800bdc8:	4a28      	ldr	r2, [pc, #160]	; (800be6c <TIM_OC3_SetConfig+0xfc>)
 800bdca:	4293      	cmp	r3, r2
 800bdcc:	d003      	beq.n	800bdd6 <TIM_OC3_SetConfig+0x66>
 800bdce:	687b      	ldr	r3, [r7, #4]
 800bdd0:	4a27      	ldr	r2, [pc, #156]	; (800be70 <TIM_OC3_SetConfig+0x100>)
 800bdd2:	4293      	cmp	r3, r2
 800bdd4:	d10d      	bne.n	800bdf2 <TIM_OC3_SetConfig+0x82>
 800bdd6:	697b      	ldr	r3, [r7, #20]
 800bdd8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800bddc:	617b      	str	r3, [r7, #20]
 800bdde:	683b      	ldr	r3, [r7, #0]
 800bde0:	68db      	ldr	r3, [r3, #12]
 800bde2:	021b      	lsls	r3, r3, #8
 800bde4:	697a      	ldr	r2, [r7, #20]
 800bde6:	4313      	orrs	r3, r2
 800bde8:	617b      	str	r3, [r7, #20]
 800bdea:	697b      	ldr	r3, [r7, #20]
 800bdec:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800bdf0:	617b      	str	r3, [r7, #20]
 800bdf2:	687b      	ldr	r3, [r7, #4]
 800bdf4:	4a1d      	ldr	r2, [pc, #116]	; (800be6c <TIM_OC3_SetConfig+0xfc>)
 800bdf6:	4293      	cmp	r3, r2
 800bdf8:	d00f      	beq.n	800be1a <TIM_OC3_SetConfig+0xaa>
 800bdfa:	687b      	ldr	r3, [r7, #4]
 800bdfc:	4a1c      	ldr	r2, [pc, #112]	; (800be70 <TIM_OC3_SetConfig+0x100>)
 800bdfe:	4293      	cmp	r3, r2
 800be00:	d00b      	beq.n	800be1a <TIM_OC3_SetConfig+0xaa>
 800be02:	687b      	ldr	r3, [r7, #4]
 800be04:	4a1b      	ldr	r2, [pc, #108]	; (800be74 <TIM_OC3_SetConfig+0x104>)
 800be06:	4293      	cmp	r3, r2
 800be08:	d007      	beq.n	800be1a <TIM_OC3_SetConfig+0xaa>
 800be0a:	687b      	ldr	r3, [r7, #4]
 800be0c:	4a1a      	ldr	r2, [pc, #104]	; (800be78 <TIM_OC3_SetConfig+0x108>)
 800be0e:	4293      	cmp	r3, r2
 800be10:	d003      	beq.n	800be1a <TIM_OC3_SetConfig+0xaa>
 800be12:	687b      	ldr	r3, [r7, #4]
 800be14:	4a19      	ldr	r2, [pc, #100]	; (800be7c <TIM_OC3_SetConfig+0x10c>)
 800be16:	4293      	cmp	r3, r2
 800be18:	d113      	bne.n	800be42 <TIM_OC3_SetConfig+0xd2>
 800be1a:	693b      	ldr	r3, [r7, #16]
 800be1c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800be20:	613b      	str	r3, [r7, #16]
 800be22:	693b      	ldr	r3, [r7, #16]
 800be24:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800be28:	613b      	str	r3, [r7, #16]
 800be2a:	683b      	ldr	r3, [r7, #0]
 800be2c:	695b      	ldr	r3, [r3, #20]
 800be2e:	011b      	lsls	r3, r3, #4
 800be30:	693a      	ldr	r2, [r7, #16]
 800be32:	4313      	orrs	r3, r2
 800be34:	613b      	str	r3, [r7, #16]
 800be36:	683b      	ldr	r3, [r7, #0]
 800be38:	699b      	ldr	r3, [r3, #24]
 800be3a:	011b      	lsls	r3, r3, #4
 800be3c:	693a      	ldr	r2, [r7, #16]
 800be3e:	4313      	orrs	r3, r2
 800be40:	613b      	str	r3, [r7, #16]
 800be42:	687b      	ldr	r3, [r7, #4]
 800be44:	693a      	ldr	r2, [r7, #16]
 800be46:	605a      	str	r2, [r3, #4]
 800be48:	687b      	ldr	r3, [r7, #4]
 800be4a:	68fa      	ldr	r2, [r7, #12]
 800be4c:	61da      	str	r2, [r3, #28]
 800be4e:	683b      	ldr	r3, [r7, #0]
 800be50:	685a      	ldr	r2, [r3, #4]
 800be52:	687b      	ldr	r3, [r7, #4]
 800be54:	63da      	str	r2, [r3, #60]	; 0x3c
 800be56:	687b      	ldr	r3, [r7, #4]
 800be58:	697a      	ldr	r2, [r7, #20]
 800be5a:	621a      	str	r2, [r3, #32]
 800be5c:	bf00      	nop
 800be5e:	371c      	adds	r7, #28
 800be60:	46bd      	mov	sp, r7
 800be62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be66:	4770      	bx	lr
 800be68:	fffeff8f 	.word	0xfffeff8f
 800be6c:	40010000 	.word	0x40010000
 800be70:	40010400 	.word	0x40010400
 800be74:	40014000 	.word	0x40014000
 800be78:	40014400 	.word	0x40014400
 800be7c:	40014800 	.word	0x40014800

0800be80 <TIM_OC4_SetConfig>:
 800be80:	b480      	push	{r7}
 800be82:	b087      	sub	sp, #28
 800be84:	af00      	add	r7, sp, #0
 800be86:	6078      	str	r0, [r7, #4]
 800be88:	6039      	str	r1, [r7, #0]
 800be8a:	687b      	ldr	r3, [r7, #4]
 800be8c:	6a1b      	ldr	r3, [r3, #32]
 800be8e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800be92:	687b      	ldr	r3, [r7, #4]
 800be94:	621a      	str	r2, [r3, #32]
 800be96:	687b      	ldr	r3, [r7, #4]
 800be98:	6a1b      	ldr	r3, [r3, #32]
 800be9a:	613b      	str	r3, [r7, #16]
 800be9c:	687b      	ldr	r3, [r7, #4]
 800be9e:	685b      	ldr	r3, [r3, #4]
 800bea0:	617b      	str	r3, [r7, #20]
 800bea2:	687b      	ldr	r3, [r7, #4]
 800bea4:	69db      	ldr	r3, [r3, #28]
 800bea6:	60fb      	str	r3, [r7, #12]
 800bea8:	68fa      	ldr	r2, [r7, #12]
 800beaa:	4b24      	ldr	r3, [pc, #144]	; (800bf3c <TIM_OC4_SetConfig+0xbc>)
 800beac:	4013      	ands	r3, r2
 800beae:	60fb      	str	r3, [r7, #12]
 800beb0:	68fb      	ldr	r3, [r7, #12]
 800beb2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800beb6:	60fb      	str	r3, [r7, #12]
 800beb8:	683b      	ldr	r3, [r7, #0]
 800beba:	681b      	ldr	r3, [r3, #0]
 800bebc:	021b      	lsls	r3, r3, #8
 800bebe:	68fa      	ldr	r2, [r7, #12]
 800bec0:	4313      	orrs	r3, r2
 800bec2:	60fb      	str	r3, [r7, #12]
 800bec4:	693b      	ldr	r3, [r7, #16]
 800bec6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800beca:	613b      	str	r3, [r7, #16]
 800becc:	683b      	ldr	r3, [r7, #0]
 800bece:	689b      	ldr	r3, [r3, #8]
 800bed0:	031b      	lsls	r3, r3, #12
 800bed2:	693a      	ldr	r2, [r7, #16]
 800bed4:	4313      	orrs	r3, r2
 800bed6:	613b      	str	r3, [r7, #16]
 800bed8:	687b      	ldr	r3, [r7, #4]
 800beda:	4a19      	ldr	r2, [pc, #100]	; (800bf40 <TIM_OC4_SetConfig+0xc0>)
 800bedc:	4293      	cmp	r3, r2
 800bede:	d00f      	beq.n	800bf00 <TIM_OC4_SetConfig+0x80>
 800bee0:	687b      	ldr	r3, [r7, #4]
 800bee2:	4a18      	ldr	r2, [pc, #96]	; (800bf44 <TIM_OC4_SetConfig+0xc4>)
 800bee4:	4293      	cmp	r3, r2
 800bee6:	d00b      	beq.n	800bf00 <TIM_OC4_SetConfig+0x80>
 800bee8:	687b      	ldr	r3, [r7, #4]
 800beea:	4a17      	ldr	r2, [pc, #92]	; (800bf48 <TIM_OC4_SetConfig+0xc8>)
 800beec:	4293      	cmp	r3, r2
 800beee:	d007      	beq.n	800bf00 <TIM_OC4_SetConfig+0x80>
 800bef0:	687b      	ldr	r3, [r7, #4]
 800bef2:	4a16      	ldr	r2, [pc, #88]	; (800bf4c <TIM_OC4_SetConfig+0xcc>)
 800bef4:	4293      	cmp	r3, r2
 800bef6:	d003      	beq.n	800bf00 <TIM_OC4_SetConfig+0x80>
 800bef8:	687b      	ldr	r3, [r7, #4]
 800befa:	4a15      	ldr	r2, [pc, #84]	; (800bf50 <TIM_OC4_SetConfig+0xd0>)
 800befc:	4293      	cmp	r3, r2
 800befe:	d109      	bne.n	800bf14 <TIM_OC4_SetConfig+0x94>
 800bf00:	697b      	ldr	r3, [r7, #20]
 800bf02:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800bf06:	617b      	str	r3, [r7, #20]
 800bf08:	683b      	ldr	r3, [r7, #0]
 800bf0a:	695b      	ldr	r3, [r3, #20]
 800bf0c:	019b      	lsls	r3, r3, #6
 800bf0e:	697a      	ldr	r2, [r7, #20]
 800bf10:	4313      	orrs	r3, r2
 800bf12:	617b      	str	r3, [r7, #20]
 800bf14:	687b      	ldr	r3, [r7, #4]
 800bf16:	697a      	ldr	r2, [r7, #20]
 800bf18:	605a      	str	r2, [r3, #4]
 800bf1a:	687b      	ldr	r3, [r7, #4]
 800bf1c:	68fa      	ldr	r2, [r7, #12]
 800bf1e:	61da      	str	r2, [r3, #28]
 800bf20:	683b      	ldr	r3, [r7, #0]
 800bf22:	685a      	ldr	r2, [r3, #4]
 800bf24:	687b      	ldr	r3, [r7, #4]
 800bf26:	641a      	str	r2, [r3, #64]	; 0x40
 800bf28:	687b      	ldr	r3, [r7, #4]
 800bf2a:	693a      	ldr	r2, [r7, #16]
 800bf2c:	621a      	str	r2, [r3, #32]
 800bf2e:	bf00      	nop
 800bf30:	371c      	adds	r7, #28
 800bf32:	46bd      	mov	sp, r7
 800bf34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf38:	4770      	bx	lr
 800bf3a:	bf00      	nop
 800bf3c:	feff8fff 	.word	0xfeff8fff
 800bf40:	40010000 	.word	0x40010000
 800bf44:	40010400 	.word	0x40010400
 800bf48:	40014000 	.word	0x40014000
 800bf4c:	40014400 	.word	0x40014400
 800bf50:	40014800 	.word	0x40014800

0800bf54 <TIM_OC5_SetConfig>:
 800bf54:	b480      	push	{r7}
 800bf56:	b087      	sub	sp, #28
 800bf58:	af00      	add	r7, sp, #0
 800bf5a:	6078      	str	r0, [r7, #4]
 800bf5c:	6039      	str	r1, [r7, #0]
 800bf5e:	687b      	ldr	r3, [r7, #4]
 800bf60:	6a1b      	ldr	r3, [r3, #32]
 800bf62:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800bf66:	687b      	ldr	r3, [r7, #4]
 800bf68:	621a      	str	r2, [r3, #32]
 800bf6a:	687b      	ldr	r3, [r7, #4]
 800bf6c:	6a1b      	ldr	r3, [r3, #32]
 800bf6e:	613b      	str	r3, [r7, #16]
 800bf70:	687b      	ldr	r3, [r7, #4]
 800bf72:	685b      	ldr	r3, [r3, #4]
 800bf74:	617b      	str	r3, [r7, #20]
 800bf76:	687b      	ldr	r3, [r7, #4]
 800bf78:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800bf7a:	60fb      	str	r3, [r7, #12]
 800bf7c:	68fa      	ldr	r2, [r7, #12]
 800bf7e:	4b21      	ldr	r3, [pc, #132]	; (800c004 <TIM_OC5_SetConfig+0xb0>)
 800bf80:	4013      	ands	r3, r2
 800bf82:	60fb      	str	r3, [r7, #12]
 800bf84:	683b      	ldr	r3, [r7, #0]
 800bf86:	681b      	ldr	r3, [r3, #0]
 800bf88:	68fa      	ldr	r2, [r7, #12]
 800bf8a:	4313      	orrs	r3, r2
 800bf8c:	60fb      	str	r3, [r7, #12]
 800bf8e:	693b      	ldr	r3, [r7, #16]
 800bf90:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800bf94:	613b      	str	r3, [r7, #16]
 800bf96:	683b      	ldr	r3, [r7, #0]
 800bf98:	689b      	ldr	r3, [r3, #8]
 800bf9a:	041b      	lsls	r3, r3, #16
 800bf9c:	693a      	ldr	r2, [r7, #16]
 800bf9e:	4313      	orrs	r3, r2
 800bfa0:	613b      	str	r3, [r7, #16]
 800bfa2:	687b      	ldr	r3, [r7, #4]
 800bfa4:	4a18      	ldr	r2, [pc, #96]	; (800c008 <TIM_OC5_SetConfig+0xb4>)
 800bfa6:	4293      	cmp	r3, r2
 800bfa8:	d00f      	beq.n	800bfca <TIM_OC5_SetConfig+0x76>
 800bfaa:	687b      	ldr	r3, [r7, #4]
 800bfac:	4a17      	ldr	r2, [pc, #92]	; (800c00c <TIM_OC5_SetConfig+0xb8>)
 800bfae:	4293      	cmp	r3, r2
 800bfb0:	d00b      	beq.n	800bfca <TIM_OC5_SetConfig+0x76>
 800bfb2:	687b      	ldr	r3, [r7, #4]
 800bfb4:	4a16      	ldr	r2, [pc, #88]	; (800c010 <TIM_OC5_SetConfig+0xbc>)
 800bfb6:	4293      	cmp	r3, r2
 800bfb8:	d007      	beq.n	800bfca <TIM_OC5_SetConfig+0x76>
 800bfba:	687b      	ldr	r3, [r7, #4]
 800bfbc:	4a15      	ldr	r2, [pc, #84]	; (800c014 <TIM_OC5_SetConfig+0xc0>)
 800bfbe:	4293      	cmp	r3, r2
 800bfc0:	d003      	beq.n	800bfca <TIM_OC5_SetConfig+0x76>
 800bfc2:	687b      	ldr	r3, [r7, #4]
 800bfc4:	4a14      	ldr	r2, [pc, #80]	; (800c018 <TIM_OC5_SetConfig+0xc4>)
 800bfc6:	4293      	cmp	r3, r2
 800bfc8:	d109      	bne.n	800bfde <TIM_OC5_SetConfig+0x8a>
 800bfca:	697b      	ldr	r3, [r7, #20]
 800bfcc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800bfd0:	617b      	str	r3, [r7, #20]
 800bfd2:	683b      	ldr	r3, [r7, #0]
 800bfd4:	695b      	ldr	r3, [r3, #20]
 800bfd6:	021b      	lsls	r3, r3, #8
 800bfd8:	697a      	ldr	r2, [r7, #20]
 800bfda:	4313      	orrs	r3, r2
 800bfdc:	617b      	str	r3, [r7, #20]
 800bfde:	687b      	ldr	r3, [r7, #4]
 800bfe0:	697a      	ldr	r2, [r7, #20]
 800bfe2:	605a      	str	r2, [r3, #4]
 800bfe4:	687b      	ldr	r3, [r7, #4]
 800bfe6:	68fa      	ldr	r2, [r7, #12]
 800bfe8:	655a      	str	r2, [r3, #84]	; 0x54
 800bfea:	683b      	ldr	r3, [r7, #0]
 800bfec:	685a      	ldr	r2, [r3, #4]
 800bfee:	687b      	ldr	r3, [r7, #4]
 800bff0:	659a      	str	r2, [r3, #88]	; 0x58
 800bff2:	687b      	ldr	r3, [r7, #4]
 800bff4:	693a      	ldr	r2, [r7, #16]
 800bff6:	621a      	str	r2, [r3, #32]
 800bff8:	bf00      	nop
 800bffa:	371c      	adds	r7, #28
 800bffc:	46bd      	mov	sp, r7
 800bffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c002:	4770      	bx	lr
 800c004:	fffeff8f 	.word	0xfffeff8f
 800c008:	40010000 	.word	0x40010000
 800c00c:	40010400 	.word	0x40010400
 800c010:	40014000 	.word	0x40014000
 800c014:	40014400 	.word	0x40014400
 800c018:	40014800 	.word	0x40014800

0800c01c <TIM_OC6_SetConfig>:
 800c01c:	b480      	push	{r7}
 800c01e:	b087      	sub	sp, #28
 800c020:	af00      	add	r7, sp, #0
 800c022:	6078      	str	r0, [r7, #4]
 800c024:	6039      	str	r1, [r7, #0]
 800c026:	687b      	ldr	r3, [r7, #4]
 800c028:	6a1b      	ldr	r3, [r3, #32]
 800c02a:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 800c02e:	687b      	ldr	r3, [r7, #4]
 800c030:	621a      	str	r2, [r3, #32]
 800c032:	687b      	ldr	r3, [r7, #4]
 800c034:	6a1b      	ldr	r3, [r3, #32]
 800c036:	613b      	str	r3, [r7, #16]
 800c038:	687b      	ldr	r3, [r7, #4]
 800c03a:	685b      	ldr	r3, [r3, #4]
 800c03c:	617b      	str	r3, [r7, #20]
 800c03e:	687b      	ldr	r3, [r7, #4]
 800c040:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c042:	60fb      	str	r3, [r7, #12]
 800c044:	68fa      	ldr	r2, [r7, #12]
 800c046:	4b22      	ldr	r3, [pc, #136]	; (800c0d0 <TIM_OC6_SetConfig+0xb4>)
 800c048:	4013      	ands	r3, r2
 800c04a:	60fb      	str	r3, [r7, #12]
 800c04c:	683b      	ldr	r3, [r7, #0]
 800c04e:	681b      	ldr	r3, [r3, #0]
 800c050:	021b      	lsls	r3, r3, #8
 800c052:	68fa      	ldr	r2, [r7, #12]
 800c054:	4313      	orrs	r3, r2
 800c056:	60fb      	str	r3, [r7, #12]
 800c058:	693b      	ldr	r3, [r7, #16]
 800c05a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800c05e:	613b      	str	r3, [r7, #16]
 800c060:	683b      	ldr	r3, [r7, #0]
 800c062:	689b      	ldr	r3, [r3, #8]
 800c064:	051b      	lsls	r3, r3, #20
 800c066:	693a      	ldr	r2, [r7, #16]
 800c068:	4313      	orrs	r3, r2
 800c06a:	613b      	str	r3, [r7, #16]
 800c06c:	687b      	ldr	r3, [r7, #4]
 800c06e:	4a19      	ldr	r2, [pc, #100]	; (800c0d4 <TIM_OC6_SetConfig+0xb8>)
 800c070:	4293      	cmp	r3, r2
 800c072:	d00f      	beq.n	800c094 <TIM_OC6_SetConfig+0x78>
 800c074:	687b      	ldr	r3, [r7, #4]
 800c076:	4a18      	ldr	r2, [pc, #96]	; (800c0d8 <TIM_OC6_SetConfig+0xbc>)
 800c078:	4293      	cmp	r3, r2
 800c07a:	d00b      	beq.n	800c094 <TIM_OC6_SetConfig+0x78>
 800c07c:	687b      	ldr	r3, [r7, #4]
 800c07e:	4a17      	ldr	r2, [pc, #92]	; (800c0dc <TIM_OC6_SetConfig+0xc0>)
 800c080:	4293      	cmp	r3, r2
 800c082:	d007      	beq.n	800c094 <TIM_OC6_SetConfig+0x78>
 800c084:	687b      	ldr	r3, [r7, #4]
 800c086:	4a16      	ldr	r2, [pc, #88]	; (800c0e0 <TIM_OC6_SetConfig+0xc4>)
 800c088:	4293      	cmp	r3, r2
 800c08a:	d003      	beq.n	800c094 <TIM_OC6_SetConfig+0x78>
 800c08c:	687b      	ldr	r3, [r7, #4]
 800c08e:	4a15      	ldr	r2, [pc, #84]	; (800c0e4 <TIM_OC6_SetConfig+0xc8>)
 800c090:	4293      	cmp	r3, r2
 800c092:	d109      	bne.n	800c0a8 <TIM_OC6_SetConfig+0x8c>
 800c094:	697b      	ldr	r3, [r7, #20]
 800c096:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800c09a:	617b      	str	r3, [r7, #20]
 800c09c:	683b      	ldr	r3, [r7, #0]
 800c09e:	695b      	ldr	r3, [r3, #20]
 800c0a0:	029b      	lsls	r3, r3, #10
 800c0a2:	697a      	ldr	r2, [r7, #20]
 800c0a4:	4313      	orrs	r3, r2
 800c0a6:	617b      	str	r3, [r7, #20]
 800c0a8:	687b      	ldr	r3, [r7, #4]
 800c0aa:	697a      	ldr	r2, [r7, #20]
 800c0ac:	605a      	str	r2, [r3, #4]
 800c0ae:	687b      	ldr	r3, [r7, #4]
 800c0b0:	68fa      	ldr	r2, [r7, #12]
 800c0b2:	655a      	str	r2, [r3, #84]	; 0x54
 800c0b4:	683b      	ldr	r3, [r7, #0]
 800c0b6:	685a      	ldr	r2, [r3, #4]
 800c0b8:	687b      	ldr	r3, [r7, #4]
 800c0ba:	65da      	str	r2, [r3, #92]	; 0x5c
 800c0bc:	687b      	ldr	r3, [r7, #4]
 800c0be:	693a      	ldr	r2, [r7, #16]
 800c0c0:	621a      	str	r2, [r3, #32]
 800c0c2:	bf00      	nop
 800c0c4:	371c      	adds	r7, #28
 800c0c6:	46bd      	mov	sp, r7
 800c0c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0cc:	4770      	bx	lr
 800c0ce:	bf00      	nop
 800c0d0:	feff8fff 	.word	0xfeff8fff
 800c0d4:	40010000 	.word	0x40010000
 800c0d8:	40010400 	.word	0x40010400
 800c0dc:	40014000 	.word	0x40014000
 800c0e0:	40014400 	.word	0x40014400
 800c0e4:	40014800 	.word	0x40014800

0800c0e8 <TIM_TI1_SetConfig>:
 800c0e8:	b480      	push	{r7}
 800c0ea:	b087      	sub	sp, #28
 800c0ec:	af00      	add	r7, sp, #0
 800c0ee:	60f8      	str	r0, [r7, #12]
 800c0f0:	60b9      	str	r1, [r7, #8]
 800c0f2:	607a      	str	r2, [r7, #4]
 800c0f4:	603b      	str	r3, [r7, #0]
 800c0f6:	68fb      	ldr	r3, [r7, #12]
 800c0f8:	6a1b      	ldr	r3, [r3, #32]
 800c0fa:	f023 0201 	bic.w	r2, r3, #1
 800c0fe:	68fb      	ldr	r3, [r7, #12]
 800c100:	621a      	str	r2, [r3, #32]
 800c102:	68fb      	ldr	r3, [r7, #12]
 800c104:	699b      	ldr	r3, [r3, #24]
 800c106:	617b      	str	r3, [r7, #20]
 800c108:	68fb      	ldr	r3, [r7, #12]
 800c10a:	6a1b      	ldr	r3, [r3, #32]
 800c10c:	613b      	str	r3, [r7, #16]
 800c10e:	68fb      	ldr	r3, [r7, #12]
 800c110:	4a28      	ldr	r2, [pc, #160]	; (800c1b4 <TIM_TI1_SetConfig+0xcc>)
 800c112:	4293      	cmp	r3, r2
 800c114:	d01b      	beq.n	800c14e <TIM_TI1_SetConfig+0x66>
 800c116:	68fb      	ldr	r3, [r7, #12]
 800c118:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c11c:	d017      	beq.n	800c14e <TIM_TI1_SetConfig+0x66>
 800c11e:	68fb      	ldr	r3, [r7, #12]
 800c120:	4a25      	ldr	r2, [pc, #148]	; (800c1b8 <TIM_TI1_SetConfig+0xd0>)
 800c122:	4293      	cmp	r3, r2
 800c124:	d013      	beq.n	800c14e <TIM_TI1_SetConfig+0x66>
 800c126:	68fb      	ldr	r3, [r7, #12]
 800c128:	4a24      	ldr	r2, [pc, #144]	; (800c1bc <TIM_TI1_SetConfig+0xd4>)
 800c12a:	4293      	cmp	r3, r2
 800c12c:	d00f      	beq.n	800c14e <TIM_TI1_SetConfig+0x66>
 800c12e:	68fb      	ldr	r3, [r7, #12]
 800c130:	4a23      	ldr	r2, [pc, #140]	; (800c1c0 <TIM_TI1_SetConfig+0xd8>)
 800c132:	4293      	cmp	r3, r2
 800c134:	d00b      	beq.n	800c14e <TIM_TI1_SetConfig+0x66>
 800c136:	68fb      	ldr	r3, [r7, #12]
 800c138:	4a22      	ldr	r2, [pc, #136]	; (800c1c4 <TIM_TI1_SetConfig+0xdc>)
 800c13a:	4293      	cmp	r3, r2
 800c13c:	d007      	beq.n	800c14e <TIM_TI1_SetConfig+0x66>
 800c13e:	68fb      	ldr	r3, [r7, #12]
 800c140:	4a21      	ldr	r2, [pc, #132]	; (800c1c8 <TIM_TI1_SetConfig+0xe0>)
 800c142:	4293      	cmp	r3, r2
 800c144:	d003      	beq.n	800c14e <TIM_TI1_SetConfig+0x66>
 800c146:	68fb      	ldr	r3, [r7, #12]
 800c148:	4a20      	ldr	r2, [pc, #128]	; (800c1cc <TIM_TI1_SetConfig+0xe4>)
 800c14a:	4293      	cmp	r3, r2
 800c14c:	d101      	bne.n	800c152 <TIM_TI1_SetConfig+0x6a>
 800c14e:	2301      	movs	r3, #1
 800c150:	e000      	b.n	800c154 <TIM_TI1_SetConfig+0x6c>
 800c152:	2300      	movs	r3, #0
 800c154:	2b00      	cmp	r3, #0
 800c156:	d008      	beq.n	800c16a <TIM_TI1_SetConfig+0x82>
 800c158:	697b      	ldr	r3, [r7, #20]
 800c15a:	f023 0303 	bic.w	r3, r3, #3
 800c15e:	617b      	str	r3, [r7, #20]
 800c160:	697a      	ldr	r2, [r7, #20]
 800c162:	687b      	ldr	r3, [r7, #4]
 800c164:	4313      	orrs	r3, r2
 800c166:	617b      	str	r3, [r7, #20]
 800c168:	e003      	b.n	800c172 <TIM_TI1_SetConfig+0x8a>
 800c16a:	697b      	ldr	r3, [r7, #20]
 800c16c:	f043 0301 	orr.w	r3, r3, #1
 800c170:	617b      	str	r3, [r7, #20]
 800c172:	697b      	ldr	r3, [r7, #20]
 800c174:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800c178:	617b      	str	r3, [r7, #20]
 800c17a:	683b      	ldr	r3, [r7, #0]
 800c17c:	011b      	lsls	r3, r3, #4
 800c17e:	b2db      	uxtb	r3, r3
 800c180:	697a      	ldr	r2, [r7, #20]
 800c182:	4313      	orrs	r3, r2
 800c184:	617b      	str	r3, [r7, #20]
 800c186:	693b      	ldr	r3, [r7, #16]
 800c188:	f023 030a 	bic.w	r3, r3, #10
 800c18c:	613b      	str	r3, [r7, #16]
 800c18e:	68bb      	ldr	r3, [r7, #8]
 800c190:	f003 030a 	and.w	r3, r3, #10
 800c194:	693a      	ldr	r2, [r7, #16]
 800c196:	4313      	orrs	r3, r2
 800c198:	613b      	str	r3, [r7, #16]
 800c19a:	68fb      	ldr	r3, [r7, #12]
 800c19c:	697a      	ldr	r2, [r7, #20]
 800c19e:	619a      	str	r2, [r3, #24]
 800c1a0:	68fb      	ldr	r3, [r7, #12]
 800c1a2:	693a      	ldr	r2, [r7, #16]
 800c1a4:	621a      	str	r2, [r3, #32]
 800c1a6:	bf00      	nop
 800c1a8:	371c      	adds	r7, #28
 800c1aa:	46bd      	mov	sp, r7
 800c1ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1b0:	4770      	bx	lr
 800c1b2:	bf00      	nop
 800c1b4:	40010000 	.word	0x40010000
 800c1b8:	40000400 	.word	0x40000400
 800c1bc:	40000800 	.word	0x40000800
 800c1c0:	40000c00 	.word	0x40000c00
 800c1c4:	40010400 	.word	0x40010400
 800c1c8:	40001800 	.word	0x40001800
 800c1cc:	40014000 	.word	0x40014000

0800c1d0 <TIM_TI1_ConfigInputStage>:
 800c1d0:	b480      	push	{r7}
 800c1d2:	b087      	sub	sp, #28
 800c1d4:	af00      	add	r7, sp, #0
 800c1d6:	60f8      	str	r0, [r7, #12]
 800c1d8:	60b9      	str	r1, [r7, #8]
 800c1da:	607a      	str	r2, [r7, #4]
 800c1dc:	68fb      	ldr	r3, [r7, #12]
 800c1de:	6a1b      	ldr	r3, [r3, #32]
 800c1e0:	617b      	str	r3, [r7, #20]
 800c1e2:	68fb      	ldr	r3, [r7, #12]
 800c1e4:	6a1b      	ldr	r3, [r3, #32]
 800c1e6:	f023 0201 	bic.w	r2, r3, #1
 800c1ea:	68fb      	ldr	r3, [r7, #12]
 800c1ec:	621a      	str	r2, [r3, #32]
 800c1ee:	68fb      	ldr	r3, [r7, #12]
 800c1f0:	699b      	ldr	r3, [r3, #24]
 800c1f2:	613b      	str	r3, [r7, #16]
 800c1f4:	693b      	ldr	r3, [r7, #16]
 800c1f6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800c1fa:	613b      	str	r3, [r7, #16]
 800c1fc:	687b      	ldr	r3, [r7, #4]
 800c1fe:	011b      	lsls	r3, r3, #4
 800c200:	693a      	ldr	r2, [r7, #16]
 800c202:	4313      	orrs	r3, r2
 800c204:	613b      	str	r3, [r7, #16]
 800c206:	697b      	ldr	r3, [r7, #20]
 800c208:	f023 030a 	bic.w	r3, r3, #10
 800c20c:	617b      	str	r3, [r7, #20]
 800c20e:	697a      	ldr	r2, [r7, #20]
 800c210:	68bb      	ldr	r3, [r7, #8]
 800c212:	4313      	orrs	r3, r2
 800c214:	617b      	str	r3, [r7, #20]
 800c216:	68fb      	ldr	r3, [r7, #12]
 800c218:	693a      	ldr	r2, [r7, #16]
 800c21a:	619a      	str	r2, [r3, #24]
 800c21c:	68fb      	ldr	r3, [r7, #12]
 800c21e:	697a      	ldr	r2, [r7, #20]
 800c220:	621a      	str	r2, [r3, #32]
 800c222:	bf00      	nop
 800c224:	371c      	adds	r7, #28
 800c226:	46bd      	mov	sp, r7
 800c228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c22c:	4770      	bx	lr

0800c22e <TIM_TI2_SetConfig>:
 800c22e:	b480      	push	{r7}
 800c230:	b087      	sub	sp, #28
 800c232:	af00      	add	r7, sp, #0
 800c234:	60f8      	str	r0, [r7, #12]
 800c236:	60b9      	str	r1, [r7, #8]
 800c238:	607a      	str	r2, [r7, #4]
 800c23a:	603b      	str	r3, [r7, #0]
 800c23c:	68fb      	ldr	r3, [r7, #12]
 800c23e:	6a1b      	ldr	r3, [r3, #32]
 800c240:	f023 0210 	bic.w	r2, r3, #16
 800c244:	68fb      	ldr	r3, [r7, #12]
 800c246:	621a      	str	r2, [r3, #32]
 800c248:	68fb      	ldr	r3, [r7, #12]
 800c24a:	699b      	ldr	r3, [r3, #24]
 800c24c:	617b      	str	r3, [r7, #20]
 800c24e:	68fb      	ldr	r3, [r7, #12]
 800c250:	6a1b      	ldr	r3, [r3, #32]
 800c252:	613b      	str	r3, [r7, #16]
 800c254:	697b      	ldr	r3, [r7, #20]
 800c256:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800c25a:	617b      	str	r3, [r7, #20]
 800c25c:	687b      	ldr	r3, [r7, #4]
 800c25e:	021b      	lsls	r3, r3, #8
 800c260:	697a      	ldr	r2, [r7, #20]
 800c262:	4313      	orrs	r3, r2
 800c264:	617b      	str	r3, [r7, #20]
 800c266:	697b      	ldr	r3, [r7, #20]
 800c268:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800c26c:	617b      	str	r3, [r7, #20]
 800c26e:	683b      	ldr	r3, [r7, #0]
 800c270:	031b      	lsls	r3, r3, #12
 800c272:	b29b      	uxth	r3, r3
 800c274:	697a      	ldr	r2, [r7, #20]
 800c276:	4313      	orrs	r3, r2
 800c278:	617b      	str	r3, [r7, #20]
 800c27a:	693b      	ldr	r3, [r7, #16]
 800c27c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800c280:	613b      	str	r3, [r7, #16]
 800c282:	68bb      	ldr	r3, [r7, #8]
 800c284:	011b      	lsls	r3, r3, #4
 800c286:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 800c28a:	693a      	ldr	r2, [r7, #16]
 800c28c:	4313      	orrs	r3, r2
 800c28e:	613b      	str	r3, [r7, #16]
 800c290:	68fb      	ldr	r3, [r7, #12]
 800c292:	697a      	ldr	r2, [r7, #20]
 800c294:	619a      	str	r2, [r3, #24]
 800c296:	68fb      	ldr	r3, [r7, #12]
 800c298:	693a      	ldr	r2, [r7, #16]
 800c29a:	621a      	str	r2, [r3, #32]
 800c29c:	bf00      	nop
 800c29e:	371c      	adds	r7, #28
 800c2a0:	46bd      	mov	sp, r7
 800c2a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2a6:	4770      	bx	lr

0800c2a8 <TIM_TI2_ConfigInputStage>:
 800c2a8:	b480      	push	{r7}
 800c2aa:	b087      	sub	sp, #28
 800c2ac:	af00      	add	r7, sp, #0
 800c2ae:	60f8      	str	r0, [r7, #12]
 800c2b0:	60b9      	str	r1, [r7, #8]
 800c2b2:	607a      	str	r2, [r7, #4]
 800c2b4:	68fb      	ldr	r3, [r7, #12]
 800c2b6:	6a1b      	ldr	r3, [r3, #32]
 800c2b8:	f023 0210 	bic.w	r2, r3, #16
 800c2bc:	68fb      	ldr	r3, [r7, #12]
 800c2be:	621a      	str	r2, [r3, #32]
 800c2c0:	68fb      	ldr	r3, [r7, #12]
 800c2c2:	699b      	ldr	r3, [r3, #24]
 800c2c4:	617b      	str	r3, [r7, #20]
 800c2c6:	68fb      	ldr	r3, [r7, #12]
 800c2c8:	6a1b      	ldr	r3, [r3, #32]
 800c2ca:	613b      	str	r3, [r7, #16]
 800c2cc:	697b      	ldr	r3, [r7, #20]
 800c2ce:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800c2d2:	617b      	str	r3, [r7, #20]
 800c2d4:	687b      	ldr	r3, [r7, #4]
 800c2d6:	031b      	lsls	r3, r3, #12
 800c2d8:	697a      	ldr	r2, [r7, #20]
 800c2da:	4313      	orrs	r3, r2
 800c2dc:	617b      	str	r3, [r7, #20]
 800c2de:	693b      	ldr	r3, [r7, #16]
 800c2e0:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800c2e4:	613b      	str	r3, [r7, #16]
 800c2e6:	68bb      	ldr	r3, [r7, #8]
 800c2e8:	011b      	lsls	r3, r3, #4
 800c2ea:	693a      	ldr	r2, [r7, #16]
 800c2ec:	4313      	orrs	r3, r2
 800c2ee:	613b      	str	r3, [r7, #16]
 800c2f0:	68fb      	ldr	r3, [r7, #12]
 800c2f2:	697a      	ldr	r2, [r7, #20]
 800c2f4:	619a      	str	r2, [r3, #24]
 800c2f6:	68fb      	ldr	r3, [r7, #12]
 800c2f8:	693a      	ldr	r2, [r7, #16]
 800c2fa:	621a      	str	r2, [r3, #32]
 800c2fc:	bf00      	nop
 800c2fe:	371c      	adds	r7, #28
 800c300:	46bd      	mov	sp, r7
 800c302:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c306:	4770      	bx	lr

0800c308 <TIM_TI3_SetConfig>:
 800c308:	b480      	push	{r7}
 800c30a:	b087      	sub	sp, #28
 800c30c:	af00      	add	r7, sp, #0
 800c30e:	60f8      	str	r0, [r7, #12]
 800c310:	60b9      	str	r1, [r7, #8]
 800c312:	607a      	str	r2, [r7, #4]
 800c314:	603b      	str	r3, [r7, #0]
 800c316:	68fb      	ldr	r3, [r7, #12]
 800c318:	6a1b      	ldr	r3, [r3, #32]
 800c31a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800c31e:	68fb      	ldr	r3, [r7, #12]
 800c320:	621a      	str	r2, [r3, #32]
 800c322:	68fb      	ldr	r3, [r7, #12]
 800c324:	69db      	ldr	r3, [r3, #28]
 800c326:	617b      	str	r3, [r7, #20]
 800c328:	68fb      	ldr	r3, [r7, #12]
 800c32a:	6a1b      	ldr	r3, [r3, #32]
 800c32c:	613b      	str	r3, [r7, #16]
 800c32e:	697b      	ldr	r3, [r7, #20]
 800c330:	f023 0303 	bic.w	r3, r3, #3
 800c334:	617b      	str	r3, [r7, #20]
 800c336:	697a      	ldr	r2, [r7, #20]
 800c338:	687b      	ldr	r3, [r7, #4]
 800c33a:	4313      	orrs	r3, r2
 800c33c:	617b      	str	r3, [r7, #20]
 800c33e:	697b      	ldr	r3, [r7, #20]
 800c340:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800c344:	617b      	str	r3, [r7, #20]
 800c346:	683b      	ldr	r3, [r7, #0]
 800c348:	011b      	lsls	r3, r3, #4
 800c34a:	b2db      	uxtb	r3, r3
 800c34c:	697a      	ldr	r2, [r7, #20]
 800c34e:	4313      	orrs	r3, r2
 800c350:	617b      	str	r3, [r7, #20]
 800c352:	693b      	ldr	r3, [r7, #16]
 800c354:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 800c358:	613b      	str	r3, [r7, #16]
 800c35a:	68bb      	ldr	r3, [r7, #8]
 800c35c:	021b      	lsls	r3, r3, #8
 800c35e:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 800c362:	693a      	ldr	r2, [r7, #16]
 800c364:	4313      	orrs	r3, r2
 800c366:	613b      	str	r3, [r7, #16]
 800c368:	68fb      	ldr	r3, [r7, #12]
 800c36a:	697a      	ldr	r2, [r7, #20]
 800c36c:	61da      	str	r2, [r3, #28]
 800c36e:	68fb      	ldr	r3, [r7, #12]
 800c370:	693a      	ldr	r2, [r7, #16]
 800c372:	621a      	str	r2, [r3, #32]
 800c374:	bf00      	nop
 800c376:	371c      	adds	r7, #28
 800c378:	46bd      	mov	sp, r7
 800c37a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c37e:	4770      	bx	lr

0800c380 <TIM_TI4_SetConfig>:
 800c380:	b480      	push	{r7}
 800c382:	b087      	sub	sp, #28
 800c384:	af00      	add	r7, sp, #0
 800c386:	60f8      	str	r0, [r7, #12]
 800c388:	60b9      	str	r1, [r7, #8]
 800c38a:	607a      	str	r2, [r7, #4]
 800c38c:	603b      	str	r3, [r7, #0]
 800c38e:	68fb      	ldr	r3, [r7, #12]
 800c390:	6a1b      	ldr	r3, [r3, #32]
 800c392:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800c396:	68fb      	ldr	r3, [r7, #12]
 800c398:	621a      	str	r2, [r3, #32]
 800c39a:	68fb      	ldr	r3, [r7, #12]
 800c39c:	69db      	ldr	r3, [r3, #28]
 800c39e:	617b      	str	r3, [r7, #20]
 800c3a0:	68fb      	ldr	r3, [r7, #12]
 800c3a2:	6a1b      	ldr	r3, [r3, #32]
 800c3a4:	613b      	str	r3, [r7, #16]
 800c3a6:	697b      	ldr	r3, [r7, #20]
 800c3a8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800c3ac:	617b      	str	r3, [r7, #20]
 800c3ae:	687b      	ldr	r3, [r7, #4]
 800c3b0:	021b      	lsls	r3, r3, #8
 800c3b2:	697a      	ldr	r2, [r7, #20]
 800c3b4:	4313      	orrs	r3, r2
 800c3b6:	617b      	str	r3, [r7, #20]
 800c3b8:	697b      	ldr	r3, [r7, #20]
 800c3ba:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800c3be:	617b      	str	r3, [r7, #20]
 800c3c0:	683b      	ldr	r3, [r7, #0]
 800c3c2:	031b      	lsls	r3, r3, #12
 800c3c4:	b29b      	uxth	r3, r3
 800c3c6:	697a      	ldr	r2, [r7, #20]
 800c3c8:	4313      	orrs	r3, r2
 800c3ca:	617b      	str	r3, [r7, #20]
 800c3cc:	693b      	ldr	r3, [r7, #16]
 800c3ce:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 800c3d2:	613b      	str	r3, [r7, #16]
 800c3d4:	68bb      	ldr	r3, [r7, #8]
 800c3d6:	031b      	lsls	r3, r3, #12
 800c3d8:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 800c3dc:	693a      	ldr	r2, [r7, #16]
 800c3de:	4313      	orrs	r3, r2
 800c3e0:	613b      	str	r3, [r7, #16]
 800c3e2:	68fb      	ldr	r3, [r7, #12]
 800c3e4:	697a      	ldr	r2, [r7, #20]
 800c3e6:	61da      	str	r2, [r3, #28]
 800c3e8:	68fb      	ldr	r3, [r7, #12]
 800c3ea:	693a      	ldr	r2, [r7, #16]
 800c3ec:	621a      	str	r2, [r3, #32]
 800c3ee:	bf00      	nop
 800c3f0:	371c      	adds	r7, #28
 800c3f2:	46bd      	mov	sp, r7
 800c3f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3f8:	4770      	bx	lr
	...

0800c3fc <TIM_ITRx_SetConfig>:
 800c3fc:	b480      	push	{r7}
 800c3fe:	b085      	sub	sp, #20
 800c400:	af00      	add	r7, sp, #0
 800c402:	6078      	str	r0, [r7, #4]
 800c404:	6039      	str	r1, [r7, #0]
 800c406:	687b      	ldr	r3, [r7, #4]
 800c408:	689b      	ldr	r3, [r3, #8]
 800c40a:	60fb      	str	r3, [r7, #12]
 800c40c:	68fa      	ldr	r2, [r7, #12]
 800c40e:	4b09      	ldr	r3, [pc, #36]	; (800c434 <TIM_ITRx_SetConfig+0x38>)
 800c410:	4013      	ands	r3, r2
 800c412:	60fb      	str	r3, [r7, #12]
 800c414:	683a      	ldr	r2, [r7, #0]
 800c416:	68fb      	ldr	r3, [r7, #12]
 800c418:	4313      	orrs	r3, r2
 800c41a:	f043 0307 	orr.w	r3, r3, #7
 800c41e:	60fb      	str	r3, [r7, #12]
 800c420:	687b      	ldr	r3, [r7, #4]
 800c422:	68fa      	ldr	r2, [r7, #12]
 800c424:	609a      	str	r2, [r3, #8]
 800c426:	bf00      	nop
 800c428:	3714      	adds	r7, #20
 800c42a:	46bd      	mov	sp, r7
 800c42c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c430:	4770      	bx	lr
 800c432:	bf00      	nop
 800c434:	ffcfff8f 	.word	0xffcfff8f

0800c438 <TIM_ETR_SetConfig>:
 800c438:	b480      	push	{r7}
 800c43a:	b087      	sub	sp, #28
 800c43c:	af00      	add	r7, sp, #0
 800c43e:	60f8      	str	r0, [r7, #12]
 800c440:	60b9      	str	r1, [r7, #8]
 800c442:	607a      	str	r2, [r7, #4]
 800c444:	603b      	str	r3, [r7, #0]
 800c446:	68fb      	ldr	r3, [r7, #12]
 800c448:	689b      	ldr	r3, [r3, #8]
 800c44a:	617b      	str	r3, [r7, #20]
 800c44c:	697b      	ldr	r3, [r7, #20]
 800c44e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800c452:	617b      	str	r3, [r7, #20]
 800c454:	683b      	ldr	r3, [r7, #0]
 800c456:	021a      	lsls	r2, r3, #8
 800c458:	687b      	ldr	r3, [r7, #4]
 800c45a:	431a      	orrs	r2, r3
 800c45c:	68bb      	ldr	r3, [r7, #8]
 800c45e:	4313      	orrs	r3, r2
 800c460:	697a      	ldr	r2, [r7, #20]
 800c462:	4313      	orrs	r3, r2
 800c464:	617b      	str	r3, [r7, #20]
 800c466:	68fb      	ldr	r3, [r7, #12]
 800c468:	697a      	ldr	r2, [r7, #20]
 800c46a:	609a      	str	r2, [r3, #8]
 800c46c:	bf00      	nop
 800c46e:	371c      	adds	r7, #28
 800c470:	46bd      	mov	sp, r7
 800c472:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c476:	4770      	bx	lr

0800c478 <TIM_CCxChannelCmd>:
 800c478:	b480      	push	{r7}
 800c47a:	b087      	sub	sp, #28
 800c47c:	af00      	add	r7, sp, #0
 800c47e:	60f8      	str	r0, [r7, #12]
 800c480:	60b9      	str	r1, [r7, #8]
 800c482:	607a      	str	r2, [r7, #4]
 800c484:	68bb      	ldr	r3, [r7, #8]
 800c486:	f003 031f 	and.w	r3, r3, #31
 800c48a:	2201      	movs	r2, #1
 800c48c:	fa02 f303 	lsl.w	r3, r2, r3
 800c490:	617b      	str	r3, [r7, #20]
 800c492:	68fb      	ldr	r3, [r7, #12]
 800c494:	6a1a      	ldr	r2, [r3, #32]
 800c496:	697b      	ldr	r3, [r7, #20]
 800c498:	43db      	mvns	r3, r3
 800c49a:	401a      	ands	r2, r3
 800c49c:	68fb      	ldr	r3, [r7, #12]
 800c49e:	621a      	str	r2, [r3, #32]
 800c4a0:	68fb      	ldr	r3, [r7, #12]
 800c4a2:	6a1a      	ldr	r2, [r3, #32]
 800c4a4:	68bb      	ldr	r3, [r7, #8]
 800c4a6:	f003 031f 	and.w	r3, r3, #31
 800c4aa:	6879      	ldr	r1, [r7, #4]
 800c4ac:	fa01 f303 	lsl.w	r3, r1, r3
 800c4b0:	431a      	orrs	r2, r3
 800c4b2:	68fb      	ldr	r3, [r7, #12]
 800c4b4:	621a      	str	r2, [r3, #32]
 800c4b6:	bf00      	nop
 800c4b8:	371c      	adds	r7, #28
 800c4ba:	46bd      	mov	sp, r7
 800c4bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4c0:	4770      	bx	lr
	...

0800c4c4 <HAL_TIMEx_MasterConfigSynchronization>:
 800c4c4:	b480      	push	{r7}
 800c4c6:	b085      	sub	sp, #20
 800c4c8:	af00      	add	r7, sp, #0
 800c4ca:	6078      	str	r0, [r7, #4]
 800c4cc:	6039      	str	r1, [r7, #0]
 800c4ce:	687b      	ldr	r3, [r7, #4]
 800c4d0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800c4d4:	2b01      	cmp	r3, #1
 800c4d6:	d101      	bne.n	800c4dc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800c4d8:	2302      	movs	r3, #2
 800c4da:	e06d      	b.n	800c5b8 <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 800c4dc:	687b      	ldr	r3, [r7, #4]
 800c4de:	2201      	movs	r2, #1
 800c4e0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c4e4:	687b      	ldr	r3, [r7, #4]
 800c4e6:	2202      	movs	r2, #2
 800c4e8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c4ec:	687b      	ldr	r3, [r7, #4]
 800c4ee:	681b      	ldr	r3, [r3, #0]
 800c4f0:	685b      	ldr	r3, [r3, #4]
 800c4f2:	60fb      	str	r3, [r7, #12]
 800c4f4:	687b      	ldr	r3, [r7, #4]
 800c4f6:	681b      	ldr	r3, [r3, #0]
 800c4f8:	689b      	ldr	r3, [r3, #8]
 800c4fa:	60bb      	str	r3, [r7, #8]
 800c4fc:	687b      	ldr	r3, [r7, #4]
 800c4fe:	681b      	ldr	r3, [r3, #0]
 800c500:	4a30      	ldr	r2, [pc, #192]	; (800c5c4 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800c502:	4293      	cmp	r3, r2
 800c504:	d004      	beq.n	800c510 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800c506:	687b      	ldr	r3, [r7, #4]
 800c508:	681b      	ldr	r3, [r3, #0]
 800c50a:	4a2f      	ldr	r2, [pc, #188]	; (800c5c8 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800c50c:	4293      	cmp	r3, r2
 800c50e:	d108      	bne.n	800c522 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800c510:	68fb      	ldr	r3, [r7, #12]
 800c512:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800c516:	60fb      	str	r3, [r7, #12]
 800c518:	683b      	ldr	r3, [r7, #0]
 800c51a:	685b      	ldr	r3, [r3, #4]
 800c51c:	68fa      	ldr	r2, [r7, #12]
 800c51e:	4313      	orrs	r3, r2
 800c520:	60fb      	str	r3, [r7, #12]
 800c522:	68fb      	ldr	r3, [r7, #12]
 800c524:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800c528:	60fb      	str	r3, [r7, #12]
 800c52a:	683b      	ldr	r3, [r7, #0]
 800c52c:	681b      	ldr	r3, [r3, #0]
 800c52e:	68fa      	ldr	r2, [r7, #12]
 800c530:	4313      	orrs	r3, r2
 800c532:	60fb      	str	r3, [r7, #12]
 800c534:	687b      	ldr	r3, [r7, #4]
 800c536:	681b      	ldr	r3, [r3, #0]
 800c538:	68fa      	ldr	r2, [r7, #12]
 800c53a:	605a      	str	r2, [r3, #4]
 800c53c:	687b      	ldr	r3, [r7, #4]
 800c53e:	681b      	ldr	r3, [r3, #0]
 800c540:	4a20      	ldr	r2, [pc, #128]	; (800c5c4 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800c542:	4293      	cmp	r3, r2
 800c544:	d022      	beq.n	800c58c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800c546:	687b      	ldr	r3, [r7, #4]
 800c548:	681b      	ldr	r3, [r3, #0]
 800c54a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c54e:	d01d      	beq.n	800c58c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800c550:	687b      	ldr	r3, [r7, #4]
 800c552:	681b      	ldr	r3, [r3, #0]
 800c554:	4a1d      	ldr	r2, [pc, #116]	; (800c5cc <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 800c556:	4293      	cmp	r3, r2
 800c558:	d018      	beq.n	800c58c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800c55a:	687b      	ldr	r3, [r7, #4]
 800c55c:	681b      	ldr	r3, [r3, #0]
 800c55e:	4a1c      	ldr	r2, [pc, #112]	; (800c5d0 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 800c560:	4293      	cmp	r3, r2
 800c562:	d013      	beq.n	800c58c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800c564:	687b      	ldr	r3, [r7, #4]
 800c566:	681b      	ldr	r3, [r3, #0]
 800c568:	4a1a      	ldr	r2, [pc, #104]	; (800c5d4 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 800c56a:	4293      	cmp	r3, r2
 800c56c:	d00e      	beq.n	800c58c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800c56e:	687b      	ldr	r3, [r7, #4]
 800c570:	681b      	ldr	r3, [r3, #0]
 800c572:	4a15      	ldr	r2, [pc, #84]	; (800c5c8 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800c574:	4293      	cmp	r3, r2
 800c576:	d009      	beq.n	800c58c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800c578:	687b      	ldr	r3, [r7, #4]
 800c57a:	681b      	ldr	r3, [r3, #0]
 800c57c:	4a16      	ldr	r2, [pc, #88]	; (800c5d8 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 800c57e:	4293      	cmp	r3, r2
 800c580:	d004      	beq.n	800c58c <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800c582:	687b      	ldr	r3, [r7, #4]
 800c584:	681b      	ldr	r3, [r3, #0]
 800c586:	4a15      	ldr	r2, [pc, #84]	; (800c5dc <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 800c588:	4293      	cmp	r3, r2
 800c58a:	d10c      	bne.n	800c5a6 <HAL_TIMEx_MasterConfigSynchronization+0xe2>
 800c58c:	68bb      	ldr	r3, [r7, #8]
 800c58e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c592:	60bb      	str	r3, [r7, #8]
 800c594:	683b      	ldr	r3, [r7, #0]
 800c596:	689b      	ldr	r3, [r3, #8]
 800c598:	68ba      	ldr	r2, [r7, #8]
 800c59a:	4313      	orrs	r3, r2
 800c59c:	60bb      	str	r3, [r7, #8]
 800c59e:	687b      	ldr	r3, [r7, #4]
 800c5a0:	681b      	ldr	r3, [r3, #0]
 800c5a2:	68ba      	ldr	r2, [r7, #8]
 800c5a4:	609a      	str	r2, [r3, #8]
 800c5a6:	687b      	ldr	r3, [r7, #4]
 800c5a8:	2201      	movs	r2, #1
 800c5aa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800c5ae:	687b      	ldr	r3, [r7, #4]
 800c5b0:	2200      	movs	r2, #0
 800c5b2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800c5b6:	2300      	movs	r3, #0
 800c5b8:	4618      	mov	r0, r3
 800c5ba:	3714      	adds	r7, #20
 800c5bc:	46bd      	mov	sp, r7
 800c5be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5c2:	4770      	bx	lr
 800c5c4:	40010000 	.word	0x40010000
 800c5c8:	40010400 	.word	0x40010400
 800c5cc:	40000400 	.word	0x40000400
 800c5d0:	40000800 	.word	0x40000800
 800c5d4:	40000c00 	.word	0x40000c00
 800c5d8:	40001800 	.word	0x40001800
 800c5dc:	40014000 	.word	0x40014000

0800c5e0 <HAL_TIMEx_CommutCallback>:
 800c5e0:	b480      	push	{r7}
 800c5e2:	b083      	sub	sp, #12
 800c5e4:	af00      	add	r7, sp, #0
 800c5e6:	6078      	str	r0, [r7, #4]
 800c5e8:	bf00      	nop
 800c5ea:	370c      	adds	r7, #12
 800c5ec:	46bd      	mov	sp, r7
 800c5ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5f2:	4770      	bx	lr

0800c5f4 <HAL_TIMEx_BreakCallback>:
 800c5f4:	b480      	push	{r7}
 800c5f6:	b083      	sub	sp, #12
 800c5f8:	af00      	add	r7, sp, #0
 800c5fa:	6078      	str	r0, [r7, #4]
 800c5fc:	bf00      	nop
 800c5fe:	370c      	adds	r7, #12
 800c600:	46bd      	mov	sp, r7
 800c602:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c606:	4770      	bx	lr

0800c608 <HAL_TIMEx_Break2Callback>:
 800c608:	b480      	push	{r7}
 800c60a:	b083      	sub	sp, #12
 800c60c:	af00      	add	r7, sp, #0
 800c60e:	6078      	str	r0, [r7, #4]
 800c610:	bf00      	nop
 800c612:	370c      	adds	r7, #12
 800c614:	46bd      	mov	sp, r7
 800c616:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c61a:	4770      	bx	lr

0800c61c <HAL_UART_Init>:
 800c61c:	b580      	push	{r7, lr}
 800c61e:	b082      	sub	sp, #8
 800c620:	af00      	add	r7, sp, #0
 800c622:	6078      	str	r0, [r7, #4]
 800c624:	687b      	ldr	r3, [r7, #4]
 800c626:	2b00      	cmp	r3, #0
 800c628:	d101      	bne.n	800c62e <HAL_UART_Init+0x12>
 800c62a:	2301      	movs	r3, #1
 800c62c:	e042      	b.n	800c6b4 <HAL_UART_Init+0x98>
 800c62e:	687b      	ldr	r3, [r7, #4]
 800c630:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c634:	2b00      	cmp	r3, #0
 800c636:	d106      	bne.n	800c646 <HAL_UART_Init+0x2a>
 800c638:	687b      	ldr	r3, [r7, #4]
 800c63a:	2200      	movs	r2, #0
 800c63c:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800c640:	6878      	ldr	r0, [r7, #4]
 800c642:	f7fa f9d9 	bl	80069f8 <HAL_UART_MspInit>
 800c646:	687b      	ldr	r3, [r7, #4]
 800c648:	2224      	movs	r2, #36	; 0x24
 800c64a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800c64e:	687b      	ldr	r3, [r7, #4]
 800c650:	681b      	ldr	r3, [r3, #0]
 800c652:	681a      	ldr	r2, [r3, #0]
 800c654:	687b      	ldr	r3, [r7, #4]
 800c656:	681b      	ldr	r3, [r3, #0]
 800c658:	f022 0201 	bic.w	r2, r2, #1
 800c65c:	601a      	str	r2, [r3, #0]
 800c65e:	6878      	ldr	r0, [r7, #4]
 800c660:	f000 fccc 	bl	800cffc <UART_SetConfig>
 800c664:	4603      	mov	r3, r0
 800c666:	2b01      	cmp	r3, #1
 800c668:	d101      	bne.n	800c66e <HAL_UART_Init+0x52>
 800c66a:	2301      	movs	r3, #1
 800c66c:	e022      	b.n	800c6b4 <HAL_UART_Init+0x98>
 800c66e:	687b      	ldr	r3, [r7, #4]
 800c670:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c672:	2b00      	cmp	r3, #0
 800c674:	d002      	beq.n	800c67c <HAL_UART_Init+0x60>
 800c676:	6878      	ldr	r0, [r7, #4]
 800c678:	f001 fa28 	bl	800dacc <UART_AdvFeatureConfig>
 800c67c:	687b      	ldr	r3, [r7, #4]
 800c67e:	681b      	ldr	r3, [r3, #0]
 800c680:	685a      	ldr	r2, [r3, #4]
 800c682:	687b      	ldr	r3, [r7, #4]
 800c684:	681b      	ldr	r3, [r3, #0]
 800c686:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800c68a:	605a      	str	r2, [r3, #4]
 800c68c:	687b      	ldr	r3, [r7, #4]
 800c68e:	681b      	ldr	r3, [r3, #0]
 800c690:	689a      	ldr	r2, [r3, #8]
 800c692:	687b      	ldr	r3, [r7, #4]
 800c694:	681b      	ldr	r3, [r3, #0]
 800c696:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800c69a:	609a      	str	r2, [r3, #8]
 800c69c:	687b      	ldr	r3, [r7, #4]
 800c69e:	681b      	ldr	r3, [r3, #0]
 800c6a0:	681a      	ldr	r2, [r3, #0]
 800c6a2:	687b      	ldr	r3, [r7, #4]
 800c6a4:	681b      	ldr	r3, [r3, #0]
 800c6a6:	f042 0201 	orr.w	r2, r2, #1
 800c6aa:	601a      	str	r2, [r3, #0]
 800c6ac:	6878      	ldr	r0, [r7, #4]
 800c6ae:	f001 faaf 	bl	800dc10 <UART_CheckIdleState>
 800c6b2:	4603      	mov	r3, r0
 800c6b4:	4618      	mov	r0, r3
 800c6b6:	3708      	adds	r7, #8
 800c6b8:	46bd      	mov	sp, r7
 800c6ba:	bd80      	pop	{r7, pc}

0800c6bc <HAL_UART_Transmit>:
 800c6bc:	b580      	push	{r7, lr}
 800c6be:	b08a      	sub	sp, #40	; 0x28
 800c6c0:	af02      	add	r7, sp, #8
 800c6c2:	60f8      	str	r0, [r7, #12]
 800c6c4:	60b9      	str	r1, [r7, #8]
 800c6c6:	603b      	str	r3, [r7, #0]
 800c6c8:	4613      	mov	r3, r2
 800c6ca:	80fb      	strh	r3, [r7, #6]
 800c6cc:	68fb      	ldr	r3, [r7, #12]
 800c6ce:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c6d2:	2b20      	cmp	r3, #32
 800c6d4:	f040 8083 	bne.w	800c7de <HAL_UART_Transmit+0x122>
 800c6d8:	68bb      	ldr	r3, [r7, #8]
 800c6da:	2b00      	cmp	r3, #0
 800c6dc:	d002      	beq.n	800c6e4 <HAL_UART_Transmit+0x28>
 800c6de:	88fb      	ldrh	r3, [r7, #6]
 800c6e0:	2b00      	cmp	r3, #0
 800c6e2:	d101      	bne.n	800c6e8 <HAL_UART_Transmit+0x2c>
 800c6e4:	2301      	movs	r3, #1
 800c6e6:	e07b      	b.n	800c7e0 <HAL_UART_Transmit+0x124>
 800c6e8:	68fb      	ldr	r3, [r7, #12]
 800c6ea:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800c6ee:	2b01      	cmp	r3, #1
 800c6f0:	d101      	bne.n	800c6f6 <HAL_UART_Transmit+0x3a>
 800c6f2:	2302      	movs	r3, #2
 800c6f4:	e074      	b.n	800c7e0 <HAL_UART_Transmit+0x124>
 800c6f6:	68fb      	ldr	r3, [r7, #12]
 800c6f8:	2201      	movs	r2, #1
 800c6fa:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800c6fe:	68fb      	ldr	r3, [r7, #12]
 800c700:	2200      	movs	r2, #0
 800c702:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800c706:	68fb      	ldr	r3, [r7, #12]
 800c708:	2221      	movs	r2, #33	; 0x21
 800c70a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800c70e:	f7fa fb4f 	bl	8006db0 <HAL_GetTick>
 800c712:	6178      	str	r0, [r7, #20]
 800c714:	68fb      	ldr	r3, [r7, #12]
 800c716:	88fa      	ldrh	r2, [r7, #6]
 800c718:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
 800c71c:	68fb      	ldr	r3, [r7, #12]
 800c71e:	88fa      	ldrh	r2, [r7, #6]
 800c720:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800c724:	68fb      	ldr	r3, [r7, #12]
 800c726:	689b      	ldr	r3, [r3, #8]
 800c728:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c72c:	d108      	bne.n	800c740 <HAL_UART_Transmit+0x84>
 800c72e:	68fb      	ldr	r3, [r7, #12]
 800c730:	691b      	ldr	r3, [r3, #16]
 800c732:	2b00      	cmp	r3, #0
 800c734:	d104      	bne.n	800c740 <HAL_UART_Transmit+0x84>
 800c736:	2300      	movs	r3, #0
 800c738:	61fb      	str	r3, [r7, #28]
 800c73a:	68bb      	ldr	r3, [r7, #8]
 800c73c:	61bb      	str	r3, [r7, #24]
 800c73e:	e003      	b.n	800c748 <HAL_UART_Transmit+0x8c>
 800c740:	68bb      	ldr	r3, [r7, #8]
 800c742:	61fb      	str	r3, [r7, #28]
 800c744:	2300      	movs	r3, #0
 800c746:	61bb      	str	r3, [r7, #24]
 800c748:	68fb      	ldr	r3, [r7, #12]
 800c74a:	2200      	movs	r2, #0
 800c74c:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800c750:	e02c      	b.n	800c7ac <HAL_UART_Transmit+0xf0>
 800c752:	683b      	ldr	r3, [r7, #0]
 800c754:	9300      	str	r3, [sp, #0]
 800c756:	697b      	ldr	r3, [r7, #20]
 800c758:	2200      	movs	r2, #0
 800c75a:	2180      	movs	r1, #128	; 0x80
 800c75c:	68f8      	ldr	r0, [r7, #12]
 800c75e:	f001 faa2 	bl	800dca6 <UART_WaitOnFlagUntilTimeout>
 800c762:	4603      	mov	r3, r0
 800c764:	2b00      	cmp	r3, #0
 800c766:	d001      	beq.n	800c76c <HAL_UART_Transmit+0xb0>
 800c768:	2303      	movs	r3, #3
 800c76a:	e039      	b.n	800c7e0 <HAL_UART_Transmit+0x124>
 800c76c:	69fb      	ldr	r3, [r7, #28]
 800c76e:	2b00      	cmp	r3, #0
 800c770:	d10b      	bne.n	800c78a <HAL_UART_Transmit+0xce>
 800c772:	69bb      	ldr	r3, [r7, #24]
 800c774:	881b      	ldrh	r3, [r3, #0]
 800c776:	461a      	mov	r2, r3
 800c778:	68fb      	ldr	r3, [r7, #12]
 800c77a:	681b      	ldr	r3, [r3, #0]
 800c77c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800c780:	629a      	str	r2, [r3, #40]	; 0x28
 800c782:	69bb      	ldr	r3, [r7, #24]
 800c784:	3302      	adds	r3, #2
 800c786:	61bb      	str	r3, [r7, #24]
 800c788:	e007      	b.n	800c79a <HAL_UART_Transmit+0xde>
 800c78a:	69fb      	ldr	r3, [r7, #28]
 800c78c:	781a      	ldrb	r2, [r3, #0]
 800c78e:	68fb      	ldr	r3, [r7, #12]
 800c790:	681b      	ldr	r3, [r3, #0]
 800c792:	629a      	str	r2, [r3, #40]	; 0x28
 800c794:	69fb      	ldr	r3, [r7, #28]
 800c796:	3301      	adds	r3, #1
 800c798:	61fb      	str	r3, [r7, #28]
 800c79a:	68fb      	ldr	r3, [r7, #12]
 800c79c:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800c7a0:	b29b      	uxth	r3, r3
 800c7a2:	3b01      	subs	r3, #1
 800c7a4:	b29a      	uxth	r2, r3
 800c7a6:	68fb      	ldr	r3, [r7, #12]
 800c7a8:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800c7ac:	68fb      	ldr	r3, [r7, #12]
 800c7ae:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800c7b2:	b29b      	uxth	r3, r3
 800c7b4:	2b00      	cmp	r3, #0
 800c7b6:	d1cc      	bne.n	800c752 <HAL_UART_Transmit+0x96>
 800c7b8:	683b      	ldr	r3, [r7, #0]
 800c7ba:	9300      	str	r3, [sp, #0]
 800c7bc:	697b      	ldr	r3, [r7, #20]
 800c7be:	2200      	movs	r2, #0
 800c7c0:	2140      	movs	r1, #64	; 0x40
 800c7c2:	68f8      	ldr	r0, [r7, #12]
 800c7c4:	f001 fa6f 	bl	800dca6 <UART_WaitOnFlagUntilTimeout>
 800c7c8:	4603      	mov	r3, r0
 800c7ca:	2b00      	cmp	r3, #0
 800c7cc:	d001      	beq.n	800c7d2 <HAL_UART_Transmit+0x116>
 800c7ce:	2303      	movs	r3, #3
 800c7d0:	e006      	b.n	800c7e0 <HAL_UART_Transmit+0x124>
 800c7d2:	68fb      	ldr	r3, [r7, #12]
 800c7d4:	2220      	movs	r2, #32
 800c7d6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800c7da:	2300      	movs	r3, #0
 800c7dc:	e000      	b.n	800c7e0 <HAL_UART_Transmit+0x124>
 800c7de:	2302      	movs	r3, #2
 800c7e0:	4618      	mov	r0, r3
 800c7e2:	3720      	adds	r7, #32
 800c7e4:	46bd      	mov	sp, r7
 800c7e6:	bd80      	pop	{r7, pc}

0800c7e8 <HAL_UART_Receive_IT>:
 800c7e8:	b580      	push	{r7, lr}
 800c7ea:	b08a      	sub	sp, #40	; 0x28
 800c7ec:	af00      	add	r7, sp, #0
 800c7ee:	60f8      	str	r0, [r7, #12]
 800c7f0:	60b9      	str	r1, [r7, #8]
 800c7f2:	4613      	mov	r3, r2
 800c7f4:	80fb      	strh	r3, [r7, #6]
 800c7f6:	68fb      	ldr	r3, [r7, #12]
 800c7f8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800c7fc:	2b20      	cmp	r3, #32
 800c7fe:	d142      	bne.n	800c886 <HAL_UART_Receive_IT+0x9e>
 800c800:	68bb      	ldr	r3, [r7, #8]
 800c802:	2b00      	cmp	r3, #0
 800c804:	d002      	beq.n	800c80c <HAL_UART_Receive_IT+0x24>
 800c806:	88fb      	ldrh	r3, [r7, #6]
 800c808:	2b00      	cmp	r3, #0
 800c80a:	d101      	bne.n	800c810 <HAL_UART_Receive_IT+0x28>
 800c80c:	2301      	movs	r3, #1
 800c80e:	e03b      	b.n	800c888 <HAL_UART_Receive_IT+0xa0>
 800c810:	68fb      	ldr	r3, [r7, #12]
 800c812:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800c816:	2b01      	cmp	r3, #1
 800c818:	d101      	bne.n	800c81e <HAL_UART_Receive_IT+0x36>
 800c81a:	2302      	movs	r3, #2
 800c81c:	e034      	b.n	800c888 <HAL_UART_Receive_IT+0xa0>
 800c81e:	68fb      	ldr	r3, [r7, #12]
 800c820:	2201      	movs	r2, #1
 800c822:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800c826:	68fb      	ldr	r3, [r7, #12]
 800c828:	2200      	movs	r2, #0
 800c82a:	66da      	str	r2, [r3, #108]	; 0x6c
 800c82c:	68fb      	ldr	r3, [r7, #12]
 800c82e:	681b      	ldr	r3, [r3, #0]
 800c830:	4a17      	ldr	r2, [pc, #92]	; (800c890 <HAL_UART_Receive_IT+0xa8>)
 800c832:	4293      	cmp	r3, r2
 800c834:	d01f      	beq.n	800c876 <HAL_UART_Receive_IT+0x8e>
 800c836:	68fb      	ldr	r3, [r7, #12]
 800c838:	681b      	ldr	r3, [r3, #0]
 800c83a:	685b      	ldr	r3, [r3, #4]
 800c83c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800c840:	2b00      	cmp	r3, #0
 800c842:	d018      	beq.n	800c876 <HAL_UART_Receive_IT+0x8e>
 800c844:	68fb      	ldr	r3, [r7, #12]
 800c846:	681b      	ldr	r3, [r3, #0]
 800c848:	617b      	str	r3, [r7, #20]
 800c84a:	697b      	ldr	r3, [r7, #20]
 800c84c:	e853 3f00 	ldrex	r3, [r3]
 800c850:	613b      	str	r3, [r7, #16]
 800c852:	693b      	ldr	r3, [r7, #16]
 800c854:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800c858:	627b      	str	r3, [r7, #36]	; 0x24
 800c85a:	68fb      	ldr	r3, [r7, #12]
 800c85c:	681b      	ldr	r3, [r3, #0]
 800c85e:	461a      	mov	r2, r3
 800c860:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c862:	623b      	str	r3, [r7, #32]
 800c864:	61fa      	str	r2, [r7, #28]
 800c866:	69f9      	ldr	r1, [r7, #28]
 800c868:	6a3a      	ldr	r2, [r7, #32]
 800c86a:	e841 2300 	strex	r3, r2, [r1]
 800c86e:	61bb      	str	r3, [r7, #24]
 800c870:	69bb      	ldr	r3, [r7, #24]
 800c872:	2b00      	cmp	r3, #0
 800c874:	d1e6      	bne.n	800c844 <HAL_UART_Receive_IT+0x5c>
 800c876:	88fb      	ldrh	r3, [r7, #6]
 800c878:	461a      	mov	r2, r3
 800c87a:	68b9      	ldr	r1, [r7, #8]
 800c87c:	68f8      	ldr	r0, [r7, #12]
 800c87e:	f001 fadb 	bl	800de38 <UART_Start_Receive_IT>
 800c882:	4603      	mov	r3, r0
 800c884:	e000      	b.n	800c888 <HAL_UART_Receive_IT+0xa0>
 800c886:	2302      	movs	r3, #2
 800c888:	4618      	mov	r0, r3
 800c88a:	3728      	adds	r7, #40	; 0x28
 800c88c:	46bd      	mov	sp, r7
 800c88e:	bd80      	pop	{r7, pc}
 800c890:	58000c00 	.word	0x58000c00

0800c894 <HAL_UART_IRQHandler>:
 800c894:	b580      	push	{r7, lr}
 800c896:	b0ba      	sub	sp, #232	; 0xe8
 800c898:	af00      	add	r7, sp, #0
 800c89a:	6078      	str	r0, [r7, #4]
 800c89c:	687b      	ldr	r3, [r7, #4]
 800c89e:	681b      	ldr	r3, [r3, #0]
 800c8a0:	69db      	ldr	r3, [r3, #28]
 800c8a2:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800c8a6:	687b      	ldr	r3, [r7, #4]
 800c8a8:	681b      	ldr	r3, [r3, #0]
 800c8aa:	681b      	ldr	r3, [r3, #0]
 800c8ac:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800c8b0:	687b      	ldr	r3, [r7, #4]
 800c8b2:	681b      	ldr	r3, [r3, #0]
 800c8b4:	689b      	ldr	r3, [r3, #8]
 800c8b6:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800c8ba:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 800c8be:	f640 030f 	movw	r3, #2063	; 0x80f
 800c8c2:	4013      	ands	r3, r2
 800c8c4:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800c8c8:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800c8cc:	2b00      	cmp	r3, #0
 800c8ce:	d11b      	bne.n	800c908 <HAL_UART_IRQHandler+0x74>
 800c8d0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c8d4:	f003 0320 	and.w	r3, r3, #32
 800c8d8:	2b00      	cmp	r3, #0
 800c8da:	d015      	beq.n	800c908 <HAL_UART_IRQHandler+0x74>
 800c8dc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c8e0:	f003 0320 	and.w	r3, r3, #32
 800c8e4:	2b00      	cmp	r3, #0
 800c8e6:	d105      	bne.n	800c8f4 <HAL_UART_IRQHandler+0x60>
 800c8e8:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c8ec:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c8f0:	2b00      	cmp	r3, #0
 800c8f2:	d009      	beq.n	800c908 <HAL_UART_IRQHandler+0x74>
 800c8f4:	687b      	ldr	r3, [r7, #4]
 800c8f6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c8f8:	2b00      	cmp	r3, #0
 800c8fa:	f000 835a 	beq.w	800cfb2 <HAL_UART_IRQHandler+0x71e>
 800c8fe:	687b      	ldr	r3, [r7, #4]
 800c900:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c902:	6878      	ldr	r0, [r7, #4]
 800c904:	4798      	blx	r3
 800c906:	e354      	b.n	800cfb2 <HAL_UART_IRQHandler+0x71e>
 800c908:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800c90c:	2b00      	cmp	r3, #0
 800c90e:	f000 811f 	beq.w	800cb50 <HAL_UART_IRQHandler+0x2bc>
 800c912:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800c916:	4b8b      	ldr	r3, [pc, #556]	; (800cb44 <HAL_UART_IRQHandler+0x2b0>)
 800c918:	4013      	ands	r3, r2
 800c91a:	2b00      	cmp	r3, #0
 800c91c:	d106      	bne.n	800c92c <HAL_UART_IRQHandler+0x98>
 800c91e:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 800c922:	4b89      	ldr	r3, [pc, #548]	; (800cb48 <HAL_UART_IRQHandler+0x2b4>)
 800c924:	4013      	ands	r3, r2
 800c926:	2b00      	cmp	r3, #0
 800c928:	f000 8112 	beq.w	800cb50 <HAL_UART_IRQHandler+0x2bc>
 800c92c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c930:	f003 0301 	and.w	r3, r3, #1
 800c934:	2b00      	cmp	r3, #0
 800c936:	d011      	beq.n	800c95c <HAL_UART_IRQHandler+0xc8>
 800c938:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c93c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c940:	2b00      	cmp	r3, #0
 800c942:	d00b      	beq.n	800c95c <HAL_UART_IRQHandler+0xc8>
 800c944:	687b      	ldr	r3, [r7, #4]
 800c946:	681b      	ldr	r3, [r3, #0]
 800c948:	2201      	movs	r2, #1
 800c94a:	621a      	str	r2, [r3, #32]
 800c94c:	687b      	ldr	r3, [r7, #4]
 800c94e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c952:	f043 0201 	orr.w	r2, r3, #1
 800c956:	687b      	ldr	r3, [r7, #4]
 800c958:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800c95c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c960:	f003 0302 	and.w	r3, r3, #2
 800c964:	2b00      	cmp	r3, #0
 800c966:	d011      	beq.n	800c98c <HAL_UART_IRQHandler+0xf8>
 800c968:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c96c:	f003 0301 	and.w	r3, r3, #1
 800c970:	2b00      	cmp	r3, #0
 800c972:	d00b      	beq.n	800c98c <HAL_UART_IRQHandler+0xf8>
 800c974:	687b      	ldr	r3, [r7, #4]
 800c976:	681b      	ldr	r3, [r3, #0]
 800c978:	2202      	movs	r2, #2
 800c97a:	621a      	str	r2, [r3, #32]
 800c97c:	687b      	ldr	r3, [r7, #4]
 800c97e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c982:	f043 0204 	orr.w	r2, r3, #4
 800c986:	687b      	ldr	r3, [r7, #4]
 800c988:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800c98c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c990:	f003 0304 	and.w	r3, r3, #4
 800c994:	2b00      	cmp	r3, #0
 800c996:	d011      	beq.n	800c9bc <HAL_UART_IRQHandler+0x128>
 800c998:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c99c:	f003 0301 	and.w	r3, r3, #1
 800c9a0:	2b00      	cmp	r3, #0
 800c9a2:	d00b      	beq.n	800c9bc <HAL_UART_IRQHandler+0x128>
 800c9a4:	687b      	ldr	r3, [r7, #4]
 800c9a6:	681b      	ldr	r3, [r3, #0]
 800c9a8:	2204      	movs	r2, #4
 800c9aa:	621a      	str	r2, [r3, #32]
 800c9ac:	687b      	ldr	r3, [r7, #4]
 800c9ae:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c9b2:	f043 0202 	orr.w	r2, r3, #2
 800c9b6:	687b      	ldr	r3, [r7, #4]
 800c9b8:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800c9bc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c9c0:	f003 0308 	and.w	r3, r3, #8
 800c9c4:	2b00      	cmp	r3, #0
 800c9c6:	d017      	beq.n	800c9f8 <HAL_UART_IRQHandler+0x164>
 800c9c8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c9cc:	f003 0320 	and.w	r3, r3, #32
 800c9d0:	2b00      	cmp	r3, #0
 800c9d2:	d105      	bne.n	800c9e0 <HAL_UART_IRQHandler+0x14c>
 800c9d4:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800c9d8:	4b5a      	ldr	r3, [pc, #360]	; (800cb44 <HAL_UART_IRQHandler+0x2b0>)
 800c9da:	4013      	ands	r3, r2
 800c9dc:	2b00      	cmp	r3, #0
 800c9de:	d00b      	beq.n	800c9f8 <HAL_UART_IRQHandler+0x164>
 800c9e0:	687b      	ldr	r3, [r7, #4]
 800c9e2:	681b      	ldr	r3, [r3, #0]
 800c9e4:	2208      	movs	r2, #8
 800c9e6:	621a      	str	r2, [r3, #32]
 800c9e8:	687b      	ldr	r3, [r7, #4]
 800c9ea:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c9ee:	f043 0208 	orr.w	r2, r3, #8
 800c9f2:	687b      	ldr	r3, [r7, #4]
 800c9f4:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800c9f8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c9fc:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800ca00:	2b00      	cmp	r3, #0
 800ca02:	d012      	beq.n	800ca2a <HAL_UART_IRQHandler+0x196>
 800ca04:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ca08:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800ca0c:	2b00      	cmp	r3, #0
 800ca0e:	d00c      	beq.n	800ca2a <HAL_UART_IRQHandler+0x196>
 800ca10:	687b      	ldr	r3, [r7, #4]
 800ca12:	681b      	ldr	r3, [r3, #0]
 800ca14:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800ca18:	621a      	str	r2, [r3, #32]
 800ca1a:	687b      	ldr	r3, [r7, #4]
 800ca1c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800ca20:	f043 0220 	orr.w	r2, r3, #32
 800ca24:	687b      	ldr	r3, [r7, #4]
 800ca26:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800ca2a:	687b      	ldr	r3, [r7, #4]
 800ca2c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800ca30:	2b00      	cmp	r3, #0
 800ca32:	f000 82c0 	beq.w	800cfb6 <HAL_UART_IRQHandler+0x722>
 800ca36:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ca3a:	f003 0320 	and.w	r3, r3, #32
 800ca3e:	2b00      	cmp	r3, #0
 800ca40:	d013      	beq.n	800ca6a <HAL_UART_IRQHandler+0x1d6>
 800ca42:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ca46:	f003 0320 	and.w	r3, r3, #32
 800ca4a:	2b00      	cmp	r3, #0
 800ca4c:	d105      	bne.n	800ca5a <HAL_UART_IRQHandler+0x1c6>
 800ca4e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800ca52:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800ca56:	2b00      	cmp	r3, #0
 800ca58:	d007      	beq.n	800ca6a <HAL_UART_IRQHandler+0x1d6>
 800ca5a:	687b      	ldr	r3, [r7, #4]
 800ca5c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ca5e:	2b00      	cmp	r3, #0
 800ca60:	d003      	beq.n	800ca6a <HAL_UART_IRQHandler+0x1d6>
 800ca62:	687b      	ldr	r3, [r7, #4]
 800ca64:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ca66:	6878      	ldr	r0, [r7, #4]
 800ca68:	4798      	blx	r3
 800ca6a:	687b      	ldr	r3, [r7, #4]
 800ca6c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800ca70:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800ca74:	687b      	ldr	r3, [r7, #4]
 800ca76:	681b      	ldr	r3, [r3, #0]
 800ca78:	689b      	ldr	r3, [r3, #8]
 800ca7a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ca7e:	2b40      	cmp	r3, #64	; 0x40
 800ca80:	d005      	beq.n	800ca8e <HAL_UART_IRQHandler+0x1fa>
 800ca82:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800ca86:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800ca8a:	2b00      	cmp	r3, #0
 800ca8c:	d04f      	beq.n	800cb2e <HAL_UART_IRQHandler+0x29a>
 800ca8e:	6878      	ldr	r0, [r7, #4]
 800ca90:	f001 fafc 	bl	800e08c <UART_EndRxTransfer>
 800ca94:	687b      	ldr	r3, [r7, #4]
 800ca96:	681b      	ldr	r3, [r3, #0]
 800ca98:	689b      	ldr	r3, [r3, #8]
 800ca9a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ca9e:	2b40      	cmp	r3, #64	; 0x40
 800caa0:	d141      	bne.n	800cb26 <HAL_UART_IRQHandler+0x292>
 800caa2:	687b      	ldr	r3, [r7, #4]
 800caa4:	681b      	ldr	r3, [r3, #0]
 800caa6:	3308      	adds	r3, #8
 800caa8:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800caac:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800cab0:	e853 3f00 	ldrex	r3, [r3]
 800cab4:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800cab8:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800cabc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800cac0:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800cac4:	687b      	ldr	r3, [r7, #4]
 800cac6:	681b      	ldr	r3, [r3, #0]
 800cac8:	3308      	adds	r3, #8
 800caca:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800cace:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800cad2:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800cad6:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800cada:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800cade:	e841 2300 	strex	r3, r2, [r1]
 800cae2:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800cae6:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800caea:	2b00      	cmp	r3, #0
 800caec:	d1d9      	bne.n	800caa2 <HAL_UART_IRQHandler+0x20e>
 800caee:	687b      	ldr	r3, [r7, #4]
 800caf0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800caf2:	2b00      	cmp	r3, #0
 800caf4:	d013      	beq.n	800cb1e <HAL_UART_IRQHandler+0x28a>
 800caf6:	687b      	ldr	r3, [r7, #4]
 800caf8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cafa:	4a14      	ldr	r2, [pc, #80]	; (800cb4c <HAL_UART_IRQHandler+0x2b8>)
 800cafc:	651a      	str	r2, [r3, #80]	; 0x50
 800cafe:	687b      	ldr	r3, [r7, #4]
 800cb00:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cb02:	4618      	mov	r0, r3
 800cb04:	f7fa fdf0 	bl	80076e8 <HAL_DMA_Abort_IT>
 800cb08:	4603      	mov	r3, r0
 800cb0a:	2b00      	cmp	r3, #0
 800cb0c:	d017      	beq.n	800cb3e <HAL_UART_IRQHandler+0x2aa>
 800cb0e:	687b      	ldr	r3, [r7, #4]
 800cb10:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cb12:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800cb14:	687a      	ldr	r2, [r7, #4]
 800cb16:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800cb18:	4610      	mov	r0, r2
 800cb1a:	4798      	blx	r3
 800cb1c:	e00f      	b.n	800cb3e <HAL_UART_IRQHandler+0x2aa>
 800cb1e:	6878      	ldr	r0, [r7, #4]
 800cb20:	f000 fa56 	bl	800cfd0 <HAL_UART_ErrorCallback>
 800cb24:	e00b      	b.n	800cb3e <HAL_UART_IRQHandler+0x2aa>
 800cb26:	6878      	ldr	r0, [r7, #4]
 800cb28:	f000 fa52 	bl	800cfd0 <HAL_UART_ErrorCallback>
 800cb2c:	e007      	b.n	800cb3e <HAL_UART_IRQHandler+0x2aa>
 800cb2e:	6878      	ldr	r0, [r7, #4]
 800cb30:	f000 fa4e 	bl	800cfd0 <HAL_UART_ErrorCallback>
 800cb34:	687b      	ldr	r3, [r7, #4]
 800cb36:	2200      	movs	r2, #0
 800cb38:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800cb3c:	e23b      	b.n	800cfb6 <HAL_UART_IRQHandler+0x722>
 800cb3e:	bf00      	nop
 800cb40:	e239      	b.n	800cfb6 <HAL_UART_IRQHandler+0x722>
 800cb42:	bf00      	nop
 800cb44:	10000001 	.word	0x10000001
 800cb48:	04000120 	.word	0x04000120
 800cb4c:	0800e159 	.word	0x0800e159
 800cb50:	687b      	ldr	r3, [r7, #4]
 800cb52:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800cb54:	2b01      	cmp	r3, #1
 800cb56:	f040 81ce 	bne.w	800cef6 <HAL_UART_IRQHandler+0x662>
 800cb5a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800cb5e:	f003 0310 	and.w	r3, r3, #16
 800cb62:	2b00      	cmp	r3, #0
 800cb64:	f000 81c7 	beq.w	800cef6 <HAL_UART_IRQHandler+0x662>
 800cb68:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800cb6c:	f003 0310 	and.w	r3, r3, #16
 800cb70:	2b00      	cmp	r3, #0
 800cb72:	f000 81c0 	beq.w	800cef6 <HAL_UART_IRQHandler+0x662>
 800cb76:	687b      	ldr	r3, [r7, #4]
 800cb78:	681b      	ldr	r3, [r3, #0]
 800cb7a:	2210      	movs	r2, #16
 800cb7c:	621a      	str	r2, [r3, #32]
 800cb7e:	687b      	ldr	r3, [r7, #4]
 800cb80:	681b      	ldr	r3, [r3, #0]
 800cb82:	689b      	ldr	r3, [r3, #8]
 800cb84:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800cb88:	2b40      	cmp	r3, #64	; 0x40
 800cb8a:	f040 813b 	bne.w	800ce04 <HAL_UART_IRQHandler+0x570>
 800cb8e:	687b      	ldr	r3, [r7, #4]
 800cb90:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cb92:	681b      	ldr	r3, [r3, #0]
 800cb94:	4a8b      	ldr	r2, [pc, #556]	; (800cdc4 <HAL_UART_IRQHandler+0x530>)
 800cb96:	4293      	cmp	r3, r2
 800cb98:	d059      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cb9a:	687b      	ldr	r3, [r7, #4]
 800cb9c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cb9e:	681b      	ldr	r3, [r3, #0]
 800cba0:	4a89      	ldr	r2, [pc, #548]	; (800cdc8 <HAL_UART_IRQHandler+0x534>)
 800cba2:	4293      	cmp	r3, r2
 800cba4:	d053      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cba6:	687b      	ldr	r3, [r7, #4]
 800cba8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cbaa:	681b      	ldr	r3, [r3, #0]
 800cbac:	4a87      	ldr	r2, [pc, #540]	; (800cdcc <HAL_UART_IRQHandler+0x538>)
 800cbae:	4293      	cmp	r3, r2
 800cbb0:	d04d      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cbb2:	687b      	ldr	r3, [r7, #4]
 800cbb4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cbb6:	681b      	ldr	r3, [r3, #0]
 800cbb8:	4a85      	ldr	r2, [pc, #532]	; (800cdd0 <HAL_UART_IRQHandler+0x53c>)
 800cbba:	4293      	cmp	r3, r2
 800cbbc:	d047      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cbbe:	687b      	ldr	r3, [r7, #4]
 800cbc0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cbc2:	681b      	ldr	r3, [r3, #0]
 800cbc4:	4a83      	ldr	r2, [pc, #524]	; (800cdd4 <HAL_UART_IRQHandler+0x540>)
 800cbc6:	4293      	cmp	r3, r2
 800cbc8:	d041      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cbca:	687b      	ldr	r3, [r7, #4]
 800cbcc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cbce:	681b      	ldr	r3, [r3, #0]
 800cbd0:	4a81      	ldr	r2, [pc, #516]	; (800cdd8 <HAL_UART_IRQHandler+0x544>)
 800cbd2:	4293      	cmp	r3, r2
 800cbd4:	d03b      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cbd6:	687b      	ldr	r3, [r7, #4]
 800cbd8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cbda:	681b      	ldr	r3, [r3, #0]
 800cbdc:	4a7f      	ldr	r2, [pc, #508]	; (800cddc <HAL_UART_IRQHandler+0x548>)
 800cbde:	4293      	cmp	r3, r2
 800cbe0:	d035      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cbe2:	687b      	ldr	r3, [r7, #4]
 800cbe4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cbe6:	681b      	ldr	r3, [r3, #0]
 800cbe8:	4a7d      	ldr	r2, [pc, #500]	; (800cde0 <HAL_UART_IRQHandler+0x54c>)
 800cbea:	4293      	cmp	r3, r2
 800cbec:	d02f      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cbee:	687b      	ldr	r3, [r7, #4]
 800cbf0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cbf2:	681b      	ldr	r3, [r3, #0]
 800cbf4:	4a7b      	ldr	r2, [pc, #492]	; (800cde4 <HAL_UART_IRQHandler+0x550>)
 800cbf6:	4293      	cmp	r3, r2
 800cbf8:	d029      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cbfa:	687b      	ldr	r3, [r7, #4]
 800cbfc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cbfe:	681b      	ldr	r3, [r3, #0]
 800cc00:	4a79      	ldr	r2, [pc, #484]	; (800cde8 <HAL_UART_IRQHandler+0x554>)
 800cc02:	4293      	cmp	r3, r2
 800cc04:	d023      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cc06:	687b      	ldr	r3, [r7, #4]
 800cc08:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cc0a:	681b      	ldr	r3, [r3, #0]
 800cc0c:	4a77      	ldr	r2, [pc, #476]	; (800cdec <HAL_UART_IRQHandler+0x558>)
 800cc0e:	4293      	cmp	r3, r2
 800cc10:	d01d      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cc12:	687b      	ldr	r3, [r7, #4]
 800cc14:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cc16:	681b      	ldr	r3, [r3, #0]
 800cc18:	4a75      	ldr	r2, [pc, #468]	; (800cdf0 <HAL_UART_IRQHandler+0x55c>)
 800cc1a:	4293      	cmp	r3, r2
 800cc1c:	d017      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cc1e:	687b      	ldr	r3, [r7, #4]
 800cc20:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cc22:	681b      	ldr	r3, [r3, #0]
 800cc24:	4a73      	ldr	r2, [pc, #460]	; (800cdf4 <HAL_UART_IRQHandler+0x560>)
 800cc26:	4293      	cmp	r3, r2
 800cc28:	d011      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cc2a:	687b      	ldr	r3, [r7, #4]
 800cc2c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cc2e:	681b      	ldr	r3, [r3, #0]
 800cc30:	4a71      	ldr	r2, [pc, #452]	; (800cdf8 <HAL_UART_IRQHandler+0x564>)
 800cc32:	4293      	cmp	r3, r2
 800cc34:	d00b      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cc36:	687b      	ldr	r3, [r7, #4]
 800cc38:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cc3a:	681b      	ldr	r3, [r3, #0]
 800cc3c:	4a6f      	ldr	r2, [pc, #444]	; (800cdfc <HAL_UART_IRQHandler+0x568>)
 800cc3e:	4293      	cmp	r3, r2
 800cc40:	d005      	beq.n	800cc4e <HAL_UART_IRQHandler+0x3ba>
 800cc42:	687b      	ldr	r3, [r7, #4]
 800cc44:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cc46:	681b      	ldr	r3, [r3, #0]
 800cc48:	4a6d      	ldr	r2, [pc, #436]	; (800ce00 <HAL_UART_IRQHandler+0x56c>)
 800cc4a:	4293      	cmp	r3, r2
 800cc4c:	d105      	bne.n	800cc5a <HAL_UART_IRQHandler+0x3c6>
 800cc4e:	687b      	ldr	r3, [r7, #4]
 800cc50:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cc52:	681b      	ldr	r3, [r3, #0]
 800cc54:	685b      	ldr	r3, [r3, #4]
 800cc56:	b29b      	uxth	r3, r3
 800cc58:	e004      	b.n	800cc64 <HAL_UART_IRQHandler+0x3d0>
 800cc5a:	687b      	ldr	r3, [r7, #4]
 800cc5c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cc5e:	681b      	ldr	r3, [r3, #0]
 800cc60:	685b      	ldr	r3, [r3, #4]
 800cc62:	b29b      	uxth	r3, r3
 800cc64:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800cc68:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800cc6c:	2b00      	cmp	r3, #0
 800cc6e:	f000 81a4 	beq.w	800cfba <HAL_UART_IRQHandler+0x726>
 800cc72:	687b      	ldr	r3, [r7, #4]
 800cc74:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800cc78:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800cc7c:	429a      	cmp	r2, r3
 800cc7e:	f080 819c 	bcs.w	800cfba <HAL_UART_IRQHandler+0x726>
 800cc82:	687b      	ldr	r3, [r7, #4]
 800cc84:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800cc88:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800cc8c:	687b      	ldr	r3, [r7, #4]
 800cc8e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cc90:	69db      	ldr	r3, [r3, #28]
 800cc92:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800cc96:	f000 8086 	beq.w	800cda6 <HAL_UART_IRQHandler+0x512>
 800cc9a:	687b      	ldr	r3, [r7, #4]
 800cc9c:	681b      	ldr	r3, [r3, #0]
 800cc9e:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800cca2:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800cca6:	e853 3f00 	ldrex	r3, [r3]
 800ccaa:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800ccae:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800ccb2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800ccb6:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800ccba:	687b      	ldr	r3, [r7, #4]
 800ccbc:	681b      	ldr	r3, [r3, #0]
 800ccbe:	461a      	mov	r2, r3
 800ccc0:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800ccc4:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800ccc8:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 800cccc:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800ccd0:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800ccd4:	e841 2300 	strex	r3, r2, [r1]
 800ccd8:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800ccdc:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800cce0:	2b00      	cmp	r3, #0
 800cce2:	d1da      	bne.n	800cc9a <HAL_UART_IRQHandler+0x406>
 800cce4:	687b      	ldr	r3, [r7, #4]
 800cce6:	681b      	ldr	r3, [r3, #0]
 800cce8:	3308      	adds	r3, #8
 800ccea:	677b      	str	r3, [r7, #116]	; 0x74
 800ccec:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800ccee:	e853 3f00 	ldrex	r3, [r3]
 800ccf2:	673b      	str	r3, [r7, #112]	; 0x70
 800ccf4:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800ccf6:	f023 0301 	bic.w	r3, r3, #1
 800ccfa:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800ccfe:	687b      	ldr	r3, [r7, #4]
 800cd00:	681b      	ldr	r3, [r3, #0]
 800cd02:	3308      	adds	r3, #8
 800cd04:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800cd08:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800cd0c:	67fb      	str	r3, [r7, #124]	; 0x7c
 800cd0e:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800cd10:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800cd14:	e841 2300 	strex	r3, r2, [r1]
 800cd18:	67bb      	str	r3, [r7, #120]	; 0x78
 800cd1a:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800cd1c:	2b00      	cmp	r3, #0
 800cd1e:	d1e1      	bne.n	800cce4 <HAL_UART_IRQHandler+0x450>
 800cd20:	687b      	ldr	r3, [r7, #4]
 800cd22:	681b      	ldr	r3, [r3, #0]
 800cd24:	3308      	adds	r3, #8
 800cd26:	663b      	str	r3, [r7, #96]	; 0x60
 800cd28:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800cd2a:	e853 3f00 	ldrex	r3, [r3]
 800cd2e:	65fb      	str	r3, [r7, #92]	; 0x5c
 800cd30:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800cd32:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800cd36:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800cd3a:	687b      	ldr	r3, [r7, #4]
 800cd3c:	681b      	ldr	r3, [r3, #0]
 800cd3e:	3308      	adds	r3, #8
 800cd40:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800cd44:	66fa      	str	r2, [r7, #108]	; 0x6c
 800cd46:	66bb      	str	r3, [r7, #104]	; 0x68
 800cd48:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800cd4a:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800cd4c:	e841 2300 	strex	r3, r2, [r1]
 800cd50:	667b      	str	r3, [r7, #100]	; 0x64
 800cd52:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800cd54:	2b00      	cmp	r3, #0
 800cd56:	d1e3      	bne.n	800cd20 <HAL_UART_IRQHandler+0x48c>
 800cd58:	687b      	ldr	r3, [r7, #4]
 800cd5a:	2220      	movs	r2, #32
 800cd5c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800cd60:	687b      	ldr	r3, [r7, #4]
 800cd62:	2200      	movs	r2, #0
 800cd64:	66da      	str	r2, [r3, #108]	; 0x6c
 800cd66:	687b      	ldr	r3, [r7, #4]
 800cd68:	681b      	ldr	r3, [r3, #0]
 800cd6a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800cd6c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800cd6e:	e853 3f00 	ldrex	r3, [r3]
 800cd72:	64bb      	str	r3, [r7, #72]	; 0x48
 800cd74:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800cd76:	f023 0310 	bic.w	r3, r3, #16
 800cd7a:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800cd7e:	687b      	ldr	r3, [r7, #4]
 800cd80:	681b      	ldr	r3, [r3, #0]
 800cd82:	461a      	mov	r2, r3
 800cd84:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800cd88:	65bb      	str	r3, [r7, #88]	; 0x58
 800cd8a:	657a      	str	r2, [r7, #84]	; 0x54
 800cd8c:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800cd8e:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800cd90:	e841 2300 	strex	r3, r2, [r1]
 800cd94:	653b      	str	r3, [r7, #80]	; 0x50
 800cd96:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800cd98:	2b00      	cmp	r3, #0
 800cd9a:	d1e4      	bne.n	800cd66 <HAL_UART_IRQHandler+0x4d2>
 800cd9c:	687b      	ldr	r3, [r7, #4]
 800cd9e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800cda0:	4618      	mov	r0, r3
 800cda2:	f7fa f983 	bl	80070ac <HAL_DMA_Abort>
 800cda6:	687b      	ldr	r3, [r7, #4]
 800cda8:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 800cdac:	687b      	ldr	r3, [r7, #4]
 800cdae:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800cdb2:	b29b      	uxth	r3, r3
 800cdb4:	1ad3      	subs	r3, r2, r3
 800cdb6:	b29b      	uxth	r3, r3
 800cdb8:	4619      	mov	r1, r3
 800cdba:	6878      	ldr	r0, [r7, #4]
 800cdbc:	f000 f912 	bl	800cfe4 <HAL_UARTEx_RxEventCallback>
 800cdc0:	e0fb      	b.n	800cfba <HAL_UART_IRQHandler+0x726>
 800cdc2:	bf00      	nop
 800cdc4:	40020010 	.word	0x40020010
 800cdc8:	40020028 	.word	0x40020028
 800cdcc:	40020040 	.word	0x40020040
 800cdd0:	40020058 	.word	0x40020058
 800cdd4:	40020070 	.word	0x40020070
 800cdd8:	40020088 	.word	0x40020088
 800cddc:	400200a0 	.word	0x400200a0
 800cde0:	400200b8 	.word	0x400200b8
 800cde4:	40020410 	.word	0x40020410
 800cde8:	40020428 	.word	0x40020428
 800cdec:	40020440 	.word	0x40020440
 800cdf0:	40020458 	.word	0x40020458
 800cdf4:	40020470 	.word	0x40020470
 800cdf8:	40020488 	.word	0x40020488
 800cdfc:	400204a0 	.word	0x400204a0
 800ce00:	400204b8 	.word	0x400204b8
 800ce04:	687b      	ldr	r3, [r7, #4]
 800ce06:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 800ce0a:	687b      	ldr	r3, [r7, #4]
 800ce0c:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800ce10:	b29b      	uxth	r3, r3
 800ce12:	1ad3      	subs	r3, r2, r3
 800ce14:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800ce18:	687b      	ldr	r3, [r7, #4]
 800ce1a:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800ce1e:	b29b      	uxth	r3, r3
 800ce20:	2b00      	cmp	r3, #0
 800ce22:	f000 80cc 	beq.w	800cfbe <HAL_UART_IRQHandler+0x72a>
 800ce26:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800ce2a:	2b00      	cmp	r3, #0
 800ce2c:	f000 80c7 	beq.w	800cfbe <HAL_UART_IRQHandler+0x72a>
 800ce30:	687b      	ldr	r3, [r7, #4]
 800ce32:	681b      	ldr	r3, [r3, #0]
 800ce34:	63bb      	str	r3, [r7, #56]	; 0x38
 800ce36:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ce38:	e853 3f00 	ldrex	r3, [r3]
 800ce3c:	637b      	str	r3, [r7, #52]	; 0x34
 800ce3e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ce40:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800ce44:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800ce48:	687b      	ldr	r3, [r7, #4]
 800ce4a:	681b      	ldr	r3, [r3, #0]
 800ce4c:	461a      	mov	r2, r3
 800ce4e:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 800ce52:	647b      	str	r3, [r7, #68]	; 0x44
 800ce54:	643a      	str	r2, [r7, #64]	; 0x40
 800ce56:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800ce58:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800ce5a:	e841 2300 	strex	r3, r2, [r1]
 800ce5e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ce60:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ce62:	2b00      	cmp	r3, #0
 800ce64:	d1e4      	bne.n	800ce30 <HAL_UART_IRQHandler+0x59c>
 800ce66:	687b      	ldr	r3, [r7, #4]
 800ce68:	681b      	ldr	r3, [r3, #0]
 800ce6a:	3308      	adds	r3, #8
 800ce6c:	627b      	str	r3, [r7, #36]	; 0x24
 800ce6e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ce70:	e853 3f00 	ldrex	r3, [r3]
 800ce74:	623b      	str	r3, [r7, #32]
 800ce76:	6a3a      	ldr	r2, [r7, #32]
 800ce78:	4b54      	ldr	r3, [pc, #336]	; (800cfcc <HAL_UART_IRQHandler+0x738>)
 800ce7a:	4013      	ands	r3, r2
 800ce7c:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800ce80:	687b      	ldr	r3, [r7, #4]
 800ce82:	681b      	ldr	r3, [r3, #0]
 800ce84:	3308      	adds	r3, #8
 800ce86:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800ce8a:	633a      	str	r2, [r7, #48]	; 0x30
 800ce8c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ce8e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800ce90:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800ce92:	e841 2300 	strex	r3, r2, [r1]
 800ce96:	62bb      	str	r3, [r7, #40]	; 0x28
 800ce98:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ce9a:	2b00      	cmp	r3, #0
 800ce9c:	d1e3      	bne.n	800ce66 <HAL_UART_IRQHandler+0x5d2>
 800ce9e:	687b      	ldr	r3, [r7, #4]
 800cea0:	2220      	movs	r2, #32
 800cea2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800cea6:	687b      	ldr	r3, [r7, #4]
 800cea8:	2200      	movs	r2, #0
 800ceaa:	66da      	str	r2, [r3, #108]	; 0x6c
 800ceac:	687b      	ldr	r3, [r7, #4]
 800ceae:	2200      	movs	r2, #0
 800ceb0:	671a      	str	r2, [r3, #112]	; 0x70
 800ceb2:	687b      	ldr	r3, [r7, #4]
 800ceb4:	681b      	ldr	r3, [r3, #0]
 800ceb6:	613b      	str	r3, [r7, #16]
 800ceb8:	693b      	ldr	r3, [r7, #16]
 800ceba:	e853 3f00 	ldrex	r3, [r3]
 800cebe:	60fb      	str	r3, [r7, #12]
 800cec0:	68fb      	ldr	r3, [r7, #12]
 800cec2:	f023 0310 	bic.w	r3, r3, #16
 800cec6:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800ceca:	687b      	ldr	r3, [r7, #4]
 800cecc:	681b      	ldr	r3, [r3, #0]
 800cece:	461a      	mov	r2, r3
 800ced0:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 800ced4:	61fb      	str	r3, [r7, #28]
 800ced6:	61ba      	str	r2, [r7, #24]
 800ced8:	69b9      	ldr	r1, [r7, #24]
 800ceda:	69fa      	ldr	r2, [r7, #28]
 800cedc:	e841 2300 	strex	r3, r2, [r1]
 800cee0:	617b      	str	r3, [r7, #20]
 800cee2:	697b      	ldr	r3, [r7, #20]
 800cee4:	2b00      	cmp	r3, #0
 800cee6:	d1e4      	bne.n	800ceb2 <HAL_UART_IRQHandler+0x61e>
 800cee8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800ceec:	4619      	mov	r1, r3
 800ceee:	6878      	ldr	r0, [r7, #4]
 800cef0:	f000 f878 	bl	800cfe4 <HAL_UARTEx_RxEventCallback>
 800cef4:	e063      	b.n	800cfbe <HAL_UART_IRQHandler+0x72a>
 800cef6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800cefa:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800cefe:	2b00      	cmp	r3, #0
 800cf00:	d00e      	beq.n	800cf20 <HAL_UART_IRQHandler+0x68c>
 800cf02:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800cf06:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800cf0a:	2b00      	cmp	r3, #0
 800cf0c:	d008      	beq.n	800cf20 <HAL_UART_IRQHandler+0x68c>
 800cf0e:	687b      	ldr	r3, [r7, #4]
 800cf10:	681b      	ldr	r3, [r3, #0]
 800cf12:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 800cf16:	621a      	str	r2, [r3, #32]
 800cf18:	6878      	ldr	r0, [r7, #4]
 800cf1a:	f001 fdbb 	bl	800ea94 <HAL_UARTEx_WakeupCallback>
 800cf1e:	e051      	b.n	800cfc4 <HAL_UART_IRQHandler+0x730>
 800cf20:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800cf24:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800cf28:	2b00      	cmp	r3, #0
 800cf2a:	d014      	beq.n	800cf56 <HAL_UART_IRQHandler+0x6c2>
 800cf2c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800cf30:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800cf34:	2b00      	cmp	r3, #0
 800cf36:	d105      	bne.n	800cf44 <HAL_UART_IRQHandler+0x6b0>
 800cf38:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800cf3c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800cf40:	2b00      	cmp	r3, #0
 800cf42:	d008      	beq.n	800cf56 <HAL_UART_IRQHandler+0x6c2>
 800cf44:	687b      	ldr	r3, [r7, #4]
 800cf46:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800cf48:	2b00      	cmp	r3, #0
 800cf4a:	d03a      	beq.n	800cfc2 <HAL_UART_IRQHandler+0x72e>
 800cf4c:	687b      	ldr	r3, [r7, #4]
 800cf4e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800cf50:	6878      	ldr	r0, [r7, #4]
 800cf52:	4798      	blx	r3
 800cf54:	e035      	b.n	800cfc2 <HAL_UART_IRQHandler+0x72e>
 800cf56:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800cf5a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800cf5e:	2b00      	cmp	r3, #0
 800cf60:	d009      	beq.n	800cf76 <HAL_UART_IRQHandler+0x6e2>
 800cf62:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800cf66:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800cf6a:	2b00      	cmp	r3, #0
 800cf6c:	d003      	beq.n	800cf76 <HAL_UART_IRQHandler+0x6e2>
 800cf6e:	6878      	ldr	r0, [r7, #4]
 800cf70:	f001 f908 	bl	800e184 <UART_EndTransmit_IT>
 800cf74:	e026      	b.n	800cfc4 <HAL_UART_IRQHandler+0x730>
 800cf76:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800cf7a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800cf7e:	2b00      	cmp	r3, #0
 800cf80:	d009      	beq.n	800cf96 <HAL_UART_IRQHandler+0x702>
 800cf82:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800cf86:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 800cf8a:	2b00      	cmp	r3, #0
 800cf8c:	d003      	beq.n	800cf96 <HAL_UART_IRQHandler+0x702>
 800cf8e:	6878      	ldr	r0, [r7, #4]
 800cf90:	f001 fd94 	bl	800eabc <HAL_UARTEx_TxFifoEmptyCallback>
 800cf94:	e016      	b.n	800cfc4 <HAL_UART_IRQHandler+0x730>
 800cf96:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800cf9a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800cf9e:	2b00      	cmp	r3, #0
 800cfa0:	d010      	beq.n	800cfc4 <HAL_UART_IRQHandler+0x730>
 800cfa2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800cfa6:	2b00      	cmp	r3, #0
 800cfa8:	da0c      	bge.n	800cfc4 <HAL_UART_IRQHandler+0x730>
 800cfaa:	6878      	ldr	r0, [r7, #4]
 800cfac:	f001 fd7c 	bl	800eaa8 <HAL_UARTEx_RxFifoFullCallback>
 800cfb0:	e008      	b.n	800cfc4 <HAL_UART_IRQHandler+0x730>
 800cfb2:	bf00      	nop
 800cfb4:	e006      	b.n	800cfc4 <HAL_UART_IRQHandler+0x730>
 800cfb6:	bf00      	nop
 800cfb8:	e004      	b.n	800cfc4 <HAL_UART_IRQHandler+0x730>
 800cfba:	bf00      	nop
 800cfbc:	e002      	b.n	800cfc4 <HAL_UART_IRQHandler+0x730>
 800cfbe:	bf00      	nop
 800cfc0:	e000      	b.n	800cfc4 <HAL_UART_IRQHandler+0x730>
 800cfc2:	bf00      	nop
 800cfc4:	37e8      	adds	r7, #232	; 0xe8
 800cfc6:	46bd      	mov	sp, r7
 800cfc8:	bd80      	pop	{r7, pc}
 800cfca:	bf00      	nop
 800cfcc:	effffffe 	.word	0xeffffffe

0800cfd0 <HAL_UART_ErrorCallback>:
 800cfd0:	b480      	push	{r7}
 800cfd2:	b083      	sub	sp, #12
 800cfd4:	af00      	add	r7, sp, #0
 800cfd6:	6078      	str	r0, [r7, #4]
 800cfd8:	bf00      	nop
 800cfda:	370c      	adds	r7, #12
 800cfdc:	46bd      	mov	sp, r7
 800cfde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfe2:	4770      	bx	lr

0800cfe4 <HAL_UARTEx_RxEventCallback>:
 800cfe4:	b480      	push	{r7}
 800cfe6:	b083      	sub	sp, #12
 800cfe8:	af00      	add	r7, sp, #0
 800cfea:	6078      	str	r0, [r7, #4]
 800cfec:	460b      	mov	r3, r1
 800cfee:	807b      	strh	r3, [r7, #2]
 800cff0:	bf00      	nop
 800cff2:	370c      	adds	r7, #12
 800cff4:	46bd      	mov	sp, r7
 800cff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cffa:	4770      	bx	lr

0800cffc <UART_SetConfig>:
 800cffc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800d000:	b092      	sub	sp, #72	; 0x48
 800d002:	af00      	add	r7, sp, #0
 800d004:	6178      	str	r0, [r7, #20]
 800d006:	2300      	movs	r3, #0
 800d008:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800d00c:	697b      	ldr	r3, [r7, #20]
 800d00e:	689a      	ldr	r2, [r3, #8]
 800d010:	697b      	ldr	r3, [r7, #20]
 800d012:	691b      	ldr	r3, [r3, #16]
 800d014:	431a      	orrs	r2, r3
 800d016:	697b      	ldr	r3, [r7, #20]
 800d018:	695b      	ldr	r3, [r3, #20]
 800d01a:	431a      	orrs	r2, r3
 800d01c:	697b      	ldr	r3, [r7, #20]
 800d01e:	69db      	ldr	r3, [r3, #28]
 800d020:	4313      	orrs	r3, r2
 800d022:	647b      	str	r3, [r7, #68]	; 0x44
 800d024:	697b      	ldr	r3, [r7, #20]
 800d026:	681b      	ldr	r3, [r3, #0]
 800d028:	681a      	ldr	r2, [r3, #0]
 800d02a:	4bbe      	ldr	r3, [pc, #760]	; (800d324 <UART_SetConfig+0x328>)
 800d02c:	4013      	ands	r3, r2
 800d02e:	697a      	ldr	r2, [r7, #20]
 800d030:	6812      	ldr	r2, [r2, #0]
 800d032:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800d034:	430b      	orrs	r3, r1
 800d036:	6013      	str	r3, [r2, #0]
 800d038:	697b      	ldr	r3, [r7, #20]
 800d03a:	681b      	ldr	r3, [r3, #0]
 800d03c:	685b      	ldr	r3, [r3, #4]
 800d03e:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800d042:	697b      	ldr	r3, [r7, #20]
 800d044:	68da      	ldr	r2, [r3, #12]
 800d046:	697b      	ldr	r3, [r7, #20]
 800d048:	681b      	ldr	r3, [r3, #0]
 800d04a:	430a      	orrs	r2, r1
 800d04c:	605a      	str	r2, [r3, #4]
 800d04e:	697b      	ldr	r3, [r7, #20]
 800d050:	699b      	ldr	r3, [r3, #24]
 800d052:	647b      	str	r3, [r7, #68]	; 0x44
 800d054:	697b      	ldr	r3, [r7, #20]
 800d056:	681b      	ldr	r3, [r3, #0]
 800d058:	4ab3      	ldr	r2, [pc, #716]	; (800d328 <UART_SetConfig+0x32c>)
 800d05a:	4293      	cmp	r3, r2
 800d05c:	d004      	beq.n	800d068 <UART_SetConfig+0x6c>
 800d05e:	697b      	ldr	r3, [r7, #20]
 800d060:	6a1b      	ldr	r3, [r3, #32]
 800d062:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800d064:	4313      	orrs	r3, r2
 800d066:	647b      	str	r3, [r7, #68]	; 0x44
 800d068:	697b      	ldr	r3, [r7, #20]
 800d06a:	681b      	ldr	r3, [r3, #0]
 800d06c:	689a      	ldr	r2, [r3, #8]
 800d06e:	4baf      	ldr	r3, [pc, #700]	; (800d32c <UART_SetConfig+0x330>)
 800d070:	4013      	ands	r3, r2
 800d072:	697a      	ldr	r2, [r7, #20]
 800d074:	6812      	ldr	r2, [r2, #0]
 800d076:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800d078:	430b      	orrs	r3, r1
 800d07a:	6093      	str	r3, [r2, #8]
 800d07c:	697b      	ldr	r3, [r7, #20]
 800d07e:	681b      	ldr	r3, [r3, #0]
 800d080:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d082:	f023 010f 	bic.w	r1, r3, #15
 800d086:	697b      	ldr	r3, [r7, #20]
 800d088:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800d08a:	697b      	ldr	r3, [r7, #20]
 800d08c:	681b      	ldr	r3, [r3, #0]
 800d08e:	430a      	orrs	r2, r1
 800d090:	62da      	str	r2, [r3, #44]	; 0x2c
 800d092:	697b      	ldr	r3, [r7, #20]
 800d094:	681b      	ldr	r3, [r3, #0]
 800d096:	4aa6      	ldr	r2, [pc, #664]	; (800d330 <UART_SetConfig+0x334>)
 800d098:	4293      	cmp	r3, r2
 800d09a:	d177      	bne.n	800d18c <UART_SetConfig+0x190>
 800d09c:	4ba5      	ldr	r3, [pc, #660]	; (800d334 <UART_SetConfig+0x338>)
 800d09e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800d0a0:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800d0a4:	2b28      	cmp	r3, #40	; 0x28
 800d0a6:	d86d      	bhi.n	800d184 <UART_SetConfig+0x188>
 800d0a8:	a201      	add	r2, pc, #4	; (adr r2, 800d0b0 <UART_SetConfig+0xb4>)
 800d0aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d0ae:	bf00      	nop
 800d0b0:	0800d155 	.word	0x0800d155
 800d0b4:	0800d185 	.word	0x0800d185
 800d0b8:	0800d185 	.word	0x0800d185
 800d0bc:	0800d185 	.word	0x0800d185
 800d0c0:	0800d185 	.word	0x0800d185
 800d0c4:	0800d185 	.word	0x0800d185
 800d0c8:	0800d185 	.word	0x0800d185
 800d0cc:	0800d185 	.word	0x0800d185
 800d0d0:	0800d15d 	.word	0x0800d15d
 800d0d4:	0800d185 	.word	0x0800d185
 800d0d8:	0800d185 	.word	0x0800d185
 800d0dc:	0800d185 	.word	0x0800d185
 800d0e0:	0800d185 	.word	0x0800d185
 800d0e4:	0800d185 	.word	0x0800d185
 800d0e8:	0800d185 	.word	0x0800d185
 800d0ec:	0800d185 	.word	0x0800d185
 800d0f0:	0800d165 	.word	0x0800d165
 800d0f4:	0800d185 	.word	0x0800d185
 800d0f8:	0800d185 	.word	0x0800d185
 800d0fc:	0800d185 	.word	0x0800d185
 800d100:	0800d185 	.word	0x0800d185
 800d104:	0800d185 	.word	0x0800d185
 800d108:	0800d185 	.word	0x0800d185
 800d10c:	0800d185 	.word	0x0800d185
 800d110:	0800d16d 	.word	0x0800d16d
 800d114:	0800d185 	.word	0x0800d185
 800d118:	0800d185 	.word	0x0800d185
 800d11c:	0800d185 	.word	0x0800d185
 800d120:	0800d185 	.word	0x0800d185
 800d124:	0800d185 	.word	0x0800d185
 800d128:	0800d185 	.word	0x0800d185
 800d12c:	0800d185 	.word	0x0800d185
 800d130:	0800d175 	.word	0x0800d175
 800d134:	0800d185 	.word	0x0800d185
 800d138:	0800d185 	.word	0x0800d185
 800d13c:	0800d185 	.word	0x0800d185
 800d140:	0800d185 	.word	0x0800d185
 800d144:	0800d185 	.word	0x0800d185
 800d148:	0800d185 	.word	0x0800d185
 800d14c:	0800d185 	.word	0x0800d185
 800d150:	0800d17d 	.word	0x0800d17d
 800d154:	2301      	movs	r3, #1
 800d156:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d15a:	e222      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d15c:	2304      	movs	r3, #4
 800d15e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d162:	e21e      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d164:	2308      	movs	r3, #8
 800d166:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d16a:	e21a      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d16c:	2310      	movs	r3, #16
 800d16e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d172:	e216      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d174:	2320      	movs	r3, #32
 800d176:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d17a:	e212      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d17c:	2340      	movs	r3, #64	; 0x40
 800d17e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d182:	e20e      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d184:	2380      	movs	r3, #128	; 0x80
 800d186:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d18a:	e20a      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d18c:	697b      	ldr	r3, [r7, #20]
 800d18e:	681b      	ldr	r3, [r3, #0]
 800d190:	4a69      	ldr	r2, [pc, #420]	; (800d338 <UART_SetConfig+0x33c>)
 800d192:	4293      	cmp	r3, r2
 800d194:	d130      	bne.n	800d1f8 <UART_SetConfig+0x1fc>
 800d196:	4b67      	ldr	r3, [pc, #412]	; (800d334 <UART_SetConfig+0x338>)
 800d198:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800d19a:	f003 0307 	and.w	r3, r3, #7
 800d19e:	2b05      	cmp	r3, #5
 800d1a0:	d826      	bhi.n	800d1f0 <UART_SetConfig+0x1f4>
 800d1a2:	a201      	add	r2, pc, #4	; (adr r2, 800d1a8 <UART_SetConfig+0x1ac>)
 800d1a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d1a8:	0800d1c1 	.word	0x0800d1c1
 800d1ac:	0800d1c9 	.word	0x0800d1c9
 800d1b0:	0800d1d1 	.word	0x0800d1d1
 800d1b4:	0800d1d9 	.word	0x0800d1d9
 800d1b8:	0800d1e1 	.word	0x0800d1e1
 800d1bc:	0800d1e9 	.word	0x0800d1e9
 800d1c0:	2300      	movs	r3, #0
 800d1c2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d1c6:	e1ec      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d1c8:	2304      	movs	r3, #4
 800d1ca:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d1ce:	e1e8      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d1d0:	2308      	movs	r3, #8
 800d1d2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d1d6:	e1e4      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d1d8:	2310      	movs	r3, #16
 800d1da:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d1de:	e1e0      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d1e0:	2320      	movs	r3, #32
 800d1e2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d1e6:	e1dc      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d1e8:	2340      	movs	r3, #64	; 0x40
 800d1ea:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d1ee:	e1d8      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d1f0:	2380      	movs	r3, #128	; 0x80
 800d1f2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d1f6:	e1d4      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d1f8:	697b      	ldr	r3, [r7, #20]
 800d1fa:	681b      	ldr	r3, [r3, #0]
 800d1fc:	4a4f      	ldr	r2, [pc, #316]	; (800d33c <UART_SetConfig+0x340>)
 800d1fe:	4293      	cmp	r3, r2
 800d200:	d130      	bne.n	800d264 <UART_SetConfig+0x268>
 800d202:	4b4c      	ldr	r3, [pc, #304]	; (800d334 <UART_SetConfig+0x338>)
 800d204:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800d206:	f003 0307 	and.w	r3, r3, #7
 800d20a:	2b05      	cmp	r3, #5
 800d20c:	d826      	bhi.n	800d25c <UART_SetConfig+0x260>
 800d20e:	a201      	add	r2, pc, #4	; (adr r2, 800d214 <UART_SetConfig+0x218>)
 800d210:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d214:	0800d22d 	.word	0x0800d22d
 800d218:	0800d235 	.word	0x0800d235
 800d21c:	0800d23d 	.word	0x0800d23d
 800d220:	0800d245 	.word	0x0800d245
 800d224:	0800d24d 	.word	0x0800d24d
 800d228:	0800d255 	.word	0x0800d255
 800d22c:	2300      	movs	r3, #0
 800d22e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d232:	e1b6      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d234:	2304      	movs	r3, #4
 800d236:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d23a:	e1b2      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d23c:	2308      	movs	r3, #8
 800d23e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d242:	e1ae      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d244:	2310      	movs	r3, #16
 800d246:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d24a:	e1aa      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d24c:	2320      	movs	r3, #32
 800d24e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d252:	e1a6      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d254:	2340      	movs	r3, #64	; 0x40
 800d256:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d25a:	e1a2      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d25c:	2380      	movs	r3, #128	; 0x80
 800d25e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d262:	e19e      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d264:	697b      	ldr	r3, [r7, #20]
 800d266:	681b      	ldr	r3, [r3, #0]
 800d268:	4a35      	ldr	r2, [pc, #212]	; (800d340 <UART_SetConfig+0x344>)
 800d26a:	4293      	cmp	r3, r2
 800d26c:	d130      	bne.n	800d2d0 <UART_SetConfig+0x2d4>
 800d26e:	4b31      	ldr	r3, [pc, #196]	; (800d334 <UART_SetConfig+0x338>)
 800d270:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800d272:	f003 0307 	and.w	r3, r3, #7
 800d276:	2b05      	cmp	r3, #5
 800d278:	d826      	bhi.n	800d2c8 <UART_SetConfig+0x2cc>
 800d27a:	a201      	add	r2, pc, #4	; (adr r2, 800d280 <UART_SetConfig+0x284>)
 800d27c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d280:	0800d299 	.word	0x0800d299
 800d284:	0800d2a1 	.word	0x0800d2a1
 800d288:	0800d2a9 	.word	0x0800d2a9
 800d28c:	0800d2b1 	.word	0x0800d2b1
 800d290:	0800d2b9 	.word	0x0800d2b9
 800d294:	0800d2c1 	.word	0x0800d2c1
 800d298:	2300      	movs	r3, #0
 800d29a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d29e:	e180      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d2a0:	2304      	movs	r3, #4
 800d2a2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d2a6:	e17c      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d2a8:	2308      	movs	r3, #8
 800d2aa:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d2ae:	e178      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d2b0:	2310      	movs	r3, #16
 800d2b2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d2b6:	e174      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d2b8:	2320      	movs	r3, #32
 800d2ba:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d2be:	e170      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d2c0:	2340      	movs	r3, #64	; 0x40
 800d2c2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d2c6:	e16c      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d2c8:	2380      	movs	r3, #128	; 0x80
 800d2ca:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d2ce:	e168      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d2d0:	697b      	ldr	r3, [r7, #20]
 800d2d2:	681b      	ldr	r3, [r3, #0]
 800d2d4:	4a1b      	ldr	r2, [pc, #108]	; (800d344 <UART_SetConfig+0x348>)
 800d2d6:	4293      	cmp	r3, r2
 800d2d8:	d142      	bne.n	800d360 <UART_SetConfig+0x364>
 800d2da:	4b16      	ldr	r3, [pc, #88]	; (800d334 <UART_SetConfig+0x338>)
 800d2dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800d2de:	f003 0307 	and.w	r3, r3, #7
 800d2e2:	2b05      	cmp	r3, #5
 800d2e4:	d838      	bhi.n	800d358 <UART_SetConfig+0x35c>
 800d2e6:	a201      	add	r2, pc, #4	; (adr r2, 800d2ec <UART_SetConfig+0x2f0>)
 800d2e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d2ec:	0800d305 	.word	0x0800d305
 800d2f0:	0800d30d 	.word	0x0800d30d
 800d2f4:	0800d315 	.word	0x0800d315
 800d2f8:	0800d31d 	.word	0x0800d31d
 800d2fc:	0800d349 	.word	0x0800d349
 800d300:	0800d351 	.word	0x0800d351
 800d304:	2300      	movs	r3, #0
 800d306:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d30a:	e14a      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d30c:	2304      	movs	r3, #4
 800d30e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d312:	e146      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d314:	2308      	movs	r3, #8
 800d316:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d31a:	e142      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d31c:	2310      	movs	r3, #16
 800d31e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d322:	e13e      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d324:	cfff69f3 	.word	0xcfff69f3
 800d328:	58000c00 	.word	0x58000c00
 800d32c:	11fff4ff 	.word	0x11fff4ff
 800d330:	40011000 	.word	0x40011000
 800d334:	58024400 	.word	0x58024400
 800d338:	40004400 	.word	0x40004400
 800d33c:	40004800 	.word	0x40004800
 800d340:	40004c00 	.word	0x40004c00
 800d344:	40005000 	.word	0x40005000
 800d348:	2320      	movs	r3, #32
 800d34a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d34e:	e128      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d350:	2340      	movs	r3, #64	; 0x40
 800d352:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d356:	e124      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d358:	2380      	movs	r3, #128	; 0x80
 800d35a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d35e:	e120      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d360:	697b      	ldr	r3, [r7, #20]
 800d362:	681b      	ldr	r3, [r3, #0]
 800d364:	4acb      	ldr	r2, [pc, #812]	; (800d694 <UART_SetConfig+0x698>)
 800d366:	4293      	cmp	r3, r2
 800d368:	d176      	bne.n	800d458 <UART_SetConfig+0x45c>
 800d36a:	4bcb      	ldr	r3, [pc, #812]	; (800d698 <UART_SetConfig+0x69c>)
 800d36c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800d36e:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800d372:	2b28      	cmp	r3, #40	; 0x28
 800d374:	d86c      	bhi.n	800d450 <UART_SetConfig+0x454>
 800d376:	a201      	add	r2, pc, #4	; (adr r2, 800d37c <UART_SetConfig+0x380>)
 800d378:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d37c:	0800d421 	.word	0x0800d421
 800d380:	0800d451 	.word	0x0800d451
 800d384:	0800d451 	.word	0x0800d451
 800d388:	0800d451 	.word	0x0800d451
 800d38c:	0800d451 	.word	0x0800d451
 800d390:	0800d451 	.word	0x0800d451
 800d394:	0800d451 	.word	0x0800d451
 800d398:	0800d451 	.word	0x0800d451
 800d39c:	0800d429 	.word	0x0800d429
 800d3a0:	0800d451 	.word	0x0800d451
 800d3a4:	0800d451 	.word	0x0800d451
 800d3a8:	0800d451 	.word	0x0800d451
 800d3ac:	0800d451 	.word	0x0800d451
 800d3b0:	0800d451 	.word	0x0800d451
 800d3b4:	0800d451 	.word	0x0800d451
 800d3b8:	0800d451 	.word	0x0800d451
 800d3bc:	0800d431 	.word	0x0800d431
 800d3c0:	0800d451 	.word	0x0800d451
 800d3c4:	0800d451 	.word	0x0800d451
 800d3c8:	0800d451 	.word	0x0800d451
 800d3cc:	0800d451 	.word	0x0800d451
 800d3d0:	0800d451 	.word	0x0800d451
 800d3d4:	0800d451 	.word	0x0800d451
 800d3d8:	0800d451 	.word	0x0800d451
 800d3dc:	0800d439 	.word	0x0800d439
 800d3e0:	0800d451 	.word	0x0800d451
 800d3e4:	0800d451 	.word	0x0800d451
 800d3e8:	0800d451 	.word	0x0800d451
 800d3ec:	0800d451 	.word	0x0800d451
 800d3f0:	0800d451 	.word	0x0800d451
 800d3f4:	0800d451 	.word	0x0800d451
 800d3f8:	0800d451 	.word	0x0800d451
 800d3fc:	0800d441 	.word	0x0800d441
 800d400:	0800d451 	.word	0x0800d451
 800d404:	0800d451 	.word	0x0800d451
 800d408:	0800d451 	.word	0x0800d451
 800d40c:	0800d451 	.word	0x0800d451
 800d410:	0800d451 	.word	0x0800d451
 800d414:	0800d451 	.word	0x0800d451
 800d418:	0800d451 	.word	0x0800d451
 800d41c:	0800d449 	.word	0x0800d449
 800d420:	2301      	movs	r3, #1
 800d422:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d426:	e0bc      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d428:	2304      	movs	r3, #4
 800d42a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d42e:	e0b8      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d430:	2308      	movs	r3, #8
 800d432:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d436:	e0b4      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d438:	2310      	movs	r3, #16
 800d43a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d43e:	e0b0      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d440:	2320      	movs	r3, #32
 800d442:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d446:	e0ac      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d448:	2340      	movs	r3, #64	; 0x40
 800d44a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d44e:	e0a8      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d450:	2380      	movs	r3, #128	; 0x80
 800d452:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d456:	e0a4      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d458:	697b      	ldr	r3, [r7, #20]
 800d45a:	681b      	ldr	r3, [r3, #0]
 800d45c:	4a8f      	ldr	r2, [pc, #572]	; (800d69c <UART_SetConfig+0x6a0>)
 800d45e:	4293      	cmp	r3, r2
 800d460:	d130      	bne.n	800d4c4 <UART_SetConfig+0x4c8>
 800d462:	4b8d      	ldr	r3, [pc, #564]	; (800d698 <UART_SetConfig+0x69c>)
 800d464:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800d466:	f003 0307 	and.w	r3, r3, #7
 800d46a:	2b05      	cmp	r3, #5
 800d46c:	d826      	bhi.n	800d4bc <UART_SetConfig+0x4c0>
 800d46e:	a201      	add	r2, pc, #4	; (adr r2, 800d474 <UART_SetConfig+0x478>)
 800d470:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d474:	0800d48d 	.word	0x0800d48d
 800d478:	0800d495 	.word	0x0800d495
 800d47c:	0800d49d 	.word	0x0800d49d
 800d480:	0800d4a5 	.word	0x0800d4a5
 800d484:	0800d4ad 	.word	0x0800d4ad
 800d488:	0800d4b5 	.word	0x0800d4b5
 800d48c:	2300      	movs	r3, #0
 800d48e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d492:	e086      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d494:	2304      	movs	r3, #4
 800d496:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d49a:	e082      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d49c:	2308      	movs	r3, #8
 800d49e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d4a2:	e07e      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d4a4:	2310      	movs	r3, #16
 800d4a6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d4aa:	e07a      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d4ac:	2320      	movs	r3, #32
 800d4ae:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d4b2:	e076      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d4b4:	2340      	movs	r3, #64	; 0x40
 800d4b6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d4ba:	e072      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d4bc:	2380      	movs	r3, #128	; 0x80
 800d4be:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d4c2:	e06e      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d4c4:	697b      	ldr	r3, [r7, #20]
 800d4c6:	681b      	ldr	r3, [r3, #0]
 800d4c8:	4a75      	ldr	r2, [pc, #468]	; (800d6a0 <UART_SetConfig+0x6a4>)
 800d4ca:	4293      	cmp	r3, r2
 800d4cc:	d130      	bne.n	800d530 <UART_SetConfig+0x534>
 800d4ce:	4b72      	ldr	r3, [pc, #456]	; (800d698 <UART_SetConfig+0x69c>)
 800d4d0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800d4d2:	f003 0307 	and.w	r3, r3, #7
 800d4d6:	2b05      	cmp	r3, #5
 800d4d8:	d826      	bhi.n	800d528 <UART_SetConfig+0x52c>
 800d4da:	a201      	add	r2, pc, #4	; (adr r2, 800d4e0 <UART_SetConfig+0x4e4>)
 800d4dc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d4e0:	0800d4f9 	.word	0x0800d4f9
 800d4e4:	0800d501 	.word	0x0800d501
 800d4e8:	0800d509 	.word	0x0800d509
 800d4ec:	0800d511 	.word	0x0800d511
 800d4f0:	0800d519 	.word	0x0800d519
 800d4f4:	0800d521 	.word	0x0800d521
 800d4f8:	2300      	movs	r3, #0
 800d4fa:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d4fe:	e050      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d500:	2304      	movs	r3, #4
 800d502:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d506:	e04c      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d508:	2308      	movs	r3, #8
 800d50a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d50e:	e048      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d510:	2310      	movs	r3, #16
 800d512:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d516:	e044      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d518:	2320      	movs	r3, #32
 800d51a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d51e:	e040      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d520:	2340      	movs	r3, #64	; 0x40
 800d522:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d526:	e03c      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d528:	2380      	movs	r3, #128	; 0x80
 800d52a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d52e:	e038      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d530:	697b      	ldr	r3, [r7, #20]
 800d532:	681b      	ldr	r3, [r3, #0]
 800d534:	4a5b      	ldr	r2, [pc, #364]	; (800d6a4 <UART_SetConfig+0x6a8>)
 800d536:	4293      	cmp	r3, r2
 800d538:	d130      	bne.n	800d59c <UART_SetConfig+0x5a0>
 800d53a:	4b57      	ldr	r3, [pc, #348]	; (800d698 <UART_SetConfig+0x69c>)
 800d53c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800d53e:	f003 0307 	and.w	r3, r3, #7
 800d542:	2b05      	cmp	r3, #5
 800d544:	d826      	bhi.n	800d594 <UART_SetConfig+0x598>
 800d546:	a201      	add	r2, pc, #4	; (adr r2, 800d54c <UART_SetConfig+0x550>)
 800d548:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d54c:	0800d565 	.word	0x0800d565
 800d550:	0800d56d 	.word	0x0800d56d
 800d554:	0800d575 	.word	0x0800d575
 800d558:	0800d57d 	.word	0x0800d57d
 800d55c:	0800d585 	.word	0x0800d585
 800d560:	0800d58d 	.word	0x0800d58d
 800d564:	2302      	movs	r3, #2
 800d566:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d56a:	e01a      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d56c:	2304      	movs	r3, #4
 800d56e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d572:	e016      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d574:	2308      	movs	r3, #8
 800d576:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d57a:	e012      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d57c:	2310      	movs	r3, #16
 800d57e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d582:	e00e      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d584:	2320      	movs	r3, #32
 800d586:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d58a:	e00a      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d58c:	2340      	movs	r3, #64	; 0x40
 800d58e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d592:	e006      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d594:	2380      	movs	r3, #128	; 0x80
 800d596:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d59a:	e002      	b.n	800d5a2 <UART_SetConfig+0x5a6>
 800d59c:	2380      	movs	r3, #128	; 0x80
 800d59e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800d5a2:	697b      	ldr	r3, [r7, #20]
 800d5a4:	681b      	ldr	r3, [r3, #0]
 800d5a6:	4a3f      	ldr	r2, [pc, #252]	; (800d6a4 <UART_SetConfig+0x6a8>)
 800d5a8:	4293      	cmp	r3, r2
 800d5aa:	f040 80f8 	bne.w	800d79e <UART_SetConfig+0x7a2>
 800d5ae:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 800d5b2:	2b20      	cmp	r3, #32
 800d5b4:	dc46      	bgt.n	800d644 <UART_SetConfig+0x648>
 800d5b6:	2b02      	cmp	r3, #2
 800d5b8:	f2c0 8082 	blt.w	800d6c0 <UART_SetConfig+0x6c4>
 800d5bc:	3b02      	subs	r3, #2
 800d5be:	2b1e      	cmp	r3, #30
 800d5c0:	d87e      	bhi.n	800d6c0 <UART_SetConfig+0x6c4>
 800d5c2:	a201      	add	r2, pc, #4	; (adr r2, 800d5c8 <UART_SetConfig+0x5cc>)
 800d5c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d5c8:	0800d64b 	.word	0x0800d64b
 800d5cc:	0800d6c1 	.word	0x0800d6c1
 800d5d0:	0800d653 	.word	0x0800d653
 800d5d4:	0800d6c1 	.word	0x0800d6c1
 800d5d8:	0800d6c1 	.word	0x0800d6c1
 800d5dc:	0800d6c1 	.word	0x0800d6c1
 800d5e0:	0800d663 	.word	0x0800d663
 800d5e4:	0800d6c1 	.word	0x0800d6c1
 800d5e8:	0800d6c1 	.word	0x0800d6c1
 800d5ec:	0800d6c1 	.word	0x0800d6c1
 800d5f0:	0800d6c1 	.word	0x0800d6c1
 800d5f4:	0800d6c1 	.word	0x0800d6c1
 800d5f8:	0800d6c1 	.word	0x0800d6c1
 800d5fc:	0800d6c1 	.word	0x0800d6c1
 800d600:	0800d673 	.word	0x0800d673
 800d604:	0800d6c1 	.word	0x0800d6c1
 800d608:	0800d6c1 	.word	0x0800d6c1
 800d60c:	0800d6c1 	.word	0x0800d6c1
 800d610:	0800d6c1 	.word	0x0800d6c1
 800d614:	0800d6c1 	.word	0x0800d6c1
 800d618:	0800d6c1 	.word	0x0800d6c1
 800d61c:	0800d6c1 	.word	0x0800d6c1
 800d620:	0800d6c1 	.word	0x0800d6c1
 800d624:	0800d6c1 	.word	0x0800d6c1
 800d628:	0800d6c1 	.word	0x0800d6c1
 800d62c:	0800d6c1 	.word	0x0800d6c1
 800d630:	0800d6c1 	.word	0x0800d6c1
 800d634:	0800d6c1 	.word	0x0800d6c1
 800d638:	0800d6c1 	.word	0x0800d6c1
 800d63c:	0800d6c1 	.word	0x0800d6c1
 800d640:	0800d6b3 	.word	0x0800d6b3
 800d644:	2b40      	cmp	r3, #64	; 0x40
 800d646:	d037      	beq.n	800d6b8 <UART_SetConfig+0x6bc>
 800d648:	e03a      	b.n	800d6c0 <UART_SetConfig+0x6c4>
 800d64a:	f7fc fbc9 	bl	8009de0 <HAL_RCCEx_GetD3PCLK1Freq>
 800d64e:	63f8      	str	r0, [r7, #60]	; 0x3c
 800d650:	e03c      	b.n	800d6cc <UART_SetConfig+0x6d0>
 800d652:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800d656:	4618      	mov	r0, r3
 800d658:	f7fc fbd8 	bl	8009e0c <HAL_RCCEx_GetPLL2ClockFreq>
 800d65c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d65e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d660:	e034      	b.n	800d6cc <UART_SetConfig+0x6d0>
 800d662:	f107 0318 	add.w	r3, r7, #24
 800d666:	4618      	mov	r0, r3
 800d668:	f7fc fd24 	bl	800a0b4 <HAL_RCCEx_GetPLL3ClockFreq>
 800d66c:	69fb      	ldr	r3, [r7, #28]
 800d66e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d670:	e02c      	b.n	800d6cc <UART_SetConfig+0x6d0>
 800d672:	4b09      	ldr	r3, [pc, #36]	; (800d698 <UART_SetConfig+0x69c>)
 800d674:	681b      	ldr	r3, [r3, #0]
 800d676:	f003 0320 	and.w	r3, r3, #32
 800d67a:	2b00      	cmp	r3, #0
 800d67c:	d016      	beq.n	800d6ac <UART_SetConfig+0x6b0>
 800d67e:	4b06      	ldr	r3, [pc, #24]	; (800d698 <UART_SetConfig+0x69c>)
 800d680:	681b      	ldr	r3, [r3, #0]
 800d682:	08db      	lsrs	r3, r3, #3
 800d684:	f003 0303 	and.w	r3, r3, #3
 800d688:	4a07      	ldr	r2, [pc, #28]	; (800d6a8 <UART_SetConfig+0x6ac>)
 800d68a:	fa22 f303 	lsr.w	r3, r2, r3
 800d68e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d690:	e01c      	b.n	800d6cc <UART_SetConfig+0x6d0>
 800d692:	bf00      	nop
 800d694:	40011400 	.word	0x40011400
 800d698:	58024400 	.word	0x58024400
 800d69c:	40007800 	.word	0x40007800
 800d6a0:	40007c00 	.word	0x40007c00
 800d6a4:	58000c00 	.word	0x58000c00
 800d6a8:	03d09000 	.word	0x03d09000
 800d6ac:	4b9d      	ldr	r3, [pc, #628]	; (800d924 <UART_SetConfig+0x928>)
 800d6ae:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d6b0:	e00c      	b.n	800d6cc <UART_SetConfig+0x6d0>
 800d6b2:	4b9d      	ldr	r3, [pc, #628]	; (800d928 <UART_SetConfig+0x92c>)
 800d6b4:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d6b6:	e009      	b.n	800d6cc <UART_SetConfig+0x6d0>
 800d6b8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800d6bc:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d6be:	e005      	b.n	800d6cc <UART_SetConfig+0x6d0>
 800d6c0:	2300      	movs	r3, #0
 800d6c2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d6c4:	2301      	movs	r3, #1
 800d6c6:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800d6ca:	bf00      	nop
 800d6cc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d6ce:	2b00      	cmp	r3, #0
 800d6d0:	f000 81de 	beq.w	800da90 <UART_SetConfig+0xa94>
 800d6d4:	697b      	ldr	r3, [r7, #20]
 800d6d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d6d8:	4a94      	ldr	r2, [pc, #592]	; (800d92c <UART_SetConfig+0x930>)
 800d6da:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800d6de:	461a      	mov	r2, r3
 800d6e0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d6e2:	fbb3 f3f2 	udiv	r3, r3, r2
 800d6e6:	633b      	str	r3, [r7, #48]	; 0x30
 800d6e8:	697b      	ldr	r3, [r7, #20]
 800d6ea:	685a      	ldr	r2, [r3, #4]
 800d6ec:	4613      	mov	r3, r2
 800d6ee:	005b      	lsls	r3, r3, #1
 800d6f0:	4413      	add	r3, r2
 800d6f2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800d6f4:	429a      	cmp	r2, r3
 800d6f6:	d305      	bcc.n	800d704 <UART_SetConfig+0x708>
 800d6f8:	697b      	ldr	r3, [r7, #20]
 800d6fa:	685b      	ldr	r3, [r3, #4]
 800d6fc:	031b      	lsls	r3, r3, #12
 800d6fe:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800d700:	429a      	cmp	r2, r3
 800d702:	d903      	bls.n	800d70c <UART_SetConfig+0x710>
 800d704:	2301      	movs	r3, #1
 800d706:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800d70a:	e1c1      	b.n	800da90 <UART_SetConfig+0xa94>
 800d70c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d70e:	2200      	movs	r2, #0
 800d710:	60bb      	str	r3, [r7, #8]
 800d712:	60fa      	str	r2, [r7, #12]
 800d714:	697b      	ldr	r3, [r7, #20]
 800d716:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d718:	4a84      	ldr	r2, [pc, #528]	; (800d92c <UART_SetConfig+0x930>)
 800d71a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800d71e:	b29b      	uxth	r3, r3
 800d720:	2200      	movs	r2, #0
 800d722:	603b      	str	r3, [r7, #0]
 800d724:	607a      	str	r2, [r7, #4]
 800d726:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d72a:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800d72e:	f7f2 ffeb 	bl	8000708 <__aeabi_uldivmod>
 800d732:	4602      	mov	r2, r0
 800d734:	460b      	mov	r3, r1
 800d736:	4610      	mov	r0, r2
 800d738:	4619      	mov	r1, r3
 800d73a:	f04f 0200 	mov.w	r2, #0
 800d73e:	f04f 0300 	mov.w	r3, #0
 800d742:	020b      	lsls	r3, r1, #8
 800d744:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 800d748:	0202      	lsls	r2, r0, #8
 800d74a:	6979      	ldr	r1, [r7, #20]
 800d74c:	6849      	ldr	r1, [r1, #4]
 800d74e:	0849      	lsrs	r1, r1, #1
 800d750:	2000      	movs	r0, #0
 800d752:	460c      	mov	r4, r1
 800d754:	4605      	mov	r5, r0
 800d756:	eb12 0804 	adds.w	r8, r2, r4
 800d75a:	eb43 0905 	adc.w	r9, r3, r5
 800d75e:	697b      	ldr	r3, [r7, #20]
 800d760:	685b      	ldr	r3, [r3, #4]
 800d762:	2200      	movs	r2, #0
 800d764:	469a      	mov	sl, r3
 800d766:	4693      	mov	fp, r2
 800d768:	4652      	mov	r2, sl
 800d76a:	465b      	mov	r3, fp
 800d76c:	4640      	mov	r0, r8
 800d76e:	4649      	mov	r1, r9
 800d770:	f7f2 ffca 	bl	8000708 <__aeabi_uldivmod>
 800d774:	4602      	mov	r2, r0
 800d776:	460b      	mov	r3, r1
 800d778:	4613      	mov	r3, r2
 800d77a:	63bb      	str	r3, [r7, #56]	; 0x38
 800d77c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d77e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800d782:	d308      	bcc.n	800d796 <UART_SetConfig+0x79a>
 800d784:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d786:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800d78a:	d204      	bcs.n	800d796 <UART_SetConfig+0x79a>
 800d78c:	697b      	ldr	r3, [r7, #20]
 800d78e:	681b      	ldr	r3, [r3, #0]
 800d790:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800d792:	60da      	str	r2, [r3, #12]
 800d794:	e17c      	b.n	800da90 <UART_SetConfig+0xa94>
 800d796:	2301      	movs	r3, #1
 800d798:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800d79c:	e178      	b.n	800da90 <UART_SetConfig+0xa94>
 800d79e:	697b      	ldr	r3, [r7, #20]
 800d7a0:	69db      	ldr	r3, [r3, #28]
 800d7a2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800d7a6:	f040 80c5 	bne.w	800d934 <UART_SetConfig+0x938>
 800d7aa:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 800d7ae:	2b20      	cmp	r3, #32
 800d7b0:	dc48      	bgt.n	800d844 <UART_SetConfig+0x848>
 800d7b2:	2b00      	cmp	r3, #0
 800d7b4:	db7b      	blt.n	800d8ae <UART_SetConfig+0x8b2>
 800d7b6:	2b20      	cmp	r3, #32
 800d7b8:	d879      	bhi.n	800d8ae <UART_SetConfig+0x8b2>
 800d7ba:	a201      	add	r2, pc, #4	; (adr r2, 800d7c0 <UART_SetConfig+0x7c4>)
 800d7bc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d7c0:	0800d84b 	.word	0x0800d84b
 800d7c4:	0800d853 	.word	0x0800d853
 800d7c8:	0800d8af 	.word	0x0800d8af
 800d7cc:	0800d8af 	.word	0x0800d8af
 800d7d0:	0800d85b 	.word	0x0800d85b
 800d7d4:	0800d8af 	.word	0x0800d8af
 800d7d8:	0800d8af 	.word	0x0800d8af
 800d7dc:	0800d8af 	.word	0x0800d8af
 800d7e0:	0800d86b 	.word	0x0800d86b
 800d7e4:	0800d8af 	.word	0x0800d8af
 800d7e8:	0800d8af 	.word	0x0800d8af
 800d7ec:	0800d8af 	.word	0x0800d8af
 800d7f0:	0800d8af 	.word	0x0800d8af
 800d7f4:	0800d8af 	.word	0x0800d8af
 800d7f8:	0800d8af 	.word	0x0800d8af
 800d7fc:	0800d8af 	.word	0x0800d8af
 800d800:	0800d87b 	.word	0x0800d87b
 800d804:	0800d8af 	.word	0x0800d8af
 800d808:	0800d8af 	.word	0x0800d8af
 800d80c:	0800d8af 	.word	0x0800d8af
 800d810:	0800d8af 	.word	0x0800d8af
 800d814:	0800d8af 	.word	0x0800d8af
 800d818:	0800d8af 	.word	0x0800d8af
 800d81c:	0800d8af 	.word	0x0800d8af
 800d820:	0800d8af 	.word	0x0800d8af
 800d824:	0800d8af 	.word	0x0800d8af
 800d828:	0800d8af 	.word	0x0800d8af
 800d82c:	0800d8af 	.word	0x0800d8af
 800d830:	0800d8af 	.word	0x0800d8af
 800d834:	0800d8af 	.word	0x0800d8af
 800d838:	0800d8af 	.word	0x0800d8af
 800d83c:	0800d8af 	.word	0x0800d8af
 800d840:	0800d8a1 	.word	0x0800d8a1
 800d844:	2b40      	cmp	r3, #64	; 0x40
 800d846:	d02e      	beq.n	800d8a6 <UART_SetConfig+0x8aa>
 800d848:	e031      	b.n	800d8ae <UART_SetConfig+0x8b2>
 800d84a:	f7fb fb57 	bl	8008efc <HAL_RCC_GetPCLK1Freq>
 800d84e:	63f8      	str	r0, [r7, #60]	; 0x3c
 800d850:	e033      	b.n	800d8ba <UART_SetConfig+0x8be>
 800d852:	f7fb fb69 	bl	8008f28 <HAL_RCC_GetPCLK2Freq>
 800d856:	63f8      	str	r0, [r7, #60]	; 0x3c
 800d858:	e02f      	b.n	800d8ba <UART_SetConfig+0x8be>
 800d85a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800d85e:	4618      	mov	r0, r3
 800d860:	f7fc fad4 	bl	8009e0c <HAL_RCCEx_GetPLL2ClockFreq>
 800d864:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d866:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d868:	e027      	b.n	800d8ba <UART_SetConfig+0x8be>
 800d86a:	f107 0318 	add.w	r3, r7, #24
 800d86e:	4618      	mov	r0, r3
 800d870:	f7fc fc20 	bl	800a0b4 <HAL_RCCEx_GetPLL3ClockFreq>
 800d874:	69fb      	ldr	r3, [r7, #28]
 800d876:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d878:	e01f      	b.n	800d8ba <UART_SetConfig+0x8be>
 800d87a:	4b2d      	ldr	r3, [pc, #180]	; (800d930 <UART_SetConfig+0x934>)
 800d87c:	681b      	ldr	r3, [r3, #0]
 800d87e:	f003 0320 	and.w	r3, r3, #32
 800d882:	2b00      	cmp	r3, #0
 800d884:	d009      	beq.n	800d89a <UART_SetConfig+0x89e>
 800d886:	4b2a      	ldr	r3, [pc, #168]	; (800d930 <UART_SetConfig+0x934>)
 800d888:	681b      	ldr	r3, [r3, #0]
 800d88a:	08db      	lsrs	r3, r3, #3
 800d88c:	f003 0303 	and.w	r3, r3, #3
 800d890:	4a24      	ldr	r2, [pc, #144]	; (800d924 <UART_SetConfig+0x928>)
 800d892:	fa22 f303 	lsr.w	r3, r2, r3
 800d896:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d898:	e00f      	b.n	800d8ba <UART_SetConfig+0x8be>
 800d89a:	4b22      	ldr	r3, [pc, #136]	; (800d924 <UART_SetConfig+0x928>)
 800d89c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d89e:	e00c      	b.n	800d8ba <UART_SetConfig+0x8be>
 800d8a0:	4b21      	ldr	r3, [pc, #132]	; (800d928 <UART_SetConfig+0x92c>)
 800d8a2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d8a4:	e009      	b.n	800d8ba <UART_SetConfig+0x8be>
 800d8a6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800d8aa:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d8ac:	e005      	b.n	800d8ba <UART_SetConfig+0x8be>
 800d8ae:	2300      	movs	r3, #0
 800d8b0:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d8b2:	2301      	movs	r3, #1
 800d8b4:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800d8b8:	bf00      	nop
 800d8ba:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d8bc:	2b00      	cmp	r3, #0
 800d8be:	f000 80e7 	beq.w	800da90 <UART_SetConfig+0xa94>
 800d8c2:	697b      	ldr	r3, [r7, #20]
 800d8c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d8c6:	4a19      	ldr	r2, [pc, #100]	; (800d92c <UART_SetConfig+0x930>)
 800d8c8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800d8cc:	461a      	mov	r2, r3
 800d8ce:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d8d0:	fbb3 f3f2 	udiv	r3, r3, r2
 800d8d4:	005a      	lsls	r2, r3, #1
 800d8d6:	697b      	ldr	r3, [r7, #20]
 800d8d8:	685b      	ldr	r3, [r3, #4]
 800d8da:	085b      	lsrs	r3, r3, #1
 800d8dc:	441a      	add	r2, r3
 800d8de:	697b      	ldr	r3, [r7, #20]
 800d8e0:	685b      	ldr	r3, [r3, #4]
 800d8e2:	fbb2 f3f3 	udiv	r3, r2, r3
 800d8e6:	63bb      	str	r3, [r7, #56]	; 0x38
 800d8e8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d8ea:	2b0f      	cmp	r3, #15
 800d8ec:	d916      	bls.n	800d91c <UART_SetConfig+0x920>
 800d8ee:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d8f0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800d8f4:	d212      	bcs.n	800d91c <UART_SetConfig+0x920>
 800d8f6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d8f8:	b29b      	uxth	r3, r3
 800d8fa:	f023 030f 	bic.w	r3, r3, #15
 800d8fe:	86fb      	strh	r3, [r7, #54]	; 0x36
 800d900:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d902:	085b      	lsrs	r3, r3, #1
 800d904:	b29b      	uxth	r3, r3
 800d906:	f003 0307 	and.w	r3, r3, #7
 800d90a:	b29a      	uxth	r2, r3
 800d90c:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 800d90e:	4313      	orrs	r3, r2
 800d910:	86fb      	strh	r3, [r7, #54]	; 0x36
 800d912:	697b      	ldr	r3, [r7, #20]
 800d914:	681b      	ldr	r3, [r3, #0]
 800d916:	8efa      	ldrh	r2, [r7, #54]	; 0x36
 800d918:	60da      	str	r2, [r3, #12]
 800d91a:	e0b9      	b.n	800da90 <UART_SetConfig+0xa94>
 800d91c:	2301      	movs	r3, #1
 800d91e:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800d922:	e0b5      	b.n	800da90 <UART_SetConfig+0xa94>
 800d924:	03d09000 	.word	0x03d09000
 800d928:	003d0900 	.word	0x003d0900
 800d92c:	08012320 	.word	0x08012320
 800d930:	58024400 	.word	0x58024400
 800d934:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 800d938:	2b20      	cmp	r3, #32
 800d93a:	dc49      	bgt.n	800d9d0 <UART_SetConfig+0x9d4>
 800d93c:	2b00      	cmp	r3, #0
 800d93e:	db7c      	blt.n	800da3a <UART_SetConfig+0xa3e>
 800d940:	2b20      	cmp	r3, #32
 800d942:	d87a      	bhi.n	800da3a <UART_SetConfig+0xa3e>
 800d944:	a201      	add	r2, pc, #4	; (adr r2, 800d94c <UART_SetConfig+0x950>)
 800d946:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d94a:	bf00      	nop
 800d94c:	0800d9d7 	.word	0x0800d9d7
 800d950:	0800d9df 	.word	0x0800d9df
 800d954:	0800da3b 	.word	0x0800da3b
 800d958:	0800da3b 	.word	0x0800da3b
 800d95c:	0800d9e7 	.word	0x0800d9e7
 800d960:	0800da3b 	.word	0x0800da3b
 800d964:	0800da3b 	.word	0x0800da3b
 800d968:	0800da3b 	.word	0x0800da3b
 800d96c:	0800d9f7 	.word	0x0800d9f7
 800d970:	0800da3b 	.word	0x0800da3b
 800d974:	0800da3b 	.word	0x0800da3b
 800d978:	0800da3b 	.word	0x0800da3b
 800d97c:	0800da3b 	.word	0x0800da3b
 800d980:	0800da3b 	.word	0x0800da3b
 800d984:	0800da3b 	.word	0x0800da3b
 800d988:	0800da3b 	.word	0x0800da3b
 800d98c:	0800da07 	.word	0x0800da07
 800d990:	0800da3b 	.word	0x0800da3b
 800d994:	0800da3b 	.word	0x0800da3b
 800d998:	0800da3b 	.word	0x0800da3b
 800d99c:	0800da3b 	.word	0x0800da3b
 800d9a0:	0800da3b 	.word	0x0800da3b
 800d9a4:	0800da3b 	.word	0x0800da3b
 800d9a8:	0800da3b 	.word	0x0800da3b
 800d9ac:	0800da3b 	.word	0x0800da3b
 800d9b0:	0800da3b 	.word	0x0800da3b
 800d9b4:	0800da3b 	.word	0x0800da3b
 800d9b8:	0800da3b 	.word	0x0800da3b
 800d9bc:	0800da3b 	.word	0x0800da3b
 800d9c0:	0800da3b 	.word	0x0800da3b
 800d9c4:	0800da3b 	.word	0x0800da3b
 800d9c8:	0800da3b 	.word	0x0800da3b
 800d9cc:	0800da2d 	.word	0x0800da2d
 800d9d0:	2b40      	cmp	r3, #64	; 0x40
 800d9d2:	d02e      	beq.n	800da32 <UART_SetConfig+0xa36>
 800d9d4:	e031      	b.n	800da3a <UART_SetConfig+0xa3e>
 800d9d6:	f7fb fa91 	bl	8008efc <HAL_RCC_GetPCLK1Freq>
 800d9da:	63f8      	str	r0, [r7, #60]	; 0x3c
 800d9dc:	e033      	b.n	800da46 <UART_SetConfig+0xa4a>
 800d9de:	f7fb faa3 	bl	8008f28 <HAL_RCC_GetPCLK2Freq>
 800d9e2:	63f8      	str	r0, [r7, #60]	; 0x3c
 800d9e4:	e02f      	b.n	800da46 <UART_SetConfig+0xa4a>
 800d9e6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800d9ea:	4618      	mov	r0, r3
 800d9ec:	f7fc fa0e 	bl	8009e0c <HAL_RCCEx_GetPLL2ClockFreq>
 800d9f0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d9f2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d9f4:	e027      	b.n	800da46 <UART_SetConfig+0xa4a>
 800d9f6:	f107 0318 	add.w	r3, r7, #24
 800d9fa:	4618      	mov	r0, r3
 800d9fc:	f7fc fb5a 	bl	800a0b4 <HAL_RCCEx_GetPLL3ClockFreq>
 800da00:	69fb      	ldr	r3, [r7, #28]
 800da02:	63fb      	str	r3, [r7, #60]	; 0x3c
 800da04:	e01f      	b.n	800da46 <UART_SetConfig+0xa4a>
 800da06:	4b2d      	ldr	r3, [pc, #180]	; (800dabc <UART_SetConfig+0xac0>)
 800da08:	681b      	ldr	r3, [r3, #0]
 800da0a:	f003 0320 	and.w	r3, r3, #32
 800da0e:	2b00      	cmp	r3, #0
 800da10:	d009      	beq.n	800da26 <UART_SetConfig+0xa2a>
 800da12:	4b2a      	ldr	r3, [pc, #168]	; (800dabc <UART_SetConfig+0xac0>)
 800da14:	681b      	ldr	r3, [r3, #0]
 800da16:	08db      	lsrs	r3, r3, #3
 800da18:	f003 0303 	and.w	r3, r3, #3
 800da1c:	4a28      	ldr	r2, [pc, #160]	; (800dac0 <UART_SetConfig+0xac4>)
 800da1e:	fa22 f303 	lsr.w	r3, r2, r3
 800da22:	63fb      	str	r3, [r7, #60]	; 0x3c
 800da24:	e00f      	b.n	800da46 <UART_SetConfig+0xa4a>
 800da26:	4b26      	ldr	r3, [pc, #152]	; (800dac0 <UART_SetConfig+0xac4>)
 800da28:	63fb      	str	r3, [r7, #60]	; 0x3c
 800da2a:	e00c      	b.n	800da46 <UART_SetConfig+0xa4a>
 800da2c:	4b25      	ldr	r3, [pc, #148]	; (800dac4 <UART_SetConfig+0xac8>)
 800da2e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800da30:	e009      	b.n	800da46 <UART_SetConfig+0xa4a>
 800da32:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800da36:	63fb      	str	r3, [r7, #60]	; 0x3c
 800da38:	e005      	b.n	800da46 <UART_SetConfig+0xa4a>
 800da3a:	2300      	movs	r3, #0
 800da3c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800da3e:	2301      	movs	r3, #1
 800da40:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800da44:	bf00      	nop
 800da46:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800da48:	2b00      	cmp	r3, #0
 800da4a:	d021      	beq.n	800da90 <UART_SetConfig+0xa94>
 800da4c:	697b      	ldr	r3, [r7, #20]
 800da4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800da50:	4a1d      	ldr	r2, [pc, #116]	; (800dac8 <UART_SetConfig+0xacc>)
 800da52:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800da56:	461a      	mov	r2, r3
 800da58:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800da5a:	fbb3 f2f2 	udiv	r2, r3, r2
 800da5e:	697b      	ldr	r3, [r7, #20]
 800da60:	685b      	ldr	r3, [r3, #4]
 800da62:	085b      	lsrs	r3, r3, #1
 800da64:	441a      	add	r2, r3
 800da66:	697b      	ldr	r3, [r7, #20]
 800da68:	685b      	ldr	r3, [r3, #4]
 800da6a:	fbb2 f3f3 	udiv	r3, r2, r3
 800da6e:	63bb      	str	r3, [r7, #56]	; 0x38
 800da70:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800da72:	2b0f      	cmp	r3, #15
 800da74:	d909      	bls.n	800da8a <UART_SetConfig+0xa8e>
 800da76:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800da78:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800da7c:	d205      	bcs.n	800da8a <UART_SetConfig+0xa8e>
 800da7e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800da80:	b29a      	uxth	r2, r3
 800da82:	697b      	ldr	r3, [r7, #20]
 800da84:	681b      	ldr	r3, [r3, #0]
 800da86:	60da      	str	r2, [r3, #12]
 800da88:	e002      	b.n	800da90 <UART_SetConfig+0xa94>
 800da8a:	2301      	movs	r3, #1
 800da8c:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800da90:	697b      	ldr	r3, [r7, #20]
 800da92:	2201      	movs	r2, #1
 800da94:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800da98:	697b      	ldr	r3, [r7, #20]
 800da9a:	2201      	movs	r2, #1
 800da9c:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800daa0:	697b      	ldr	r3, [r7, #20]
 800daa2:	2200      	movs	r2, #0
 800daa4:	671a      	str	r2, [r3, #112]	; 0x70
 800daa6:	697b      	ldr	r3, [r7, #20]
 800daa8:	2200      	movs	r2, #0
 800daaa:	675a      	str	r2, [r3, #116]	; 0x74
 800daac:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 800dab0:	4618      	mov	r0, r3
 800dab2:	3748      	adds	r7, #72	; 0x48
 800dab4:	46bd      	mov	sp, r7
 800dab6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800daba:	bf00      	nop
 800dabc:	58024400 	.word	0x58024400
 800dac0:	03d09000 	.word	0x03d09000
 800dac4:	003d0900 	.word	0x003d0900
 800dac8:	08012320 	.word	0x08012320

0800dacc <UART_AdvFeatureConfig>:
 800dacc:	b480      	push	{r7}
 800dace:	b083      	sub	sp, #12
 800dad0:	af00      	add	r7, sp, #0
 800dad2:	6078      	str	r0, [r7, #4]
 800dad4:	687b      	ldr	r3, [r7, #4]
 800dad6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dad8:	f003 0301 	and.w	r3, r3, #1
 800dadc:	2b00      	cmp	r3, #0
 800dade:	d00a      	beq.n	800daf6 <UART_AdvFeatureConfig+0x2a>
 800dae0:	687b      	ldr	r3, [r7, #4]
 800dae2:	681b      	ldr	r3, [r3, #0]
 800dae4:	685b      	ldr	r3, [r3, #4]
 800dae6:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 800daea:	687b      	ldr	r3, [r7, #4]
 800daec:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800daee:	687b      	ldr	r3, [r7, #4]
 800daf0:	681b      	ldr	r3, [r3, #0]
 800daf2:	430a      	orrs	r2, r1
 800daf4:	605a      	str	r2, [r3, #4]
 800daf6:	687b      	ldr	r3, [r7, #4]
 800daf8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dafa:	f003 0302 	and.w	r3, r3, #2
 800dafe:	2b00      	cmp	r3, #0
 800db00:	d00a      	beq.n	800db18 <UART_AdvFeatureConfig+0x4c>
 800db02:	687b      	ldr	r3, [r7, #4]
 800db04:	681b      	ldr	r3, [r3, #0]
 800db06:	685b      	ldr	r3, [r3, #4]
 800db08:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 800db0c:	687b      	ldr	r3, [r7, #4]
 800db0e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800db10:	687b      	ldr	r3, [r7, #4]
 800db12:	681b      	ldr	r3, [r3, #0]
 800db14:	430a      	orrs	r2, r1
 800db16:	605a      	str	r2, [r3, #4]
 800db18:	687b      	ldr	r3, [r7, #4]
 800db1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800db1c:	f003 0304 	and.w	r3, r3, #4
 800db20:	2b00      	cmp	r3, #0
 800db22:	d00a      	beq.n	800db3a <UART_AdvFeatureConfig+0x6e>
 800db24:	687b      	ldr	r3, [r7, #4]
 800db26:	681b      	ldr	r3, [r3, #0]
 800db28:	685b      	ldr	r3, [r3, #4]
 800db2a:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 800db2e:	687b      	ldr	r3, [r7, #4]
 800db30:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800db32:	687b      	ldr	r3, [r7, #4]
 800db34:	681b      	ldr	r3, [r3, #0]
 800db36:	430a      	orrs	r2, r1
 800db38:	605a      	str	r2, [r3, #4]
 800db3a:	687b      	ldr	r3, [r7, #4]
 800db3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800db3e:	f003 0308 	and.w	r3, r3, #8
 800db42:	2b00      	cmp	r3, #0
 800db44:	d00a      	beq.n	800db5c <UART_AdvFeatureConfig+0x90>
 800db46:	687b      	ldr	r3, [r7, #4]
 800db48:	681b      	ldr	r3, [r3, #0]
 800db4a:	685b      	ldr	r3, [r3, #4]
 800db4c:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 800db50:	687b      	ldr	r3, [r7, #4]
 800db52:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800db54:	687b      	ldr	r3, [r7, #4]
 800db56:	681b      	ldr	r3, [r3, #0]
 800db58:	430a      	orrs	r2, r1
 800db5a:	605a      	str	r2, [r3, #4]
 800db5c:	687b      	ldr	r3, [r7, #4]
 800db5e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800db60:	f003 0310 	and.w	r3, r3, #16
 800db64:	2b00      	cmp	r3, #0
 800db66:	d00a      	beq.n	800db7e <UART_AdvFeatureConfig+0xb2>
 800db68:	687b      	ldr	r3, [r7, #4]
 800db6a:	681b      	ldr	r3, [r3, #0]
 800db6c:	689b      	ldr	r3, [r3, #8]
 800db6e:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 800db72:	687b      	ldr	r3, [r7, #4]
 800db74:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800db76:	687b      	ldr	r3, [r7, #4]
 800db78:	681b      	ldr	r3, [r3, #0]
 800db7a:	430a      	orrs	r2, r1
 800db7c:	609a      	str	r2, [r3, #8]
 800db7e:	687b      	ldr	r3, [r7, #4]
 800db80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800db82:	f003 0320 	and.w	r3, r3, #32
 800db86:	2b00      	cmp	r3, #0
 800db88:	d00a      	beq.n	800dba0 <UART_AdvFeatureConfig+0xd4>
 800db8a:	687b      	ldr	r3, [r7, #4]
 800db8c:	681b      	ldr	r3, [r3, #0]
 800db8e:	689b      	ldr	r3, [r3, #8]
 800db90:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 800db94:	687b      	ldr	r3, [r7, #4]
 800db96:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800db98:	687b      	ldr	r3, [r7, #4]
 800db9a:	681b      	ldr	r3, [r3, #0]
 800db9c:	430a      	orrs	r2, r1
 800db9e:	609a      	str	r2, [r3, #8]
 800dba0:	687b      	ldr	r3, [r7, #4]
 800dba2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dba4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800dba8:	2b00      	cmp	r3, #0
 800dbaa:	d01a      	beq.n	800dbe2 <UART_AdvFeatureConfig+0x116>
 800dbac:	687b      	ldr	r3, [r7, #4]
 800dbae:	681b      	ldr	r3, [r3, #0]
 800dbb0:	685b      	ldr	r3, [r3, #4]
 800dbb2:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800dbb6:	687b      	ldr	r3, [r7, #4]
 800dbb8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800dbba:	687b      	ldr	r3, [r7, #4]
 800dbbc:	681b      	ldr	r3, [r3, #0]
 800dbbe:	430a      	orrs	r2, r1
 800dbc0:	605a      	str	r2, [r3, #4]
 800dbc2:	687b      	ldr	r3, [r7, #4]
 800dbc4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dbc6:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800dbca:	d10a      	bne.n	800dbe2 <UART_AdvFeatureConfig+0x116>
 800dbcc:	687b      	ldr	r3, [r7, #4]
 800dbce:	681b      	ldr	r3, [r3, #0]
 800dbd0:	685b      	ldr	r3, [r3, #4]
 800dbd2:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800dbd6:	687b      	ldr	r3, [r7, #4]
 800dbd8:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800dbda:	687b      	ldr	r3, [r7, #4]
 800dbdc:	681b      	ldr	r3, [r3, #0]
 800dbde:	430a      	orrs	r2, r1
 800dbe0:	605a      	str	r2, [r3, #4]
 800dbe2:	687b      	ldr	r3, [r7, #4]
 800dbe4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dbe6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800dbea:	2b00      	cmp	r3, #0
 800dbec:	d00a      	beq.n	800dc04 <UART_AdvFeatureConfig+0x138>
 800dbee:	687b      	ldr	r3, [r7, #4]
 800dbf0:	681b      	ldr	r3, [r3, #0]
 800dbf2:	685b      	ldr	r3, [r3, #4]
 800dbf4:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 800dbf8:	687b      	ldr	r3, [r7, #4]
 800dbfa:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800dbfc:	687b      	ldr	r3, [r7, #4]
 800dbfe:	681b      	ldr	r3, [r3, #0]
 800dc00:	430a      	orrs	r2, r1
 800dc02:	605a      	str	r2, [r3, #4]
 800dc04:	bf00      	nop
 800dc06:	370c      	adds	r7, #12
 800dc08:	46bd      	mov	sp, r7
 800dc0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc0e:	4770      	bx	lr

0800dc10 <UART_CheckIdleState>:
 800dc10:	b580      	push	{r7, lr}
 800dc12:	b086      	sub	sp, #24
 800dc14:	af02      	add	r7, sp, #8
 800dc16:	6078      	str	r0, [r7, #4]
 800dc18:	687b      	ldr	r3, [r7, #4]
 800dc1a:	2200      	movs	r2, #0
 800dc1c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800dc20:	f7f9 f8c6 	bl	8006db0 <HAL_GetTick>
 800dc24:	60f8      	str	r0, [r7, #12]
 800dc26:	687b      	ldr	r3, [r7, #4]
 800dc28:	681b      	ldr	r3, [r3, #0]
 800dc2a:	681b      	ldr	r3, [r3, #0]
 800dc2c:	f003 0308 	and.w	r3, r3, #8
 800dc30:	2b08      	cmp	r3, #8
 800dc32:	d10e      	bne.n	800dc52 <UART_CheckIdleState+0x42>
 800dc34:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800dc38:	9300      	str	r3, [sp, #0]
 800dc3a:	68fb      	ldr	r3, [r7, #12]
 800dc3c:	2200      	movs	r2, #0
 800dc3e:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800dc42:	6878      	ldr	r0, [r7, #4]
 800dc44:	f000 f82f 	bl	800dca6 <UART_WaitOnFlagUntilTimeout>
 800dc48:	4603      	mov	r3, r0
 800dc4a:	2b00      	cmp	r3, #0
 800dc4c:	d001      	beq.n	800dc52 <UART_CheckIdleState+0x42>
 800dc4e:	2303      	movs	r3, #3
 800dc50:	e025      	b.n	800dc9e <UART_CheckIdleState+0x8e>
 800dc52:	687b      	ldr	r3, [r7, #4]
 800dc54:	681b      	ldr	r3, [r3, #0]
 800dc56:	681b      	ldr	r3, [r3, #0]
 800dc58:	f003 0304 	and.w	r3, r3, #4
 800dc5c:	2b04      	cmp	r3, #4
 800dc5e:	d10e      	bne.n	800dc7e <UART_CheckIdleState+0x6e>
 800dc60:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800dc64:	9300      	str	r3, [sp, #0]
 800dc66:	68fb      	ldr	r3, [r7, #12]
 800dc68:	2200      	movs	r2, #0
 800dc6a:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800dc6e:	6878      	ldr	r0, [r7, #4]
 800dc70:	f000 f819 	bl	800dca6 <UART_WaitOnFlagUntilTimeout>
 800dc74:	4603      	mov	r3, r0
 800dc76:	2b00      	cmp	r3, #0
 800dc78:	d001      	beq.n	800dc7e <UART_CheckIdleState+0x6e>
 800dc7a:	2303      	movs	r3, #3
 800dc7c:	e00f      	b.n	800dc9e <UART_CheckIdleState+0x8e>
 800dc7e:	687b      	ldr	r3, [r7, #4]
 800dc80:	2220      	movs	r2, #32
 800dc82:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800dc86:	687b      	ldr	r3, [r7, #4]
 800dc88:	2220      	movs	r2, #32
 800dc8a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800dc8e:	687b      	ldr	r3, [r7, #4]
 800dc90:	2200      	movs	r2, #0
 800dc92:	66da      	str	r2, [r3, #108]	; 0x6c
 800dc94:	687b      	ldr	r3, [r7, #4]
 800dc96:	2200      	movs	r2, #0
 800dc98:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800dc9c:	2300      	movs	r3, #0
 800dc9e:	4618      	mov	r0, r3
 800dca0:	3710      	adds	r7, #16
 800dca2:	46bd      	mov	sp, r7
 800dca4:	bd80      	pop	{r7, pc}

0800dca6 <UART_WaitOnFlagUntilTimeout>:
 800dca6:	b580      	push	{r7, lr}
 800dca8:	b09c      	sub	sp, #112	; 0x70
 800dcaa:	af00      	add	r7, sp, #0
 800dcac:	60f8      	str	r0, [r7, #12]
 800dcae:	60b9      	str	r1, [r7, #8]
 800dcb0:	603b      	str	r3, [r7, #0]
 800dcb2:	4613      	mov	r3, r2
 800dcb4:	71fb      	strb	r3, [r7, #7]
 800dcb6:	e0a9      	b.n	800de0c <UART_WaitOnFlagUntilTimeout+0x166>
 800dcb8:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800dcba:	f1b3 3fff 	cmp.w	r3, #4294967295
 800dcbe:	f000 80a5 	beq.w	800de0c <UART_WaitOnFlagUntilTimeout+0x166>
 800dcc2:	f7f9 f875 	bl	8006db0 <HAL_GetTick>
 800dcc6:	4602      	mov	r2, r0
 800dcc8:	683b      	ldr	r3, [r7, #0]
 800dcca:	1ad3      	subs	r3, r2, r3
 800dccc:	6fba      	ldr	r2, [r7, #120]	; 0x78
 800dcce:	429a      	cmp	r2, r3
 800dcd0:	d302      	bcc.n	800dcd8 <UART_WaitOnFlagUntilTimeout+0x32>
 800dcd2:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800dcd4:	2b00      	cmp	r3, #0
 800dcd6:	d140      	bne.n	800dd5a <UART_WaitOnFlagUntilTimeout+0xb4>
 800dcd8:	68fb      	ldr	r3, [r7, #12]
 800dcda:	681b      	ldr	r3, [r3, #0]
 800dcdc:	653b      	str	r3, [r7, #80]	; 0x50
 800dcde:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800dce0:	e853 3f00 	ldrex	r3, [r3]
 800dce4:	64fb      	str	r3, [r7, #76]	; 0x4c
 800dce6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800dce8:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800dcec:	667b      	str	r3, [r7, #100]	; 0x64
 800dcee:	68fb      	ldr	r3, [r7, #12]
 800dcf0:	681b      	ldr	r3, [r3, #0]
 800dcf2:	461a      	mov	r2, r3
 800dcf4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800dcf6:	65fb      	str	r3, [r7, #92]	; 0x5c
 800dcf8:	65ba      	str	r2, [r7, #88]	; 0x58
 800dcfa:	6db9      	ldr	r1, [r7, #88]	; 0x58
 800dcfc:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800dcfe:	e841 2300 	strex	r3, r2, [r1]
 800dd02:	657b      	str	r3, [r7, #84]	; 0x54
 800dd04:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800dd06:	2b00      	cmp	r3, #0
 800dd08:	d1e6      	bne.n	800dcd8 <UART_WaitOnFlagUntilTimeout+0x32>
 800dd0a:	68fb      	ldr	r3, [r7, #12]
 800dd0c:	681b      	ldr	r3, [r3, #0]
 800dd0e:	3308      	adds	r3, #8
 800dd10:	63fb      	str	r3, [r7, #60]	; 0x3c
 800dd12:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800dd14:	e853 3f00 	ldrex	r3, [r3]
 800dd18:	63bb      	str	r3, [r7, #56]	; 0x38
 800dd1a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800dd1c:	f023 0301 	bic.w	r3, r3, #1
 800dd20:	663b      	str	r3, [r7, #96]	; 0x60
 800dd22:	68fb      	ldr	r3, [r7, #12]
 800dd24:	681b      	ldr	r3, [r3, #0]
 800dd26:	3308      	adds	r3, #8
 800dd28:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800dd2a:	64ba      	str	r2, [r7, #72]	; 0x48
 800dd2c:	647b      	str	r3, [r7, #68]	; 0x44
 800dd2e:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800dd30:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800dd32:	e841 2300 	strex	r3, r2, [r1]
 800dd36:	643b      	str	r3, [r7, #64]	; 0x40
 800dd38:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800dd3a:	2b00      	cmp	r3, #0
 800dd3c:	d1e5      	bne.n	800dd0a <UART_WaitOnFlagUntilTimeout+0x64>
 800dd3e:	68fb      	ldr	r3, [r7, #12]
 800dd40:	2220      	movs	r2, #32
 800dd42:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800dd46:	68fb      	ldr	r3, [r7, #12]
 800dd48:	2220      	movs	r2, #32
 800dd4a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800dd4e:	68fb      	ldr	r3, [r7, #12]
 800dd50:	2200      	movs	r2, #0
 800dd52:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800dd56:	2303      	movs	r3, #3
 800dd58:	e069      	b.n	800de2e <UART_WaitOnFlagUntilTimeout+0x188>
 800dd5a:	68fb      	ldr	r3, [r7, #12]
 800dd5c:	681b      	ldr	r3, [r3, #0]
 800dd5e:	681b      	ldr	r3, [r3, #0]
 800dd60:	f003 0304 	and.w	r3, r3, #4
 800dd64:	2b00      	cmp	r3, #0
 800dd66:	d051      	beq.n	800de0c <UART_WaitOnFlagUntilTimeout+0x166>
 800dd68:	68fb      	ldr	r3, [r7, #12]
 800dd6a:	681b      	ldr	r3, [r3, #0]
 800dd6c:	69db      	ldr	r3, [r3, #28]
 800dd6e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800dd72:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800dd76:	d149      	bne.n	800de0c <UART_WaitOnFlagUntilTimeout+0x166>
 800dd78:	68fb      	ldr	r3, [r7, #12]
 800dd7a:	681b      	ldr	r3, [r3, #0]
 800dd7c:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800dd80:	621a      	str	r2, [r3, #32]
 800dd82:	68fb      	ldr	r3, [r7, #12]
 800dd84:	681b      	ldr	r3, [r3, #0]
 800dd86:	62bb      	str	r3, [r7, #40]	; 0x28
 800dd88:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800dd8a:	e853 3f00 	ldrex	r3, [r3]
 800dd8e:	627b      	str	r3, [r7, #36]	; 0x24
 800dd90:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dd92:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800dd96:	66fb      	str	r3, [r7, #108]	; 0x6c
 800dd98:	68fb      	ldr	r3, [r7, #12]
 800dd9a:	681b      	ldr	r3, [r3, #0]
 800dd9c:	461a      	mov	r2, r3
 800dd9e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800dda0:	637b      	str	r3, [r7, #52]	; 0x34
 800dda2:	633a      	str	r2, [r7, #48]	; 0x30
 800dda4:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800dda6:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800dda8:	e841 2300 	strex	r3, r2, [r1]
 800ddac:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ddae:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ddb0:	2b00      	cmp	r3, #0
 800ddb2:	d1e6      	bne.n	800dd82 <UART_WaitOnFlagUntilTimeout+0xdc>
 800ddb4:	68fb      	ldr	r3, [r7, #12]
 800ddb6:	681b      	ldr	r3, [r3, #0]
 800ddb8:	3308      	adds	r3, #8
 800ddba:	617b      	str	r3, [r7, #20]
 800ddbc:	697b      	ldr	r3, [r7, #20]
 800ddbe:	e853 3f00 	ldrex	r3, [r3]
 800ddc2:	613b      	str	r3, [r7, #16]
 800ddc4:	693b      	ldr	r3, [r7, #16]
 800ddc6:	f023 0301 	bic.w	r3, r3, #1
 800ddca:	66bb      	str	r3, [r7, #104]	; 0x68
 800ddcc:	68fb      	ldr	r3, [r7, #12]
 800ddce:	681b      	ldr	r3, [r3, #0]
 800ddd0:	3308      	adds	r3, #8
 800ddd2:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800ddd4:	623a      	str	r2, [r7, #32]
 800ddd6:	61fb      	str	r3, [r7, #28]
 800ddd8:	69f9      	ldr	r1, [r7, #28]
 800ddda:	6a3a      	ldr	r2, [r7, #32]
 800dddc:	e841 2300 	strex	r3, r2, [r1]
 800dde0:	61bb      	str	r3, [r7, #24]
 800dde2:	69bb      	ldr	r3, [r7, #24]
 800dde4:	2b00      	cmp	r3, #0
 800dde6:	d1e5      	bne.n	800ddb4 <UART_WaitOnFlagUntilTimeout+0x10e>
 800dde8:	68fb      	ldr	r3, [r7, #12]
 800ddea:	2220      	movs	r2, #32
 800ddec:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800ddf0:	68fb      	ldr	r3, [r7, #12]
 800ddf2:	2220      	movs	r2, #32
 800ddf4:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800ddf8:	68fb      	ldr	r3, [r7, #12]
 800ddfa:	2220      	movs	r2, #32
 800ddfc:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800de00:	68fb      	ldr	r3, [r7, #12]
 800de02:	2200      	movs	r2, #0
 800de04:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800de08:	2303      	movs	r3, #3
 800de0a:	e010      	b.n	800de2e <UART_WaitOnFlagUntilTimeout+0x188>
 800de0c:	68fb      	ldr	r3, [r7, #12]
 800de0e:	681b      	ldr	r3, [r3, #0]
 800de10:	69da      	ldr	r2, [r3, #28]
 800de12:	68bb      	ldr	r3, [r7, #8]
 800de14:	4013      	ands	r3, r2
 800de16:	68ba      	ldr	r2, [r7, #8]
 800de18:	429a      	cmp	r2, r3
 800de1a:	bf0c      	ite	eq
 800de1c:	2301      	moveq	r3, #1
 800de1e:	2300      	movne	r3, #0
 800de20:	b2db      	uxtb	r3, r3
 800de22:	461a      	mov	r2, r3
 800de24:	79fb      	ldrb	r3, [r7, #7]
 800de26:	429a      	cmp	r2, r3
 800de28:	f43f af46 	beq.w	800dcb8 <UART_WaitOnFlagUntilTimeout+0x12>
 800de2c:	2300      	movs	r3, #0
 800de2e:	4618      	mov	r0, r3
 800de30:	3770      	adds	r7, #112	; 0x70
 800de32:	46bd      	mov	sp, r7
 800de34:	bd80      	pop	{r7, pc}
	...

0800de38 <UART_Start_Receive_IT>:
 800de38:	b480      	push	{r7}
 800de3a:	b0a3      	sub	sp, #140	; 0x8c
 800de3c:	af00      	add	r7, sp, #0
 800de3e:	60f8      	str	r0, [r7, #12]
 800de40:	60b9      	str	r1, [r7, #8]
 800de42:	4613      	mov	r3, r2
 800de44:	80fb      	strh	r3, [r7, #6]
 800de46:	68fb      	ldr	r3, [r7, #12]
 800de48:	68ba      	ldr	r2, [r7, #8]
 800de4a:	659a      	str	r2, [r3, #88]	; 0x58
 800de4c:	68fb      	ldr	r3, [r7, #12]
 800de4e:	88fa      	ldrh	r2, [r7, #6]
 800de50:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800de54:	68fb      	ldr	r3, [r7, #12]
 800de56:	88fa      	ldrh	r2, [r7, #6]
 800de58:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800de5c:	68fb      	ldr	r3, [r7, #12]
 800de5e:	2200      	movs	r2, #0
 800de60:	671a      	str	r2, [r3, #112]	; 0x70
 800de62:	68fb      	ldr	r3, [r7, #12]
 800de64:	689b      	ldr	r3, [r3, #8]
 800de66:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800de6a:	d10e      	bne.n	800de8a <UART_Start_Receive_IT+0x52>
 800de6c:	68fb      	ldr	r3, [r7, #12]
 800de6e:	691b      	ldr	r3, [r3, #16]
 800de70:	2b00      	cmp	r3, #0
 800de72:	d105      	bne.n	800de80 <UART_Start_Receive_IT+0x48>
 800de74:	68fb      	ldr	r3, [r7, #12]
 800de76:	f240 12ff 	movw	r2, #511	; 0x1ff
 800de7a:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800de7e:	e02d      	b.n	800dedc <UART_Start_Receive_IT+0xa4>
 800de80:	68fb      	ldr	r3, [r7, #12]
 800de82:	22ff      	movs	r2, #255	; 0xff
 800de84:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800de88:	e028      	b.n	800dedc <UART_Start_Receive_IT+0xa4>
 800de8a:	68fb      	ldr	r3, [r7, #12]
 800de8c:	689b      	ldr	r3, [r3, #8]
 800de8e:	2b00      	cmp	r3, #0
 800de90:	d10d      	bne.n	800deae <UART_Start_Receive_IT+0x76>
 800de92:	68fb      	ldr	r3, [r7, #12]
 800de94:	691b      	ldr	r3, [r3, #16]
 800de96:	2b00      	cmp	r3, #0
 800de98:	d104      	bne.n	800dea4 <UART_Start_Receive_IT+0x6c>
 800de9a:	68fb      	ldr	r3, [r7, #12]
 800de9c:	22ff      	movs	r2, #255	; 0xff
 800de9e:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800dea2:	e01b      	b.n	800dedc <UART_Start_Receive_IT+0xa4>
 800dea4:	68fb      	ldr	r3, [r7, #12]
 800dea6:	227f      	movs	r2, #127	; 0x7f
 800dea8:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800deac:	e016      	b.n	800dedc <UART_Start_Receive_IT+0xa4>
 800deae:	68fb      	ldr	r3, [r7, #12]
 800deb0:	689b      	ldr	r3, [r3, #8]
 800deb2:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800deb6:	d10d      	bne.n	800ded4 <UART_Start_Receive_IT+0x9c>
 800deb8:	68fb      	ldr	r3, [r7, #12]
 800deba:	691b      	ldr	r3, [r3, #16]
 800debc:	2b00      	cmp	r3, #0
 800debe:	d104      	bne.n	800deca <UART_Start_Receive_IT+0x92>
 800dec0:	68fb      	ldr	r3, [r7, #12]
 800dec2:	227f      	movs	r2, #127	; 0x7f
 800dec4:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800dec8:	e008      	b.n	800dedc <UART_Start_Receive_IT+0xa4>
 800deca:	68fb      	ldr	r3, [r7, #12]
 800decc:	223f      	movs	r2, #63	; 0x3f
 800dece:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800ded2:	e003      	b.n	800dedc <UART_Start_Receive_IT+0xa4>
 800ded4:	68fb      	ldr	r3, [r7, #12]
 800ded6:	2200      	movs	r2, #0
 800ded8:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
 800dedc:	68fb      	ldr	r3, [r7, #12]
 800dede:	2200      	movs	r2, #0
 800dee0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800dee4:	68fb      	ldr	r3, [r7, #12]
 800dee6:	2222      	movs	r2, #34	; 0x22
 800dee8:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800deec:	68fb      	ldr	r3, [r7, #12]
 800deee:	681b      	ldr	r3, [r3, #0]
 800def0:	3308      	adds	r3, #8
 800def2:	667b      	str	r3, [r7, #100]	; 0x64
 800def4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800def6:	e853 3f00 	ldrex	r3, [r3]
 800defa:	663b      	str	r3, [r7, #96]	; 0x60
 800defc:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800defe:	f043 0301 	orr.w	r3, r3, #1
 800df02:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800df06:	68fb      	ldr	r3, [r7, #12]
 800df08:	681b      	ldr	r3, [r3, #0]
 800df0a:	3308      	adds	r3, #8
 800df0c:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 800df10:	673a      	str	r2, [r7, #112]	; 0x70
 800df12:	66fb      	str	r3, [r7, #108]	; 0x6c
 800df14:	6ef9      	ldr	r1, [r7, #108]	; 0x6c
 800df16:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 800df18:	e841 2300 	strex	r3, r2, [r1]
 800df1c:	66bb      	str	r3, [r7, #104]	; 0x68
 800df1e:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800df20:	2b00      	cmp	r3, #0
 800df22:	d1e3      	bne.n	800deec <UART_Start_Receive_IT+0xb4>
 800df24:	68fb      	ldr	r3, [r7, #12]
 800df26:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800df28:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800df2c:	d153      	bne.n	800dfd6 <UART_Start_Receive_IT+0x19e>
 800df2e:	68fb      	ldr	r3, [r7, #12]
 800df30:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800df34:	88fa      	ldrh	r2, [r7, #6]
 800df36:	429a      	cmp	r2, r3
 800df38:	d34d      	bcc.n	800dfd6 <UART_Start_Receive_IT+0x19e>
 800df3a:	68fb      	ldr	r3, [r7, #12]
 800df3c:	689b      	ldr	r3, [r3, #8]
 800df3e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800df42:	d107      	bne.n	800df54 <UART_Start_Receive_IT+0x11c>
 800df44:	68fb      	ldr	r3, [r7, #12]
 800df46:	691b      	ldr	r3, [r3, #16]
 800df48:	2b00      	cmp	r3, #0
 800df4a:	d103      	bne.n	800df54 <UART_Start_Receive_IT+0x11c>
 800df4c:	68fb      	ldr	r3, [r7, #12]
 800df4e:	4a4b      	ldr	r2, [pc, #300]	; (800e07c <UART_Start_Receive_IT+0x244>)
 800df50:	671a      	str	r2, [r3, #112]	; 0x70
 800df52:	e002      	b.n	800df5a <UART_Start_Receive_IT+0x122>
 800df54:	68fb      	ldr	r3, [r7, #12]
 800df56:	4a4a      	ldr	r2, [pc, #296]	; (800e080 <UART_Start_Receive_IT+0x248>)
 800df58:	671a      	str	r2, [r3, #112]	; 0x70
 800df5a:	68fb      	ldr	r3, [r7, #12]
 800df5c:	2200      	movs	r2, #0
 800df5e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800df62:	68fb      	ldr	r3, [r7, #12]
 800df64:	691b      	ldr	r3, [r3, #16]
 800df66:	2b00      	cmp	r3, #0
 800df68:	d01a      	beq.n	800dfa0 <UART_Start_Receive_IT+0x168>
 800df6a:	68fb      	ldr	r3, [r7, #12]
 800df6c:	681b      	ldr	r3, [r3, #0]
 800df6e:	653b      	str	r3, [r7, #80]	; 0x50
 800df70:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800df72:	e853 3f00 	ldrex	r3, [r3]
 800df76:	64fb      	str	r3, [r7, #76]	; 0x4c
 800df78:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800df7a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800df7e:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800df82:	68fb      	ldr	r3, [r7, #12]
 800df84:	681b      	ldr	r3, [r3, #0]
 800df86:	461a      	mov	r2, r3
 800df88:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800df8c:	65fb      	str	r3, [r7, #92]	; 0x5c
 800df8e:	65ba      	str	r2, [r7, #88]	; 0x58
 800df90:	6db9      	ldr	r1, [r7, #88]	; 0x58
 800df92:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800df94:	e841 2300 	strex	r3, r2, [r1]
 800df98:	657b      	str	r3, [r7, #84]	; 0x54
 800df9a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800df9c:	2b00      	cmp	r3, #0
 800df9e:	d1e4      	bne.n	800df6a <UART_Start_Receive_IT+0x132>
 800dfa0:	68fb      	ldr	r3, [r7, #12]
 800dfa2:	681b      	ldr	r3, [r3, #0]
 800dfa4:	3308      	adds	r3, #8
 800dfa6:	63fb      	str	r3, [r7, #60]	; 0x3c
 800dfa8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800dfaa:	e853 3f00 	ldrex	r3, [r3]
 800dfae:	63bb      	str	r3, [r7, #56]	; 0x38
 800dfb0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800dfb2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800dfb6:	67fb      	str	r3, [r7, #124]	; 0x7c
 800dfb8:	68fb      	ldr	r3, [r7, #12]
 800dfba:	681b      	ldr	r3, [r3, #0]
 800dfbc:	3308      	adds	r3, #8
 800dfbe:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 800dfc0:	64ba      	str	r2, [r7, #72]	; 0x48
 800dfc2:	647b      	str	r3, [r7, #68]	; 0x44
 800dfc4:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800dfc6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800dfc8:	e841 2300 	strex	r3, r2, [r1]
 800dfcc:	643b      	str	r3, [r7, #64]	; 0x40
 800dfce:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800dfd0:	2b00      	cmp	r3, #0
 800dfd2:	d1e5      	bne.n	800dfa0 <UART_Start_Receive_IT+0x168>
 800dfd4:	e04a      	b.n	800e06c <UART_Start_Receive_IT+0x234>
 800dfd6:	68fb      	ldr	r3, [r7, #12]
 800dfd8:	689b      	ldr	r3, [r3, #8]
 800dfda:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800dfde:	d107      	bne.n	800dff0 <UART_Start_Receive_IT+0x1b8>
 800dfe0:	68fb      	ldr	r3, [r7, #12]
 800dfe2:	691b      	ldr	r3, [r3, #16]
 800dfe4:	2b00      	cmp	r3, #0
 800dfe6:	d103      	bne.n	800dff0 <UART_Start_Receive_IT+0x1b8>
 800dfe8:	68fb      	ldr	r3, [r7, #12]
 800dfea:	4a26      	ldr	r2, [pc, #152]	; (800e084 <UART_Start_Receive_IT+0x24c>)
 800dfec:	671a      	str	r2, [r3, #112]	; 0x70
 800dfee:	e002      	b.n	800dff6 <UART_Start_Receive_IT+0x1be>
 800dff0:	68fb      	ldr	r3, [r7, #12]
 800dff2:	4a25      	ldr	r2, [pc, #148]	; (800e088 <UART_Start_Receive_IT+0x250>)
 800dff4:	671a      	str	r2, [r3, #112]	; 0x70
 800dff6:	68fb      	ldr	r3, [r7, #12]
 800dff8:	2200      	movs	r2, #0
 800dffa:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800dffe:	68fb      	ldr	r3, [r7, #12]
 800e000:	691b      	ldr	r3, [r3, #16]
 800e002:	2b00      	cmp	r3, #0
 800e004:	d019      	beq.n	800e03a <UART_Start_Receive_IT+0x202>
 800e006:	68fb      	ldr	r3, [r7, #12]
 800e008:	681b      	ldr	r3, [r3, #0]
 800e00a:	62bb      	str	r3, [r7, #40]	; 0x28
 800e00c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e00e:	e853 3f00 	ldrex	r3, [r3]
 800e012:	627b      	str	r3, [r7, #36]	; 0x24
 800e014:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e016:	f443 7390 	orr.w	r3, r3, #288	; 0x120
 800e01a:	677b      	str	r3, [r7, #116]	; 0x74
 800e01c:	68fb      	ldr	r3, [r7, #12]
 800e01e:	681b      	ldr	r3, [r3, #0]
 800e020:	461a      	mov	r2, r3
 800e022:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800e024:	637b      	str	r3, [r7, #52]	; 0x34
 800e026:	633a      	str	r2, [r7, #48]	; 0x30
 800e028:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800e02a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800e02c:	e841 2300 	strex	r3, r2, [r1]
 800e030:	62fb      	str	r3, [r7, #44]	; 0x2c
 800e032:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e034:	2b00      	cmp	r3, #0
 800e036:	d1e6      	bne.n	800e006 <UART_Start_Receive_IT+0x1ce>
 800e038:	e018      	b.n	800e06c <UART_Start_Receive_IT+0x234>
 800e03a:	68fb      	ldr	r3, [r7, #12]
 800e03c:	681b      	ldr	r3, [r3, #0]
 800e03e:	617b      	str	r3, [r7, #20]
 800e040:	697b      	ldr	r3, [r7, #20]
 800e042:	e853 3f00 	ldrex	r3, [r3]
 800e046:	613b      	str	r3, [r7, #16]
 800e048:	693b      	ldr	r3, [r7, #16]
 800e04a:	f043 0320 	orr.w	r3, r3, #32
 800e04e:	67bb      	str	r3, [r7, #120]	; 0x78
 800e050:	68fb      	ldr	r3, [r7, #12]
 800e052:	681b      	ldr	r3, [r3, #0]
 800e054:	461a      	mov	r2, r3
 800e056:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800e058:	623b      	str	r3, [r7, #32]
 800e05a:	61fa      	str	r2, [r7, #28]
 800e05c:	69f9      	ldr	r1, [r7, #28]
 800e05e:	6a3a      	ldr	r2, [r7, #32]
 800e060:	e841 2300 	strex	r3, r2, [r1]
 800e064:	61bb      	str	r3, [r7, #24]
 800e066:	69bb      	ldr	r3, [r7, #24]
 800e068:	2b00      	cmp	r3, #0
 800e06a:	d1e6      	bne.n	800e03a <UART_Start_Receive_IT+0x202>
 800e06c:	2300      	movs	r3, #0
 800e06e:	4618      	mov	r0, r3
 800e070:	378c      	adds	r7, #140	; 0x8c
 800e072:	46bd      	mov	sp, r7
 800e074:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e078:	4770      	bx	lr
 800e07a:	bf00      	nop
 800e07c:	0800e795 	.word	0x0800e795
 800e080:	0800e49d 	.word	0x0800e49d
 800e084:	0800e33b 	.word	0x0800e33b
 800e088:	0800e1db 	.word	0x0800e1db

0800e08c <UART_EndRxTransfer>:
 800e08c:	b480      	push	{r7}
 800e08e:	b095      	sub	sp, #84	; 0x54
 800e090:	af00      	add	r7, sp, #0
 800e092:	6078      	str	r0, [r7, #4]
 800e094:	687b      	ldr	r3, [r7, #4]
 800e096:	681b      	ldr	r3, [r3, #0]
 800e098:	637b      	str	r3, [r7, #52]	; 0x34
 800e09a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800e09c:	e853 3f00 	ldrex	r3, [r3]
 800e0a0:	633b      	str	r3, [r7, #48]	; 0x30
 800e0a2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e0a4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800e0a8:	64fb      	str	r3, [r7, #76]	; 0x4c
 800e0aa:	687b      	ldr	r3, [r7, #4]
 800e0ac:	681b      	ldr	r3, [r3, #0]
 800e0ae:	461a      	mov	r2, r3
 800e0b0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800e0b2:	643b      	str	r3, [r7, #64]	; 0x40
 800e0b4:	63fa      	str	r2, [r7, #60]	; 0x3c
 800e0b6:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800e0b8:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800e0ba:	e841 2300 	strex	r3, r2, [r1]
 800e0be:	63bb      	str	r3, [r7, #56]	; 0x38
 800e0c0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e0c2:	2b00      	cmp	r3, #0
 800e0c4:	d1e6      	bne.n	800e094 <UART_EndRxTransfer+0x8>
 800e0c6:	687b      	ldr	r3, [r7, #4]
 800e0c8:	681b      	ldr	r3, [r3, #0]
 800e0ca:	3308      	adds	r3, #8
 800e0cc:	623b      	str	r3, [r7, #32]
 800e0ce:	6a3b      	ldr	r3, [r7, #32]
 800e0d0:	e853 3f00 	ldrex	r3, [r3]
 800e0d4:	61fb      	str	r3, [r7, #28]
 800e0d6:	69fa      	ldr	r2, [r7, #28]
 800e0d8:	4b1e      	ldr	r3, [pc, #120]	; (800e154 <UART_EndRxTransfer+0xc8>)
 800e0da:	4013      	ands	r3, r2
 800e0dc:	64bb      	str	r3, [r7, #72]	; 0x48
 800e0de:	687b      	ldr	r3, [r7, #4]
 800e0e0:	681b      	ldr	r3, [r3, #0]
 800e0e2:	3308      	adds	r3, #8
 800e0e4:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800e0e6:	62fa      	str	r2, [r7, #44]	; 0x2c
 800e0e8:	62bb      	str	r3, [r7, #40]	; 0x28
 800e0ea:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800e0ec:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800e0ee:	e841 2300 	strex	r3, r2, [r1]
 800e0f2:	627b      	str	r3, [r7, #36]	; 0x24
 800e0f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e0f6:	2b00      	cmp	r3, #0
 800e0f8:	d1e5      	bne.n	800e0c6 <UART_EndRxTransfer+0x3a>
 800e0fa:	687b      	ldr	r3, [r7, #4]
 800e0fc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e0fe:	2b01      	cmp	r3, #1
 800e100:	d118      	bne.n	800e134 <UART_EndRxTransfer+0xa8>
 800e102:	687b      	ldr	r3, [r7, #4]
 800e104:	681b      	ldr	r3, [r3, #0]
 800e106:	60fb      	str	r3, [r7, #12]
 800e108:	68fb      	ldr	r3, [r7, #12]
 800e10a:	e853 3f00 	ldrex	r3, [r3]
 800e10e:	60bb      	str	r3, [r7, #8]
 800e110:	68bb      	ldr	r3, [r7, #8]
 800e112:	f023 0310 	bic.w	r3, r3, #16
 800e116:	647b      	str	r3, [r7, #68]	; 0x44
 800e118:	687b      	ldr	r3, [r7, #4]
 800e11a:	681b      	ldr	r3, [r3, #0]
 800e11c:	461a      	mov	r2, r3
 800e11e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800e120:	61bb      	str	r3, [r7, #24]
 800e122:	617a      	str	r2, [r7, #20]
 800e124:	6979      	ldr	r1, [r7, #20]
 800e126:	69ba      	ldr	r2, [r7, #24]
 800e128:	e841 2300 	strex	r3, r2, [r1]
 800e12c:	613b      	str	r3, [r7, #16]
 800e12e:	693b      	ldr	r3, [r7, #16]
 800e130:	2b00      	cmp	r3, #0
 800e132:	d1e6      	bne.n	800e102 <UART_EndRxTransfer+0x76>
 800e134:	687b      	ldr	r3, [r7, #4]
 800e136:	2220      	movs	r2, #32
 800e138:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800e13c:	687b      	ldr	r3, [r7, #4]
 800e13e:	2200      	movs	r2, #0
 800e140:	66da      	str	r2, [r3, #108]	; 0x6c
 800e142:	687b      	ldr	r3, [r7, #4]
 800e144:	2200      	movs	r2, #0
 800e146:	671a      	str	r2, [r3, #112]	; 0x70
 800e148:	bf00      	nop
 800e14a:	3754      	adds	r7, #84	; 0x54
 800e14c:	46bd      	mov	sp, r7
 800e14e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e152:	4770      	bx	lr
 800e154:	effffffe 	.word	0xeffffffe

0800e158 <UART_DMAAbortOnError>:
 800e158:	b580      	push	{r7, lr}
 800e15a:	b084      	sub	sp, #16
 800e15c:	af00      	add	r7, sp, #0
 800e15e:	6078      	str	r0, [r7, #4]
 800e160:	687b      	ldr	r3, [r7, #4]
 800e162:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e164:	60fb      	str	r3, [r7, #12]
 800e166:	68fb      	ldr	r3, [r7, #12]
 800e168:	2200      	movs	r2, #0
 800e16a:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800e16e:	68fb      	ldr	r3, [r7, #12]
 800e170:	2200      	movs	r2, #0
 800e172:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800e176:	68f8      	ldr	r0, [r7, #12]
 800e178:	f7fe ff2a 	bl	800cfd0 <HAL_UART_ErrorCallback>
 800e17c:	bf00      	nop
 800e17e:	3710      	adds	r7, #16
 800e180:	46bd      	mov	sp, r7
 800e182:	bd80      	pop	{r7, pc}

0800e184 <UART_EndTransmit_IT>:
 800e184:	b580      	push	{r7, lr}
 800e186:	b088      	sub	sp, #32
 800e188:	af00      	add	r7, sp, #0
 800e18a:	6078      	str	r0, [r7, #4]
 800e18c:	687b      	ldr	r3, [r7, #4]
 800e18e:	681b      	ldr	r3, [r3, #0]
 800e190:	60fb      	str	r3, [r7, #12]
 800e192:	68fb      	ldr	r3, [r7, #12]
 800e194:	e853 3f00 	ldrex	r3, [r3]
 800e198:	60bb      	str	r3, [r7, #8]
 800e19a:	68bb      	ldr	r3, [r7, #8]
 800e19c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e1a0:	61fb      	str	r3, [r7, #28]
 800e1a2:	687b      	ldr	r3, [r7, #4]
 800e1a4:	681b      	ldr	r3, [r3, #0]
 800e1a6:	461a      	mov	r2, r3
 800e1a8:	69fb      	ldr	r3, [r7, #28]
 800e1aa:	61bb      	str	r3, [r7, #24]
 800e1ac:	617a      	str	r2, [r7, #20]
 800e1ae:	6979      	ldr	r1, [r7, #20]
 800e1b0:	69ba      	ldr	r2, [r7, #24]
 800e1b2:	e841 2300 	strex	r3, r2, [r1]
 800e1b6:	613b      	str	r3, [r7, #16]
 800e1b8:	693b      	ldr	r3, [r7, #16]
 800e1ba:	2b00      	cmp	r3, #0
 800e1bc:	d1e6      	bne.n	800e18c <UART_EndTransmit_IT+0x8>
 800e1be:	687b      	ldr	r3, [r7, #4]
 800e1c0:	2220      	movs	r2, #32
 800e1c2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800e1c6:	687b      	ldr	r3, [r7, #4]
 800e1c8:	2200      	movs	r2, #0
 800e1ca:	675a      	str	r2, [r3, #116]	; 0x74
 800e1cc:	6878      	ldr	r0, [r7, #4]
 800e1ce:	f7f5 f9f5 	bl	80035bc <HAL_UART_TxCpltCallback>
 800e1d2:	bf00      	nop
 800e1d4:	3720      	adds	r7, #32
 800e1d6:	46bd      	mov	sp, r7
 800e1d8:	bd80      	pop	{r7, pc}

0800e1da <UART_RxISR_8BIT>:
 800e1da:	b580      	push	{r7, lr}
 800e1dc:	b096      	sub	sp, #88	; 0x58
 800e1de:	af00      	add	r7, sp, #0
 800e1e0:	6078      	str	r0, [r7, #4]
 800e1e2:	687b      	ldr	r3, [r7, #4]
 800e1e4:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800e1e8:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 800e1ec:	687b      	ldr	r3, [r7, #4]
 800e1ee:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800e1f2:	2b22      	cmp	r3, #34	; 0x22
 800e1f4:	f040 8095 	bne.w	800e322 <UART_RxISR_8BIT+0x148>
 800e1f8:	687b      	ldr	r3, [r7, #4]
 800e1fa:	681b      	ldr	r3, [r3, #0]
 800e1fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e1fe:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
 800e202:	f8b7 3054 	ldrh.w	r3, [r7, #84]	; 0x54
 800e206:	b2d9      	uxtb	r1, r3
 800e208:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 800e20c:	b2da      	uxtb	r2, r3
 800e20e:	687b      	ldr	r3, [r7, #4]
 800e210:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800e212:	400a      	ands	r2, r1
 800e214:	b2d2      	uxtb	r2, r2
 800e216:	701a      	strb	r2, [r3, #0]
 800e218:	687b      	ldr	r3, [r7, #4]
 800e21a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800e21c:	1c5a      	adds	r2, r3, #1
 800e21e:	687b      	ldr	r3, [r7, #4]
 800e220:	659a      	str	r2, [r3, #88]	; 0x58
 800e222:	687b      	ldr	r3, [r7, #4]
 800e224:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e228:	b29b      	uxth	r3, r3
 800e22a:	3b01      	subs	r3, #1
 800e22c:	b29a      	uxth	r2, r3
 800e22e:	687b      	ldr	r3, [r7, #4]
 800e230:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800e234:	687b      	ldr	r3, [r7, #4]
 800e236:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e23a:	b29b      	uxth	r3, r3
 800e23c:	2b00      	cmp	r3, #0
 800e23e:	d178      	bne.n	800e332 <UART_RxISR_8BIT+0x158>
 800e240:	687b      	ldr	r3, [r7, #4]
 800e242:	681b      	ldr	r3, [r3, #0]
 800e244:	63bb      	str	r3, [r7, #56]	; 0x38
 800e246:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e248:	e853 3f00 	ldrex	r3, [r3]
 800e24c:	637b      	str	r3, [r7, #52]	; 0x34
 800e24e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800e250:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800e254:	653b      	str	r3, [r7, #80]	; 0x50
 800e256:	687b      	ldr	r3, [r7, #4]
 800e258:	681b      	ldr	r3, [r3, #0]
 800e25a:	461a      	mov	r2, r3
 800e25c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800e25e:	647b      	str	r3, [r7, #68]	; 0x44
 800e260:	643a      	str	r2, [r7, #64]	; 0x40
 800e262:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800e264:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800e266:	e841 2300 	strex	r3, r2, [r1]
 800e26a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e26c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800e26e:	2b00      	cmp	r3, #0
 800e270:	d1e6      	bne.n	800e240 <UART_RxISR_8BIT+0x66>
 800e272:	687b      	ldr	r3, [r7, #4]
 800e274:	681b      	ldr	r3, [r3, #0]
 800e276:	3308      	adds	r3, #8
 800e278:	627b      	str	r3, [r7, #36]	; 0x24
 800e27a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e27c:	e853 3f00 	ldrex	r3, [r3]
 800e280:	623b      	str	r3, [r7, #32]
 800e282:	6a3b      	ldr	r3, [r7, #32]
 800e284:	f023 0301 	bic.w	r3, r3, #1
 800e288:	64fb      	str	r3, [r7, #76]	; 0x4c
 800e28a:	687b      	ldr	r3, [r7, #4]
 800e28c:	681b      	ldr	r3, [r3, #0]
 800e28e:	3308      	adds	r3, #8
 800e290:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800e292:	633a      	str	r2, [r7, #48]	; 0x30
 800e294:	62fb      	str	r3, [r7, #44]	; 0x2c
 800e296:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800e298:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800e29a:	e841 2300 	strex	r3, r2, [r1]
 800e29e:	62bb      	str	r3, [r7, #40]	; 0x28
 800e2a0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e2a2:	2b00      	cmp	r3, #0
 800e2a4:	d1e5      	bne.n	800e272 <UART_RxISR_8BIT+0x98>
 800e2a6:	687b      	ldr	r3, [r7, #4]
 800e2a8:	2220      	movs	r2, #32
 800e2aa:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800e2ae:	687b      	ldr	r3, [r7, #4]
 800e2b0:	2200      	movs	r2, #0
 800e2b2:	671a      	str	r2, [r3, #112]	; 0x70
 800e2b4:	687b      	ldr	r3, [r7, #4]
 800e2b6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e2b8:	2b01      	cmp	r3, #1
 800e2ba:	d12e      	bne.n	800e31a <UART_RxISR_8BIT+0x140>
 800e2bc:	687b      	ldr	r3, [r7, #4]
 800e2be:	2200      	movs	r2, #0
 800e2c0:	66da      	str	r2, [r3, #108]	; 0x6c
 800e2c2:	687b      	ldr	r3, [r7, #4]
 800e2c4:	681b      	ldr	r3, [r3, #0]
 800e2c6:	613b      	str	r3, [r7, #16]
 800e2c8:	693b      	ldr	r3, [r7, #16]
 800e2ca:	e853 3f00 	ldrex	r3, [r3]
 800e2ce:	60fb      	str	r3, [r7, #12]
 800e2d0:	68fb      	ldr	r3, [r7, #12]
 800e2d2:	f023 0310 	bic.w	r3, r3, #16
 800e2d6:	64bb      	str	r3, [r7, #72]	; 0x48
 800e2d8:	687b      	ldr	r3, [r7, #4]
 800e2da:	681b      	ldr	r3, [r3, #0]
 800e2dc:	461a      	mov	r2, r3
 800e2de:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800e2e0:	61fb      	str	r3, [r7, #28]
 800e2e2:	61ba      	str	r2, [r7, #24]
 800e2e4:	69b9      	ldr	r1, [r7, #24]
 800e2e6:	69fa      	ldr	r2, [r7, #28]
 800e2e8:	e841 2300 	strex	r3, r2, [r1]
 800e2ec:	617b      	str	r3, [r7, #20]
 800e2ee:	697b      	ldr	r3, [r7, #20]
 800e2f0:	2b00      	cmp	r3, #0
 800e2f2:	d1e6      	bne.n	800e2c2 <UART_RxISR_8BIT+0xe8>
 800e2f4:	687b      	ldr	r3, [r7, #4]
 800e2f6:	681b      	ldr	r3, [r3, #0]
 800e2f8:	69db      	ldr	r3, [r3, #28]
 800e2fa:	f003 0310 	and.w	r3, r3, #16
 800e2fe:	2b10      	cmp	r3, #16
 800e300:	d103      	bne.n	800e30a <UART_RxISR_8BIT+0x130>
 800e302:	687b      	ldr	r3, [r7, #4]
 800e304:	681b      	ldr	r3, [r3, #0]
 800e306:	2210      	movs	r2, #16
 800e308:	621a      	str	r2, [r3, #32]
 800e30a:	687b      	ldr	r3, [r7, #4]
 800e30c:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800e310:	4619      	mov	r1, r3
 800e312:	6878      	ldr	r0, [r7, #4]
 800e314:	f7fe fe66 	bl	800cfe4 <HAL_UARTEx_RxEventCallback>
 800e318:	e00b      	b.n	800e332 <UART_RxISR_8BIT+0x158>
 800e31a:	6878      	ldr	r0, [r7, #4]
 800e31c:	f7f5 f8da 	bl	80034d4 <HAL_UART_RxCpltCallback>
 800e320:	e007      	b.n	800e332 <UART_RxISR_8BIT+0x158>
 800e322:	687b      	ldr	r3, [r7, #4]
 800e324:	681b      	ldr	r3, [r3, #0]
 800e326:	699a      	ldr	r2, [r3, #24]
 800e328:	687b      	ldr	r3, [r7, #4]
 800e32a:	681b      	ldr	r3, [r3, #0]
 800e32c:	f042 0208 	orr.w	r2, r2, #8
 800e330:	619a      	str	r2, [r3, #24]
 800e332:	bf00      	nop
 800e334:	3758      	adds	r7, #88	; 0x58
 800e336:	46bd      	mov	sp, r7
 800e338:	bd80      	pop	{r7, pc}

0800e33a <UART_RxISR_16BIT>:
 800e33a:	b580      	push	{r7, lr}
 800e33c:	b096      	sub	sp, #88	; 0x58
 800e33e:	af00      	add	r7, sp, #0
 800e340:	6078      	str	r0, [r7, #4]
 800e342:	687b      	ldr	r3, [r7, #4]
 800e344:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800e348:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 800e34c:	687b      	ldr	r3, [r7, #4]
 800e34e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800e352:	2b22      	cmp	r3, #34	; 0x22
 800e354:	f040 8095 	bne.w	800e482 <UART_RxISR_16BIT+0x148>
 800e358:	687b      	ldr	r3, [r7, #4]
 800e35a:	681b      	ldr	r3, [r3, #0]
 800e35c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e35e:	f8a7 3054 	strh.w	r3, [r7, #84]	; 0x54
 800e362:	687b      	ldr	r3, [r7, #4]
 800e364:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800e366:	653b      	str	r3, [r7, #80]	; 0x50
 800e368:	f8b7 2054 	ldrh.w	r2, [r7, #84]	; 0x54
 800e36c:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 800e370:	4013      	ands	r3, r2
 800e372:	b29a      	uxth	r2, r3
 800e374:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800e376:	801a      	strh	r2, [r3, #0]
 800e378:	687b      	ldr	r3, [r7, #4]
 800e37a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800e37c:	1c9a      	adds	r2, r3, #2
 800e37e:	687b      	ldr	r3, [r7, #4]
 800e380:	659a      	str	r2, [r3, #88]	; 0x58
 800e382:	687b      	ldr	r3, [r7, #4]
 800e384:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e388:	b29b      	uxth	r3, r3
 800e38a:	3b01      	subs	r3, #1
 800e38c:	b29a      	uxth	r2, r3
 800e38e:	687b      	ldr	r3, [r7, #4]
 800e390:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800e394:	687b      	ldr	r3, [r7, #4]
 800e396:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e39a:	b29b      	uxth	r3, r3
 800e39c:	2b00      	cmp	r3, #0
 800e39e:	d178      	bne.n	800e492 <UART_RxISR_16BIT+0x158>
 800e3a0:	687b      	ldr	r3, [r7, #4]
 800e3a2:	681b      	ldr	r3, [r3, #0]
 800e3a4:	637b      	str	r3, [r7, #52]	; 0x34
 800e3a6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800e3a8:	e853 3f00 	ldrex	r3, [r3]
 800e3ac:	633b      	str	r3, [r7, #48]	; 0x30
 800e3ae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e3b0:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800e3b4:	64fb      	str	r3, [r7, #76]	; 0x4c
 800e3b6:	687b      	ldr	r3, [r7, #4]
 800e3b8:	681b      	ldr	r3, [r3, #0]
 800e3ba:	461a      	mov	r2, r3
 800e3bc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800e3be:	643b      	str	r3, [r7, #64]	; 0x40
 800e3c0:	63fa      	str	r2, [r7, #60]	; 0x3c
 800e3c2:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800e3c4:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800e3c6:	e841 2300 	strex	r3, r2, [r1]
 800e3ca:	63bb      	str	r3, [r7, #56]	; 0x38
 800e3cc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e3ce:	2b00      	cmp	r3, #0
 800e3d0:	d1e6      	bne.n	800e3a0 <UART_RxISR_16BIT+0x66>
 800e3d2:	687b      	ldr	r3, [r7, #4]
 800e3d4:	681b      	ldr	r3, [r3, #0]
 800e3d6:	3308      	adds	r3, #8
 800e3d8:	623b      	str	r3, [r7, #32]
 800e3da:	6a3b      	ldr	r3, [r7, #32]
 800e3dc:	e853 3f00 	ldrex	r3, [r3]
 800e3e0:	61fb      	str	r3, [r7, #28]
 800e3e2:	69fb      	ldr	r3, [r7, #28]
 800e3e4:	f023 0301 	bic.w	r3, r3, #1
 800e3e8:	64bb      	str	r3, [r7, #72]	; 0x48
 800e3ea:	687b      	ldr	r3, [r7, #4]
 800e3ec:	681b      	ldr	r3, [r3, #0]
 800e3ee:	3308      	adds	r3, #8
 800e3f0:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800e3f2:	62fa      	str	r2, [r7, #44]	; 0x2c
 800e3f4:	62bb      	str	r3, [r7, #40]	; 0x28
 800e3f6:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800e3f8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800e3fa:	e841 2300 	strex	r3, r2, [r1]
 800e3fe:	627b      	str	r3, [r7, #36]	; 0x24
 800e400:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e402:	2b00      	cmp	r3, #0
 800e404:	d1e5      	bne.n	800e3d2 <UART_RxISR_16BIT+0x98>
 800e406:	687b      	ldr	r3, [r7, #4]
 800e408:	2220      	movs	r2, #32
 800e40a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800e40e:	687b      	ldr	r3, [r7, #4]
 800e410:	2200      	movs	r2, #0
 800e412:	671a      	str	r2, [r3, #112]	; 0x70
 800e414:	687b      	ldr	r3, [r7, #4]
 800e416:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e418:	2b01      	cmp	r3, #1
 800e41a:	d12e      	bne.n	800e47a <UART_RxISR_16BIT+0x140>
 800e41c:	687b      	ldr	r3, [r7, #4]
 800e41e:	2200      	movs	r2, #0
 800e420:	66da      	str	r2, [r3, #108]	; 0x6c
 800e422:	687b      	ldr	r3, [r7, #4]
 800e424:	681b      	ldr	r3, [r3, #0]
 800e426:	60fb      	str	r3, [r7, #12]
 800e428:	68fb      	ldr	r3, [r7, #12]
 800e42a:	e853 3f00 	ldrex	r3, [r3]
 800e42e:	60bb      	str	r3, [r7, #8]
 800e430:	68bb      	ldr	r3, [r7, #8]
 800e432:	f023 0310 	bic.w	r3, r3, #16
 800e436:	647b      	str	r3, [r7, #68]	; 0x44
 800e438:	687b      	ldr	r3, [r7, #4]
 800e43a:	681b      	ldr	r3, [r3, #0]
 800e43c:	461a      	mov	r2, r3
 800e43e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800e440:	61bb      	str	r3, [r7, #24]
 800e442:	617a      	str	r2, [r7, #20]
 800e444:	6979      	ldr	r1, [r7, #20]
 800e446:	69ba      	ldr	r2, [r7, #24]
 800e448:	e841 2300 	strex	r3, r2, [r1]
 800e44c:	613b      	str	r3, [r7, #16]
 800e44e:	693b      	ldr	r3, [r7, #16]
 800e450:	2b00      	cmp	r3, #0
 800e452:	d1e6      	bne.n	800e422 <UART_RxISR_16BIT+0xe8>
 800e454:	687b      	ldr	r3, [r7, #4]
 800e456:	681b      	ldr	r3, [r3, #0]
 800e458:	69db      	ldr	r3, [r3, #28]
 800e45a:	f003 0310 	and.w	r3, r3, #16
 800e45e:	2b10      	cmp	r3, #16
 800e460:	d103      	bne.n	800e46a <UART_RxISR_16BIT+0x130>
 800e462:	687b      	ldr	r3, [r7, #4]
 800e464:	681b      	ldr	r3, [r3, #0]
 800e466:	2210      	movs	r2, #16
 800e468:	621a      	str	r2, [r3, #32]
 800e46a:	687b      	ldr	r3, [r7, #4]
 800e46c:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800e470:	4619      	mov	r1, r3
 800e472:	6878      	ldr	r0, [r7, #4]
 800e474:	f7fe fdb6 	bl	800cfe4 <HAL_UARTEx_RxEventCallback>
 800e478:	e00b      	b.n	800e492 <UART_RxISR_16BIT+0x158>
 800e47a:	6878      	ldr	r0, [r7, #4]
 800e47c:	f7f5 f82a 	bl	80034d4 <HAL_UART_RxCpltCallback>
 800e480:	e007      	b.n	800e492 <UART_RxISR_16BIT+0x158>
 800e482:	687b      	ldr	r3, [r7, #4]
 800e484:	681b      	ldr	r3, [r3, #0]
 800e486:	699a      	ldr	r2, [r3, #24]
 800e488:	687b      	ldr	r3, [r7, #4]
 800e48a:	681b      	ldr	r3, [r3, #0]
 800e48c:	f042 0208 	orr.w	r2, r2, #8
 800e490:	619a      	str	r2, [r3, #24]
 800e492:	bf00      	nop
 800e494:	3758      	adds	r7, #88	; 0x58
 800e496:	46bd      	mov	sp, r7
 800e498:	bd80      	pop	{r7, pc}
	...

0800e49c <UART_RxISR_8BIT_FIFOEN>:
 800e49c:	b580      	push	{r7, lr}
 800e49e:	b0a6      	sub	sp, #152	; 0x98
 800e4a0:	af00      	add	r7, sp, #0
 800e4a2:	6078      	str	r0, [r7, #4]
 800e4a4:	687b      	ldr	r3, [r7, #4]
 800e4a6:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800e4aa:	f8a7 3092 	strh.w	r3, [r7, #146]	; 0x92
 800e4ae:	687b      	ldr	r3, [r7, #4]
 800e4b0:	681b      	ldr	r3, [r3, #0]
 800e4b2:	69db      	ldr	r3, [r3, #28]
 800e4b4:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800e4b8:	687b      	ldr	r3, [r7, #4]
 800e4ba:	681b      	ldr	r3, [r3, #0]
 800e4bc:	681b      	ldr	r3, [r3, #0]
 800e4be:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800e4c2:	687b      	ldr	r3, [r7, #4]
 800e4c4:	681b      	ldr	r3, [r3, #0]
 800e4c6:	689b      	ldr	r3, [r3, #8]
 800e4c8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800e4cc:	687b      	ldr	r3, [r7, #4]
 800e4ce:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800e4d2:	2b22      	cmp	r3, #34	; 0x22
 800e4d4:	f040 814d 	bne.w	800e772 <UART_RxISR_8BIT_FIFOEN+0x2d6>
 800e4d8:	687b      	ldr	r3, [r7, #4]
 800e4da:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800e4de:	f8a7 3086 	strh.w	r3, [r7, #134]	; 0x86
 800e4e2:	e0f4      	b.n	800e6ce <UART_RxISR_8BIT_FIFOEN+0x232>
 800e4e4:	687b      	ldr	r3, [r7, #4]
 800e4e6:	681b      	ldr	r3, [r3, #0]
 800e4e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e4ea:	f8a7 3084 	strh.w	r3, [r7, #132]	; 0x84
 800e4ee:	f8b7 3084 	ldrh.w	r3, [r7, #132]	; 0x84
 800e4f2:	b2d9      	uxtb	r1, r3
 800e4f4:	f8b7 3092 	ldrh.w	r3, [r7, #146]	; 0x92
 800e4f8:	b2da      	uxtb	r2, r3
 800e4fa:	687b      	ldr	r3, [r7, #4]
 800e4fc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800e4fe:	400a      	ands	r2, r1
 800e500:	b2d2      	uxtb	r2, r2
 800e502:	701a      	strb	r2, [r3, #0]
 800e504:	687b      	ldr	r3, [r7, #4]
 800e506:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800e508:	1c5a      	adds	r2, r3, #1
 800e50a:	687b      	ldr	r3, [r7, #4]
 800e50c:	659a      	str	r2, [r3, #88]	; 0x58
 800e50e:	687b      	ldr	r3, [r7, #4]
 800e510:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e514:	b29b      	uxth	r3, r3
 800e516:	3b01      	subs	r3, #1
 800e518:	b29a      	uxth	r2, r3
 800e51a:	687b      	ldr	r3, [r7, #4]
 800e51c:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800e520:	687b      	ldr	r3, [r7, #4]
 800e522:	681b      	ldr	r3, [r3, #0]
 800e524:	69db      	ldr	r3, [r3, #28]
 800e526:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800e52a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800e52e:	f003 0307 	and.w	r3, r3, #7
 800e532:	2b00      	cmp	r3, #0
 800e534:	d053      	beq.n	800e5de <UART_RxISR_8BIT_FIFOEN+0x142>
 800e536:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800e53a:	f003 0301 	and.w	r3, r3, #1
 800e53e:	2b00      	cmp	r3, #0
 800e540:	d011      	beq.n	800e566 <UART_RxISR_8BIT_FIFOEN+0xca>
 800e542:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800e546:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e54a:	2b00      	cmp	r3, #0
 800e54c:	d00b      	beq.n	800e566 <UART_RxISR_8BIT_FIFOEN+0xca>
 800e54e:	687b      	ldr	r3, [r7, #4]
 800e550:	681b      	ldr	r3, [r3, #0]
 800e552:	2201      	movs	r2, #1
 800e554:	621a      	str	r2, [r3, #32]
 800e556:	687b      	ldr	r3, [r7, #4]
 800e558:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e55c:	f043 0201 	orr.w	r2, r3, #1
 800e560:	687b      	ldr	r3, [r7, #4]
 800e562:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e566:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800e56a:	f003 0302 	and.w	r3, r3, #2
 800e56e:	2b00      	cmp	r3, #0
 800e570:	d011      	beq.n	800e596 <UART_RxISR_8BIT_FIFOEN+0xfa>
 800e572:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800e576:	f003 0301 	and.w	r3, r3, #1
 800e57a:	2b00      	cmp	r3, #0
 800e57c:	d00b      	beq.n	800e596 <UART_RxISR_8BIT_FIFOEN+0xfa>
 800e57e:	687b      	ldr	r3, [r7, #4]
 800e580:	681b      	ldr	r3, [r3, #0]
 800e582:	2202      	movs	r2, #2
 800e584:	621a      	str	r2, [r3, #32]
 800e586:	687b      	ldr	r3, [r7, #4]
 800e588:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e58c:	f043 0204 	orr.w	r2, r3, #4
 800e590:	687b      	ldr	r3, [r7, #4]
 800e592:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e596:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800e59a:	f003 0304 	and.w	r3, r3, #4
 800e59e:	2b00      	cmp	r3, #0
 800e5a0:	d011      	beq.n	800e5c6 <UART_RxISR_8BIT_FIFOEN+0x12a>
 800e5a2:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800e5a6:	f003 0301 	and.w	r3, r3, #1
 800e5aa:	2b00      	cmp	r3, #0
 800e5ac:	d00b      	beq.n	800e5c6 <UART_RxISR_8BIT_FIFOEN+0x12a>
 800e5ae:	687b      	ldr	r3, [r7, #4]
 800e5b0:	681b      	ldr	r3, [r3, #0]
 800e5b2:	2204      	movs	r2, #4
 800e5b4:	621a      	str	r2, [r3, #32]
 800e5b6:	687b      	ldr	r3, [r7, #4]
 800e5b8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e5bc:	f043 0202 	orr.w	r2, r3, #2
 800e5c0:	687b      	ldr	r3, [r7, #4]
 800e5c2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e5c6:	687b      	ldr	r3, [r7, #4]
 800e5c8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e5cc:	2b00      	cmp	r3, #0
 800e5ce:	d006      	beq.n	800e5de <UART_RxISR_8BIT_FIFOEN+0x142>
 800e5d0:	6878      	ldr	r0, [r7, #4]
 800e5d2:	f7fe fcfd 	bl	800cfd0 <HAL_UART_ErrorCallback>
 800e5d6:	687b      	ldr	r3, [r7, #4]
 800e5d8:	2200      	movs	r2, #0
 800e5da:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e5de:	687b      	ldr	r3, [r7, #4]
 800e5e0:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e5e4:	b29b      	uxth	r3, r3
 800e5e6:	2b00      	cmp	r3, #0
 800e5e8:	d171      	bne.n	800e6ce <UART_RxISR_8BIT_FIFOEN+0x232>
 800e5ea:	687b      	ldr	r3, [r7, #4]
 800e5ec:	681b      	ldr	r3, [r3, #0]
 800e5ee:	65fb      	str	r3, [r7, #92]	; 0x5c
 800e5f0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800e5f2:	e853 3f00 	ldrex	r3, [r3]
 800e5f6:	65bb      	str	r3, [r7, #88]	; 0x58
 800e5f8:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800e5fa:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800e5fe:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800e602:	687b      	ldr	r3, [r7, #4]
 800e604:	681b      	ldr	r3, [r3, #0]
 800e606:	461a      	mov	r2, r3
 800e608:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 800e60c:	66bb      	str	r3, [r7, #104]	; 0x68
 800e60e:	667a      	str	r2, [r7, #100]	; 0x64
 800e610:	6e79      	ldr	r1, [r7, #100]	; 0x64
 800e612:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800e614:	e841 2300 	strex	r3, r2, [r1]
 800e618:	663b      	str	r3, [r7, #96]	; 0x60
 800e61a:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800e61c:	2b00      	cmp	r3, #0
 800e61e:	d1e4      	bne.n	800e5ea <UART_RxISR_8BIT_FIFOEN+0x14e>
 800e620:	687b      	ldr	r3, [r7, #4]
 800e622:	681b      	ldr	r3, [r3, #0]
 800e624:	3308      	adds	r3, #8
 800e626:	64bb      	str	r3, [r7, #72]	; 0x48
 800e628:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800e62a:	e853 3f00 	ldrex	r3, [r3]
 800e62e:	647b      	str	r3, [r7, #68]	; 0x44
 800e630:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800e632:	4b56      	ldr	r3, [pc, #344]	; (800e78c <UART_RxISR_8BIT_FIFOEN+0x2f0>)
 800e634:	4013      	ands	r3, r2
 800e636:	67fb      	str	r3, [r7, #124]	; 0x7c
 800e638:	687b      	ldr	r3, [r7, #4]
 800e63a:	681b      	ldr	r3, [r3, #0]
 800e63c:	3308      	adds	r3, #8
 800e63e:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 800e640:	657a      	str	r2, [r7, #84]	; 0x54
 800e642:	653b      	str	r3, [r7, #80]	; 0x50
 800e644:	6d39      	ldr	r1, [r7, #80]	; 0x50
 800e646:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800e648:	e841 2300 	strex	r3, r2, [r1]
 800e64c:	64fb      	str	r3, [r7, #76]	; 0x4c
 800e64e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800e650:	2b00      	cmp	r3, #0
 800e652:	d1e5      	bne.n	800e620 <UART_RxISR_8BIT_FIFOEN+0x184>
 800e654:	687b      	ldr	r3, [r7, #4]
 800e656:	2220      	movs	r2, #32
 800e658:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800e65c:	687b      	ldr	r3, [r7, #4]
 800e65e:	2200      	movs	r2, #0
 800e660:	671a      	str	r2, [r3, #112]	; 0x70
 800e662:	687b      	ldr	r3, [r7, #4]
 800e664:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e666:	2b01      	cmp	r3, #1
 800e668:	d12e      	bne.n	800e6c8 <UART_RxISR_8BIT_FIFOEN+0x22c>
 800e66a:	687b      	ldr	r3, [r7, #4]
 800e66c:	2200      	movs	r2, #0
 800e66e:	66da      	str	r2, [r3, #108]	; 0x6c
 800e670:	687b      	ldr	r3, [r7, #4]
 800e672:	681b      	ldr	r3, [r3, #0]
 800e674:	637b      	str	r3, [r7, #52]	; 0x34
 800e676:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800e678:	e853 3f00 	ldrex	r3, [r3]
 800e67c:	633b      	str	r3, [r7, #48]	; 0x30
 800e67e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e680:	f023 0310 	bic.w	r3, r3, #16
 800e684:	67bb      	str	r3, [r7, #120]	; 0x78
 800e686:	687b      	ldr	r3, [r7, #4]
 800e688:	681b      	ldr	r3, [r3, #0]
 800e68a:	461a      	mov	r2, r3
 800e68c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800e68e:	643b      	str	r3, [r7, #64]	; 0x40
 800e690:	63fa      	str	r2, [r7, #60]	; 0x3c
 800e692:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800e694:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800e696:	e841 2300 	strex	r3, r2, [r1]
 800e69a:	63bb      	str	r3, [r7, #56]	; 0x38
 800e69c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e69e:	2b00      	cmp	r3, #0
 800e6a0:	d1e6      	bne.n	800e670 <UART_RxISR_8BIT_FIFOEN+0x1d4>
 800e6a2:	687b      	ldr	r3, [r7, #4]
 800e6a4:	681b      	ldr	r3, [r3, #0]
 800e6a6:	69db      	ldr	r3, [r3, #28]
 800e6a8:	f003 0310 	and.w	r3, r3, #16
 800e6ac:	2b10      	cmp	r3, #16
 800e6ae:	d103      	bne.n	800e6b8 <UART_RxISR_8BIT_FIFOEN+0x21c>
 800e6b0:	687b      	ldr	r3, [r7, #4]
 800e6b2:	681b      	ldr	r3, [r3, #0]
 800e6b4:	2210      	movs	r2, #16
 800e6b6:	621a      	str	r2, [r3, #32]
 800e6b8:	687b      	ldr	r3, [r7, #4]
 800e6ba:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800e6be:	4619      	mov	r1, r3
 800e6c0:	6878      	ldr	r0, [r7, #4]
 800e6c2:	f7fe fc8f 	bl	800cfe4 <HAL_UARTEx_RxEventCallback>
 800e6c6:	e002      	b.n	800e6ce <UART_RxISR_8BIT_FIFOEN+0x232>
 800e6c8:	6878      	ldr	r0, [r7, #4]
 800e6ca:	f7f4 ff03 	bl	80034d4 <HAL_UART_RxCpltCallback>
 800e6ce:	f8b7 3086 	ldrh.w	r3, [r7, #134]	; 0x86
 800e6d2:	2b00      	cmp	r3, #0
 800e6d4:	d006      	beq.n	800e6e4 <UART_RxISR_8BIT_FIFOEN+0x248>
 800e6d6:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800e6da:	f003 0320 	and.w	r3, r3, #32
 800e6de:	2b00      	cmp	r3, #0
 800e6e0:	f47f af00 	bne.w	800e4e4 <UART_RxISR_8BIT_FIFOEN+0x48>
 800e6e4:	687b      	ldr	r3, [r7, #4]
 800e6e6:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e6ea:	f8a7 3076 	strh.w	r3, [r7, #118]	; 0x76
 800e6ee:	f8b7 3076 	ldrh.w	r3, [r7, #118]	; 0x76
 800e6f2:	2b00      	cmp	r3, #0
 800e6f4:	d045      	beq.n	800e782 <UART_RxISR_8BIT_FIFOEN+0x2e6>
 800e6f6:	687b      	ldr	r3, [r7, #4]
 800e6f8:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800e6fc:	f8b7 2076 	ldrh.w	r2, [r7, #118]	; 0x76
 800e700:	429a      	cmp	r2, r3
 800e702:	d23e      	bcs.n	800e782 <UART_RxISR_8BIT_FIFOEN+0x2e6>
 800e704:	687b      	ldr	r3, [r7, #4]
 800e706:	681b      	ldr	r3, [r3, #0]
 800e708:	3308      	adds	r3, #8
 800e70a:	623b      	str	r3, [r7, #32]
 800e70c:	6a3b      	ldr	r3, [r7, #32]
 800e70e:	e853 3f00 	ldrex	r3, [r3]
 800e712:	61fb      	str	r3, [r7, #28]
 800e714:	69fb      	ldr	r3, [r7, #28]
 800e716:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800e71a:	673b      	str	r3, [r7, #112]	; 0x70
 800e71c:	687b      	ldr	r3, [r7, #4]
 800e71e:	681b      	ldr	r3, [r3, #0]
 800e720:	3308      	adds	r3, #8
 800e722:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 800e724:	62fa      	str	r2, [r7, #44]	; 0x2c
 800e726:	62bb      	str	r3, [r7, #40]	; 0x28
 800e728:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800e72a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800e72c:	e841 2300 	strex	r3, r2, [r1]
 800e730:	627b      	str	r3, [r7, #36]	; 0x24
 800e732:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e734:	2b00      	cmp	r3, #0
 800e736:	d1e5      	bne.n	800e704 <UART_RxISR_8BIT_FIFOEN+0x268>
 800e738:	687b      	ldr	r3, [r7, #4]
 800e73a:	4a15      	ldr	r2, [pc, #84]	; (800e790 <UART_RxISR_8BIT_FIFOEN+0x2f4>)
 800e73c:	671a      	str	r2, [r3, #112]	; 0x70
 800e73e:	687b      	ldr	r3, [r7, #4]
 800e740:	681b      	ldr	r3, [r3, #0]
 800e742:	60fb      	str	r3, [r7, #12]
 800e744:	68fb      	ldr	r3, [r7, #12]
 800e746:	e853 3f00 	ldrex	r3, [r3]
 800e74a:	60bb      	str	r3, [r7, #8]
 800e74c:	68bb      	ldr	r3, [r7, #8]
 800e74e:	f043 0320 	orr.w	r3, r3, #32
 800e752:	66fb      	str	r3, [r7, #108]	; 0x6c
 800e754:	687b      	ldr	r3, [r7, #4]
 800e756:	681b      	ldr	r3, [r3, #0]
 800e758:	461a      	mov	r2, r3
 800e75a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800e75c:	61bb      	str	r3, [r7, #24]
 800e75e:	617a      	str	r2, [r7, #20]
 800e760:	6979      	ldr	r1, [r7, #20]
 800e762:	69ba      	ldr	r2, [r7, #24]
 800e764:	e841 2300 	strex	r3, r2, [r1]
 800e768:	613b      	str	r3, [r7, #16]
 800e76a:	693b      	ldr	r3, [r7, #16]
 800e76c:	2b00      	cmp	r3, #0
 800e76e:	d1e6      	bne.n	800e73e <UART_RxISR_8BIT_FIFOEN+0x2a2>
 800e770:	e007      	b.n	800e782 <UART_RxISR_8BIT_FIFOEN+0x2e6>
 800e772:	687b      	ldr	r3, [r7, #4]
 800e774:	681b      	ldr	r3, [r3, #0]
 800e776:	699a      	ldr	r2, [r3, #24]
 800e778:	687b      	ldr	r3, [r7, #4]
 800e77a:	681b      	ldr	r3, [r3, #0]
 800e77c:	f042 0208 	orr.w	r2, r2, #8
 800e780:	619a      	str	r2, [r3, #24]
 800e782:	bf00      	nop
 800e784:	3798      	adds	r7, #152	; 0x98
 800e786:	46bd      	mov	sp, r7
 800e788:	bd80      	pop	{r7, pc}
 800e78a:	bf00      	nop
 800e78c:	effffffe 	.word	0xeffffffe
 800e790:	0800e1db 	.word	0x0800e1db

0800e794 <UART_RxISR_16BIT_FIFOEN>:
 800e794:	b580      	push	{r7, lr}
 800e796:	b0a8      	sub	sp, #160	; 0xa0
 800e798:	af00      	add	r7, sp, #0
 800e79a:	6078      	str	r0, [r7, #4]
 800e79c:	687b      	ldr	r3, [r7, #4]
 800e79e:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800e7a2:	f8a7 309a 	strh.w	r3, [r7, #154]	; 0x9a
 800e7a6:	687b      	ldr	r3, [r7, #4]
 800e7a8:	681b      	ldr	r3, [r3, #0]
 800e7aa:	69db      	ldr	r3, [r3, #28]
 800e7ac:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800e7b0:	687b      	ldr	r3, [r7, #4]
 800e7b2:	681b      	ldr	r3, [r3, #0]
 800e7b4:	681b      	ldr	r3, [r3, #0]
 800e7b6:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800e7ba:	687b      	ldr	r3, [r7, #4]
 800e7bc:	681b      	ldr	r3, [r3, #0]
 800e7be:	689b      	ldr	r3, [r3, #8]
 800e7c0:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800e7c4:	687b      	ldr	r3, [r7, #4]
 800e7c6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800e7ca:	2b22      	cmp	r3, #34	; 0x22
 800e7cc:	f040 8151 	bne.w	800ea72 <UART_RxISR_16BIT_FIFOEN+0x2de>
 800e7d0:	687b      	ldr	r3, [r7, #4]
 800e7d2:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800e7d6:	f8a7 308e 	strh.w	r3, [r7, #142]	; 0x8e
 800e7da:	e0f8      	b.n	800e9ce <UART_RxISR_16BIT_FIFOEN+0x23a>
 800e7dc:	687b      	ldr	r3, [r7, #4]
 800e7de:	681b      	ldr	r3, [r3, #0]
 800e7e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e7e2:	f8a7 308c 	strh.w	r3, [r7, #140]	; 0x8c
 800e7e6:	687b      	ldr	r3, [r7, #4]
 800e7e8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800e7ea:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800e7ee:	f8b7 208c 	ldrh.w	r2, [r7, #140]	; 0x8c
 800e7f2:	f8b7 309a 	ldrh.w	r3, [r7, #154]	; 0x9a
 800e7f6:	4013      	ands	r3, r2
 800e7f8:	b29a      	uxth	r2, r3
 800e7fa:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800e7fe:	801a      	strh	r2, [r3, #0]
 800e800:	687b      	ldr	r3, [r7, #4]
 800e802:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800e804:	1c9a      	adds	r2, r3, #2
 800e806:	687b      	ldr	r3, [r7, #4]
 800e808:	659a      	str	r2, [r3, #88]	; 0x58
 800e80a:	687b      	ldr	r3, [r7, #4]
 800e80c:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e810:	b29b      	uxth	r3, r3
 800e812:	3b01      	subs	r3, #1
 800e814:	b29a      	uxth	r2, r3
 800e816:	687b      	ldr	r3, [r7, #4]
 800e818:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800e81c:	687b      	ldr	r3, [r7, #4]
 800e81e:	681b      	ldr	r3, [r3, #0]
 800e820:	69db      	ldr	r3, [r3, #28]
 800e822:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800e826:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800e82a:	f003 0307 	and.w	r3, r3, #7
 800e82e:	2b00      	cmp	r3, #0
 800e830:	d053      	beq.n	800e8da <UART_RxISR_16BIT_FIFOEN+0x146>
 800e832:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800e836:	f003 0301 	and.w	r3, r3, #1
 800e83a:	2b00      	cmp	r3, #0
 800e83c:	d011      	beq.n	800e862 <UART_RxISR_16BIT_FIFOEN+0xce>
 800e83e:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800e842:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e846:	2b00      	cmp	r3, #0
 800e848:	d00b      	beq.n	800e862 <UART_RxISR_16BIT_FIFOEN+0xce>
 800e84a:	687b      	ldr	r3, [r7, #4]
 800e84c:	681b      	ldr	r3, [r3, #0]
 800e84e:	2201      	movs	r2, #1
 800e850:	621a      	str	r2, [r3, #32]
 800e852:	687b      	ldr	r3, [r7, #4]
 800e854:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e858:	f043 0201 	orr.w	r2, r3, #1
 800e85c:	687b      	ldr	r3, [r7, #4]
 800e85e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e862:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800e866:	f003 0302 	and.w	r3, r3, #2
 800e86a:	2b00      	cmp	r3, #0
 800e86c:	d011      	beq.n	800e892 <UART_RxISR_16BIT_FIFOEN+0xfe>
 800e86e:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800e872:	f003 0301 	and.w	r3, r3, #1
 800e876:	2b00      	cmp	r3, #0
 800e878:	d00b      	beq.n	800e892 <UART_RxISR_16BIT_FIFOEN+0xfe>
 800e87a:	687b      	ldr	r3, [r7, #4]
 800e87c:	681b      	ldr	r3, [r3, #0]
 800e87e:	2202      	movs	r2, #2
 800e880:	621a      	str	r2, [r3, #32]
 800e882:	687b      	ldr	r3, [r7, #4]
 800e884:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e888:	f043 0204 	orr.w	r2, r3, #4
 800e88c:	687b      	ldr	r3, [r7, #4]
 800e88e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e892:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800e896:	f003 0304 	and.w	r3, r3, #4
 800e89a:	2b00      	cmp	r3, #0
 800e89c:	d011      	beq.n	800e8c2 <UART_RxISR_16BIT_FIFOEN+0x12e>
 800e89e:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800e8a2:	f003 0301 	and.w	r3, r3, #1
 800e8a6:	2b00      	cmp	r3, #0
 800e8a8:	d00b      	beq.n	800e8c2 <UART_RxISR_16BIT_FIFOEN+0x12e>
 800e8aa:	687b      	ldr	r3, [r7, #4]
 800e8ac:	681b      	ldr	r3, [r3, #0]
 800e8ae:	2204      	movs	r2, #4
 800e8b0:	621a      	str	r2, [r3, #32]
 800e8b2:	687b      	ldr	r3, [r7, #4]
 800e8b4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e8b8:	f043 0202 	orr.w	r2, r3, #2
 800e8bc:	687b      	ldr	r3, [r7, #4]
 800e8be:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e8c2:	687b      	ldr	r3, [r7, #4]
 800e8c4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800e8c8:	2b00      	cmp	r3, #0
 800e8ca:	d006      	beq.n	800e8da <UART_RxISR_16BIT_FIFOEN+0x146>
 800e8cc:	6878      	ldr	r0, [r7, #4]
 800e8ce:	f7fe fb7f 	bl	800cfd0 <HAL_UART_ErrorCallback>
 800e8d2:	687b      	ldr	r3, [r7, #4]
 800e8d4:	2200      	movs	r2, #0
 800e8d6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800e8da:	687b      	ldr	r3, [r7, #4]
 800e8dc:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e8e0:	b29b      	uxth	r3, r3
 800e8e2:	2b00      	cmp	r3, #0
 800e8e4:	d173      	bne.n	800e9ce <UART_RxISR_16BIT_FIFOEN+0x23a>
 800e8e6:	687b      	ldr	r3, [r7, #4]
 800e8e8:	681b      	ldr	r3, [r3, #0]
 800e8ea:	663b      	str	r3, [r7, #96]	; 0x60
 800e8ec:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800e8ee:	e853 3f00 	ldrex	r3, [r3]
 800e8f2:	65fb      	str	r3, [r7, #92]	; 0x5c
 800e8f4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800e8f6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800e8fa:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800e8fe:	687b      	ldr	r3, [r7, #4]
 800e900:	681b      	ldr	r3, [r3, #0]
 800e902:	461a      	mov	r2, r3
 800e904:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800e908:	66fb      	str	r3, [r7, #108]	; 0x6c
 800e90a:	66ba      	str	r2, [r7, #104]	; 0x68
 800e90c:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800e90e:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800e910:	e841 2300 	strex	r3, r2, [r1]
 800e914:	667b      	str	r3, [r7, #100]	; 0x64
 800e916:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800e918:	2b00      	cmp	r3, #0
 800e91a:	d1e4      	bne.n	800e8e6 <UART_RxISR_16BIT_FIFOEN+0x152>
 800e91c:	687b      	ldr	r3, [r7, #4]
 800e91e:	681b      	ldr	r3, [r3, #0]
 800e920:	3308      	adds	r3, #8
 800e922:	64fb      	str	r3, [r7, #76]	; 0x4c
 800e924:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800e926:	e853 3f00 	ldrex	r3, [r3]
 800e92a:	64bb      	str	r3, [r7, #72]	; 0x48
 800e92c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800e92e:	4b57      	ldr	r3, [pc, #348]	; (800ea8c <UART_RxISR_16BIT_FIFOEN+0x2f8>)
 800e930:	4013      	ands	r3, r2
 800e932:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800e936:	687b      	ldr	r3, [r7, #4]
 800e938:	681b      	ldr	r3, [r3, #0]
 800e93a:	3308      	adds	r3, #8
 800e93c:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800e940:	65ba      	str	r2, [r7, #88]	; 0x58
 800e942:	657b      	str	r3, [r7, #84]	; 0x54
 800e944:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800e946:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800e948:	e841 2300 	strex	r3, r2, [r1]
 800e94c:	653b      	str	r3, [r7, #80]	; 0x50
 800e94e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800e950:	2b00      	cmp	r3, #0
 800e952:	d1e3      	bne.n	800e91c <UART_RxISR_16BIT_FIFOEN+0x188>
 800e954:	687b      	ldr	r3, [r7, #4]
 800e956:	2220      	movs	r2, #32
 800e958:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800e95c:	687b      	ldr	r3, [r7, #4]
 800e95e:	2200      	movs	r2, #0
 800e960:	671a      	str	r2, [r3, #112]	; 0x70
 800e962:	687b      	ldr	r3, [r7, #4]
 800e964:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e966:	2b01      	cmp	r3, #1
 800e968:	d12e      	bne.n	800e9c8 <UART_RxISR_16BIT_FIFOEN+0x234>
 800e96a:	687b      	ldr	r3, [r7, #4]
 800e96c:	2200      	movs	r2, #0
 800e96e:	66da      	str	r2, [r3, #108]	; 0x6c
 800e970:	687b      	ldr	r3, [r7, #4]
 800e972:	681b      	ldr	r3, [r3, #0]
 800e974:	63bb      	str	r3, [r7, #56]	; 0x38
 800e976:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e978:	e853 3f00 	ldrex	r3, [r3]
 800e97c:	637b      	str	r3, [r7, #52]	; 0x34
 800e97e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800e980:	f023 0310 	bic.w	r3, r3, #16
 800e984:	67fb      	str	r3, [r7, #124]	; 0x7c
 800e986:	687b      	ldr	r3, [r7, #4]
 800e988:	681b      	ldr	r3, [r3, #0]
 800e98a:	461a      	mov	r2, r3
 800e98c:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 800e98e:	647b      	str	r3, [r7, #68]	; 0x44
 800e990:	643a      	str	r2, [r7, #64]	; 0x40
 800e992:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800e994:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800e996:	e841 2300 	strex	r3, r2, [r1]
 800e99a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800e99c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800e99e:	2b00      	cmp	r3, #0
 800e9a0:	d1e6      	bne.n	800e970 <UART_RxISR_16BIT_FIFOEN+0x1dc>
 800e9a2:	687b      	ldr	r3, [r7, #4]
 800e9a4:	681b      	ldr	r3, [r3, #0]
 800e9a6:	69db      	ldr	r3, [r3, #28]
 800e9a8:	f003 0310 	and.w	r3, r3, #16
 800e9ac:	2b10      	cmp	r3, #16
 800e9ae:	d103      	bne.n	800e9b8 <UART_RxISR_16BIT_FIFOEN+0x224>
 800e9b0:	687b      	ldr	r3, [r7, #4]
 800e9b2:	681b      	ldr	r3, [r3, #0]
 800e9b4:	2210      	movs	r2, #16
 800e9b6:	621a      	str	r2, [r3, #32]
 800e9b8:	687b      	ldr	r3, [r7, #4]
 800e9ba:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800e9be:	4619      	mov	r1, r3
 800e9c0:	6878      	ldr	r0, [r7, #4]
 800e9c2:	f7fe fb0f 	bl	800cfe4 <HAL_UARTEx_RxEventCallback>
 800e9c6:	e002      	b.n	800e9ce <UART_RxISR_16BIT_FIFOEN+0x23a>
 800e9c8:	6878      	ldr	r0, [r7, #4]
 800e9ca:	f7f4 fd83 	bl	80034d4 <HAL_UART_RxCpltCallback>
 800e9ce:	f8b7 308e 	ldrh.w	r3, [r7, #142]	; 0x8e
 800e9d2:	2b00      	cmp	r3, #0
 800e9d4:	d006      	beq.n	800e9e4 <UART_RxISR_16BIT_FIFOEN+0x250>
 800e9d6:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800e9da:	f003 0320 	and.w	r3, r3, #32
 800e9de:	2b00      	cmp	r3, #0
 800e9e0:	f47f aefc 	bne.w	800e7dc <UART_RxISR_16BIT_FIFOEN+0x48>
 800e9e4:	687b      	ldr	r3, [r7, #4]
 800e9e6:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800e9ea:	f8a7 307a 	strh.w	r3, [r7, #122]	; 0x7a
 800e9ee:	f8b7 307a 	ldrh.w	r3, [r7, #122]	; 0x7a
 800e9f2:	2b00      	cmp	r3, #0
 800e9f4:	d045      	beq.n	800ea82 <UART_RxISR_16BIT_FIFOEN+0x2ee>
 800e9f6:	687b      	ldr	r3, [r7, #4]
 800e9f8:	f8b3 3068 	ldrh.w	r3, [r3, #104]	; 0x68
 800e9fc:	f8b7 207a 	ldrh.w	r2, [r7, #122]	; 0x7a
 800ea00:	429a      	cmp	r2, r3
 800ea02:	d23e      	bcs.n	800ea82 <UART_RxISR_16BIT_FIFOEN+0x2ee>
 800ea04:	687b      	ldr	r3, [r7, #4]
 800ea06:	681b      	ldr	r3, [r3, #0]
 800ea08:	3308      	adds	r3, #8
 800ea0a:	627b      	str	r3, [r7, #36]	; 0x24
 800ea0c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ea0e:	e853 3f00 	ldrex	r3, [r3]
 800ea12:	623b      	str	r3, [r7, #32]
 800ea14:	6a3b      	ldr	r3, [r7, #32]
 800ea16:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800ea1a:	677b      	str	r3, [r7, #116]	; 0x74
 800ea1c:	687b      	ldr	r3, [r7, #4]
 800ea1e:	681b      	ldr	r3, [r3, #0]
 800ea20:	3308      	adds	r3, #8
 800ea22:	6f7a      	ldr	r2, [r7, #116]	; 0x74
 800ea24:	633a      	str	r2, [r7, #48]	; 0x30
 800ea26:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ea28:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800ea2a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800ea2c:	e841 2300 	strex	r3, r2, [r1]
 800ea30:	62bb      	str	r3, [r7, #40]	; 0x28
 800ea32:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ea34:	2b00      	cmp	r3, #0
 800ea36:	d1e5      	bne.n	800ea04 <UART_RxISR_16BIT_FIFOEN+0x270>
 800ea38:	687b      	ldr	r3, [r7, #4]
 800ea3a:	4a15      	ldr	r2, [pc, #84]	; (800ea90 <UART_RxISR_16BIT_FIFOEN+0x2fc>)
 800ea3c:	671a      	str	r2, [r3, #112]	; 0x70
 800ea3e:	687b      	ldr	r3, [r7, #4]
 800ea40:	681b      	ldr	r3, [r3, #0]
 800ea42:	613b      	str	r3, [r7, #16]
 800ea44:	693b      	ldr	r3, [r7, #16]
 800ea46:	e853 3f00 	ldrex	r3, [r3]
 800ea4a:	60fb      	str	r3, [r7, #12]
 800ea4c:	68fb      	ldr	r3, [r7, #12]
 800ea4e:	f043 0320 	orr.w	r3, r3, #32
 800ea52:	673b      	str	r3, [r7, #112]	; 0x70
 800ea54:	687b      	ldr	r3, [r7, #4]
 800ea56:	681b      	ldr	r3, [r3, #0]
 800ea58:	461a      	mov	r2, r3
 800ea5a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800ea5c:	61fb      	str	r3, [r7, #28]
 800ea5e:	61ba      	str	r2, [r7, #24]
 800ea60:	69b9      	ldr	r1, [r7, #24]
 800ea62:	69fa      	ldr	r2, [r7, #28]
 800ea64:	e841 2300 	strex	r3, r2, [r1]
 800ea68:	617b      	str	r3, [r7, #20]
 800ea6a:	697b      	ldr	r3, [r7, #20]
 800ea6c:	2b00      	cmp	r3, #0
 800ea6e:	d1e6      	bne.n	800ea3e <UART_RxISR_16BIT_FIFOEN+0x2aa>
 800ea70:	e007      	b.n	800ea82 <UART_RxISR_16BIT_FIFOEN+0x2ee>
 800ea72:	687b      	ldr	r3, [r7, #4]
 800ea74:	681b      	ldr	r3, [r3, #0]
 800ea76:	699a      	ldr	r2, [r3, #24]
 800ea78:	687b      	ldr	r3, [r7, #4]
 800ea7a:	681b      	ldr	r3, [r3, #0]
 800ea7c:	f042 0208 	orr.w	r2, r2, #8
 800ea80:	619a      	str	r2, [r3, #24]
 800ea82:	bf00      	nop
 800ea84:	37a0      	adds	r7, #160	; 0xa0
 800ea86:	46bd      	mov	sp, r7
 800ea88:	bd80      	pop	{r7, pc}
 800ea8a:	bf00      	nop
 800ea8c:	effffffe 	.word	0xeffffffe
 800ea90:	0800e33b 	.word	0x0800e33b

0800ea94 <HAL_UARTEx_WakeupCallback>:
 800ea94:	b480      	push	{r7}
 800ea96:	b083      	sub	sp, #12
 800ea98:	af00      	add	r7, sp, #0
 800ea9a:	6078      	str	r0, [r7, #4]
 800ea9c:	bf00      	nop
 800ea9e:	370c      	adds	r7, #12
 800eaa0:	46bd      	mov	sp, r7
 800eaa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eaa6:	4770      	bx	lr

0800eaa8 <HAL_UARTEx_RxFifoFullCallback>:
 800eaa8:	b480      	push	{r7}
 800eaaa:	b083      	sub	sp, #12
 800eaac:	af00      	add	r7, sp, #0
 800eaae:	6078      	str	r0, [r7, #4]
 800eab0:	bf00      	nop
 800eab2:	370c      	adds	r7, #12
 800eab4:	46bd      	mov	sp, r7
 800eab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eaba:	4770      	bx	lr

0800eabc <HAL_UARTEx_TxFifoEmptyCallback>:
 800eabc:	b480      	push	{r7}
 800eabe:	b083      	sub	sp, #12
 800eac0:	af00      	add	r7, sp, #0
 800eac2:	6078      	str	r0, [r7, #4]
 800eac4:	bf00      	nop
 800eac6:	370c      	adds	r7, #12
 800eac8:	46bd      	mov	sp, r7
 800eaca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eace:	4770      	bx	lr

0800ead0 <HAL_UARTEx_DisableFifoMode>:
 800ead0:	b480      	push	{r7}
 800ead2:	b085      	sub	sp, #20
 800ead4:	af00      	add	r7, sp, #0
 800ead6:	6078      	str	r0, [r7, #4]
 800ead8:	687b      	ldr	r3, [r7, #4]
 800eada:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800eade:	2b01      	cmp	r3, #1
 800eae0:	d101      	bne.n	800eae6 <HAL_UARTEx_DisableFifoMode+0x16>
 800eae2:	2302      	movs	r3, #2
 800eae4:	e027      	b.n	800eb36 <HAL_UARTEx_DisableFifoMode+0x66>
 800eae6:	687b      	ldr	r3, [r7, #4]
 800eae8:	2201      	movs	r2, #1
 800eaea:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800eaee:	687b      	ldr	r3, [r7, #4]
 800eaf0:	2224      	movs	r2, #36	; 0x24
 800eaf2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800eaf6:	687b      	ldr	r3, [r7, #4]
 800eaf8:	681b      	ldr	r3, [r3, #0]
 800eafa:	681b      	ldr	r3, [r3, #0]
 800eafc:	60fb      	str	r3, [r7, #12]
 800eafe:	687b      	ldr	r3, [r7, #4]
 800eb00:	681b      	ldr	r3, [r3, #0]
 800eb02:	681a      	ldr	r2, [r3, #0]
 800eb04:	687b      	ldr	r3, [r7, #4]
 800eb06:	681b      	ldr	r3, [r3, #0]
 800eb08:	f022 0201 	bic.w	r2, r2, #1
 800eb0c:	601a      	str	r2, [r3, #0]
 800eb0e:	68fb      	ldr	r3, [r7, #12]
 800eb10:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 800eb14:	60fb      	str	r3, [r7, #12]
 800eb16:	687b      	ldr	r3, [r7, #4]
 800eb18:	2200      	movs	r2, #0
 800eb1a:	665a      	str	r2, [r3, #100]	; 0x64
 800eb1c:	687b      	ldr	r3, [r7, #4]
 800eb1e:	681b      	ldr	r3, [r3, #0]
 800eb20:	68fa      	ldr	r2, [r7, #12]
 800eb22:	601a      	str	r2, [r3, #0]
 800eb24:	687b      	ldr	r3, [r7, #4]
 800eb26:	2220      	movs	r2, #32
 800eb28:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800eb2c:	687b      	ldr	r3, [r7, #4]
 800eb2e:	2200      	movs	r2, #0
 800eb30:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800eb34:	2300      	movs	r3, #0
 800eb36:	4618      	mov	r0, r3
 800eb38:	3714      	adds	r7, #20
 800eb3a:	46bd      	mov	sp, r7
 800eb3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb40:	4770      	bx	lr

0800eb42 <HAL_UARTEx_SetTxFifoThreshold>:
 800eb42:	b580      	push	{r7, lr}
 800eb44:	b084      	sub	sp, #16
 800eb46:	af00      	add	r7, sp, #0
 800eb48:	6078      	str	r0, [r7, #4]
 800eb4a:	6039      	str	r1, [r7, #0]
 800eb4c:	687b      	ldr	r3, [r7, #4]
 800eb4e:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800eb52:	2b01      	cmp	r3, #1
 800eb54:	d101      	bne.n	800eb5a <HAL_UARTEx_SetTxFifoThreshold+0x18>
 800eb56:	2302      	movs	r3, #2
 800eb58:	e02d      	b.n	800ebb6 <HAL_UARTEx_SetTxFifoThreshold+0x74>
 800eb5a:	687b      	ldr	r3, [r7, #4]
 800eb5c:	2201      	movs	r2, #1
 800eb5e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800eb62:	687b      	ldr	r3, [r7, #4]
 800eb64:	2224      	movs	r2, #36	; 0x24
 800eb66:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800eb6a:	687b      	ldr	r3, [r7, #4]
 800eb6c:	681b      	ldr	r3, [r3, #0]
 800eb6e:	681b      	ldr	r3, [r3, #0]
 800eb70:	60fb      	str	r3, [r7, #12]
 800eb72:	687b      	ldr	r3, [r7, #4]
 800eb74:	681b      	ldr	r3, [r3, #0]
 800eb76:	681a      	ldr	r2, [r3, #0]
 800eb78:	687b      	ldr	r3, [r7, #4]
 800eb7a:	681b      	ldr	r3, [r3, #0]
 800eb7c:	f022 0201 	bic.w	r2, r2, #1
 800eb80:	601a      	str	r2, [r3, #0]
 800eb82:	687b      	ldr	r3, [r7, #4]
 800eb84:	681b      	ldr	r3, [r3, #0]
 800eb86:	689b      	ldr	r3, [r3, #8]
 800eb88:	f023 4160 	bic.w	r1, r3, #3758096384	; 0xe0000000
 800eb8c:	687b      	ldr	r3, [r7, #4]
 800eb8e:	681b      	ldr	r3, [r3, #0]
 800eb90:	683a      	ldr	r2, [r7, #0]
 800eb92:	430a      	orrs	r2, r1
 800eb94:	609a      	str	r2, [r3, #8]
 800eb96:	6878      	ldr	r0, [r7, #4]
 800eb98:	f000 f850 	bl	800ec3c <UARTEx_SetNbDataToProcess>
 800eb9c:	687b      	ldr	r3, [r7, #4]
 800eb9e:	681b      	ldr	r3, [r3, #0]
 800eba0:	68fa      	ldr	r2, [r7, #12]
 800eba2:	601a      	str	r2, [r3, #0]
 800eba4:	687b      	ldr	r3, [r7, #4]
 800eba6:	2220      	movs	r2, #32
 800eba8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800ebac:	687b      	ldr	r3, [r7, #4]
 800ebae:	2200      	movs	r2, #0
 800ebb0:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800ebb4:	2300      	movs	r3, #0
 800ebb6:	4618      	mov	r0, r3
 800ebb8:	3710      	adds	r7, #16
 800ebba:	46bd      	mov	sp, r7
 800ebbc:	bd80      	pop	{r7, pc}

0800ebbe <HAL_UARTEx_SetRxFifoThreshold>:
 800ebbe:	b580      	push	{r7, lr}
 800ebc0:	b084      	sub	sp, #16
 800ebc2:	af00      	add	r7, sp, #0
 800ebc4:	6078      	str	r0, [r7, #4]
 800ebc6:	6039      	str	r1, [r7, #0]
 800ebc8:	687b      	ldr	r3, [r7, #4]
 800ebca:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800ebce:	2b01      	cmp	r3, #1
 800ebd0:	d101      	bne.n	800ebd6 <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800ebd2:	2302      	movs	r3, #2
 800ebd4:	e02d      	b.n	800ec32 <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800ebd6:	687b      	ldr	r3, [r7, #4]
 800ebd8:	2201      	movs	r2, #1
 800ebda:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800ebde:	687b      	ldr	r3, [r7, #4]
 800ebe0:	2224      	movs	r2, #36	; 0x24
 800ebe2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800ebe6:	687b      	ldr	r3, [r7, #4]
 800ebe8:	681b      	ldr	r3, [r3, #0]
 800ebea:	681b      	ldr	r3, [r3, #0]
 800ebec:	60fb      	str	r3, [r7, #12]
 800ebee:	687b      	ldr	r3, [r7, #4]
 800ebf0:	681b      	ldr	r3, [r3, #0]
 800ebf2:	681a      	ldr	r2, [r3, #0]
 800ebf4:	687b      	ldr	r3, [r7, #4]
 800ebf6:	681b      	ldr	r3, [r3, #0]
 800ebf8:	f022 0201 	bic.w	r2, r2, #1
 800ebfc:	601a      	str	r2, [r3, #0]
 800ebfe:	687b      	ldr	r3, [r7, #4]
 800ec00:	681b      	ldr	r3, [r3, #0]
 800ec02:	689b      	ldr	r3, [r3, #8]
 800ec04:	f023 6160 	bic.w	r1, r3, #234881024	; 0xe000000
 800ec08:	687b      	ldr	r3, [r7, #4]
 800ec0a:	681b      	ldr	r3, [r3, #0]
 800ec0c:	683a      	ldr	r2, [r7, #0]
 800ec0e:	430a      	orrs	r2, r1
 800ec10:	609a      	str	r2, [r3, #8]
 800ec12:	6878      	ldr	r0, [r7, #4]
 800ec14:	f000 f812 	bl	800ec3c <UARTEx_SetNbDataToProcess>
 800ec18:	687b      	ldr	r3, [r7, #4]
 800ec1a:	681b      	ldr	r3, [r3, #0]
 800ec1c:	68fa      	ldr	r2, [r7, #12]
 800ec1e:	601a      	str	r2, [r3, #0]
 800ec20:	687b      	ldr	r3, [r7, #4]
 800ec22:	2220      	movs	r2, #32
 800ec24:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800ec28:	687b      	ldr	r3, [r7, #4]
 800ec2a:	2200      	movs	r2, #0
 800ec2c:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800ec30:	2300      	movs	r3, #0
 800ec32:	4618      	mov	r0, r3
 800ec34:	3710      	adds	r7, #16
 800ec36:	46bd      	mov	sp, r7
 800ec38:	bd80      	pop	{r7, pc}
	...

0800ec3c <UARTEx_SetNbDataToProcess>:
 800ec3c:	b480      	push	{r7}
 800ec3e:	b085      	sub	sp, #20
 800ec40:	af00      	add	r7, sp, #0
 800ec42:	6078      	str	r0, [r7, #4]
 800ec44:	687b      	ldr	r3, [r7, #4]
 800ec46:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800ec48:	2b00      	cmp	r3, #0
 800ec4a:	d108      	bne.n	800ec5e <UARTEx_SetNbDataToProcess+0x22>
 800ec4c:	687b      	ldr	r3, [r7, #4]
 800ec4e:	2201      	movs	r2, #1
 800ec50:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800ec54:	687b      	ldr	r3, [r7, #4]
 800ec56:	2201      	movs	r2, #1
 800ec58:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800ec5c:	e031      	b.n	800ecc2 <UARTEx_SetNbDataToProcess+0x86>
 800ec5e:	2310      	movs	r3, #16
 800ec60:	73fb      	strb	r3, [r7, #15]
 800ec62:	2310      	movs	r3, #16
 800ec64:	73bb      	strb	r3, [r7, #14]
 800ec66:	687b      	ldr	r3, [r7, #4]
 800ec68:	681b      	ldr	r3, [r3, #0]
 800ec6a:	689b      	ldr	r3, [r3, #8]
 800ec6c:	0e5b      	lsrs	r3, r3, #25
 800ec6e:	b2db      	uxtb	r3, r3
 800ec70:	f003 0307 	and.w	r3, r3, #7
 800ec74:	737b      	strb	r3, [r7, #13]
 800ec76:	687b      	ldr	r3, [r7, #4]
 800ec78:	681b      	ldr	r3, [r3, #0]
 800ec7a:	689b      	ldr	r3, [r3, #8]
 800ec7c:	0f5b      	lsrs	r3, r3, #29
 800ec7e:	b2db      	uxtb	r3, r3
 800ec80:	f003 0307 	and.w	r3, r3, #7
 800ec84:	733b      	strb	r3, [r7, #12]
 800ec86:	7bbb      	ldrb	r3, [r7, #14]
 800ec88:	7b3a      	ldrb	r2, [r7, #12]
 800ec8a:	4911      	ldr	r1, [pc, #68]	; (800ecd0 <UARTEx_SetNbDataToProcess+0x94>)
 800ec8c:	5c8a      	ldrb	r2, [r1, r2]
 800ec8e:	fb02 f303 	mul.w	r3, r2, r3
 800ec92:	7b3a      	ldrb	r2, [r7, #12]
 800ec94:	490f      	ldr	r1, [pc, #60]	; (800ecd4 <UARTEx_SetNbDataToProcess+0x98>)
 800ec96:	5c8a      	ldrb	r2, [r1, r2]
 800ec98:	fb93 f3f2 	sdiv	r3, r3, r2
 800ec9c:	b29a      	uxth	r2, r3
 800ec9e:	687b      	ldr	r3, [r7, #4]
 800eca0:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800eca4:	7bfb      	ldrb	r3, [r7, #15]
 800eca6:	7b7a      	ldrb	r2, [r7, #13]
 800eca8:	4909      	ldr	r1, [pc, #36]	; (800ecd0 <UARTEx_SetNbDataToProcess+0x94>)
 800ecaa:	5c8a      	ldrb	r2, [r1, r2]
 800ecac:	fb02 f303 	mul.w	r3, r2, r3
 800ecb0:	7b7a      	ldrb	r2, [r7, #13]
 800ecb2:	4908      	ldr	r1, [pc, #32]	; (800ecd4 <UARTEx_SetNbDataToProcess+0x98>)
 800ecb4:	5c8a      	ldrb	r2, [r1, r2]
 800ecb6:	fb93 f3f2 	sdiv	r3, r3, r2
 800ecba:	b29a      	uxth	r2, r3
 800ecbc:	687b      	ldr	r3, [r7, #4]
 800ecbe:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800ecc2:	bf00      	nop
 800ecc4:	3714      	adds	r7, #20
 800ecc6:	46bd      	mov	sp, r7
 800ecc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eccc:	4770      	bx	lr
 800ecce:	bf00      	nop
 800ecd0:	08012338 	.word	0x08012338
 800ecd4:	08012340 	.word	0x08012340

0800ecd8 <__errno>:
 800ecd8:	4b01      	ldr	r3, [pc, #4]	; (800ece0 <__errno+0x8>)
 800ecda:	6818      	ldr	r0, [r3, #0]
 800ecdc:	4770      	bx	lr
 800ecde:	bf00      	nop
 800ece0:	24000100 	.word	0x24000100

0800ece4 <__libc_init_array>:
 800ece4:	b570      	push	{r4, r5, r6, lr}
 800ece6:	4d0d      	ldr	r5, [pc, #52]	; (800ed1c <__libc_init_array+0x38>)
 800ece8:	4c0d      	ldr	r4, [pc, #52]	; (800ed20 <__libc_init_array+0x3c>)
 800ecea:	1b64      	subs	r4, r4, r5
 800ecec:	10a4      	asrs	r4, r4, #2
 800ecee:	2600      	movs	r6, #0
 800ecf0:	42a6      	cmp	r6, r4
 800ecf2:	d109      	bne.n	800ed08 <__libc_init_array+0x24>
 800ecf4:	4d0b      	ldr	r5, [pc, #44]	; (800ed24 <__libc_init_array+0x40>)
 800ecf6:	4c0c      	ldr	r4, [pc, #48]	; (800ed28 <__libc_init_array+0x44>)
 800ecf8:	f003 fae8 	bl	80122cc <_init>
 800ecfc:	1b64      	subs	r4, r4, r5
 800ecfe:	10a4      	asrs	r4, r4, #2
 800ed00:	2600      	movs	r6, #0
 800ed02:	42a6      	cmp	r6, r4
 800ed04:	d105      	bne.n	800ed12 <__libc_init_array+0x2e>
 800ed06:	bd70      	pop	{r4, r5, r6, pc}
 800ed08:	f855 3b04 	ldr.w	r3, [r5], #4
 800ed0c:	4798      	blx	r3
 800ed0e:	3601      	adds	r6, #1
 800ed10:	e7ee      	b.n	800ecf0 <__libc_init_array+0xc>
 800ed12:	f855 3b04 	ldr.w	r3, [r5], #4
 800ed16:	4798      	blx	r3
 800ed18:	3601      	adds	r6, #1
 800ed1a:	e7f2      	b.n	800ed02 <__libc_init_array+0x1e>
 800ed1c:	08014038 	.word	0x08014038
 800ed20:	08014038 	.word	0x08014038
 800ed24:	08014038 	.word	0x08014038
 800ed28:	0801403c 	.word	0x0801403c

0800ed2c <memcpy>:
 800ed2c:	440a      	add	r2, r1
 800ed2e:	4291      	cmp	r1, r2
 800ed30:	f100 33ff 	add.w	r3, r0, #4294967295
 800ed34:	d100      	bne.n	800ed38 <memcpy+0xc>
 800ed36:	4770      	bx	lr
 800ed38:	b510      	push	{r4, lr}
 800ed3a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800ed3e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800ed42:	4291      	cmp	r1, r2
 800ed44:	d1f9      	bne.n	800ed3a <memcpy+0xe>
 800ed46:	bd10      	pop	{r4, pc}

0800ed48 <memset>:
 800ed48:	4402      	add	r2, r0
 800ed4a:	4603      	mov	r3, r0
 800ed4c:	4293      	cmp	r3, r2
 800ed4e:	d100      	bne.n	800ed52 <memset+0xa>
 800ed50:	4770      	bx	lr
 800ed52:	f803 1b01 	strb.w	r1, [r3], #1
 800ed56:	e7f9      	b.n	800ed4c <memset+0x4>

0800ed58 <sulp>:
 800ed58:	b570      	push	{r4, r5, r6, lr}
 800ed5a:	4604      	mov	r4, r0
 800ed5c:	460d      	mov	r5, r1
 800ed5e:	4616      	mov	r6, r2
 800ed60:	ec45 4b10 	vmov	d0, r4, r5
 800ed64:	f001 fcca 	bl	80106fc <__ulp>
 800ed68:	b17e      	cbz	r6, 800ed8a <sulp+0x32>
 800ed6a:	f3c5 530a 	ubfx	r3, r5, #20, #11
 800ed6e:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800ed72:	2b00      	cmp	r3, #0
 800ed74:	dd09      	ble.n	800ed8a <sulp+0x32>
 800ed76:	051b      	lsls	r3, r3, #20
 800ed78:	f103 517f 	add.w	r1, r3, #1069547520	; 0x3fc00000
 800ed7c:	2000      	movs	r0, #0
 800ed7e:	f501 1140 	add.w	r1, r1, #3145728	; 0x300000
 800ed82:	ec41 0b17 	vmov	d7, r0, r1
 800ed86:	ee20 0b07 	vmul.f64	d0, d0, d7
 800ed8a:	bd70      	pop	{r4, r5, r6, pc}
 800ed8c:	0000      	movs	r0, r0
	...

0800ed90 <_strtod_l>:
 800ed90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed94:	ed2d 8b0e 	vpush	{d8-d14}
 800ed98:	b097      	sub	sp, #92	; 0x5c
 800ed9a:	461f      	mov	r7, r3
 800ed9c:	2300      	movs	r3, #0
 800ed9e:	9312      	str	r3, [sp, #72]	; 0x48
 800eda0:	4ba1      	ldr	r3, [pc, #644]	; (800f028 <_strtod_l+0x298>)
 800eda2:	920d      	str	r2, [sp, #52]	; 0x34
 800eda4:	681b      	ldr	r3, [r3, #0]
 800eda6:	9307      	str	r3, [sp, #28]
 800eda8:	4604      	mov	r4, r0
 800edaa:	4618      	mov	r0, r3
 800edac:	468b      	mov	fp, r1
 800edae:	f7f1 fa97 	bl	80002e0 <strlen>
 800edb2:	f04f 0800 	mov.w	r8, #0
 800edb6:	4605      	mov	r5, r0
 800edb8:	f04f 0900 	mov.w	r9, #0
 800edbc:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
 800edc0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800edc2:	7813      	ldrb	r3, [r2, #0]
 800edc4:	2b2b      	cmp	r3, #43	; 0x2b
 800edc6:	d04d      	beq.n	800ee64 <_strtod_l+0xd4>
 800edc8:	d83a      	bhi.n	800ee40 <_strtod_l+0xb0>
 800edca:	2b0d      	cmp	r3, #13
 800edcc:	d833      	bhi.n	800ee36 <_strtod_l+0xa6>
 800edce:	2b08      	cmp	r3, #8
 800edd0:	d833      	bhi.n	800ee3a <_strtod_l+0xaa>
 800edd2:	2b00      	cmp	r3, #0
 800edd4:	d03d      	beq.n	800ee52 <_strtod_l+0xc2>
 800edd6:	2300      	movs	r3, #0
 800edd8:	9308      	str	r3, [sp, #32]
 800edda:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800eddc:	7833      	ldrb	r3, [r6, #0]
 800edde:	2b30      	cmp	r3, #48	; 0x30
 800ede0:	f040 80b0 	bne.w	800ef44 <_strtod_l+0x1b4>
 800ede4:	7873      	ldrb	r3, [r6, #1]
 800ede6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800edea:	2b58      	cmp	r3, #88	; 0x58
 800edec:	d167      	bne.n	800eebe <_strtod_l+0x12e>
 800edee:	9b08      	ldr	r3, [sp, #32]
 800edf0:	9301      	str	r3, [sp, #4]
 800edf2:	ab12      	add	r3, sp, #72	; 0x48
 800edf4:	9702      	str	r7, [sp, #8]
 800edf6:	9300      	str	r3, [sp, #0]
 800edf8:	4a8c      	ldr	r2, [pc, #560]	; (800f02c <_strtod_l+0x29c>)
 800edfa:	ab13      	add	r3, sp, #76	; 0x4c
 800edfc:	a911      	add	r1, sp, #68	; 0x44
 800edfe:	4620      	mov	r0, r4
 800ee00:	f000 fdf0 	bl	800f9e4 <__gethex>
 800ee04:	f010 0507 	ands.w	r5, r0, #7
 800ee08:	4607      	mov	r7, r0
 800ee0a:	d005      	beq.n	800ee18 <_strtod_l+0x88>
 800ee0c:	2d06      	cmp	r5, #6
 800ee0e:	d12b      	bne.n	800ee68 <_strtod_l+0xd8>
 800ee10:	3601      	adds	r6, #1
 800ee12:	2300      	movs	r3, #0
 800ee14:	9611      	str	r6, [sp, #68]	; 0x44
 800ee16:	9308      	str	r3, [sp, #32]
 800ee18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ee1a:	2b00      	cmp	r3, #0
 800ee1c:	f040 854e 	bne.w	800f8bc <_strtod_l+0xb2c>
 800ee20:	9b08      	ldr	r3, [sp, #32]
 800ee22:	b1e3      	cbz	r3, 800ee5e <_strtod_l+0xce>
 800ee24:	ec49 8b17 	vmov	d7, r8, r9
 800ee28:	eeb1 0b47 	vneg.f64	d0, d7
 800ee2c:	b017      	add	sp, #92	; 0x5c
 800ee2e:	ecbd 8b0e 	vpop	{d8-d14}
 800ee32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ee36:	2b20      	cmp	r3, #32
 800ee38:	d1cd      	bne.n	800edd6 <_strtod_l+0x46>
 800ee3a:	3201      	adds	r2, #1
 800ee3c:	9211      	str	r2, [sp, #68]	; 0x44
 800ee3e:	e7bf      	b.n	800edc0 <_strtod_l+0x30>
 800ee40:	2b2d      	cmp	r3, #45	; 0x2d
 800ee42:	d1c8      	bne.n	800edd6 <_strtod_l+0x46>
 800ee44:	2301      	movs	r3, #1
 800ee46:	9308      	str	r3, [sp, #32]
 800ee48:	1c53      	adds	r3, r2, #1
 800ee4a:	9311      	str	r3, [sp, #68]	; 0x44
 800ee4c:	7853      	ldrb	r3, [r2, #1]
 800ee4e:	2b00      	cmp	r3, #0
 800ee50:	d1c3      	bne.n	800edda <_strtod_l+0x4a>
 800ee52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ee54:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
 800ee58:	2b00      	cmp	r3, #0
 800ee5a:	f040 852d 	bne.w	800f8b8 <_strtod_l+0xb28>
 800ee5e:	ec49 8b10 	vmov	d0, r8, r9
 800ee62:	e7e3      	b.n	800ee2c <_strtod_l+0x9c>
 800ee64:	2300      	movs	r3, #0
 800ee66:	e7ee      	b.n	800ee46 <_strtod_l+0xb6>
 800ee68:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ee6a:	b13a      	cbz	r2, 800ee7c <_strtod_l+0xec>
 800ee6c:	2135      	movs	r1, #53	; 0x35
 800ee6e:	a814      	add	r0, sp, #80	; 0x50
 800ee70:	f001 fd4c 	bl	801090c <__copybits>
 800ee74:	9912      	ldr	r1, [sp, #72]	; 0x48
 800ee76:	4620      	mov	r0, r4
 800ee78:	f001 f90e 	bl	8010098 <_Bfree>
 800ee7c:	3d01      	subs	r5, #1
 800ee7e:	2d04      	cmp	r5, #4
 800ee80:	d806      	bhi.n	800ee90 <_strtod_l+0x100>
 800ee82:	e8df f005 	tbb	[pc, r5]
 800ee86:	030a      	.short	0x030a
 800ee88:	1714      	.short	0x1714
 800ee8a:	0a          	.byte	0x0a
 800ee8b:	00          	.byte	0x00
 800ee8c:	e9dd 8914 	ldrd	r8, r9, [sp, #80]	; 0x50
 800ee90:	073f      	lsls	r7, r7, #28
 800ee92:	d5c1      	bpl.n	800ee18 <_strtod_l+0x88>
 800ee94:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 800ee98:	e7be      	b.n	800ee18 <_strtod_l+0x88>
 800ee9a:	e9dd 8314 	ldrd	r8, r3, [sp, #80]	; 0x50
 800ee9e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800eea0:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800eea4:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800eea8:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 800eeac:	e7f0      	b.n	800ee90 <_strtod_l+0x100>
 800eeae:	f8df 9180 	ldr.w	r9, [pc, #384]	; 800f030 <_strtod_l+0x2a0>
 800eeb2:	e7ed      	b.n	800ee90 <_strtod_l+0x100>
 800eeb4:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 800eeb8:	f04f 38ff 	mov.w	r8, #4294967295
 800eebc:	e7e8      	b.n	800ee90 <_strtod_l+0x100>
 800eebe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800eec0:	1c5a      	adds	r2, r3, #1
 800eec2:	9211      	str	r2, [sp, #68]	; 0x44
 800eec4:	785b      	ldrb	r3, [r3, #1]
 800eec6:	2b30      	cmp	r3, #48	; 0x30
 800eec8:	d0f9      	beq.n	800eebe <_strtod_l+0x12e>
 800eeca:	2b00      	cmp	r3, #0
 800eecc:	d0a4      	beq.n	800ee18 <_strtod_l+0x88>
 800eece:	2301      	movs	r3, #1
 800eed0:	f04f 0a00 	mov.w	sl, #0
 800eed4:	9304      	str	r3, [sp, #16]
 800eed6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800eed8:	930a      	str	r3, [sp, #40]	; 0x28
 800eeda:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800eede:	f8cd a018 	str.w	sl, [sp, #24]
 800eee2:	220a      	movs	r2, #10
 800eee4:	9811      	ldr	r0, [sp, #68]	; 0x44
 800eee6:	7807      	ldrb	r7, [r0, #0]
 800eee8:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
 800eeec:	b2d9      	uxtb	r1, r3
 800eeee:	2909      	cmp	r1, #9
 800eef0:	d92a      	bls.n	800ef48 <_strtod_l+0x1b8>
 800eef2:	9907      	ldr	r1, [sp, #28]
 800eef4:	462a      	mov	r2, r5
 800eef6:	f001 fe0f 	bl	8010b18 <strncmp>
 800eefa:	2800      	cmp	r0, #0
 800eefc:	d033      	beq.n	800ef66 <_strtod_l+0x1d6>
 800eefe:	2000      	movs	r0, #0
 800ef00:	9b06      	ldr	r3, [sp, #24]
 800ef02:	463a      	mov	r2, r7
 800ef04:	4601      	mov	r1, r0
 800ef06:	4607      	mov	r7, r0
 800ef08:	2a65      	cmp	r2, #101	; 0x65
 800ef0a:	d001      	beq.n	800ef10 <_strtod_l+0x180>
 800ef0c:	2a45      	cmp	r2, #69	; 0x45
 800ef0e:	d117      	bne.n	800ef40 <_strtod_l+0x1b0>
 800ef10:	b91b      	cbnz	r3, 800ef1a <_strtod_l+0x18a>
 800ef12:	9b04      	ldr	r3, [sp, #16]
 800ef14:	4303      	orrs	r3, r0
 800ef16:	d09c      	beq.n	800ee52 <_strtod_l+0xc2>
 800ef18:	2300      	movs	r3, #0
 800ef1a:	f8dd b044 	ldr.w	fp, [sp, #68]	; 0x44
 800ef1e:	f10b 0201 	add.w	r2, fp, #1
 800ef22:	9211      	str	r2, [sp, #68]	; 0x44
 800ef24:	f89b 2001 	ldrb.w	r2, [fp, #1]
 800ef28:	2a2b      	cmp	r2, #43	; 0x2b
 800ef2a:	d071      	beq.n	800f010 <_strtod_l+0x280>
 800ef2c:	2a2d      	cmp	r2, #45	; 0x2d
 800ef2e:	d077      	beq.n	800f020 <_strtod_l+0x290>
 800ef30:	f04f 0e00 	mov.w	lr, #0
 800ef34:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 800ef38:	2d09      	cmp	r5, #9
 800ef3a:	d97f      	bls.n	800f03c <_strtod_l+0x2ac>
 800ef3c:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
 800ef40:	2500      	movs	r5, #0
 800ef42:	e09b      	b.n	800f07c <_strtod_l+0x2ec>
 800ef44:	2300      	movs	r3, #0
 800ef46:	e7c3      	b.n	800eed0 <_strtod_l+0x140>
 800ef48:	9906      	ldr	r1, [sp, #24]
 800ef4a:	2908      	cmp	r1, #8
 800ef4c:	bfdd      	ittte	le
 800ef4e:	9909      	ldrle	r1, [sp, #36]	; 0x24
 800ef50:	fb02 3301 	mlale	r3, r2, r1, r3
 800ef54:	9309      	strle	r3, [sp, #36]	; 0x24
 800ef56:	fb02 3a0a 	mlagt	sl, r2, sl, r3
 800ef5a:	9b06      	ldr	r3, [sp, #24]
 800ef5c:	3001      	adds	r0, #1
 800ef5e:	3301      	adds	r3, #1
 800ef60:	9306      	str	r3, [sp, #24]
 800ef62:	9011      	str	r0, [sp, #68]	; 0x44
 800ef64:	e7be      	b.n	800eee4 <_strtod_l+0x154>
 800ef66:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800ef68:	195a      	adds	r2, r3, r5
 800ef6a:	9211      	str	r2, [sp, #68]	; 0x44
 800ef6c:	5d5a      	ldrb	r2, [r3, r5]
 800ef6e:	9b06      	ldr	r3, [sp, #24]
 800ef70:	b3a3      	cbz	r3, 800efdc <_strtod_l+0x24c>
 800ef72:	4607      	mov	r7, r0
 800ef74:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800ef78:	2909      	cmp	r1, #9
 800ef7a:	d912      	bls.n	800efa2 <_strtod_l+0x212>
 800ef7c:	2101      	movs	r1, #1
 800ef7e:	e7c3      	b.n	800ef08 <_strtod_l+0x178>
 800ef80:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800ef82:	1c5a      	adds	r2, r3, #1
 800ef84:	9211      	str	r2, [sp, #68]	; 0x44
 800ef86:	785a      	ldrb	r2, [r3, #1]
 800ef88:	3001      	adds	r0, #1
 800ef8a:	2a30      	cmp	r2, #48	; 0x30
 800ef8c:	d0f8      	beq.n	800ef80 <_strtod_l+0x1f0>
 800ef8e:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800ef92:	2b08      	cmp	r3, #8
 800ef94:	f200 8497 	bhi.w	800f8c6 <_strtod_l+0xb36>
 800ef98:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800ef9a:	930a      	str	r3, [sp, #40]	; 0x28
 800ef9c:	4607      	mov	r7, r0
 800ef9e:	2000      	movs	r0, #0
 800efa0:	4603      	mov	r3, r0
 800efa2:	3a30      	subs	r2, #48	; 0x30
 800efa4:	f100 0101 	add.w	r1, r0, #1
 800efa8:	d012      	beq.n	800efd0 <_strtod_l+0x240>
 800efaa:	440f      	add	r7, r1
 800efac:	eb00 0c03 	add.w	ip, r0, r3
 800efb0:	4619      	mov	r1, r3
 800efb2:	250a      	movs	r5, #10
 800efb4:	4561      	cmp	r1, ip
 800efb6:	d113      	bne.n	800efe0 <_strtod_l+0x250>
 800efb8:	1819      	adds	r1, r3, r0
 800efba:	2908      	cmp	r1, #8
 800efbc:	f103 0301 	add.w	r3, r3, #1
 800efc0:	4403      	add	r3, r0
 800efc2:	dc1c      	bgt.n	800effe <_strtod_l+0x26e>
 800efc4:	9809      	ldr	r0, [sp, #36]	; 0x24
 800efc6:	210a      	movs	r1, #10
 800efc8:	fb01 2200 	mla	r2, r1, r0, r2
 800efcc:	9209      	str	r2, [sp, #36]	; 0x24
 800efce:	2100      	movs	r1, #0
 800efd0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800efd2:	1c50      	adds	r0, r2, #1
 800efd4:	9011      	str	r0, [sp, #68]	; 0x44
 800efd6:	7852      	ldrb	r2, [r2, #1]
 800efd8:	4608      	mov	r0, r1
 800efda:	e7cb      	b.n	800ef74 <_strtod_l+0x1e4>
 800efdc:	9806      	ldr	r0, [sp, #24]
 800efde:	e7d4      	b.n	800ef8a <_strtod_l+0x1fa>
 800efe0:	2908      	cmp	r1, #8
 800efe2:	dc04      	bgt.n	800efee <_strtod_l+0x25e>
 800efe4:	9e09      	ldr	r6, [sp, #36]	; 0x24
 800efe6:	436e      	muls	r6, r5
 800efe8:	9609      	str	r6, [sp, #36]	; 0x24
 800efea:	3101      	adds	r1, #1
 800efec:	e7e2      	b.n	800efb4 <_strtod_l+0x224>
 800efee:	f101 0e01 	add.w	lr, r1, #1
 800eff2:	f1be 0f10 	cmp.w	lr, #16
 800eff6:	bfd8      	it	le
 800eff8:	fb05 fa0a 	mulle.w	sl, r5, sl
 800effc:	e7f5      	b.n	800efea <_strtod_l+0x25a>
 800effe:	2b10      	cmp	r3, #16
 800f000:	bfdc      	itt	le
 800f002:	210a      	movle	r1, #10
 800f004:	fb01 2a0a 	mlale	sl, r1, sl, r2
 800f008:	e7e1      	b.n	800efce <_strtod_l+0x23e>
 800f00a:	2700      	movs	r7, #0
 800f00c:	2101      	movs	r1, #1
 800f00e:	e780      	b.n	800ef12 <_strtod_l+0x182>
 800f010:	f04f 0e00 	mov.w	lr, #0
 800f014:	f10b 0202 	add.w	r2, fp, #2
 800f018:	9211      	str	r2, [sp, #68]	; 0x44
 800f01a:	f89b 2002 	ldrb.w	r2, [fp, #2]
 800f01e:	e789      	b.n	800ef34 <_strtod_l+0x1a4>
 800f020:	f04f 0e01 	mov.w	lr, #1
 800f024:	e7f6      	b.n	800f014 <_strtod_l+0x284>
 800f026:	bf00      	nop
 800f028:	08012420 	.word	0x08012420
 800f02c:	08012358 	.word	0x08012358
 800f030:	7ff00000 	.word	0x7ff00000
 800f034:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f036:	1c55      	adds	r5, r2, #1
 800f038:	9511      	str	r5, [sp, #68]	; 0x44
 800f03a:	7852      	ldrb	r2, [r2, #1]
 800f03c:	2a30      	cmp	r2, #48	; 0x30
 800f03e:	d0f9      	beq.n	800f034 <_strtod_l+0x2a4>
 800f040:	f1a2 0531 	sub.w	r5, r2, #49	; 0x31
 800f044:	2d08      	cmp	r5, #8
 800f046:	f63f af7b 	bhi.w	800ef40 <_strtod_l+0x1b0>
 800f04a:	f1a2 0c30 	sub.w	ip, r2, #48	; 0x30
 800f04e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f050:	9207      	str	r2, [sp, #28]
 800f052:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f054:	1c55      	adds	r5, r2, #1
 800f056:	9511      	str	r5, [sp, #68]	; 0x44
 800f058:	7852      	ldrb	r2, [r2, #1]
 800f05a:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 800f05e:	2e09      	cmp	r6, #9
 800f060:	d937      	bls.n	800f0d2 <_strtod_l+0x342>
 800f062:	9e07      	ldr	r6, [sp, #28]
 800f064:	1bad      	subs	r5, r5, r6
 800f066:	2d08      	cmp	r5, #8
 800f068:	f644 651f 	movw	r5, #19999	; 0x4e1f
 800f06c:	dc02      	bgt.n	800f074 <_strtod_l+0x2e4>
 800f06e:	4565      	cmp	r5, ip
 800f070:	bfa8      	it	ge
 800f072:	4665      	movge	r5, ip
 800f074:	f1be 0f00 	cmp.w	lr, #0
 800f078:	d000      	beq.n	800f07c <_strtod_l+0x2ec>
 800f07a:	426d      	negs	r5, r5
 800f07c:	2b00      	cmp	r3, #0
 800f07e:	d14d      	bne.n	800f11c <_strtod_l+0x38c>
 800f080:	9b04      	ldr	r3, [sp, #16]
 800f082:	4303      	orrs	r3, r0
 800f084:	f47f aec8 	bne.w	800ee18 <_strtod_l+0x88>
 800f088:	2900      	cmp	r1, #0
 800f08a:	f47f aee2 	bne.w	800ee52 <_strtod_l+0xc2>
 800f08e:	2a69      	cmp	r2, #105	; 0x69
 800f090:	d027      	beq.n	800f0e2 <_strtod_l+0x352>
 800f092:	dc24      	bgt.n	800f0de <_strtod_l+0x34e>
 800f094:	2a49      	cmp	r2, #73	; 0x49
 800f096:	d024      	beq.n	800f0e2 <_strtod_l+0x352>
 800f098:	2a4e      	cmp	r2, #78	; 0x4e
 800f09a:	f47f aeda 	bne.w	800ee52 <_strtod_l+0xc2>
 800f09e:	4996      	ldr	r1, [pc, #600]	; (800f2f8 <_strtod_l+0x568>)
 800f0a0:	a811      	add	r0, sp, #68	; 0x44
 800f0a2:	f000 fef7 	bl	800fe94 <__match>
 800f0a6:	2800      	cmp	r0, #0
 800f0a8:	f43f aed3 	beq.w	800ee52 <_strtod_l+0xc2>
 800f0ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f0ae:	781b      	ldrb	r3, [r3, #0]
 800f0b0:	2b28      	cmp	r3, #40	; 0x28
 800f0b2:	d12d      	bne.n	800f110 <_strtod_l+0x380>
 800f0b4:	4991      	ldr	r1, [pc, #580]	; (800f2fc <_strtod_l+0x56c>)
 800f0b6:	aa14      	add	r2, sp, #80	; 0x50
 800f0b8:	a811      	add	r0, sp, #68	; 0x44
 800f0ba:	f000 feff 	bl	800febc <__hexnan>
 800f0be:	2805      	cmp	r0, #5
 800f0c0:	d126      	bne.n	800f110 <_strtod_l+0x380>
 800f0c2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800f0c4:	f8dd 8050 	ldr.w	r8, [sp, #80]	; 0x50
 800f0c8:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 800f0cc:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 800f0d0:	e6a2      	b.n	800ee18 <_strtod_l+0x88>
 800f0d2:	250a      	movs	r5, #10
 800f0d4:	fb05 250c 	mla	r5, r5, ip, r2
 800f0d8:	f1a5 0c30 	sub.w	ip, r5, #48	; 0x30
 800f0dc:	e7b9      	b.n	800f052 <_strtod_l+0x2c2>
 800f0de:	2a6e      	cmp	r2, #110	; 0x6e
 800f0e0:	e7db      	b.n	800f09a <_strtod_l+0x30a>
 800f0e2:	4987      	ldr	r1, [pc, #540]	; (800f300 <_strtod_l+0x570>)
 800f0e4:	a811      	add	r0, sp, #68	; 0x44
 800f0e6:	f000 fed5 	bl	800fe94 <__match>
 800f0ea:	2800      	cmp	r0, #0
 800f0ec:	f43f aeb1 	beq.w	800ee52 <_strtod_l+0xc2>
 800f0f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f0f2:	4984      	ldr	r1, [pc, #528]	; (800f304 <_strtod_l+0x574>)
 800f0f4:	3b01      	subs	r3, #1
 800f0f6:	a811      	add	r0, sp, #68	; 0x44
 800f0f8:	9311      	str	r3, [sp, #68]	; 0x44
 800f0fa:	f000 fecb 	bl	800fe94 <__match>
 800f0fe:	b910      	cbnz	r0, 800f106 <_strtod_l+0x376>
 800f100:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f102:	3301      	adds	r3, #1
 800f104:	9311      	str	r3, [sp, #68]	; 0x44
 800f106:	f8df 9210 	ldr.w	r9, [pc, #528]	; 800f318 <_strtod_l+0x588>
 800f10a:	f04f 0800 	mov.w	r8, #0
 800f10e:	e683      	b.n	800ee18 <_strtod_l+0x88>
 800f110:	487d      	ldr	r0, [pc, #500]	; (800f308 <_strtod_l+0x578>)
 800f112:	f001 fce9 	bl	8010ae8 <nan>
 800f116:	ec59 8b10 	vmov	r8, r9, d0
 800f11a:	e67d      	b.n	800ee18 <_strtod_l+0x88>
 800f11c:	1bea      	subs	r2, r5, r7
 800f11e:	eddd 7a09 	vldr	s15, [sp, #36]	; 0x24
 800f122:	9207      	str	r2, [sp, #28]
 800f124:	9a06      	ldr	r2, [sp, #24]
 800f126:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 800f12a:	2a00      	cmp	r2, #0
 800f12c:	bf08      	it	eq
 800f12e:	461a      	moveq	r2, r3
 800f130:	2b10      	cmp	r3, #16
 800f132:	9206      	str	r2, [sp, #24]
 800f134:	461a      	mov	r2, r3
 800f136:	bfa8      	it	ge
 800f138:	2210      	movge	r2, #16
 800f13a:	2b09      	cmp	r3, #9
 800f13c:	ec59 8b17 	vmov	r8, r9, d7
 800f140:	dd0c      	ble.n	800f15c <_strtod_l+0x3cc>
 800f142:	4972      	ldr	r1, [pc, #456]	; (800f30c <_strtod_l+0x57c>)
 800f144:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
 800f148:	ed11 5b12 	vldr	d5, [r1, #-72]	; 0xffffffb8
 800f14c:	ee06 aa90 	vmov	s13, sl
 800f150:	eeb8 6b66 	vcvt.f64.u32	d6, s13
 800f154:	eea7 6b05 	vfma.f64	d6, d7, d5
 800f158:	ec59 8b16 	vmov	r8, r9, d6
 800f15c:	2b0f      	cmp	r3, #15
 800f15e:	dc36      	bgt.n	800f1ce <_strtod_l+0x43e>
 800f160:	9907      	ldr	r1, [sp, #28]
 800f162:	2900      	cmp	r1, #0
 800f164:	f43f ae58 	beq.w	800ee18 <_strtod_l+0x88>
 800f168:	dd23      	ble.n	800f1b2 <_strtod_l+0x422>
 800f16a:	2916      	cmp	r1, #22
 800f16c:	dc0b      	bgt.n	800f186 <_strtod_l+0x3f6>
 800f16e:	4b67      	ldr	r3, [pc, #412]	; (800f30c <_strtod_l+0x57c>)
 800f170:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800f174:	ed93 7b00 	vldr	d7, [r3]
 800f178:	ec49 8b16 	vmov	d6, r8, r9
 800f17c:	ee27 7b06 	vmul.f64	d7, d7, d6
 800f180:	ec59 8b17 	vmov	r8, r9, d7
 800f184:	e648      	b.n	800ee18 <_strtod_l+0x88>
 800f186:	9807      	ldr	r0, [sp, #28]
 800f188:	f1c3 0125 	rsb	r1, r3, #37	; 0x25
 800f18c:	4281      	cmp	r1, r0
 800f18e:	db1e      	blt.n	800f1ce <_strtod_l+0x43e>
 800f190:	4a5e      	ldr	r2, [pc, #376]	; (800f30c <_strtod_l+0x57c>)
 800f192:	f1c3 030f 	rsb	r3, r3, #15
 800f196:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800f19a:	ed91 7b00 	vldr	d7, [r1]
 800f19e:	ec49 8b16 	vmov	d6, r8, r9
 800f1a2:	1ac3      	subs	r3, r0, r3
 800f1a4:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800f1a8:	ee27 7b06 	vmul.f64	d7, d7, d6
 800f1ac:	ed92 6b00 	vldr	d6, [r2]
 800f1b0:	e7e4      	b.n	800f17c <_strtod_l+0x3ec>
 800f1b2:	9907      	ldr	r1, [sp, #28]
 800f1b4:	3116      	adds	r1, #22
 800f1b6:	db0a      	blt.n	800f1ce <_strtod_l+0x43e>
 800f1b8:	4b54      	ldr	r3, [pc, #336]	; (800f30c <_strtod_l+0x57c>)
 800f1ba:	1b7d      	subs	r5, r7, r5
 800f1bc:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 800f1c0:	ed95 7b00 	vldr	d7, [r5]
 800f1c4:	ec49 8b16 	vmov	d6, r8, r9
 800f1c8:	ee86 7b07 	vdiv.f64	d7, d6, d7
 800f1cc:	e7d8      	b.n	800f180 <_strtod_l+0x3f0>
 800f1ce:	9907      	ldr	r1, [sp, #28]
 800f1d0:	1a9a      	subs	r2, r3, r2
 800f1d2:	440a      	add	r2, r1
 800f1d4:	2a00      	cmp	r2, #0
 800f1d6:	dd6f      	ble.n	800f2b8 <_strtod_l+0x528>
 800f1d8:	f012 000f 	ands.w	r0, r2, #15
 800f1dc:	d00a      	beq.n	800f1f4 <_strtod_l+0x464>
 800f1de:	494b      	ldr	r1, [pc, #300]	; (800f30c <_strtod_l+0x57c>)
 800f1e0:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 800f1e4:	ed91 7b00 	vldr	d7, [r1]
 800f1e8:	ec49 8b16 	vmov	d6, r8, r9
 800f1ec:	ee27 7b06 	vmul.f64	d7, d7, d6
 800f1f0:	ec59 8b17 	vmov	r8, r9, d7
 800f1f4:	f032 020f 	bics.w	r2, r2, #15
 800f1f8:	d04f      	beq.n	800f29a <_strtod_l+0x50a>
 800f1fa:	f5b2 7f9a 	cmp.w	r2, #308	; 0x134
 800f1fe:	dd22      	ble.n	800f246 <_strtod_l+0x4b6>
 800f200:	2500      	movs	r5, #0
 800f202:	462e      	mov	r6, r5
 800f204:	9506      	str	r5, [sp, #24]
 800f206:	462f      	mov	r7, r5
 800f208:	2322      	movs	r3, #34	; 0x22
 800f20a:	f8df 910c 	ldr.w	r9, [pc, #268]	; 800f318 <_strtod_l+0x588>
 800f20e:	6023      	str	r3, [r4, #0]
 800f210:	f04f 0800 	mov.w	r8, #0
 800f214:	9b06      	ldr	r3, [sp, #24]
 800f216:	2b00      	cmp	r3, #0
 800f218:	f43f adfe 	beq.w	800ee18 <_strtod_l+0x88>
 800f21c:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f21e:	4620      	mov	r0, r4
 800f220:	f000 ff3a 	bl	8010098 <_Bfree>
 800f224:	4639      	mov	r1, r7
 800f226:	4620      	mov	r0, r4
 800f228:	f000 ff36 	bl	8010098 <_Bfree>
 800f22c:	4631      	mov	r1, r6
 800f22e:	4620      	mov	r0, r4
 800f230:	f000 ff32 	bl	8010098 <_Bfree>
 800f234:	9906      	ldr	r1, [sp, #24]
 800f236:	4620      	mov	r0, r4
 800f238:	f000 ff2e 	bl	8010098 <_Bfree>
 800f23c:	4629      	mov	r1, r5
 800f23e:	4620      	mov	r0, r4
 800f240:	f000 ff2a 	bl	8010098 <_Bfree>
 800f244:	e5e8      	b.n	800ee18 <_strtod_l+0x88>
 800f246:	2000      	movs	r0, #0
 800f248:	ec49 8b17 	vmov	d7, r8, r9
 800f24c:	f8df c0c0 	ldr.w	ip, [pc, #192]	; 800f310 <_strtod_l+0x580>
 800f250:	1112      	asrs	r2, r2, #4
 800f252:	4601      	mov	r1, r0
 800f254:	2a01      	cmp	r2, #1
 800f256:	dc23      	bgt.n	800f2a0 <_strtod_l+0x510>
 800f258:	b108      	cbz	r0, 800f25e <_strtod_l+0x4ce>
 800f25a:	ec59 8b17 	vmov	r8, r9, d7
 800f25e:	4a2c      	ldr	r2, [pc, #176]	; (800f310 <_strtod_l+0x580>)
 800f260:	482c      	ldr	r0, [pc, #176]	; (800f314 <_strtod_l+0x584>)
 800f262:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 800f266:	ed92 7b00 	vldr	d7, [r2]
 800f26a:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 800f26e:	ec49 8b16 	vmov	d6, r8, r9
 800f272:	4a29      	ldr	r2, [pc, #164]	; (800f318 <_strtod_l+0x588>)
 800f274:	ee27 7b06 	vmul.f64	d7, d7, d6
 800f278:	ee17 1a90 	vmov	r1, s15
 800f27c:	400a      	ands	r2, r1
 800f27e:	4282      	cmp	r2, r0
 800f280:	ec59 8b17 	vmov	r8, r9, d7
 800f284:	d8bc      	bhi.n	800f200 <_strtod_l+0x470>
 800f286:	f5a0 1080 	sub.w	r0, r0, #1048576	; 0x100000
 800f28a:	4282      	cmp	r2, r0
 800f28c:	bf86      	itte	hi
 800f28e:	f8df 908c 	ldrhi.w	r9, [pc, #140]	; 800f31c <_strtod_l+0x58c>
 800f292:	f04f 38ff 	movhi.w	r8, #4294967295
 800f296:	f101 7954 	addls.w	r9, r1, #55574528	; 0x3500000
 800f29a:	2200      	movs	r2, #0
 800f29c:	9204      	str	r2, [sp, #16]
 800f29e:	e078      	b.n	800f392 <_strtod_l+0x602>
 800f2a0:	07d6      	lsls	r6, r2, #31
 800f2a2:	d504      	bpl.n	800f2ae <_strtod_l+0x51e>
 800f2a4:	ed9c 6b00 	vldr	d6, [ip]
 800f2a8:	2001      	movs	r0, #1
 800f2aa:	ee27 7b06 	vmul.f64	d7, d7, d6
 800f2ae:	3101      	adds	r1, #1
 800f2b0:	1052      	asrs	r2, r2, #1
 800f2b2:	f10c 0c08 	add.w	ip, ip, #8
 800f2b6:	e7cd      	b.n	800f254 <_strtod_l+0x4c4>
 800f2b8:	d0ef      	beq.n	800f29a <_strtod_l+0x50a>
 800f2ba:	4252      	negs	r2, r2
 800f2bc:	f012 000f 	ands.w	r0, r2, #15
 800f2c0:	d00a      	beq.n	800f2d8 <_strtod_l+0x548>
 800f2c2:	4912      	ldr	r1, [pc, #72]	; (800f30c <_strtod_l+0x57c>)
 800f2c4:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 800f2c8:	ed91 7b00 	vldr	d7, [r1]
 800f2cc:	ec49 8b16 	vmov	d6, r8, r9
 800f2d0:	ee86 7b07 	vdiv.f64	d7, d6, d7
 800f2d4:	ec59 8b17 	vmov	r8, r9, d7
 800f2d8:	1112      	asrs	r2, r2, #4
 800f2da:	d0de      	beq.n	800f29a <_strtod_l+0x50a>
 800f2dc:	2a1f      	cmp	r2, #31
 800f2de:	dd1f      	ble.n	800f320 <_strtod_l+0x590>
 800f2e0:	2500      	movs	r5, #0
 800f2e2:	462e      	mov	r6, r5
 800f2e4:	9506      	str	r5, [sp, #24]
 800f2e6:	462f      	mov	r7, r5
 800f2e8:	2322      	movs	r3, #34	; 0x22
 800f2ea:	f04f 0800 	mov.w	r8, #0
 800f2ee:	f04f 0900 	mov.w	r9, #0
 800f2f2:	6023      	str	r3, [r4, #0]
 800f2f4:	e78e      	b.n	800f214 <_strtod_l+0x484>
 800f2f6:	bf00      	nop
 800f2f8:	08012355 	.word	0x08012355
 800f2fc:	0801236c 	.word	0x0801236c
 800f300:	0801234c 	.word	0x0801234c
 800f304:	0801234f 	.word	0x0801234f
 800f308:	080125df 	.word	0x080125df
 800f30c:	080124d0 	.word	0x080124d0
 800f310:	080124a8 	.word	0x080124a8
 800f314:	7ca00000 	.word	0x7ca00000
 800f318:	7ff00000 	.word	0x7ff00000
 800f31c:	7fefffff 	.word	0x7fefffff
 800f320:	f012 0110 	ands.w	r1, r2, #16
 800f324:	bf18      	it	ne
 800f326:	216a      	movne	r1, #106	; 0x6a
 800f328:	9104      	str	r1, [sp, #16]
 800f32a:	ec49 8b17 	vmov	d7, r8, r9
 800f32e:	49be      	ldr	r1, [pc, #760]	; (800f628 <_strtod_l+0x898>)
 800f330:	2000      	movs	r0, #0
 800f332:	07d6      	lsls	r6, r2, #31
 800f334:	d504      	bpl.n	800f340 <_strtod_l+0x5b0>
 800f336:	ed91 6b00 	vldr	d6, [r1]
 800f33a:	2001      	movs	r0, #1
 800f33c:	ee27 7b06 	vmul.f64	d7, d7, d6
 800f340:	1052      	asrs	r2, r2, #1
 800f342:	f101 0108 	add.w	r1, r1, #8
 800f346:	d1f4      	bne.n	800f332 <_strtod_l+0x5a2>
 800f348:	b108      	cbz	r0, 800f34e <_strtod_l+0x5be>
 800f34a:	ec59 8b17 	vmov	r8, r9, d7
 800f34e:	9a04      	ldr	r2, [sp, #16]
 800f350:	b1c2      	cbz	r2, 800f384 <_strtod_l+0x5f4>
 800f352:	f3c9 510a 	ubfx	r1, r9, #20, #11
 800f356:	f1c1 026b 	rsb	r2, r1, #107	; 0x6b
 800f35a:	2a00      	cmp	r2, #0
 800f35c:	4648      	mov	r0, r9
 800f35e:	dd11      	ble.n	800f384 <_strtod_l+0x5f4>
 800f360:	2a1f      	cmp	r2, #31
 800f362:	f340 812e 	ble.w	800f5c2 <_strtod_l+0x832>
 800f366:	2a34      	cmp	r2, #52	; 0x34
 800f368:	bfde      	ittt	le
 800f36a:	f1c1 014b 	rsble	r1, r1, #75	; 0x4b
 800f36e:	f04f 32ff 	movle.w	r2, #4294967295
 800f372:	fa02 f101 	lslle.w	r1, r2, r1
 800f376:	f04f 0800 	mov.w	r8, #0
 800f37a:	bfcc      	ite	gt
 800f37c:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 800f380:	ea01 0900 	andle.w	r9, r1, r0
 800f384:	ec49 8b17 	vmov	d7, r8, r9
 800f388:	eeb5 7b40 	vcmp.f64	d7, #0.0
 800f38c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f390:	d0a6      	beq.n	800f2e0 <_strtod_l+0x550>
 800f392:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f394:	9200      	str	r2, [sp, #0]
 800f396:	990a      	ldr	r1, [sp, #40]	; 0x28
 800f398:	9a06      	ldr	r2, [sp, #24]
 800f39a:	4620      	mov	r0, r4
 800f39c:	f000 fee4 	bl	8010168 <__s2b>
 800f3a0:	9006      	str	r0, [sp, #24]
 800f3a2:	2800      	cmp	r0, #0
 800f3a4:	f43f af2c 	beq.w	800f200 <_strtod_l+0x470>
 800f3a8:	9b07      	ldr	r3, [sp, #28]
 800f3aa:	1b7d      	subs	r5, r7, r5
 800f3ac:	2b00      	cmp	r3, #0
 800f3ae:	bfb4      	ite	lt
 800f3b0:	462b      	movlt	r3, r5
 800f3b2:	2300      	movge	r3, #0
 800f3b4:	9309      	str	r3, [sp, #36]	; 0x24
 800f3b6:	9b07      	ldr	r3, [sp, #28]
 800f3b8:	ed9f 9b93 	vldr	d9, [pc, #588]	; 800f608 <_strtod_l+0x878>
 800f3bc:	ed9f ab94 	vldr	d10, [pc, #592]	; 800f610 <_strtod_l+0x880>
 800f3c0:	ed9f bb95 	vldr	d11, [pc, #596]	; 800f618 <_strtod_l+0x888>
 800f3c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f3c8:	2500      	movs	r5, #0
 800f3ca:	930c      	str	r3, [sp, #48]	; 0x30
 800f3cc:	462e      	mov	r6, r5
 800f3ce:	9b06      	ldr	r3, [sp, #24]
 800f3d0:	4620      	mov	r0, r4
 800f3d2:	6859      	ldr	r1, [r3, #4]
 800f3d4:	f000 fe20 	bl	8010018 <_Balloc>
 800f3d8:	4607      	mov	r7, r0
 800f3da:	2800      	cmp	r0, #0
 800f3dc:	f43f af14 	beq.w	800f208 <_strtod_l+0x478>
 800f3e0:	9b06      	ldr	r3, [sp, #24]
 800f3e2:	691a      	ldr	r2, [r3, #16]
 800f3e4:	3202      	adds	r2, #2
 800f3e6:	f103 010c 	add.w	r1, r3, #12
 800f3ea:	0092      	lsls	r2, r2, #2
 800f3ec:	300c      	adds	r0, #12
 800f3ee:	f7ff fc9d 	bl	800ed2c <memcpy>
 800f3f2:	ec49 8b10 	vmov	d0, r8, r9
 800f3f6:	aa14      	add	r2, sp, #80	; 0x50
 800f3f8:	a913      	add	r1, sp, #76	; 0x4c
 800f3fa:	4620      	mov	r0, r4
 800f3fc:	f001 f9fa 	bl	80107f4 <__d2b>
 800f400:	ec49 8b18 	vmov	d8, r8, r9
 800f404:	9012      	str	r0, [sp, #72]	; 0x48
 800f406:	2800      	cmp	r0, #0
 800f408:	f43f aefe 	beq.w	800f208 <_strtod_l+0x478>
 800f40c:	2101      	movs	r1, #1
 800f40e:	4620      	mov	r0, r4
 800f410:	f000 ff44 	bl	801029c <__i2b>
 800f414:	4606      	mov	r6, r0
 800f416:	2800      	cmp	r0, #0
 800f418:	f43f aef6 	beq.w	800f208 <_strtod_l+0x478>
 800f41c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800f41e:	9914      	ldr	r1, [sp, #80]	; 0x50
 800f420:	2b00      	cmp	r3, #0
 800f422:	bfab      	itete	ge
 800f424:	9a09      	ldrge	r2, [sp, #36]	; 0x24
 800f426:	9a0c      	ldrlt	r2, [sp, #48]	; 0x30
 800f428:	f8dd a030 	ldrge.w	sl, [sp, #48]	; 0x30
 800f42c:	f8dd b024 	ldrlt.w	fp, [sp, #36]	; 0x24
 800f430:	bfac      	ite	ge
 800f432:	eb03 0b02 	addge.w	fp, r3, r2
 800f436:	eba2 0a03 	sublt.w	sl, r2, r3
 800f43a:	9a04      	ldr	r2, [sp, #16]
 800f43c:	1a9b      	subs	r3, r3, r2
 800f43e:	440b      	add	r3, r1
 800f440:	4a7a      	ldr	r2, [pc, #488]	; (800f62c <_strtod_l+0x89c>)
 800f442:	3b01      	subs	r3, #1
 800f444:	4293      	cmp	r3, r2
 800f446:	f1c1 0136 	rsb	r1, r1, #54	; 0x36
 800f44a:	f280 80cd 	bge.w	800f5e8 <_strtod_l+0x858>
 800f44e:	1ad2      	subs	r2, r2, r3
 800f450:	2a1f      	cmp	r2, #31
 800f452:	eba1 0102 	sub.w	r1, r1, r2
 800f456:	f04f 0001 	mov.w	r0, #1
 800f45a:	f300 80b9 	bgt.w	800f5d0 <_strtod_l+0x840>
 800f45e:	fa00 f302 	lsl.w	r3, r0, r2
 800f462:	930b      	str	r3, [sp, #44]	; 0x2c
 800f464:	2300      	movs	r3, #0
 800f466:	930a      	str	r3, [sp, #40]	; 0x28
 800f468:	eb0b 0301 	add.w	r3, fp, r1
 800f46c:	9a04      	ldr	r2, [sp, #16]
 800f46e:	459b      	cmp	fp, r3
 800f470:	448a      	add	sl, r1
 800f472:	4492      	add	sl, r2
 800f474:	465a      	mov	r2, fp
 800f476:	bfa8      	it	ge
 800f478:	461a      	movge	r2, r3
 800f47a:	4552      	cmp	r2, sl
 800f47c:	bfa8      	it	ge
 800f47e:	4652      	movge	r2, sl
 800f480:	2a00      	cmp	r2, #0
 800f482:	bfc2      	ittt	gt
 800f484:	1a9b      	subgt	r3, r3, r2
 800f486:	ebaa 0a02 	subgt.w	sl, sl, r2
 800f48a:	ebab 0b02 	subgt.w	fp, fp, r2
 800f48e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f490:	2a00      	cmp	r2, #0
 800f492:	dd18      	ble.n	800f4c6 <_strtod_l+0x736>
 800f494:	4631      	mov	r1, r6
 800f496:	4620      	mov	r0, r4
 800f498:	930f      	str	r3, [sp, #60]	; 0x3c
 800f49a:	f000 ffbf 	bl	801041c <__pow5mult>
 800f49e:	4606      	mov	r6, r0
 800f4a0:	2800      	cmp	r0, #0
 800f4a2:	f43f aeb1 	beq.w	800f208 <_strtod_l+0x478>
 800f4a6:	4601      	mov	r1, r0
 800f4a8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f4aa:	4620      	mov	r0, r4
 800f4ac:	f000 ff0c 	bl	80102c8 <__multiply>
 800f4b0:	900e      	str	r0, [sp, #56]	; 0x38
 800f4b2:	2800      	cmp	r0, #0
 800f4b4:	f43f aea8 	beq.w	800f208 <_strtod_l+0x478>
 800f4b8:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f4ba:	4620      	mov	r0, r4
 800f4bc:	f000 fdec 	bl	8010098 <_Bfree>
 800f4c0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800f4c2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f4c4:	9212      	str	r2, [sp, #72]	; 0x48
 800f4c6:	2b00      	cmp	r3, #0
 800f4c8:	f300 8093 	bgt.w	800f5f2 <_strtod_l+0x862>
 800f4cc:	9b07      	ldr	r3, [sp, #28]
 800f4ce:	2b00      	cmp	r3, #0
 800f4d0:	dd08      	ble.n	800f4e4 <_strtod_l+0x754>
 800f4d2:	4639      	mov	r1, r7
 800f4d4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800f4d6:	4620      	mov	r0, r4
 800f4d8:	f000 ffa0 	bl	801041c <__pow5mult>
 800f4dc:	4607      	mov	r7, r0
 800f4de:	2800      	cmp	r0, #0
 800f4e0:	f43f ae92 	beq.w	800f208 <_strtod_l+0x478>
 800f4e4:	f1ba 0f00 	cmp.w	sl, #0
 800f4e8:	dd08      	ble.n	800f4fc <_strtod_l+0x76c>
 800f4ea:	4639      	mov	r1, r7
 800f4ec:	4652      	mov	r2, sl
 800f4ee:	4620      	mov	r0, r4
 800f4f0:	f000 ffee 	bl	80104d0 <__lshift>
 800f4f4:	4607      	mov	r7, r0
 800f4f6:	2800      	cmp	r0, #0
 800f4f8:	f43f ae86 	beq.w	800f208 <_strtod_l+0x478>
 800f4fc:	f1bb 0f00 	cmp.w	fp, #0
 800f500:	dd08      	ble.n	800f514 <_strtod_l+0x784>
 800f502:	4631      	mov	r1, r6
 800f504:	465a      	mov	r2, fp
 800f506:	4620      	mov	r0, r4
 800f508:	f000 ffe2 	bl	80104d0 <__lshift>
 800f50c:	4606      	mov	r6, r0
 800f50e:	2800      	cmp	r0, #0
 800f510:	f43f ae7a 	beq.w	800f208 <_strtod_l+0x478>
 800f514:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f516:	463a      	mov	r2, r7
 800f518:	4620      	mov	r0, r4
 800f51a:	f001 f865 	bl	80105e8 <__mdiff>
 800f51e:	4605      	mov	r5, r0
 800f520:	2800      	cmp	r0, #0
 800f522:	f43f ae71 	beq.w	800f208 <_strtod_l+0x478>
 800f526:	2300      	movs	r3, #0
 800f528:	f8d0 a00c 	ldr.w	sl, [r0, #12]
 800f52c:	60c3      	str	r3, [r0, #12]
 800f52e:	4631      	mov	r1, r6
 800f530:	f001 f83e 	bl	80105b0 <__mcmp>
 800f534:	2800      	cmp	r0, #0
 800f536:	da7d      	bge.n	800f634 <_strtod_l+0x8a4>
 800f538:	ea5a 0308 	orrs.w	r3, sl, r8
 800f53c:	f040 80a3 	bne.w	800f686 <_strtod_l+0x8f6>
 800f540:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800f544:	2b00      	cmp	r3, #0
 800f546:	f040 809e 	bne.w	800f686 <_strtod_l+0x8f6>
 800f54a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800f54e:	0d1b      	lsrs	r3, r3, #20
 800f550:	051b      	lsls	r3, r3, #20
 800f552:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800f556:	f240 8096 	bls.w	800f686 <_strtod_l+0x8f6>
 800f55a:	696b      	ldr	r3, [r5, #20]
 800f55c:	b91b      	cbnz	r3, 800f566 <_strtod_l+0x7d6>
 800f55e:	692b      	ldr	r3, [r5, #16]
 800f560:	2b01      	cmp	r3, #1
 800f562:	f340 8090 	ble.w	800f686 <_strtod_l+0x8f6>
 800f566:	4629      	mov	r1, r5
 800f568:	2201      	movs	r2, #1
 800f56a:	4620      	mov	r0, r4
 800f56c:	f000 ffb0 	bl	80104d0 <__lshift>
 800f570:	4631      	mov	r1, r6
 800f572:	4605      	mov	r5, r0
 800f574:	f001 f81c 	bl	80105b0 <__mcmp>
 800f578:	2800      	cmp	r0, #0
 800f57a:	f340 8084 	ble.w	800f686 <_strtod_l+0x8f6>
 800f57e:	9904      	ldr	r1, [sp, #16]
 800f580:	4a2b      	ldr	r2, [pc, #172]	; (800f630 <_strtod_l+0x8a0>)
 800f582:	464b      	mov	r3, r9
 800f584:	2900      	cmp	r1, #0
 800f586:	f000 809d 	beq.w	800f6c4 <_strtod_l+0x934>
 800f58a:	ea02 0109 	and.w	r1, r2, r9
 800f58e:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800f592:	f300 8097 	bgt.w	800f6c4 <_strtod_l+0x934>
 800f596:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800f59a:	f77f aea5 	ble.w	800f2e8 <_strtod_l+0x558>
 800f59e:	ed9f 7b20 	vldr	d7, [pc, #128]	; 800f620 <_strtod_l+0x890>
 800f5a2:	ec49 8b16 	vmov	d6, r8, r9
 800f5a6:	ee26 7b07 	vmul.f64	d7, d6, d7
 800f5aa:	ed8d 7b04 	vstr	d7, [sp, #16]
 800f5ae:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 800f5b2:	4313      	orrs	r3, r2
 800f5b4:	bf08      	it	eq
 800f5b6:	2322      	moveq	r3, #34	; 0x22
 800f5b8:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800f5bc:	bf08      	it	eq
 800f5be:	6023      	streq	r3, [r4, #0]
 800f5c0:	e62c      	b.n	800f21c <_strtod_l+0x48c>
 800f5c2:	f04f 31ff 	mov.w	r1, #4294967295
 800f5c6:	fa01 f202 	lsl.w	r2, r1, r2
 800f5ca:	ea02 0808 	and.w	r8, r2, r8
 800f5ce:	e6d9      	b.n	800f384 <_strtod_l+0x5f4>
 800f5d0:	f1c3 437f 	rsb	r3, r3, #4278190080	; 0xff000000
 800f5d4:	f503 037f 	add.w	r3, r3, #16711680	; 0xff0000
 800f5d8:	f503 437b 	add.w	r3, r3, #64256	; 0xfb00
 800f5dc:	33e2      	adds	r3, #226	; 0xe2
 800f5de:	fa00 f303 	lsl.w	r3, r0, r3
 800f5e2:	e9cd 300a 	strd	r3, r0, [sp, #40]	; 0x28
 800f5e6:	e73f      	b.n	800f468 <_strtod_l+0x6d8>
 800f5e8:	2200      	movs	r2, #0
 800f5ea:	2301      	movs	r3, #1
 800f5ec:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800f5f0:	e73a      	b.n	800f468 <_strtod_l+0x6d8>
 800f5f2:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f5f4:	461a      	mov	r2, r3
 800f5f6:	4620      	mov	r0, r4
 800f5f8:	f000 ff6a 	bl	80104d0 <__lshift>
 800f5fc:	9012      	str	r0, [sp, #72]	; 0x48
 800f5fe:	2800      	cmp	r0, #0
 800f600:	f47f af64 	bne.w	800f4cc <_strtod_l+0x73c>
 800f604:	e600      	b.n	800f208 <_strtod_l+0x478>
 800f606:	bf00      	nop
 800f608:	94a03595 	.word	0x94a03595
 800f60c:	3fcfffff 	.word	0x3fcfffff
 800f610:	94a03595 	.word	0x94a03595
 800f614:	3fdfffff 	.word	0x3fdfffff
 800f618:	35afe535 	.word	0x35afe535
 800f61c:	3fe00000 	.word	0x3fe00000
 800f620:	00000000 	.word	0x00000000
 800f624:	39500000 	.word	0x39500000
 800f628:	08012380 	.word	0x08012380
 800f62c:	fffffc02 	.word	0xfffffc02
 800f630:	7ff00000 	.word	0x7ff00000
 800f634:	46cb      	mov	fp, r9
 800f636:	d15f      	bne.n	800f6f8 <_strtod_l+0x968>
 800f638:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800f63c:	f1ba 0f00 	cmp.w	sl, #0
 800f640:	d02a      	beq.n	800f698 <_strtod_l+0x908>
 800f642:	4aa7      	ldr	r2, [pc, #668]	; (800f8e0 <_strtod_l+0xb50>)
 800f644:	4293      	cmp	r3, r2
 800f646:	d12b      	bne.n	800f6a0 <_strtod_l+0x910>
 800f648:	9b04      	ldr	r3, [sp, #16]
 800f64a:	4642      	mov	r2, r8
 800f64c:	b1fb      	cbz	r3, 800f68e <_strtod_l+0x8fe>
 800f64e:	4ba5      	ldr	r3, [pc, #660]	; (800f8e4 <_strtod_l+0xb54>)
 800f650:	ea09 0303 	and.w	r3, r9, r3
 800f654:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800f658:	f04f 31ff 	mov.w	r1, #4294967295
 800f65c:	d81a      	bhi.n	800f694 <_strtod_l+0x904>
 800f65e:	0d1b      	lsrs	r3, r3, #20
 800f660:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800f664:	fa01 f303 	lsl.w	r3, r1, r3
 800f668:	429a      	cmp	r2, r3
 800f66a:	d119      	bne.n	800f6a0 <_strtod_l+0x910>
 800f66c:	4b9e      	ldr	r3, [pc, #632]	; (800f8e8 <_strtod_l+0xb58>)
 800f66e:	459b      	cmp	fp, r3
 800f670:	d102      	bne.n	800f678 <_strtod_l+0x8e8>
 800f672:	3201      	adds	r2, #1
 800f674:	f43f adc8 	beq.w	800f208 <_strtod_l+0x478>
 800f678:	4b9a      	ldr	r3, [pc, #616]	; (800f8e4 <_strtod_l+0xb54>)
 800f67a:	ea0b 0303 	and.w	r3, fp, r3
 800f67e:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 800f682:	f04f 0800 	mov.w	r8, #0
 800f686:	9b04      	ldr	r3, [sp, #16]
 800f688:	2b00      	cmp	r3, #0
 800f68a:	d188      	bne.n	800f59e <_strtod_l+0x80e>
 800f68c:	e5c6      	b.n	800f21c <_strtod_l+0x48c>
 800f68e:	f04f 33ff 	mov.w	r3, #4294967295
 800f692:	e7e9      	b.n	800f668 <_strtod_l+0x8d8>
 800f694:	460b      	mov	r3, r1
 800f696:	e7e7      	b.n	800f668 <_strtod_l+0x8d8>
 800f698:	ea53 0308 	orrs.w	r3, r3, r8
 800f69c:	f43f af6f 	beq.w	800f57e <_strtod_l+0x7ee>
 800f6a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f6a2:	b1cb      	cbz	r3, 800f6d8 <_strtod_l+0x948>
 800f6a4:	ea13 0f0b 	tst.w	r3, fp
 800f6a8:	d0ed      	beq.n	800f686 <_strtod_l+0x8f6>
 800f6aa:	9a04      	ldr	r2, [sp, #16]
 800f6ac:	4640      	mov	r0, r8
 800f6ae:	4649      	mov	r1, r9
 800f6b0:	f1ba 0f00 	cmp.w	sl, #0
 800f6b4:	d014      	beq.n	800f6e0 <_strtod_l+0x950>
 800f6b6:	f7ff fb4f 	bl	800ed58 <sulp>
 800f6ba:	ee38 7b00 	vadd.f64	d7, d8, d0
 800f6be:	ec59 8b17 	vmov	r8, r9, d7
 800f6c2:	e7e0      	b.n	800f686 <_strtod_l+0x8f6>
 800f6c4:	4013      	ands	r3, r2
 800f6c6:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800f6ca:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 800f6ce:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 800f6d2:	f04f 38ff 	mov.w	r8, #4294967295
 800f6d6:	e7d6      	b.n	800f686 <_strtod_l+0x8f6>
 800f6d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f6da:	ea13 0f08 	tst.w	r3, r8
 800f6de:	e7e3      	b.n	800f6a8 <_strtod_l+0x918>
 800f6e0:	f7ff fb3a 	bl	800ed58 <sulp>
 800f6e4:	ee38 0b40 	vsub.f64	d0, d8, d0
 800f6e8:	eeb5 0b40 	vcmp.f64	d0, #0.0
 800f6ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f6f0:	ec59 8b10 	vmov	r8, r9, d0
 800f6f4:	d1c7      	bne.n	800f686 <_strtod_l+0x8f6>
 800f6f6:	e5f7      	b.n	800f2e8 <_strtod_l+0x558>
 800f6f8:	4631      	mov	r1, r6
 800f6fa:	4628      	mov	r0, r5
 800f6fc:	f001 f8d6 	bl	80108ac <__ratio>
 800f700:	eeb0 7b00 	vmov.f64	d7, #0	; 0x40000000  2.0
 800f704:	eeb4 0bc7 	vcmpe.f64	d0, d7
 800f708:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f70c:	d865      	bhi.n	800f7da <_strtod_l+0xa4a>
 800f70e:	f1ba 0f00 	cmp.w	sl, #0
 800f712:	d042      	beq.n	800f79a <_strtod_l+0xa0a>
 800f714:	4b75      	ldr	r3, [pc, #468]	; (800f8ec <_strtod_l+0xb5c>)
 800f716:	2200      	movs	r2, #0
 800f718:	eeb7 db00 	vmov.f64	d13, #112	; 0x3f800000  1.0
 800f71c:	4871      	ldr	r0, [pc, #452]	; (800f8e4 <_strtod_l+0xb54>)
 800f71e:	f8df c1d8 	ldr.w	ip, [pc, #472]	; 800f8f8 <_strtod_l+0xb68>
 800f722:	ea0b 0100 	and.w	r1, fp, r0
 800f726:	4561      	cmp	r1, ip
 800f728:	f040 808e 	bne.w	800f848 <_strtod_l+0xab8>
 800f72c:	f1ab 7954 	sub.w	r9, fp, #55574528	; 0x3500000
 800f730:	ec49 8b10 	vmov	d0, r8, r9
 800f734:	ec43 2b1c 	vmov	d12, r2, r3
 800f738:	910a      	str	r1, [sp, #40]	; 0x28
 800f73a:	f000 ffdf 	bl	80106fc <__ulp>
 800f73e:	ec49 8b1e 	vmov	d14, r8, r9
 800f742:	4868      	ldr	r0, [pc, #416]	; (800f8e4 <_strtod_l+0xb54>)
 800f744:	eeac eb00 	vfma.f64	d14, d12, d0
 800f748:	ee1e 3a90 	vmov	r3, s29
 800f74c:	4a68      	ldr	r2, [pc, #416]	; (800f8f0 <_strtod_l+0xb60>)
 800f74e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800f750:	4018      	ands	r0, r3
 800f752:	4290      	cmp	r0, r2
 800f754:	ec59 8b1e 	vmov	r8, r9, d14
 800f758:	d94e      	bls.n	800f7f8 <_strtod_l+0xa68>
 800f75a:	ee18 3a90 	vmov	r3, s17
 800f75e:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 800f762:	4293      	cmp	r3, r2
 800f764:	d104      	bne.n	800f770 <_strtod_l+0x9e0>
 800f766:	ee18 3a10 	vmov	r3, s16
 800f76a:	3301      	adds	r3, #1
 800f76c:	f43f ad4c 	beq.w	800f208 <_strtod_l+0x478>
 800f770:	f8df 9174 	ldr.w	r9, [pc, #372]	; 800f8e8 <_strtod_l+0xb58>
 800f774:	f04f 38ff 	mov.w	r8, #4294967295
 800f778:	9912      	ldr	r1, [sp, #72]	; 0x48
 800f77a:	4620      	mov	r0, r4
 800f77c:	f000 fc8c 	bl	8010098 <_Bfree>
 800f780:	4639      	mov	r1, r7
 800f782:	4620      	mov	r0, r4
 800f784:	f000 fc88 	bl	8010098 <_Bfree>
 800f788:	4631      	mov	r1, r6
 800f78a:	4620      	mov	r0, r4
 800f78c:	f000 fc84 	bl	8010098 <_Bfree>
 800f790:	4629      	mov	r1, r5
 800f792:	4620      	mov	r0, r4
 800f794:	f000 fc80 	bl	8010098 <_Bfree>
 800f798:	e619      	b.n	800f3ce <_strtod_l+0x63e>
 800f79a:	f1b8 0f00 	cmp.w	r8, #0
 800f79e:	d112      	bne.n	800f7c6 <_strtod_l+0xa36>
 800f7a0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800f7a4:	b9b3      	cbnz	r3, 800f7d4 <_strtod_l+0xa44>
 800f7a6:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
 800f7aa:	eeb4 0bc7 	vcmpe.f64	d0, d7
 800f7ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f7b2:	eeb6 db00 	vmov.f64	d13, #96	; 0x3f000000  0.5
 800f7b6:	bf58      	it	pl
 800f7b8:	ee20 db0d 	vmulpl.f64	d13, d0, d13
 800f7bc:	eeb1 7b4d 	vneg.f64	d7, d13
 800f7c0:	ec53 2b17 	vmov	r2, r3, d7
 800f7c4:	e7aa      	b.n	800f71c <_strtod_l+0x98c>
 800f7c6:	f1b8 0f01 	cmp.w	r8, #1
 800f7ca:	d103      	bne.n	800f7d4 <_strtod_l+0xa44>
 800f7cc:	f1b9 0f00 	cmp.w	r9, #0
 800f7d0:	f43f ad8a 	beq.w	800f2e8 <_strtod_l+0x558>
 800f7d4:	4b47      	ldr	r3, [pc, #284]	; (800f8f4 <_strtod_l+0xb64>)
 800f7d6:	2200      	movs	r2, #0
 800f7d8:	e79e      	b.n	800f718 <_strtod_l+0x988>
 800f7da:	eeb6 db00 	vmov.f64	d13, #96	; 0x3f000000  0.5
 800f7de:	ee20 db0d 	vmul.f64	d13, d0, d13
 800f7e2:	f1ba 0f00 	cmp.w	sl, #0
 800f7e6:	d104      	bne.n	800f7f2 <_strtod_l+0xa62>
 800f7e8:	eeb1 7b4d 	vneg.f64	d7, d13
 800f7ec:	ec53 2b17 	vmov	r2, r3, d7
 800f7f0:	e794      	b.n	800f71c <_strtod_l+0x98c>
 800f7f2:	eeb0 7b4d 	vmov.f64	d7, d13
 800f7f6:	e7f9      	b.n	800f7ec <_strtod_l+0xa5c>
 800f7f8:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 800f7fc:	9b04      	ldr	r3, [sp, #16]
 800f7fe:	2b00      	cmp	r3, #0
 800f800:	d1ba      	bne.n	800f778 <_strtod_l+0x9e8>
 800f802:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800f806:	0d1b      	lsrs	r3, r3, #20
 800f808:	051b      	lsls	r3, r3, #20
 800f80a:	4299      	cmp	r1, r3
 800f80c:	d1b4      	bne.n	800f778 <_strtod_l+0x9e8>
 800f80e:	ec51 0b1d 	vmov	r0, r1, d13
 800f812:	f7f0 ff91 	bl	8000738 <__aeabi_d2lz>
 800f816:	f7f0 ff49 	bl	80006ac <__aeabi_l2d>
 800f81a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800f81e:	ec41 0b17 	vmov	d7, r0, r1
 800f822:	ea43 0308 	orr.w	r3, r3, r8
 800f826:	ea53 030a 	orrs.w	r3, r3, sl
 800f82a:	ee3d db47 	vsub.f64	d13, d13, d7
 800f82e:	d03c      	beq.n	800f8aa <_strtod_l+0xb1a>
 800f830:	eeb4 dbca 	vcmpe.f64	d13, d10
 800f834:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f838:	f53f acf0 	bmi.w	800f21c <_strtod_l+0x48c>
 800f83c:	eeb4 dbcb 	vcmpe.f64	d13, d11
 800f840:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f844:	dd98      	ble.n	800f778 <_strtod_l+0x9e8>
 800f846:	e4e9      	b.n	800f21c <_strtod_l+0x48c>
 800f848:	9804      	ldr	r0, [sp, #16]
 800f84a:	b1f0      	cbz	r0, 800f88a <_strtod_l+0xafa>
 800f84c:	f1b1 6fd4 	cmp.w	r1, #111149056	; 0x6a00000
 800f850:	d81b      	bhi.n	800f88a <_strtod_l+0xafa>
 800f852:	ed9f 7b21 	vldr	d7, [pc, #132]	; 800f8d8 <_strtod_l+0xb48>
 800f856:	eeb4 dbc7 	vcmpe.f64	d13, d7
 800f85a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f85e:	d811      	bhi.n	800f884 <_strtod_l+0xaf4>
 800f860:	eebc dbcd 	vcvt.u32.f64	s26, d13
 800f864:	ee1d 3a10 	vmov	r3, s26
 800f868:	2b01      	cmp	r3, #1
 800f86a:	bf38      	it	cc
 800f86c:	2301      	movcc	r3, #1
 800f86e:	ee0d 3a10 	vmov	s26, r3
 800f872:	eeb8 db4d 	vcvt.f64.u32	d13, s26
 800f876:	f1ba 0f00 	cmp.w	sl, #0
 800f87a:	d113      	bne.n	800f8a4 <_strtod_l+0xb14>
 800f87c:	eeb1 7b4d 	vneg.f64	d7, d13
 800f880:	ec53 2b17 	vmov	r2, r3, d7
 800f884:	f103 60d6 	add.w	r0, r3, #112197632	; 0x6b00000
 800f888:	1a43      	subs	r3, r0, r1
 800f88a:	eeb0 0b48 	vmov.f64	d0, d8
 800f88e:	ec43 2b1c 	vmov	d12, r2, r3
 800f892:	910a      	str	r1, [sp, #40]	; 0x28
 800f894:	f000 ff32 	bl	80106fc <__ulp>
 800f898:	990a      	ldr	r1, [sp, #40]	; 0x28
 800f89a:	eeac 8b00 	vfma.f64	d8, d12, d0
 800f89e:	ec59 8b18 	vmov	r8, r9, d8
 800f8a2:	e7ab      	b.n	800f7fc <_strtod_l+0xa6c>
 800f8a4:	eeb0 7b4d 	vmov.f64	d7, d13
 800f8a8:	e7ea      	b.n	800f880 <_strtod_l+0xaf0>
 800f8aa:	eeb4 dbc9 	vcmpe.f64	d13, d9
 800f8ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f8b2:	f57f af61 	bpl.w	800f778 <_strtod_l+0x9e8>
 800f8b6:	e4b1      	b.n	800f21c <_strtod_l+0x48c>
 800f8b8:	2300      	movs	r3, #0
 800f8ba:	9308      	str	r3, [sp, #32]
 800f8bc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f8be:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800f8c0:	6013      	str	r3, [r2, #0]
 800f8c2:	f7ff baad 	b.w	800ee20 <_strtod_l+0x90>
 800f8c6:	2a65      	cmp	r2, #101	; 0x65
 800f8c8:	f43f ab9f 	beq.w	800f00a <_strtod_l+0x27a>
 800f8cc:	2a45      	cmp	r2, #69	; 0x45
 800f8ce:	f43f ab9c 	beq.w	800f00a <_strtod_l+0x27a>
 800f8d2:	2101      	movs	r1, #1
 800f8d4:	f7ff bbd4 	b.w	800f080 <_strtod_l+0x2f0>
 800f8d8:	ffc00000 	.word	0xffc00000
 800f8dc:	41dfffff 	.word	0x41dfffff
 800f8e0:	000fffff 	.word	0x000fffff
 800f8e4:	7ff00000 	.word	0x7ff00000
 800f8e8:	7fefffff 	.word	0x7fefffff
 800f8ec:	3ff00000 	.word	0x3ff00000
 800f8f0:	7c9fffff 	.word	0x7c9fffff
 800f8f4:	bff00000 	.word	0xbff00000
 800f8f8:	7fe00000 	.word	0x7fe00000

0800f8fc <strtod>:
 800f8fc:	460a      	mov	r2, r1
 800f8fe:	4601      	mov	r1, r0
 800f900:	4802      	ldr	r0, [pc, #8]	; (800f90c <strtod+0x10>)
 800f902:	4b03      	ldr	r3, [pc, #12]	; (800f910 <strtod+0x14>)
 800f904:	6800      	ldr	r0, [r0, #0]
 800f906:	f7ff ba43 	b.w	800ed90 <_strtod_l>
 800f90a:	bf00      	nop
 800f90c:	24000100 	.word	0x24000100
 800f910:	24000168 	.word	0x24000168

0800f914 <rshift>:
 800f914:	6903      	ldr	r3, [r0, #16]
 800f916:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800f91a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f91e:	ea4f 1261 	mov.w	r2, r1, asr #5
 800f922:	f100 0414 	add.w	r4, r0, #20
 800f926:	dd45      	ble.n	800f9b4 <rshift+0xa0>
 800f928:	f011 011f 	ands.w	r1, r1, #31
 800f92c:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800f930:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800f934:	d10c      	bne.n	800f950 <rshift+0x3c>
 800f936:	f100 0710 	add.w	r7, r0, #16
 800f93a:	4629      	mov	r1, r5
 800f93c:	42b1      	cmp	r1, r6
 800f93e:	d334      	bcc.n	800f9aa <rshift+0x96>
 800f940:	1a9b      	subs	r3, r3, r2
 800f942:	009b      	lsls	r3, r3, #2
 800f944:	1eea      	subs	r2, r5, #3
 800f946:	4296      	cmp	r6, r2
 800f948:	bf38      	it	cc
 800f94a:	2300      	movcc	r3, #0
 800f94c:	4423      	add	r3, r4
 800f94e:	e015      	b.n	800f97c <rshift+0x68>
 800f950:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800f954:	f1c1 0820 	rsb	r8, r1, #32
 800f958:	40cf      	lsrs	r7, r1
 800f95a:	f105 0e04 	add.w	lr, r5, #4
 800f95e:	46a1      	mov	r9, r4
 800f960:	4576      	cmp	r6, lr
 800f962:	46f4      	mov	ip, lr
 800f964:	d815      	bhi.n	800f992 <rshift+0x7e>
 800f966:	1a9a      	subs	r2, r3, r2
 800f968:	0092      	lsls	r2, r2, #2
 800f96a:	3a04      	subs	r2, #4
 800f96c:	3501      	adds	r5, #1
 800f96e:	42ae      	cmp	r6, r5
 800f970:	bf38      	it	cc
 800f972:	2200      	movcc	r2, #0
 800f974:	18a3      	adds	r3, r4, r2
 800f976:	50a7      	str	r7, [r4, r2]
 800f978:	b107      	cbz	r7, 800f97c <rshift+0x68>
 800f97a:	3304      	adds	r3, #4
 800f97c:	1b1a      	subs	r2, r3, r4
 800f97e:	42a3      	cmp	r3, r4
 800f980:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800f984:	bf08      	it	eq
 800f986:	2300      	moveq	r3, #0
 800f988:	6102      	str	r2, [r0, #16]
 800f98a:	bf08      	it	eq
 800f98c:	6143      	streq	r3, [r0, #20]
 800f98e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f992:	f8dc c000 	ldr.w	ip, [ip]
 800f996:	fa0c fc08 	lsl.w	ip, ip, r8
 800f99a:	ea4c 0707 	orr.w	r7, ip, r7
 800f99e:	f849 7b04 	str.w	r7, [r9], #4
 800f9a2:	f85e 7b04 	ldr.w	r7, [lr], #4
 800f9a6:	40cf      	lsrs	r7, r1
 800f9a8:	e7da      	b.n	800f960 <rshift+0x4c>
 800f9aa:	f851 cb04 	ldr.w	ip, [r1], #4
 800f9ae:	f847 cf04 	str.w	ip, [r7, #4]!
 800f9b2:	e7c3      	b.n	800f93c <rshift+0x28>
 800f9b4:	4623      	mov	r3, r4
 800f9b6:	e7e1      	b.n	800f97c <rshift+0x68>

0800f9b8 <__hexdig_fun>:
 800f9b8:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800f9bc:	2b09      	cmp	r3, #9
 800f9be:	d802      	bhi.n	800f9c6 <__hexdig_fun+0xe>
 800f9c0:	3820      	subs	r0, #32
 800f9c2:	b2c0      	uxtb	r0, r0
 800f9c4:	4770      	bx	lr
 800f9c6:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800f9ca:	2b05      	cmp	r3, #5
 800f9cc:	d801      	bhi.n	800f9d2 <__hexdig_fun+0x1a>
 800f9ce:	3847      	subs	r0, #71	; 0x47
 800f9d0:	e7f7      	b.n	800f9c2 <__hexdig_fun+0xa>
 800f9d2:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800f9d6:	2b05      	cmp	r3, #5
 800f9d8:	d801      	bhi.n	800f9de <__hexdig_fun+0x26>
 800f9da:	3827      	subs	r0, #39	; 0x27
 800f9dc:	e7f1      	b.n	800f9c2 <__hexdig_fun+0xa>
 800f9de:	2000      	movs	r0, #0
 800f9e0:	4770      	bx	lr
	...

0800f9e4 <__gethex>:
 800f9e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9e8:	ed2d 8b02 	vpush	{d8}
 800f9ec:	b089      	sub	sp, #36	; 0x24
 800f9ee:	ee08 0a10 	vmov	s16, r0
 800f9f2:	9304      	str	r3, [sp, #16]
 800f9f4:	4bb4      	ldr	r3, [pc, #720]	; (800fcc8 <__gethex+0x2e4>)
 800f9f6:	681b      	ldr	r3, [r3, #0]
 800f9f8:	9301      	str	r3, [sp, #4]
 800f9fa:	4618      	mov	r0, r3
 800f9fc:	468b      	mov	fp, r1
 800f9fe:	4690      	mov	r8, r2
 800fa00:	f7f0 fc6e 	bl	80002e0 <strlen>
 800fa04:	9b01      	ldr	r3, [sp, #4]
 800fa06:	f8db 2000 	ldr.w	r2, [fp]
 800fa0a:	4403      	add	r3, r0
 800fa0c:	4682      	mov	sl, r0
 800fa0e:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800fa12:	9305      	str	r3, [sp, #20]
 800fa14:	1c93      	adds	r3, r2, #2
 800fa16:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800fa1a:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800fa1e:	32fe      	adds	r2, #254	; 0xfe
 800fa20:	18d1      	adds	r1, r2, r3
 800fa22:	461f      	mov	r7, r3
 800fa24:	f813 0b01 	ldrb.w	r0, [r3], #1
 800fa28:	9100      	str	r1, [sp, #0]
 800fa2a:	2830      	cmp	r0, #48	; 0x30
 800fa2c:	d0f8      	beq.n	800fa20 <__gethex+0x3c>
 800fa2e:	f7ff ffc3 	bl	800f9b8 <__hexdig_fun>
 800fa32:	4604      	mov	r4, r0
 800fa34:	2800      	cmp	r0, #0
 800fa36:	d13a      	bne.n	800faae <__gethex+0xca>
 800fa38:	9901      	ldr	r1, [sp, #4]
 800fa3a:	4652      	mov	r2, sl
 800fa3c:	4638      	mov	r0, r7
 800fa3e:	f001 f86b 	bl	8010b18 <strncmp>
 800fa42:	4605      	mov	r5, r0
 800fa44:	2800      	cmp	r0, #0
 800fa46:	d168      	bne.n	800fb1a <__gethex+0x136>
 800fa48:	f817 000a 	ldrb.w	r0, [r7, sl]
 800fa4c:	eb07 060a 	add.w	r6, r7, sl
 800fa50:	f7ff ffb2 	bl	800f9b8 <__hexdig_fun>
 800fa54:	2800      	cmp	r0, #0
 800fa56:	d062      	beq.n	800fb1e <__gethex+0x13a>
 800fa58:	4633      	mov	r3, r6
 800fa5a:	7818      	ldrb	r0, [r3, #0]
 800fa5c:	2830      	cmp	r0, #48	; 0x30
 800fa5e:	461f      	mov	r7, r3
 800fa60:	f103 0301 	add.w	r3, r3, #1
 800fa64:	d0f9      	beq.n	800fa5a <__gethex+0x76>
 800fa66:	f7ff ffa7 	bl	800f9b8 <__hexdig_fun>
 800fa6a:	2301      	movs	r3, #1
 800fa6c:	fab0 f480 	clz	r4, r0
 800fa70:	0964      	lsrs	r4, r4, #5
 800fa72:	4635      	mov	r5, r6
 800fa74:	9300      	str	r3, [sp, #0]
 800fa76:	463a      	mov	r2, r7
 800fa78:	4616      	mov	r6, r2
 800fa7a:	3201      	adds	r2, #1
 800fa7c:	7830      	ldrb	r0, [r6, #0]
 800fa7e:	f7ff ff9b 	bl	800f9b8 <__hexdig_fun>
 800fa82:	2800      	cmp	r0, #0
 800fa84:	d1f8      	bne.n	800fa78 <__gethex+0x94>
 800fa86:	9901      	ldr	r1, [sp, #4]
 800fa88:	4652      	mov	r2, sl
 800fa8a:	4630      	mov	r0, r6
 800fa8c:	f001 f844 	bl	8010b18 <strncmp>
 800fa90:	b980      	cbnz	r0, 800fab4 <__gethex+0xd0>
 800fa92:	b94d      	cbnz	r5, 800faa8 <__gethex+0xc4>
 800fa94:	eb06 050a 	add.w	r5, r6, sl
 800fa98:	462a      	mov	r2, r5
 800fa9a:	4616      	mov	r6, r2
 800fa9c:	3201      	adds	r2, #1
 800fa9e:	7830      	ldrb	r0, [r6, #0]
 800faa0:	f7ff ff8a 	bl	800f9b8 <__hexdig_fun>
 800faa4:	2800      	cmp	r0, #0
 800faa6:	d1f8      	bne.n	800fa9a <__gethex+0xb6>
 800faa8:	1bad      	subs	r5, r5, r6
 800faaa:	00ad      	lsls	r5, r5, #2
 800faac:	e004      	b.n	800fab8 <__gethex+0xd4>
 800faae:	2400      	movs	r4, #0
 800fab0:	4625      	mov	r5, r4
 800fab2:	e7e0      	b.n	800fa76 <__gethex+0x92>
 800fab4:	2d00      	cmp	r5, #0
 800fab6:	d1f7      	bne.n	800faa8 <__gethex+0xc4>
 800fab8:	7833      	ldrb	r3, [r6, #0]
 800faba:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800fabe:	2b50      	cmp	r3, #80	; 0x50
 800fac0:	d13b      	bne.n	800fb3a <__gethex+0x156>
 800fac2:	7873      	ldrb	r3, [r6, #1]
 800fac4:	2b2b      	cmp	r3, #43	; 0x2b
 800fac6:	d02c      	beq.n	800fb22 <__gethex+0x13e>
 800fac8:	2b2d      	cmp	r3, #45	; 0x2d
 800faca:	d02e      	beq.n	800fb2a <__gethex+0x146>
 800facc:	1c71      	adds	r1, r6, #1
 800face:	f04f 0900 	mov.w	r9, #0
 800fad2:	7808      	ldrb	r0, [r1, #0]
 800fad4:	f7ff ff70 	bl	800f9b8 <__hexdig_fun>
 800fad8:	1e43      	subs	r3, r0, #1
 800fada:	b2db      	uxtb	r3, r3
 800fadc:	2b18      	cmp	r3, #24
 800fade:	d82c      	bhi.n	800fb3a <__gethex+0x156>
 800fae0:	f1a0 0210 	sub.w	r2, r0, #16
 800fae4:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800fae8:	f7ff ff66 	bl	800f9b8 <__hexdig_fun>
 800faec:	1e43      	subs	r3, r0, #1
 800faee:	b2db      	uxtb	r3, r3
 800faf0:	2b18      	cmp	r3, #24
 800faf2:	d91d      	bls.n	800fb30 <__gethex+0x14c>
 800faf4:	f1b9 0f00 	cmp.w	r9, #0
 800faf8:	d000      	beq.n	800fafc <__gethex+0x118>
 800fafa:	4252      	negs	r2, r2
 800fafc:	4415      	add	r5, r2
 800fafe:	f8cb 1000 	str.w	r1, [fp]
 800fb02:	b1e4      	cbz	r4, 800fb3e <__gethex+0x15a>
 800fb04:	9b00      	ldr	r3, [sp, #0]
 800fb06:	2b00      	cmp	r3, #0
 800fb08:	bf14      	ite	ne
 800fb0a:	2700      	movne	r7, #0
 800fb0c:	2706      	moveq	r7, #6
 800fb0e:	4638      	mov	r0, r7
 800fb10:	b009      	add	sp, #36	; 0x24
 800fb12:	ecbd 8b02 	vpop	{d8}
 800fb16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fb1a:	463e      	mov	r6, r7
 800fb1c:	4625      	mov	r5, r4
 800fb1e:	2401      	movs	r4, #1
 800fb20:	e7ca      	b.n	800fab8 <__gethex+0xd4>
 800fb22:	f04f 0900 	mov.w	r9, #0
 800fb26:	1cb1      	adds	r1, r6, #2
 800fb28:	e7d3      	b.n	800fad2 <__gethex+0xee>
 800fb2a:	f04f 0901 	mov.w	r9, #1
 800fb2e:	e7fa      	b.n	800fb26 <__gethex+0x142>
 800fb30:	230a      	movs	r3, #10
 800fb32:	fb03 0202 	mla	r2, r3, r2, r0
 800fb36:	3a10      	subs	r2, #16
 800fb38:	e7d4      	b.n	800fae4 <__gethex+0x100>
 800fb3a:	4631      	mov	r1, r6
 800fb3c:	e7df      	b.n	800fafe <__gethex+0x11a>
 800fb3e:	1bf3      	subs	r3, r6, r7
 800fb40:	3b01      	subs	r3, #1
 800fb42:	4621      	mov	r1, r4
 800fb44:	2b07      	cmp	r3, #7
 800fb46:	dc0b      	bgt.n	800fb60 <__gethex+0x17c>
 800fb48:	ee18 0a10 	vmov	r0, s16
 800fb4c:	f000 fa64 	bl	8010018 <_Balloc>
 800fb50:	4604      	mov	r4, r0
 800fb52:	b940      	cbnz	r0, 800fb66 <__gethex+0x182>
 800fb54:	4b5d      	ldr	r3, [pc, #372]	; (800fccc <__gethex+0x2e8>)
 800fb56:	4602      	mov	r2, r0
 800fb58:	21de      	movs	r1, #222	; 0xde
 800fb5a:	485d      	ldr	r0, [pc, #372]	; (800fcd0 <__gethex+0x2ec>)
 800fb5c:	f000 fffe 	bl	8010b5c <__assert_func>
 800fb60:	3101      	adds	r1, #1
 800fb62:	105b      	asrs	r3, r3, #1
 800fb64:	e7ee      	b.n	800fb44 <__gethex+0x160>
 800fb66:	f100 0914 	add.w	r9, r0, #20
 800fb6a:	f04f 0b00 	mov.w	fp, #0
 800fb6e:	f1ca 0301 	rsb	r3, sl, #1
 800fb72:	f8cd 9008 	str.w	r9, [sp, #8]
 800fb76:	f8cd b000 	str.w	fp, [sp]
 800fb7a:	9306      	str	r3, [sp, #24]
 800fb7c:	42b7      	cmp	r7, r6
 800fb7e:	d340      	bcc.n	800fc02 <__gethex+0x21e>
 800fb80:	9802      	ldr	r0, [sp, #8]
 800fb82:	9b00      	ldr	r3, [sp, #0]
 800fb84:	f840 3b04 	str.w	r3, [r0], #4
 800fb88:	eba0 0009 	sub.w	r0, r0, r9
 800fb8c:	1080      	asrs	r0, r0, #2
 800fb8e:	0146      	lsls	r6, r0, #5
 800fb90:	6120      	str	r0, [r4, #16]
 800fb92:	4618      	mov	r0, r3
 800fb94:	f000 fb32 	bl	80101fc <__hi0bits>
 800fb98:	1a30      	subs	r0, r6, r0
 800fb9a:	f8d8 6000 	ldr.w	r6, [r8]
 800fb9e:	42b0      	cmp	r0, r6
 800fba0:	dd63      	ble.n	800fc6a <__gethex+0x286>
 800fba2:	1b87      	subs	r7, r0, r6
 800fba4:	4639      	mov	r1, r7
 800fba6:	4620      	mov	r0, r4
 800fba8:	f000 fed3 	bl	8010952 <__any_on>
 800fbac:	4682      	mov	sl, r0
 800fbae:	b1a8      	cbz	r0, 800fbdc <__gethex+0x1f8>
 800fbb0:	1e7b      	subs	r3, r7, #1
 800fbb2:	1159      	asrs	r1, r3, #5
 800fbb4:	f003 021f 	and.w	r2, r3, #31
 800fbb8:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800fbbc:	f04f 0a01 	mov.w	sl, #1
 800fbc0:	fa0a f202 	lsl.w	r2, sl, r2
 800fbc4:	420a      	tst	r2, r1
 800fbc6:	d009      	beq.n	800fbdc <__gethex+0x1f8>
 800fbc8:	4553      	cmp	r3, sl
 800fbca:	dd05      	ble.n	800fbd8 <__gethex+0x1f4>
 800fbcc:	1eb9      	subs	r1, r7, #2
 800fbce:	4620      	mov	r0, r4
 800fbd0:	f000 febf 	bl	8010952 <__any_on>
 800fbd4:	2800      	cmp	r0, #0
 800fbd6:	d145      	bne.n	800fc64 <__gethex+0x280>
 800fbd8:	f04f 0a02 	mov.w	sl, #2
 800fbdc:	4639      	mov	r1, r7
 800fbde:	4620      	mov	r0, r4
 800fbe0:	f7ff fe98 	bl	800f914 <rshift>
 800fbe4:	443d      	add	r5, r7
 800fbe6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800fbea:	42ab      	cmp	r3, r5
 800fbec:	da4c      	bge.n	800fc88 <__gethex+0x2a4>
 800fbee:	ee18 0a10 	vmov	r0, s16
 800fbf2:	4621      	mov	r1, r4
 800fbf4:	f000 fa50 	bl	8010098 <_Bfree>
 800fbf8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fbfa:	2300      	movs	r3, #0
 800fbfc:	6013      	str	r3, [r2, #0]
 800fbfe:	27a3      	movs	r7, #163	; 0xa3
 800fc00:	e785      	b.n	800fb0e <__gethex+0x12a>
 800fc02:	1e73      	subs	r3, r6, #1
 800fc04:	9a05      	ldr	r2, [sp, #20]
 800fc06:	9303      	str	r3, [sp, #12]
 800fc08:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800fc0c:	4293      	cmp	r3, r2
 800fc0e:	d019      	beq.n	800fc44 <__gethex+0x260>
 800fc10:	f1bb 0f20 	cmp.w	fp, #32
 800fc14:	d107      	bne.n	800fc26 <__gethex+0x242>
 800fc16:	9b02      	ldr	r3, [sp, #8]
 800fc18:	9a00      	ldr	r2, [sp, #0]
 800fc1a:	f843 2b04 	str.w	r2, [r3], #4
 800fc1e:	9302      	str	r3, [sp, #8]
 800fc20:	2300      	movs	r3, #0
 800fc22:	9300      	str	r3, [sp, #0]
 800fc24:	469b      	mov	fp, r3
 800fc26:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800fc2a:	f7ff fec5 	bl	800f9b8 <__hexdig_fun>
 800fc2e:	9b00      	ldr	r3, [sp, #0]
 800fc30:	f000 000f 	and.w	r0, r0, #15
 800fc34:	fa00 f00b 	lsl.w	r0, r0, fp
 800fc38:	4303      	orrs	r3, r0
 800fc3a:	9300      	str	r3, [sp, #0]
 800fc3c:	f10b 0b04 	add.w	fp, fp, #4
 800fc40:	9b03      	ldr	r3, [sp, #12]
 800fc42:	e00d      	b.n	800fc60 <__gethex+0x27c>
 800fc44:	9b03      	ldr	r3, [sp, #12]
 800fc46:	9a06      	ldr	r2, [sp, #24]
 800fc48:	4413      	add	r3, r2
 800fc4a:	42bb      	cmp	r3, r7
 800fc4c:	d3e0      	bcc.n	800fc10 <__gethex+0x22c>
 800fc4e:	4618      	mov	r0, r3
 800fc50:	9901      	ldr	r1, [sp, #4]
 800fc52:	9307      	str	r3, [sp, #28]
 800fc54:	4652      	mov	r2, sl
 800fc56:	f000 ff5f 	bl	8010b18 <strncmp>
 800fc5a:	9b07      	ldr	r3, [sp, #28]
 800fc5c:	2800      	cmp	r0, #0
 800fc5e:	d1d7      	bne.n	800fc10 <__gethex+0x22c>
 800fc60:	461e      	mov	r6, r3
 800fc62:	e78b      	b.n	800fb7c <__gethex+0x198>
 800fc64:	f04f 0a03 	mov.w	sl, #3
 800fc68:	e7b8      	b.n	800fbdc <__gethex+0x1f8>
 800fc6a:	da0a      	bge.n	800fc82 <__gethex+0x29e>
 800fc6c:	1a37      	subs	r7, r6, r0
 800fc6e:	4621      	mov	r1, r4
 800fc70:	ee18 0a10 	vmov	r0, s16
 800fc74:	463a      	mov	r2, r7
 800fc76:	f000 fc2b 	bl	80104d0 <__lshift>
 800fc7a:	1bed      	subs	r5, r5, r7
 800fc7c:	4604      	mov	r4, r0
 800fc7e:	f100 0914 	add.w	r9, r0, #20
 800fc82:	f04f 0a00 	mov.w	sl, #0
 800fc86:	e7ae      	b.n	800fbe6 <__gethex+0x202>
 800fc88:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800fc8c:	42a8      	cmp	r0, r5
 800fc8e:	dd72      	ble.n	800fd76 <__gethex+0x392>
 800fc90:	1b45      	subs	r5, r0, r5
 800fc92:	42ae      	cmp	r6, r5
 800fc94:	dc36      	bgt.n	800fd04 <__gethex+0x320>
 800fc96:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800fc9a:	2b02      	cmp	r3, #2
 800fc9c:	d02a      	beq.n	800fcf4 <__gethex+0x310>
 800fc9e:	2b03      	cmp	r3, #3
 800fca0:	d02c      	beq.n	800fcfc <__gethex+0x318>
 800fca2:	2b01      	cmp	r3, #1
 800fca4:	d11c      	bne.n	800fce0 <__gethex+0x2fc>
 800fca6:	42ae      	cmp	r6, r5
 800fca8:	d11a      	bne.n	800fce0 <__gethex+0x2fc>
 800fcaa:	2e01      	cmp	r6, #1
 800fcac:	d112      	bne.n	800fcd4 <__gethex+0x2f0>
 800fcae:	9a04      	ldr	r2, [sp, #16]
 800fcb0:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800fcb4:	6013      	str	r3, [r2, #0]
 800fcb6:	2301      	movs	r3, #1
 800fcb8:	6123      	str	r3, [r4, #16]
 800fcba:	f8c9 3000 	str.w	r3, [r9]
 800fcbe:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800fcc0:	2762      	movs	r7, #98	; 0x62
 800fcc2:	601c      	str	r4, [r3, #0]
 800fcc4:	e723      	b.n	800fb0e <__gethex+0x12a>
 800fcc6:	bf00      	nop
 800fcc8:	08012420 	.word	0x08012420
 800fccc:	080123a8 	.word	0x080123a8
 800fcd0:	080123b9 	.word	0x080123b9
 800fcd4:	1e71      	subs	r1, r6, #1
 800fcd6:	4620      	mov	r0, r4
 800fcd8:	f000 fe3b 	bl	8010952 <__any_on>
 800fcdc:	2800      	cmp	r0, #0
 800fcde:	d1e6      	bne.n	800fcae <__gethex+0x2ca>
 800fce0:	ee18 0a10 	vmov	r0, s16
 800fce4:	4621      	mov	r1, r4
 800fce6:	f000 f9d7 	bl	8010098 <_Bfree>
 800fcea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fcec:	2300      	movs	r3, #0
 800fcee:	6013      	str	r3, [r2, #0]
 800fcf0:	2750      	movs	r7, #80	; 0x50
 800fcf2:	e70c      	b.n	800fb0e <__gethex+0x12a>
 800fcf4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fcf6:	2b00      	cmp	r3, #0
 800fcf8:	d1f2      	bne.n	800fce0 <__gethex+0x2fc>
 800fcfa:	e7d8      	b.n	800fcae <__gethex+0x2ca>
 800fcfc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fcfe:	2b00      	cmp	r3, #0
 800fd00:	d1d5      	bne.n	800fcae <__gethex+0x2ca>
 800fd02:	e7ed      	b.n	800fce0 <__gethex+0x2fc>
 800fd04:	1e6f      	subs	r7, r5, #1
 800fd06:	f1ba 0f00 	cmp.w	sl, #0
 800fd0a:	d131      	bne.n	800fd70 <__gethex+0x38c>
 800fd0c:	b127      	cbz	r7, 800fd18 <__gethex+0x334>
 800fd0e:	4639      	mov	r1, r7
 800fd10:	4620      	mov	r0, r4
 800fd12:	f000 fe1e 	bl	8010952 <__any_on>
 800fd16:	4682      	mov	sl, r0
 800fd18:	117b      	asrs	r3, r7, #5
 800fd1a:	2101      	movs	r1, #1
 800fd1c:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 800fd20:	f007 071f 	and.w	r7, r7, #31
 800fd24:	fa01 f707 	lsl.w	r7, r1, r7
 800fd28:	421f      	tst	r7, r3
 800fd2a:	4629      	mov	r1, r5
 800fd2c:	4620      	mov	r0, r4
 800fd2e:	bf18      	it	ne
 800fd30:	f04a 0a02 	orrne.w	sl, sl, #2
 800fd34:	1b76      	subs	r6, r6, r5
 800fd36:	f7ff fded 	bl	800f914 <rshift>
 800fd3a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800fd3e:	2702      	movs	r7, #2
 800fd40:	f1ba 0f00 	cmp.w	sl, #0
 800fd44:	d048      	beq.n	800fdd8 <__gethex+0x3f4>
 800fd46:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800fd4a:	2b02      	cmp	r3, #2
 800fd4c:	d015      	beq.n	800fd7a <__gethex+0x396>
 800fd4e:	2b03      	cmp	r3, #3
 800fd50:	d017      	beq.n	800fd82 <__gethex+0x39e>
 800fd52:	2b01      	cmp	r3, #1
 800fd54:	d109      	bne.n	800fd6a <__gethex+0x386>
 800fd56:	f01a 0f02 	tst.w	sl, #2
 800fd5a:	d006      	beq.n	800fd6a <__gethex+0x386>
 800fd5c:	f8d9 0000 	ldr.w	r0, [r9]
 800fd60:	ea4a 0a00 	orr.w	sl, sl, r0
 800fd64:	f01a 0f01 	tst.w	sl, #1
 800fd68:	d10e      	bne.n	800fd88 <__gethex+0x3a4>
 800fd6a:	f047 0710 	orr.w	r7, r7, #16
 800fd6e:	e033      	b.n	800fdd8 <__gethex+0x3f4>
 800fd70:	f04f 0a01 	mov.w	sl, #1
 800fd74:	e7d0      	b.n	800fd18 <__gethex+0x334>
 800fd76:	2701      	movs	r7, #1
 800fd78:	e7e2      	b.n	800fd40 <__gethex+0x35c>
 800fd7a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fd7c:	f1c3 0301 	rsb	r3, r3, #1
 800fd80:	9315      	str	r3, [sp, #84]	; 0x54
 800fd82:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fd84:	2b00      	cmp	r3, #0
 800fd86:	d0f0      	beq.n	800fd6a <__gethex+0x386>
 800fd88:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800fd8c:	f104 0314 	add.w	r3, r4, #20
 800fd90:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800fd94:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800fd98:	f04f 0c00 	mov.w	ip, #0
 800fd9c:	4618      	mov	r0, r3
 800fd9e:	f853 2b04 	ldr.w	r2, [r3], #4
 800fda2:	f1b2 3fff 	cmp.w	r2, #4294967295
 800fda6:	d01c      	beq.n	800fde2 <__gethex+0x3fe>
 800fda8:	3201      	adds	r2, #1
 800fdaa:	6002      	str	r2, [r0, #0]
 800fdac:	2f02      	cmp	r7, #2
 800fdae:	f104 0314 	add.w	r3, r4, #20
 800fdb2:	d13f      	bne.n	800fe34 <__gethex+0x450>
 800fdb4:	f8d8 2000 	ldr.w	r2, [r8]
 800fdb8:	3a01      	subs	r2, #1
 800fdba:	42b2      	cmp	r2, r6
 800fdbc:	d10a      	bne.n	800fdd4 <__gethex+0x3f0>
 800fdbe:	1171      	asrs	r1, r6, #5
 800fdc0:	2201      	movs	r2, #1
 800fdc2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800fdc6:	f006 061f 	and.w	r6, r6, #31
 800fdca:	fa02 f606 	lsl.w	r6, r2, r6
 800fdce:	421e      	tst	r6, r3
 800fdd0:	bf18      	it	ne
 800fdd2:	4617      	movne	r7, r2
 800fdd4:	f047 0720 	orr.w	r7, r7, #32
 800fdd8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800fdda:	601c      	str	r4, [r3, #0]
 800fddc:	9b04      	ldr	r3, [sp, #16]
 800fdde:	601d      	str	r5, [r3, #0]
 800fde0:	e695      	b.n	800fb0e <__gethex+0x12a>
 800fde2:	4299      	cmp	r1, r3
 800fde4:	f843 cc04 	str.w	ip, [r3, #-4]
 800fde8:	d8d8      	bhi.n	800fd9c <__gethex+0x3b8>
 800fdea:	68a3      	ldr	r3, [r4, #8]
 800fdec:	459b      	cmp	fp, r3
 800fdee:	db19      	blt.n	800fe24 <__gethex+0x440>
 800fdf0:	6861      	ldr	r1, [r4, #4]
 800fdf2:	ee18 0a10 	vmov	r0, s16
 800fdf6:	3101      	adds	r1, #1
 800fdf8:	f000 f90e 	bl	8010018 <_Balloc>
 800fdfc:	4681      	mov	r9, r0
 800fdfe:	b918      	cbnz	r0, 800fe08 <__gethex+0x424>
 800fe00:	4b1a      	ldr	r3, [pc, #104]	; (800fe6c <__gethex+0x488>)
 800fe02:	4602      	mov	r2, r0
 800fe04:	2184      	movs	r1, #132	; 0x84
 800fe06:	e6a8      	b.n	800fb5a <__gethex+0x176>
 800fe08:	6922      	ldr	r2, [r4, #16]
 800fe0a:	3202      	adds	r2, #2
 800fe0c:	f104 010c 	add.w	r1, r4, #12
 800fe10:	0092      	lsls	r2, r2, #2
 800fe12:	300c      	adds	r0, #12
 800fe14:	f7fe ff8a 	bl	800ed2c <memcpy>
 800fe18:	4621      	mov	r1, r4
 800fe1a:	ee18 0a10 	vmov	r0, s16
 800fe1e:	f000 f93b 	bl	8010098 <_Bfree>
 800fe22:	464c      	mov	r4, r9
 800fe24:	6923      	ldr	r3, [r4, #16]
 800fe26:	1c5a      	adds	r2, r3, #1
 800fe28:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800fe2c:	6122      	str	r2, [r4, #16]
 800fe2e:	2201      	movs	r2, #1
 800fe30:	615a      	str	r2, [r3, #20]
 800fe32:	e7bb      	b.n	800fdac <__gethex+0x3c8>
 800fe34:	6922      	ldr	r2, [r4, #16]
 800fe36:	455a      	cmp	r2, fp
 800fe38:	dd0b      	ble.n	800fe52 <__gethex+0x46e>
 800fe3a:	2101      	movs	r1, #1
 800fe3c:	4620      	mov	r0, r4
 800fe3e:	f7ff fd69 	bl	800f914 <rshift>
 800fe42:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800fe46:	3501      	adds	r5, #1
 800fe48:	42ab      	cmp	r3, r5
 800fe4a:	f6ff aed0 	blt.w	800fbee <__gethex+0x20a>
 800fe4e:	2701      	movs	r7, #1
 800fe50:	e7c0      	b.n	800fdd4 <__gethex+0x3f0>
 800fe52:	f016 061f 	ands.w	r6, r6, #31
 800fe56:	d0fa      	beq.n	800fe4e <__gethex+0x46a>
 800fe58:	4453      	add	r3, sl
 800fe5a:	f1c6 0620 	rsb	r6, r6, #32
 800fe5e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800fe62:	f000 f9cb 	bl	80101fc <__hi0bits>
 800fe66:	42b0      	cmp	r0, r6
 800fe68:	dbe7      	blt.n	800fe3a <__gethex+0x456>
 800fe6a:	e7f0      	b.n	800fe4e <__gethex+0x46a>
 800fe6c:	080123a8 	.word	0x080123a8

0800fe70 <L_shift>:
 800fe70:	f1c2 0208 	rsb	r2, r2, #8
 800fe74:	0092      	lsls	r2, r2, #2
 800fe76:	b570      	push	{r4, r5, r6, lr}
 800fe78:	f1c2 0620 	rsb	r6, r2, #32
 800fe7c:	6843      	ldr	r3, [r0, #4]
 800fe7e:	6804      	ldr	r4, [r0, #0]
 800fe80:	fa03 f506 	lsl.w	r5, r3, r6
 800fe84:	432c      	orrs	r4, r5
 800fe86:	40d3      	lsrs	r3, r2
 800fe88:	6004      	str	r4, [r0, #0]
 800fe8a:	f840 3f04 	str.w	r3, [r0, #4]!
 800fe8e:	4288      	cmp	r0, r1
 800fe90:	d3f4      	bcc.n	800fe7c <L_shift+0xc>
 800fe92:	bd70      	pop	{r4, r5, r6, pc}

0800fe94 <__match>:
 800fe94:	b530      	push	{r4, r5, lr}
 800fe96:	6803      	ldr	r3, [r0, #0]
 800fe98:	3301      	adds	r3, #1
 800fe9a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800fe9e:	b914      	cbnz	r4, 800fea6 <__match+0x12>
 800fea0:	6003      	str	r3, [r0, #0]
 800fea2:	2001      	movs	r0, #1
 800fea4:	bd30      	pop	{r4, r5, pc}
 800fea6:	f813 2b01 	ldrb.w	r2, [r3], #1
 800feaa:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800feae:	2d19      	cmp	r5, #25
 800feb0:	bf98      	it	ls
 800feb2:	3220      	addls	r2, #32
 800feb4:	42a2      	cmp	r2, r4
 800feb6:	d0f0      	beq.n	800fe9a <__match+0x6>
 800feb8:	2000      	movs	r0, #0
 800feba:	e7f3      	b.n	800fea4 <__match+0x10>

0800febc <__hexnan>:
 800febc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fec0:	680b      	ldr	r3, [r1, #0]
 800fec2:	115e      	asrs	r6, r3, #5
 800fec4:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800fec8:	f013 031f 	ands.w	r3, r3, #31
 800fecc:	b087      	sub	sp, #28
 800fece:	bf18      	it	ne
 800fed0:	3604      	addne	r6, #4
 800fed2:	2500      	movs	r5, #0
 800fed4:	1f37      	subs	r7, r6, #4
 800fed6:	4690      	mov	r8, r2
 800fed8:	6802      	ldr	r2, [r0, #0]
 800feda:	9301      	str	r3, [sp, #4]
 800fedc:	4682      	mov	sl, r0
 800fede:	f846 5c04 	str.w	r5, [r6, #-4]
 800fee2:	46b9      	mov	r9, r7
 800fee4:	463c      	mov	r4, r7
 800fee6:	9502      	str	r5, [sp, #8]
 800fee8:	46ab      	mov	fp, r5
 800feea:	7851      	ldrb	r1, [r2, #1]
 800feec:	1c53      	adds	r3, r2, #1
 800feee:	9303      	str	r3, [sp, #12]
 800fef0:	b341      	cbz	r1, 800ff44 <__hexnan+0x88>
 800fef2:	4608      	mov	r0, r1
 800fef4:	9205      	str	r2, [sp, #20]
 800fef6:	9104      	str	r1, [sp, #16]
 800fef8:	f7ff fd5e 	bl	800f9b8 <__hexdig_fun>
 800fefc:	2800      	cmp	r0, #0
 800fefe:	d14f      	bne.n	800ffa0 <__hexnan+0xe4>
 800ff00:	9904      	ldr	r1, [sp, #16]
 800ff02:	9a05      	ldr	r2, [sp, #20]
 800ff04:	2920      	cmp	r1, #32
 800ff06:	d818      	bhi.n	800ff3a <__hexnan+0x7e>
 800ff08:	9b02      	ldr	r3, [sp, #8]
 800ff0a:	459b      	cmp	fp, r3
 800ff0c:	dd13      	ble.n	800ff36 <__hexnan+0x7a>
 800ff0e:	454c      	cmp	r4, r9
 800ff10:	d206      	bcs.n	800ff20 <__hexnan+0x64>
 800ff12:	2d07      	cmp	r5, #7
 800ff14:	dc04      	bgt.n	800ff20 <__hexnan+0x64>
 800ff16:	462a      	mov	r2, r5
 800ff18:	4649      	mov	r1, r9
 800ff1a:	4620      	mov	r0, r4
 800ff1c:	f7ff ffa8 	bl	800fe70 <L_shift>
 800ff20:	4544      	cmp	r4, r8
 800ff22:	d950      	bls.n	800ffc6 <__hexnan+0x10a>
 800ff24:	2300      	movs	r3, #0
 800ff26:	f1a4 0904 	sub.w	r9, r4, #4
 800ff2a:	f844 3c04 	str.w	r3, [r4, #-4]
 800ff2e:	f8cd b008 	str.w	fp, [sp, #8]
 800ff32:	464c      	mov	r4, r9
 800ff34:	461d      	mov	r5, r3
 800ff36:	9a03      	ldr	r2, [sp, #12]
 800ff38:	e7d7      	b.n	800feea <__hexnan+0x2e>
 800ff3a:	2929      	cmp	r1, #41	; 0x29
 800ff3c:	d156      	bne.n	800ffec <__hexnan+0x130>
 800ff3e:	3202      	adds	r2, #2
 800ff40:	f8ca 2000 	str.w	r2, [sl]
 800ff44:	f1bb 0f00 	cmp.w	fp, #0
 800ff48:	d050      	beq.n	800ffec <__hexnan+0x130>
 800ff4a:	454c      	cmp	r4, r9
 800ff4c:	d206      	bcs.n	800ff5c <__hexnan+0xa0>
 800ff4e:	2d07      	cmp	r5, #7
 800ff50:	dc04      	bgt.n	800ff5c <__hexnan+0xa0>
 800ff52:	462a      	mov	r2, r5
 800ff54:	4649      	mov	r1, r9
 800ff56:	4620      	mov	r0, r4
 800ff58:	f7ff ff8a 	bl	800fe70 <L_shift>
 800ff5c:	4544      	cmp	r4, r8
 800ff5e:	d934      	bls.n	800ffca <__hexnan+0x10e>
 800ff60:	f1a8 0204 	sub.w	r2, r8, #4
 800ff64:	4623      	mov	r3, r4
 800ff66:	f853 1b04 	ldr.w	r1, [r3], #4
 800ff6a:	f842 1f04 	str.w	r1, [r2, #4]!
 800ff6e:	429f      	cmp	r7, r3
 800ff70:	d2f9      	bcs.n	800ff66 <__hexnan+0xaa>
 800ff72:	1b3b      	subs	r3, r7, r4
 800ff74:	f023 0303 	bic.w	r3, r3, #3
 800ff78:	3304      	adds	r3, #4
 800ff7a:	3401      	adds	r4, #1
 800ff7c:	3e03      	subs	r6, #3
 800ff7e:	42b4      	cmp	r4, r6
 800ff80:	bf88      	it	hi
 800ff82:	2304      	movhi	r3, #4
 800ff84:	4443      	add	r3, r8
 800ff86:	2200      	movs	r2, #0
 800ff88:	f843 2b04 	str.w	r2, [r3], #4
 800ff8c:	429f      	cmp	r7, r3
 800ff8e:	d2fb      	bcs.n	800ff88 <__hexnan+0xcc>
 800ff90:	683b      	ldr	r3, [r7, #0]
 800ff92:	b91b      	cbnz	r3, 800ff9c <__hexnan+0xe0>
 800ff94:	4547      	cmp	r7, r8
 800ff96:	d127      	bne.n	800ffe8 <__hexnan+0x12c>
 800ff98:	2301      	movs	r3, #1
 800ff9a:	603b      	str	r3, [r7, #0]
 800ff9c:	2005      	movs	r0, #5
 800ff9e:	e026      	b.n	800ffee <__hexnan+0x132>
 800ffa0:	3501      	adds	r5, #1
 800ffa2:	2d08      	cmp	r5, #8
 800ffa4:	f10b 0b01 	add.w	fp, fp, #1
 800ffa8:	dd06      	ble.n	800ffb8 <__hexnan+0xfc>
 800ffaa:	4544      	cmp	r4, r8
 800ffac:	d9c3      	bls.n	800ff36 <__hexnan+0x7a>
 800ffae:	2300      	movs	r3, #0
 800ffb0:	f844 3c04 	str.w	r3, [r4, #-4]
 800ffb4:	2501      	movs	r5, #1
 800ffb6:	3c04      	subs	r4, #4
 800ffb8:	6822      	ldr	r2, [r4, #0]
 800ffba:	f000 000f 	and.w	r0, r0, #15
 800ffbe:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 800ffc2:	6022      	str	r2, [r4, #0]
 800ffc4:	e7b7      	b.n	800ff36 <__hexnan+0x7a>
 800ffc6:	2508      	movs	r5, #8
 800ffc8:	e7b5      	b.n	800ff36 <__hexnan+0x7a>
 800ffca:	9b01      	ldr	r3, [sp, #4]
 800ffcc:	2b00      	cmp	r3, #0
 800ffce:	d0df      	beq.n	800ff90 <__hexnan+0xd4>
 800ffd0:	f04f 32ff 	mov.w	r2, #4294967295
 800ffd4:	f1c3 0320 	rsb	r3, r3, #32
 800ffd8:	fa22 f303 	lsr.w	r3, r2, r3
 800ffdc:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800ffe0:	401a      	ands	r2, r3
 800ffe2:	f846 2c04 	str.w	r2, [r6, #-4]
 800ffe6:	e7d3      	b.n	800ff90 <__hexnan+0xd4>
 800ffe8:	3f04      	subs	r7, #4
 800ffea:	e7d1      	b.n	800ff90 <__hexnan+0xd4>
 800ffec:	2004      	movs	r0, #4
 800ffee:	b007      	add	sp, #28
 800fff0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fff4 <__ascii_mbtowc>:
 800fff4:	b082      	sub	sp, #8
 800fff6:	b901      	cbnz	r1, 800fffa <__ascii_mbtowc+0x6>
 800fff8:	a901      	add	r1, sp, #4
 800fffa:	b142      	cbz	r2, 801000e <__ascii_mbtowc+0x1a>
 800fffc:	b14b      	cbz	r3, 8010012 <__ascii_mbtowc+0x1e>
 800fffe:	7813      	ldrb	r3, [r2, #0]
 8010000:	600b      	str	r3, [r1, #0]
 8010002:	7812      	ldrb	r2, [r2, #0]
 8010004:	1e10      	subs	r0, r2, #0
 8010006:	bf18      	it	ne
 8010008:	2001      	movne	r0, #1
 801000a:	b002      	add	sp, #8
 801000c:	4770      	bx	lr
 801000e:	4610      	mov	r0, r2
 8010010:	e7fb      	b.n	801000a <__ascii_mbtowc+0x16>
 8010012:	f06f 0001 	mvn.w	r0, #1
 8010016:	e7f8      	b.n	801000a <__ascii_mbtowc+0x16>

08010018 <_Balloc>:
 8010018:	b570      	push	{r4, r5, r6, lr}
 801001a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 801001c:	4604      	mov	r4, r0
 801001e:	460d      	mov	r5, r1
 8010020:	b976      	cbnz	r6, 8010040 <_Balloc+0x28>
 8010022:	2010      	movs	r0, #16
 8010024:	f000 fdca 	bl	8010bbc <malloc>
 8010028:	4602      	mov	r2, r0
 801002a:	6260      	str	r0, [r4, #36]	; 0x24
 801002c:	b920      	cbnz	r0, 8010038 <_Balloc+0x20>
 801002e:	4b18      	ldr	r3, [pc, #96]	; (8010090 <_Balloc+0x78>)
 8010030:	4818      	ldr	r0, [pc, #96]	; (8010094 <_Balloc+0x7c>)
 8010032:	2166      	movs	r1, #102	; 0x66
 8010034:	f000 fd92 	bl	8010b5c <__assert_func>
 8010038:	e9c0 6601 	strd	r6, r6, [r0, #4]
 801003c:	6006      	str	r6, [r0, #0]
 801003e:	60c6      	str	r6, [r0, #12]
 8010040:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8010042:	68f3      	ldr	r3, [r6, #12]
 8010044:	b183      	cbz	r3, 8010068 <_Balloc+0x50>
 8010046:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010048:	68db      	ldr	r3, [r3, #12]
 801004a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 801004e:	b9b8      	cbnz	r0, 8010080 <_Balloc+0x68>
 8010050:	2101      	movs	r1, #1
 8010052:	fa01 f605 	lsl.w	r6, r1, r5
 8010056:	1d72      	adds	r2, r6, #5
 8010058:	0092      	lsls	r2, r2, #2
 801005a:	4620      	mov	r0, r4
 801005c:	f000 fc9a 	bl	8010994 <_calloc_r>
 8010060:	b160      	cbz	r0, 801007c <_Balloc+0x64>
 8010062:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8010066:	e00e      	b.n	8010086 <_Balloc+0x6e>
 8010068:	2221      	movs	r2, #33	; 0x21
 801006a:	2104      	movs	r1, #4
 801006c:	4620      	mov	r0, r4
 801006e:	f000 fc91 	bl	8010994 <_calloc_r>
 8010072:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8010074:	60f0      	str	r0, [r6, #12]
 8010076:	68db      	ldr	r3, [r3, #12]
 8010078:	2b00      	cmp	r3, #0
 801007a:	d1e4      	bne.n	8010046 <_Balloc+0x2e>
 801007c:	2000      	movs	r0, #0
 801007e:	bd70      	pop	{r4, r5, r6, pc}
 8010080:	6802      	ldr	r2, [r0, #0]
 8010082:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8010086:	2300      	movs	r3, #0
 8010088:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801008c:	e7f7      	b.n	801007e <_Balloc+0x66>
 801008e:	bf00      	nop
 8010090:	08012434 	.word	0x08012434
 8010094:	0801244b 	.word	0x0801244b

08010098 <_Bfree>:
 8010098:	b570      	push	{r4, r5, r6, lr}
 801009a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 801009c:	4605      	mov	r5, r0
 801009e:	460c      	mov	r4, r1
 80100a0:	b976      	cbnz	r6, 80100c0 <_Bfree+0x28>
 80100a2:	2010      	movs	r0, #16
 80100a4:	f000 fd8a 	bl	8010bbc <malloc>
 80100a8:	4602      	mov	r2, r0
 80100aa:	6268      	str	r0, [r5, #36]	; 0x24
 80100ac:	b920      	cbnz	r0, 80100b8 <_Bfree+0x20>
 80100ae:	4b09      	ldr	r3, [pc, #36]	; (80100d4 <_Bfree+0x3c>)
 80100b0:	4809      	ldr	r0, [pc, #36]	; (80100d8 <_Bfree+0x40>)
 80100b2:	218a      	movs	r1, #138	; 0x8a
 80100b4:	f000 fd52 	bl	8010b5c <__assert_func>
 80100b8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80100bc:	6006      	str	r6, [r0, #0]
 80100be:	60c6      	str	r6, [r0, #12]
 80100c0:	b13c      	cbz	r4, 80100d2 <_Bfree+0x3a>
 80100c2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80100c4:	6862      	ldr	r2, [r4, #4]
 80100c6:	68db      	ldr	r3, [r3, #12]
 80100c8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80100cc:	6021      	str	r1, [r4, #0]
 80100ce:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80100d2:	bd70      	pop	{r4, r5, r6, pc}
 80100d4:	08012434 	.word	0x08012434
 80100d8:	0801244b 	.word	0x0801244b

080100dc <__multadd>:
 80100dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80100e0:	690d      	ldr	r5, [r1, #16]
 80100e2:	4607      	mov	r7, r0
 80100e4:	460c      	mov	r4, r1
 80100e6:	461e      	mov	r6, r3
 80100e8:	f101 0c14 	add.w	ip, r1, #20
 80100ec:	2000      	movs	r0, #0
 80100ee:	f8dc 3000 	ldr.w	r3, [ip]
 80100f2:	b299      	uxth	r1, r3
 80100f4:	fb02 6101 	mla	r1, r2, r1, r6
 80100f8:	0c1e      	lsrs	r6, r3, #16
 80100fa:	0c0b      	lsrs	r3, r1, #16
 80100fc:	fb02 3306 	mla	r3, r2, r6, r3
 8010100:	b289      	uxth	r1, r1
 8010102:	3001      	adds	r0, #1
 8010104:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8010108:	4285      	cmp	r5, r0
 801010a:	f84c 1b04 	str.w	r1, [ip], #4
 801010e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8010112:	dcec      	bgt.n	80100ee <__multadd+0x12>
 8010114:	b30e      	cbz	r6, 801015a <__multadd+0x7e>
 8010116:	68a3      	ldr	r3, [r4, #8]
 8010118:	42ab      	cmp	r3, r5
 801011a:	dc19      	bgt.n	8010150 <__multadd+0x74>
 801011c:	6861      	ldr	r1, [r4, #4]
 801011e:	4638      	mov	r0, r7
 8010120:	3101      	adds	r1, #1
 8010122:	f7ff ff79 	bl	8010018 <_Balloc>
 8010126:	4680      	mov	r8, r0
 8010128:	b928      	cbnz	r0, 8010136 <__multadd+0x5a>
 801012a:	4602      	mov	r2, r0
 801012c:	4b0c      	ldr	r3, [pc, #48]	; (8010160 <__multadd+0x84>)
 801012e:	480d      	ldr	r0, [pc, #52]	; (8010164 <__multadd+0x88>)
 8010130:	21b5      	movs	r1, #181	; 0xb5
 8010132:	f000 fd13 	bl	8010b5c <__assert_func>
 8010136:	6922      	ldr	r2, [r4, #16]
 8010138:	3202      	adds	r2, #2
 801013a:	f104 010c 	add.w	r1, r4, #12
 801013e:	0092      	lsls	r2, r2, #2
 8010140:	300c      	adds	r0, #12
 8010142:	f7fe fdf3 	bl	800ed2c <memcpy>
 8010146:	4621      	mov	r1, r4
 8010148:	4638      	mov	r0, r7
 801014a:	f7ff ffa5 	bl	8010098 <_Bfree>
 801014e:	4644      	mov	r4, r8
 8010150:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8010154:	3501      	adds	r5, #1
 8010156:	615e      	str	r6, [r3, #20]
 8010158:	6125      	str	r5, [r4, #16]
 801015a:	4620      	mov	r0, r4
 801015c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010160:	080123a8 	.word	0x080123a8
 8010164:	0801244b 	.word	0x0801244b

08010168 <__s2b>:
 8010168:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801016c:	460c      	mov	r4, r1
 801016e:	4615      	mov	r5, r2
 8010170:	461f      	mov	r7, r3
 8010172:	2209      	movs	r2, #9
 8010174:	3308      	adds	r3, #8
 8010176:	4606      	mov	r6, r0
 8010178:	fb93 f3f2 	sdiv	r3, r3, r2
 801017c:	2100      	movs	r1, #0
 801017e:	2201      	movs	r2, #1
 8010180:	429a      	cmp	r2, r3
 8010182:	db09      	blt.n	8010198 <__s2b+0x30>
 8010184:	4630      	mov	r0, r6
 8010186:	f7ff ff47 	bl	8010018 <_Balloc>
 801018a:	b940      	cbnz	r0, 801019e <__s2b+0x36>
 801018c:	4602      	mov	r2, r0
 801018e:	4b19      	ldr	r3, [pc, #100]	; (80101f4 <__s2b+0x8c>)
 8010190:	4819      	ldr	r0, [pc, #100]	; (80101f8 <__s2b+0x90>)
 8010192:	21ce      	movs	r1, #206	; 0xce
 8010194:	f000 fce2 	bl	8010b5c <__assert_func>
 8010198:	0052      	lsls	r2, r2, #1
 801019a:	3101      	adds	r1, #1
 801019c:	e7f0      	b.n	8010180 <__s2b+0x18>
 801019e:	9b08      	ldr	r3, [sp, #32]
 80101a0:	6143      	str	r3, [r0, #20]
 80101a2:	2d09      	cmp	r5, #9
 80101a4:	f04f 0301 	mov.w	r3, #1
 80101a8:	6103      	str	r3, [r0, #16]
 80101aa:	dd16      	ble.n	80101da <__s2b+0x72>
 80101ac:	f104 0909 	add.w	r9, r4, #9
 80101b0:	46c8      	mov	r8, r9
 80101b2:	442c      	add	r4, r5
 80101b4:	f818 3b01 	ldrb.w	r3, [r8], #1
 80101b8:	4601      	mov	r1, r0
 80101ba:	3b30      	subs	r3, #48	; 0x30
 80101bc:	220a      	movs	r2, #10
 80101be:	4630      	mov	r0, r6
 80101c0:	f7ff ff8c 	bl	80100dc <__multadd>
 80101c4:	45a0      	cmp	r8, r4
 80101c6:	d1f5      	bne.n	80101b4 <__s2b+0x4c>
 80101c8:	f1a5 0408 	sub.w	r4, r5, #8
 80101cc:	444c      	add	r4, r9
 80101ce:	1b2d      	subs	r5, r5, r4
 80101d0:	1963      	adds	r3, r4, r5
 80101d2:	42bb      	cmp	r3, r7
 80101d4:	db04      	blt.n	80101e0 <__s2b+0x78>
 80101d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80101da:	340a      	adds	r4, #10
 80101dc:	2509      	movs	r5, #9
 80101de:	e7f6      	b.n	80101ce <__s2b+0x66>
 80101e0:	f814 3b01 	ldrb.w	r3, [r4], #1
 80101e4:	4601      	mov	r1, r0
 80101e6:	3b30      	subs	r3, #48	; 0x30
 80101e8:	220a      	movs	r2, #10
 80101ea:	4630      	mov	r0, r6
 80101ec:	f7ff ff76 	bl	80100dc <__multadd>
 80101f0:	e7ee      	b.n	80101d0 <__s2b+0x68>
 80101f2:	bf00      	nop
 80101f4:	080123a8 	.word	0x080123a8
 80101f8:	0801244b 	.word	0x0801244b

080101fc <__hi0bits>:
 80101fc:	0c03      	lsrs	r3, r0, #16
 80101fe:	041b      	lsls	r3, r3, #16
 8010200:	b9d3      	cbnz	r3, 8010238 <__hi0bits+0x3c>
 8010202:	0400      	lsls	r0, r0, #16
 8010204:	2310      	movs	r3, #16
 8010206:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 801020a:	bf04      	itt	eq
 801020c:	0200      	lsleq	r0, r0, #8
 801020e:	3308      	addeq	r3, #8
 8010210:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8010214:	bf04      	itt	eq
 8010216:	0100      	lsleq	r0, r0, #4
 8010218:	3304      	addeq	r3, #4
 801021a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 801021e:	bf04      	itt	eq
 8010220:	0080      	lsleq	r0, r0, #2
 8010222:	3302      	addeq	r3, #2
 8010224:	2800      	cmp	r0, #0
 8010226:	db05      	blt.n	8010234 <__hi0bits+0x38>
 8010228:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 801022c:	f103 0301 	add.w	r3, r3, #1
 8010230:	bf08      	it	eq
 8010232:	2320      	moveq	r3, #32
 8010234:	4618      	mov	r0, r3
 8010236:	4770      	bx	lr
 8010238:	2300      	movs	r3, #0
 801023a:	e7e4      	b.n	8010206 <__hi0bits+0xa>

0801023c <__lo0bits>:
 801023c:	6803      	ldr	r3, [r0, #0]
 801023e:	f013 0207 	ands.w	r2, r3, #7
 8010242:	4601      	mov	r1, r0
 8010244:	d00b      	beq.n	801025e <__lo0bits+0x22>
 8010246:	07da      	lsls	r2, r3, #31
 8010248:	d423      	bmi.n	8010292 <__lo0bits+0x56>
 801024a:	0798      	lsls	r0, r3, #30
 801024c:	bf49      	itett	mi
 801024e:	085b      	lsrmi	r3, r3, #1
 8010250:	089b      	lsrpl	r3, r3, #2
 8010252:	2001      	movmi	r0, #1
 8010254:	600b      	strmi	r3, [r1, #0]
 8010256:	bf5c      	itt	pl
 8010258:	600b      	strpl	r3, [r1, #0]
 801025a:	2002      	movpl	r0, #2
 801025c:	4770      	bx	lr
 801025e:	b298      	uxth	r0, r3
 8010260:	b9a8      	cbnz	r0, 801028e <__lo0bits+0x52>
 8010262:	0c1b      	lsrs	r3, r3, #16
 8010264:	2010      	movs	r0, #16
 8010266:	b2da      	uxtb	r2, r3
 8010268:	b90a      	cbnz	r2, 801026e <__lo0bits+0x32>
 801026a:	3008      	adds	r0, #8
 801026c:	0a1b      	lsrs	r3, r3, #8
 801026e:	071a      	lsls	r2, r3, #28
 8010270:	bf04      	itt	eq
 8010272:	091b      	lsreq	r3, r3, #4
 8010274:	3004      	addeq	r0, #4
 8010276:	079a      	lsls	r2, r3, #30
 8010278:	bf04      	itt	eq
 801027a:	089b      	lsreq	r3, r3, #2
 801027c:	3002      	addeq	r0, #2
 801027e:	07da      	lsls	r2, r3, #31
 8010280:	d403      	bmi.n	801028a <__lo0bits+0x4e>
 8010282:	085b      	lsrs	r3, r3, #1
 8010284:	f100 0001 	add.w	r0, r0, #1
 8010288:	d005      	beq.n	8010296 <__lo0bits+0x5a>
 801028a:	600b      	str	r3, [r1, #0]
 801028c:	4770      	bx	lr
 801028e:	4610      	mov	r0, r2
 8010290:	e7e9      	b.n	8010266 <__lo0bits+0x2a>
 8010292:	2000      	movs	r0, #0
 8010294:	4770      	bx	lr
 8010296:	2020      	movs	r0, #32
 8010298:	4770      	bx	lr
	...

0801029c <__i2b>:
 801029c:	b510      	push	{r4, lr}
 801029e:	460c      	mov	r4, r1
 80102a0:	2101      	movs	r1, #1
 80102a2:	f7ff feb9 	bl	8010018 <_Balloc>
 80102a6:	4602      	mov	r2, r0
 80102a8:	b928      	cbnz	r0, 80102b6 <__i2b+0x1a>
 80102aa:	4b05      	ldr	r3, [pc, #20]	; (80102c0 <__i2b+0x24>)
 80102ac:	4805      	ldr	r0, [pc, #20]	; (80102c4 <__i2b+0x28>)
 80102ae:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80102b2:	f000 fc53 	bl	8010b5c <__assert_func>
 80102b6:	2301      	movs	r3, #1
 80102b8:	6144      	str	r4, [r0, #20]
 80102ba:	6103      	str	r3, [r0, #16]
 80102bc:	bd10      	pop	{r4, pc}
 80102be:	bf00      	nop
 80102c0:	080123a8 	.word	0x080123a8
 80102c4:	0801244b 	.word	0x0801244b

080102c8 <__multiply>:
 80102c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102cc:	4691      	mov	r9, r2
 80102ce:	690a      	ldr	r2, [r1, #16]
 80102d0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80102d4:	429a      	cmp	r2, r3
 80102d6:	bfb8      	it	lt
 80102d8:	460b      	movlt	r3, r1
 80102da:	460c      	mov	r4, r1
 80102dc:	bfbc      	itt	lt
 80102de:	464c      	movlt	r4, r9
 80102e0:	4699      	movlt	r9, r3
 80102e2:	6927      	ldr	r7, [r4, #16]
 80102e4:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80102e8:	68a3      	ldr	r3, [r4, #8]
 80102ea:	6861      	ldr	r1, [r4, #4]
 80102ec:	eb07 060a 	add.w	r6, r7, sl
 80102f0:	42b3      	cmp	r3, r6
 80102f2:	b085      	sub	sp, #20
 80102f4:	bfb8      	it	lt
 80102f6:	3101      	addlt	r1, #1
 80102f8:	f7ff fe8e 	bl	8010018 <_Balloc>
 80102fc:	b930      	cbnz	r0, 801030c <__multiply+0x44>
 80102fe:	4602      	mov	r2, r0
 8010300:	4b44      	ldr	r3, [pc, #272]	; (8010414 <__multiply+0x14c>)
 8010302:	4845      	ldr	r0, [pc, #276]	; (8010418 <__multiply+0x150>)
 8010304:	f240 115d 	movw	r1, #349	; 0x15d
 8010308:	f000 fc28 	bl	8010b5c <__assert_func>
 801030c:	f100 0514 	add.w	r5, r0, #20
 8010310:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8010314:	462b      	mov	r3, r5
 8010316:	2200      	movs	r2, #0
 8010318:	4543      	cmp	r3, r8
 801031a:	d321      	bcc.n	8010360 <__multiply+0x98>
 801031c:	f104 0314 	add.w	r3, r4, #20
 8010320:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8010324:	f109 0314 	add.w	r3, r9, #20
 8010328:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 801032c:	9202      	str	r2, [sp, #8]
 801032e:	1b3a      	subs	r2, r7, r4
 8010330:	3a15      	subs	r2, #21
 8010332:	f022 0203 	bic.w	r2, r2, #3
 8010336:	3204      	adds	r2, #4
 8010338:	f104 0115 	add.w	r1, r4, #21
 801033c:	428f      	cmp	r7, r1
 801033e:	bf38      	it	cc
 8010340:	2204      	movcc	r2, #4
 8010342:	9201      	str	r2, [sp, #4]
 8010344:	9a02      	ldr	r2, [sp, #8]
 8010346:	9303      	str	r3, [sp, #12]
 8010348:	429a      	cmp	r2, r3
 801034a:	d80c      	bhi.n	8010366 <__multiply+0x9e>
 801034c:	2e00      	cmp	r6, #0
 801034e:	dd03      	ble.n	8010358 <__multiply+0x90>
 8010350:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8010354:	2b00      	cmp	r3, #0
 8010356:	d05a      	beq.n	801040e <__multiply+0x146>
 8010358:	6106      	str	r6, [r0, #16]
 801035a:	b005      	add	sp, #20
 801035c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010360:	f843 2b04 	str.w	r2, [r3], #4
 8010364:	e7d8      	b.n	8010318 <__multiply+0x50>
 8010366:	f8b3 a000 	ldrh.w	sl, [r3]
 801036a:	f1ba 0f00 	cmp.w	sl, #0
 801036e:	d024      	beq.n	80103ba <__multiply+0xf2>
 8010370:	f104 0e14 	add.w	lr, r4, #20
 8010374:	46a9      	mov	r9, r5
 8010376:	f04f 0c00 	mov.w	ip, #0
 801037a:	f85e 2b04 	ldr.w	r2, [lr], #4
 801037e:	f8d9 1000 	ldr.w	r1, [r9]
 8010382:	fa1f fb82 	uxth.w	fp, r2
 8010386:	b289      	uxth	r1, r1
 8010388:	fb0a 110b 	mla	r1, sl, fp, r1
 801038c:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8010390:	f8d9 2000 	ldr.w	r2, [r9]
 8010394:	4461      	add	r1, ip
 8010396:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 801039a:	fb0a c20b 	mla	r2, sl, fp, ip
 801039e:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80103a2:	b289      	uxth	r1, r1
 80103a4:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80103a8:	4577      	cmp	r7, lr
 80103aa:	f849 1b04 	str.w	r1, [r9], #4
 80103ae:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80103b2:	d8e2      	bhi.n	801037a <__multiply+0xb2>
 80103b4:	9a01      	ldr	r2, [sp, #4]
 80103b6:	f845 c002 	str.w	ip, [r5, r2]
 80103ba:	9a03      	ldr	r2, [sp, #12]
 80103bc:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 80103c0:	3304      	adds	r3, #4
 80103c2:	f1b9 0f00 	cmp.w	r9, #0
 80103c6:	d020      	beq.n	801040a <__multiply+0x142>
 80103c8:	6829      	ldr	r1, [r5, #0]
 80103ca:	f104 0c14 	add.w	ip, r4, #20
 80103ce:	46ae      	mov	lr, r5
 80103d0:	f04f 0a00 	mov.w	sl, #0
 80103d4:	f8bc b000 	ldrh.w	fp, [ip]
 80103d8:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80103dc:	fb09 220b 	mla	r2, r9, fp, r2
 80103e0:	4492      	add	sl, r2
 80103e2:	b289      	uxth	r1, r1
 80103e4:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 80103e8:	f84e 1b04 	str.w	r1, [lr], #4
 80103ec:	f85c 2b04 	ldr.w	r2, [ip], #4
 80103f0:	f8be 1000 	ldrh.w	r1, [lr]
 80103f4:	0c12      	lsrs	r2, r2, #16
 80103f6:	fb09 1102 	mla	r1, r9, r2, r1
 80103fa:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 80103fe:	4567      	cmp	r7, ip
 8010400:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8010404:	d8e6      	bhi.n	80103d4 <__multiply+0x10c>
 8010406:	9a01      	ldr	r2, [sp, #4]
 8010408:	50a9      	str	r1, [r5, r2]
 801040a:	3504      	adds	r5, #4
 801040c:	e79a      	b.n	8010344 <__multiply+0x7c>
 801040e:	3e01      	subs	r6, #1
 8010410:	e79c      	b.n	801034c <__multiply+0x84>
 8010412:	bf00      	nop
 8010414:	080123a8 	.word	0x080123a8
 8010418:	0801244b 	.word	0x0801244b

0801041c <__pow5mult>:
 801041c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010420:	4615      	mov	r5, r2
 8010422:	f012 0203 	ands.w	r2, r2, #3
 8010426:	4606      	mov	r6, r0
 8010428:	460f      	mov	r7, r1
 801042a:	d007      	beq.n	801043c <__pow5mult+0x20>
 801042c:	4c25      	ldr	r4, [pc, #148]	; (80104c4 <__pow5mult+0xa8>)
 801042e:	3a01      	subs	r2, #1
 8010430:	2300      	movs	r3, #0
 8010432:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8010436:	f7ff fe51 	bl	80100dc <__multadd>
 801043a:	4607      	mov	r7, r0
 801043c:	10ad      	asrs	r5, r5, #2
 801043e:	d03d      	beq.n	80104bc <__pow5mult+0xa0>
 8010440:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8010442:	b97c      	cbnz	r4, 8010464 <__pow5mult+0x48>
 8010444:	2010      	movs	r0, #16
 8010446:	f000 fbb9 	bl	8010bbc <malloc>
 801044a:	4602      	mov	r2, r0
 801044c:	6270      	str	r0, [r6, #36]	; 0x24
 801044e:	b928      	cbnz	r0, 801045c <__pow5mult+0x40>
 8010450:	4b1d      	ldr	r3, [pc, #116]	; (80104c8 <__pow5mult+0xac>)
 8010452:	481e      	ldr	r0, [pc, #120]	; (80104cc <__pow5mult+0xb0>)
 8010454:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8010458:	f000 fb80 	bl	8010b5c <__assert_func>
 801045c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8010460:	6004      	str	r4, [r0, #0]
 8010462:	60c4      	str	r4, [r0, #12]
 8010464:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8010468:	f8d8 4008 	ldr.w	r4, [r8, #8]
 801046c:	b94c      	cbnz	r4, 8010482 <__pow5mult+0x66>
 801046e:	f240 2171 	movw	r1, #625	; 0x271
 8010472:	4630      	mov	r0, r6
 8010474:	f7ff ff12 	bl	801029c <__i2b>
 8010478:	2300      	movs	r3, #0
 801047a:	f8c8 0008 	str.w	r0, [r8, #8]
 801047e:	4604      	mov	r4, r0
 8010480:	6003      	str	r3, [r0, #0]
 8010482:	f04f 0900 	mov.w	r9, #0
 8010486:	07eb      	lsls	r3, r5, #31
 8010488:	d50a      	bpl.n	80104a0 <__pow5mult+0x84>
 801048a:	4639      	mov	r1, r7
 801048c:	4622      	mov	r2, r4
 801048e:	4630      	mov	r0, r6
 8010490:	f7ff ff1a 	bl	80102c8 <__multiply>
 8010494:	4639      	mov	r1, r7
 8010496:	4680      	mov	r8, r0
 8010498:	4630      	mov	r0, r6
 801049a:	f7ff fdfd 	bl	8010098 <_Bfree>
 801049e:	4647      	mov	r7, r8
 80104a0:	106d      	asrs	r5, r5, #1
 80104a2:	d00b      	beq.n	80104bc <__pow5mult+0xa0>
 80104a4:	6820      	ldr	r0, [r4, #0]
 80104a6:	b938      	cbnz	r0, 80104b8 <__pow5mult+0x9c>
 80104a8:	4622      	mov	r2, r4
 80104aa:	4621      	mov	r1, r4
 80104ac:	4630      	mov	r0, r6
 80104ae:	f7ff ff0b 	bl	80102c8 <__multiply>
 80104b2:	6020      	str	r0, [r4, #0]
 80104b4:	f8c0 9000 	str.w	r9, [r0]
 80104b8:	4604      	mov	r4, r0
 80104ba:	e7e4      	b.n	8010486 <__pow5mult+0x6a>
 80104bc:	4638      	mov	r0, r7
 80104be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80104c2:	bf00      	nop
 80104c4:	08012598 	.word	0x08012598
 80104c8:	08012434 	.word	0x08012434
 80104cc:	0801244b 	.word	0x0801244b

080104d0 <__lshift>:
 80104d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80104d4:	460c      	mov	r4, r1
 80104d6:	6849      	ldr	r1, [r1, #4]
 80104d8:	6923      	ldr	r3, [r4, #16]
 80104da:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80104de:	68a3      	ldr	r3, [r4, #8]
 80104e0:	4607      	mov	r7, r0
 80104e2:	4691      	mov	r9, r2
 80104e4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80104e8:	f108 0601 	add.w	r6, r8, #1
 80104ec:	42b3      	cmp	r3, r6
 80104ee:	db0b      	blt.n	8010508 <__lshift+0x38>
 80104f0:	4638      	mov	r0, r7
 80104f2:	f7ff fd91 	bl	8010018 <_Balloc>
 80104f6:	4605      	mov	r5, r0
 80104f8:	b948      	cbnz	r0, 801050e <__lshift+0x3e>
 80104fa:	4602      	mov	r2, r0
 80104fc:	4b2a      	ldr	r3, [pc, #168]	; (80105a8 <__lshift+0xd8>)
 80104fe:	482b      	ldr	r0, [pc, #172]	; (80105ac <__lshift+0xdc>)
 8010500:	f240 11d9 	movw	r1, #473	; 0x1d9
 8010504:	f000 fb2a 	bl	8010b5c <__assert_func>
 8010508:	3101      	adds	r1, #1
 801050a:	005b      	lsls	r3, r3, #1
 801050c:	e7ee      	b.n	80104ec <__lshift+0x1c>
 801050e:	2300      	movs	r3, #0
 8010510:	f100 0114 	add.w	r1, r0, #20
 8010514:	f100 0210 	add.w	r2, r0, #16
 8010518:	4618      	mov	r0, r3
 801051a:	4553      	cmp	r3, sl
 801051c:	db37      	blt.n	801058e <__lshift+0xbe>
 801051e:	6920      	ldr	r0, [r4, #16]
 8010520:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8010524:	f104 0314 	add.w	r3, r4, #20
 8010528:	f019 091f 	ands.w	r9, r9, #31
 801052c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8010530:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8010534:	d02f      	beq.n	8010596 <__lshift+0xc6>
 8010536:	f1c9 0e20 	rsb	lr, r9, #32
 801053a:	468a      	mov	sl, r1
 801053c:	f04f 0c00 	mov.w	ip, #0
 8010540:	681a      	ldr	r2, [r3, #0]
 8010542:	fa02 f209 	lsl.w	r2, r2, r9
 8010546:	ea42 020c 	orr.w	r2, r2, ip
 801054a:	f84a 2b04 	str.w	r2, [sl], #4
 801054e:	f853 2b04 	ldr.w	r2, [r3], #4
 8010552:	4298      	cmp	r0, r3
 8010554:	fa22 fc0e 	lsr.w	ip, r2, lr
 8010558:	d8f2      	bhi.n	8010540 <__lshift+0x70>
 801055a:	1b03      	subs	r3, r0, r4
 801055c:	3b15      	subs	r3, #21
 801055e:	f023 0303 	bic.w	r3, r3, #3
 8010562:	3304      	adds	r3, #4
 8010564:	f104 0215 	add.w	r2, r4, #21
 8010568:	4290      	cmp	r0, r2
 801056a:	bf38      	it	cc
 801056c:	2304      	movcc	r3, #4
 801056e:	f841 c003 	str.w	ip, [r1, r3]
 8010572:	f1bc 0f00 	cmp.w	ip, #0
 8010576:	d001      	beq.n	801057c <__lshift+0xac>
 8010578:	f108 0602 	add.w	r6, r8, #2
 801057c:	3e01      	subs	r6, #1
 801057e:	4638      	mov	r0, r7
 8010580:	612e      	str	r6, [r5, #16]
 8010582:	4621      	mov	r1, r4
 8010584:	f7ff fd88 	bl	8010098 <_Bfree>
 8010588:	4628      	mov	r0, r5
 801058a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801058e:	f842 0f04 	str.w	r0, [r2, #4]!
 8010592:	3301      	adds	r3, #1
 8010594:	e7c1      	b.n	801051a <__lshift+0x4a>
 8010596:	3904      	subs	r1, #4
 8010598:	f853 2b04 	ldr.w	r2, [r3], #4
 801059c:	f841 2f04 	str.w	r2, [r1, #4]!
 80105a0:	4298      	cmp	r0, r3
 80105a2:	d8f9      	bhi.n	8010598 <__lshift+0xc8>
 80105a4:	e7ea      	b.n	801057c <__lshift+0xac>
 80105a6:	bf00      	nop
 80105a8:	080123a8 	.word	0x080123a8
 80105ac:	0801244b 	.word	0x0801244b

080105b0 <__mcmp>:
 80105b0:	b530      	push	{r4, r5, lr}
 80105b2:	6902      	ldr	r2, [r0, #16]
 80105b4:	690c      	ldr	r4, [r1, #16]
 80105b6:	1b12      	subs	r2, r2, r4
 80105b8:	d10e      	bne.n	80105d8 <__mcmp+0x28>
 80105ba:	f100 0314 	add.w	r3, r0, #20
 80105be:	3114      	adds	r1, #20
 80105c0:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 80105c4:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 80105c8:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 80105cc:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 80105d0:	42a5      	cmp	r5, r4
 80105d2:	d003      	beq.n	80105dc <__mcmp+0x2c>
 80105d4:	d305      	bcc.n	80105e2 <__mcmp+0x32>
 80105d6:	2201      	movs	r2, #1
 80105d8:	4610      	mov	r0, r2
 80105da:	bd30      	pop	{r4, r5, pc}
 80105dc:	4283      	cmp	r3, r0
 80105de:	d3f3      	bcc.n	80105c8 <__mcmp+0x18>
 80105e0:	e7fa      	b.n	80105d8 <__mcmp+0x28>
 80105e2:	f04f 32ff 	mov.w	r2, #4294967295
 80105e6:	e7f7      	b.n	80105d8 <__mcmp+0x28>

080105e8 <__mdiff>:
 80105e8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105ec:	460c      	mov	r4, r1
 80105ee:	4606      	mov	r6, r0
 80105f0:	4611      	mov	r1, r2
 80105f2:	4620      	mov	r0, r4
 80105f4:	4690      	mov	r8, r2
 80105f6:	f7ff ffdb 	bl	80105b0 <__mcmp>
 80105fa:	1e05      	subs	r5, r0, #0
 80105fc:	d110      	bne.n	8010620 <__mdiff+0x38>
 80105fe:	4629      	mov	r1, r5
 8010600:	4630      	mov	r0, r6
 8010602:	f7ff fd09 	bl	8010018 <_Balloc>
 8010606:	b930      	cbnz	r0, 8010616 <__mdiff+0x2e>
 8010608:	4b3a      	ldr	r3, [pc, #232]	; (80106f4 <__mdiff+0x10c>)
 801060a:	4602      	mov	r2, r0
 801060c:	f240 2132 	movw	r1, #562	; 0x232
 8010610:	4839      	ldr	r0, [pc, #228]	; (80106f8 <__mdiff+0x110>)
 8010612:	f000 faa3 	bl	8010b5c <__assert_func>
 8010616:	2301      	movs	r3, #1
 8010618:	e9c0 3504 	strd	r3, r5, [r0, #16]
 801061c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010620:	bfa4      	itt	ge
 8010622:	4643      	movge	r3, r8
 8010624:	46a0      	movge	r8, r4
 8010626:	4630      	mov	r0, r6
 8010628:	f8d8 1004 	ldr.w	r1, [r8, #4]
 801062c:	bfa6      	itte	ge
 801062e:	461c      	movge	r4, r3
 8010630:	2500      	movge	r5, #0
 8010632:	2501      	movlt	r5, #1
 8010634:	f7ff fcf0 	bl	8010018 <_Balloc>
 8010638:	b920      	cbnz	r0, 8010644 <__mdiff+0x5c>
 801063a:	4b2e      	ldr	r3, [pc, #184]	; (80106f4 <__mdiff+0x10c>)
 801063c:	4602      	mov	r2, r0
 801063e:	f44f 7110 	mov.w	r1, #576	; 0x240
 8010642:	e7e5      	b.n	8010610 <__mdiff+0x28>
 8010644:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8010648:	6926      	ldr	r6, [r4, #16]
 801064a:	60c5      	str	r5, [r0, #12]
 801064c:	f104 0914 	add.w	r9, r4, #20
 8010650:	f108 0514 	add.w	r5, r8, #20
 8010654:	f100 0e14 	add.w	lr, r0, #20
 8010658:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 801065c:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8010660:	f108 0210 	add.w	r2, r8, #16
 8010664:	46f2      	mov	sl, lr
 8010666:	2100      	movs	r1, #0
 8010668:	f859 3b04 	ldr.w	r3, [r9], #4
 801066c:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8010670:	fa1f f883 	uxth.w	r8, r3
 8010674:	fa11 f18b 	uxtah	r1, r1, fp
 8010678:	0c1b      	lsrs	r3, r3, #16
 801067a:	eba1 0808 	sub.w	r8, r1, r8
 801067e:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8010682:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8010686:	fa1f f888 	uxth.w	r8, r8
 801068a:	1419      	asrs	r1, r3, #16
 801068c:	454e      	cmp	r6, r9
 801068e:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8010692:	f84a 3b04 	str.w	r3, [sl], #4
 8010696:	d8e7      	bhi.n	8010668 <__mdiff+0x80>
 8010698:	1b33      	subs	r3, r6, r4
 801069a:	3b15      	subs	r3, #21
 801069c:	f023 0303 	bic.w	r3, r3, #3
 80106a0:	3304      	adds	r3, #4
 80106a2:	3415      	adds	r4, #21
 80106a4:	42a6      	cmp	r6, r4
 80106a6:	bf38      	it	cc
 80106a8:	2304      	movcc	r3, #4
 80106aa:	441d      	add	r5, r3
 80106ac:	4473      	add	r3, lr
 80106ae:	469e      	mov	lr, r3
 80106b0:	462e      	mov	r6, r5
 80106b2:	4566      	cmp	r6, ip
 80106b4:	d30e      	bcc.n	80106d4 <__mdiff+0xec>
 80106b6:	f10c 0203 	add.w	r2, ip, #3
 80106ba:	1b52      	subs	r2, r2, r5
 80106bc:	f022 0203 	bic.w	r2, r2, #3
 80106c0:	3d03      	subs	r5, #3
 80106c2:	45ac      	cmp	ip, r5
 80106c4:	bf38      	it	cc
 80106c6:	2200      	movcc	r2, #0
 80106c8:	441a      	add	r2, r3
 80106ca:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 80106ce:	b17b      	cbz	r3, 80106f0 <__mdiff+0x108>
 80106d0:	6107      	str	r7, [r0, #16]
 80106d2:	e7a3      	b.n	801061c <__mdiff+0x34>
 80106d4:	f856 8b04 	ldr.w	r8, [r6], #4
 80106d8:	fa11 f288 	uxtah	r2, r1, r8
 80106dc:	1414      	asrs	r4, r2, #16
 80106de:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 80106e2:	b292      	uxth	r2, r2
 80106e4:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80106e8:	f84e 2b04 	str.w	r2, [lr], #4
 80106ec:	1421      	asrs	r1, r4, #16
 80106ee:	e7e0      	b.n	80106b2 <__mdiff+0xca>
 80106f0:	3f01      	subs	r7, #1
 80106f2:	e7ea      	b.n	80106ca <__mdiff+0xe2>
 80106f4:	080123a8 	.word	0x080123a8
 80106f8:	0801244b 	.word	0x0801244b

080106fc <__ulp>:
 80106fc:	b082      	sub	sp, #8
 80106fe:	ed8d 0b00 	vstr	d0, [sp]
 8010702:	9b01      	ldr	r3, [sp, #4]
 8010704:	4912      	ldr	r1, [pc, #72]	; (8010750 <__ulp+0x54>)
 8010706:	4019      	ands	r1, r3
 8010708:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 801070c:	2900      	cmp	r1, #0
 801070e:	dd05      	ble.n	801071c <__ulp+0x20>
 8010710:	2200      	movs	r2, #0
 8010712:	460b      	mov	r3, r1
 8010714:	ec43 2b10 	vmov	d0, r2, r3
 8010718:	b002      	add	sp, #8
 801071a:	4770      	bx	lr
 801071c:	4249      	negs	r1, r1
 801071e:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 8010722:	ea4f 5021 	mov.w	r0, r1, asr #20
 8010726:	f04f 0200 	mov.w	r2, #0
 801072a:	f04f 0300 	mov.w	r3, #0
 801072e:	da04      	bge.n	801073a <__ulp+0x3e>
 8010730:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8010734:	fa41 f300 	asr.w	r3, r1, r0
 8010738:	e7ec      	b.n	8010714 <__ulp+0x18>
 801073a:	f1a0 0114 	sub.w	r1, r0, #20
 801073e:	291e      	cmp	r1, #30
 8010740:	bfda      	itte	le
 8010742:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 8010746:	fa20 f101 	lsrle.w	r1, r0, r1
 801074a:	2101      	movgt	r1, #1
 801074c:	460a      	mov	r2, r1
 801074e:	e7e1      	b.n	8010714 <__ulp+0x18>
 8010750:	7ff00000 	.word	0x7ff00000

08010754 <__b2d>:
 8010754:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010756:	6905      	ldr	r5, [r0, #16]
 8010758:	f100 0714 	add.w	r7, r0, #20
 801075c:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8010760:	1f2e      	subs	r6, r5, #4
 8010762:	f855 4c04 	ldr.w	r4, [r5, #-4]
 8010766:	4620      	mov	r0, r4
 8010768:	f7ff fd48 	bl	80101fc <__hi0bits>
 801076c:	f1c0 0320 	rsb	r3, r0, #32
 8010770:	280a      	cmp	r0, #10
 8010772:	f8df c07c 	ldr.w	ip, [pc, #124]	; 80107f0 <__b2d+0x9c>
 8010776:	600b      	str	r3, [r1, #0]
 8010778:	dc14      	bgt.n	80107a4 <__b2d+0x50>
 801077a:	f1c0 0e0b 	rsb	lr, r0, #11
 801077e:	fa24 f10e 	lsr.w	r1, r4, lr
 8010782:	42b7      	cmp	r7, r6
 8010784:	ea41 030c 	orr.w	r3, r1, ip
 8010788:	bf34      	ite	cc
 801078a:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 801078e:	2100      	movcs	r1, #0
 8010790:	3015      	adds	r0, #21
 8010792:	fa04 f000 	lsl.w	r0, r4, r0
 8010796:	fa21 f10e 	lsr.w	r1, r1, lr
 801079a:	ea40 0201 	orr.w	r2, r0, r1
 801079e:	ec43 2b10 	vmov	d0, r2, r3
 80107a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80107a4:	42b7      	cmp	r7, r6
 80107a6:	bf3a      	itte	cc
 80107a8:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 80107ac:	f1a5 0608 	subcc.w	r6, r5, #8
 80107b0:	2100      	movcs	r1, #0
 80107b2:	380b      	subs	r0, #11
 80107b4:	d017      	beq.n	80107e6 <__b2d+0x92>
 80107b6:	f1c0 0c20 	rsb	ip, r0, #32
 80107ba:	fa04 f500 	lsl.w	r5, r4, r0
 80107be:	42be      	cmp	r6, r7
 80107c0:	fa21 f40c 	lsr.w	r4, r1, ip
 80107c4:	ea45 0504 	orr.w	r5, r5, r4
 80107c8:	bf8c      	ite	hi
 80107ca:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 80107ce:	2400      	movls	r4, #0
 80107d0:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 80107d4:	fa01 f000 	lsl.w	r0, r1, r0
 80107d8:	fa24 f40c 	lsr.w	r4, r4, ip
 80107dc:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80107e0:	ea40 0204 	orr.w	r2, r0, r4
 80107e4:	e7db      	b.n	801079e <__b2d+0x4a>
 80107e6:	ea44 030c 	orr.w	r3, r4, ip
 80107ea:	460a      	mov	r2, r1
 80107ec:	e7d7      	b.n	801079e <__b2d+0x4a>
 80107ee:	bf00      	nop
 80107f0:	3ff00000 	.word	0x3ff00000

080107f4 <__d2b>:
 80107f4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80107f8:	4689      	mov	r9, r1
 80107fa:	2101      	movs	r1, #1
 80107fc:	ec57 6b10 	vmov	r6, r7, d0
 8010800:	4690      	mov	r8, r2
 8010802:	f7ff fc09 	bl	8010018 <_Balloc>
 8010806:	4604      	mov	r4, r0
 8010808:	b930      	cbnz	r0, 8010818 <__d2b+0x24>
 801080a:	4602      	mov	r2, r0
 801080c:	4b25      	ldr	r3, [pc, #148]	; (80108a4 <__d2b+0xb0>)
 801080e:	4826      	ldr	r0, [pc, #152]	; (80108a8 <__d2b+0xb4>)
 8010810:	f240 310a 	movw	r1, #778	; 0x30a
 8010814:	f000 f9a2 	bl	8010b5c <__assert_func>
 8010818:	f3c7 550a 	ubfx	r5, r7, #20, #11
 801081c:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8010820:	bb35      	cbnz	r5, 8010870 <__d2b+0x7c>
 8010822:	2e00      	cmp	r6, #0
 8010824:	9301      	str	r3, [sp, #4]
 8010826:	d028      	beq.n	801087a <__d2b+0x86>
 8010828:	4668      	mov	r0, sp
 801082a:	9600      	str	r6, [sp, #0]
 801082c:	f7ff fd06 	bl	801023c <__lo0bits>
 8010830:	9900      	ldr	r1, [sp, #0]
 8010832:	b300      	cbz	r0, 8010876 <__d2b+0x82>
 8010834:	9a01      	ldr	r2, [sp, #4]
 8010836:	f1c0 0320 	rsb	r3, r0, #32
 801083a:	fa02 f303 	lsl.w	r3, r2, r3
 801083e:	430b      	orrs	r3, r1
 8010840:	40c2      	lsrs	r2, r0
 8010842:	6163      	str	r3, [r4, #20]
 8010844:	9201      	str	r2, [sp, #4]
 8010846:	9b01      	ldr	r3, [sp, #4]
 8010848:	61a3      	str	r3, [r4, #24]
 801084a:	2b00      	cmp	r3, #0
 801084c:	bf14      	ite	ne
 801084e:	2202      	movne	r2, #2
 8010850:	2201      	moveq	r2, #1
 8010852:	6122      	str	r2, [r4, #16]
 8010854:	b1d5      	cbz	r5, 801088c <__d2b+0x98>
 8010856:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 801085a:	4405      	add	r5, r0
 801085c:	f8c9 5000 	str.w	r5, [r9]
 8010860:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8010864:	f8c8 0000 	str.w	r0, [r8]
 8010868:	4620      	mov	r0, r4
 801086a:	b003      	add	sp, #12
 801086c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010870:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8010874:	e7d5      	b.n	8010822 <__d2b+0x2e>
 8010876:	6161      	str	r1, [r4, #20]
 8010878:	e7e5      	b.n	8010846 <__d2b+0x52>
 801087a:	a801      	add	r0, sp, #4
 801087c:	f7ff fcde 	bl	801023c <__lo0bits>
 8010880:	9b01      	ldr	r3, [sp, #4]
 8010882:	6163      	str	r3, [r4, #20]
 8010884:	2201      	movs	r2, #1
 8010886:	6122      	str	r2, [r4, #16]
 8010888:	3020      	adds	r0, #32
 801088a:	e7e3      	b.n	8010854 <__d2b+0x60>
 801088c:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8010890:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8010894:	f8c9 0000 	str.w	r0, [r9]
 8010898:	6918      	ldr	r0, [r3, #16]
 801089a:	f7ff fcaf 	bl	80101fc <__hi0bits>
 801089e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80108a2:	e7df      	b.n	8010864 <__d2b+0x70>
 80108a4:	080123a8 	.word	0x080123a8
 80108a8:	0801244b 	.word	0x0801244b

080108ac <__ratio>:
 80108ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108b0:	4688      	mov	r8, r1
 80108b2:	4669      	mov	r1, sp
 80108b4:	4681      	mov	r9, r0
 80108b6:	f7ff ff4d 	bl	8010754 <__b2d>
 80108ba:	a901      	add	r1, sp, #4
 80108bc:	4640      	mov	r0, r8
 80108be:	ec55 4b10 	vmov	r4, r5, d0
 80108c2:	ee10 aa10 	vmov	sl, s0
 80108c6:	f7ff ff45 	bl	8010754 <__b2d>
 80108ca:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80108ce:	f8d8 1010 	ldr.w	r1, [r8, #16]
 80108d2:	1a59      	subs	r1, r3, r1
 80108d4:	e9dd 2300 	ldrd	r2, r3, [sp]
 80108d8:	1ad3      	subs	r3, r2, r3
 80108da:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 80108de:	ec57 6b10 	vmov	r6, r7, d0
 80108e2:	2b00      	cmp	r3, #0
 80108e4:	bfd6      	itet	le
 80108e6:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80108ea:	462a      	movgt	r2, r5
 80108ec:	463a      	movle	r2, r7
 80108ee:	46ab      	mov	fp, r5
 80108f0:	bfd6      	itet	le
 80108f2:	eb02 5303 	addle.w	r3, r2, r3, lsl #20
 80108f6:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 80108fa:	ee00 3a90 	vmovle	s1, r3
 80108fe:	ec4b ab17 	vmov	d7, sl, fp
 8010902:	ee87 0b00 	vdiv.f64	d0, d7, d0
 8010906:	b003      	add	sp, #12
 8010908:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801090c <__copybits>:
 801090c:	3901      	subs	r1, #1
 801090e:	b570      	push	{r4, r5, r6, lr}
 8010910:	1149      	asrs	r1, r1, #5
 8010912:	6914      	ldr	r4, [r2, #16]
 8010914:	3101      	adds	r1, #1
 8010916:	f102 0314 	add.w	r3, r2, #20
 801091a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 801091e:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8010922:	1f05      	subs	r5, r0, #4
 8010924:	42a3      	cmp	r3, r4
 8010926:	d30c      	bcc.n	8010942 <__copybits+0x36>
 8010928:	1aa3      	subs	r3, r4, r2
 801092a:	3b11      	subs	r3, #17
 801092c:	f023 0303 	bic.w	r3, r3, #3
 8010930:	3211      	adds	r2, #17
 8010932:	42a2      	cmp	r2, r4
 8010934:	bf88      	it	hi
 8010936:	2300      	movhi	r3, #0
 8010938:	4418      	add	r0, r3
 801093a:	2300      	movs	r3, #0
 801093c:	4288      	cmp	r0, r1
 801093e:	d305      	bcc.n	801094c <__copybits+0x40>
 8010940:	bd70      	pop	{r4, r5, r6, pc}
 8010942:	f853 6b04 	ldr.w	r6, [r3], #4
 8010946:	f845 6f04 	str.w	r6, [r5, #4]!
 801094a:	e7eb      	b.n	8010924 <__copybits+0x18>
 801094c:	f840 3b04 	str.w	r3, [r0], #4
 8010950:	e7f4      	b.n	801093c <__copybits+0x30>

08010952 <__any_on>:
 8010952:	f100 0214 	add.w	r2, r0, #20
 8010956:	6900      	ldr	r0, [r0, #16]
 8010958:	114b      	asrs	r3, r1, #5
 801095a:	4298      	cmp	r0, r3
 801095c:	b510      	push	{r4, lr}
 801095e:	db11      	blt.n	8010984 <__any_on+0x32>
 8010960:	dd0a      	ble.n	8010978 <__any_on+0x26>
 8010962:	f011 011f 	ands.w	r1, r1, #31
 8010966:	d007      	beq.n	8010978 <__any_on+0x26>
 8010968:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 801096c:	fa24 f001 	lsr.w	r0, r4, r1
 8010970:	fa00 f101 	lsl.w	r1, r0, r1
 8010974:	428c      	cmp	r4, r1
 8010976:	d10b      	bne.n	8010990 <__any_on+0x3e>
 8010978:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801097c:	4293      	cmp	r3, r2
 801097e:	d803      	bhi.n	8010988 <__any_on+0x36>
 8010980:	2000      	movs	r0, #0
 8010982:	bd10      	pop	{r4, pc}
 8010984:	4603      	mov	r3, r0
 8010986:	e7f7      	b.n	8010978 <__any_on+0x26>
 8010988:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 801098c:	2900      	cmp	r1, #0
 801098e:	d0f5      	beq.n	801097c <__any_on+0x2a>
 8010990:	2001      	movs	r0, #1
 8010992:	e7f6      	b.n	8010982 <__any_on+0x30>

08010994 <_calloc_r>:
 8010994:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010996:	fba1 2402 	umull	r2, r4, r1, r2
 801099a:	b94c      	cbnz	r4, 80109b0 <_calloc_r+0x1c>
 801099c:	4611      	mov	r1, r2
 801099e:	9201      	str	r2, [sp, #4]
 80109a0:	f000 f82e 	bl	8010a00 <_malloc_r>
 80109a4:	9a01      	ldr	r2, [sp, #4]
 80109a6:	4605      	mov	r5, r0
 80109a8:	b930      	cbnz	r0, 80109b8 <_calloc_r+0x24>
 80109aa:	4628      	mov	r0, r5
 80109ac:	b003      	add	sp, #12
 80109ae:	bd30      	pop	{r4, r5, pc}
 80109b0:	220c      	movs	r2, #12
 80109b2:	6002      	str	r2, [r0, #0]
 80109b4:	2500      	movs	r5, #0
 80109b6:	e7f8      	b.n	80109aa <_calloc_r+0x16>
 80109b8:	4621      	mov	r1, r4
 80109ba:	f7fe f9c5 	bl	800ed48 <memset>
 80109be:	e7f4      	b.n	80109aa <_calloc_r+0x16>

080109c0 <sbrk_aligned>:
 80109c0:	b570      	push	{r4, r5, r6, lr}
 80109c2:	4e0e      	ldr	r6, [pc, #56]	; (80109fc <sbrk_aligned+0x3c>)
 80109c4:	460c      	mov	r4, r1
 80109c6:	6831      	ldr	r1, [r6, #0]
 80109c8:	4605      	mov	r5, r0
 80109ca:	b911      	cbnz	r1, 80109d2 <sbrk_aligned+0x12>
 80109cc:	f000 f894 	bl	8010af8 <_sbrk_r>
 80109d0:	6030      	str	r0, [r6, #0]
 80109d2:	4621      	mov	r1, r4
 80109d4:	4628      	mov	r0, r5
 80109d6:	f000 f88f 	bl	8010af8 <_sbrk_r>
 80109da:	1c43      	adds	r3, r0, #1
 80109dc:	d00a      	beq.n	80109f4 <sbrk_aligned+0x34>
 80109de:	1cc4      	adds	r4, r0, #3
 80109e0:	f024 0403 	bic.w	r4, r4, #3
 80109e4:	42a0      	cmp	r0, r4
 80109e6:	d007      	beq.n	80109f8 <sbrk_aligned+0x38>
 80109e8:	1a21      	subs	r1, r4, r0
 80109ea:	4628      	mov	r0, r5
 80109ec:	f000 f884 	bl	8010af8 <_sbrk_r>
 80109f0:	3001      	adds	r0, #1
 80109f2:	d101      	bne.n	80109f8 <sbrk_aligned+0x38>
 80109f4:	f04f 34ff 	mov.w	r4, #4294967295
 80109f8:	4620      	mov	r0, r4
 80109fa:	bd70      	pop	{r4, r5, r6, pc}
 80109fc:	24000c94 	.word	0x24000c94

08010a00 <_malloc_r>:
 8010a00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a04:	1ccd      	adds	r5, r1, #3
 8010a06:	f025 0503 	bic.w	r5, r5, #3
 8010a0a:	3508      	adds	r5, #8
 8010a0c:	2d0c      	cmp	r5, #12
 8010a0e:	bf38      	it	cc
 8010a10:	250c      	movcc	r5, #12
 8010a12:	2d00      	cmp	r5, #0
 8010a14:	4607      	mov	r7, r0
 8010a16:	db01      	blt.n	8010a1c <_malloc_r+0x1c>
 8010a18:	42a9      	cmp	r1, r5
 8010a1a:	d905      	bls.n	8010a28 <_malloc_r+0x28>
 8010a1c:	230c      	movs	r3, #12
 8010a1e:	603b      	str	r3, [r7, #0]
 8010a20:	2600      	movs	r6, #0
 8010a22:	4630      	mov	r0, r6
 8010a24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010a28:	4e2e      	ldr	r6, [pc, #184]	; (8010ae4 <_malloc_r+0xe4>)
 8010a2a:	f000 f8cf 	bl	8010bcc <__malloc_lock>
 8010a2e:	6833      	ldr	r3, [r6, #0]
 8010a30:	461c      	mov	r4, r3
 8010a32:	bb34      	cbnz	r4, 8010a82 <_malloc_r+0x82>
 8010a34:	4629      	mov	r1, r5
 8010a36:	4638      	mov	r0, r7
 8010a38:	f7ff ffc2 	bl	80109c0 <sbrk_aligned>
 8010a3c:	1c43      	adds	r3, r0, #1
 8010a3e:	4604      	mov	r4, r0
 8010a40:	d14d      	bne.n	8010ade <_malloc_r+0xde>
 8010a42:	6834      	ldr	r4, [r6, #0]
 8010a44:	4626      	mov	r6, r4
 8010a46:	2e00      	cmp	r6, #0
 8010a48:	d140      	bne.n	8010acc <_malloc_r+0xcc>
 8010a4a:	6823      	ldr	r3, [r4, #0]
 8010a4c:	4631      	mov	r1, r6
 8010a4e:	4638      	mov	r0, r7
 8010a50:	eb04 0803 	add.w	r8, r4, r3
 8010a54:	f000 f850 	bl	8010af8 <_sbrk_r>
 8010a58:	4580      	cmp	r8, r0
 8010a5a:	d13a      	bne.n	8010ad2 <_malloc_r+0xd2>
 8010a5c:	6821      	ldr	r1, [r4, #0]
 8010a5e:	3503      	adds	r5, #3
 8010a60:	1a6d      	subs	r5, r5, r1
 8010a62:	f025 0503 	bic.w	r5, r5, #3
 8010a66:	3508      	adds	r5, #8
 8010a68:	2d0c      	cmp	r5, #12
 8010a6a:	bf38      	it	cc
 8010a6c:	250c      	movcc	r5, #12
 8010a6e:	4629      	mov	r1, r5
 8010a70:	4638      	mov	r0, r7
 8010a72:	f7ff ffa5 	bl	80109c0 <sbrk_aligned>
 8010a76:	3001      	adds	r0, #1
 8010a78:	d02b      	beq.n	8010ad2 <_malloc_r+0xd2>
 8010a7a:	6823      	ldr	r3, [r4, #0]
 8010a7c:	442b      	add	r3, r5
 8010a7e:	6023      	str	r3, [r4, #0]
 8010a80:	e00e      	b.n	8010aa0 <_malloc_r+0xa0>
 8010a82:	6822      	ldr	r2, [r4, #0]
 8010a84:	1b52      	subs	r2, r2, r5
 8010a86:	d41e      	bmi.n	8010ac6 <_malloc_r+0xc6>
 8010a88:	2a0b      	cmp	r2, #11
 8010a8a:	d916      	bls.n	8010aba <_malloc_r+0xba>
 8010a8c:	1961      	adds	r1, r4, r5
 8010a8e:	42a3      	cmp	r3, r4
 8010a90:	6025      	str	r5, [r4, #0]
 8010a92:	bf18      	it	ne
 8010a94:	6059      	strne	r1, [r3, #4]
 8010a96:	6863      	ldr	r3, [r4, #4]
 8010a98:	bf08      	it	eq
 8010a9a:	6031      	streq	r1, [r6, #0]
 8010a9c:	5162      	str	r2, [r4, r5]
 8010a9e:	604b      	str	r3, [r1, #4]
 8010aa0:	4638      	mov	r0, r7
 8010aa2:	f104 060b 	add.w	r6, r4, #11
 8010aa6:	f000 f897 	bl	8010bd8 <__malloc_unlock>
 8010aaa:	f026 0607 	bic.w	r6, r6, #7
 8010aae:	1d23      	adds	r3, r4, #4
 8010ab0:	1af2      	subs	r2, r6, r3
 8010ab2:	d0b6      	beq.n	8010a22 <_malloc_r+0x22>
 8010ab4:	1b9b      	subs	r3, r3, r6
 8010ab6:	50a3      	str	r3, [r4, r2]
 8010ab8:	e7b3      	b.n	8010a22 <_malloc_r+0x22>
 8010aba:	6862      	ldr	r2, [r4, #4]
 8010abc:	42a3      	cmp	r3, r4
 8010abe:	bf0c      	ite	eq
 8010ac0:	6032      	streq	r2, [r6, #0]
 8010ac2:	605a      	strne	r2, [r3, #4]
 8010ac4:	e7ec      	b.n	8010aa0 <_malloc_r+0xa0>
 8010ac6:	4623      	mov	r3, r4
 8010ac8:	6864      	ldr	r4, [r4, #4]
 8010aca:	e7b2      	b.n	8010a32 <_malloc_r+0x32>
 8010acc:	4634      	mov	r4, r6
 8010ace:	6876      	ldr	r6, [r6, #4]
 8010ad0:	e7b9      	b.n	8010a46 <_malloc_r+0x46>
 8010ad2:	230c      	movs	r3, #12
 8010ad4:	603b      	str	r3, [r7, #0]
 8010ad6:	4638      	mov	r0, r7
 8010ad8:	f000 f87e 	bl	8010bd8 <__malloc_unlock>
 8010adc:	e7a1      	b.n	8010a22 <_malloc_r+0x22>
 8010ade:	6025      	str	r5, [r4, #0]
 8010ae0:	e7de      	b.n	8010aa0 <_malloc_r+0xa0>
 8010ae2:	bf00      	nop
 8010ae4:	24000c90 	.word	0x24000c90

08010ae8 <nan>:
 8010ae8:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8010af0 <nan+0x8>
 8010aec:	4770      	bx	lr
 8010aee:	bf00      	nop
 8010af0:	00000000 	.word	0x00000000
 8010af4:	7ff80000 	.word	0x7ff80000

08010af8 <_sbrk_r>:
 8010af8:	b538      	push	{r3, r4, r5, lr}
 8010afa:	4d06      	ldr	r5, [pc, #24]	; (8010b14 <_sbrk_r+0x1c>)
 8010afc:	2300      	movs	r3, #0
 8010afe:	4604      	mov	r4, r0
 8010b00:	4608      	mov	r0, r1
 8010b02:	602b      	str	r3, [r5, #0]
 8010b04:	f7f3 faac 	bl	8004060 <_sbrk>
 8010b08:	1c43      	adds	r3, r0, #1
 8010b0a:	d102      	bne.n	8010b12 <_sbrk_r+0x1a>
 8010b0c:	682b      	ldr	r3, [r5, #0]
 8010b0e:	b103      	cbz	r3, 8010b12 <_sbrk_r+0x1a>
 8010b10:	6023      	str	r3, [r4, #0]
 8010b12:	bd38      	pop	{r3, r4, r5, pc}
 8010b14:	24000c98 	.word	0x24000c98

08010b18 <strncmp>:
 8010b18:	b510      	push	{r4, lr}
 8010b1a:	b17a      	cbz	r2, 8010b3c <strncmp+0x24>
 8010b1c:	4603      	mov	r3, r0
 8010b1e:	3901      	subs	r1, #1
 8010b20:	1884      	adds	r4, r0, r2
 8010b22:	f813 0b01 	ldrb.w	r0, [r3], #1
 8010b26:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8010b2a:	4290      	cmp	r0, r2
 8010b2c:	d101      	bne.n	8010b32 <strncmp+0x1a>
 8010b2e:	42a3      	cmp	r3, r4
 8010b30:	d101      	bne.n	8010b36 <strncmp+0x1e>
 8010b32:	1a80      	subs	r0, r0, r2
 8010b34:	bd10      	pop	{r4, pc}
 8010b36:	2800      	cmp	r0, #0
 8010b38:	d1f3      	bne.n	8010b22 <strncmp+0xa>
 8010b3a:	e7fa      	b.n	8010b32 <strncmp+0x1a>
 8010b3c:	4610      	mov	r0, r2
 8010b3e:	e7f9      	b.n	8010b34 <strncmp+0x1c>

08010b40 <__ascii_wctomb>:
 8010b40:	b149      	cbz	r1, 8010b56 <__ascii_wctomb+0x16>
 8010b42:	2aff      	cmp	r2, #255	; 0xff
 8010b44:	bf85      	ittet	hi
 8010b46:	238a      	movhi	r3, #138	; 0x8a
 8010b48:	6003      	strhi	r3, [r0, #0]
 8010b4a:	700a      	strbls	r2, [r1, #0]
 8010b4c:	f04f 30ff 	movhi.w	r0, #4294967295
 8010b50:	bf98      	it	ls
 8010b52:	2001      	movls	r0, #1
 8010b54:	4770      	bx	lr
 8010b56:	4608      	mov	r0, r1
 8010b58:	4770      	bx	lr
	...

08010b5c <__assert_func>:
 8010b5c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010b5e:	4614      	mov	r4, r2
 8010b60:	461a      	mov	r2, r3
 8010b62:	4b09      	ldr	r3, [pc, #36]	; (8010b88 <__assert_func+0x2c>)
 8010b64:	681b      	ldr	r3, [r3, #0]
 8010b66:	4605      	mov	r5, r0
 8010b68:	68d8      	ldr	r0, [r3, #12]
 8010b6a:	b14c      	cbz	r4, 8010b80 <__assert_func+0x24>
 8010b6c:	4b07      	ldr	r3, [pc, #28]	; (8010b8c <__assert_func+0x30>)
 8010b6e:	9100      	str	r1, [sp, #0]
 8010b70:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010b74:	4906      	ldr	r1, [pc, #24]	; (8010b90 <__assert_func+0x34>)
 8010b76:	462b      	mov	r3, r5
 8010b78:	f000 f80e 	bl	8010b98 <fiprintf>
 8010b7c:	f000 fc2c 	bl	80113d8 <abort>
 8010b80:	4b04      	ldr	r3, [pc, #16]	; (8010b94 <__assert_func+0x38>)
 8010b82:	461c      	mov	r4, r3
 8010b84:	e7f3      	b.n	8010b6e <__assert_func+0x12>
 8010b86:	bf00      	nop
 8010b88:	24000100 	.word	0x24000100
 8010b8c:	080125a4 	.word	0x080125a4
 8010b90:	080125b1 	.word	0x080125b1
 8010b94:	080125df 	.word	0x080125df

08010b98 <fiprintf>:
 8010b98:	b40e      	push	{r1, r2, r3}
 8010b9a:	b503      	push	{r0, r1, lr}
 8010b9c:	4601      	mov	r1, r0
 8010b9e:	ab03      	add	r3, sp, #12
 8010ba0:	4805      	ldr	r0, [pc, #20]	; (8010bb8 <fiprintf+0x20>)
 8010ba2:	f853 2b04 	ldr.w	r2, [r3], #4
 8010ba6:	6800      	ldr	r0, [r0, #0]
 8010ba8:	9301      	str	r3, [sp, #4]
 8010baa:	f000 f891 	bl	8010cd0 <_vfiprintf_r>
 8010bae:	b002      	add	sp, #8
 8010bb0:	f85d eb04 	ldr.w	lr, [sp], #4
 8010bb4:	b003      	add	sp, #12
 8010bb6:	4770      	bx	lr
 8010bb8:	24000100 	.word	0x24000100

08010bbc <malloc>:
 8010bbc:	4b02      	ldr	r3, [pc, #8]	; (8010bc8 <malloc+0xc>)
 8010bbe:	4601      	mov	r1, r0
 8010bc0:	6818      	ldr	r0, [r3, #0]
 8010bc2:	f7ff bf1d 	b.w	8010a00 <_malloc_r>
 8010bc6:	bf00      	nop
 8010bc8:	24000100 	.word	0x24000100

08010bcc <__malloc_lock>:
 8010bcc:	4801      	ldr	r0, [pc, #4]	; (8010bd4 <__malloc_lock+0x8>)
 8010bce:	f000 bdc3 	b.w	8011758 <__retarget_lock_acquire_recursive>
 8010bd2:	bf00      	nop
 8010bd4:	24000c9c 	.word	0x24000c9c

08010bd8 <__malloc_unlock>:
 8010bd8:	4801      	ldr	r0, [pc, #4]	; (8010be0 <__malloc_unlock+0x8>)
 8010bda:	f000 bdbe 	b.w	801175a <__retarget_lock_release_recursive>
 8010bde:	bf00      	nop
 8010be0:	24000c9c 	.word	0x24000c9c

08010be4 <_free_r>:
 8010be4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010be6:	2900      	cmp	r1, #0
 8010be8:	d044      	beq.n	8010c74 <_free_r+0x90>
 8010bea:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8010bee:	9001      	str	r0, [sp, #4]
 8010bf0:	2b00      	cmp	r3, #0
 8010bf2:	f1a1 0404 	sub.w	r4, r1, #4
 8010bf6:	bfb8      	it	lt
 8010bf8:	18e4      	addlt	r4, r4, r3
 8010bfa:	f7ff ffe7 	bl	8010bcc <__malloc_lock>
 8010bfe:	4a1e      	ldr	r2, [pc, #120]	; (8010c78 <_free_r+0x94>)
 8010c00:	9801      	ldr	r0, [sp, #4]
 8010c02:	6813      	ldr	r3, [r2, #0]
 8010c04:	b933      	cbnz	r3, 8010c14 <_free_r+0x30>
 8010c06:	6063      	str	r3, [r4, #4]
 8010c08:	6014      	str	r4, [r2, #0]
 8010c0a:	b003      	add	sp, #12
 8010c0c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8010c10:	f7ff bfe2 	b.w	8010bd8 <__malloc_unlock>
 8010c14:	42a3      	cmp	r3, r4
 8010c16:	d908      	bls.n	8010c2a <_free_r+0x46>
 8010c18:	6825      	ldr	r5, [r4, #0]
 8010c1a:	1961      	adds	r1, r4, r5
 8010c1c:	428b      	cmp	r3, r1
 8010c1e:	bf01      	itttt	eq
 8010c20:	6819      	ldreq	r1, [r3, #0]
 8010c22:	685b      	ldreq	r3, [r3, #4]
 8010c24:	1949      	addeq	r1, r1, r5
 8010c26:	6021      	streq	r1, [r4, #0]
 8010c28:	e7ed      	b.n	8010c06 <_free_r+0x22>
 8010c2a:	461a      	mov	r2, r3
 8010c2c:	685b      	ldr	r3, [r3, #4]
 8010c2e:	b10b      	cbz	r3, 8010c34 <_free_r+0x50>
 8010c30:	42a3      	cmp	r3, r4
 8010c32:	d9fa      	bls.n	8010c2a <_free_r+0x46>
 8010c34:	6811      	ldr	r1, [r2, #0]
 8010c36:	1855      	adds	r5, r2, r1
 8010c38:	42a5      	cmp	r5, r4
 8010c3a:	d10b      	bne.n	8010c54 <_free_r+0x70>
 8010c3c:	6824      	ldr	r4, [r4, #0]
 8010c3e:	4421      	add	r1, r4
 8010c40:	1854      	adds	r4, r2, r1
 8010c42:	42a3      	cmp	r3, r4
 8010c44:	6011      	str	r1, [r2, #0]
 8010c46:	d1e0      	bne.n	8010c0a <_free_r+0x26>
 8010c48:	681c      	ldr	r4, [r3, #0]
 8010c4a:	685b      	ldr	r3, [r3, #4]
 8010c4c:	6053      	str	r3, [r2, #4]
 8010c4e:	4421      	add	r1, r4
 8010c50:	6011      	str	r1, [r2, #0]
 8010c52:	e7da      	b.n	8010c0a <_free_r+0x26>
 8010c54:	d902      	bls.n	8010c5c <_free_r+0x78>
 8010c56:	230c      	movs	r3, #12
 8010c58:	6003      	str	r3, [r0, #0]
 8010c5a:	e7d6      	b.n	8010c0a <_free_r+0x26>
 8010c5c:	6825      	ldr	r5, [r4, #0]
 8010c5e:	1961      	adds	r1, r4, r5
 8010c60:	428b      	cmp	r3, r1
 8010c62:	bf04      	itt	eq
 8010c64:	6819      	ldreq	r1, [r3, #0]
 8010c66:	685b      	ldreq	r3, [r3, #4]
 8010c68:	6063      	str	r3, [r4, #4]
 8010c6a:	bf04      	itt	eq
 8010c6c:	1949      	addeq	r1, r1, r5
 8010c6e:	6021      	streq	r1, [r4, #0]
 8010c70:	6054      	str	r4, [r2, #4]
 8010c72:	e7ca      	b.n	8010c0a <_free_r+0x26>
 8010c74:	b003      	add	sp, #12
 8010c76:	bd30      	pop	{r4, r5, pc}
 8010c78:	24000c90 	.word	0x24000c90

08010c7c <__sfputc_r>:
 8010c7c:	6893      	ldr	r3, [r2, #8]
 8010c7e:	3b01      	subs	r3, #1
 8010c80:	2b00      	cmp	r3, #0
 8010c82:	b410      	push	{r4}
 8010c84:	6093      	str	r3, [r2, #8]
 8010c86:	da08      	bge.n	8010c9a <__sfputc_r+0x1e>
 8010c88:	6994      	ldr	r4, [r2, #24]
 8010c8a:	42a3      	cmp	r3, r4
 8010c8c:	db01      	blt.n	8010c92 <__sfputc_r+0x16>
 8010c8e:	290a      	cmp	r1, #10
 8010c90:	d103      	bne.n	8010c9a <__sfputc_r+0x1e>
 8010c92:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010c96:	f000 badf 	b.w	8011258 <__swbuf_r>
 8010c9a:	6813      	ldr	r3, [r2, #0]
 8010c9c:	1c58      	adds	r0, r3, #1
 8010c9e:	6010      	str	r0, [r2, #0]
 8010ca0:	7019      	strb	r1, [r3, #0]
 8010ca2:	4608      	mov	r0, r1
 8010ca4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010ca8:	4770      	bx	lr

08010caa <__sfputs_r>:
 8010caa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010cac:	4606      	mov	r6, r0
 8010cae:	460f      	mov	r7, r1
 8010cb0:	4614      	mov	r4, r2
 8010cb2:	18d5      	adds	r5, r2, r3
 8010cb4:	42ac      	cmp	r4, r5
 8010cb6:	d101      	bne.n	8010cbc <__sfputs_r+0x12>
 8010cb8:	2000      	movs	r0, #0
 8010cba:	e007      	b.n	8010ccc <__sfputs_r+0x22>
 8010cbc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010cc0:	463a      	mov	r2, r7
 8010cc2:	4630      	mov	r0, r6
 8010cc4:	f7ff ffda 	bl	8010c7c <__sfputc_r>
 8010cc8:	1c43      	adds	r3, r0, #1
 8010cca:	d1f3      	bne.n	8010cb4 <__sfputs_r+0xa>
 8010ccc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08010cd0 <_vfiprintf_r>:
 8010cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cd4:	460d      	mov	r5, r1
 8010cd6:	b09d      	sub	sp, #116	; 0x74
 8010cd8:	4614      	mov	r4, r2
 8010cda:	4698      	mov	r8, r3
 8010cdc:	4606      	mov	r6, r0
 8010cde:	b118      	cbz	r0, 8010ce8 <_vfiprintf_r+0x18>
 8010ce0:	6983      	ldr	r3, [r0, #24]
 8010ce2:	b90b      	cbnz	r3, 8010ce8 <_vfiprintf_r+0x18>
 8010ce4:	f000 fc9a 	bl	801161c <__sinit>
 8010ce8:	4b89      	ldr	r3, [pc, #548]	; (8010f10 <_vfiprintf_r+0x240>)
 8010cea:	429d      	cmp	r5, r3
 8010cec:	d11b      	bne.n	8010d26 <_vfiprintf_r+0x56>
 8010cee:	6875      	ldr	r5, [r6, #4]
 8010cf0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8010cf2:	07d9      	lsls	r1, r3, #31
 8010cf4:	d405      	bmi.n	8010d02 <_vfiprintf_r+0x32>
 8010cf6:	89ab      	ldrh	r3, [r5, #12]
 8010cf8:	059a      	lsls	r2, r3, #22
 8010cfa:	d402      	bmi.n	8010d02 <_vfiprintf_r+0x32>
 8010cfc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8010cfe:	f000 fd2b 	bl	8011758 <__retarget_lock_acquire_recursive>
 8010d02:	89ab      	ldrh	r3, [r5, #12]
 8010d04:	071b      	lsls	r3, r3, #28
 8010d06:	d501      	bpl.n	8010d0c <_vfiprintf_r+0x3c>
 8010d08:	692b      	ldr	r3, [r5, #16]
 8010d0a:	b9eb      	cbnz	r3, 8010d48 <_vfiprintf_r+0x78>
 8010d0c:	4629      	mov	r1, r5
 8010d0e:	4630      	mov	r0, r6
 8010d10:	f000 faf4 	bl	80112fc <__swsetup_r>
 8010d14:	b1c0      	cbz	r0, 8010d48 <_vfiprintf_r+0x78>
 8010d16:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8010d18:	07dc      	lsls	r4, r3, #31
 8010d1a:	d50e      	bpl.n	8010d3a <_vfiprintf_r+0x6a>
 8010d1c:	f04f 30ff 	mov.w	r0, #4294967295
 8010d20:	b01d      	add	sp, #116	; 0x74
 8010d22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d26:	4b7b      	ldr	r3, [pc, #492]	; (8010f14 <_vfiprintf_r+0x244>)
 8010d28:	429d      	cmp	r5, r3
 8010d2a:	d101      	bne.n	8010d30 <_vfiprintf_r+0x60>
 8010d2c:	68b5      	ldr	r5, [r6, #8]
 8010d2e:	e7df      	b.n	8010cf0 <_vfiprintf_r+0x20>
 8010d30:	4b79      	ldr	r3, [pc, #484]	; (8010f18 <_vfiprintf_r+0x248>)
 8010d32:	429d      	cmp	r5, r3
 8010d34:	bf08      	it	eq
 8010d36:	68f5      	ldreq	r5, [r6, #12]
 8010d38:	e7da      	b.n	8010cf0 <_vfiprintf_r+0x20>
 8010d3a:	89ab      	ldrh	r3, [r5, #12]
 8010d3c:	0598      	lsls	r0, r3, #22
 8010d3e:	d4ed      	bmi.n	8010d1c <_vfiprintf_r+0x4c>
 8010d40:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8010d42:	f000 fd0a 	bl	801175a <__retarget_lock_release_recursive>
 8010d46:	e7e9      	b.n	8010d1c <_vfiprintf_r+0x4c>
 8010d48:	2300      	movs	r3, #0
 8010d4a:	9309      	str	r3, [sp, #36]	; 0x24
 8010d4c:	2320      	movs	r3, #32
 8010d4e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8010d52:	f8cd 800c 	str.w	r8, [sp, #12]
 8010d56:	2330      	movs	r3, #48	; 0x30
 8010d58:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8010f1c <_vfiprintf_r+0x24c>
 8010d5c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8010d60:	f04f 0901 	mov.w	r9, #1
 8010d64:	4623      	mov	r3, r4
 8010d66:	469a      	mov	sl, r3
 8010d68:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010d6c:	b10a      	cbz	r2, 8010d72 <_vfiprintf_r+0xa2>
 8010d6e:	2a25      	cmp	r2, #37	; 0x25
 8010d70:	d1f9      	bne.n	8010d66 <_vfiprintf_r+0x96>
 8010d72:	ebba 0b04 	subs.w	fp, sl, r4
 8010d76:	d00b      	beq.n	8010d90 <_vfiprintf_r+0xc0>
 8010d78:	465b      	mov	r3, fp
 8010d7a:	4622      	mov	r2, r4
 8010d7c:	4629      	mov	r1, r5
 8010d7e:	4630      	mov	r0, r6
 8010d80:	f7ff ff93 	bl	8010caa <__sfputs_r>
 8010d84:	3001      	adds	r0, #1
 8010d86:	f000 80aa 	beq.w	8010ede <_vfiprintf_r+0x20e>
 8010d8a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010d8c:	445a      	add	r2, fp
 8010d8e:	9209      	str	r2, [sp, #36]	; 0x24
 8010d90:	f89a 3000 	ldrb.w	r3, [sl]
 8010d94:	2b00      	cmp	r3, #0
 8010d96:	f000 80a2 	beq.w	8010ede <_vfiprintf_r+0x20e>
 8010d9a:	2300      	movs	r3, #0
 8010d9c:	f04f 32ff 	mov.w	r2, #4294967295
 8010da0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8010da4:	f10a 0a01 	add.w	sl, sl, #1
 8010da8:	9304      	str	r3, [sp, #16]
 8010daa:	9307      	str	r3, [sp, #28]
 8010dac:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8010db0:	931a      	str	r3, [sp, #104]	; 0x68
 8010db2:	4654      	mov	r4, sl
 8010db4:	2205      	movs	r2, #5
 8010db6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010dba:	4858      	ldr	r0, [pc, #352]	; (8010f1c <_vfiprintf_r+0x24c>)
 8010dbc:	f7ef fa98 	bl	80002f0 <memchr>
 8010dc0:	9a04      	ldr	r2, [sp, #16]
 8010dc2:	b9d8      	cbnz	r0, 8010dfc <_vfiprintf_r+0x12c>
 8010dc4:	06d1      	lsls	r1, r2, #27
 8010dc6:	bf44      	itt	mi
 8010dc8:	2320      	movmi	r3, #32
 8010dca:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8010dce:	0713      	lsls	r3, r2, #28
 8010dd0:	bf44      	itt	mi
 8010dd2:	232b      	movmi	r3, #43	; 0x2b
 8010dd4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8010dd8:	f89a 3000 	ldrb.w	r3, [sl]
 8010ddc:	2b2a      	cmp	r3, #42	; 0x2a
 8010dde:	d015      	beq.n	8010e0c <_vfiprintf_r+0x13c>
 8010de0:	9a07      	ldr	r2, [sp, #28]
 8010de2:	4654      	mov	r4, sl
 8010de4:	2000      	movs	r0, #0
 8010de6:	f04f 0c0a 	mov.w	ip, #10
 8010dea:	4621      	mov	r1, r4
 8010dec:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010df0:	3b30      	subs	r3, #48	; 0x30
 8010df2:	2b09      	cmp	r3, #9
 8010df4:	d94e      	bls.n	8010e94 <_vfiprintf_r+0x1c4>
 8010df6:	b1b0      	cbz	r0, 8010e26 <_vfiprintf_r+0x156>
 8010df8:	9207      	str	r2, [sp, #28]
 8010dfa:	e014      	b.n	8010e26 <_vfiprintf_r+0x156>
 8010dfc:	eba0 0308 	sub.w	r3, r0, r8
 8010e00:	fa09 f303 	lsl.w	r3, r9, r3
 8010e04:	4313      	orrs	r3, r2
 8010e06:	9304      	str	r3, [sp, #16]
 8010e08:	46a2      	mov	sl, r4
 8010e0a:	e7d2      	b.n	8010db2 <_vfiprintf_r+0xe2>
 8010e0c:	9b03      	ldr	r3, [sp, #12]
 8010e0e:	1d19      	adds	r1, r3, #4
 8010e10:	681b      	ldr	r3, [r3, #0]
 8010e12:	9103      	str	r1, [sp, #12]
 8010e14:	2b00      	cmp	r3, #0
 8010e16:	bfbb      	ittet	lt
 8010e18:	425b      	neglt	r3, r3
 8010e1a:	f042 0202 	orrlt.w	r2, r2, #2
 8010e1e:	9307      	strge	r3, [sp, #28]
 8010e20:	9307      	strlt	r3, [sp, #28]
 8010e22:	bfb8      	it	lt
 8010e24:	9204      	strlt	r2, [sp, #16]
 8010e26:	7823      	ldrb	r3, [r4, #0]
 8010e28:	2b2e      	cmp	r3, #46	; 0x2e
 8010e2a:	d10c      	bne.n	8010e46 <_vfiprintf_r+0x176>
 8010e2c:	7863      	ldrb	r3, [r4, #1]
 8010e2e:	2b2a      	cmp	r3, #42	; 0x2a
 8010e30:	d135      	bne.n	8010e9e <_vfiprintf_r+0x1ce>
 8010e32:	9b03      	ldr	r3, [sp, #12]
 8010e34:	1d1a      	adds	r2, r3, #4
 8010e36:	681b      	ldr	r3, [r3, #0]
 8010e38:	9203      	str	r2, [sp, #12]
 8010e3a:	2b00      	cmp	r3, #0
 8010e3c:	bfb8      	it	lt
 8010e3e:	f04f 33ff 	movlt.w	r3, #4294967295
 8010e42:	3402      	adds	r4, #2
 8010e44:	9305      	str	r3, [sp, #20]
 8010e46:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8010f2c <_vfiprintf_r+0x25c>
 8010e4a:	7821      	ldrb	r1, [r4, #0]
 8010e4c:	2203      	movs	r2, #3
 8010e4e:	4650      	mov	r0, sl
 8010e50:	f7ef fa4e 	bl	80002f0 <memchr>
 8010e54:	b140      	cbz	r0, 8010e68 <_vfiprintf_r+0x198>
 8010e56:	2340      	movs	r3, #64	; 0x40
 8010e58:	eba0 000a 	sub.w	r0, r0, sl
 8010e5c:	fa03 f000 	lsl.w	r0, r3, r0
 8010e60:	9b04      	ldr	r3, [sp, #16]
 8010e62:	4303      	orrs	r3, r0
 8010e64:	3401      	adds	r4, #1
 8010e66:	9304      	str	r3, [sp, #16]
 8010e68:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010e6c:	482c      	ldr	r0, [pc, #176]	; (8010f20 <_vfiprintf_r+0x250>)
 8010e6e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8010e72:	2206      	movs	r2, #6
 8010e74:	f7ef fa3c 	bl	80002f0 <memchr>
 8010e78:	2800      	cmp	r0, #0
 8010e7a:	d03f      	beq.n	8010efc <_vfiprintf_r+0x22c>
 8010e7c:	4b29      	ldr	r3, [pc, #164]	; (8010f24 <_vfiprintf_r+0x254>)
 8010e7e:	bb1b      	cbnz	r3, 8010ec8 <_vfiprintf_r+0x1f8>
 8010e80:	9b03      	ldr	r3, [sp, #12]
 8010e82:	3307      	adds	r3, #7
 8010e84:	f023 0307 	bic.w	r3, r3, #7
 8010e88:	3308      	adds	r3, #8
 8010e8a:	9303      	str	r3, [sp, #12]
 8010e8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010e8e:	443b      	add	r3, r7
 8010e90:	9309      	str	r3, [sp, #36]	; 0x24
 8010e92:	e767      	b.n	8010d64 <_vfiprintf_r+0x94>
 8010e94:	fb0c 3202 	mla	r2, ip, r2, r3
 8010e98:	460c      	mov	r4, r1
 8010e9a:	2001      	movs	r0, #1
 8010e9c:	e7a5      	b.n	8010dea <_vfiprintf_r+0x11a>
 8010e9e:	2300      	movs	r3, #0
 8010ea0:	3401      	adds	r4, #1
 8010ea2:	9305      	str	r3, [sp, #20]
 8010ea4:	4619      	mov	r1, r3
 8010ea6:	f04f 0c0a 	mov.w	ip, #10
 8010eaa:	4620      	mov	r0, r4
 8010eac:	f810 2b01 	ldrb.w	r2, [r0], #1
 8010eb0:	3a30      	subs	r2, #48	; 0x30
 8010eb2:	2a09      	cmp	r2, #9
 8010eb4:	d903      	bls.n	8010ebe <_vfiprintf_r+0x1ee>
 8010eb6:	2b00      	cmp	r3, #0
 8010eb8:	d0c5      	beq.n	8010e46 <_vfiprintf_r+0x176>
 8010eba:	9105      	str	r1, [sp, #20]
 8010ebc:	e7c3      	b.n	8010e46 <_vfiprintf_r+0x176>
 8010ebe:	fb0c 2101 	mla	r1, ip, r1, r2
 8010ec2:	4604      	mov	r4, r0
 8010ec4:	2301      	movs	r3, #1
 8010ec6:	e7f0      	b.n	8010eaa <_vfiprintf_r+0x1da>
 8010ec8:	ab03      	add	r3, sp, #12
 8010eca:	9300      	str	r3, [sp, #0]
 8010ecc:	462a      	mov	r2, r5
 8010ece:	4b16      	ldr	r3, [pc, #88]	; (8010f28 <_vfiprintf_r+0x258>)
 8010ed0:	a904      	add	r1, sp, #16
 8010ed2:	4630      	mov	r0, r6
 8010ed4:	f3af 8000 	nop.w
 8010ed8:	4607      	mov	r7, r0
 8010eda:	1c78      	adds	r0, r7, #1
 8010edc:	d1d6      	bne.n	8010e8c <_vfiprintf_r+0x1bc>
 8010ede:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8010ee0:	07d9      	lsls	r1, r3, #31
 8010ee2:	d405      	bmi.n	8010ef0 <_vfiprintf_r+0x220>
 8010ee4:	89ab      	ldrh	r3, [r5, #12]
 8010ee6:	059a      	lsls	r2, r3, #22
 8010ee8:	d402      	bmi.n	8010ef0 <_vfiprintf_r+0x220>
 8010eea:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8010eec:	f000 fc35 	bl	801175a <__retarget_lock_release_recursive>
 8010ef0:	89ab      	ldrh	r3, [r5, #12]
 8010ef2:	065b      	lsls	r3, r3, #25
 8010ef4:	f53f af12 	bmi.w	8010d1c <_vfiprintf_r+0x4c>
 8010ef8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010efa:	e711      	b.n	8010d20 <_vfiprintf_r+0x50>
 8010efc:	ab03      	add	r3, sp, #12
 8010efe:	9300      	str	r3, [sp, #0]
 8010f00:	462a      	mov	r2, r5
 8010f02:	4b09      	ldr	r3, [pc, #36]	; (8010f28 <_vfiprintf_r+0x258>)
 8010f04:	a904      	add	r1, sp, #16
 8010f06:	4630      	mov	r0, r6
 8010f08:	f000 f880 	bl	801100c <_printf_i>
 8010f0c:	e7e4      	b.n	8010ed8 <_vfiprintf_r+0x208>
 8010f0e:	bf00      	nop
 8010f10:	08012734 	.word	0x08012734
 8010f14:	08012754 	.word	0x08012754
 8010f18:	08012714 	.word	0x08012714
 8010f1c:	080126e1 	.word	0x080126e1
 8010f20:	080126eb 	.word	0x080126eb
 8010f24:	00000000 	.word	0x00000000
 8010f28:	08010cab 	.word	0x08010cab
 8010f2c:	080126e7 	.word	0x080126e7

08010f30 <_printf_common>:
 8010f30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010f34:	4616      	mov	r6, r2
 8010f36:	4699      	mov	r9, r3
 8010f38:	688a      	ldr	r2, [r1, #8]
 8010f3a:	690b      	ldr	r3, [r1, #16]
 8010f3c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8010f40:	4293      	cmp	r3, r2
 8010f42:	bfb8      	it	lt
 8010f44:	4613      	movlt	r3, r2
 8010f46:	6033      	str	r3, [r6, #0]
 8010f48:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8010f4c:	4607      	mov	r7, r0
 8010f4e:	460c      	mov	r4, r1
 8010f50:	b10a      	cbz	r2, 8010f56 <_printf_common+0x26>
 8010f52:	3301      	adds	r3, #1
 8010f54:	6033      	str	r3, [r6, #0]
 8010f56:	6823      	ldr	r3, [r4, #0]
 8010f58:	0699      	lsls	r1, r3, #26
 8010f5a:	bf42      	ittt	mi
 8010f5c:	6833      	ldrmi	r3, [r6, #0]
 8010f5e:	3302      	addmi	r3, #2
 8010f60:	6033      	strmi	r3, [r6, #0]
 8010f62:	6825      	ldr	r5, [r4, #0]
 8010f64:	f015 0506 	ands.w	r5, r5, #6
 8010f68:	d106      	bne.n	8010f78 <_printf_common+0x48>
 8010f6a:	f104 0a19 	add.w	sl, r4, #25
 8010f6e:	68e3      	ldr	r3, [r4, #12]
 8010f70:	6832      	ldr	r2, [r6, #0]
 8010f72:	1a9b      	subs	r3, r3, r2
 8010f74:	42ab      	cmp	r3, r5
 8010f76:	dc26      	bgt.n	8010fc6 <_printf_common+0x96>
 8010f78:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8010f7c:	1e13      	subs	r3, r2, #0
 8010f7e:	6822      	ldr	r2, [r4, #0]
 8010f80:	bf18      	it	ne
 8010f82:	2301      	movne	r3, #1
 8010f84:	0692      	lsls	r2, r2, #26
 8010f86:	d42b      	bmi.n	8010fe0 <_printf_common+0xb0>
 8010f88:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8010f8c:	4649      	mov	r1, r9
 8010f8e:	4638      	mov	r0, r7
 8010f90:	47c0      	blx	r8
 8010f92:	3001      	adds	r0, #1
 8010f94:	d01e      	beq.n	8010fd4 <_printf_common+0xa4>
 8010f96:	6823      	ldr	r3, [r4, #0]
 8010f98:	68e5      	ldr	r5, [r4, #12]
 8010f9a:	6832      	ldr	r2, [r6, #0]
 8010f9c:	f003 0306 	and.w	r3, r3, #6
 8010fa0:	2b04      	cmp	r3, #4
 8010fa2:	bf08      	it	eq
 8010fa4:	1aad      	subeq	r5, r5, r2
 8010fa6:	68a3      	ldr	r3, [r4, #8]
 8010fa8:	6922      	ldr	r2, [r4, #16]
 8010faa:	bf0c      	ite	eq
 8010fac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8010fb0:	2500      	movne	r5, #0
 8010fb2:	4293      	cmp	r3, r2
 8010fb4:	bfc4      	itt	gt
 8010fb6:	1a9b      	subgt	r3, r3, r2
 8010fb8:	18ed      	addgt	r5, r5, r3
 8010fba:	2600      	movs	r6, #0
 8010fbc:	341a      	adds	r4, #26
 8010fbe:	42b5      	cmp	r5, r6
 8010fc0:	d11a      	bne.n	8010ff8 <_printf_common+0xc8>
 8010fc2:	2000      	movs	r0, #0
 8010fc4:	e008      	b.n	8010fd8 <_printf_common+0xa8>
 8010fc6:	2301      	movs	r3, #1
 8010fc8:	4652      	mov	r2, sl
 8010fca:	4649      	mov	r1, r9
 8010fcc:	4638      	mov	r0, r7
 8010fce:	47c0      	blx	r8
 8010fd0:	3001      	adds	r0, #1
 8010fd2:	d103      	bne.n	8010fdc <_printf_common+0xac>
 8010fd4:	f04f 30ff 	mov.w	r0, #4294967295
 8010fd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010fdc:	3501      	adds	r5, #1
 8010fde:	e7c6      	b.n	8010f6e <_printf_common+0x3e>
 8010fe0:	18e1      	adds	r1, r4, r3
 8010fe2:	1c5a      	adds	r2, r3, #1
 8010fe4:	2030      	movs	r0, #48	; 0x30
 8010fe6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8010fea:	4422      	add	r2, r4
 8010fec:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8010ff0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8010ff4:	3302      	adds	r3, #2
 8010ff6:	e7c7      	b.n	8010f88 <_printf_common+0x58>
 8010ff8:	2301      	movs	r3, #1
 8010ffa:	4622      	mov	r2, r4
 8010ffc:	4649      	mov	r1, r9
 8010ffe:	4638      	mov	r0, r7
 8011000:	47c0      	blx	r8
 8011002:	3001      	adds	r0, #1
 8011004:	d0e6      	beq.n	8010fd4 <_printf_common+0xa4>
 8011006:	3601      	adds	r6, #1
 8011008:	e7d9      	b.n	8010fbe <_printf_common+0x8e>
	...

0801100c <_printf_i>:
 801100c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8011010:	7e0f      	ldrb	r7, [r1, #24]
 8011012:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8011014:	2f78      	cmp	r7, #120	; 0x78
 8011016:	4691      	mov	r9, r2
 8011018:	4680      	mov	r8, r0
 801101a:	460c      	mov	r4, r1
 801101c:	469a      	mov	sl, r3
 801101e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8011022:	d807      	bhi.n	8011034 <_printf_i+0x28>
 8011024:	2f62      	cmp	r7, #98	; 0x62
 8011026:	d80a      	bhi.n	801103e <_printf_i+0x32>
 8011028:	2f00      	cmp	r7, #0
 801102a:	f000 80d8 	beq.w	80111de <_printf_i+0x1d2>
 801102e:	2f58      	cmp	r7, #88	; 0x58
 8011030:	f000 80a3 	beq.w	801117a <_printf_i+0x16e>
 8011034:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8011038:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801103c:	e03a      	b.n	80110b4 <_printf_i+0xa8>
 801103e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8011042:	2b15      	cmp	r3, #21
 8011044:	d8f6      	bhi.n	8011034 <_printf_i+0x28>
 8011046:	a101      	add	r1, pc, #4	; (adr r1, 801104c <_printf_i+0x40>)
 8011048:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801104c:	080110a5 	.word	0x080110a5
 8011050:	080110b9 	.word	0x080110b9
 8011054:	08011035 	.word	0x08011035
 8011058:	08011035 	.word	0x08011035
 801105c:	08011035 	.word	0x08011035
 8011060:	08011035 	.word	0x08011035
 8011064:	080110b9 	.word	0x080110b9
 8011068:	08011035 	.word	0x08011035
 801106c:	08011035 	.word	0x08011035
 8011070:	08011035 	.word	0x08011035
 8011074:	08011035 	.word	0x08011035
 8011078:	080111c5 	.word	0x080111c5
 801107c:	080110e9 	.word	0x080110e9
 8011080:	080111a7 	.word	0x080111a7
 8011084:	08011035 	.word	0x08011035
 8011088:	08011035 	.word	0x08011035
 801108c:	080111e7 	.word	0x080111e7
 8011090:	08011035 	.word	0x08011035
 8011094:	080110e9 	.word	0x080110e9
 8011098:	08011035 	.word	0x08011035
 801109c:	08011035 	.word	0x08011035
 80110a0:	080111af 	.word	0x080111af
 80110a4:	682b      	ldr	r3, [r5, #0]
 80110a6:	1d1a      	adds	r2, r3, #4
 80110a8:	681b      	ldr	r3, [r3, #0]
 80110aa:	602a      	str	r2, [r5, #0]
 80110ac:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80110b0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80110b4:	2301      	movs	r3, #1
 80110b6:	e0a3      	b.n	8011200 <_printf_i+0x1f4>
 80110b8:	6820      	ldr	r0, [r4, #0]
 80110ba:	6829      	ldr	r1, [r5, #0]
 80110bc:	0606      	lsls	r6, r0, #24
 80110be:	f101 0304 	add.w	r3, r1, #4
 80110c2:	d50a      	bpl.n	80110da <_printf_i+0xce>
 80110c4:	680e      	ldr	r6, [r1, #0]
 80110c6:	602b      	str	r3, [r5, #0]
 80110c8:	2e00      	cmp	r6, #0
 80110ca:	da03      	bge.n	80110d4 <_printf_i+0xc8>
 80110cc:	232d      	movs	r3, #45	; 0x2d
 80110ce:	4276      	negs	r6, r6
 80110d0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80110d4:	485e      	ldr	r0, [pc, #376]	; (8011250 <_printf_i+0x244>)
 80110d6:	230a      	movs	r3, #10
 80110d8:	e019      	b.n	801110e <_printf_i+0x102>
 80110da:	680e      	ldr	r6, [r1, #0]
 80110dc:	602b      	str	r3, [r5, #0]
 80110de:	f010 0f40 	tst.w	r0, #64	; 0x40
 80110e2:	bf18      	it	ne
 80110e4:	b236      	sxthne	r6, r6
 80110e6:	e7ef      	b.n	80110c8 <_printf_i+0xbc>
 80110e8:	682b      	ldr	r3, [r5, #0]
 80110ea:	6820      	ldr	r0, [r4, #0]
 80110ec:	1d19      	adds	r1, r3, #4
 80110ee:	6029      	str	r1, [r5, #0]
 80110f0:	0601      	lsls	r1, r0, #24
 80110f2:	d501      	bpl.n	80110f8 <_printf_i+0xec>
 80110f4:	681e      	ldr	r6, [r3, #0]
 80110f6:	e002      	b.n	80110fe <_printf_i+0xf2>
 80110f8:	0646      	lsls	r6, r0, #25
 80110fa:	d5fb      	bpl.n	80110f4 <_printf_i+0xe8>
 80110fc:	881e      	ldrh	r6, [r3, #0]
 80110fe:	4854      	ldr	r0, [pc, #336]	; (8011250 <_printf_i+0x244>)
 8011100:	2f6f      	cmp	r7, #111	; 0x6f
 8011102:	bf0c      	ite	eq
 8011104:	2308      	moveq	r3, #8
 8011106:	230a      	movne	r3, #10
 8011108:	2100      	movs	r1, #0
 801110a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801110e:	6865      	ldr	r5, [r4, #4]
 8011110:	60a5      	str	r5, [r4, #8]
 8011112:	2d00      	cmp	r5, #0
 8011114:	bfa2      	ittt	ge
 8011116:	6821      	ldrge	r1, [r4, #0]
 8011118:	f021 0104 	bicge.w	r1, r1, #4
 801111c:	6021      	strge	r1, [r4, #0]
 801111e:	b90e      	cbnz	r6, 8011124 <_printf_i+0x118>
 8011120:	2d00      	cmp	r5, #0
 8011122:	d04d      	beq.n	80111c0 <_printf_i+0x1b4>
 8011124:	4615      	mov	r5, r2
 8011126:	fbb6 f1f3 	udiv	r1, r6, r3
 801112a:	fb03 6711 	mls	r7, r3, r1, r6
 801112e:	5dc7      	ldrb	r7, [r0, r7]
 8011130:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8011134:	4637      	mov	r7, r6
 8011136:	42bb      	cmp	r3, r7
 8011138:	460e      	mov	r6, r1
 801113a:	d9f4      	bls.n	8011126 <_printf_i+0x11a>
 801113c:	2b08      	cmp	r3, #8
 801113e:	d10b      	bne.n	8011158 <_printf_i+0x14c>
 8011140:	6823      	ldr	r3, [r4, #0]
 8011142:	07de      	lsls	r6, r3, #31
 8011144:	d508      	bpl.n	8011158 <_printf_i+0x14c>
 8011146:	6923      	ldr	r3, [r4, #16]
 8011148:	6861      	ldr	r1, [r4, #4]
 801114a:	4299      	cmp	r1, r3
 801114c:	bfde      	ittt	le
 801114e:	2330      	movle	r3, #48	; 0x30
 8011150:	f805 3c01 	strble.w	r3, [r5, #-1]
 8011154:	f105 35ff 	addle.w	r5, r5, #4294967295
 8011158:	1b52      	subs	r2, r2, r5
 801115a:	6122      	str	r2, [r4, #16]
 801115c:	f8cd a000 	str.w	sl, [sp]
 8011160:	464b      	mov	r3, r9
 8011162:	aa03      	add	r2, sp, #12
 8011164:	4621      	mov	r1, r4
 8011166:	4640      	mov	r0, r8
 8011168:	f7ff fee2 	bl	8010f30 <_printf_common>
 801116c:	3001      	adds	r0, #1
 801116e:	d14c      	bne.n	801120a <_printf_i+0x1fe>
 8011170:	f04f 30ff 	mov.w	r0, #4294967295
 8011174:	b004      	add	sp, #16
 8011176:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801117a:	4835      	ldr	r0, [pc, #212]	; (8011250 <_printf_i+0x244>)
 801117c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8011180:	6829      	ldr	r1, [r5, #0]
 8011182:	6823      	ldr	r3, [r4, #0]
 8011184:	f851 6b04 	ldr.w	r6, [r1], #4
 8011188:	6029      	str	r1, [r5, #0]
 801118a:	061d      	lsls	r5, r3, #24
 801118c:	d514      	bpl.n	80111b8 <_printf_i+0x1ac>
 801118e:	07df      	lsls	r7, r3, #31
 8011190:	bf44      	itt	mi
 8011192:	f043 0320 	orrmi.w	r3, r3, #32
 8011196:	6023      	strmi	r3, [r4, #0]
 8011198:	b91e      	cbnz	r6, 80111a2 <_printf_i+0x196>
 801119a:	6823      	ldr	r3, [r4, #0]
 801119c:	f023 0320 	bic.w	r3, r3, #32
 80111a0:	6023      	str	r3, [r4, #0]
 80111a2:	2310      	movs	r3, #16
 80111a4:	e7b0      	b.n	8011108 <_printf_i+0xfc>
 80111a6:	6823      	ldr	r3, [r4, #0]
 80111a8:	f043 0320 	orr.w	r3, r3, #32
 80111ac:	6023      	str	r3, [r4, #0]
 80111ae:	2378      	movs	r3, #120	; 0x78
 80111b0:	4828      	ldr	r0, [pc, #160]	; (8011254 <_printf_i+0x248>)
 80111b2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80111b6:	e7e3      	b.n	8011180 <_printf_i+0x174>
 80111b8:	0659      	lsls	r1, r3, #25
 80111ba:	bf48      	it	mi
 80111bc:	b2b6      	uxthmi	r6, r6
 80111be:	e7e6      	b.n	801118e <_printf_i+0x182>
 80111c0:	4615      	mov	r5, r2
 80111c2:	e7bb      	b.n	801113c <_printf_i+0x130>
 80111c4:	682b      	ldr	r3, [r5, #0]
 80111c6:	6826      	ldr	r6, [r4, #0]
 80111c8:	6961      	ldr	r1, [r4, #20]
 80111ca:	1d18      	adds	r0, r3, #4
 80111cc:	6028      	str	r0, [r5, #0]
 80111ce:	0635      	lsls	r5, r6, #24
 80111d0:	681b      	ldr	r3, [r3, #0]
 80111d2:	d501      	bpl.n	80111d8 <_printf_i+0x1cc>
 80111d4:	6019      	str	r1, [r3, #0]
 80111d6:	e002      	b.n	80111de <_printf_i+0x1d2>
 80111d8:	0670      	lsls	r0, r6, #25
 80111da:	d5fb      	bpl.n	80111d4 <_printf_i+0x1c8>
 80111dc:	8019      	strh	r1, [r3, #0]
 80111de:	2300      	movs	r3, #0
 80111e0:	6123      	str	r3, [r4, #16]
 80111e2:	4615      	mov	r5, r2
 80111e4:	e7ba      	b.n	801115c <_printf_i+0x150>
 80111e6:	682b      	ldr	r3, [r5, #0]
 80111e8:	1d1a      	adds	r2, r3, #4
 80111ea:	602a      	str	r2, [r5, #0]
 80111ec:	681d      	ldr	r5, [r3, #0]
 80111ee:	6862      	ldr	r2, [r4, #4]
 80111f0:	2100      	movs	r1, #0
 80111f2:	4628      	mov	r0, r5
 80111f4:	f7ef f87c 	bl	80002f0 <memchr>
 80111f8:	b108      	cbz	r0, 80111fe <_printf_i+0x1f2>
 80111fa:	1b40      	subs	r0, r0, r5
 80111fc:	6060      	str	r0, [r4, #4]
 80111fe:	6863      	ldr	r3, [r4, #4]
 8011200:	6123      	str	r3, [r4, #16]
 8011202:	2300      	movs	r3, #0
 8011204:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8011208:	e7a8      	b.n	801115c <_printf_i+0x150>
 801120a:	6923      	ldr	r3, [r4, #16]
 801120c:	462a      	mov	r2, r5
 801120e:	4649      	mov	r1, r9
 8011210:	4640      	mov	r0, r8
 8011212:	47d0      	blx	sl
 8011214:	3001      	adds	r0, #1
 8011216:	d0ab      	beq.n	8011170 <_printf_i+0x164>
 8011218:	6823      	ldr	r3, [r4, #0]
 801121a:	079b      	lsls	r3, r3, #30
 801121c:	d413      	bmi.n	8011246 <_printf_i+0x23a>
 801121e:	68e0      	ldr	r0, [r4, #12]
 8011220:	9b03      	ldr	r3, [sp, #12]
 8011222:	4298      	cmp	r0, r3
 8011224:	bfb8      	it	lt
 8011226:	4618      	movlt	r0, r3
 8011228:	e7a4      	b.n	8011174 <_printf_i+0x168>
 801122a:	2301      	movs	r3, #1
 801122c:	4632      	mov	r2, r6
 801122e:	4649      	mov	r1, r9
 8011230:	4640      	mov	r0, r8
 8011232:	47d0      	blx	sl
 8011234:	3001      	adds	r0, #1
 8011236:	d09b      	beq.n	8011170 <_printf_i+0x164>
 8011238:	3501      	adds	r5, #1
 801123a:	68e3      	ldr	r3, [r4, #12]
 801123c:	9903      	ldr	r1, [sp, #12]
 801123e:	1a5b      	subs	r3, r3, r1
 8011240:	42ab      	cmp	r3, r5
 8011242:	dcf2      	bgt.n	801122a <_printf_i+0x21e>
 8011244:	e7eb      	b.n	801121e <_printf_i+0x212>
 8011246:	2500      	movs	r5, #0
 8011248:	f104 0619 	add.w	r6, r4, #25
 801124c:	e7f5      	b.n	801123a <_printf_i+0x22e>
 801124e:	bf00      	nop
 8011250:	080126f2 	.word	0x080126f2
 8011254:	08012703 	.word	0x08012703

08011258 <__swbuf_r>:
 8011258:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801125a:	460e      	mov	r6, r1
 801125c:	4614      	mov	r4, r2
 801125e:	4605      	mov	r5, r0
 8011260:	b118      	cbz	r0, 801126a <__swbuf_r+0x12>
 8011262:	6983      	ldr	r3, [r0, #24]
 8011264:	b90b      	cbnz	r3, 801126a <__swbuf_r+0x12>
 8011266:	f000 f9d9 	bl	801161c <__sinit>
 801126a:	4b21      	ldr	r3, [pc, #132]	; (80112f0 <__swbuf_r+0x98>)
 801126c:	429c      	cmp	r4, r3
 801126e:	d12b      	bne.n	80112c8 <__swbuf_r+0x70>
 8011270:	686c      	ldr	r4, [r5, #4]
 8011272:	69a3      	ldr	r3, [r4, #24]
 8011274:	60a3      	str	r3, [r4, #8]
 8011276:	89a3      	ldrh	r3, [r4, #12]
 8011278:	071a      	lsls	r2, r3, #28
 801127a:	d52f      	bpl.n	80112dc <__swbuf_r+0x84>
 801127c:	6923      	ldr	r3, [r4, #16]
 801127e:	b36b      	cbz	r3, 80112dc <__swbuf_r+0x84>
 8011280:	6923      	ldr	r3, [r4, #16]
 8011282:	6820      	ldr	r0, [r4, #0]
 8011284:	1ac0      	subs	r0, r0, r3
 8011286:	6963      	ldr	r3, [r4, #20]
 8011288:	b2f6      	uxtb	r6, r6
 801128a:	4283      	cmp	r3, r0
 801128c:	4637      	mov	r7, r6
 801128e:	dc04      	bgt.n	801129a <__swbuf_r+0x42>
 8011290:	4621      	mov	r1, r4
 8011292:	4628      	mov	r0, r5
 8011294:	f000 f92e 	bl	80114f4 <_fflush_r>
 8011298:	bb30      	cbnz	r0, 80112e8 <__swbuf_r+0x90>
 801129a:	68a3      	ldr	r3, [r4, #8]
 801129c:	3b01      	subs	r3, #1
 801129e:	60a3      	str	r3, [r4, #8]
 80112a0:	6823      	ldr	r3, [r4, #0]
 80112a2:	1c5a      	adds	r2, r3, #1
 80112a4:	6022      	str	r2, [r4, #0]
 80112a6:	701e      	strb	r6, [r3, #0]
 80112a8:	6963      	ldr	r3, [r4, #20]
 80112aa:	3001      	adds	r0, #1
 80112ac:	4283      	cmp	r3, r0
 80112ae:	d004      	beq.n	80112ba <__swbuf_r+0x62>
 80112b0:	89a3      	ldrh	r3, [r4, #12]
 80112b2:	07db      	lsls	r3, r3, #31
 80112b4:	d506      	bpl.n	80112c4 <__swbuf_r+0x6c>
 80112b6:	2e0a      	cmp	r6, #10
 80112b8:	d104      	bne.n	80112c4 <__swbuf_r+0x6c>
 80112ba:	4621      	mov	r1, r4
 80112bc:	4628      	mov	r0, r5
 80112be:	f000 f919 	bl	80114f4 <_fflush_r>
 80112c2:	b988      	cbnz	r0, 80112e8 <__swbuf_r+0x90>
 80112c4:	4638      	mov	r0, r7
 80112c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80112c8:	4b0a      	ldr	r3, [pc, #40]	; (80112f4 <__swbuf_r+0x9c>)
 80112ca:	429c      	cmp	r4, r3
 80112cc:	d101      	bne.n	80112d2 <__swbuf_r+0x7a>
 80112ce:	68ac      	ldr	r4, [r5, #8]
 80112d0:	e7cf      	b.n	8011272 <__swbuf_r+0x1a>
 80112d2:	4b09      	ldr	r3, [pc, #36]	; (80112f8 <__swbuf_r+0xa0>)
 80112d4:	429c      	cmp	r4, r3
 80112d6:	bf08      	it	eq
 80112d8:	68ec      	ldreq	r4, [r5, #12]
 80112da:	e7ca      	b.n	8011272 <__swbuf_r+0x1a>
 80112dc:	4621      	mov	r1, r4
 80112de:	4628      	mov	r0, r5
 80112e0:	f000 f80c 	bl	80112fc <__swsetup_r>
 80112e4:	2800      	cmp	r0, #0
 80112e6:	d0cb      	beq.n	8011280 <__swbuf_r+0x28>
 80112e8:	f04f 37ff 	mov.w	r7, #4294967295
 80112ec:	e7ea      	b.n	80112c4 <__swbuf_r+0x6c>
 80112ee:	bf00      	nop
 80112f0:	08012734 	.word	0x08012734
 80112f4:	08012754 	.word	0x08012754
 80112f8:	08012714 	.word	0x08012714

080112fc <__swsetup_r>:
 80112fc:	4b32      	ldr	r3, [pc, #200]	; (80113c8 <__swsetup_r+0xcc>)
 80112fe:	b570      	push	{r4, r5, r6, lr}
 8011300:	681d      	ldr	r5, [r3, #0]
 8011302:	4606      	mov	r6, r0
 8011304:	460c      	mov	r4, r1
 8011306:	b125      	cbz	r5, 8011312 <__swsetup_r+0x16>
 8011308:	69ab      	ldr	r3, [r5, #24]
 801130a:	b913      	cbnz	r3, 8011312 <__swsetup_r+0x16>
 801130c:	4628      	mov	r0, r5
 801130e:	f000 f985 	bl	801161c <__sinit>
 8011312:	4b2e      	ldr	r3, [pc, #184]	; (80113cc <__swsetup_r+0xd0>)
 8011314:	429c      	cmp	r4, r3
 8011316:	d10f      	bne.n	8011338 <__swsetup_r+0x3c>
 8011318:	686c      	ldr	r4, [r5, #4]
 801131a:	89a3      	ldrh	r3, [r4, #12]
 801131c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8011320:	0719      	lsls	r1, r3, #28
 8011322:	d42c      	bmi.n	801137e <__swsetup_r+0x82>
 8011324:	06dd      	lsls	r5, r3, #27
 8011326:	d411      	bmi.n	801134c <__swsetup_r+0x50>
 8011328:	2309      	movs	r3, #9
 801132a:	6033      	str	r3, [r6, #0]
 801132c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8011330:	81a3      	strh	r3, [r4, #12]
 8011332:	f04f 30ff 	mov.w	r0, #4294967295
 8011336:	e03e      	b.n	80113b6 <__swsetup_r+0xba>
 8011338:	4b25      	ldr	r3, [pc, #148]	; (80113d0 <__swsetup_r+0xd4>)
 801133a:	429c      	cmp	r4, r3
 801133c:	d101      	bne.n	8011342 <__swsetup_r+0x46>
 801133e:	68ac      	ldr	r4, [r5, #8]
 8011340:	e7eb      	b.n	801131a <__swsetup_r+0x1e>
 8011342:	4b24      	ldr	r3, [pc, #144]	; (80113d4 <__swsetup_r+0xd8>)
 8011344:	429c      	cmp	r4, r3
 8011346:	bf08      	it	eq
 8011348:	68ec      	ldreq	r4, [r5, #12]
 801134a:	e7e6      	b.n	801131a <__swsetup_r+0x1e>
 801134c:	0758      	lsls	r0, r3, #29
 801134e:	d512      	bpl.n	8011376 <__swsetup_r+0x7a>
 8011350:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011352:	b141      	cbz	r1, 8011366 <__swsetup_r+0x6a>
 8011354:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8011358:	4299      	cmp	r1, r3
 801135a:	d002      	beq.n	8011362 <__swsetup_r+0x66>
 801135c:	4630      	mov	r0, r6
 801135e:	f7ff fc41 	bl	8010be4 <_free_r>
 8011362:	2300      	movs	r3, #0
 8011364:	6363      	str	r3, [r4, #52]	; 0x34
 8011366:	89a3      	ldrh	r3, [r4, #12]
 8011368:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801136c:	81a3      	strh	r3, [r4, #12]
 801136e:	2300      	movs	r3, #0
 8011370:	6063      	str	r3, [r4, #4]
 8011372:	6923      	ldr	r3, [r4, #16]
 8011374:	6023      	str	r3, [r4, #0]
 8011376:	89a3      	ldrh	r3, [r4, #12]
 8011378:	f043 0308 	orr.w	r3, r3, #8
 801137c:	81a3      	strh	r3, [r4, #12]
 801137e:	6923      	ldr	r3, [r4, #16]
 8011380:	b94b      	cbnz	r3, 8011396 <__swsetup_r+0x9a>
 8011382:	89a3      	ldrh	r3, [r4, #12]
 8011384:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8011388:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801138c:	d003      	beq.n	8011396 <__swsetup_r+0x9a>
 801138e:	4621      	mov	r1, r4
 8011390:	4630      	mov	r0, r6
 8011392:	f000 fa09 	bl	80117a8 <__smakebuf_r>
 8011396:	89a0      	ldrh	r0, [r4, #12]
 8011398:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801139c:	f010 0301 	ands.w	r3, r0, #1
 80113a0:	d00a      	beq.n	80113b8 <__swsetup_r+0xbc>
 80113a2:	2300      	movs	r3, #0
 80113a4:	60a3      	str	r3, [r4, #8]
 80113a6:	6963      	ldr	r3, [r4, #20]
 80113a8:	425b      	negs	r3, r3
 80113aa:	61a3      	str	r3, [r4, #24]
 80113ac:	6923      	ldr	r3, [r4, #16]
 80113ae:	b943      	cbnz	r3, 80113c2 <__swsetup_r+0xc6>
 80113b0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80113b4:	d1ba      	bne.n	801132c <__swsetup_r+0x30>
 80113b6:	bd70      	pop	{r4, r5, r6, pc}
 80113b8:	0781      	lsls	r1, r0, #30
 80113ba:	bf58      	it	pl
 80113bc:	6963      	ldrpl	r3, [r4, #20]
 80113be:	60a3      	str	r3, [r4, #8]
 80113c0:	e7f4      	b.n	80113ac <__swsetup_r+0xb0>
 80113c2:	2000      	movs	r0, #0
 80113c4:	e7f7      	b.n	80113b6 <__swsetup_r+0xba>
 80113c6:	bf00      	nop
 80113c8:	24000100 	.word	0x24000100
 80113cc:	08012734 	.word	0x08012734
 80113d0:	08012754 	.word	0x08012754
 80113d4:	08012714 	.word	0x08012714

080113d8 <abort>:
 80113d8:	b508      	push	{r3, lr}
 80113da:	2006      	movs	r0, #6
 80113dc:	f000 fa4c 	bl	8011878 <raise>
 80113e0:	2001      	movs	r0, #1
 80113e2:	f7f2 fdc5 	bl	8003f70 <_exit>
	...

080113e8 <__sflush_r>:
 80113e8:	898a      	ldrh	r2, [r1, #12]
 80113ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80113ee:	4605      	mov	r5, r0
 80113f0:	0710      	lsls	r0, r2, #28
 80113f2:	460c      	mov	r4, r1
 80113f4:	d458      	bmi.n	80114a8 <__sflush_r+0xc0>
 80113f6:	684b      	ldr	r3, [r1, #4]
 80113f8:	2b00      	cmp	r3, #0
 80113fa:	dc05      	bgt.n	8011408 <__sflush_r+0x20>
 80113fc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80113fe:	2b00      	cmp	r3, #0
 8011400:	dc02      	bgt.n	8011408 <__sflush_r+0x20>
 8011402:	2000      	movs	r0, #0
 8011404:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011408:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801140a:	2e00      	cmp	r6, #0
 801140c:	d0f9      	beq.n	8011402 <__sflush_r+0x1a>
 801140e:	2300      	movs	r3, #0
 8011410:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8011414:	682f      	ldr	r7, [r5, #0]
 8011416:	602b      	str	r3, [r5, #0]
 8011418:	d032      	beq.n	8011480 <__sflush_r+0x98>
 801141a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801141c:	89a3      	ldrh	r3, [r4, #12]
 801141e:	075a      	lsls	r2, r3, #29
 8011420:	d505      	bpl.n	801142e <__sflush_r+0x46>
 8011422:	6863      	ldr	r3, [r4, #4]
 8011424:	1ac0      	subs	r0, r0, r3
 8011426:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8011428:	b10b      	cbz	r3, 801142e <__sflush_r+0x46>
 801142a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801142c:	1ac0      	subs	r0, r0, r3
 801142e:	2300      	movs	r3, #0
 8011430:	4602      	mov	r2, r0
 8011432:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8011434:	6a21      	ldr	r1, [r4, #32]
 8011436:	4628      	mov	r0, r5
 8011438:	47b0      	blx	r6
 801143a:	1c43      	adds	r3, r0, #1
 801143c:	89a3      	ldrh	r3, [r4, #12]
 801143e:	d106      	bne.n	801144e <__sflush_r+0x66>
 8011440:	6829      	ldr	r1, [r5, #0]
 8011442:	291d      	cmp	r1, #29
 8011444:	d82c      	bhi.n	80114a0 <__sflush_r+0xb8>
 8011446:	4a2a      	ldr	r2, [pc, #168]	; (80114f0 <__sflush_r+0x108>)
 8011448:	40ca      	lsrs	r2, r1
 801144a:	07d6      	lsls	r6, r2, #31
 801144c:	d528      	bpl.n	80114a0 <__sflush_r+0xb8>
 801144e:	2200      	movs	r2, #0
 8011450:	6062      	str	r2, [r4, #4]
 8011452:	04d9      	lsls	r1, r3, #19
 8011454:	6922      	ldr	r2, [r4, #16]
 8011456:	6022      	str	r2, [r4, #0]
 8011458:	d504      	bpl.n	8011464 <__sflush_r+0x7c>
 801145a:	1c42      	adds	r2, r0, #1
 801145c:	d101      	bne.n	8011462 <__sflush_r+0x7a>
 801145e:	682b      	ldr	r3, [r5, #0]
 8011460:	b903      	cbnz	r3, 8011464 <__sflush_r+0x7c>
 8011462:	6560      	str	r0, [r4, #84]	; 0x54
 8011464:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011466:	602f      	str	r7, [r5, #0]
 8011468:	2900      	cmp	r1, #0
 801146a:	d0ca      	beq.n	8011402 <__sflush_r+0x1a>
 801146c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8011470:	4299      	cmp	r1, r3
 8011472:	d002      	beq.n	801147a <__sflush_r+0x92>
 8011474:	4628      	mov	r0, r5
 8011476:	f7ff fbb5 	bl	8010be4 <_free_r>
 801147a:	2000      	movs	r0, #0
 801147c:	6360      	str	r0, [r4, #52]	; 0x34
 801147e:	e7c1      	b.n	8011404 <__sflush_r+0x1c>
 8011480:	6a21      	ldr	r1, [r4, #32]
 8011482:	2301      	movs	r3, #1
 8011484:	4628      	mov	r0, r5
 8011486:	47b0      	blx	r6
 8011488:	1c41      	adds	r1, r0, #1
 801148a:	d1c7      	bne.n	801141c <__sflush_r+0x34>
 801148c:	682b      	ldr	r3, [r5, #0]
 801148e:	2b00      	cmp	r3, #0
 8011490:	d0c4      	beq.n	801141c <__sflush_r+0x34>
 8011492:	2b1d      	cmp	r3, #29
 8011494:	d001      	beq.n	801149a <__sflush_r+0xb2>
 8011496:	2b16      	cmp	r3, #22
 8011498:	d101      	bne.n	801149e <__sflush_r+0xb6>
 801149a:	602f      	str	r7, [r5, #0]
 801149c:	e7b1      	b.n	8011402 <__sflush_r+0x1a>
 801149e:	89a3      	ldrh	r3, [r4, #12]
 80114a0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80114a4:	81a3      	strh	r3, [r4, #12]
 80114a6:	e7ad      	b.n	8011404 <__sflush_r+0x1c>
 80114a8:	690f      	ldr	r7, [r1, #16]
 80114aa:	2f00      	cmp	r7, #0
 80114ac:	d0a9      	beq.n	8011402 <__sflush_r+0x1a>
 80114ae:	0793      	lsls	r3, r2, #30
 80114b0:	680e      	ldr	r6, [r1, #0]
 80114b2:	bf08      	it	eq
 80114b4:	694b      	ldreq	r3, [r1, #20]
 80114b6:	600f      	str	r7, [r1, #0]
 80114b8:	bf18      	it	ne
 80114ba:	2300      	movne	r3, #0
 80114bc:	eba6 0807 	sub.w	r8, r6, r7
 80114c0:	608b      	str	r3, [r1, #8]
 80114c2:	f1b8 0f00 	cmp.w	r8, #0
 80114c6:	dd9c      	ble.n	8011402 <__sflush_r+0x1a>
 80114c8:	6a21      	ldr	r1, [r4, #32]
 80114ca:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80114cc:	4643      	mov	r3, r8
 80114ce:	463a      	mov	r2, r7
 80114d0:	4628      	mov	r0, r5
 80114d2:	47b0      	blx	r6
 80114d4:	2800      	cmp	r0, #0
 80114d6:	dc06      	bgt.n	80114e6 <__sflush_r+0xfe>
 80114d8:	89a3      	ldrh	r3, [r4, #12]
 80114da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80114de:	81a3      	strh	r3, [r4, #12]
 80114e0:	f04f 30ff 	mov.w	r0, #4294967295
 80114e4:	e78e      	b.n	8011404 <__sflush_r+0x1c>
 80114e6:	4407      	add	r7, r0
 80114e8:	eba8 0800 	sub.w	r8, r8, r0
 80114ec:	e7e9      	b.n	80114c2 <__sflush_r+0xda>
 80114ee:	bf00      	nop
 80114f0:	20400001 	.word	0x20400001

080114f4 <_fflush_r>:
 80114f4:	b538      	push	{r3, r4, r5, lr}
 80114f6:	690b      	ldr	r3, [r1, #16]
 80114f8:	4605      	mov	r5, r0
 80114fa:	460c      	mov	r4, r1
 80114fc:	b913      	cbnz	r3, 8011504 <_fflush_r+0x10>
 80114fe:	2500      	movs	r5, #0
 8011500:	4628      	mov	r0, r5
 8011502:	bd38      	pop	{r3, r4, r5, pc}
 8011504:	b118      	cbz	r0, 801150e <_fflush_r+0x1a>
 8011506:	6983      	ldr	r3, [r0, #24]
 8011508:	b90b      	cbnz	r3, 801150e <_fflush_r+0x1a>
 801150a:	f000 f887 	bl	801161c <__sinit>
 801150e:	4b14      	ldr	r3, [pc, #80]	; (8011560 <_fflush_r+0x6c>)
 8011510:	429c      	cmp	r4, r3
 8011512:	d11b      	bne.n	801154c <_fflush_r+0x58>
 8011514:	686c      	ldr	r4, [r5, #4]
 8011516:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801151a:	2b00      	cmp	r3, #0
 801151c:	d0ef      	beq.n	80114fe <_fflush_r+0xa>
 801151e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8011520:	07d0      	lsls	r0, r2, #31
 8011522:	d404      	bmi.n	801152e <_fflush_r+0x3a>
 8011524:	0599      	lsls	r1, r3, #22
 8011526:	d402      	bmi.n	801152e <_fflush_r+0x3a>
 8011528:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801152a:	f000 f915 	bl	8011758 <__retarget_lock_acquire_recursive>
 801152e:	4628      	mov	r0, r5
 8011530:	4621      	mov	r1, r4
 8011532:	f7ff ff59 	bl	80113e8 <__sflush_r>
 8011536:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8011538:	07da      	lsls	r2, r3, #31
 801153a:	4605      	mov	r5, r0
 801153c:	d4e0      	bmi.n	8011500 <_fflush_r+0xc>
 801153e:	89a3      	ldrh	r3, [r4, #12]
 8011540:	059b      	lsls	r3, r3, #22
 8011542:	d4dd      	bmi.n	8011500 <_fflush_r+0xc>
 8011544:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8011546:	f000 f908 	bl	801175a <__retarget_lock_release_recursive>
 801154a:	e7d9      	b.n	8011500 <_fflush_r+0xc>
 801154c:	4b05      	ldr	r3, [pc, #20]	; (8011564 <_fflush_r+0x70>)
 801154e:	429c      	cmp	r4, r3
 8011550:	d101      	bne.n	8011556 <_fflush_r+0x62>
 8011552:	68ac      	ldr	r4, [r5, #8]
 8011554:	e7df      	b.n	8011516 <_fflush_r+0x22>
 8011556:	4b04      	ldr	r3, [pc, #16]	; (8011568 <_fflush_r+0x74>)
 8011558:	429c      	cmp	r4, r3
 801155a:	bf08      	it	eq
 801155c:	68ec      	ldreq	r4, [r5, #12]
 801155e:	e7da      	b.n	8011516 <_fflush_r+0x22>
 8011560:	08012734 	.word	0x08012734
 8011564:	08012754 	.word	0x08012754
 8011568:	08012714 	.word	0x08012714

0801156c <std>:
 801156c:	2300      	movs	r3, #0
 801156e:	b510      	push	{r4, lr}
 8011570:	4604      	mov	r4, r0
 8011572:	e9c0 3300 	strd	r3, r3, [r0]
 8011576:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801157a:	6083      	str	r3, [r0, #8]
 801157c:	8181      	strh	r1, [r0, #12]
 801157e:	6643      	str	r3, [r0, #100]	; 0x64
 8011580:	81c2      	strh	r2, [r0, #14]
 8011582:	6183      	str	r3, [r0, #24]
 8011584:	4619      	mov	r1, r3
 8011586:	2208      	movs	r2, #8
 8011588:	305c      	adds	r0, #92	; 0x5c
 801158a:	f7fd fbdd 	bl	800ed48 <memset>
 801158e:	4b05      	ldr	r3, [pc, #20]	; (80115a4 <std+0x38>)
 8011590:	6263      	str	r3, [r4, #36]	; 0x24
 8011592:	4b05      	ldr	r3, [pc, #20]	; (80115a8 <std+0x3c>)
 8011594:	62a3      	str	r3, [r4, #40]	; 0x28
 8011596:	4b05      	ldr	r3, [pc, #20]	; (80115ac <std+0x40>)
 8011598:	62e3      	str	r3, [r4, #44]	; 0x2c
 801159a:	4b05      	ldr	r3, [pc, #20]	; (80115b0 <std+0x44>)
 801159c:	6224      	str	r4, [r4, #32]
 801159e:	6323      	str	r3, [r4, #48]	; 0x30
 80115a0:	bd10      	pop	{r4, pc}
 80115a2:	bf00      	nop
 80115a4:	080118b1 	.word	0x080118b1
 80115a8:	080118d3 	.word	0x080118d3
 80115ac:	0801190b 	.word	0x0801190b
 80115b0:	0801192f 	.word	0x0801192f

080115b4 <_cleanup_r>:
 80115b4:	4901      	ldr	r1, [pc, #4]	; (80115bc <_cleanup_r+0x8>)
 80115b6:	f000 b8af 	b.w	8011718 <_fwalk_reent>
 80115ba:	bf00      	nop
 80115bc:	080114f5 	.word	0x080114f5

080115c0 <__sfmoreglue>:
 80115c0:	b570      	push	{r4, r5, r6, lr}
 80115c2:	2268      	movs	r2, #104	; 0x68
 80115c4:	1e4d      	subs	r5, r1, #1
 80115c6:	4355      	muls	r5, r2
 80115c8:	460e      	mov	r6, r1
 80115ca:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80115ce:	f7ff fa17 	bl	8010a00 <_malloc_r>
 80115d2:	4604      	mov	r4, r0
 80115d4:	b140      	cbz	r0, 80115e8 <__sfmoreglue+0x28>
 80115d6:	2100      	movs	r1, #0
 80115d8:	e9c0 1600 	strd	r1, r6, [r0]
 80115dc:	300c      	adds	r0, #12
 80115de:	60a0      	str	r0, [r4, #8]
 80115e0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80115e4:	f7fd fbb0 	bl	800ed48 <memset>
 80115e8:	4620      	mov	r0, r4
 80115ea:	bd70      	pop	{r4, r5, r6, pc}

080115ec <__sfp_lock_acquire>:
 80115ec:	4801      	ldr	r0, [pc, #4]	; (80115f4 <__sfp_lock_acquire+0x8>)
 80115ee:	f000 b8b3 	b.w	8011758 <__retarget_lock_acquire_recursive>
 80115f2:	bf00      	nop
 80115f4:	24000c9d 	.word	0x24000c9d

080115f8 <__sfp_lock_release>:
 80115f8:	4801      	ldr	r0, [pc, #4]	; (8011600 <__sfp_lock_release+0x8>)
 80115fa:	f000 b8ae 	b.w	801175a <__retarget_lock_release_recursive>
 80115fe:	bf00      	nop
 8011600:	24000c9d 	.word	0x24000c9d

08011604 <__sinit_lock_acquire>:
 8011604:	4801      	ldr	r0, [pc, #4]	; (801160c <__sinit_lock_acquire+0x8>)
 8011606:	f000 b8a7 	b.w	8011758 <__retarget_lock_acquire_recursive>
 801160a:	bf00      	nop
 801160c:	24000c9e 	.word	0x24000c9e

08011610 <__sinit_lock_release>:
 8011610:	4801      	ldr	r0, [pc, #4]	; (8011618 <__sinit_lock_release+0x8>)
 8011612:	f000 b8a2 	b.w	801175a <__retarget_lock_release_recursive>
 8011616:	bf00      	nop
 8011618:	24000c9e 	.word	0x24000c9e

0801161c <__sinit>:
 801161c:	b510      	push	{r4, lr}
 801161e:	4604      	mov	r4, r0
 8011620:	f7ff fff0 	bl	8011604 <__sinit_lock_acquire>
 8011624:	69a3      	ldr	r3, [r4, #24]
 8011626:	b11b      	cbz	r3, 8011630 <__sinit+0x14>
 8011628:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801162c:	f7ff bff0 	b.w	8011610 <__sinit_lock_release>
 8011630:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8011634:	6523      	str	r3, [r4, #80]	; 0x50
 8011636:	4b13      	ldr	r3, [pc, #76]	; (8011684 <__sinit+0x68>)
 8011638:	4a13      	ldr	r2, [pc, #76]	; (8011688 <__sinit+0x6c>)
 801163a:	681b      	ldr	r3, [r3, #0]
 801163c:	62a2      	str	r2, [r4, #40]	; 0x28
 801163e:	42a3      	cmp	r3, r4
 8011640:	bf04      	itt	eq
 8011642:	2301      	moveq	r3, #1
 8011644:	61a3      	streq	r3, [r4, #24]
 8011646:	4620      	mov	r0, r4
 8011648:	f000 f820 	bl	801168c <__sfp>
 801164c:	6060      	str	r0, [r4, #4]
 801164e:	4620      	mov	r0, r4
 8011650:	f000 f81c 	bl	801168c <__sfp>
 8011654:	60a0      	str	r0, [r4, #8]
 8011656:	4620      	mov	r0, r4
 8011658:	f000 f818 	bl	801168c <__sfp>
 801165c:	2200      	movs	r2, #0
 801165e:	60e0      	str	r0, [r4, #12]
 8011660:	2104      	movs	r1, #4
 8011662:	6860      	ldr	r0, [r4, #4]
 8011664:	f7ff ff82 	bl	801156c <std>
 8011668:	68a0      	ldr	r0, [r4, #8]
 801166a:	2201      	movs	r2, #1
 801166c:	2109      	movs	r1, #9
 801166e:	f7ff ff7d 	bl	801156c <std>
 8011672:	68e0      	ldr	r0, [r4, #12]
 8011674:	2202      	movs	r2, #2
 8011676:	2112      	movs	r1, #18
 8011678:	f7ff ff78 	bl	801156c <std>
 801167c:	2301      	movs	r3, #1
 801167e:	61a3      	str	r3, [r4, #24]
 8011680:	e7d2      	b.n	8011628 <__sinit+0xc>
 8011682:	bf00      	nop
 8011684:	08012348 	.word	0x08012348
 8011688:	080115b5 	.word	0x080115b5

0801168c <__sfp>:
 801168c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801168e:	4607      	mov	r7, r0
 8011690:	f7ff ffac 	bl	80115ec <__sfp_lock_acquire>
 8011694:	4b1e      	ldr	r3, [pc, #120]	; (8011710 <__sfp+0x84>)
 8011696:	681e      	ldr	r6, [r3, #0]
 8011698:	69b3      	ldr	r3, [r6, #24]
 801169a:	b913      	cbnz	r3, 80116a2 <__sfp+0x16>
 801169c:	4630      	mov	r0, r6
 801169e:	f7ff ffbd 	bl	801161c <__sinit>
 80116a2:	3648      	adds	r6, #72	; 0x48
 80116a4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80116a8:	3b01      	subs	r3, #1
 80116aa:	d503      	bpl.n	80116b4 <__sfp+0x28>
 80116ac:	6833      	ldr	r3, [r6, #0]
 80116ae:	b30b      	cbz	r3, 80116f4 <__sfp+0x68>
 80116b0:	6836      	ldr	r6, [r6, #0]
 80116b2:	e7f7      	b.n	80116a4 <__sfp+0x18>
 80116b4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80116b8:	b9d5      	cbnz	r5, 80116f0 <__sfp+0x64>
 80116ba:	4b16      	ldr	r3, [pc, #88]	; (8011714 <__sfp+0x88>)
 80116bc:	60e3      	str	r3, [r4, #12]
 80116be:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80116c2:	6665      	str	r5, [r4, #100]	; 0x64
 80116c4:	f000 f847 	bl	8011756 <__retarget_lock_init_recursive>
 80116c8:	f7ff ff96 	bl	80115f8 <__sfp_lock_release>
 80116cc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80116d0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80116d4:	6025      	str	r5, [r4, #0]
 80116d6:	61a5      	str	r5, [r4, #24]
 80116d8:	2208      	movs	r2, #8
 80116da:	4629      	mov	r1, r5
 80116dc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80116e0:	f7fd fb32 	bl	800ed48 <memset>
 80116e4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80116e8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80116ec:	4620      	mov	r0, r4
 80116ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80116f0:	3468      	adds	r4, #104	; 0x68
 80116f2:	e7d9      	b.n	80116a8 <__sfp+0x1c>
 80116f4:	2104      	movs	r1, #4
 80116f6:	4638      	mov	r0, r7
 80116f8:	f7ff ff62 	bl	80115c0 <__sfmoreglue>
 80116fc:	4604      	mov	r4, r0
 80116fe:	6030      	str	r0, [r6, #0]
 8011700:	2800      	cmp	r0, #0
 8011702:	d1d5      	bne.n	80116b0 <__sfp+0x24>
 8011704:	f7ff ff78 	bl	80115f8 <__sfp_lock_release>
 8011708:	230c      	movs	r3, #12
 801170a:	603b      	str	r3, [r7, #0]
 801170c:	e7ee      	b.n	80116ec <__sfp+0x60>
 801170e:	bf00      	nop
 8011710:	08012348 	.word	0x08012348
 8011714:	ffff0001 	.word	0xffff0001

08011718 <_fwalk_reent>:
 8011718:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801171c:	4606      	mov	r6, r0
 801171e:	4688      	mov	r8, r1
 8011720:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8011724:	2700      	movs	r7, #0
 8011726:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801172a:	f1b9 0901 	subs.w	r9, r9, #1
 801172e:	d505      	bpl.n	801173c <_fwalk_reent+0x24>
 8011730:	6824      	ldr	r4, [r4, #0]
 8011732:	2c00      	cmp	r4, #0
 8011734:	d1f7      	bne.n	8011726 <_fwalk_reent+0xe>
 8011736:	4638      	mov	r0, r7
 8011738:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801173c:	89ab      	ldrh	r3, [r5, #12]
 801173e:	2b01      	cmp	r3, #1
 8011740:	d907      	bls.n	8011752 <_fwalk_reent+0x3a>
 8011742:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8011746:	3301      	adds	r3, #1
 8011748:	d003      	beq.n	8011752 <_fwalk_reent+0x3a>
 801174a:	4629      	mov	r1, r5
 801174c:	4630      	mov	r0, r6
 801174e:	47c0      	blx	r8
 8011750:	4307      	orrs	r7, r0
 8011752:	3568      	adds	r5, #104	; 0x68
 8011754:	e7e9      	b.n	801172a <_fwalk_reent+0x12>

08011756 <__retarget_lock_init_recursive>:
 8011756:	4770      	bx	lr

08011758 <__retarget_lock_acquire_recursive>:
 8011758:	4770      	bx	lr

0801175a <__retarget_lock_release_recursive>:
 801175a:	4770      	bx	lr

0801175c <__swhatbuf_r>:
 801175c:	b570      	push	{r4, r5, r6, lr}
 801175e:	460e      	mov	r6, r1
 8011760:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011764:	2900      	cmp	r1, #0
 8011766:	b096      	sub	sp, #88	; 0x58
 8011768:	4614      	mov	r4, r2
 801176a:	461d      	mov	r5, r3
 801176c:	da08      	bge.n	8011780 <__swhatbuf_r+0x24>
 801176e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8011772:	2200      	movs	r2, #0
 8011774:	602a      	str	r2, [r5, #0]
 8011776:	061a      	lsls	r2, r3, #24
 8011778:	d410      	bmi.n	801179c <__swhatbuf_r+0x40>
 801177a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801177e:	e00e      	b.n	801179e <__swhatbuf_r+0x42>
 8011780:	466a      	mov	r2, sp
 8011782:	f000 f8fb 	bl	801197c <_fstat_r>
 8011786:	2800      	cmp	r0, #0
 8011788:	dbf1      	blt.n	801176e <__swhatbuf_r+0x12>
 801178a:	9a01      	ldr	r2, [sp, #4]
 801178c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8011790:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8011794:	425a      	negs	r2, r3
 8011796:	415a      	adcs	r2, r3
 8011798:	602a      	str	r2, [r5, #0]
 801179a:	e7ee      	b.n	801177a <__swhatbuf_r+0x1e>
 801179c:	2340      	movs	r3, #64	; 0x40
 801179e:	2000      	movs	r0, #0
 80117a0:	6023      	str	r3, [r4, #0]
 80117a2:	b016      	add	sp, #88	; 0x58
 80117a4:	bd70      	pop	{r4, r5, r6, pc}
	...

080117a8 <__smakebuf_r>:
 80117a8:	898b      	ldrh	r3, [r1, #12]
 80117aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80117ac:	079d      	lsls	r5, r3, #30
 80117ae:	4606      	mov	r6, r0
 80117b0:	460c      	mov	r4, r1
 80117b2:	d507      	bpl.n	80117c4 <__smakebuf_r+0x1c>
 80117b4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80117b8:	6023      	str	r3, [r4, #0]
 80117ba:	6123      	str	r3, [r4, #16]
 80117bc:	2301      	movs	r3, #1
 80117be:	6163      	str	r3, [r4, #20]
 80117c0:	b002      	add	sp, #8
 80117c2:	bd70      	pop	{r4, r5, r6, pc}
 80117c4:	ab01      	add	r3, sp, #4
 80117c6:	466a      	mov	r2, sp
 80117c8:	f7ff ffc8 	bl	801175c <__swhatbuf_r>
 80117cc:	9900      	ldr	r1, [sp, #0]
 80117ce:	4605      	mov	r5, r0
 80117d0:	4630      	mov	r0, r6
 80117d2:	f7ff f915 	bl	8010a00 <_malloc_r>
 80117d6:	b948      	cbnz	r0, 80117ec <__smakebuf_r+0x44>
 80117d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80117dc:	059a      	lsls	r2, r3, #22
 80117de:	d4ef      	bmi.n	80117c0 <__smakebuf_r+0x18>
 80117e0:	f023 0303 	bic.w	r3, r3, #3
 80117e4:	f043 0302 	orr.w	r3, r3, #2
 80117e8:	81a3      	strh	r3, [r4, #12]
 80117ea:	e7e3      	b.n	80117b4 <__smakebuf_r+0xc>
 80117ec:	4b0d      	ldr	r3, [pc, #52]	; (8011824 <__smakebuf_r+0x7c>)
 80117ee:	62b3      	str	r3, [r6, #40]	; 0x28
 80117f0:	89a3      	ldrh	r3, [r4, #12]
 80117f2:	6020      	str	r0, [r4, #0]
 80117f4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80117f8:	81a3      	strh	r3, [r4, #12]
 80117fa:	9b00      	ldr	r3, [sp, #0]
 80117fc:	6163      	str	r3, [r4, #20]
 80117fe:	9b01      	ldr	r3, [sp, #4]
 8011800:	6120      	str	r0, [r4, #16]
 8011802:	b15b      	cbz	r3, 801181c <__smakebuf_r+0x74>
 8011804:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8011808:	4630      	mov	r0, r6
 801180a:	f000 f8c9 	bl	80119a0 <_isatty_r>
 801180e:	b128      	cbz	r0, 801181c <__smakebuf_r+0x74>
 8011810:	89a3      	ldrh	r3, [r4, #12]
 8011812:	f023 0303 	bic.w	r3, r3, #3
 8011816:	f043 0301 	orr.w	r3, r3, #1
 801181a:	81a3      	strh	r3, [r4, #12]
 801181c:	89a0      	ldrh	r0, [r4, #12]
 801181e:	4305      	orrs	r5, r0
 8011820:	81a5      	strh	r5, [r4, #12]
 8011822:	e7cd      	b.n	80117c0 <__smakebuf_r+0x18>
 8011824:	080115b5 	.word	0x080115b5

08011828 <_raise_r>:
 8011828:	291f      	cmp	r1, #31
 801182a:	b538      	push	{r3, r4, r5, lr}
 801182c:	4604      	mov	r4, r0
 801182e:	460d      	mov	r5, r1
 8011830:	d904      	bls.n	801183c <_raise_r+0x14>
 8011832:	2316      	movs	r3, #22
 8011834:	6003      	str	r3, [r0, #0]
 8011836:	f04f 30ff 	mov.w	r0, #4294967295
 801183a:	bd38      	pop	{r3, r4, r5, pc}
 801183c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801183e:	b112      	cbz	r2, 8011846 <_raise_r+0x1e>
 8011840:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8011844:	b94b      	cbnz	r3, 801185a <_raise_r+0x32>
 8011846:	4620      	mov	r0, r4
 8011848:	f000 f830 	bl	80118ac <_getpid_r>
 801184c:	462a      	mov	r2, r5
 801184e:	4601      	mov	r1, r0
 8011850:	4620      	mov	r0, r4
 8011852:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011856:	f000 b817 	b.w	8011888 <_kill_r>
 801185a:	2b01      	cmp	r3, #1
 801185c:	d00a      	beq.n	8011874 <_raise_r+0x4c>
 801185e:	1c59      	adds	r1, r3, #1
 8011860:	d103      	bne.n	801186a <_raise_r+0x42>
 8011862:	2316      	movs	r3, #22
 8011864:	6003      	str	r3, [r0, #0]
 8011866:	2001      	movs	r0, #1
 8011868:	e7e7      	b.n	801183a <_raise_r+0x12>
 801186a:	2400      	movs	r4, #0
 801186c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8011870:	4628      	mov	r0, r5
 8011872:	4798      	blx	r3
 8011874:	2000      	movs	r0, #0
 8011876:	e7e0      	b.n	801183a <_raise_r+0x12>

08011878 <raise>:
 8011878:	4b02      	ldr	r3, [pc, #8]	; (8011884 <raise+0xc>)
 801187a:	4601      	mov	r1, r0
 801187c:	6818      	ldr	r0, [r3, #0]
 801187e:	f7ff bfd3 	b.w	8011828 <_raise_r>
 8011882:	bf00      	nop
 8011884:	24000100 	.word	0x24000100

08011888 <_kill_r>:
 8011888:	b538      	push	{r3, r4, r5, lr}
 801188a:	4d07      	ldr	r5, [pc, #28]	; (80118a8 <_kill_r+0x20>)
 801188c:	2300      	movs	r3, #0
 801188e:	4604      	mov	r4, r0
 8011890:	4608      	mov	r0, r1
 8011892:	4611      	mov	r1, r2
 8011894:	602b      	str	r3, [r5, #0]
 8011896:	f7f2 fb5b 	bl	8003f50 <_kill>
 801189a:	1c43      	adds	r3, r0, #1
 801189c:	d102      	bne.n	80118a4 <_kill_r+0x1c>
 801189e:	682b      	ldr	r3, [r5, #0]
 80118a0:	b103      	cbz	r3, 80118a4 <_kill_r+0x1c>
 80118a2:	6023      	str	r3, [r4, #0]
 80118a4:	bd38      	pop	{r3, r4, r5, pc}
 80118a6:	bf00      	nop
 80118a8:	24000c98 	.word	0x24000c98

080118ac <_getpid_r>:
 80118ac:	f7f2 bb48 	b.w	8003f40 <_getpid>

080118b0 <__sread>:
 80118b0:	b510      	push	{r4, lr}
 80118b2:	460c      	mov	r4, r1
 80118b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80118b8:	f000 f894 	bl	80119e4 <_read_r>
 80118bc:	2800      	cmp	r0, #0
 80118be:	bfab      	itete	ge
 80118c0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80118c2:	89a3      	ldrhlt	r3, [r4, #12]
 80118c4:	181b      	addge	r3, r3, r0
 80118c6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80118ca:	bfac      	ite	ge
 80118cc:	6563      	strge	r3, [r4, #84]	; 0x54
 80118ce:	81a3      	strhlt	r3, [r4, #12]
 80118d0:	bd10      	pop	{r4, pc}

080118d2 <__swrite>:
 80118d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80118d6:	461f      	mov	r7, r3
 80118d8:	898b      	ldrh	r3, [r1, #12]
 80118da:	05db      	lsls	r3, r3, #23
 80118dc:	4605      	mov	r5, r0
 80118de:	460c      	mov	r4, r1
 80118e0:	4616      	mov	r6, r2
 80118e2:	d505      	bpl.n	80118f0 <__swrite+0x1e>
 80118e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80118e8:	2302      	movs	r3, #2
 80118ea:	2200      	movs	r2, #0
 80118ec:	f000 f868 	bl	80119c0 <_lseek_r>
 80118f0:	89a3      	ldrh	r3, [r4, #12]
 80118f2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80118f6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80118fa:	81a3      	strh	r3, [r4, #12]
 80118fc:	4632      	mov	r2, r6
 80118fe:	463b      	mov	r3, r7
 8011900:	4628      	mov	r0, r5
 8011902:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011906:	f000 b817 	b.w	8011938 <_write_r>

0801190a <__sseek>:
 801190a:	b510      	push	{r4, lr}
 801190c:	460c      	mov	r4, r1
 801190e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011912:	f000 f855 	bl	80119c0 <_lseek_r>
 8011916:	1c43      	adds	r3, r0, #1
 8011918:	89a3      	ldrh	r3, [r4, #12]
 801191a:	bf15      	itete	ne
 801191c:	6560      	strne	r0, [r4, #84]	; 0x54
 801191e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8011922:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8011926:	81a3      	strheq	r3, [r4, #12]
 8011928:	bf18      	it	ne
 801192a:	81a3      	strhne	r3, [r4, #12]
 801192c:	bd10      	pop	{r4, pc}

0801192e <__sclose>:
 801192e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011932:	f000 b813 	b.w	801195c <_close_r>
	...

08011938 <_write_r>:
 8011938:	b538      	push	{r3, r4, r5, lr}
 801193a:	4d07      	ldr	r5, [pc, #28]	; (8011958 <_write_r+0x20>)
 801193c:	4604      	mov	r4, r0
 801193e:	4608      	mov	r0, r1
 8011940:	4611      	mov	r1, r2
 8011942:	2200      	movs	r2, #0
 8011944:	602a      	str	r2, [r5, #0]
 8011946:	461a      	mov	r2, r3
 8011948:	f7f2 fb39 	bl	8003fbe <_write>
 801194c:	1c43      	adds	r3, r0, #1
 801194e:	d102      	bne.n	8011956 <_write_r+0x1e>
 8011950:	682b      	ldr	r3, [r5, #0]
 8011952:	b103      	cbz	r3, 8011956 <_write_r+0x1e>
 8011954:	6023      	str	r3, [r4, #0]
 8011956:	bd38      	pop	{r3, r4, r5, pc}
 8011958:	24000c98 	.word	0x24000c98

0801195c <_close_r>:
 801195c:	b538      	push	{r3, r4, r5, lr}
 801195e:	4d06      	ldr	r5, [pc, #24]	; (8011978 <_close_r+0x1c>)
 8011960:	2300      	movs	r3, #0
 8011962:	4604      	mov	r4, r0
 8011964:	4608      	mov	r0, r1
 8011966:	602b      	str	r3, [r5, #0]
 8011968:	f7f2 fb45 	bl	8003ff6 <_close>
 801196c:	1c43      	adds	r3, r0, #1
 801196e:	d102      	bne.n	8011976 <_close_r+0x1a>
 8011970:	682b      	ldr	r3, [r5, #0]
 8011972:	b103      	cbz	r3, 8011976 <_close_r+0x1a>
 8011974:	6023      	str	r3, [r4, #0]
 8011976:	bd38      	pop	{r3, r4, r5, pc}
 8011978:	24000c98 	.word	0x24000c98

0801197c <_fstat_r>:
 801197c:	b538      	push	{r3, r4, r5, lr}
 801197e:	4d07      	ldr	r5, [pc, #28]	; (801199c <_fstat_r+0x20>)
 8011980:	2300      	movs	r3, #0
 8011982:	4604      	mov	r4, r0
 8011984:	4608      	mov	r0, r1
 8011986:	4611      	mov	r1, r2
 8011988:	602b      	str	r3, [r5, #0]
 801198a:	f7f2 fb40 	bl	800400e <_fstat>
 801198e:	1c43      	adds	r3, r0, #1
 8011990:	d102      	bne.n	8011998 <_fstat_r+0x1c>
 8011992:	682b      	ldr	r3, [r5, #0]
 8011994:	b103      	cbz	r3, 8011998 <_fstat_r+0x1c>
 8011996:	6023      	str	r3, [r4, #0]
 8011998:	bd38      	pop	{r3, r4, r5, pc}
 801199a:	bf00      	nop
 801199c:	24000c98 	.word	0x24000c98

080119a0 <_isatty_r>:
 80119a0:	b538      	push	{r3, r4, r5, lr}
 80119a2:	4d06      	ldr	r5, [pc, #24]	; (80119bc <_isatty_r+0x1c>)
 80119a4:	2300      	movs	r3, #0
 80119a6:	4604      	mov	r4, r0
 80119a8:	4608      	mov	r0, r1
 80119aa:	602b      	str	r3, [r5, #0]
 80119ac:	f7f2 fb3f 	bl	800402e <_isatty>
 80119b0:	1c43      	adds	r3, r0, #1
 80119b2:	d102      	bne.n	80119ba <_isatty_r+0x1a>
 80119b4:	682b      	ldr	r3, [r5, #0]
 80119b6:	b103      	cbz	r3, 80119ba <_isatty_r+0x1a>
 80119b8:	6023      	str	r3, [r4, #0]
 80119ba:	bd38      	pop	{r3, r4, r5, pc}
 80119bc:	24000c98 	.word	0x24000c98

080119c0 <_lseek_r>:
 80119c0:	b538      	push	{r3, r4, r5, lr}
 80119c2:	4d07      	ldr	r5, [pc, #28]	; (80119e0 <_lseek_r+0x20>)
 80119c4:	4604      	mov	r4, r0
 80119c6:	4608      	mov	r0, r1
 80119c8:	4611      	mov	r1, r2
 80119ca:	2200      	movs	r2, #0
 80119cc:	602a      	str	r2, [r5, #0]
 80119ce:	461a      	mov	r2, r3
 80119d0:	f7f2 fb38 	bl	8004044 <_lseek>
 80119d4:	1c43      	adds	r3, r0, #1
 80119d6:	d102      	bne.n	80119de <_lseek_r+0x1e>
 80119d8:	682b      	ldr	r3, [r5, #0]
 80119da:	b103      	cbz	r3, 80119de <_lseek_r+0x1e>
 80119dc:	6023      	str	r3, [r4, #0]
 80119de:	bd38      	pop	{r3, r4, r5, pc}
 80119e0:	24000c98 	.word	0x24000c98

080119e4 <_read_r>:
 80119e4:	b538      	push	{r3, r4, r5, lr}
 80119e6:	4d07      	ldr	r5, [pc, #28]	; (8011a04 <_read_r+0x20>)
 80119e8:	4604      	mov	r4, r0
 80119ea:	4608      	mov	r0, r1
 80119ec:	4611      	mov	r1, r2
 80119ee:	2200      	movs	r2, #0
 80119f0:	602a      	str	r2, [r5, #0]
 80119f2:	461a      	mov	r2, r3
 80119f4:	f7f2 fac6 	bl	8003f84 <_read>
 80119f8:	1c43      	adds	r3, r0, #1
 80119fa:	d102      	bne.n	8011a02 <_read_r+0x1e>
 80119fc:	682b      	ldr	r3, [r5, #0]
 80119fe:	b103      	cbz	r3, 8011a02 <_read_r+0x1e>
 8011a00:	6023      	str	r3, [r4, #0]
 8011a02:	bd38      	pop	{r3, r4, r5, pc}
 8011a04:	24000c98 	.word	0x24000c98

08011a08 <checkint>:
 8011a08:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8011a0c:	f240 33fe 	movw	r3, #1022	; 0x3fe
 8011a10:	429a      	cmp	r2, r3
 8011a12:	b570      	push	{r4, r5, r6, lr}
 8011a14:	dd2a      	ble.n	8011a6c <checkint+0x64>
 8011a16:	f240 4333 	movw	r3, #1075	; 0x433
 8011a1a:	429a      	cmp	r2, r3
 8011a1c:	dc24      	bgt.n	8011a68 <checkint+0x60>
 8011a1e:	1a9b      	subs	r3, r3, r2
 8011a20:	f1a3 0620 	sub.w	r6, r3, #32
 8011a24:	f04f 32ff 	mov.w	r2, #4294967295
 8011a28:	fa02 f403 	lsl.w	r4, r2, r3
 8011a2c:	fa02 f606 	lsl.w	r6, r2, r6
 8011a30:	f1c3 0520 	rsb	r5, r3, #32
 8011a34:	fa22 f505 	lsr.w	r5, r2, r5
 8011a38:	4334      	orrs	r4, r6
 8011a3a:	432c      	orrs	r4, r5
 8011a3c:	409a      	lsls	r2, r3
 8011a3e:	ea20 0202 	bic.w	r2, r0, r2
 8011a42:	ea21 0404 	bic.w	r4, r1, r4
 8011a46:	4322      	orrs	r2, r4
 8011a48:	f1a3 0420 	sub.w	r4, r3, #32
 8011a4c:	f1c3 0220 	rsb	r2, r3, #32
 8011a50:	d10c      	bne.n	8011a6c <checkint+0x64>
 8011a52:	40d8      	lsrs	r0, r3
 8011a54:	fa01 f302 	lsl.w	r3, r1, r2
 8011a58:	4318      	orrs	r0, r3
 8011a5a:	40e1      	lsrs	r1, r4
 8011a5c:	4308      	orrs	r0, r1
 8011a5e:	f000 0001 	and.w	r0, r0, #1
 8011a62:	f1d0 0002 	rsbs	r0, r0, #2
 8011a66:	bd70      	pop	{r4, r5, r6, pc}
 8011a68:	2002      	movs	r0, #2
 8011a6a:	e7fc      	b.n	8011a66 <checkint+0x5e>
 8011a6c:	2000      	movs	r0, #0
 8011a6e:	e7fa      	b.n	8011a66 <checkint+0x5e>

08011a70 <pow>:
 8011a70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011a74:	ee10 4a90 	vmov	r4, s1
 8011a78:	ed2d 8b0a 	vpush	{d8-d12}
 8011a7c:	ea4f 5a14 	mov.w	sl, r4, lsr #20
 8011a80:	ee11 7a90 	vmov	r7, s3
 8011a84:	f10a 32ff 	add.w	r2, sl, #4294967295
 8011a88:	f240 73fd 	movw	r3, #2045	; 0x7fd
 8011a8c:	429a      	cmp	r2, r3
 8011a8e:	ee10 6a10 	vmov	r6, s0
 8011a92:	ee11 0a10 	vmov	r0, s2
 8011a96:	b086      	sub	sp, #24
 8011a98:	46d4      	mov	ip, sl
 8011a9a:	ea4f 5517 	mov.w	r5, r7, lsr #20
 8011a9e:	d806      	bhi.n	8011aae <pow+0x3e>
 8011aa0:	f3c5 030a 	ubfx	r3, r5, #0, #11
 8011aa4:	f2a3 33be 	subw	r3, r3, #958	; 0x3be
 8011aa8:	2b7f      	cmp	r3, #127	; 0x7f
 8011aaa:	f240 8156 	bls.w	8011d5a <pow+0x2ea>
 8011aae:	1802      	adds	r2, r0, r0
 8011ab0:	eb47 0107 	adc.w	r1, r7, r7
 8011ab4:	f06f 0e01 	mvn.w	lr, #1
 8011ab8:	f112 39ff 	adds.w	r9, r2, #4294967295
 8011abc:	f141 38ff 	adc.w	r8, r1, #4294967295
 8011ac0:	f46f 1300 	mvn.w	r3, #2097152	; 0x200000
 8011ac4:	45ce      	cmp	lr, r9
 8011ac6:	eb73 0808 	sbcs.w	r8, r3, r8
 8011aca:	d23f      	bcs.n	8011b4c <pow+0xdc>
 8011acc:	ea52 0301 	orrs.w	r3, r2, r1
 8011ad0:	f04f 0300 	mov.w	r3, #0
 8011ad4:	d10c      	bne.n	8011af0 <pow+0x80>
 8011ad6:	19b6      	adds	r6, r6, r6
 8011ad8:	f484 2400 	eor.w	r4, r4, #524288	; 0x80000
 8011adc:	4164      	adcs	r4, r4
 8011ade:	42b3      	cmp	r3, r6
 8011ae0:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8011ae4:	41a3      	sbcs	r3, r4
 8011ae6:	f0c0 808c 	bcc.w	8011c02 <pow+0x192>
 8011aea:	eeb7 0b00 	vmov.f64	d0, #112	; 0x3f800000  1.0
 8011aee:	e028      	b.n	8011b42 <pow+0xd2>
 8011af0:	4da3      	ldr	r5, [pc, #652]	; (8011d80 <pow+0x310>)
 8011af2:	42ac      	cmp	r4, r5
 8011af4:	bf08      	it	eq
 8011af6:	429e      	cmpeq	r6, r3
 8011af8:	d107      	bne.n	8011b0a <pow+0x9a>
 8011afa:	1800      	adds	r0, r0, r0
 8011afc:	f487 2700 	eor.w	r7, r7, #524288	; 0x80000
 8011b00:	417f      	adcs	r7, r7
 8011b02:	4283      	cmp	r3, r0
 8011b04:	4b9f      	ldr	r3, [pc, #636]	; (8011d84 <pow+0x314>)
 8011b06:	41bb      	sbcs	r3, r7
 8011b08:	e7ed      	b.n	8011ae6 <pow+0x76>
 8011b0a:	19b6      	adds	r6, r6, r6
 8011b0c:	489e      	ldr	r0, [pc, #632]	; (8011d88 <pow+0x318>)
 8011b0e:	4164      	adcs	r4, r4
 8011b10:	42b3      	cmp	r3, r6
 8011b12:	eb70 0504 	sbcs.w	r5, r0, r4
 8011b16:	d374      	bcc.n	8011c02 <pow+0x192>
 8011b18:	4281      	cmp	r1, r0
 8011b1a:	bf08      	it	eq
 8011b1c:	429a      	cmpeq	r2, r3
 8011b1e:	d170      	bne.n	8011c02 <pow+0x192>
 8011b20:	4a9a      	ldr	r2, [pc, #616]	; (8011d8c <pow+0x31c>)
 8011b22:	4294      	cmp	r4, r2
 8011b24:	bf08      	it	eq
 8011b26:	429e      	cmpeq	r6, r3
 8011b28:	d0df      	beq.n	8011aea <pow+0x7a>
 8011b2a:	4294      	cmp	r4, r2
 8011b2c:	ea6f 0707 	mvn.w	r7, r7
 8011b30:	bf34      	ite	cc
 8011b32:	2400      	movcc	r4, #0
 8011b34:	2401      	movcs	r4, #1
 8011b36:	0fff      	lsrs	r7, r7, #31
 8011b38:	42bc      	cmp	r4, r7
 8011b3a:	f040 81d9 	bne.w	8011ef0 <pow+0x480>
 8011b3e:	ee21 0b01 	vmul.f64	d0, d1, d1
 8011b42:	b006      	add	sp, #24
 8011b44:	ecbd 8b0a 	vpop	{d8-d12}
 8011b48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011b4c:	eb16 0806 	adds.w	r8, r6, r6
 8011b50:	eb44 0904 	adc.w	r9, r4, r4
 8011b54:	f118 31ff 	adds.w	r1, r8, #4294967295
 8011b58:	f169 0200 	sbc.w	r2, r9, #0
 8011b5c:	458e      	cmp	lr, r1
 8011b5e:	4193      	sbcs	r3, r2
 8011b60:	d223      	bcs.n	8011baa <pow+0x13a>
 8011b62:	ee20 0b00 	vmul.f64	d0, d0, d0
 8011b66:	2c00      	cmp	r4, #0
 8011b68:	da12      	bge.n	8011b90 <pow+0x120>
 8011b6a:	4639      	mov	r1, r7
 8011b6c:	f7ff ff4c 	bl	8011a08 <checkint>
 8011b70:	2801      	cmp	r0, #1
 8011b72:	d10d      	bne.n	8011b90 <pow+0x120>
 8011b74:	eeb1 0b40 	vneg.f64	d0, d0
 8011b78:	ea58 0309 	orrs.w	r3, r8, r9
 8011b7c:	d10a      	bne.n	8011b94 <pow+0x124>
 8011b7e:	2f00      	cmp	r7, #0
 8011b80:	dadf      	bge.n	8011b42 <pow+0xd2>
 8011b82:	b006      	add	sp, #24
 8011b84:	ecbd 8b0a 	vpop	{d8-d12}
 8011b88:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011b8c:	f000 bb50 	b.w	8012230 <__math_divzero>
 8011b90:	2000      	movs	r0, #0
 8011b92:	e7f1      	b.n	8011b78 <pow+0x108>
 8011b94:	2f00      	cmp	r7, #0
 8011b96:	dad4      	bge.n	8011b42 <pow+0xd2>
 8011b98:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8011b9c:	ee86 7b00 	vdiv.f64	d7, d6, d0
 8011ba0:	ed8d 7b00 	vstr	d7, [sp]
 8011ba4:	ed9d 0b00 	vldr	d0, [sp]
 8011ba8:	e7cb      	b.n	8011b42 <pow+0xd2>
 8011baa:	2c00      	cmp	r4, #0
 8011bac:	da2c      	bge.n	8011c08 <pow+0x198>
 8011bae:	4639      	mov	r1, r7
 8011bb0:	f7ff ff2a 	bl	8011a08 <checkint>
 8011bb4:	b930      	cbnz	r0, 8011bc4 <pow+0x154>
 8011bb6:	b006      	add	sp, #24
 8011bb8:	ecbd 8b0a 	vpop	{d8-d12}
 8011bbc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011bc0:	f000 bb4e 	b.w	8012260 <__math_invalid>
 8011bc4:	2801      	cmp	r0, #1
 8011bc6:	bf14      	ite	ne
 8011bc8:	2000      	movne	r0, #0
 8011bca:	f44f 2080 	moveq.w	r0, #262144	; 0x40000
 8011bce:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
 8011bd2:	f3ca 0c0a 	ubfx	ip, sl, #0, #11
 8011bd6:	f3c5 020a 	ubfx	r2, r5, #0, #11
 8011bda:	f2a2 33be 	subw	r3, r2, #958	; 0x3be
 8011bde:	2b7f      	cmp	r3, #127	; 0x7f
 8011be0:	d92d      	bls.n	8011c3e <pow+0x1ce>
 8011be2:	4b67      	ldr	r3, [pc, #412]	; (8011d80 <pow+0x310>)
 8011be4:	2000      	movs	r0, #0
 8011be6:	429c      	cmp	r4, r3
 8011be8:	bf08      	it	eq
 8011bea:	4286      	cmpeq	r6, r0
 8011bec:	f43f af7d 	beq.w	8011aea <pow+0x7a>
 8011bf0:	f240 31bd 	movw	r1, #957	; 0x3bd
 8011bf4:	428a      	cmp	r2, r1
 8011bf6:	d80c      	bhi.n	8011c12 <pow+0x1a2>
 8011bf8:	eeb7 0b00 	vmov.f64	d0, #112	; 0x3f800000  1.0
 8011bfc:	42b0      	cmp	r0, r6
 8011bfe:	41a3      	sbcs	r3, r4
 8011c00:	d204      	bcs.n	8011c0c <pow+0x19c>
 8011c02:	ee31 0b00 	vadd.f64	d0, d1, d0
 8011c06:	e79c      	b.n	8011b42 <pow+0xd2>
 8011c08:	2000      	movs	r0, #0
 8011c0a:	e7e4      	b.n	8011bd6 <pow+0x166>
 8011c0c:	ee30 0b41 	vsub.f64	d0, d0, d1
 8011c10:	e797      	b.n	8011b42 <pow+0xd2>
 8011c12:	2e01      	cmp	r6, #1
 8011c14:	eb74 0303 	sbcs.w	r3, r4, r3
 8011c18:	f240 72ff 	movw	r2, #2047	; 0x7ff
 8011c1c:	bf34      	ite	cc
 8011c1e:	2301      	movcc	r3, #1
 8011c20:	2300      	movcs	r3, #0
 8011c22:	4295      	cmp	r5, r2
 8011c24:	bf8c      	ite	hi
 8011c26:	2500      	movhi	r5, #0
 8011c28:	2501      	movls	r5, #1
 8011c2a:	42ab      	cmp	r3, r5
 8011c2c:	f000 809d 	beq.w	8011d6a <pow+0x2fa>
 8011c30:	b006      	add	sp, #24
 8011c32:	ecbd 8b0a 	vpop	{d8-d12}
 8011c36:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011c3a:	f000 baf1 	b.w	8012220 <__math_oflow>
 8011c3e:	f1bc 0f00 	cmp.w	ip, #0
 8011c42:	d10b      	bne.n	8011c5c <pow+0x1ec>
 8011c44:	ed9f 7b4c 	vldr	d7, [pc, #304]	; 8011d78 <pow+0x308>
 8011c48:	ee20 7b07 	vmul.f64	d7, d0, d7
 8011c4c:	ec53 2b17 	vmov	r2, r3, d7
 8011c50:	ee17 6a10 	vmov	r6, s14
 8011c54:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
 8011c58:	f1a4 7450 	sub.w	r4, r4, #54525952	; 0x3400000
 8011c5c:	4b4c      	ldr	r3, [pc, #304]	; (8011d90 <pow+0x320>)
 8011c5e:	eebf 6b00 	vmov.f64	d6, #240	; 0xbf800000 -1.0
 8011c62:	4423      	add	r3, r4
 8011c64:	f3c3 3246 	ubfx	r2, r3, #13, #7
 8011c68:	1519      	asrs	r1, r3, #20
 8011c6a:	0d1b      	lsrs	r3, r3, #20
 8011c6c:	051b      	lsls	r3, r3, #20
 8011c6e:	eba4 0903 	sub.w	r9, r4, r3
 8011c72:	4b48      	ldr	r3, [pc, #288]	; (8011d94 <pow+0x324>)
 8011c74:	ee04 1a10 	vmov	s8, r1
 8011c78:	eb03 1142 	add.w	r1, r3, r2, lsl #5
 8011c7c:	f1b6 0800 	subs.w	r8, r6, #0
 8011c80:	ed91 7b12 	vldr	d7, [r1, #72]	; 0x48
 8011c84:	ec49 8b15 	vmov	d5, r8, r9
 8011c88:	ed91 2b16 	vldr	d2, [r1, #88]	; 0x58
 8011c8c:	eea5 6b07 	vfma.f64	d6, d5, d7
 8011c90:	ed93 7b00 	vldr	d7, [r3]
 8011c94:	ed93 5b02 	vldr	d5, [r3, #8]
 8011c98:	eeb8 4bc4 	vcvt.f64.s32	d4, s8
 8011c9c:	eea4 2b07 	vfma.f64	d2, d4, d7
 8011ca0:	ed91 7b18 	vldr	d7, [r1, #96]	; 0x60
 8011ca4:	ee36 ab02 	vadd.f64	d10, d6, d2
 8011ca8:	ee32 2b4a 	vsub.f64	d2, d2, d10
 8011cac:	eea4 7b05 	vfma.f64	d7, d4, d5
 8011cb0:	ed93 5b04 	vldr	d5, [r3, #16]
 8011cb4:	ee32 2b06 	vadd.f64	d2, d2, d6
 8011cb8:	ee37 7b02 	vadd.f64	d7, d7, d2
 8011cbc:	ee26 5b05 	vmul.f64	d5, d6, d5
 8011cc0:	ed93 4b08 	vldr	d4, [r3, #32]
 8011cc4:	ee26 0b05 	vmul.f64	d0, d6, d5
 8011cc8:	eeb0 9b40 	vmov.f64	d9, d0
 8011ccc:	ee95 9b06 	vfnms.f64	d9, d5, d6
 8011cd0:	ed93 5b06 	vldr	d5, [r3, #24]
 8011cd4:	ee3a 8b00 	vadd.f64	d8, d10, d0
 8011cd8:	ee26 bb00 	vmul.f64	d11, d6, d0
 8011cdc:	ed93 3b0c 	vldr	d3, [r3, #48]	; 0x30
 8011ce0:	eea6 5b04 	vfma.f64	d5, d6, d4
 8011ce4:	ee3a ab48 	vsub.f64	d10, d10, d8
 8011ce8:	ed93 4b0a 	vldr	d4, [r3, #40]	; 0x28
 8011cec:	ee37 9b09 	vadd.f64	d9, d7, d9
 8011cf0:	ee3a ab00 	vadd.f64	d10, d10, d0
 8011cf4:	eea6 4b03 	vfma.f64	d4, d6, d3
 8011cf8:	ed93 cb10 	vldr	d12, [r3, #64]	; 0x40
 8011cfc:	ee39 ab0a 	vadd.f64	d10, d9, d10
 8011d00:	ed93 3b0e 	vldr	d3, [r3, #56]	; 0x38
 8011d04:	eea6 3b0c 	vfma.f64	d3, d6, d12
 8011d08:	eea0 4b03 	vfma.f64	d4, d0, d3
 8011d0c:	eea0 5b04 	vfma.f64	d5, d0, d4
 8011d10:	eeab ab05 	vfma.f64	d10, d11, d5
 8011d14:	ee38 6b0a 	vadd.f64	d6, d8, d10
 8011d18:	ee21 7b06 	vmul.f64	d7, d1, d6
 8011d1c:	ee17 3a90 	vmov	r3, s15
 8011d20:	eeb0 5b47 	vmov.f64	d5, d7
 8011d24:	f3c3 560a 	ubfx	r6, r3, #20, #11
 8011d28:	f46f 7272 	mvn.w	r2, #968	; 0x3c8
 8011d2c:	18b2      	adds	r2, r6, r2
 8011d2e:	2a3e      	cmp	r2, #62	; 0x3e
 8011d30:	ee91 5b06 	vfnms.f64	d5, d1, d6
 8011d34:	ee38 8b46 	vsub.f64	d8, d8, d6
 8011d38:	ee38 ab0a 	vadd.f64	d10, d8, d10
 8011d3c:	eea1 5b0a 	vfma.f64	d5, d1, d10
 8011d40:	d92b      	bls.n	8011d9a <pow+0x32a>
 8011d42:	2a00      	cmp	r2, #0
 8011d44:	da0b      	bge.n	8011d5e <pow+0x2ee>
 8011d46:	eeb7 0b00 	vmov.f64	d0, #112	; 0x3f800000  1.0
 8011d4a:	ee37 0b00 	vadd.f64	d0, d7, d0
 8011d4e:	2800      	cmp	r0, #0
 8011d50:	f43f aef7 	beq.w	8011b42 <pow+0xd2>
 8011d54:	eeb1 0b40 	vneg.f64	d0, d0
 8011d58:	e6f3      	b.n	8011b42 <pow+0xd2>
 8011d5a:	2000      	movs	r0, #0
 8011d5c:	e77e      	b.n	8011c5c <pow+0x1ec>
 8011d5e:	f5b6 6f81 	cmp.w	r6, #1032	; 0x408
 8011d62:	d919      	bls.n	8011d98 <pow+0x328>
 8011d64:	2b00      	cmp	r3, #0
 8011d66:	f6bf af63 	bge.w	8011c30 <pow+0x1c0>
 8011d6a:	b006      	add	sp, #24
 8011d6c:	ecbd 8b0a 	vpop	{d8-d12}
 8011d70:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011d74:	f000 ba4c 	b.w	8012210 <__math_uflow>
 8011d78:	00000000 	.word	0x00000000
 8011d7c:	43300000 	.word	0x43300000
 8011d80:	3ff00000 	.word	0x3ff00000
 8011d84:	fff00000 	.word	0xfff00000
 8011d88:	ffe00000 	.word	0xffe00000
 8011d8c:	7fe00000 	.word	0x7fe00000
 8011d90:	c0196aab 	.word	0xc0196aab
 8011d94:	08012778 	.word	0x08012778
 8011d98:	2600      	movs	r6, #0
 8011d9a:	495d      	ldr	r1, [pc, #372]	; (8011f10 <pow+0x4a0>)
 8011d9c:	ed91 4b02 	vldr	d4, [r1, #8]
 8011da0:	ed91 3b00 	vldr	d3, [r1]
 8011da4:	eeb0 6b44 	vmov.f64	d6, d4
 8011da8:	eea7 6b03 	vfma.f64	d6, d7, d3
 8011dac:	ee16 5a10 	vmov	r5, s12
 8011db0:	ee36 6b44 	vsub.f64	d6, d6, d4
 8011db4:	ed91 4b04 	vldr	d4, [r1, #16]
 8011db8:	f005 037f 	and.w	r3, r5, #127	; 0x7f
 8011dbc:	eea6 7b04 	vfma.f64	d7, d6, d4
 8011dc0:	eeb0 0b47 	vmov.f64	d0, d7
 8011dc4:	ed91 7b06 	vldr	d7, [r1, #24]
 8011dc8:	18dc      	adds	r4, r3, r3
 8011dca:	f104 030f 	add.w	r3, r4, #15
 8011dce:	eb01 04c4 	add.w	r4, r1, r4, lsl #3
 8011dd2:	eea6 0b07 	vfma.f64	d0, d6, d7
 8011dd6:	ed91 4b0a 	vldr	d4, [r1, #40]	; 0x28
 8011dda:	ee35 0b00 	vadd.f64	d0, d5, d0
 8011dde:	ee20 6b00 	vmul.f64	d6, d0, d0
 8011de2:	ed94 7b1c 	vldr	d7, [r4, #112]	; 0x70
 8011de6:	ed91 5b08 	vldr	d5, [r1, #32]
 8011dea:	ee30 7b07 	vadd.f64	d7, d0, d7
 8011dee:	eb01 02c3 	add.w	r2, r1, r3, lsl #3
 8011df2:	eea0 5b04 	vfma.f64	d5, d0, d4
 8011df6:	ed91 4b0e 	vldr	d4, [r1, #56]	; 0x38
 8011dfa:	eea6 7b05 	vfma.f64	d7, d6, d5
 8011dfe:	ee26 6b06 	vmul.f64	d6, d6, d6
 8011e02:	ed91 5b0c 	vldr	d5, [r1, #48]	; 0x30
 8011e06:	f851 c033 	ldr.w	ip, [r1, r3, lsl #3]
 8011e0a:	f8d2 e004 	ldr.w	lr, [r2, #4]
 8011e0e:	eea0 5b04 	vfma.f64	d5, d0, d4
 8011e12:	1940      	adds	r0, r0, r5
 8011e14:	2700      	movs	r7, #0
 8011e16:	eb17 020c 	adds.w	r2, r7, ip
 8011e1a:	eb0e 3340 	add.w	r3, lr, r0, lsl #13
 8011e1e:	eea6 7b05 	vfma.f64	d7, d6, d5
 8011e22:	2e00      	cmp	r6, #0
 8011e24:	d15f      	bne.n	8011ee6 <pow+0x476>
 8011e26:	42bd      	cmp	r5, r7
 8011e28:	db13      	blt.n	8011e52 <pow+0x3e2>
 8011e2a:	f103 4140 	add.w	r1, r3, #3221225472	; 0xc0000000
 8011e2e:	f501 0170 	add.w	r1, r1, #15728640	; 0xf00000
 8011e32:	4610      	mov	r0, r2
 8011e34:	ec41 0b10 	vmov	d0, r0, r1
 8011e38:	eea7 0b00 	vfma.f64	d0, d7, d0
 8011e3c:	ed9f 7b2e 	vldr	d7, [pc, #184]	; 8011ef8 <pow+0x488>
 8011e40:	ee20 0b07 	vmul.f64	d0, d0, d7
 8011e44:	b006      	add	sp, #24
 8011e46:	ecbd 8b0a 	vpop	{d8-d12}
 8011e4a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011e4e:	f000 ba1f 	b.w	8012290 <__math_check_oflow>
 8011e52:	f103 517f 	add.w	r1, r3, #1069547520	; 0x3fc00000
 8011e56:	f501 1100 	add.w	r1, r1, #2097152	; 0x200000
 8011e5a:	4610      	mov	r0, r2
 8011e5c:	ec41 0b15 	vmov	d5, r0, r1
 8011e60:	eeb7 4b00 	vmov.f64	d4, #112	; 0x3f800000  1.0
 8011e64:	ee27 6b05 	vmul.f64	d6, d7, d5
 8011e68:	ee35 7b06 	vadd.f64	d7, d5, d6
 8011e6c:	eeb0 3bc7 	vabs.f64	d3, d7
 8011e70:	eeb4 3bc4 	vcmpe.f64	d3, d4
 8011e74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011e78:	ed9f 0b21 	vldr	d0, [pc, #132]	; 8011f00 <pow+0x490>
 8011e7c:	d52a      	bpl.n	8011ed4 <pow+0x464>
 8011e7e:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 8011e82:	ee35 5b47 	vsub.f64	d5, d5, d7
 8011e86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011e8a:	eebf 3b00 	vmov.f64	d3, #240	; 0xbf800000 -1.0
 8011e8e:	ee35 6b06 	vadd.f64	d6, d5, d6
 8011e92:	bf48      	it	mi
 8011e94:	eeb0 4b43 	vmovmi.f64	d4, d3
 8011e98:	ee37 3b04 	vadd.f64	d3, d7, d4
 8011e9c:	ee34 5b43 	vsub.f64	d5, d4, d3
 8011ea0:	ee35 7b07 	vadd.f64	d7, d5, d7
 8011ea4:	ee37 7b06 	vadd.f64	d7, d7, d6
 8011ea8:	ee37 7b03 	vadd.f64	d7, d7, d3
 8011eac:	ee37 7b44 	vsub.f64	d7, d7, d4
 8011eb0:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8011eb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011eb8:	d104      	bne.n	8011ec4 <pow+0x454>
 8011eba:	4632      	mov	r2, r6
 8011ebc:	f001 4300 	and.w	r3, r1, #2147483648	; 0x80000000
 8011ec0:	ec43 2b17 	vmov	d7, r2, r3
 8011ec4:	ed8d 0b02 	vstr	d0, [sp, #8]
 8011ec8:	ed9d 6b02 	vldr	d6, [sp, #8]
 8011ecc:	ee26 6b00 	vmul.f64	d6, d6, d0
 8011ed0:	ed8d 6b04 	vstr	d6, [sp, #16]
 8011ed4:	ee27 0b00 	vmul.f64	d0, d7, d0
 8011ed8:	b006      	add	sp, #24
 8011eda:	ecbd 8b0a 	vpop	{d8-d12}
 8011ede:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011ee2:	f000 b9cc 	b.w	801227e <__math_check_uflow>
 8011ee6:	ec43 2b10 	vmov	d0, r2, r3
 8011eea:	eea7 0b00 	vfma.f64	d0, d7, d0
 8011eee:	e628      	b.n	8011b42 <pow+0xd2>
 8011ef0:	ed9f 0b05 	vldr	d0, [pc, #20]	; 8011f08 <pow+0x498>
 8011ef4:	e625      	b.n	8011b42 <pow+0xd2>
 8011ef6:	bf00      	nop
 8011ef8:	00000000 	.word	0x00000000
 8011efc:	7f000000 	.word	0x7f000000
 8011f00:	00000000 	.word	0x00000000
 8011f04:	00100000 	.word	0x00100000
	...
 8011f10:	080137c0 	.word	0x080137c0

08011f14 <asin>:
 8011f14:	b508      	push	{r3, lr}
 8011f16:	ed2d 8b04 	vpush	{d8-d9}
 8011f1a:	eeb0 8b40 	vmov.f64	d8, d0
 8011f1e:	f000 f847 	bl	8011fb0 <__ieee754_asin>
 8011f22:	eeb4 8b48 	vcmp.f64	d8, d8
 8011f26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f2a:	eeb0 9b40 	vmov.f64	d9, d0
 8011f2e:	d615      	bvs.n	8011f5c <asin+0x48>
 8011f30:	eeb0 0b48 	vmov.f64	d0, d8
 8011f34:	f000 f9c0 	bl	80122b8 <fabs>
 8011f38:	eeb7 7b00 	vmov.f64	d7, #112	; 0x3f800000  1.0
 8011f3c:	eeb4 0bc7 	vcmpe.f64	d0, d7
 8011f40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f44:	dd0a      	ble.n	8011f5c <asin+0x48>
 8011f46:	f7fc fec7 	bl	800ecd8 <__errno>
 8011f4a:	ecbd 8b04 	vpop	{d8-d9}
 8011f4e:	2321      	movs	r3, #33	; 0x21
 8011f50:	6003      	str	r3, [r0, #0]
 8011f52:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011f56:	4804      	ldr	r0, [pc, #16]	; (8011f68 <asin+0x54>)
 8011f58:	f7fe bdc6 	b.w	8010ae8 <nan>
 8011f5c:	eeb0 0b49 	vmov.f64	d0, d9
 8011f60:	ecbd 8b04 	vpop	{d8-d9}
 8011f64:	bd08      	pop	{r3, pc}
 8011f66:	bf00      	nop
 8011f68:	080125df 	.word	0x080125df
 8011f6c:	00000000 	.word	0x00000000

08011f70 <sqrt>:
 8011f70:	b508      	push	{r3, lr}
 8011f72:	ed2d 8b04 	vpush	{d8-d9}
 8011f76:	eeb0 8b40 	vmov.f64	d8, d0
 8011f7a:	f000 f927 	bl	80121cc <__ieee754_sqrt>
 8011f7e:	eeb4 8b48 	vcmp.f64	d8, d8
 8011f82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f86:	d60c      	bvs.n	8011fa2 <sqrt+0x32>
 8011f88:	ed9f 9b07 	vldr	d9, [pc, #28]	; 8011fa8 <sqrt+0x38>
 8011f8c:	eeb4 8bc9 	vcmpe.f64	d8, d9
 8011f90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8011f94:	d505      	bpl.n	8011fa2 <sqrt+0x32>
 8011f96:	f7fc fe9f 	bl	800ecd8 <__errno>
 8011f9a:	ee89 0b09 	vdiv.f64	d0, d9, d9
 8011f9e:	2321      	movs	r3, #33	; 0x21
 8011fa0:	6003      	str	r3, [r0, #0]
 8011fa2:	ecbd 8b04 	vpop	{d8-d9}
 8011fa6:	bd08      	pop	{r3, pc}
	...

08011fb0 <__ieee754_asin>:
 8011fb0:	b538      	push	{r3, r4, r5, lr}
 8011fb2:	ee10 5a90 	vmov	r5, s1
 8011fb6:	4b82      	ldr	r3, [pc, #520]	; (80121c0 <__ieee754_asin+0x210>)
 8011fb8:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 8011fbc:	429c      	cmp	r4, r3
 8011fbe:	ed2d 8b06 	vpush	{d8-d10}
 8011fc2:	dd19      	ble.n	8011ff8 <__ieee754_asin+0x48>
 8011fc4:	ee10 3a10 	vmov	r3, s0
 8011fc8:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8011fcc:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8011fd0:	4323      	orrs	r3, r4
 8011fd2:	d10c      	bne.n	8011fee <__ieee754_asin+0x3e>
 8011fd4:	ed9f 7b5c 	vldr	d7, [pc, #368]	; 8012148 <__ieee754_asin+0x198>
 8011fd8:	ed9f 6b5d 	vldr	d6, [pc, #372]	; 8012150 <__ieee754_asin+0x1a0>
 8011fdc:	ee20 7b07 	vmul.f64	d7, d0, d7
 8011fe0:	eea0 7b06 	vfma.f64	d7, d0, d6
 8011fe4:	eeb0 0b47 	vmov.f64	d0, d7
 8011fe8:	ecbd 8b06 	vpop	{d8-d10}
 8011fec:	bd38      	pop	{r3, r4, r5, pc}
 8011fee:	ee30 7b40 	vsub.f64	d7, d0, d0
 8011ff2:	ee87 0b07 	vdiv.f64	d0, d7, d7
 8011ff6:	e7f7      	b.n	8011fe8 <__ieee754_asin+0x38>
 8011ff8:	4b72      	ldr	r3, [pc, #456]	; (80121c4 <__ieee754_asin+0x214>)
 8011ffa:	eeb7 9b00 	vmov.f64	d9, #112	; 0x3f800000  1.0
 8011ffe:	429c      	cmp	r4, r3
 8012000:	dc0b      	bgt.n	801201a <__ieee754_asin+0x6a>
 8012002:	f1b4 5f79 	cmp.w	r4, #1044381696	; 0x3e400000
 8012006:	da52      	bge.n	80120ae <__ieee754_asin+0xfe>
 8012008:	ed9f 7b53 	vldr	d7, [pc, #332]	; 8012158 <__ieee754_asin+0x1a8>
 801200c:	ee30 7b07 	vadd.f64	d7, d0, d7
 8012010:	eeb4 7bc9 	vcmpe.f64	d7, d9
 8012014:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012018:	dce6      	bgt.n	8011fe8 <__ieee754_asin+0x38>
 801201a:	eeb6 8b00 	vmov.f64	d8, #96	; 0x3f000000  0.5
 801201e:	f000 f94b 	bl	80122b8 <fabs>
 8012022:	ed9f 7b4f 	vldr	d7, [pc, #316]	; 8012160 <__ieee754_asin+0x1b0>
 8012026:	ee39 0b40 	vsub.f64	d0, d9, d0
 801202a:	ee20 8b08 	vmul.f64	d8, d0, d8
 801202e:	ed9f 6b4e 	vldr	d6, [pc, #312]	; 8012168 <__ieee754_asin+0x1b8>
 8012032:	eeb0 0b48 	vmov.f64	d0, d8
 8012036:	eea8 6b07 	vfma.f64	d6, d8, d7
 801203a:	ed9f 7b4d 	vldr	d7, [pc, #308]	; 8012170 <__ieee754_asin+0x1c0>
 801203e:	eea6 7b08 	vfma.f64	d7, d6, d8
 8012042:	ed9f 6b4d 	vldr	d6, [pc, #308]	; 8012178 <__ieee754_asin+0x1c8>
 8012046:	ed9f ab4e 	vldr	d10, [pc, #312]	; 8012180 <__ieee754_asin+0x1d0>
 801204a:	eea7 6b08 	vfma.f64	d6, d7, d8
 801204e:	ed9f 7b4e 	vldr	d7, [pc, #312]	; 8012188 <__ieee754_asin+0x1d8>
 8012052:	eea6 7b08 	vfma.f64	d7, d6, d8
 8012056:	ed9f 6b4e 	vldr	d6, [pc, #312]	; 8012190 <__ieee754_asin+0x1e0>
 801205a:	eea7 ab08 	vfma.f64	d10, d7, d8
 801205e:	ee2a ab08 	vmul.f64	d10, d10, d8
 8012062:	ed9f 7b4d 	vldr	d7, [pc, #308]	; 8012198 <__ieee754_asin+0x1e8>
 8012066:	eea8 7b06 	vfma.f64	d7, d8, d6
 801206a:	ed9f 6b4d 	vldr	d6, [pc, #308]	; 80121a0 <__ieee754_asin+0x1f0>
 801206e:	eea7 6b08 	vfma.f64	d6, d7, d8
 8012072:	ed9f 7b4d 	vldr	d7, [pc, #308]	; 80121a8 <__ieee754_asin+0x1f8>
 8012076:	eea6 7b08 	vfma.f64	d7, d6, d8
 801207a:	eea7 9b08 	vfma.f64	d9, d7, d8
 801207e:	f000 f8a5 	bl	80121cc <__ieee754_sqrt>
 8012082:	ee8a 5b09 	vdiv.f64	d5, d10, d9
 8012086:	eeb0 4b00 	vmov.f64	d4, #0	; 0x40000000  2.0
 801208a:	4b4f      	ldr	r3, [pc, #316]	; (80121c8 <__ieee754_asin+0x218>)
 801208c:	429c      	cmp	r4, r3
 801208e:	dd3d      	ble.n	801210c <__ieee754_asin+0x15c>
 8012090:	eea0 0b05 	vfma.f64	d0, d0, d5
 8012094:	ed9f 7b46 	vldr	d7, [pc, #280]	; 80121b0 <__ieee754_asin+0x200>
 8012098:	eea0 7b04 	vfma.f64	d7, d0, d4
 801209c:	ed9f 0b2c 	vldr	d0, [pc, #176]	; 8012150 <__ieee754_asin+0x1a0>
 80120a0:	ee30 0b47 	vsub.f64	d0, d0, d7
 80120a4:	2d00      	cmp	r5, #0
 80120a6:	bfd8      	it	le
 80120a8:	eeb1 0b40 	vnegle.f64	d0, d0
 80120ac:	e79c      	b.n	8011fe8 <__ieee754_asin+0x38>
 80120ae:	ed9f 5b2c 	vldr	d5, [pc, #176]	; 8012160 <__ieee754_asin+0x1b0>
 80120b2:	ee20 7b00 	vmul.f64	d7, d0, d0
 80120b6:	ed9f 6b2c 	vldr	d6, [pc, #176]	; 8012168 <__ieee754_asin+0x1b8>
 80120ba:	eea7 6b05 	vfma.f64	d6, d7, d5
 80120be:	ed9f 5b2c 	vldr	d5, [pc, #176]	; 8012170 <__ieee754_asin+0x1c0>
 80120c2:	eea6 5b07 	vfma.f64	d5, d6, d7
 80120c6:	ed9f 6b2c 	vldr	d6, [pc, #176]	; 8012178 <__ieee754_asin+0x1c8>
 80120ca:	eea5 6b07 	vfma.f64	d6, d5, d7
 80120ce:	ed9f 5b2e 	vldr	d5, [pc, #184]	; 8012188 <__ieee754_asin+0x1d8>
 80120d2:	eea6 5b07 	vfma.f64	d5, d6, d7
 80120d6:	ed9f 6b2a 	vldr	d6, [pc, #168]	; 8012180 <__ieee754_asin+0x1d0>
 80120da:	ed9f 4b2d 	vldr	d4, [pc, #180]	; 8012190 <__ieee754_asin+0x1e0>
 80120de:	eea5 6b07 	vfma.f64	d6, d5, d7
 80120e2:	ee26 6b07 	vmul.f64	d6, d6, d7
 80120e6:	ed9f 5b2c 	vldr	d5, [pc, #176]	; 8012198 <__ieee754_asin+0x1e8>
 80120ea:	eea7 5b04 	vfma.f64	d5, d7, d4
 80120ee:	ed9f 4b2c 	vldr	d4, [pc, #176]	; 80121a0 <__ieee754_asin+0x1f0>
 80120f2:	eea5 4b07 	vfma.f64	d4, d5, d7
 80120f6:	ed9f 5b2c 	vldr	d5, [pc, #176]	; 80121a8 <__ieee754_asin+0x1f8>
 80120fa:	eea4 5b07 	vfma.f64	d5, d4, d7
 80120fe:	eea5 9b07 	vfma.f64	d9, d5, d7
 8012102:	ee86 7b09 	vdiv.f64	d7, d6, d9
 8012106:	eea0 0b07 	vfma.f64	d0, d0, d7
 801210a:	e76d      	b.n	8011fe8 <__ieee754_asin+0x38>
 801210c:	ec53 2b10 	vmov	r2, r3, d0
 8012110:	2200      	movs	r2, #0
 8012112:	ec43 2b16 	vmov	d6, r2, r3
 8012116:	ee30 7b06 	vadd.f64	d7, d0, d6
 801211a:	eea6 8b46 	vfms.f64	d8, d6, d6
 801211e:	ee88 3b07 	vdiv.f64	d3, d8, d7
 8012122:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8012148 <__ieee754_asin+0x198>
 8012126:	ee30 0b00 	vadd.f64	d0, d0, d0
 801212a:	eea3 7b44 	vfms.f64	d7, d3, d4
 801212e:	ee90 7b05 	vfnms.f64	d7, d0, d5
 8012132:	ed9f 5b21 	vldr	d5, [pc, #132]	; 80121b8 <__ieee754_asin+0x208>
 8012136:	eeb0 0b45 	vmov.f64	d0, d5
 801213a:	eea6 0b44 	vfms.f64	d0, d6, d4
 801213e:	ee37 0b40 	vsub.f64	d0, d7, d0
 8012142:	ee35 0b40 	vsub.f64	d0, d5, d0
 8012146:	e7ad      	b.n	80120a4 <__ieee754_asin+0xf4>
 8012148:	33145c07 	.word	0x33145c07
 801214c:	3c91a626 	.word	0x3c91a626
 8012150:	54442d18 	.word	0x54442d18
 8012154:	3ff921fb 	.word	0x3ff921fb
 8012158:	8800759c 	.word	0x8800759c
 801215c:	7e37e43c 	.word	0x7e37e43c
 8012160:	0dfdf709 	.word	0x0dfdf709
 8012164:	3f023de1 	.word	0x3f023de1
 8012168:	7501b288 	.word	0x7501b288
 801216c:	3f49efe0 	.word	0x3f49efe0
 8012170:	b5688f3b 	.word	0xb5688f3b
 8012174:	bfa48228 	.word	0xbfa48228
 8012178:	0e884455 	.word	0x0e884455
 801217c:	3fc9c155 	.word	0x3fc9c155
 8012180:	55555555 	.word	0x55555555
 8012184:	3fc55555 	.word	0x3fc55555
 8012188:	03eb6f7d 	.word	0x03eb6f7d
 801218c:	bfd4d612 	.word	0xbfd4d612
 8012190:	b12e9282 	.word	0xb12e9282
 8012194:	3fb3b8c5 	.word	0x3fb3b8c5
 8012198:	1b8d0159 	.word	0x1b8d0159
 801219c:	bfe6066c 	.word	0xbfe6066c
 80121a0:	9c598ac8 	.word	0x9c598ac8
 80121a4:	40002ae5 	.word	0x40002ae5
 80121a8:	1c8a2d4b 	.word	0x1c8a2d4b
 80121ac:	c0033a27 	.word	0xc0033a27
 80121b0:	33145c07 	.word	0x33145c07
 80121b4:	bc91a626 	.word	0xbc91a626
 80121b8:	54442d18 	.word	0x54442d18
 80121bc:	3fe921fb 	.word	0x3fe921fb
 80121c0:	3fefffff 	.word	0x3fefffff
 80121c4:	3fdfffff 	.word	0x3fdfffff
 80121c8:	3fef3332 	.word	0x3fef3332

080121cc <__ieee754_sqrt>:
 80121cc:	eeb1 0bc0 	vsqrt.f64	d0, d0
 80121d0:	4770      	bx	lr

080121d2 <with_errno>:
 80121d2:	b513      	push	{r0, r1, r4, lr}
 80121d4:	4604      	mov	r4, r0
 80121d6:	ed8d 0b00 	vstr	d0, [sp]
 80121da:	f7fc fd7d 	bl	800ecd8 <__errno>
 80121de:	ed9d 0b00 	vldr	d0, [sp]
 80121e2:	6004      	str	r4, [r0, #0]
 80121e4:	b002      	add	sp, #8
 80121e6:	bd10      	pop	{r4, pc}

080121e8 <xflow>:
 80121e8:	b082      	sub	sp, #8
 80121ea:	b158      	cbz	r0, 8012204 <xflow+0x1c>
 80121ec:	eeb1 7b40 	vneg.f64	d7, d0
 80121f0:	ed8d 7b00 	vstr	d7, [sp]
 80121f4:	ed9d 7b00 	vldr	d7, [sp]
 80121f8:	2022      	movs	r0, #34	; 0x22
 80121fa:	ee20 0b07 	vmul.f64	d0, d0, d7
 80121fe:	b002      	add	sp, #8
 8012200:	f7ff bfe7 	b.w	80121d2 <with_errno>
 8012204:	eeb0 7b40 	vmov.f64	d7, d0
 8012208:	e7f2      	b.n	80121f0 <xflow+0x8>
 801220a:	0000      	movs	r0, r0
 801220c:	0000      	movs	r0, r0
	...

08012210 <__math_uflow>:
 8012210:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8012218 <__math_uflow+0x8>
 8012214:	f7ff bfe8 	b.w	80121e8 <xflow>
 8012218:	00000000 	.word	0x00000000
 801221c:	10000000 	.word	0x10000000

08012220 <__math_oflow>:
 8012220:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8012228 <__math_oflow+0x8>
 8012224:	f7ff bfe0 	b.w	80121e8 <xflow>
 8012228:	00000000 	.word	0x00000000
 801222c:	70000000 	.word	0x70000000

08012230 <__math_divzero>:
 8012230:	b082      	sub	sp, #8
 8012232:	2800      	cmp	r0, #0
 8012234:	eeb7 6b00 	vmov.f64	d6, #112	; 0x3f800000  1.0
 8012238:	eebf 7b00 	vmov.f64	d7, #240	; 0xbf800000 -1.0
 801223c:	fe06 7b07 	vseleq.f64	d7, d6, d7
 8012240:	ed8d 7b00 	vstr	d7, [sp]
 8012244:	ed9d 0b00 	vldr	d0, [sp]
 8012248:	ed9f 7b03 	vldr	d7, [pc, #12]	; 8012258 <__math_divzero+0x28>
 801224c:	2022      	movs	r0, #34	; 0x22
 801224e:	ee80 0b07 	vdiv.f64	d0, d0, d7
 8012252:	b002      	add	sp, #8
 8012254:	f7ff bfbd 	b.w	80121d2 <with_errno>
	...

08012260 <__math_invalid>:
 8012260:	eeb0 7b40 	vmov.f64	d7, d0
 8012264:	eeb4 7b47 	vcmp.f64	d7, d7
 8012268:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801226c:	ee30 6b40 	vsub.f64	d6, d0, d0
 8012270:	ee86 0b06 	vdiv.f64	d0, d6, d6
 8012274:	d602      	bvs.n	801227c <__math_invalid+0x1c>
 8012276:	2021      	movs	r0, #33	; 0x21
 8012278:	f7ff bfab 	b.w	80121d2 <with_errno>
 801227c:	4770      	bx	lr

0801227e <__math_check_uflow>:
 801227e:	eeb5 0b40 	vcmp.f64	d0, #0.0
 8012282:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012286:	d102      	bne.n	801228e <__math_check_uflow+0x10>
 8012288:	2022      	movs	r0, #34	; 0x22
 801228a:	f7ff bfa2 	b.w	80121d2 <with_errno>
 801228e:	4770      	bx	lr

08012290 <__math_check_oflow>:
 8012290:	ed9f 6b07 	vldr	d6, [pc, #28]	; 80122b0 <__math_check_oflow+0x20>
 8012294:	eeb0 7bc0 	vabs.f64	d7, d0
 8012298:	eeb4 7b46 	vcmp.f64	d7, d6
 801229c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80122a0:	dd02      	ble.n	80122a8 <__math_check_oflow+0x18>
 80122a2:	2022      	movs	r0, #34	; 0x22
 80122a4:	f7ff bf95 	b.w	80121d2 <with_errno>
 80122a8:	4770      	bx	lr
 80122aa:	bf00      	nop
 80122ac:	f3af 8000 	nop.w
 80122b0:	ffffffff 	.word	0xffffffff
 80122b4:	7fefffff 	.word	0x7fefffff

080122b8 <fabs>:
 80122b8:	ec51 0b10 	vmov	r0, r1, d0
 80122bc:	ee10 2a10 	vmov	r2, s0
 80122c0:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80122c4:	ec43 2b10 	vmov	d0, r2, r3
 80122c8:	4770      	bx	lr
	...

080122cc <_init>:
 80122cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80122ce:	bf00      	nop
 80122d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80122d2:	bc08      	pop	{r3}
 80122d4:	469e      	mov	lr, r3
 80122d6:	4770      	bx	lr

080122d8 <_fini>:
 80122d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80122da:	bf00      	nop
 80122dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80122de:	bc08      	pop	{r3}
 80122e0:	469e      	mov	lr, r3
 80122e2:	4770      	bx	lr
